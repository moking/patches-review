From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id C7C5DC74A5B
	for <linux-cxl@archiver.kernel.org>; Thu, 23 Mar 2023 21:39:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231278AbjCWVja (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 23 Mar 2023 17:39:30 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:54062 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231571AbjCWVjV (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 23 Mar 2023 17:39:21 -0400
Received: from NAM11-DM6-obe.outbound.protection.outlook.com (mail-dm6nam11on2087.outbound.protection.outlook.com [40.107.223.87])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 0E5BFDBDB;
        Thu, 23 Mar 2023 14:39:14 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=K8JMqTopIN7bpxCcTpofB4QGqyHZ5jMtP2UfnqPfRz9eIQ9t3amdjI/LLQ9EZRrHs1eMzD30/JRaoXWkvWlIT4CDVjWwn/8sAeMEIedCsRrhG4Q9pPdPE60OolN1PNZ0F0btVn1/aAz0f/HHpSZYAT06A5VcWZijcPOAdPjkpy0jgTFC5qsps2gJL/XpQEdUtrf5UWRrwyp3rXfj3zQKskpyx+9vSKBGh0GpXhpgsWgqO/QNJD7+8vCjeziTknXd1YIEfopxSKc6cj2hifTrWtV0NcLbcfi0s+w6lud/FKW3lRmKHfLBiUR+SMuOTR13Z2DOztfUIw8HXhGWkbq9NQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=B5481EnOiCBVcELKPUfx5r0/5APSo3wdR1+fK/wWsUk=;
 b=ai0I8g+iQiiEFtLccoGCwSdwbVzBFe9DaKTPgM5Jg+oGnsxC9My5f3fftKThnvQPfBox5JyEbdxnY7Qz2cN7VKx9F32MGSF5ZtwCy6W3K18IbefU1Vse5ec5YM76GUWS8XojHQF7AWeLKmkEWHbY6713+namnEJzUhadqgyCLaUC74M7rLxZsthWRBPU0yCP3efQorjZXm0I9WzC9mOdCOKVGhqB5ywjDfSYNkCoAD2WRaVAVt1Pi5hwtYvAsDz18REZYnZa+HmIl9WvwdU0jwOHoeInkg2NqWLX2NBxiA1/T6wlOkb8Nc7kU+J4ovWtkJ5hpDPRi5dRRG63/9qTcg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=B5481EnOiCBVcELKPUfx5r0/5APSo3wdR1+fK/wWsUk=;
 b=wFmvKq9sFko+Ris7iS15KVQ+SkgvPVBqLaAN+hF3r/lmk2bM/GfgeHW6bvfjjq5yOgR7y26Pz/wm7Sk9XoxtiSet0VI4JakJS2pn4IqRE+U1ByQX2999HJpePqSmPKSeW9zeJ91uhROMrgLJHJ2uWz2bqVE0926KoDl6mv9qoSY=
Received: from DS7PR03CA0168.namprd03.prod.outlook.com (2603:10b6:5:3b2::23)
 by PH8PR12MB7445.namprd12.prod.outlook.com (2603:10b6:510:217::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38; Thu, 23 Mar
 2023 21:39:11 +0000
Received: from DM6NAM11FT092.eop-nam11.prod.protection.outlook.com
 (2603:10b6:5:3b2:cafe::40) by DS7PR03CA0168.outlook.office365.com
 (2603:10b6:5:3b2::23) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38 via Frontend
 Transport; Thu, 23 Mar 2023 21:39:10 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 DM6NAM11FT092.mail.protection.outlook.com (10.13.173.44) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.6222.22 via Frontend Transport; Thu, 23 Mar 2023 21:39:10 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2375.34; Thu, 23 Mar
 2023 16:39:09 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <terry.bowman@amd.com>, <alison.schofield@intel.com>,
        <vishal.l.verma@intel.com>, <ira.weiny@intel.com>,
        <bwidawsk@kernel.org>, <dan.j.williams@intel.com>,
        <dave.jiang@intel.com>, <Jonathan.Cameron@huawei.com>,
        <linux-cxl@vger.kernel.org>, <rrichter@amd.com>
CC: <linux-kernel@vger.kernel.org>, <bhelgaas@google.com>
Subject: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
Date: Thu, 23 Mar 2023 16:38:08 -0500
Message-ID: <20230323213808.398039-6-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20230323213808.398039-1-terry.bowman@amd.com>
References: <20230323213808.398039-1-terry.bowman@amd.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-Originating-IP: [10.180.168.240]
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DM6NAM11FT092:EE_|PH8PR12MB7445:EE_
X-MS-Office365-Filtering-Correlation-Id: 74c5df4c-62d0-48a3-d3b6-08db2be709e1
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: rO6ZwjnSsm0Y2k5Ha0VBYSogOO8ycfydf5hoLjG35ddYDh5Boji1ZTpluzxNUeacAGYSbhz4esrW+vrxKnjqzrDF5daUtT4SgoQnI2aqPUN2rpz9nho533rSTvMsGQvhYl1+XIyh9BnZxYPoAzibPbq16DXu/3fOgh324YthmGd8JONip7rV91LraLLlFV+WiVOBuWq4yYUb01+DeQ055Bz+B8q1skaFCvBduxCmje7pKQASxE+S0giCDWp46WvMI9Ji14IWUKKhzodaii0EzURL9cjYSaGuSHqBaeXtiGIa3pzBadKAHC1APUYMpr2huYLv3j5imRcwrf8bDKXGDiEodktfzwhR5lWAtuHMWxjqX8eq+wDZ5q9jFH3XekZo6SHpM3Dsg32QY+d0s4XIJW4496k/pTZ8gryKPJxKPrQiq0baCvb5S3M22+xgTjMUjU5ocr3xIlDYQSSMIvIx5XZzIAvzegtVq4aprfCNN30oSBpgmHl9nuhhZGjX5a56/xTyLaBgfx7EA4GPcklP2jfSv/iJ5H8hHM28s6Vqd1IrfvT/JGhwAHkcbmk69uWJEXVZ7APqcygEID+LOE7SoAZsCzvL8fifgPvBiWuHkduvpdmRRmMTLqQp1OxizvtN7V3GrXg74wfwqa2h/PMtfJ2Bi1vbsqTfmIRn1OhE82x2k1BSXdqkt4ZTNQ0I21IEf5NzZVIhdruHs8VS4mycd7F9KtNrjFkehMM/82LM3cSGckyxomGes9DYwumNj1cz
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230025)(4636009)(136003)(346002)(376002)(396003)(39860400002)(451199018)(36840700001)(40470700004)(46966006)(36756003)(40460700003)(8676002)(70206006)(54906003)(4326008)(110136005)(36860700001)(70586007)(6636002)(44832011)(41300700001)(81166007)(7416002)(5660300002)(82740400003)(426003)(8936002)(47076005)(316002)(30864003)(26005)(1076003)(16526019)(186003)(478600001)(83380400001)(2616005)(336012)(7696005)(86362001)(82310400005)(40480700001)(356005)(2906002)(921005)(36900700001);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Mar 2023 21:39:10.5510
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 74c5df4c-62d0-48a3-d3b6-08db2be709e1
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: DM6NAM11FT092.eop-nam11.prod.protection.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH8PR12MB7445
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

RCH downstream port error logging is missing in the current CXL driver. The
missing AER and RAS error logging is needed for communicating driver error
details to userspace. Update the driver to include PCIe AER and CXL RAS
error logging.

Add RCH downstream port error handling into the existing RCiEP handler.
The downstream port error handler is added to the RCiEP error handler
because the downstream port is implemented in a RCRB, is not PCI
enumerable, and as a result is not directly accessible to the PCI AER
root port driver. The AER root port driver calls the RCiEP handler for
handling RCD errors and RCH downstream port protocol errors.

Update the cxl_mem driver to map the RCH RAS and AER register discovered
earlier. The RAS and AER registers will be used in the RCH error handlers.

Disable RCH downstream port's root port cmd interrupts. Enable RCEC AER
CIE/UIE reporting because they are disabled by default.[1]

Update existing RCiEP correctable and uncorrectable handlers to also call
the RCH handler. The RCH handler will read the downstream port AER
registers, check for error severity, and if an error exists will log
using an existing kernel AER trace routine. The RCH handler will also
reuse the existing RAS logging routine to log downstream port RAS
errors if they exist.

[1] CXL 3.0 Spec, 12.2.1.1 - RCH Downstream Port Detected Errors

Co-developed-by: Robert Richter <rrichter@amd.com>
Signed-off-by: Robert Richter <rrichter@amd.com>
Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/pci.c  | 126 +++++++++++++++++++++++++++++++++----
 drivers/cxl/core/regs.c |   1 +
 drivers/cxl/cxl.h       |  13 ++++
 drivers/cxl/mem.c       | 134 ++++++++++++++++++++++++++++++++++++++++
 4 files changed, 262 insertions(+), 12 deletions(-)

diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index 7328a2552411..6e36471969ba 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -5,6 +5,7 @@
 #include <linux/delay.h>
 #include <linux/pci.h>
 #include <linux/pci-doe.h>
+#include <linux/aer.h>
 #include <cxlpci.h>
 #include <cxlmem.h>
 #include <cxl.h>
@@ -605,32 +606,88 @@ void read_cdat_data(struct cxl_port *port)
 }
 EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
 
-void cxl_cor_error_detected(struct pci_dev *pdev)
+/* Get AER severity. Return false if there is no error. */
+static bool cxl_rch_get_aer_severity(struct aer_capability_regs *aer_regs,
+				     int *severity)
+{
+	if (aer_regs->uncor_status & ~aer_regs->uncor_mask) {
+		if (aer_regs->uncor_status & PCI_ERR_ROOT_FATAL_RCV)
+			*severity = AER_FATAL;
+		else
+			*severity = AER_NONFATAL;
+		return true;
+	}
+
+	if (aer_regs->cor_status & ~aer_regs->cor_mask) {
+		*severity = AER_CORRECTABLE;
+		return true;
+	}
+
+	return false;
+}
+
+/*
+ * Copy the AER capability registers to a buffer. This is necessary
+ * because RCRB AER capability is MMIO mapped. Clear the status
+ * after copying.
+ *
+ * @aer_base: base address of AER capability block in RCRB
+ * @aer_regs: destination for copying AER capability
+ */
+static bool cxl_rch_get_aer_info(void __iomem *aer_base,
+				 struct aer_capability_regs *aer_regs)
+{
+	int read_cnt = PCI_AER_CAPABILITY_LENGTH / sizeof(u32);
+	u32 *aer_regs_buf = (u32 *)aer_regs;
+	int n;
+
+	if (!aer_base)
+		return false;
+
+	for (n = 0; n < read_cnt; n++)
+		aer_regs_buf[n] = readl(aer_base + n * sizeof(u32));
+
+	writel(aer_regs->uncor_status, aer_base + PCI_ERR_UNCOR_STATUS);
+	writel(aer_regs->cor_status, aer_base + PCI_ERR_COR_STATUS);
+
+	return true;
+}
+
+static void __cxl_log_correctable_ras(struct cxl_dev_state *cxlds,
+				      void __iomem *ras_base)
 {
-	struct cxl_dev_state *cxlds = pci_get_drvdata(pdev);
 	void __iomem *addr;
 	u32 status;
 
-	if (!cxlds->regs.ras)
+	if (!ras_base)
 		return;
 
-	addr = cxlds->regs.ras + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
+	addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
 	status = readl(addr);
 	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
 		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
 		trace_cxl_aer_correctable_error(cxlds->cxlmd, status);
 	}
 }
-EXPORT_SYMBOL_NS_GPL(cxl_cor_error_detected, CXL);
+
+static void cxl_log_correctable_ras_endpoint(struct cxl_dev_state *cxlds)
+{
+	return __cxl_log_correctable_ras(cxlds, cxlds->regs.ras);
+}
+
+static void cxl_log_correctable_ras_dport(struct cxl_dev_state *cxlds)
+{
+	return __cxl_log_correctable_ras(cxlds, cxlds->regs.dport_ras);
+}
 
 /* CXL spec rev3.0 8.2.4.16.1 */
-static void header_log_copy(struct cxl_dev_state *cxlds, u32 *log)
+static void header_log_copy(void __iomem *ras_base, u32 *log)
 {
 	void __iomem *addr;
 	u32 *log_addr;
 	int i, log_u32_size = CXL_HEADERLOG_SIZE / sizeof(u32);
 
-	addr = cxlds->regs.ras + CXL_RAS_HEADER_LOG_OFFSET;
+	addr = ras_base + CXL_RAS_HEADER_LOG_OFFSET;
 	log_addr = log;
 
 	for (i = 0; i < log_u32_size; i++) {
@@ -644,17 +701,18 @@ static void header_log_copy(struct cxl_dev_state *cxlds, u32 *log)
  * Log the state of the RAS status registers and prepare them to log the
  * next error status. Return 1 if reset needed.
  */
-static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
+static bool __cxl_report_and_clear(struct cxl_dev_state *cxlds,
+				  void __iomem *ras_base)
 {
 	u32 hl[CXL_HEADERLOG_SIZE_U32];
 	void __iomem *addr;
 	u32 status;
 	u32 fe;
 
-	if (!cxlds->regs.ras)
+	if (!ras_base)
 		return false;
 
-	addr = cxlds->regs.ras + CXL_RAS_UNCORRECTABLE_STATUS_OFFSET;
+	addr = ras_base + CXL_RAS_UNCORRECTABLE_STATUS_OFFSET;
 	status = readl(addr);
 	if (!(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK))
 		return false;
@@ -662,7 +720,7 @@ static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
 	/* If multiple errors, log header points to first error from ctrl reg */
 	if (hweight32(status) > 1) {
 		void __iomem *rcc_addr =
-			cxlds->regs.ras + CXL_RAS_CAP_CONTROL_OFFSET;
+			ras_base + CXL_RAS_CAP_CONTROL_OFFSET;
 
 		fe = BIT(FIELD_GET(CXL_RAS_CAP_CONTROL_FE_MASK,
 				   readl(rcc_addr)));
@@ -670,13 +728,54 @@ static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
 		fe = status;
 	}
 
-	header_log_copy(cxlds, hl);
+	header_log_copy(ras_base, hl);
 	trace_cxl_aer_uncorrectable_error(cxlds->cxlmd, status, fe, hl);
 	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
 
 	return true;
 }
 
+static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
+{
+	return __cxl_report_and_clear(cxlds, cxlds->regs.ras);
+}
+
+static bool cxl_report_and_clear_dport(struct cxl_dev_state *cxlds)
+{
+	return __cxl_report_and_clear(cxlds, cxlds->regs.dport_ras);
+}
+
+static void cxl_rch_log_error(struct cxl_dev_state *cxlds)
+{
+	struct pci_dev *pdev = to_pci_dev(cxlds->dev);
+	struct aer_capability_regs aer_regs;
+	int severity;
+
+	if (!cxl_rch_get_aer_info(cxlds->regs.aer, &aer_regs))
+		return;
+
+	if (!cxl_rch_get_aer_severity(&aer_regs, &severity))
+		return;
+
+	cper_print_aer(pdev, severity, &aer_regs);
+
+	if (severity == AER_CORRECTABLE)
+		cxl_log_correctable_ras_dport(cxlds);
+	else
+		cxl_report_and_clear_dport(cxlds);
+}
+
+void cxl_cor_error_detected(struct pci_dev *pdev)
+{
+	struct cxl_dev_state *cxlds = pci_get_drvdata(pdev);
+
+	if (cxlds->rcd)
+		cxl_rch_log_error(cxlds);
+
+	cxl_log_correctable_ras_endpoint(cxlds);
+}
+EXPORT_SYMBOL_NS_GPL(cxl_cor_error_detected, CXL);
+
 pci_ers_result_t cxl_error_detected(struct pci_dev *pdev,
 				    pci_channel_state_t state)
 {
@@ -685,6 +784,9 @@ pci_ers_result_t cxl_error_detected(struct pci_dev *pdev,
 	struct device *dev = &cxlmd->dev;
 	bool ue;
 
+	if (cxlds->rcd)
+		cxl_rch_log_error(cxlds);
+
 	/*
 	 * A frozen channel indicates an impending reset which is fatal to
 	 * CXL.mem operation, and will likely crash the system. On the off
diff --git a/drivers/cxl/core/regs.c b/drivers/cxl/core/regs.c
index 108a349d8101..7130f35891da 100644
--- a/drivers/cxl/core/regs.c
+++ b/drivers/cxl/core/regs.c
@@ -198,6 +198,7 @@ void __iomem *devm_cxl_iomap_block(struct device *dev, resource_size_t addr,
 
 	return ret_val;
 }
+EXPORT_SYMBOL_NS_GPL(devm_cxl_iomap_block, CXL);
 
 int cxl_map_component_regs(struct device *dev, struct cxl_component_regs *regs,
 			   struct cxl_register_map *map, unsigned long map_mask)
diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
index 9fd7df48ce99..7036e34354bc 100644
--- a/drivers/cxl/cxl.h
+++ b/drivers/cxl/cxl.h
@@ -66,6 +66,8 @@
 #define CXL_DECODER_MIN_GRANULARITY 256
 #define CXL_DECODER_MAX_ENCODED_IG 6
 
+#define PCI_AER_CAPABILITY_LENGTH 56
+
 static inline int cxl_hdm_decoder_count(u32 cap_hdr)
 {
 	int val = FIELD_GET(CXL_HDM_DECODER_COUNT_MASK, cap_hdr);
@@ -209,6 +211,15 @@ struct cxl_regs {
 	struct_group_tagged(cxl_device_regs, device_regs,
 		void __iomem *status, *mbox, *memdev;
 	);
+
+	/*
+	 * Pointer to RCH cxl_dport AER. (only for RCH/RCD mode)
+	 * @dport_aer: CXL 2.0 12.2.11 RCH Downstream Port-detected Errors
+	 */
+	struct_group_tagged(cxl_rch_regs, rch_regs,
+		void __iomem *aer;
+		void __iomem *dport_ras;
+	);
 };
 
 struct cxl_reg_map {
@@ -249,6 +260,8 @@ struct cxl_register_map {
 	};
 };
 
+void __iomem *devm_cxl_iomap_block(struct device *dev, resource_size_t addr,
+				   resource_size_t length);
 void cxl_probe_component_regs(struct device *dev, void __iomem *base,
 			      struct cxl_component_reg_map *map);
 void cxl_probe_device_regs(struct device *dev, void __iomem *base,
diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
index 12e8e8ebaac0..e217c44ed749 100644
--- a/drivers/cxl/mem.c
+++ b/drivers/cxl/mem.c
@@ -4,6 +4,7 @@
 #include <linux/device.h>
 #include <linux/module.h>
 #include <linux/pci.h>
+#include <linux/aer.h>
 
 #include "cxlmem.h"
 #include "cxlpci.h"
@@ -45,6 +46,132 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
 	return 0;
 }
 
+static int rcec_enable_aer_ints(struct pci_dev *pdev)
+{
+	struct pci_dev *rcec = pdev->rcec;
+	int aer, rc;
+	u32 mask;
+
+	if (!rcec)
+		return -ENODEV;
+
+	/*
+	 * Internal errors are masked by default, unmask RCEC's here
+	 * PCI6.0 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h)
+	 * PCI6.0 7.8.4.6 Correctable Error Mask Register (Offset 14h)
+	 */
+	aer = rcec->aer_cap;
+	rc = pci_read_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, &mask);
+	if (rc)
+		return rc;
+	mask &= ~PCI_ERR_UNC_INTN;
+	rc = pci_write_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, mask);
+	if (rc)
+		return rc;
+
+	rc = pci_read_config_dword(rcec, aer + PCI_ERR_COR_MASK, &mask);
+	if (rc)
+		return rc;
+	mask &= ~PCI_ERR_COR_INTERNAL;
+	rc = pci_write_config_dword(rcec, aer + PCI_ERR_COR_MASK, mask);
+
+	return rc;
+}
+
+static void disable_aer(void *_pdev)
+{
+	struct pci_dev *pdev = (struct pci_dev *)_pdev;
+
+	pci_disable_pcie_error_reporting(pdev);
+
+	/*
+	 * Keep the RCEC's internal AER enabled. There
+	 * could be other RCiEPs using this RCEC.
+	 */
+}
+
+static void rch_disable_root_ints(void __iomem *aer_base)
+{
+	u32 aer_cmd_mask, aer_cmd;
+
+	/*
+	 * Disable RCH root port command interrupts.
+	 * CXL3.0 12.2.1.1 - RCH Downstream Port-detected Errors
+	 */
+	aer_cmd_mask = (PCI_ERR_ROOT_CMD_COR_EN |
+			PCI_ERR_ROOT_CMD_NONFATAL_EN |
+			PCI_ERR_ROOT_CMD_FATAL_EN);
+	aer_cmd = readl(aer_base + PCI_ERR_ROOT_COMMAND);
+	aer_cmd &= ~aer_cmd_mask;
+	writel(aer_cmd, aer_base + PCI_ERR_ROOT_COMMAND);
+}
+
+static int cxl_ras_setup_interrupts(struct cxl_dev_state *cxlds)
+{
+	struct pci_dev *pdev = to_pci_dev(cxlds->dev);
+	int rc;
+
+	if (cxlds->rcd) {
+		rch_disable_root_ints(cxlds->regs.aer);
+
+		rc = rcec_enable_aer_ints(pdev);
+		if (rc)
+			return rc;
+	}
+
+	rc = pci_enable_pcie_error_reporting(pdev);
+	if (rc)
+		return rc;
+
+	return devm_add_action_or_reset(&pdev->dev, disable_aer, pdev);
+}
+
+static int cxl_rch_map_ras(struct cxl_dev_state *cxlds,
+			   struct cxl_dport *parent_dport)
+{
+	struct device *dev = parent_dport->dport;
+	resource_size_t aer_phys, ras_phys;
+	void __iomem *aer, *dport_ras;
+
+	if (!parent_dport->rch)
+		return 0;
+
+	if (!parent_dport->aer_cap || !parent_dport->ras_cap ||
+	    parent_dport->component_reg_phys == CXL_RESOURCE_NONE)
+		return -ENODEV;
+
+	aer_phys = parent_dport->aer_cap + parent_dport->rcrb;
+	aer = devm_cxl_iomap_block(dev, aer_phys,
+				   PCI_AER_CAPABILITY_LENGTH);
+
+	if (!aer)
+		return -ENOMEM;
+
+	ras_phys = parent_dport->ras_cap + parent_dport->component_reg_phys;
+	dport_ras = devm_cxl_iomap_block(dev, ras_phys,
+					 CXL_RAS_CAPABILITY_LENGTH);
+
+	if (!dport_ras)
+		return -ENOMEM;
+
+	cxlds->regs.aer = aer;
+	cxlds->regs.dport_ras = dport_ras;
+
+	return 0;
+}
+
+static int cxl_setup_ras(struct cxl_dev_state *cxlds,
+			 struct cxl_dport *parent_dport)
+{
+	int rc;
+
+	rc = cxl_rch_map_ras(cxlds, parent_dport);
+	if (rc)
+		return rc;
+
+	return cxl_ras_setup_interrupts(cxlds);
+}
+
 static void cxl_rcrb_setup(struct cxl_dev_state *cxlds,
 			   struct cxl_dport *parent_dport)
 {
@@ -93,6 +220,13 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
 
 	cxl_rcrb_setup(cxlds, parent_dport);
 
+	rc = cxl_setup_ras(cxlds, parent_dport);
+	/* Continue with RAS setup errors */
+	if (rc)
+		dev_warn(&cxlmd->dev, "CXL RAS setup failed: %d\n", rc);
+	else
+		dev_info(&cxlmd->dev, "CXL error handling enabled\n");
+
 	endpoint = devm_cxl_add_port(host, &cxlmd->dev, cxlds->component_reg_phys,
 				     parent_dport);
 	if (IS_ERR(endpoint))
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 5D245C6FD1C
	for <linux-cxl@archiver.kernel.org>; Thu, 23 Mar 2023 21:39:23 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231575AbjCWVjW (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 23 Mar 2023 17:39:22 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:54062 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231152AbjCWVjK (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 23 Mar 2023 17:39:10 -0400
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (mail-dm6nam12on2081.outbound.protection.outlook.com [40.107.243.81])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id EE5B02385D;
        Thu, 23 Mar 2023 14:39:01 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=k9HjKdZeq7yMM3dWK7yia/4QkRrwHGEMlx1mBG7gerriFEZ82IP7qM0raJi/2ylxlMurvWhL9QMrSLvqAZ2ujWET7nMX2xfiAE9ZEpk39qR/azjVRWg7Rx2QMQwAocSYpoZpZR4BzK3i28mF4K9szWxI/aO08LM/qpgmrt7S8VelQ1Kug8+eCjKVdtiLHReUL+jaXLDoKNM6WsPmLSz6ywLJEi4DNh3cDwmq3aE2c8nqc6eKBskTfXxurphHMgWPGzVeDgs0DquLm0IDw+58+Lvs/Qbmx4JSbZ9xn09wpQ19VW6h858ZBaMntQUgdaI4mJ6YebCmOCVgZYkbPOxvuw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=YoohbZ8vAjQdX46lwNBehPetu5rK3ytlD1ilL/UZOqI=;
 b=RazDf8yMxRpd48uN9Cn5ILaBfs+W4IePeySNKBzWoYpqXDQE+LzZTbfrZwxkpBxePoJYWmtM9GQRj8qefLmKlIXtl26k4GdfpGXQ26ax2o9L4zbk6U9LZkjRaunk0NLbcxBQCKn24/+jI1xoum7jUoMTnBUHvW6PGutC17PxVWWEHOXKiEvUXloELTvo+aRfakgAtdWQ3hvMGHM2vzsKCRm/vLsk85X1dw0uaUiQjrg+OkQWnyy56HZxX5uHWCdMDtkJPi6+IN/yEIC2CrInQivlUU0a2lTt32KyCTi/DSnEcGqYbPavkN0CctyCXzEgw+2oRewSFs+UjukOZBxzsg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=YoohbZ8vAjQdX46lwNBehPetu5rK3ytlD1ilL/UZOqI=;
 b=gayaJvHsY72yNhMIM53EjZBcqXmCXODG+/03QYftWjhbDv2NTAJSunzLXcWDZJd8/JNoJXtfiU2KWluqp++8T4GBmjpC5KAYOA3tunk6xTTisSeTrWiRPwa3WW/Tmek5QRvZ+6MBcF6yelF22j39GfkOoqn2BqBZa8W5VABsqeU=
Received: from DM6PR13CA0041.namprd13.prod.outlook.com (2603:10b6:5:134::18)
 by DM4PR12MB5086.namprd12.prod.outlook.com (2603:10b6:5:389::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38; Thu, 23 Mar
 2023 21:38:59 +0000
Received: from DM6NAM11FT011.eop-nam11.prod.protection.outlook.com
 (2603:10b6:5:134:cafe::4f) by DM6PR13CA0041.outlook.office365.com
 (2603:10b6:5:134::18) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6254.6 via Frontend
 Transport; Thu, 23 Mar 2023 21:38:59 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 DM6NAM11FT011.mail.protection.outlook.com (10.13.172.108) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.6222.21 via Frontend Transport; Thu, 23 Mar 2023 21:38:59 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2375.34; Thu, 23 Mar
 2023 16:38:58 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <terry.bowman@amd.com>, <alison.schofield@intel.com>,
        <vishal.l.verma@intel.com>, <ira.weiny@intel.com>,
        <bwidawsk@kernel.org>, <dan.j.williams@intel.com>,
        <dave.jiang@intel.com>, <Jonathan.Cameron@huawei.com>,
        <linux-cxl@vger.kernel.org>, <rrichter@amd.com>
CC: <linux-kernel@vger.kernel.org>, <bhelgaas@google.com>
Subject: [PATCH v2 4/5] cxl/pci: Forward RCH downstream port-detected errors to the CXL.mem dev handler
Date: Thu, 23 Mar 2023 16:38:07 -0500
Message-ID: <20230323213808.398039-5-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20230323213808.398039-1-terry.bowman@amd.com>
References: <20230323213808.398039-1-terry.bowman@amd.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-Originating-IP: [10.180.168.240]
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DM6NAM11FT011:EE_|DM4PR12MB5086:EE_
X-MS-Office365-Filtering-Correlation-Id: 94d182c9-945a-4824-3e61-08db2be70319
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: BokTngVCPnTiegjy2zobO1id1psicB9t0W6WN+nAjAIHKaQwE7V4Hh/I96vBEO/mv+3rDF8glUwe2HQ7C4znDkZFPDX/lf49YAuU5FIqb0TWY8aZkZ1OSCtFpJ+91W1gc65gvjRGupgPQu93njAPFNMPqQlOqtpUEJ2o3LfuoUpYEoGD4z0baIO55IqAMEkHnqzS6BG1wFc690Z+DPulKPE6GFj2iS6HFgB8BsM4+//4B/GNei2heaAiDAynPOJdClCkS+PPrDJA/vkA13WIry9jrUZHzAIaQFvb6T4xr4BhXLJJ8Yir3JWeEBs528d+spjN6HcVRRkkFBDXJgUew9NmvEP2LDEeGCONertS3276eRVF11poXRUrJaX9y54JyG+dfR7+YBbG4adV1ue3t1scKIPzz9Mf7CkXZpfPOCdF6zWkmDQps1KBrDOn4pVai0GyoWd+NPVJCQ924+6xLfNhii8Ym68HbKGfGCbNfCbdC+qS3vgmMqQ3FQXiJ6ufHaoRgnQb0niHkWEnfLm2jTA7E+p8C8FcC86fwO8a8YQyTty+93ROBqeqpvcMfhsY8hfoA5vMxR8XUI9o/CisvGVHmabNP5BmW+Cjou+naJxX485Hvu8gm2EqS7BLZALWS3OBlnbqYXbWu0WAwgOE76cTH48lQYDK/kwcuHiWiHEwJcOA1r27+ZrgjZH4fwJHXkT4EO7ukuwJavimmgPJeuH/Fmq+hWExyY2xswHzI9GycxJHpSOab6fY2r5EkRLR
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230025)(4636009)(396003)(136003)(346002)(39860400002)(376002)(451199018)(40470700004)(36840700001)(46966006)(40460700003)(36860700001)(8676002)(4326008)(70586007)(70206006)(54906003)(6636002)(41300700001)(5660300002)(7416002)(44832011)(82740400003)(26005)(47076005)(426003)(81166007)(1076003)(8936002)(6666004)(16526019)(316002)(186003)(478600001)(83380400001)(2616005)(336012)(7696005)(110136005)(36756003)(82310400005)(86362001)(40480700001)(2906002)(921005)(356005)(36900700001);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Mar 2023 21:38:59.1701
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 94d182c9-945a-4824-3e61-08db2be70319
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: DM6NAM11FT011.eop-nam11.prod.protection.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM4PR12MB5086
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

From: Robert Richter <rrichter@amd.com>

In RCD mode a CXL device (RCD) is exposed as an RCiEP, but CXL
downstream and upstream ports are not enumerated and not visible in
the PCIe hierarchy. Protocol and link errors are sent to an RCEC.

Now, RCH downstream port-detected errors are signaled as internal AER
errors (UIE/CIE) with the RCEC's source ID. A CXL handler must then
inspect the error status in various CXL registers residing in the
dport's component register space (CXL RAS cap) or the dport's RCRB
(AER ext cap). [1]

This patch connects errors showing up in the RCEC's error handler with
the CXL subsystem. Implement this by forwarding the error to all CXL
devices below the RCEC. Since the entire CXL device is controlled only
using PCIe Configuration Space of device 0, Function 0, only pass it
there [2]. These devices have the Memory Device class code set
(PCI_CLASS_MEMORY_CXL, 502h) and the existing cxl_pci driver can
implement the handler. The CXL device driver is then responsible to
enable error reporting in the RCEC's AER cap (esp. CIE and UIE) and to
inspect the dport's CXL registers in addition (CXL RAS cap and AER ext
cap).

The reason for choosing this implementation is that a CXL RCEC device
is bound to the AER port driver, but the driver does not allow it to
register a custom specific handler to support CXL. Connecting the RCEC
hard-wired with a CXL handler does not work, as the CXL subsystem
might not be present all the time. The alternative to add an
implementation to the portdrv to allow the registration of a custom
RCEC error handler isn't worth doing it as CXL would be its only user.
Instead, just check for an CXL RCEC and pass it down to the connected
CXL device's error handler.

[1] CXL 3.0 spec, 12.2.1.1 RCH Downstream Port-detected Errors
[2] CXL 3.0 spec, 8.1.3 PCIe DVSEC for CXL Devices

Co-developed-by: Terry Bowman <terry.bowman@amd.com>
Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Signed-off-by: Robert Richter <rrichter@amd.com>
Cc: "Oliver O'Halloran" <oohall@gmail.com>
Cc: Bjorn Helgaas <bhelgaas@google.com>
Cc: linuxppc-dev@lists.ozlabs.org
Cc: linux-pci@vger.kernel.org
---
 drivers/pci/pcie/aer.c | 45 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
index 7f0f52d094a4..d250a4caa85a 100644
--- a/drivers/pci/pcie/aer.c
+++ b/drivers/pci/pcie/aer.c
@@ -943,6 +943,49 @@ static bool find_source_device(struct pci_dev *parent,
 	return true;
 }
 
+#if IS_ENABLED(CONFIG_CXL_PCI)
+
+static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info);
+
+static int handle_cxl_error_iter(struct pci_dev *dev, void *data)
+{
+	struct aer_err_info *e_info = (struct aer_err_info *)data;
+
+	if (dev->devfn != PCI_DEVFN(0, 0))
+		return 0;
+
+	/* Right now there is only a CXL.mem driver */
+	if ((dev->class >> 8) != PCI_CLASS_MEMORY_CXL)
+		return 0;
+
+	/* pci_dev_put() in handle_error_source() */
+	dev = pci_dev_get(dev);
+	if (dev)
+		handle_error_source(dev, e_info);
+
+	return 0;
+}
+
+static bool is_internal_error(struct aer_err_info *info)
+{
+	if (info->severity == AER_CORRECTABLE)
+		return info->status & PCI_ERR_COR_INTERNAL;
+
+	return info->status & PCI_ERR_UNC_INTN;
+}
+
+static void handle_cxl_error(struct pci_dev *dev, struct aer_err_info *info)
+{
+	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
+	    is_internal_error(info))
+		pcie_walk_rcec(dev, handle_cxl_error_iter, info);
+}
+
+#else
+static inline void handle_cxl_error(struct pci_dev *dev,
+				    struct aer_err_info *info) { }
+#endif
+
 /**
  * handle_error_source - handle logging error into an event log
  * @dev: pointer to pci_dev data structure of error source device
@@ -954,6 +997,8 @@ static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info)
 {
 	int aer = dev->aer_cap;
 
+	handle_cxl_error(dev, info);
+
 	if (info->severity == AER_CORRECTABLE) {
 		/*
 		 * Correctable error does not need software intervention.
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 666E9C761AF
	for <linux-cxl@archiver.kernel.org>; Thu, 23 Mar 2023 21:39:11 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231364AbjCWVjK (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 23 Mar 2023 17:39:10 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:54062 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231436AbjCWVjG (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 23 Mar 2023 17:39:06 -0400
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (mail-dm6nam12on2063.outbound.protection.outlook.com [40.107.243.63])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id B3A1726B8;
        Thu, 23 Mar 2023 14:38:50 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=XhE9NLMw3MgZpy8eBH1KdBAepX7oP7olo7D6O03X/pZe/7e0bHJ6TpTKRSLRaeWsK+af4tIOFqRVcQLyAWwpm3qMTpYqH/net4A1VTAcHT6TLBt4pbKpcNCls/h3m1U5UVAYRNhe9ilVt9NtBSJEgOomGCR0tNHMMezOen/fdtyIi+TqnF18QIQ5n+RuX91V9Vj8o+FKMKWJza5IUO7s2Sa3Nw9j2wycwO/8sTQhWFeSsxhVf0rriFM3DL3ACOIahtc/vbRk0AV7nJ8FsMTLEKGFF9L1qJBYjhc9Vke4+cYkWww4YxJ8JfpVGtD9Vs43SL3BqzkMzvxkzVhVExG5dg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=07J6IZKFhviOEMH2B3UgawtEh/IZiwn+zz+5sk0vlFQ=;
 b=Ok78CyEVZX6WsiIsBFDQcQGpx/9qRkB10CFAFi5FJMWLgFHIMKqJ/ZJqpJ/RvgRmPBBzLFim5W4aHftJgFmMu4R6NRsRI9VBlK87wAioujAUIjlkjpHcsbe/dTnZ76p/u4+lIpkvRziZDnJOpVPhgJVaDn6VtY1u/tQKa/xM91qcIurK1VgNntNu6Ec69+1MxZW7L+Qnm8Q4/KgWrNQfMDIscBP0D6JxKGyVR+HjOvKAMzCgKMG2CtXqo6bZ6FuGURFWQfF7wHCyDS2iBMW1Nsplxy6YMzQ1q3DAXLCO2jZY12LsFm86nwySO1WIdtVk2P4qBFkAlY7RZCzDj3QMqA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=07J6IZKFhviOEMH2B3UgawtEh/IZiwn+zz+5sk0vlFQ=;
 b=YXO2ZlzthoNNqPDKWH7gnDahMdNCbv2MEG/Z8+iHJkbHq6dbdfDaUEMAf9C3tDVUzRoes5WVGeYi2CCIhhWjUsPyQipCmEGGTGzASToy750IQXAgqUzSgC/jx5RjM/BD0TLPaIuljSAqAF5x6et+N0kN8Qsb+bpjQUx6c1jtMPg=
Received: from DS7PR03CA0032.namprd03.prod.outlook.com (2603:10b6:5:3b5::7) by
 PH7PR12MB8054.namprd12.prod.outlook.com (2603:10b6:510:27f::15) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.37; Thu, 23 Mar
 2023 21:38:48 +0000
Received: from DM6NAM11FT078.eop-nam11.prod.protection.outlook.com
 (2603:10b6:5:3b5:cafe::8d) by DS7PR03CA0032.outlook.office365.com
 (2603:10b6:5:3b5::7) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38 via Frontend
 Transport; Thu, 23 Mar 2023 21:38:48 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 DM6NAM11FT078.mail.protection.outlook.com (10.13.173.183) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.6222.21 via Frontend Transport; Thu, 23 Mar 2023 21:38:48 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2375.34; Thu, 23 Mar
 2023 16:38:47 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <terry.bowman@amd.com>, <alison.schofield@intel.com>,
        <vishal.l.verma@intel.com>, <ira.weiny@intel.com>,
        <bwidawsk@kernel.org>, <dan.j.williams@intel.com>,
        <dave.jiang@intel.com>, <Jonathan.Cameron@huawei.com>,
        <linux-cxl@vger.kernel.org>, <rrichter@amd.com>
CC: <linux-kernel@vger.kernel.org>, <bhelgaas@google.com>
Subject: [PATCH v2 3/5] pci/aer: Export cper_print_aer() for CXL driver logging
Date: Thu, 23 Mar 2023 16:38:06 -0500
Message-ID: <20230323213808.398039-4-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20230323213808.398039-1-terry.bowman@amd.com>
References: <20230323213808.398039-1-terry.bowman@amd.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-Originating-IP: [10.180.168.240]
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DM6NAM11FT078:EE_|PH7PR12MB8054:EE_
X-MS-Office365-Filtering-Correlation-Id: 39a495ed-7ef4-4e03-8a98-08db2be6fc80
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: QlCq3QwaTQzlgyGwXtSlQDYuevD/zK15CBkT6osL2wT1HnLbQugx+pAIZjBQOOMof90Y1ilmTimeY/ekIgIRQ1R99LoYrOFujrZdcNpDO/cyiaxwzKKcolLXVnJkDDm/CNdtTcPTicjld3RmYIKmX+potINNFQMqCMErvDC/3wFAK5ba+szOPy4fC+xv/1rbDtYwaJZlNN3xXtBbM0WvxI1t9yJLTW4acFIJ84hwNYO50vO/zeUnFQ/MfTCiql4m572NeB5uPVXuiYZe0Lx8fn3LGq6+rPU6umebOapxJeS7+M6rTNdM++VJ/j8EvMGJrwOCCxcBEAwptTGSrZeMO2kkUYWb0wmkxg2ZR4XYy/l6ezm76XGIOUoO6cOEKzwLxhS/u4LeJbL8WUqxnODdHYoFbdFSDVWONNrvYpUWrj+Y3qzC797kTmPm2Gs4XKAvqpQQipVThXV+kR1rZgivl79haA/l1Y64EEYJQqJ070PFXlOOszOe/ky95NyeqJlCXnkCEH9b9MgpnJvcbItzo4eW1/PuNTvDJRUAtub5q4aJfNFpUdk7IVBKvRBK51SROiI/RQHvtgkqgImzO5Rt3gmku2AphJl4fnzRvqROVXjB7Z2SY0kUFxPlWjUH/MVC9jPcfdFbhAmc+aII0LQ6xH9xbsvoUTKCCS2BIE0nksOqw4mxiuMZY/Cq8/5zJ8FcuGd47r34kVTTNr6WoU10YtIcbuIbpM3jfY9US/ViBSRFT1dOVp9cxwLGukutbeM0
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230025)(4636009)(346002)(376002)(39860400002)(396003)(136003)(451199018)(40470700004)(36840700001)(46966006)(478600001)(40460700003)(70586007)(8676002)(4326008)(4744005)(36860700001)(110136005)(70206006)(6636002)(81166007)(7416002)(41300700001)(5660300002)(44832011)(82740400003)(426003)(8936002)(26005)(6666004)(47076005)(1076003)(2616005)(336012)(316002)(16526019)(186003)(7696005)(54906003)(86362001)(82310400005)(36756003)(40480700001)(921005)(356005)(2906002)(36900700001);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Mar 2023 21:38:48.1187
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 39a495ed-7ef4-4e03-8a98-08db2be6fc80
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: DM6NAM11FT078.eop-nam11.prod.protection.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH7PR12MB8054
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

The CXL driver plans to use cper_print_aer() for restricted CXL host
(RCH) logging. cper_print_aer() is not exported and as a result is not
available to the CXL driver or other loadable modules. Export
cper_print_aer() making it available to CXL and other loadable modules.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Cc: Mahesh J Salgaonkar <mahesh@linux.ibm.com>
Cc: "Oliver O'Halloran" <oohall@gmail.com>
Cc: Bjorn Helgaas <bhelgaas@google.com>
Cc: linux-pci@vger.kernel.org
---
 drivers/pci/pcie/aer.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
index 625f7b2cafe4..7f0f52d094a4 100644
--- a/drivers/pci/pcie/aer.c
+++ b/drivers/pci/pcie/aer.c
@@ -809,6 +809,7 @@ void cper_print_aer(struct pci_dev *dev, int aer_severity,
 	trace_aer_event(dev_name(&dev->dev), (status & ~mask),
 			aer_severity, tlp_header_valid, &aer->header_log);
 }
+EXPORT_SYMBOL_GPL(cper_print_aer);
 #endif
 
 /**
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 6FDB0C6FD1C
	for <linux-cxl@archiver.kernel.org>; Thu, 23 Mar 2023 21:38:51 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231320AbjCWViu (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 23 Mar 2023 17:38:50 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:53596 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231307AbjCWVis (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 23 Mar 2023 17:38:48 -0400
Received: from NAM11-CO1-obe.outbound.protection.outlook.com (mail-co1nam11on2050.outbound.protection.outlook.com [40.107.220.50])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id E3AD51DBBC;
        Thu, 23 Mar 2023 14:38:39 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=BVH83l6uxN4vVTfamhNAiv5YQkLXxJFIOUYK1iLRTVBLbMajGSKnPSskyLZ0oae391W84lAOSdRdfRtCERR/EamHfxym5OoOjemJmZX1BIs0H7RWiQO+mRVr68M7eOTd2MIrtkMappvTyh5UsyaStMP+83vRdWCe4097jZHPgt4YO+l4vt4tR4zDyHM1oVZyyXDJQ5EUhzc1Jj5YcwoYydDAof/Ao6IaN8Xm6MS5esYcSPPwElZ74YmW5K2QTOGSIFBX9QDPeSf04sS0Oq/h/Ru8ysvF4h2j4aE2UPfcUco1q4KuTSdaeA9DN7pjiFbAOmnuHjYSUIrHTt/1XGDbog==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=3Li8FOXq4OLHje5zYwNX0eKBXeZuW+mI405FUcEg9oA=;
 b=e6F3AlKj+WZD0jS0ALCLxx0t41PNC9r1HfGvJD+08F2CAD0qzwt3JYdPkOyP0j98PKqx19+YGqoiWwnwR6tjpGp1jIhJXWjPWeOKKpKVdBOQKyF8p3kE0DYHBRfkugOOhKIAxmPoV5bof63VT0cIXppkCurR+YDq802fa30GU8Fw4s7nAr6S4BWs1Z7GuZw5SpBuvutarAjmPvjel2ZI5lD/1Qb2TSY0lXkww39RqtCs6cjSVZD+77LRYhN+bn/CiT7xXRGshpSoRN4ky6CVZfsc26Z/oZfM5NNieqBZGk1/x2xmwCHscTUOGdzW59CZGl3uDD/Z5gGBe/NMh++Ruw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=3Li8FOXq4OLHje5zYwNX0eKBXeZuW+mI405FUcEg9oA=;
 b=yeedQIMqZMtPBZtSy9ecdpv+84fdnjFGNrG0zKL0vJ3WALdPlz2nsN2Ww9hxjQL+CIcWvQx2+ncx4Oz3Qtnpz0OYdaPRaHrM77zKvW1xaVG1DBPqZRLlrgE7af3Z19re5vQqs2nkqGQNfuw8eQrgwCpmzUDNstHbFhlleuhtOLI=
Received: from DM6PR02CA0113.namprd02.prod.outlook.com (2603:10b6:5:1b4::15)
 by LV2PR12MB5966.namprd12.prod.outlook.com (2603:10b6:408:171::21) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.37; Thu, 23 Mar
 2023 21:38:37 +0000
Received: from DM6NAM11FT081.eop-nam11.prod.protection.outlook.com
 (2603:10b6:5:1b4:cafe::a9) by DM6PR02CA0113.outlook.office365.com
 (2603:10b6:5:1b4::15) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38 via Frontend
 Transport; Thu, 23 Mar 2023 21:38:37 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 DM6NAM11FT081.mail.protection.outlook.com (10.13.172.136) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.6222.17 via Frontend Transport; Thu, 23 Mar 2023 21:38:37 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2375.34; Thu, 23 Mar
 2023 16:38:36 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <terry.bowman@amd.com>, <alison.schofield@intel.com>,
        <vishal.l.verma@intel.com>, <ira.weiny@intel.com>,
        <bwidawsk@kernel.org>, <dan.j.williams@intel.com>,
        <dave.jiang@intel.com>, <Jonathan.Cameron@huawei.com>,
        <linux-cxl@vger.kernel.org>, <rrichter@amd.com>
CC: <linux-kernel@vger.kernel.org>, <bhelgaas@google.com>
Subject: [PATCH v2 2/5] efi/cper: Export cper_mem_err_unpack() for CXL logging
Date: Thu, 23 Mar 2023 16:38:05 -0500
Message-ID: <20230323213808.398039-3-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20230323213808.398039-1-terry.bowman@amd.com>
References: <20230323213808.398039-1-terry.bowman@amd.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-Originating-IP: [10.180.168.240]
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DM6NAM11FT081:EE_|LV2PR12MB5966:EE_
X-MS-Office365-Filtering-Correlation-Id: c9428e2d-00bb-4faf-62eb-08db2be6f5f9
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: Cqzsml4W9C+B97YazR+uUpCv4VfQs3kBUi9uTPTajXs4XeUngsASZ2ubDONBg3gztPHdl6R4J/oBW1vaXN9LQYVhgL8qKuzeMditrLXoq/d1M5CSiH/Xvp1QJjGLmlvc0HHFMJSb1/g9s/sdUG0xOA4kHSC1GvKXfCsMV7NyH9tLcoTWYsfvUsjaJ8wk+q8/0rKa0+bWjbfqxs0sT20KwGgycdpWtLuC49+xyOsr8rHXjX7DJVEQ5Bz+HKnqtst9UAOrEkLuLDGxKTCosMW+FSmtBYu/VpT4aa7qhE4dU0B4vWdUK07kCh29ihy5KqBOajIG3+V7v6j+i6Z4W6dJEpcDmrLz+J+9ZzL+3PiK9Z0+0igZY9I52uI1yAEKU3U+Gqgm7JhHgGBdffgkO4nPG0i3153NbzS+fwg51Ei1izKVf/S/+fvjdWLCG5T/Coaw6l5Tc/ofEeSIBK+SWMeshvzlMcC6cd9Gj9ZmXxq5PRXFSoDPUewTCPDFXw59L/siDi6R7BR3+BPbC3qPN7bXURugsGSgtQMmXobqiLFEK6jbOt2qPGSjCUQA9osqWdwdeLqrUUiWPQtkJWhUGoNAo+R7hZ4Lwxq5gPQlimuFxAtS7Qpuy1h+SIAQuplcsWWSIgywRwE9gSBJc1TCdqHRRodPADu6slOuQ3CfMH7u9VuHczyK26fYvgJOKiorTNFUhfxI6OL6M/4SNZLXTNmaMFDK0Y/hoBFq1oMFUJUyHoM4e/0UugwuIuuKW53Ds+Ex
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230025)(4636009)(136003)(346002)(376002)(396003)(39860400002)(451199018)(36840700001)(40470700004)(46966006)(36756003)(40460700003)(8676002)(70206006)(54906003)(4326008)(4744005)(110136005)(36860700001)(70586007)(6636002)(44832011)(41300700001)(81166007)(7416002)(5660300002)(82740400003)(426003)(8936002)(47076005)(316002)(26005)(1076003)(6666004)(16526019)(186003)(478600001)(2616005)(336012)(7696005)(86362001)(82310400005)(40480700001)(356005)(2906002)(921005)(36900700001);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Mar 2023 21:38:37.1510
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: c9428e2d-00bb-4faf-62eb-08db2be6f5f9
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: DM6NAM11FT081.eop-nam11.prod.protection.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: LV2PR12MB5966
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

The CXL driver plans to use cper_print_aer() for restricted CXL host (RCH)
logging. This is not currently possible because CXL is a loadable module
and cper_print_aer() depends on cper_mem_err_unpack() which is not
exported.

Export cper_mem_err_unpack() to enable cper_print_aer() usage in
CXL and other loadable modules.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Cc: Ard Biesheuvel <ardb@kernel.org>
Cc: linux-efi@vger.kernel.org
---
 drivers/firmware/efi/cper.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/firmware/efi/cper.c b/drivers/firmware/efi/cper.c
index 35c37f667781..ff15e12160ae 100644
--- a/drivers/firmware/efi/cper.c
+++ b/drivers/firmware/efi/cper.c
@@ -350,6 +350,7 @@ const char *cper_mem_err_unpack(struct trace_seq *p,
 
 	return ret;
 }
+EXPORT_SYMBOL_GPL(cper_mem_err_unpack);
 
 static void cper_print_mem(const char *pfx, const struct cper_sec_mem_err *mem,
 	int len)
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 7F142C74A5B
	for <linux-cxl@archiver.kernel.org>; Thu, 23 Mar 2023 21:38:34 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231189AbjCWVid (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 23 Mar 2023 17:38:33 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:53180 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229752AbjCWVib (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 23 Mar 2023 17:38:31 -0400
Received: from NAM10-DM6-obe.outbound.protection.outlook.com (mail-dm6nam10on2067.outbound.protection.outlook.com [40.107.93.67])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 51240CDCA;
        Thu, 23 Mar 2023 14:38:29 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=TF3anK6ytoelsF/Laynx4d5jeBF/k9RdkECcGilXJdsYb8v+F+8s0lQF62bdLwaj2+YcNEkUdY5zoXnxLoaONW7bnnnWX87/VIXP5sDEQ27enfiDyqOqIT+5jUeoURhbO+h4K3aWZi/vDFPzv9gEScXxRavT5MRaHYE2zlf0kWlhQrosuaurZCdTsvHiG57gO/hsXyIyNmrUXzy2VLOMvWr6fSPRQGctMzq1il2wPPIOxPQ4334puiXXjiqDDZJSJvkIwBvh2FhpVaUVdNBs6vqcEbGfqlAmRoahc/IcAiDFXy5yhK3qHCiFMF4UkGK6iJdS5NhfFI1b05CHotfA5g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=xt908iITx8CzmAgTweWqu2SCENJjyQQA2v6kFbA1Nwg=;
 b=buDyQQS8kpTW4+P/xvIghT08Eeh+sXGyF4Jnr/nfuTZDJqPeyl0G1liSeuP/oD7AD39WllWLpANrftCgnB9YGcDFMFWETj1WNB8oL+hWCD0b6ATXj0YCZ1WaqRwRS0t3LPhmwVTrcySg5RyhI9ezr+H0SUU6QbBfN7oIXR7Tr/cF20hpIKlvoBSPQ3bRbk361VTZMytdPcGUJWu/zuIHICMGA2TCSWA6s2jlQ6y8VhxgdkTtrIAT6wtSmxMGvkukJmRVk+GtCR4cu/Zrpe0M95lKzndLzkGpYjp2BaaYlnua2AiPmwqlGhLZ4mRX/ZUvur6EnogkKRDpcA5ifVPC9Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=xt908iITx8CzmAgTweWqu2SCENJjyQQA2v6kFbA1Nwg=;
 b=Eo3WT5fWnHsSqYftkDy8zAwKy5OSLw/g86m/3KeGGUMHHSjaz9oYGrsczThw6s5FEBbZTK+eDYQueriBDdf7h48UHVAKu6EWxqWjQE+wlSXvTZGQXRYlGA/aP34YQhtGR9/0Dp95ZsipG+GuhHUHk2erJCluYcw7tBiM+y8L/mk=
Received: from DS7PR03CA0304.namprd03.prod.outlook.com (2603:10b6:8:2b::16) by
 SJ0PR12MB5455.namprd12.prod.outlook.com (2603:10b6:a03:3ba::12) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38; Thu, 23 Mar
 2023 21:38:26 +0000
Received: from DM6NAM11FT054.eop-nam11.prod.protection.outlook.com
 (2603:10b6:8:2b:cafe::ff) by DS7PR03CA0304.outlook.office365.com
 (2603:10b6:8:2b::16) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38 via Frontend
 Transport; Thu, 23 Mar 2023 21:38:26 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 DM6NAM11FT054.mail.protection.outlook.com (10.13.173.95) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.6222.22 via Frontend Transport; Thu, 23 Mar 2023 21:38:26 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2375.34; Thu, 23 Mar
 2023 16:38:25 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <terry.bowman@amd.com>, <alison.schofield@intel.com>,
        <vishal.l.verma@intel.com>, <ira.weiny@intel.com>,
        <bwidawsk@kernel.org>, <dan.j.williams@intel.com>,
        <dave.jiang@intel.com>, <Jonathan.Cameron@huawei.com>,
        <linux-cxl@vger.kernel.org>, <rrichter@amd.com>
CC: <linux-kernel@vger.kernel.org>, <bhelgaas@google.com>
Subject: [PATCH v2 1/5] cxl/pci: Add RCH downstream port AER and RAS register discovery
Date: Thu, 23 Mar 2023 16:38:04 -0500
Message-ID: <20230323213808.398039-2-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20230323213808.398039-1-terry.bowman@amd.com>
References: <20230323213808.398039-1-terry.bowman@amd.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-Originating-IP: [10.180.168.240]
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DM6NAM11FT054:EE_|SJ0PR12MB5455:EE_
X-MS-Office365-Filtering-Correlation-Id: de8a8f64-3268-4509-aacf-08db2be6ef7d
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 4/7l+nxkVSJVusnBoUGvZfqQqL3R8x0J9HX+PmhyDjWyg2lhryXDaSFUqW2Oe68YIF3QI/ydsrpDE/oCBiceOeXWyTDj5hZ/1uzfsvsNI3ncitpFQh4Ur8zNdJet18Hkb0lVqxjRRsF3FGmvp5m5CaCB7La7XwVJ9LVJzbYpL6lcSrecKY2u3J3X+Ye4kbS3vBWeMAVtH6JBRfiICpSNSpL8Msg9NwFg7vrj+ReOegnY+0CFKSQmT6PhqJ4Dpq8vWWvKkZHVax2ZxzRDFYD37h9j6p+D8ABjRGCR6AI4mGoblQp9VYhpnuoRWphrHoLp8rCVSD4SLP9DNp8rcYaGbUtX7WrAorjsAauucizC1baoFD1QhTdNux/je9ly3VTpQF0IJ9a3wi1eA/g4qMPiexkgi6z/1H24MEwqNXyxQPznwaLmEbLH7H1MSk3r8u6co0Odb+zW7S8w1rhZYg9Js7zOdS+IUWVA/yPq/ispwbQbLWevcvkMKzHdutnAzLHVzMKDP8Ac0bT+71THFDMhGOs3y5DK3eMin1fzg53aYwP4ICrF0lipwFlv36TFtCsghjGUGIfmJalJvuQiARsTm2vFQkAjLAKTHoSI7qlYq7mtHf0CGVeu09ys0i8bWHk161TzUiKMGuyTkAv2sXxyWQ8UDQKGq8GHJ275S/b4P0/rPHWT8D6qH67asicrCMg6LSPMhg4/WmBO9PFMhul/g2n1ojeC8P9Q8cGs61EuY4x75fVfoT/95PtuvFQLCf1r
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230025)(4636009)(396003)(136003)(346002)(39860400002)(376002)(451199018)(40470700004)(36840700001)(46966006)(40460700003)(36860700001)(8676002)(4326008)(70586007)(70206006)(54906003)(6636002)(41300700001)(5660300002)(7416002)(44832011)(82740400003)(26005)(47076005)(426003)(81166007)(1076003)(8936002)(6666004)(16526019)(316002)(186003)(478600001)(83380400001)(2616005)(336012)(7696005)(110136005)(36756003)(82310400005)(86362001)(40480700001)(2906002)(921005)(356005)(36900700001);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Mar 2023 21:38:26.2738
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: de8a8f64-3268-4509-aacf-08db2be6ef7d
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: DM6NAM11FT054.eop-nam11.prod.protection.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SJ0PR12MB5455
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Restricted CXL host (RCH) downstream port AER information is not currently
logged while in the error state. One problem preventing existing PCIe AER
functions from logging errors is the AER registers are not accessible. The
CXL driver requires changes to find RCH downstream port AER registers for
purpose of error logging.

RCH downstream ports are not enumerated during a PCI bus scan and are
instead discovered using system firmware, ACPI in this case.[1] The
downstream port is implemented as a Root Complex Register Block (RCRB).
The RCRB is a 4k memory block containing PCIe registers based on the PCIe
root port.[2] The RCRB includes AER extended capability registers used for
reporting errors. Note, the RCH's AER Capability is located in the RCRB
memory space instead of PCI configuration space, thus its register access
is different. Existing kernel PCIe AER functions can not be used to manage
the downstream port AER capabilities because the port was not enumerated
during PCI scan and the registers are not PCI config accessible.

Discover RCH downstream port AER extended capability registers. This
requires using MMIO accesses to search for extended AER capability in
RCRB register space.

[1] CXL 3.0 Spec, 9.11.2 - System Firmware View of CXL 1.1 Hierarchy
[2] CXL 3.0 Spec, 8.2.1.1 - RCH Downstream Port RCRB

Co-developed-by: Robert Richter <rrichter@amd.com>
Signed-off-by: Robert Richter <rrichter@amd.com>
Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/regs.c | 93 +++++++++++++++++++++++++++++++++++------
 drivers/cxl/cxl.h       |  5 +++
 drivers/cxl/mem.c       | 41 ++++++++++++------
 3 files changed, 115 insertions(+), 24 deletions(-)

diff --git a/drivers/cxl/core/regs.c b/drivers/cxl/core/regs.c
index 1476a0299c9b..108a349d8101 100644
--- a/drivers/cxl/core/regs.c
+++ b/drivers/cxl/core/regs.c
@@ -332,10 +332,36 @@ int cxl_find_regblock(struct pci_dev *pdev, enum cxl_regloc_type type,
 }
 EXPORT_SYMBOL_NS_GPL(cxl_find_regblock, CXL);
 
+static void __iomem *cxl_map_reg(struct device *dev, struct cxl_register_map *map,
+				 char *name)
+{
+
+	if (!request_mem_region(map->resource, map->max_size, name))
+		return 0;
+
+	map->base = ioremap(map->resource, map->max_size);
+	if (!map->base) {
+		release_mem_region(map->resource, map->max_size);
+		return 0;
+	}
+
+	return map->base;
+}
+
+static void cxl_unmap_reg(struct device *dev, struct cxl_register_map *map)
+{
+	iounmap(map->base);
+	release_mem_region(map->resource, map->max_size);
+}
+
 resource_size_t cxl_rcrb_to_component(struct device *dev,
 				      resource_size_t rcrb,
 				      enum cxl_rcrb which)
 {
+	struct cxl_register_map map = {
+		.resource = rcrb,
+		.max_size = SZ_4K
+	};
 	resource_size_t component_reg_phys;
 	void __iomem *addr;
 	u32 bar0, bar1;
@@ -343,7 +369,10 @@ resource_size_t cxl_rcrb_to_component(struct device *dev,
 	u32 id;
 
 	if (which == CXL_RCRB_UPSTREAM)
-		rcrb += SZ_4K;
+		map.resource += SZ_4K;
+
+	if (!cxl_map_reg(dev, &map, "CXL RCRB"))
+		return CXL_RESOURCE_NONE;
 
 	/*
 	 * RCRB's BAR[0..1] point to component block containing CXL
@@ -351,21 +380,12 @@ resource_size_t cxl_rcrb_to_component(struct device *dev,
 	 * the PCI Base spec here, esp. 64 bit extraction and memory
 	 * ranges alignment (6.0, 7.5.1.2.1).
 	 */
-	if (!request_mem_region(rcrb, SZ_4K, "CXL RCRB"))
-		return CXL_RESOURCE_NONE;
-	addr = ioremap(rcrb, SZ_4K);
-	if (!addr) {
-		dev_err(dev, "Failed to map region %pr\n", addr);
-		release_mem_region(rcrb, SZ_4K);
-		return CXL_RESOURCE_NONE;
-	}
-
+	addr = map.base;
 	id = readl(addr + PCI_VENDOR_ID);
 	cmd = readw(addr + PCI_COMMAND);
 	bar0 = readl(addr + PCI_BASE_ADDRESS_0);
 	bar1 = readl(addr + PCI_BASE_ADDRESS_1);
-	iounmap(addr);
-	release_mem_region(rcrb, SZ_4K);
+	cxl_unmap_reg(dev, &map);
 
 	/*
 	 * Sanity check, see CXL 3.0 Figure 9-8 CXL Device that Does Not
@@ -396,3 +416,52 @@ resource_size_t cxl_rcrb_to_component(struct device *dev,
 	return component_reg_phys;
 }
 EXPORT_SYMBOL_NS_GPL(cxl_rcrb_to_component, CXL);
+
+u16 cxl_rcrb_to_aer(struct device *dev, resource_size_t rcrb)
+{
+	struct cxl_register_map map = {
+		.resource = rcrb,
+		.max_size = SZ_4K,
+	};
+	u32 cap_hdr;
+	u16 offset = 0;
+
+	if (!cxl_map_reg(dev, &map, "CXL RCRB"))
+		return 0;
+
+	cap_hdr = readl(map.base + offset);
+	while (PCI_EXT_CAP_ID(cap_hdr) != PCI_EXT_CAP_ID_ERR) {
+
+		offset = PCI_EXT_CAP_NEXT(cap_hdr);
+		if (!offset) {
+			cxl_unmap_reg(dev, &map);
+			return 0;
+		}
+		cap_hdr = readl(map.base + offset);
+	}
+
+	dev_dbg(dev, "found AER extended capability (0x%x)\n", offset);
+	cxl_unmap_reg(dev, &map);
+
+	return offset;
+}
+EXPORT_SYMBOL_NS_GPL(cxl_rcrb_to_aer, CXL);
+
+u16 cxl_component_to_ras(struct device *dev, resource_size_t component_reg_phys)
+{
+	struct cxl_register_map map = {
+		.resource = component_reg_phys,
+		.max_size = CXL_COMPONENT_REG_BLOCK_SIZE,
+	};
+
+	if (!cxl_map_reg(dev, &map, "component"))
+		return 0;
+
+	cxl_probe_component_regs(dev, map.base, &map.component_map);
+	cxl_unmap_reg(dev, &map);
+	if (!map.component_map.ras.valid)
+		return 0;
+
+	return map.component_map.ras.offset;
+}
+EXPORT_SYMBOL_NS_GPL(cxl_component_to_ras, CXL);
diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
index d853a0238ad7..9fd7df48ce99 100644
--- a/drivers/cxl/cxl.h
+++ b/drivers/cxl/cxl.h
@@ -270,6 +270,9 @@ enum cxl_rcrb {
 resource_size_t cxl_rcrb_to_component(struct device *dev,
 				      resource_size_t rcrb,
 				      enum cxl_rcrb which);
+u16 cxl_rcrb_to_aer(struct device *dev, resource_size_t rcrb);
+u16 cxl_component_to_ras(struct device *dev,
+			 resource_size_t component_reg_phys);
 
 #define CXL_RESOURCE_NONE ((resource_size_t) -1)
 #define CXL_TARGET_STRLEN 20
@@ -601,6 +604,8 @@ struct cxl_dport {
 	int port_id;
 	resource_size_t component_reg_phys;
 	resource_size_t rcrb;
+	u16 aer_cap;
+	u16 ras_cap;
 	bool rch;
 	struct cxl_port *port;
 };
diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
index 39c4b54f0715..12e8e8ebaac0 100644
--- a/drivers/cxl/mem.c
+++ b/drivers/cxl/mem.c
@@ -45,13 +45,38 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
 	return 0;
 }
 
+static void cxl_rcrb_setup(struct cxl_dev_state *cxlds,
+			   struct cxl_dport *parent_dport)
+{
+	struct cxl_memdev *cxlmd  = cxlds->cxlmd;
+
+	if (!parent_dport->rch)
+		return;
+
+	/*
+	 * The component registers for an RCD might come from the
+	 * host-bridge RCRB if they are not already mapped via the
+	 * typical register locator mechanism.
+	 */
+	if (cxlds->component_reg_phys == CXL_RESOURCE_NONE)
+		cxlds->component_reg_phys = cxl_rcrb_to_component(
+			&cxlmd->dev, parent_dport->rcrb, CXL_RCRB_UPSTREAM);
+
+	/* RCH AER is required. CXL3.0 Spec Table 8-12 */
+	parent_dport->aer_cap = cxl_rcrb_to_aer(parent_dport->dport,
+						parent_dport->rcrb);
+
+	/* RCH RAS is required. CXL3.0 Spec Table 8-22 */
+	parent_dport->ras_cap = cxl_component_to_ras(parent_dport->dport,
+						     parent_dport->component_reg_phys);
+}
+
 static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
 				 struct cxl_dport *parent_dport)
 {
 	struct cxl_port *parent_port = parent_dport->port;
 	struct cxl_dev_state *cxlds = cxlmd->cxlds;
 	struct cxl_port *endpoint, *iter, *down;
-	resource_size_t component_reg_phys;
 	int rc;
 
 	/*
@@ -66,17 +91,9 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
 		ep->next = down;
 	}
 
-	/*
-	 * The component registers for an RCD might come from the
-	 * host-bridge RCRB if they are not already mapped via the
-	 * typical register locator mechanism.
-	 */
-	if (parent_dport->rch && cxlds->component_reg_phys == CXL_RESOURCE_NONE)
-		component_reg_phys = cxl_rcrb_to_component(
-			&cxlmd->dev, parent_dport->rcrb, CXL_RCRB_UPSTREAM);
-	else
-		component_reg_phys = cxlds->component_reg_phys;
-	endpoint = devm_cxl_add_port(host, &cxlmd->dev, component_reg_phys,
+	cxl_rcrb_setup(cxlds, parent_dport);
+
+	endpoint = devm_cxl_add_port(host, &cxlmd->dev, cxlds->component_reg_phys,
 				     parent_dport);
 	if (IS_ERR(endpoint))
 		return PTR_ERR(endpoint);
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 194FAC74A5B
	for <linux-cxl@archiver.kernel.org>; Thu, 23 Mar 2023 21:38:22 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S230399AbjCWViV (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 23 Mar 2023 17:38:21 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:52858 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229752AbjCWViU (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 23 Mar 2023 17:38:20 -0400
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (mail-dm6nam12on2071.outbound.protection.outlook.com [40.107.243.71])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 0D41E26B8;
        Thu, 23 Mar 2023 14:38:19 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=H45gABeuK7IiFCzjW100x+vQY+9T0V23A7AGgEYIZBcAE/OvwsQFo8dEQhFzVZBrVNH1z/jDuZyIpH2RcN561jrOe/RNqEjVhVA6eN+aTEnrCIsyUWFxzheP7DDJ2qy32ttd9TZ9Rlc1hb+Ogg+Ml6bR1MpY/JvzQ/JPPVpKxoAc+xIM3BXjHDb6hlvoJCigwAaDe94uCepnjL8GnUzJsd8oURrlPKvy2zzUbBbHBQiir7bnJ48TbuHFzgGV7wpVOcE83sPl+gBD0tc+/8rPSUB2WACD4iYeTqDWpiUUUhn3KIpct40FRYXe4DcKIOII/Lfkd/GM2ma8eTdXt+j5QQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=hJ6p1MUywn9zav2DD2FF3gP4Q6zmxUS3UtMtpB9Dvwo=;
 b=RFhY8z8Njv6EtGio/49GDIHo5P3NAPi2nk0KNxtf0zjoNRycamXFzBGCmCc/bW0ohOa8IGVfwvR5KR8ggbbb7qlo3nCqHUWnXeXNZniZqlUp0UacenQGCE3GBxWHIeFxRlAuH4GdJrJtRRAM1VY3fVJl0qbQHOygnMxBrZZ/Zyxr8UvmGZ76GGAsWTgfx02HMzsqnstnSivij7UrItOaBQgOa/es9jwDT1b16/3n76zrOps/HFPvf5UBJH8f3n0sfr/djQJ5nZvckFYwLj5UqQopVeIHjTfsKUITDPedVRbz5Kg5qpPvFXKZHPmJp3+m0yhzBUqQSOhuawniVD/Gkw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=hJ6p1MUywn9zav2DD2FF3gP4Q6zmxUS3UtMtpB9Dvwo=;
 b=3UgWZXo4Ez7+S5G8AVFbhE74kUs+PpeyB413UYCUaYtSpijtB9CbA5sfECsvMRbVrOoaoiIvuskxoIZNA8kpuJai5BDdoUmBVOukxbrIPasbrGFOD0w8H9YQBj0aNPjnLKSLBwHHs2VbRrbsBMsw9axNbfiDoNpzr5fmDzN38kY=
Received: from DM6PR11CA0028.namprd11.prod.outlook.com (2603:10b6:5:190::41)
 by PH8PR12MB7376.namprd12.prod.outlook.com (2603:10b6:510:214::12) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.37; Thu, 23 Mar
 2023 21:38:15 +0000
Received: from DM6NAM11FT029.eop-nam11.prod.protection.outlook.com
 (2603:10b6:5:190:cafe::ea) by DM6PR11CA0028.outlook.office365.com
 (2603:10b6:5:190::41) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38 via Frontend
 Transport; Thu, 23 Mar 2023 21:38:15 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 DM6NAM11FT029.mail.protection.outlook.com (10.13.173.23) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.6222.22 via Frontend Transport; Thu, 23 Mar 2023 21:38:15 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2375.34; Thu, 23 Mar
 2023 16:38:14 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <terry.bowman@amd.com>, <alison.schofield@intel.com>,
        <vishal.l.verma@intel.com>, <ira.weiny@intel.com>,
        <bwidawsk@kernel.org>, <dan.j.williams@intel.com>,
        <dave.jiang@intel.com>, <Jonathan.Cameron@huawei.com>,
        <linux-cxl@vger.kernel.org>, <rrichter@amd.com>
CC: <linux-kernel@vger.kernel.org>, <bhelgaas@google.com>
Subject: [PATCH v2 0/5] cxl/pci: Add support for RCH RAS error handling
Date: Thu, 23 Mar 2023 16:38:03 -0500
Message-ID: <20230323213808.398039-1-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-Originating-IP: [10.180.168.240]
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DM6NAM11FT029:EE_|PH8PR12MB7376:EE_
X-MS-Office365-Filtering-Correlation-Id: c7c6e527-a192-4d77-9955-08db2be6e8eb
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: rP3qwz7ZD7gh8IkEVt3u0rjDsg1wACQyjlUYvhu7EGBwS2wh9cYUzCkqrB6dtthMcH8aqKD/9pd+oYgFpoVGstooqG30e5GdzdNRVhhoRlbG1rPG+7sow4burbSRjh3UEvddEH35kyfxEMvJGGzk2gXinitNeGSNiCIEaT8DH/ttV19/opLXHgZFbys6sIz0dYOwfBK+F1ZK+Goe4TYGeLC3eNu61T3afKmH1S1DHmJh/Ots1hQVWwGGdQQo/nqq609Z/eHbP6XAf9hh9POdO5bzk+/0m0LgRIx7apR2UmOwjN8XQNK+Y9QJktUW4vNUCKYMdH9bjTOXZ4+LjMrLrDcbKIHo+IMO3cjx2bCfZAFbedWbCctqv/c42TCt37MJWTdXnNRjGjasGqdoVAFtT1ycsp6qqv+d7El/HPDSJXJJneoRtrKJPLP/hAJYinTDRFoyrA0aWRmXPFbiq5/REqHhsd5GMSauZKQLK4En8/iV6hAXZNJcwAHdIwtUUqEJl0J23tircMxlObxJgBgdoyk+PbIk0pT8FWSt7APN1igZAZ96pdfDhcHwaU3WuDjFllb71GgJT76GsASm8hyRry1AoedWnol/WfLPnAl9kt8qwEuKN9bgzdw9YWFkNLZrRfbcKuW5a0vZmCesDUE2yYLqqaurx3wjYMyJ5NI4AbepjguUsr2y1CeBPYsA37CvMrsBcyhMVNvtcEQBHEQtEnIaAO5S9Nmkcix7zz2K/Z0=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230025)(4636009)(396003)(136003)(346002)(39860400002)(376002)(451199018)(40470700004)(36840700001)(46966006)(40460700003)(36860700001)(8676002)(4326008)(70586007)(70206006)(54906003)(6636002)(41300700001)(5660300002)(7416002)(44832011)(82740400003)(26005)(47076005)(426003)(81166007)(1076003)(8936002)(6666004)(16526019)(316002)(186003)(478600001)(83380400001)(2616005)(336012)(966005)(7696005)(110136005)(36756003)(82310400005)(86362001)(40480700001)(2906002)(921005)(356005)(36900700001);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Mar 2023 21:38:15.2502
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: c7c6e527-a192-4d77-9955-08db2be6e8eb
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: DM6NAM11FT029.eop-nam11.prod.protection.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH8PR12MB7376
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

This patchset adds error handling support for restricted CXL host (RCH)
downstream ports. This is necessary because RCH downstream ports are
implemented in RCRBs and report protocol errors through a root complex
event collector (RCEC). The RCH error reporting flow is not currently
supported by the CXL driver and will be added by this patchset.

This patchset uses an updated subject line and is a continuation of:
https://lore.kernel.org/all/20221021185615.605233-1-terry.bowman@amd.com/

The first patch discovers the RCH dport AER and RAS registers. These will
be mapped later and used in CXL driver error logging.

The second patch exports cper_mem_err_unpack(). cper_mem_err_unpack() is a
dependency for using the cper_print_aer() AER trace logging.

The third patch exports cper_print_aer(). cper_print_aer() is used for
CXL AER error logging because it provides a common format for logging
into dmesg.

The fourth patch is AER port driver changes for forwarding RCH errors to
the RCiEP RCH handler.

The fifth patch maps the AER and RAS registers. This patch also adds the
RCH handler for logging downstream port AER and RAS information. 

This is based on cxl/next commit
e686c32590f4 ("dax/kmem: Fix leak of memory-hotplug resources")'

Robert Richter (1):
  cxl/pci: Forward RCH downstream port-detected errors to the CXL.mem
    dev handler

Terry Bowman (4):
  cxl/pci: Add RCH downstream port AER and RAS register discovery
  efi/cper: Export cper_mem_err_unpack() for CXL logging
  pci/aer: Export cper_print_aer() for CXL driver logging
  cxl/pci: Add RCH downstream port error logging

 drivers/cxl/core/pci.c      | 126 +++++++++++++++++++++++---
 drivers/cxl/core/regs.c     |  94 +++++++++++++++++---
 drivers/cxl/cxl.h           |  18 ++++
 drivers/cxl/mem.c           | 173 +++++++++++++++++++++++++++++++++---
 drivers/firmware/efi/cper.c |   1 +
 drivers/pci/pcie/aer.c      |  46 ++++++++++
 6 files changed, 423 insertions(+), 35 deletions(-)

-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 2CFD02F2D
	for <oe-kbuild-all@lists.linux.dev>; Fri, 24 Mar 2023 08:54:11 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1679648051; x=1711184051;
  h=date:from:to:cc:subject:message-id:references:
   mime-version:in-reply-to;
  bh=j5CbuxsW9YhmDTT/LOuuIKZ5pDvmHmeXkVuCe8TyAu8=;
  b=Jn9K6mf4UDgAy5KCMh12B1wCA/LGW/IjeaIeoMTPWrDcvx7AYWArFrcI
   u/DpZlTea97pGFtE2D4nYBLpB8gBtntx1/w+aFLYnKUq/Kb/kTlNrkWZx
   vf8N/3nUlxp1xNofvAcL2UyOWcTWM9+lqFQnOz0P1GTB9rbNqsy5Twz/w
   OGhuu/3K0TbGyOkU9dm12LdMNt4+Fe84KUHzsb7+jgGHnbxyj1seFCemw
   kNlrQcdiEx9rW0N5Rc27i1uhQvdDYgUJ63LY6LxkEJUo5B3yWOIO3Ff+z
   zizV9RuzMN/jnH9KXAk/s/86nByrmdbSuGSqEfzqnrhdrOo5mb91vpD7N
   A==;
X-IronPort-AV: E=McAfee;i="6600,9927,10658"; a="328146196"
X-IronPort-AV: E=Sophos;i="5.98,287,1673942400"; 
   d="scan'208";a="328146196"
Received: from orsmga004.jf.intel.com ([10.7.209.38])
  by orsmga101.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 24 Mar 2023 01:54:10 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10658"; a="806580721"
X-IronPort-AV: E=Sophos;i="5.98,287,1673942400"; 
   d="scan'208";a="806580721"
Received: from lkp-server01.sh.intel.com (HELO b613635ddfff) ([10.239.97.150])
  by orsmga004.jf.intel.com with ESMTP; 24 Mar 2023 01:54:07 -0700
Received: from kbuild by b613635ddfff with local (Exim 4.96)
	(envelope-from <lkp@intel.com>)
	id 1pfdBW-000F94-2u;
	Fri, 24 Mar 2023 08:54:06 +0000
Date: Fri, 24 Mar 2023 16:53:37 +0800
From: kernel test robot <lkp@intel.com>
To: Terry Bowman <terry.bowman@amd.com>, alison.schofield@intel.com,
	vishal.l.verma@intel.com, ira.weiny@intel.com, bwidawsk@kernel.org,
	dan.j.williams@intel.com, dave.jiang@intel.com,
	Jonathan.Cameron@huawei.com, linux-cxl@vger.kernel.org,
	rrichter@amd.com
Cc: oe-kbuild-all@lists.linux.dev, linux-kernel@vger.kernel.org,
	bhelgaas@google.com
Subject: Re: [PATCH v2 1/5] cxl/pci: Add RCH downstream port AER and RAS
 register discovery
Message-ID: <202303241632.HTxJ0yfj-lkp@intel.com>
References: <20230323213808.398039-2-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: oe-kbuild-all@lists.linux.dev
List-Id: <oe-kbuild-all.lists.linux.dev>
List-Subscribe: <mailto:oe-kbuild-all+subscribe@lists.linux.dev>
List-Unsubscribe: <mailto:oe-kbuild-all+unsubscribe@lists.linux.dev>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20230323213808.398039-2-terry.bowman@amd.com>

Hi Terry,

Thank you for the patch! Perhaps something to improve:

[auto build test WARNING on pci/next]
[also build test WARNING on pci/for-linus efi/next cxl/next cxl/pending linus/master v6.3-rc3 next-20230324]
[If your patch is applied to the wrong git tree, kindly drop us a note.
And when submitting patch, we suggest to use '--base' as documented in
https://git-scm.com/docs/git-format-patch#_base_tree_information]

url:    https://github.com/intel-lab-lkp/linux/commits/Terry-Bowman/cxl-pci-Add-RCH-downstream-port-AER-and-RAS-register-discovery/20230324-054044
base:   https://git.kernel.org/pub/scm/linux/kernel/git/pci/pci.git next
patch link:    https://lore.kernel.org/r/20230323213808.398039-2-terry.bowman%40amd.com
patch subject: [PATCH v2 1/5] cxl/pci: Add RCH downstream port AER and RAS register discovery
config: parisc-randconfig-s043-20230322 (https://download.01.org/0day-ci/archive/20230324/202303241632.HTxJ0yfj-lkp@intel.com/config)
compiler: hppa-linux-gcc (GCC) 12.1.0
reproduce:
        wget https://raw.githubusercontent.com/intel/lkp-tests/master/sbin/make.cross -O ~/bin/make.cross
        chmod +x ~/bin/make.cross
        # apt-get install sparse
        # sparse version: v0.6.4-39-gce1a6720-dirty
        # https://github.com/intel-lab-lkp/linux/commit/7cbc5c7357504af79c820ad7d0e9369b4a580a65
        git remote add linux-review https://github.com/intel-lab-lkp/linux
        git fetch --no-tags linux-review Terry-Bowman/cxl-pci-Add-RCH-downstream-port-AER-and-RAS-register-discovery/20230324-054044
        git checkout 7cbc5c7357504af79c820ad7d0e9369b4a580a65
        # save the config file
        mkdir build_dir && cp config build_dir/.config
        COMPILER_INSTALL_PATH=$HOME/0day COMPILER=gcc-12.1.0 make.cross C=1 CF='-fdiagnostic-prefix -D__CHECK_ENDIAN__' O=build_dir ARCH=parisc olddefconfig
        COMPILER_INSTALL_PATH=$HOME/0day COMPILER=gcc-12.1.0 make.cross C=1 CF='-fdiagnostic-prefix -D__CHECK_ENDIAN__' O=build_dir ARCH=parisc SHELL=/bin/bash

If you fix the issue, kindly add following tag where applicable
| Reported-by: kernel test robot <lkp@intel.com>
| Link: https://lore.kernel.org/oe-kbuild-all/202303241632.HTxJ0yfj-lkp@intel.com/

sparse warnings: (new ones prefixed by >>)
>> drivers/cxl/core/regs.c:340:24: sparse: sparse: Using plain integer as NULL pointer
   drivers/cxl/core/regs.c:345:24: sparse: sparse: Using plain integer as NULL pointer

vim +340 drivers/cxl/core/regs.c

   338	
   339		if (!request_mem_region(map->resource, map->max_size, name))
 > 340			return 0;
   341	
   342		map->base = ioremap(map->resource, map->max_size);
   343		if (!map->base) {
   344			release_mem_region(map->resource, map->max_size);
   345			return 0;
   346		}
   347	
   348		return map->base;
   349	}
   350	

-- 
0-DAY CI Kernel Test Service
https://github.com/intel/lkp-tests

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 60F377E
	for <oe-kbuild-all@lists.linux.dev>; Fri, 24 Mar 2023 06:31:08 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1679639468; x=1711175468;
  h=date:from:to:cc:subject:message-id:references:
   mime-version:in-reply-to;
  bh=FnjPTKkVqnmJHe9Df3TslawVFi1kARulsCY/YIxS3lw=;
  b=asglqgkLyANGTo+S/URhK2B5gMQgh7DJtU8xha7gfViNVo+CAb8QbYJr
   XsG/kRxEorL3tVyBglSXjiI2h0XdYvHsE+8lBbx7VXKe8/cJypdRXfasE
   gUUi/Dbclhj2s8Go1DiDe9PxXbpAznpK4A6SeV69WDwGulRqT1TSm6M3E
   9iUphTUpIEJuUcxUtgWiF99S5c8pt1McwgBhm7gvh7Jg1wBriTTjeoS94
   2OGzNKCZY9pedIIektSNORLx5nNYbcsrdYi/0hsG4CU3DLI/L2bL4uLPG
   mbvv1I+3a1UUCiKviWcwQEtKxaPJ0tp/2Hi+8mDSgluUQhLonwLzZACoI
   Q==;
X-IronPort-AV: E=McAfee;i="6600,9927,10658"; a="341272825"
X-IronPort-AV: E=Sophos;i="5.98,287,1673942400"; 
   d="scan'208";a="341272825"
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
  by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 23 Mar 2023 23:31:06 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10658"; a="771756023"
X-IronPort-AV: E=Sophos;i="5.98,287,1673942400"; 
   d="scan'208";a="771756023"
Received: from lkp-server01.sh.intel.com (HELO b613635ddfff) ([10.239.97.150])
  by FMSMGA003.fm.intel.com with ESMTP; 23 Mar 2023 23:31:02 -0700
Received: from kbuild by b613635ddfff with local (Exim 4.96)
	(envelope-from <lkp@intel.com>)
	id 1pfax4-000F2u-0o;
	Fri, 24 Mar 2023 06:31:02 +0000
Date: Fri, 24 Mar 2023 14:30:22 +0800
From: kernel test robot <lkp@intel.com>
To: Terry Bowman <terry.bowman@amd.com>, alison.schofield@intel.com,
	vishal.l.verma@intel.com, ira.weiny@intel.com, bwidawsk@kernel.org,
	dan.j.williams@intel.com, dave.jiang@intel.com,
	Jonathan.Cameron@huawei.com, linux-cxl@vger.kernel.org,
	rrichter@amd.com
Cc: oe-kbuild-all@lists.linux.dev, linux-kernel@vger.kernel.org,
	bhelgaas@google.com
Subject: Re: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
Message-ID: <202303241458.BV292BDH-lkp@intel.com>
References: <20230323213808.398039-6-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: oe-kbuild-all@lists.linux.dev
List-Id: <oe-kbuild-all.lists.linux.dev>
List-Subscribe: <mailto:oe-kbuild-all+subscribe@lists.linux.dev>
List-Unsubscribe: <mailto:oe-kbuild-all+unsubscribe@lists.linux.dev>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20230323213808.398039-6-terry.bowman@amd.com>

Hi Terry,

Thank you for the patch! Yet something to improve:

[auto build test ERROR on pci/next]
[also build test ERROR on pci/for-linus efi/next cxl/next linus/master v6.3-rc3 next-20230323]
[cannot apply to cxl/pending]
[If your patch is applied to the wrong git tree, kindly drop us a note.
And when submitting patch, we suggest to use '--base' as documented in
https://git-scm.com/docs/git-format-patch#_base_tree_information]

url:    https://github.com/intel-lab-lkp/linux/commits/Terry-Bowman/cxl-pci-Add-RCH-downstream-port-AER-and-RAS-register-discovery/20230324-054044
base:   https://git.kernel.org/pub/scm/linux/kernel/git/pci/pci.git next
patch link:    https://lore.kernel.org/r/20230323213808.398039-6-terry.bowman%40amd.com
patch subject: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
config: i386-randconfig-a001 (https://download.01.org/0day-ci/archive/20230324/202303241458.BV292BDH-lkp@intel.com/config)
compiler: gcc-11 (Debian 11.3.0-8) 11.3.0
reproduce (this is a W=1 build):
        # https://github.com/intel-lab-lkp/linux/commit/c40ca148e9cff1a1c32cd4c5c9b252bf0cf201b6
        git remote add linux-review https://github.com/intel-lab-lkp/linux
        git fetch --no-tags linux-review Terry-Bowman/cxl-pci-Add-RCH-downstream-port-AER-and-RAS-register-discovery/20230324-054044
        git checkout c40ca148e9cff1a1c32cd4c5c9b252bf0cf201b6
        # save the config file
        mkdir build_dir && cp config build_dir/.config
        make W=1 O=build_dir ARCH=i386 olddefconfig
        make W=1 O=build_dir ARCH=i386 SHELL=/bin/bash drivers/

If you fix the issue, kindly add following tag where applicable
| Reported-by: kernel test robot <lkp@intel.com>
| Link: https://lore.kernel.org/oe-kbuild-all/202303241458.BV292BDH-lkp@intel.com/

All errors (new ones prefixed by >>):

   drivers/cxl/mem.c: In function 'rcec_enable_aer_ints':
>> drivers/cxl/mem.c:51:36: error: 'struct pci_dev' has no member named 'rcec'
      51 |         struct pci_dev *rcec = pdev->rcec;
         |                                    ^~
>> drivers/cxl/mem.c:63:21: error: 'struct pci_dev' has no member named 'aer_cap'; did you mean 'ats_cap'?
      63 |         aer = rcec->aer_cap;
         |                     ^~~~~~~
         |                     ats_cap


vim +51 drivers/cxl/mem.c

    48	
    49	static int rcec_enable_aer_ints(struct pci_dev *pdev)
    50	{
  > 51		struct pci_dev *rcec = pdev->rcec;
    52		int aer, rc;
    53		u32 mask;
    54	
    55		if (!rcec)
    56			return -ENODEV;
    57	
    58		/*
    59		 * Internal errors are masked by default, unmask RCEC's here
    60		 * PCI6.0 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h)
    61		 * PCI6.0 7.8.4.6 Correctable Error Mask Register (Offset 14h)
    62		 */
  > 63		aer = rcec->aer_cap;
    64		rc = pci_read_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, &mask);
    65		if (rc)
    66			return rc;
    67		mask &= ~PCI_ERR_UNC_INTN;
    68		rc = pci_write_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, mask);
    69		if (rc)
    70			return rc;
    71	
    72		rc = pci_read_config_dword(rcec, aer + PCI_ERR_COR_MASK, &mask);
    73		if (rc)
    74			return rc;
    75		mask &= ~PCI_ERR_COR_INTERNAL;
    76		rc = pci_write_config_dword(rcec, aer + PCI_ERR_COR_MASK, mask);
    77	
    78		return rc;
    79	}
    80	

-- 
0-DAY CI Kernel Test Service
https://github.com/intel/lkp-tests

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 367C1210B
	for <oe-kbuild-all@lists.linux.dev>; Fri, 24 Mar 2023 06:10:06 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1679638206; x=1711174206;
  h=date:from:to:cc:subject:message-id:references:
   mime-version:in-reply-to;
  bh=TO2hm86sTvd3UTHGNjd1oaaihJtP0yeWPooZ0l4Oxjc=;
  b=GfOgjBa4EQoHOFJdSGU7X8CnNKL96NSM6V3T18QQ0LPNOtexZWDjWiSR
   feqD2zjiEiHIXaqNs1UTETFX7bfqmEdx6kQtyBtupXCEPc0f4Rg0BXxX4
   kl8D7sMY7S8dyiGZaZNUK9YUAPIV38+0gePTe2IbkaHBA2s8TGzNaQ91y
   GPW0IyReSPyvJQZNUfjTGIKbb8dcSusN4SHrS0+6+oFr0AHh7o5DNQN3U
   AblpoemWd3YkLWyq4+PU/vlQlIHF4K5Wuyy+AQH8CuZ69Yugm9fA1sx3k
   HpEC7xD189/4MIq8qKRDD0HXk38ZR1slYCSyHNq+mg4SQ9U47H+nMZrIZ
   Q==;
X-IronPort-AV: E=McAfee;i="6600,9927,10658"; a="342090141"
X-IronPort-AV: E=Sophos;i="5.98,287,1673942400"; 
   d="scan'208";a="342090141"
Received: from orsmga006.jf.intel.com ([10.7.209.51])
  by orsmga103.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 23 Mar 2023 23:10:05 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10658"; a="659938483"
X-IronPort-AV: E=Sophos;i="5.98,287,1673942400"; 
   d="scan'208";a="659938483"
Received: from lkp-server01.sh.intel.com (HELO b613635ddfff) ([10.239.97.150])
  by orsmga006.jf.intel.com with ESMTP; 23 Mar 2023 23:10:02 -0700
Received: from kbuild by b613635ddfff with local (Exim 4.96)
	(envelope-from <lkp@intel.com>)
	id 1pfacj-000F2O-1f;
	Fri, 24 Mar 2023 06:10:01 +0000
Date: Fri, 24 Mar 2023 14:09:55 +0800
From: kernel test robot <lkp@intel.com>
To: Terry Bowman <terry.bowman@amd.com>, alison.schofield@intel.com,
	vishal.l.verma@intel.com, ira.weiny@intel.com, bwidawsk@kernel.org,
	dan.j.williams@intel.com, dave.jiang@intel.com,
	Jonathan.Cameron@huawei.com, linux-cxl@vger.kernel.org,
	rrichter@amd.com
Cc: oe-kbuild-all@lists.linux.dev, linux-kernel@vger.kernel.org,
	bhelgaas@google.com
Subject: Re: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
Message-ID: <202303241313.B0maYlFU-lkp@intel.com>
References: <20230323213808.398039-6-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: oe-kbuild-all@lists.linux.dev
List-Id: <oe-kbuild-all.lists.linux.dev>
List-Subscribe: <mailto:oe-kbuild-all+subscribe@lists.linux.dev>
List-Unsubscribe: <mailto:oe-kbuild-all+unsubscribe@lists.linux.dev>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20230323213808.398039-6-terry.bowman@amd.com>

Hi Terry,

Thank you for the patch! Yet something to improve:

[auto build test ERROR on pci/next]
[also build test ERROR on pci/for-linus efi/next cxl/next linus/master v6.3-rc3 next-20230323]
[cannot apply to cxl/pending]
[If your patch is applied to the wrong git tree, kindly drop us a note.
And when submitting patch, we suggest to use '--base' as documented in
https://git-scm.com/docs/git-format-patch#_base_tree_information]

url:    https://github.com/intel-lab-lkp/linux/commits/Terry-Bowman/cxl-pci-Add-RCH-downstream-port-AER-and-RAS-register-discovery/20230324-054044
base:   https://git.kernel.org/pub/scm/linux/kernel/git/pci/pci.git next
patch link:    https://lore.kernel.org/r/20230323213808.398039-6-terry.bowman%40amd.com
patch subject: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
config: riscv-randconfig-r024-20230322 (https://download.01.org/0day-ci/archive/20230324/202303241313.B0maYlFU-lkp@intel.com/config)
compiler: riscv64-linux-gcc (GCC) 12.1.0
reproduce (this is a W=1 build):
        wget https://raw.githubusercontent.com/intel/lkp-tests/master/sbin/make.cross -O ~/bin/make.cross
        chmod +x ~/bin/make.cross
        # https://github.com/intel-lab-lkp/linux/commit/c40ca148e9cff1a1c32cd4c5c9b252bf0cf201b6
        git remote add linux-review https://github.com/intel-lab-lkp/linux
        git fetch --no-tags linux-review Terry-Bowman/cxl-pci-Add-RCH-downstream-port-AER-and-RAS-register-discovery/20230324-054044
        git checkout c40ca148e9cff1a1c32cd4c5c9b252bf0cf201b6
        # save the config file
        mkdir build_dir && cp config build_dir/.config
        COMPILER_INSTALL_PATH=$HOME/0day COMPILER=gcc-12.1.0 make.cross W=1 O=build_dir ARCH=riscv olddefconfig
        COMPILER_INSTALL_PATH=$HOME/0day COMPILER=gcc-12.1.0 make.cross W=1 O=build_dir ARCH=riscv SHELL=/bin/bash drivers/cxl/

If you fix the issue, kindly add following tag where applicable
| Reported-by: kernel test robot <lkp@intel.com>
| Link: https://lore.kernel.org/oe-kbuild-all/202303241313.B0maYlFU-lkp@intel.com/

All errors (new ones prefixed by >>):

   drivers/cxl/mem.c: In function 'rcec_enable_aer_ints':
>> drivers/cxl/mem.c:63:21: error: 'struct pci_dev' has no member named 'aer_cap'; did you mean 'ats_cap'?
      63 |         aer = rcec->aer_cap;
         |                     ^~~~~~~
         |                     ats_cap


vim +63 drivers/cxl/mem.c

    48	
    49	static int rcec_enable_aer_ints(struct pci_dev *pdev)
    50	{
    51		struct pci_dev *rcec = pdev->rcec;
    52		int aer, rc;
    53		u32 mask;
    54	
    55		if (!rcec)
    56			return -ENODEV;
    57	
    58		/*
    59		 * Internal errors are masked by default, unmask RCEC's here
    60		 * PCI6.0 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h)
    61		 * PCI6.0 7.8.4.6 Correctable Error Mask Register (Offset 14h)
    62		 */
  > 63		aer = rcec->aer_cap;
    64		rc = pci_read_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, &mask);
    65		if (rc)
    66			return rc;
    67		mask &= ~PCI_ERR_UNC_INTN;
    68		rc = pci_write_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, mask);
    69		if (rc)
    70			return rc;
    71	
    72		rc = pci_read_config_dword(rcec, aer + PCI_ERR_COR_MASK, &mask);
    73		if (rc)
    74			return rc;
    75		mask &= ~PCI_ERR_COR_INTERNAL;
    76		rc = pci_write_config_dword(rcec, aer + PCI_ERR_COR_MASK, mask);
    77	
    78		return rc;
    79	}
    80	

-- 
0-DAY CI Kernel Test Service
https://github.com/intel/lkp-tests

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 096B320F5;
	Fri, 24 Mar 2023 05:40:05 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1679636406; x=1711172406;
  h=date:from:to:cc:subject:message-id:references:
   mime-version:in-reply-to;
  bh=lz4E1YV6Yw7Hz3q4Hij1kHmq1J+RPLt8Y3nDI4SGDMQ=;
  b=hxixpqgFE6d4xPcn6Oe2OFoVWIGTARuSfvc+WvJqLWvBojXeph1G+RZL
   k+HnF3pqORunNunyCEVYd34eTiBF4zlPXHZXXFGHFt0eLqtk62I+fS34M
   PC98X4epCv0XWo4GJj3WEUTX7c9AfvZ2D5/3duNX7SOYjDsYL+AOqaUsY
   +CMYOK3crKjfweWB49gD2bWc4UqE0Dk77H1MWbgNAA0Z7dfI6Ra6f5LrT
   QRk/Ou8zFJOwfslE/D9U3KA9AmfL+04WN/pJEKj7Ut/D+xHwHeBZqeJ3s
   NApdGf+oV8Mu4mP/8I44CioD0wplDs9EN1brbaZF13KlXMyn0U1uylE87
   A==;
X-IronPort-AV: E=McAfee;i="6600,9927,10658"; a="367439464"
X-IronPort-AV: E=Sophos;i="5.98,286,1673942400"; 
   d="scan'208";a="367439464"
Received: from orsmga007.jf.intel.com ([10.7.209.58])
  by fmsmga101.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 23 Mar 2023 22:40:05 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10658"; a="676010886"
X-IronPort-AV: E=Sophos;i="5.98,286,1673942400"; 
   d="scan'208";a="676010886"
Received: from lkp-server01.sh.intel.com (HELO b613635ddfff) ([10.239.97.150])
  by orsmga007.jf.intel.com with ESMTP; 23 Mar 2023 22:40:01 -0700
Received: from kbuild by b613635ddfff with local (Exim 4.96)
	(envelope-from <lkp@intel.com>)
	id 1pfa9g-000F1E-2P;
	Fri, 24 Mar 2023 05:40:00 +0000
Date: Fri, 24 Mar 2023 13:39:03 +0800
From: kernel test robot <lkp@intel.com>
To: Terry Bowman <terry.bowman@amd.com>, alison.schofield@intel.com,
	vishal.l.verma@intel.com, ira.weiny@intel.com, bwidawsk@kernel.org,
	dan.j.williams@intel.com, dave.jiang@intel.com,
	Jonathan.Cameron@huawei.com, linux-cxl@vger.kernel.org,
	rrichter@amd.com
Cc: llvm@lists.linux.dev, oe-kbuild-all@lists.linux.dev,
	linux-kernel@vger.kernel.org, bhelgaas@google.com
Subject: Re: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
Message-ID: <202303241305.7Xdy6342-lkp@intel.com>
References: <20230323213808.398039-6-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: llvm@lists.linux.dev
List-Id: <llvm.lists.linux.dev>
List-Subscribe: <mailto:llvm+subscribe@lists.linux.dev>
List-Unsubscribe: <mailto:llvm+unsubscribe@lists.linux.dev>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20230323213808.398039-6-terry.bowman@amd.com>

Hi Terry,

Thank you for the patch! Yet something to improve:

[auto build test ERROR on pci/next]
[also build test ERROR on pci/for-linus efi/next cxl/next linus/master v6.3-rc3 next-20230323]
[cannot apply to cxl/pending]
[If your patch is applied to the wrong git tree, kindly drop us a note.
And when submitting patch, we suggest to use '--base' as documented in
https://git-scm.com/docs/git-format-patch#_base_tree_information]

url:    https://github.com/intel-lab-lkp/linux/commits/Terry-Bowman/cxl-pci-Add-RCH-downstream-port-AER-and-RAS-register-discovery/20230324-054044
base:   https://git.kernel.org/pub/scm/linux/kernel/git/pci/pci.git next
patch link:    https://lore.kernel.org/r/20230323213808.398039-6-terry.bowman%40amd.com
patch subject: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
config: i386-randconfig-a013 (https://download.01.org/0day-ci/archive/20230324/202303241305.7Xdy6342-lkp@intel.com/config)
compiler: clang version 14.0.6 (https://github.com/llvm/llvm-project f28c006a5895fc0e329fe15fead81e37457cb1d1)
reproduce (this is a W=1 build):
        wget https://raw.githubusercontent.com/intel/lkp-tests/master/sbin/make.cross -O ~/bin/make.cross
        chmod +x ~/bin/make.cross
        # https://github.com/intel-lab-lkp/linux/commit/c40ca148e9cff1a1c32cd4c5c9b252bf0cf201b6
        git remote add linux-review https://github.com/intel-lab-lkp/linux
        git fetch --no-tags linux-review Terry-Bowman/cxl-pci-Add-RCH-downstream-port-AER-and-RAS-register-discovery/20230324-054044
        git checkout c40ca148e9cff1a1c32cd4c5c9b252bf0cf201b6
        # save the config file
        mkdir build_dir && cp config build_dir/.config
        COMPILER_INSTALL_PATH=$HOME/0day COMPILER=clang make.cross W=1 O=build_dir ARCH=i386 olddefconfig
        COMPILER_INSTALL_PATH=$HOME/0day COMPILER=clang make.cross W=1 O=build_dir ARCH=i386 SHELL=/bin/bash drivers/cxl/

If you fix the issue, kindly add following tag where applicable
| Reported-by: kernel test robot <lkp@intel.com>
| Link: https://lore.kernel.org/oe-kbuild-all/202303241305.7Xdy6342-lkp@intel.com/

All errors (new ones prefixed by >>):

>> drivers/cxl/mem.c:51:31: error: no member named 'rcec' in 'struct pci_dev'
           struct pci_dev *rcec = pdev->rcec;
                                  ~~~~  ^
>> drivers/cxl/mem.c:63:14: error: no member named 'aer_cap' in 'struct pci_dev'
           aer = rcec->aer_cap;
                 ~~~~  ^
   2 errors generated.


vim +51 drivers/cxl/mem.c

    48	
    49	static int rcec_enable_aer_ints(struct pci_dev *pdev)
    50	{
  > 51		struct pci_dev *rcec = pdev->rcec;
    52		int aer, rc;
    53		u32 mask;
    54	
    55		if (!rcec)
    56			return -ENODEV;
    57	
    58		/*
    59		 * Internal errors are masked by default, unmask RCEC's here
    60		 * PCI6.0 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h)
    61		 * PCI6.0 7.8.4.6 Correctable Error Mask Register (Offset 14h)
    62		 */
  > 63		aer = rcec->aer_cap;
    64		rc = pci_read_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, &mask);
    65		if (rc)
    66			return rc;
    67		mask &= ~PCI_ERR_UNC_INTN;
    68		rc = pci_write_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, mask);
    69		if (rc)
    70			return rc;
    71	
    72		rc = pci_read_config_dword(rcec, aer + PCI_ERR_COR_MASK, &mask);
    73		if (rc)
    74			return rc;
    75		mask &= ~PCI_ERR_COR_INTERNAL;
    76		rc = pci_write_config_dword(rcec, aer + PCI_ERR_COR_MASK, mask);
    77	
    78		return rc;
    79	}
    80	

-- 
0-DAY CI Kernel Test Service
https://github.com/intel/lkp-tests

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id B7DBDC76196
	for <linux-cxl@archiver.kernel.org>; Tue, 28 Mar 2023 13:53:13 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232348AbjC1NxN (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Tue, 28 Mar 2023 09:53:13 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:60870 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S232289AbjC1NxL (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Tue, 28 Mar 2023 09:53:11 -0400
Received: from NAM11-CO1-obe.outbound.protection.outlook.com (mail-co1nam11on2040.outbound.protection.outlook.com [40.107.220.40])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 614089EF1;
        Tue, 28 Mar 2023 06:53:09 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=g+B3b+DCV8QHRWfBZDgcoLxy9ltSlWi+4OeXvO7BscPi4Vi5bTyX1WsZhvV3pb2WD5GCPSE24Ax01fiTodyR0BVCUJPDJXM0LBNMFQWwVyEFMRKek81Zwx+H8fJF4abMiyGPTQzDeaHuAaWkkkTr8tsHgwpabIoC5zuMcX9ijhlTnoePqmq8KHhsl1mZgwFEford1FD3zzr3OamJVM5wNKlT3KP8UqWN9rJafbgZ3irOHrjk8R+W4VGqp9MldwR1n36BXc8SzM3utpIvNONy6T311o//j5R6qmWzA2+mY6JPVNmyQmnV4B/LZrcSCsUDqEbWfgA8gY/osaYkcl9Skw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=Cm4ac5k33gKia7VJOkNeYKpe1FpCPgBzC9ZtLbvhhOA=;
 b=NrRBu2ywzkSKxFaistIqdT9rkoAdQKjv1hw6kkd1C4G59E6Dfja7wl5vzk30McXzC//MawAqbZgmkAb8ZzL7iHhhfvGjoZZ0qPYiiwNlGt5IaSIGr2JeSqhxBr1PyQqwmZFz+QDNVUf0D5fejSSxI8MnWqRR40k4QuKPp/zUeMkXZUzbBoLuk+A+gI+IMP+xPF96vuVTHSBzfp2l72pVwk2EGdX3k0XM1U3GRn61RhJtOxHLlu9/LNcaB/bCdIZA5ivi3+NGDZdGhlzBW0HeKsinf/R/YXjB+A4j4bXsGEUCj+X5QkmfL1hsosECdxo5yZwzNIz4kVRTWlXbOqgowA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Cm4ac5k33gKia7VJOkNeYKpe1FpCPgBzC9ZtLbvhhOA=;
 b=a+fgo3ks6GVye0qfIg0v6wfwMJJB/WVRYKEiT5o1zSIDxji/b06iGU5T9m/wFh1PUF9NJjcLKAPgHkx+/prAru96PzwZXI6cfdhIFksJ5MK56+TmLEke1D3hEnIvGMCe1/vwQzZFa4aSq768bWW93/mpJswDqjfi5qfRCdnKGLQ=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 SA3PR12MB8048.namprd12.prod.outlook.com (2603:10b6:806:31e::6) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.6222.28; Tue, 28 Mar 2023 13:53:05 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::48cb:9d06:e70b:4b42]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::48cb:9d06:e70b:4b42%5]) with mapi id 15.20.6222.029; Tue, 28 Mar 2023
 13:53:04 +0000
Message-ID: <100233eb-0b9b-358f-a66c-a0cc53af7df2@amd.com>
Date: Tue, 28 Mar 2023 08:53:01 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.7.1
Subject: Re: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
Content-Language: en-US
To: Dave Jiang <dave.jiang@intel.com>, alison.schofield@intel.com,
        vishal.l.verma@intel.com, ira.weiny@intel.com, bwidawsk@kernel.org,
        dan.j.williams@intel.com, Jonathan.Cameron@huawei.com,
        linux-cxl@vger.kernel.org, rrichter@amd.com
Cc: linux-kernel@vger.kernel.org, bhelgaas@google.com
References: <20230323213808.398039-1-terry.bowman@amd.com>
 <20230323213808.398039-6-terry.bowman@amd.com>
 <175c0dcf-5170-0e9a-792c-2fc1cccd52fe@intel.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <175c0dcf-5170-0e9a-792c-2fc1cccd52fe@intel.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-ClientProxiedBy: MN2PR01CA0059.prod.exchangelabs.com (2603:10b6:208:23f::28)
 To DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|SA3PR12MB8048:EE_
X-MS-Office365-Filtering-Correlation-Id: 894d2056-efd6-4678-1c5b-08db2f93c0c1
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: hPomp7f2BMX+UEA48rKhQ3Yf1XL/smSq0tny7D5Uv/NVla7x8/RIXiwWlh4a/uDu2nJbpT1JGQq/8sSzHBJOkLRcXy0yHMKP3jE02iG/xO/IY6aEnp7ObuLJMZsE0P/M5UL2HV7EvrqkDzXHaRr2I+qw0axrMa7CVOyJzPljvFfHXbR2CrN7Z6/myGgqui5Mtm3rNXTcEdrkO9ihwjCWnckZMaeP6U85K6HHldY1qKPZDAvfn+dol7Py/0irbBzIMWgLY6gjsy0Y1faXT1LDD80okxJYhwKY88wN+XRMaXCgctqTpOJw8gvl9Y1R/OfJp/gN/qMACW7f+35XrSQG8rfchTx+JUS+uuzKbtrXwRPkVvUZSjEflA8gEEU/rbPAWwjvPRfUb20+Utj9FvusIUkH9W+t9Z1igJwrdw/Zhfn9BunY6zcvsHDHOTI7aElhUankLdO8KFObdVwrklEdXZcfscLZU3Y8yYRWYsRgtwUBP1pSjUKylmWUz0iPLLqmZLQrNsY82HFYVIE2cr3sAfH8eluuRaRC/gaFV1CoPjzo/elS2MccDLtDhi8OPA5Vm+cqxSyeFwM4dPgn6NWdeJOTMCQBEY77wixUjhONni9UBke479ZBJevRaVUzNs/OrdA9gGZZxsuurdeIPxudYw==
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(4636009)(39860400002)(396003)(376002)(346002)(366004)(136003)(451199021)(4326008)(66946007)(8676002)(66476007)(41300700001)(66556008)(36756003)(5660300002)(2906002)(186003)(83380400001)(30864003)(31696002)(86362001)(38100700002)(2616005)(7416002)(8936002)(6666004)(478600001)(6486002)(6636002)(966005)(31686004)(53546011)(6506007)(6512007)(26005)(316002)(43740500002)(45980500001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?R2Fpa0RHVzVDQUNrbjg1MDIxajZoZ1AyV2xiczVBOXphYTZicWhDOWlGcTRz?=
 =?utf-8?B?WXpzL0wwSmxSR0ZqMlR1Q3BwRVpmRHRkT0RMRTRraHNjdU9SUFlBbXIyeVQv?=
 =?utf-8?B?SENha0RDT0g2WkZUQ1dkekE2Nlh1Um50dk91bUY5b2RkMEw3ZldUSml5UHFk?=
 =?utf-8?B?M1NUU1Z3TkdWZEwvOURHL25VaSs2YUlubUdNRW5nN29YTGozT2UwdVNWVDNF?=
 =?utf-8?B?cUVYc1ZWVXAzbC9GbW9GSndLV1dHbnZNUGFmaDlqa09CNTJqbVM3dmZ5ZlpH?=
 =?utf-8?B?V2lDeERKUjJJRmYwMitmT01tMkQ5MEFOUG9Ma2pwbUE0clBXdC9hU1Vuc2lP?=
 =?utf-8?B?aU1Qby8rMlEvYkVIRGpWUWhGbG45SmZvcGV1Tno0a1BiQlBDaVdrNGNxaVJW?=
 =?utf-8?B?Uno2ZzRHeFdKU2Jza2xXY3RkSmU3eDQ2TkFuTnJYaWlXaTlEMnAxZkEwUXJB?=
 =?utf-8?B?V25ZTEpNdnlMd0I5SjdlbGJ5RFk0djI0L0tvNFB5NlltWWFwdk4weUVBeFdF?=
 =?utf-8?B?bDNudXFCMDlGcDZlSm1BQWE4WWdxemdHUzFxVlhJK3JOdmxTbkZYNDlpSTZm?=
 =?utf-8?B?Nllad1FmQ3RNTFJ5ZmlCVVA4Ty9NSm5SemRjZStyaDFLVHFnd0Z0dC9MZnBZ?=
 =?utf-8?B?RGNOU0Q1QmswSXdjMk9RWERFZ0E2WkFKK2VjNGZ6dEptWStFSjArMkdSWXlP?=
 =?utf-8?B?endOdHhON0NobTdKYjlxQ1VBK01mWEdCZDZsOUdTc3EyNkdBNWNISmNUWG1M?=
 =?utf-8?B?RkRMaEh2ZXByR2ZJVytwd2t3dEl6SjAzanJsTk1UejUyNzJlSVR1VHRpOG14?=
 =?utf-8?B?UzZIejNaY05WdWdGeXVxM2hXaVZ2OVRYVlBCVzJsMDNMN1dPQ0E1aXJGQ1Ev?=
 =?utf-8?B?aE8xK3pkb3o5RVI4SEQ1VmRaTUt0Zk9jQ213eExzNlo4V0tneFVxZnNTZEhJ?=
 =?utf-8?B?VHBlaDZ5alo4akVDRDRzSDdHZ2poSXluRFdNRVIrb29JVzE2R0Z1WkJ5RWtV?=
 =?utf-8?B?blhKZzZXZ0g3VTBmMHk1Y3JxTFpKcTFqM1MxTER5YStpb25jcCt1c05FemxL?=
 =?utf-8?B?QklBQ05wOWJYdnU5MGlxRUpGR1dPNTV3MW9pUUowUGpVMDUxVlYxNnVtZjZY?=
 =?utf-8?B?bXZ6OUVuZjhzeklvbHZTL3lqcWlHVXRKMFhDYVhUN1g2UHZhRXBhak4rSTJo?=
 =?utf-8?B?Ti9NZkdJTEhHN1VTZVNMTW50WkduOFBnejEwa3I0d2lJdXRJR2FISDhBTDJY?=
 =?utf-8?B?N21GRzMwdzJudTdmVWZBR1EySGRPWFdCblFoM202WWNpREthRytsTE5Cd2Q3?=
 =?utf-8?B?S0dVc2dudkVKOFNaTjROVWJIQi9PdEVQYm4yUVdmUFN1bFBGMTBVK1NnWFNZ?=
 =?utf-8?B?alBqVzNvWVNtRXJWWVN5YmlnWGtrQlo3eWZ5SE1BTTJTY240b3Z5N0x3Tk5o?=
 =?utf-8?B?TEpnRE1xNktQd3JWSXFYcGs5SG5LamJKQVp3V1A3K3lLRXRyblhuYm0vdkQy?=
 =?utf-8?B?anRocmJrNVZnQjZiMUxEcjlxNmpTZS9ZSnpPcldHWHZRVUF6MGtZRVc3akE4?=
 =?utf-8?B?dmxRV0xGUEhVZktCYzRZanNsVzVEcVg1S3lpaGZudmxDYm5yaXlqZi8rSTUy?=
 =?utf-8?B?R212SzByR0Z6NXpzMG11YmtuRlRRZkU2TWN4Yk9VS0ZmMXBhbFlXSzljRjJC?=
 =?utf-8?B?ZDRHRUFiNU45NW9DaDVRRjZqZXV1b1Z6clNyU1hZN29YVWtublBrNFM1cHp3?=
 =?utf-8?B?cExnWEpNajFmK0ZRbitYTkIwOGdhbmNYeGF0QlBsTUhia1lYdnlSQ3R1VnlL?=
 =?utf-8?B?dDlmR0hkQlMxRU5saEROSndNMGZUTzdtdlhPQmswNnU3NEd5QTFsVWhtM2Y2?=
 =?utf-8?B?aUhzTGVibEc0K1ZJNUdMSnpMbnNjOXljZlNHcDRtVk9YbUJNSzd2N2lyM3d2?=
 =?utf-8?B?bkwwbnhrcWNuT3AxSk1ZQzRUYnRaem5NdzRSTnIyVDNtVGx5NnNnZmt4Q2d6?=
 =?utf-8?B?SkFMS0ZqS09TbDltRWxXaU44cUJLOEUrbVVHUVB5T2RtYW45SmZRSVdXaEhr?=
 =?utf-8?B?RDlhUlA3VC9UVEtRYkpnWmhWZzdCQk1UWUlFMGRqVkpaak1EOUQxZGxpMUgx?=
 =?utf-8?Q?TwrVgswrCdJn99HkyY0T9ZMIa?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 894d2056-efd6-4678-1c5b-08db2f93c0c1
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 28 Mar 2023 13:53:04.4841
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: QOicE/8KOyRut7t93akgLnpR42aDxG6TakgwJ8SgJbMDdpqXbu2ycpDU3B0q8DLM2SGy2iP1ITpMDo9qAQeDcA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA3PR12MB8048
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Hi dave,


On 3/27/23 18:21, Dave Jiang wrote:
> 
> 
> On 3/23/23 2:38 PM, Terry Bowman wrote:
>> RCH downstream port error logging is missing in the current CXL driver. The
>> missing AER and RAS error logging is needed for communicating driver error
>> details to userspace. Update the driver to include PCIe AER and CXL RAS
>> error logging.
>>
>> Add RCH downstream port error handling into the existing RCiEP handler.
>> The downstream port error handler is added to the RCiEP error handler
>> because the downstream port is implemented in a RCRB, is not PCI
>> enumerable, and as a result is not directly accessible to the PCI AER
>> root port driver. The AER root port driver calls the RCiEP handler for
>> handling RCD errors and RCH downstream port protocol errors.
>>
>> Update the cxl_mem driver to map the RCH RAS and AER register discovered
>> earlier. The RAS and AER registers will be used in the RCH error handlers.
>>
>> Disable RCH downstream port's root port cmd interrupts. Enable RCEC AER
>> CIE/UIE reporting because they are disabled by default.[1]
>>
>> Update existing RCiEP correctable and uncorrectable handlers to also call
>> the RCH handler. The RCH handler will read the downstream port AER
>> registers, check for error severity, and if an error exists will log
>> using an existing kernel AER trace routine. The RCH handler will also
>> reuse the existing RAS logging routine to log downstream port RAS
>> errors if they exist.
>>
>> [1] CXL 3.0 Spec, 12.2.1.1 - RCH Downstream Port Detected Errors
>>
>> Co-developed-by: Robert Richter <rrichter@amd.com>
>> Signed-off-by: Robert Richter <rrichter@amd.com>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> ---
>>   drivers/cxl/core/pci.c  | 126 +++++++++++++++++++++++++++++++++----
>>   drivers/cxl/core/regs.c |   1 +
>>   drivers/cxl/cxl.h       |  13 ++++
>>   drivers/cxl/mem.c       | 134 ++++++++++++++++++++++++++++++++++++++++
>>   4 files changed, 262 insertions(+), 12 deletions(-)
>>
>> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
>> index 7328a2552411..6e36471969ba 100644
>> --- a/drivers/cxl/core/pci.c
>> +++ b/drivers/cxl/core/pci.c
>> @@ -5,6 +5,7 @@
>>   #include <linux/delay.h>
>>   #include <linux/pci.h>
>>   #include <linux/pci-doe.h>
>> +#include <linux/aer.h>
>>   #include <cxlpci.h>
>>   #include <cxlmem.h>
>>   #include <cxl.h>
>> @@ -605,32 +606,88 @@ void read_cdat_data(struct cxl_port *port)
>>   }
>>   EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
>>   -void cxl_cor_error_detected(struct pci_dev *pdev)
>> +/* Get AER severity. Return false if there is no error. */
>> +static bool cxl_rch_get_aer_severity(struct aer_capability_regs *aer_regs,
>> +                     int *severity)
>> +{
>> +    if (aer_regs->uncor_status & ~aer_regs->uncor_mask) {
>> +        if (aer_regs->uncor_status & PCI_ERR_ROOT_FATAL_RCV)
>> +            *severity = AER_FATAL;
>> +        else
>> +            *severity = AER_NONFATAL;
>> +        return true;
>> +    }
>> +
>> +    if (aer_regs->cor_status & ~aer_regs->cor_mask) {
>> +        *severity = AER_CORRECTABLE;
>> +        return true;
>> +    }
>> +
>> +    return false;
>> +}
>> +
>> +/*
>> + * Copy the AER capability registers to a buffer. This is necessary
>> + * because RCRB AER capability is MMIO mapped. Clear the status
>> + * after copying.
>> + *
>> + * @aer_base: base address of AER capability block in RCRB
>> + * @aer_regs: destination for copying AER capability
>> + */
>> +static bool cxl_rch_get_aer_info(void __iomem *aer_base,
>> +                 struct aer_capability_regs *aer_regs)
>> +{
>> +    int read_cnt = PCI_AER_CAPABILITY_LENGTH / sizeof(u32);
>> +    u32 *aer_regs_buf = (u32 *)aer_regs;
>> +    int n;
>> +
>> +    if (!aer_base)
>> +        return false;
>> +
>> +    for (n = 0; n < read_cnt; n++)
>> +        aer_regs_buf[n] = readl(aer_base + n * sizeof(u32));
>> +
>> +    writel(aer_regs->uncor_status, aer_base + PCI_ERR_UNCOR_STATUS);
>> +    writel(aer_regs->cor_status, aer_base + PCI_ERR_COR_STATUS);
>> +
>> +    return true;
>> +}
>> +
>> +static void __cxl_log_correctable_ras(struct cxl_dev_state *cxlds,
>> +                      void __iomem *ras_base)
>>   {
>> -    struct cxl_dev_state *cxlds = pci_get_drvdata(pdev);
>>       void __iomem *addr;
>>       u32 status;
>>   -    if (!cxlds->regs.ras)
>> +    if (!ras_base)
>>           return;
>>   -    addr = cxlds->regs.ras + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
>> +    addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
>>       status = readl(addr);
>>       if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
>>           writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
>>           trace_cxl_aer_correctable_error(cxlds->cxlmd, status);
>>       }
>>   }
>> -EXPORT_SYMBOL_NS_GPL(cxl_cor_error_detected, CXL);
>> +
>> +static void cxl_log_correctable_ras_endpoint(struct cxl_dev_state *cxlds)
>> +{
>> +    return __cxl_log_correctable_ras(cxlds, cxlds->regs.ras);
>> +}
>> +
>> +static void cxl_log_correctable_ras_dport(struct cxl_dev_state *cxlds)
>> +{
>> +    return __cxl_log_correctable_ras(cxlds, cxlds->regs.dport_ras);
>> +}
>>     /* CXL spec rev3.0 8.2.4.16.1 */
>> -static void header_log_copy(struct cxl_dev_state *cxlds, u32 *log)
>> +static void header_log_copy(void __iomem *ras_base, u32 *log)
>>   {
>>       void __iomem *addr;
>>       u32 *log_addr;
>>       int i, log_u32_size = CXL_HEADERLOG_SIZE / sizeof(u32);
>>   -    addr = cxlds->regs.ras + CXL_RAS_HEADER_LOG_OFFSET;
>> +    addr = ras_base + CXL_RAS_HEADER_LOG_OFFSET;
>>       log_addr = log;
>>         for (i = 0; i < log_u32_size; i++) {
>> @@ -644,17 +701,18 @@ static void header_log_copy(struct cxl_dev_state *cxlds, u32 *log)
>>    * Log the state of the RAS status registers and prepare them to log the
>>    * next error status. Return 1 if reset needed.
>>    */
>> -static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
>> +static bool __cxl_report_and_clear(struct cxl_dev_state *cxlds,
>> +                  void __iomem *ras_base)
>>   {
>>       u32 hl[CXL_HEADERLOG_SIZE_U32];
>>       void __iomem *addr;
>>       u32 status;
>>       u32 fe;
>>   -    if (!cxlds->regs.ras)
>> +    if (!ras_base)
>>           return false;
>>   -    addr = cxlds->regs.ras + CXL_RAS_UNCORRECTABLE_STATUS_OFFSET;
>> +    addr = ras_base + CXL_RAS_UNCORRECTABLE_STATUS_OFFSET;
>>       status = readl(addr);
>>       if (!(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK))
>>           return false;
>> @@ -662,7 +720,7 @@ static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
>>       /* If multiple errors, log header points to first error from ctrl reg */
>>       if (hweight32(status) > 1) {
>>           void __iomem *rcc_addr =
>> -            cxlds->regs.ras + CXL_RAS_CAP_CONTROL_OFFSET;
>> +            ras_base + CXL_RAS_CAP_CONTROL_OFFSET;
>>             fe = BIT(FIELD_GET(CXL_RAS_CAP_CONTROL_FE_MASK,
>>                      readl(rcc_addr)));
>> @@ -670,13 +728,54 @@ static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
>>           fe = status;
>>       }
>>   -    header_log_copy(cxlds, hl);
>> +    header_log_copy(ras_base, hl);
>>       trace_cxl_aer_uncorrectable_error(cxlds->cxlmd, status, fe, hl);
>>       writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
>>         return true;
>>   }
>>   +static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
>> +{
>> +    return __cxl_report_and_clear(cxlds, cxlds->regs.ras);
>> +}
>> +
>> +static bool cxl_report_and_clear_dport(struct cxl_dev_state *cxlds)
>> +{
>> +    return __cxl_report_and_clear(cxlds, cxlds->regs.dport_ras);
>> +}
>> +
>> +static void cxl_rch_log_error(struct cxl_dev_state *cxlds)
>> +{
>> +    struct pci_dev *pdev = to_pci_dev(cxlds->dev);
>> +    struct aer_capability_regs aer_regs;
>> +    int severity;
>> +
>> +    if (!cxl_rch_get_aer_info(cxlds->regs.aer, &aer_regs))
>> +        return;
>> +
>> +    if (!cxl_rch_get_aer_severity(&aer_regs, &severity))
>> +        return;
>> +
>> +    cper_print_aer(pdev, severity, &aer_regs);
>> +
>> +    if (severity == AER_CORRECTABLE)
>> +        cxl_log_correctable_ras_dport(cxlds);
>> +    else
>> +        cxl_report_and_clear_dport(cxlds);
>> +}
>> +
>> +void cxl_cor_error_detected(struct pci_dev *pdev)
>> +{
>> +    struct cxl_dev_state *cxlds = pci_get_drvdata(pdev);
>> +
>> +    if (cxlds->rcd)
>> +        cxl_rch_log_error(cxlds);
>> +
>> +    cxl_log_correctable_ras_endpoint(cxlds);
>> +}
>> +EXPORT_SYMBOL_NS_GPL(cxl_cor_error_detected, CXL);
>> +
>>   pci_ers_result_t cxl_error_detected(struct pci_dev *pdev,
>>                       pci_channel_state_t state)
>>   {
>> @@ -685,6 +784,9 @@ pci_ers_result_t cxl_error_detected(struct pci_dev *pdev,
>>       struct device *dev = &cxlmd->dev;
>>       bool ue;
>>   +    if (cxlds->rcd)
>> +        cxl_rch_log_error(cxlds);
>> +
>>       /*
>>        * A frozen channel indicates an impending reset which is fatal to
>>        * CXL.mem operation, and will likely crash the system. On the off
>> diff --git a/drivers/cxl/core/regs.c b/drivers/cxl/core/regs.c
>> index 108a349d8101..7130f35891da 100644
>> --- a/drivers/cxl/core/regs.c
>> +++ b/drivers/cxl/core/regs.c
>> @@ -198,6 +198,7 @@ void __iomem *devm_cxl_iomap_block(struct device *dev, resource_size_t addr,
>>         return ret_val;
>>   }
>> +EXPORT_SYMBOL_NS_GPL(devm_cxl_iomap_block, CXL);
>>     int cxl_map_component_regs(struct device *dev, struct cxl_component_regs *regs,
>>                  struct cxl_register_map *map, unsigned long map_mask)
>> diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
>> index 9fd7df48ce99..7036e34354bc 100644
>> --- a/drivers/cxl/cxl.h
>> +++ b/drivers/cxl/cxl.h
>> @@ -66,6 +66,8 @@
>>   #define CXL_DECODER_MIN_GRANULARITY 256
>>   #define CXL_DECODER_MAX_ENCODED_IG 6
>>   +#define PCI_AER_CAPABILITY_LENGTH 56
>> +
>>   static inline int cxl_hdm_decoder_count(u32 cap_hdr)
>>   {
>>       int val = FIELD_GET(CXL_HDM_DECODER_COUNT_MASK, cap_hdr);
>> @@ -209,6 +211,15 @@ struct cxl_regs {
>>       struct_group_tagged(cxl_device_regs, device_regs,
>>           void __iomem *status, *mbox, *memdev;
>>       );
>> +
>> +    /*
>> +     * Pointer to RCH cxl_dport AER. (only for RCH/RCD mode)
>> +     * @dport_aer: CXL 2.0 12.2.11 RCH Downstream Port-detected Errors
>> +     */
>> +    struct_group_tagged(cxl_rch_regs, rch_regs,
>> +        void __iomem *aer;
>> +        void __iomem *dport_ras;
>> +    );
>>   };
>>     struct cxl_reg_map {
>> @@ -249,6 +260,8 @@ struct cxl_register_map {
>>       };
>>   };
>>   +void __iomem *devm_cxl_iomap_block(struct device *dev, resource_size_t addr,
>> +                   resource_size_t length);
>>   void cxl_probe_component_regs(struct device *dev, void __iomem *base,
>>                     struct cxl_component_reg_map *map);
>>   void cxl_probe_device_regs(struct device *dev, void __iomem *base,
>> diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
>> index 12e8e8ebaac0..e217c44ed749 100644
>> --- a/drivers/cxl/mem.c
>> +++ b/drivers/cxl/mem.c
>> @@ -4,6 +4,7 @@
>>   #include <linux/device.h>
>>   #include <linux/module.h>
>>   #include <linux/pci.h>
>> +#include <linux/aer.h>
>>     #include "cxlmem.h"
>>   #include "cxlpci.h"
>> @@ -45,6 +46,132 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
>>       return 0;
>>   }
>>   +static int rcec_enable_aer_ints(struct pci_dev *pdev)
>> +{
>> +    struct pci_dev *rcec = pdev->rcec;
>> +    int aer, rc;
>> +    u32 mask;
>> +
>> +    if (!rcec)
>> +        return -ENODEV;
>> +
>> +    /*
>> +     * Internal errors are masked by default, unmask RCEC's here
>> +     * PCI6.0 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h)
>> +     * PCI6.0 7.8.4.6 Correctable Error Mask Register (Offset 14h)
>> +     */
>> +    aer = rcec->aer_cap;
>> +    rc = pci_read_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, &mask);
>> +    if (rc)
>> +        return rc;
>> +    mask &= ~PCI_ERR_UNC_INTN;
>> +    rc = pci_write_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, mask);
>> +    if (rc)
>> +        return rc;
>> +
>> +    rc = pci_read_config_dword(rcec, aer + PCI_ERR_COR_MASK, &mask);
>> +    if (rc)
>> +        return rc;
>> +    mask &= ~PCI_ERR_COR_INTERNAL;
>> +    rc = pci_write_config_dword(rcec, aer + PCI_ERR_COR_MASK, mask);
>> +
>> +    return rc;
>> +}
>> +
>> +static void disable_aer(void *_pdev)
>> +{
>> +    struct pci_dev *pdev = (struct pci_dev *)_pdev;
>> +
>> +    pci_disable_pcie_error_reporting(pdev);
>> +
>> +    /*
>> +     * Keep the RCEC's internal AER enabled. There
>> +     * could be other RCiEPs using this RCEC.
>> +     */
>> +}
>> +
>> +static void rch_disable_root_ints(void __iomem *aer_base)
>> +{
>> +    u32 aer_cmd_mask, aer_cmd;
>> +
>> +    /*
>> +     * Disable RCH root port command interrupts.
>> +     * CXL3.0 12.2.1.1 - RCH Downstream Port-detected Errors
>> +     */
>> +    aer_cmd_mask = (PCI_ERR_ROOT_CMD_COR_EN |
>> +            PCI_ERR_ROOT_CMD_NONFATAL_EN |
>> +            PCI_ERR_ROOT_CMD_FATAL_EN);
>> +    aer_cmd = readl(aer_base + PCI_ERR_ROOT_COMMAND);
>> +    aer_cmd &= ~aer_cmd_mask;
>> +    writel(aer_cmd, aer_base + PCI_ERR_ROOT_COMMAND);
>> +}
>> +
>> +static int cxl_ras_setup_interrupts(struct cxl_dev_state *cxlds)
>> +{
>> +    struct pci_dev *pdev = to_pci_dev(cxlds->dev);
>> +    int rc;
>> +
>> +    if (cxlds->rcd) {
>> +        rch_disable_root_ints(cxlds->regs.aer);
>> +
>> +        rc = rcec_enable_aer_ints(pdev);
>> +        if (rc)
>> +            return rc;
>> +    }
>> +
>> +    rc = pci_enable_pcie_error_reporting(pdev);
> 
> Hi Terry, not sure if you saw this thread [1], but with the new changes upstream [2] to the PCIe subsystem, Bjorn says we no longer need to call pci_enable_pcie_error_report() by the driver.
> 
> [1]: https://lore.kernel.org/linux-cxl/c2e244bd-a94b-8de2-e43c-7ff8a756cbc7@intel.com/T/#mef401fb0580ebb4c4bc2a164f87e12b60cf76693
> [2]: commit f26e58bf6f54 ("PCI/AER: Enable error reporting when AER is native")
> 
> DJ
> 

Ok. I'll remove the call to pci_enable_pcie_error_reporting(). This 
will help simplify since it allows removing disable_aer() and call 
to devm_add_action_or_reset() as well.

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 89486C6FD18
	for <linux-cxl@archiver.kernel.org>; Tue, 28 Mar 2023 13:42:02 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232440AbjC1NmB (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Tue, 28 Mar 2023 09:42:01 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:42372 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S230467AbjC1Nlw (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Tue, 28 Mar 2023 09:41:52 -0400
Received: from NAM02-DM3-obe.outbound.protection.outlook.com (mail-dm3nam02on2063.outbound.protection.outlook.com [40.107.95.63])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id C31D9C65C;
        Tue, 28 Mar 2023 06:41:43 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Ce8lVYXZfVhGAHj1y5HzjPtKkMglwF3mfaGY+kAi0qALINZXvgOGnJKQQTtBMo3SfSYSkZiHXI8JVBwhQ6tnMVmglbg/SNRwr26Ix4X53gYtVQ+jQ844BSe65z7W7g4FcRdO85kPvGTAexBNYWJHJySyVcM7OUuu/SlyDPmIqaqs4wBUN57dIs1XDT4tSqnj7Kk+CnFf4QI6zXz2CCa23PejlQqsiRJiDb+h6hp4+t/3cFLYXSphPSQH7IMaDHcOPe7PncZw9mm574Ga5ykcM1vwN3+/iGk/KN70T0DM3keoeYrzn2OEw4fRHw8StVmyol16TWPqlnu7hU0o2fUOkw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=E4SxLtzKX37yQ6BJVk0rZkAoB+KcL8Yj02KhX3ZF7w8=;
 b=B4OKeGFMZKedfcmR16QBJITBASIqOjcEWEKVhhdGhEnxPwtmCTXtjmsOb8XPVhXhURYuLqRq1yTfSZCDyBjVw9cUcrJqa+WQFPUPs7HFMKR1weQwBWncM5pCah5N74gbrFClhZJ853poLNtG017v32K9zpG5fUVG7HdVuvhV/PRC8wXOvB8JNqi5g+K4DqFV6Zi1uhS0nmViUOHuePMf6el7nhPYnzkXuuLKYq82kEMD3t1x/Db6jlPkQTTVl72jClaAQbEJG/y54IPQGp0BGXfLzjIhNF0lUxj2UnspjInWOLNzM45IYb+6EVwC+0WdcecIMgb7iuyARgFMI1XP5Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=E4SxLtzKX37yQ6BJVk0rZkAoB+KcL8Yj02KhX3ZF7w8=;
 b=BjOGTEepdVorc6vUX5AbL5HcfxfUU4xG5l1xcPTnYKVqz/5Zo9BCDaqjXIIIduBPvDPwbZvJbT9fei9wxKnDMXOwZDBv/9NkzUB8mNxZAmxqHWIxgUNOq4LYeuMM16cR8aExidh43M2+MtCbiQ5mL3WeRVQwxcQV/qTc4KkY1Xc=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 CH0PR12MB5139.namprd12.prod.outlook.com (2603:10b6:610:be::9) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.6222.33; Tue, 28 Mar 2023 13:41:41 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::48cb:9d06:e70b:4b42]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::48cb:9d06:e70b:4b42%5]) with mapi id 15.20.6222.029; Tue, 28 Mar 2023
 13:41:41 +0000
Message-ID: <c03b8d66-65d9-40fc-dd0a-1b8154e24f6e@amd.com>
Date: Tue, 28 Mar 2023 08:41:38 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.7.1
Subject: Re: [PATCH v2 4/5] cxl/pci: Forward RCH downstream port-detected
 errors to the CXL.mem dev handler
Content-Language: en-US
To: Bjorn Helgaas <helgaas@kernel.org>
Cc: alison.schofield@intel.com, vishal.l.verma@intel.com,
        ira.weiny@intel.com, bwidawsk@kernel.org, dan.j.williams@intel.com,
        dave.jiang@intel.com, Jonathan.Cameron@huawei.com,
        linux-cxl@vger.kernel.org, rrichter@amd.com,
        linux-kernel@vger.kernel.org, bhelgaas@google.com
References: <20230324223656.GA2660301@bhelgaas>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20230324223656.GA2660301@bhelgaas>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: CH0PR04CA0116.namprd04.prod.outlook.com
 (2603:10b6:610:75::31) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|CH0PR12MB5139:EE_
X-MS-Office365-Filtering-Correlation-Id: a788f7f8-3b95-44a0-f64a-08db2f922950
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: XUsjnQ1PJcLDKhxJRgmna9xY58yxSt6i0Ar0sOlhKWhysfHtAfdy3t0M4msrOafpwWNtm8vp+LEz1kOjiYv69A9+lesxfrOPTaP2UWszl6C4Dn1uAF/e5+HufM9DbHNPds2qgkHcHO/uSO8/vt8YLp0P7gAgvWqws/QISx4AKTMsoYRJeaK8pYbyRXPNsixZLgsmMK4iG/0mIv+2BqMt9zu/kkn3v6kS8zlyLP9D+u+hGNsUh0aDtyMJhX59adXc0kxD/2/zWKFypXOko4Qp78YUOKHEIv/9+jD7fpJThk68CPK55wLc0XJIyU8IEdDyFqCYvcqqHU6Yf7EG03A8kfzc4JNoKddvnGXDIiimPpRATBUQjX7gTAceXeAwk9qdtZxxwOdoOyOzAef6p5qjxPqXBQd8SxiXiG8JU3ik6A32dhqWqoZwP6dLHVQaxZ7SgBQ+0yCQrq5H62KfiVP0wOEYtzislhG5OfZX6SX4PJnty8YYSKSHclF2p8I5tlooEssTqrziupo7wi1FKg2ztieN0HcZsPKLeNxh1mpUnr/xfrsDMqY3l+0K3lilUx3coI9/QfBwSBV5DyEuFv2xyrV5YbwSabkq4PewLSw05hxAggw8no0diqOF+mA2UVptYzS/iLp4VSJQMeUoVyn91A==
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(4636009)(376002)(39860400002)(346002)(366004)(136003)(396003)(451199021)(186003)(6666004)(316002)(53546011)(6512007)(26005)(6506007)(2616005)(83380400001)(31686004)(6486002)(478600001)(38100700002)(7416002)(31696002)(86362001)(8936002)(5660300002)(41300700001)(36756003)(66476007)(4326008)(66946007)(66556008)(6916009)(8676002)(2906002)(43740500002)(45980500001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?TFlFc2p3ZXhxZ3VUZ0lsd0VPZ01aQUJtb256TkpsT3ZyeFRIcEYrUkZwUU5E?=
 =?utf-8?B?elZ4TEVydFhDUTFXeGZZdTFaRTAwUWVaQTAzd1BBSlNlUU8zR1N5RDJrVjZN?=
 =?utf-8?B?MUhVRmt0M28vVENvdlV2b051MjB4dmF4OGpOaGRlUi9HRlFqQ3RITytyYjVT?=
 =?utf-8?B?bG8yY0lJdFNTZ1RkekwxS2ZnZUtuOVpPZW5UYUVyWjVkcXIwMUZPdVExRGJR?=
 =?utf-8?B?eUVpazhHK3VpWHBYLy9KSUhWZFFmeWpGYTMwUlJheDdlWDlVYkNRa3BnV3cw?=
 =?utf-8?B?bW5EeEsvREdVVXdRbkh2a0RDTi9tVDBFeDJObjNLTU03SEhsUWl4UmNOSW5m?=
 =?utf-8?B?LzlXZHlQUVc1MEZXMitXdXVJSDlFQnVNYWx6MGEzU25ydFRIR0dtYTl6Uno3?=
 =?utf-8?B?cFVXN3FqOEVqNDJDQitJczRQdFc0SlNYUnZ5bkpadC9nK0tzLzF1M2pkSzFI?=
 =?utf-8?B?eGpXbVZrTE1hK3I4VVQ5V0h6THhDaFgzSFBMS2FaUGg4ZUhGaWk0b1ZpMHdh?=
 =?utf-8?B?QW1yUjBuem93U2VyaXoxTjFTOFcxNUc0by9NT29WREpwblVIYVZUOGYwam1o?=
 =?utf-8?B?VWFHTkZTQmZLclA0WW5tdzNYNTJFdTZSUGZmZFhzY3Y0Vk1oMHpmeEZuYUtD?=
 =?utf-8?B?S04yNENzbVc3K1dxOXVPV2w3UVdQdHhKRm5nV3FEQXFKUjhWVUpKekJjTnp5?=
 =?utf-8?B?L1RzUENjNjdzSUh6c21nTDc0Rmx5QXNHSUJxaTJHMm95TnVpVEpmVENkcDFN?=
 =?utf-8?B?MHNqSEtuclJ4WkVqUUJPaERGM1oxWVM2OFRJbnFnL21TcDh3b3dzMWpkdHh5?=
 =?utf-8?B?bUlMNm8veEpNdE5Kckg4N1psNlIvcldTRCtRek5vMFRQVVVzVktxRHg4c2dF?=
 =?utf-8?B?OVdXbXV4a1BkWTZKM0VuRGg2ZmFSWWt5MzMzZXlwYVpBTXNoeWpqOTkra2F4?=
 =?utf-8?B?RndrVW1ub1I3aEMvZlVXaUZIaW5ISmtkdFNMSkhDNENNamkvMUw3Qm4xT1JX?=
 =?utf-8?B?ZDdxOXFiQTd4b21SWElBMkxOQmpnOUdrZ2ZVTk9EZWRNdjY4Zm1oSmsvclN0?=
 =?utf-8?B?Si9WSEZzeU5jbXluajU3UmZNZU9laVFTQW4rcHVNMmt3Z2JwUEVLWEdZZTJo?=
 =?utf-8?B?MVRIR2JucWJ6cUlmMWw5MmdleDN3WDcwdGNOaFJOcWQ5M1NrNElOaFcyMGJt?=
 =?utf-8?B?VCtaTmxqZjdVMlNhTnJmSXBvd3JISUtCZXFlWFBRTjlvOUJaK1M3UVZ0L0RX?=
 =?utf-8?B?SmI4OGRxN25CSlE3Sm9sK0lhTkR4a1NlVlA1V1ZodGpyOXVJdktRcHhuYkFu?=
 =?utf-8?B?ejlYeFdlSksxV3pkbjBlNmw0ZjFXK1g0SHYvS3B5RGtHbHdLUXI2WGFvUzAw?=
 =?utf-8?B?T3E1UC9uS0NwN3BybXRXVTZ6bGNlRjE2NmFia01aTmxXMGtuOFdBUmpGQnVG?=
 =?utf-8?B?RmRsbVAzNzVZT1VGeXZxZTQ2WTc2b3d3Nmh2T0ZLMUFSNmcvZDNhcU1KS1pk?=
 =?utf-8?B?L1JBYloyZEs3QkNqTGFUOGNMaGNwNVVPYzRXSUMzelNieFpKSERSZENLS1Ni?=
 =?utf-8?B?QXJnclpxR0FzRmdQZ0I3Mm1IbFZuMXhhL3VJT05RSlY2YXRSL2NnTkEwWmo4?=
 =?utf-8?B?Q20wWnYwQStoV28zK2VKdWszejlkWFhkZkZPUEZYQ2VFWVNYMjZOeUVpcElv?=
 =?utf-8?B?UUhSbmFwcWZsblZ0UkdDOVBBK0Y2YnBNakk2V2RrdGxvaVAyOFpKOHJRaUtE?=
 =?utf-8?B?K0Z1OXVuQ08yMXAzSzJpTjI1MGh4SnVjbWF3b0VRVlNmMWkwbmZiU0ZmMUdD?=
 =?utf-8?B?N1BkOWozazBJWVgwL283bmlTOVlDLzN4TEVxczNUUGNzbVlCMmdmTSsycU5r?=
 =?utf-8?B?RURSUnlnVFpsNkN0QXRQWkp1SS9URER3OVN5ckVrL3I4KzZSVTEvN1hoQ3BJ?=
 =?utf-8?B?UFZUK0Q1Q29xanRKR0g1WWVPblNnL2k0aWJGYTZ4VmJwazIvZnNRVERpT08y?=
 =?utf-8?B?YytNMC9YMFRIdmE4bk0vUy93V0dDcnNtT29NS0pKYmpRZ1pwNTBROVJsd3Uz?=
 =?utf-8?B?T2RWL0o1QjZYMlRKVHZ2L3ljZ2hiRFc1VVZjc1hnRzlJRXFtQ2ZXRWR5b0JW?=
 =?utf-8?Q?aVmDZlBb2SW3bZ9HQYbMa725r?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: a788f7f8-3b95-44a0-f64a-08db2f922950
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 28 Mar 2023 13:41:41.1899
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: epRbA1GRyCxzpfQpQZa7+mFW6ByeliSGHGIJp7nSguFhLo4dVRpZbho2nVpdp+ClyNOBmbz0whxCkyXw165SKw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CH0PR12MB5139
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Hi Bjorn,

On 3/24/23 17:36, Bjorn Helgaas wrote:
> I'd call this a "PCI/AER: ..." patch since that's where all the
> changes are.
> 
> On Thu, Mar 23, 2023 at 04:38:07PM -0500, Terry Bowman wrote:
>> From: Robert Richter <rrichter@amd.com>
>>
>> In RCD mode a CXL device (RCD) is exposed as an RCiEP, but CXL
>> downstream and upstream ports are not enumerated and not visible in
>> the PCIe hierarchy. Protocol and link errors are sent to an RCEC.
> 
> "RCD" isn't a common term in drivers/pci; can you expand it once here?
> 
>> Now, RCH downstream port-detected errors are signaled as internal AER
>> errors (UIE/CIE) with the RCEC's source ID. A CXL handler must then
> 
> Similarly, "UIE" and "CIE" are new to drivers/pci; can you expand them
> before using?  I assume Uncorrectable Internal Error (UIE) and
> Corrected Internal Error (CIE)?  (Annoying that the PCIe spec uses
> "Correctable" in general, but "Corrected" for Internal Errors.)
> 
>> inspect the error status in various CXL registers residing in the
>> dport's component register space (CXL RAS cap) or the dport's RCRB
>> (AER ext cap). [1]
>>
>> This patch connects errors showing up in the RCEC's error handler with
> 
> "Connect errors ..." (we already know this text applies to *this
> patch*).
> 
>> the CXL subsystem. Implement this by forwarding the error to all CXL
>> devices below the RCEC. Since the entire CXL device is controlled only
>> using PCIe Configuration Space of device 0, Function 0, only pass it
>> there [2]. These devices have the Memory Device class code set
>> (PCI_CLASS_MEMORY_CXL, 502h) and the existing cxl_pci driver can
>> implement the handler.
> 
>> The CXL device driver is then responsible to
>> enable error reporting in the RCEC's AER cap
> 
> I don't know exactly what you mean by "error reporting in the RCEC's
> AER cap", but IIUC, for non-Root Port devices, generation of ERR_COR/
> ERR_NONFATAL/ERR_FATAL messages is controlled by the Device Control
> register and should already be enabled by pci_aer_init().
> 
> Maybe you mean setting AER mask/severity specifically for Internal
> Errors?  I'm hoping to get as much of AER management as we can in the
> PCI core and out of drivers, so maybe we need a new PCI interface to
> do that.
> 
> In any event, I assume this sort of configuration would be an
> enumeration-time thing, while *this* patch is a run-time thing, so
> maybe this information belongs with a different patch?
> 
>> (esp. CIE and UIE) and to
>> inspect the dport's CXL registers in addition (CXL RAS cap and AER ext
>> cap).
>>
>> The reason for choosing this implementation is that a CXL RCEC device
>> is bound to the AER port driver, but the driver does not allow it to
>> register a custom specific handler to support CXL. Connecting the RCEC
>> hard-wired with a CXL handler does not work, as the CXL subsystem
>> might not be present all the time. The alternative to add an
>> implementation to the portdrv to allow the registration of a custom
>> RCEC error handler isn't worth doing it as CXL would be its only user.
>> Instead, just check for an CXL RCEC and pass it down to the connected
>> CXL device's error handler.
>>
>> [1] CXL 3.0 spec, 12.2.1.1 RCH Downstream Port-detected Errors
>> [2] CXL 3.0 spec, 8.1.3 PCIe DVSEC for CXL Devices
>>
>> Co-developed-by: Terry Bowman <terry.bowman@amd.com>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> Signed-off-by: Robert Richter <rrichter@amd.com>
> 
> Since you're sending this patch (Terry) your Signed-off-by should be
> last.
> 

I'll move my Signed-off-by to the last.

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 3B0C2C76195
	for <linux-cxl@archiver.kernel.org>; Mon, 27 Mar 2023 23:22:12 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229452AbjC0XWL (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Mon, 27 Mar 2023 19:22:11 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34094 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229512AbjC0XWL (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Mon, 27 Mar 2023 19:22:11 -0400
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 78A1B90;
        Mon, 27 Mar 2023 16:22:09 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1679959329; x=1711495329;
  h=message-id:date:mime-version:subject:to:cc:references:
   from:in-reply-to:content-transfer-encoding;
  bh=zyWjD2PkXDSkIYfuAz0Bzc4b4FSaXT17Kn1U6xHbVx0=;
  b=CBrpeggYy/FT1UJXPZOVEYbrWQHdEJIwaS8VqaBq+aZKtP2XMYpo8t5g
   qiEj2bOJfBc+1YSOWRiC94FS/5sSRCkAsgkZ8IY0275Noo6PPKvpyUeLB
   hVppsxecgIPUbjl4TPxnYuF9bSYcgW8BuUSzNpNBscojFMqrlHIbq9Ljw
   0LA8yCOulr1kK2b7W+or4OEW/EpUHXOl761PuNL4d3UhdKCrDcR2qDA89
   uZRVBenDfbLVs6WrKGiZCuPR8kKOr6p655RcnT/eY+2zet8Xt2ttsuf/E
   00N+izaESn7NBGmN8RBRecch3sGJFhtwkDVPReMn3dMaT2v/7w3INyzt2
   g==;
X-IronPort-AV: E=McAfee;i="6600,9927,10662"; a="340442312"
X-IronPort-AV: E=Sophos;i="5.98,295,1673942400"; 
   d="scan'208";a="340442312"
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
  by fmsmga103.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 27 Mar 2023 16:21:49 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10662"; a="752898707"
X-IronPort-AV: E=Sophos;i="5.98,295,1673942400"; 
   d="scan'208";a="752898707"
Received: from djiang5-mobl3.amr.corp.intel.com (HELO [10.212.91.66]) ([10.212.91.66])
  by fmsmga004-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 27 Mar 2023 16:21:48 -0700
Message-ID: <175c0dcf-5170-0e9a-792c-2fc1cccd52fe@intel.com>
Date: Mon, 27 Mar 2023 16:21:48 -0700
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Firefox/102.0 Thunderbird/102.9.0
Subject: Re: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
To: Terry Bowman <terry.bowman@amd.com>, alison.schofield@intel.com,
        vishal.l.verma@intel.com, ira.weiny@intel.com, bwidawsk@kernel.org,
        dan.j.williams@intel.com, Jonathan.Cameron@huawei.com,
        linux-cxl@vger.kernel.org, rrichter@amd.com
Cc: linux-kernel@vger.kernel.org, bhelgaas@google.com
References: <20230323213808.398039-1-terry.bowman@amd.com>
 <20230323213808.398039-6-terry.bowman@amd.com>
Content-Language: en-US
From: Dave Jiang <dave.jiang@intel.com>
In-Reply-To: <20230323213808.398039-6-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org



On 3/23/23 2:38 PM, Terry Bowman wrote:
> RCH downstream port error logging is missing in the current CXL driver. The
> missing AER and RAS error logging is needed for communicating driver error
> details to userspace. Update the driver to include PCIe AER and CXL RAS
> error logging.
> 
> Add RCH downstream port error handling into the existing RCiEP handler.
> The downstream port error handler is added to the RCiEP error handler
> because the downstream port is implemented in a RCRB, is not PCI
> enumerable, and as a result is not directly accessible to the PCI AER
> root port driver. The AER root port driver calls the RCiEP handler for
> handling RCD errors and RCH downstream port protocol errors.
> 
> Update the cxl_mem driver to map the RCH RAS and AER register discovered
> earlier. The RAS and AER registers will be used in the RCH error handlers.
> 
> Disable RCH downstream port's root port cmd interrupts. Enable RCEC AER
> CIE/UIE reporting because they are disabled by default.[1]
> 
> Update existing RCiEP correctable and uncorrectable handlers to also call
> the RCH handler. The RCH handler will read the downstream port AER
> registers, check for error severity, and if an error exists will log
> using an existing kernel AER trace routine. The RCH handler will also
> reuse the existing RAS logging routine to log downstream port RAS
> errors if they exist.
> 
> [1] CXL 3.0 Spec, 12.2.1.1 - RCH Downstream Port Detected Errors
> 
> Co-developed-by: Robert Richter <rrichter@amd.com>
> Signed-off-by: Robert Richter <rrichter@amd.com>
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---
>   drivers/cxl/core/pci.c  | 126 +++++++++++++++++++++++++++++++++----
>   drivers/cxl/core/regs.c |   1 +
>   drivers/cxl/cxl.h       |  13 ++++
>   drivers/cxl/mem.c       | 134 ++++++++++++++++++++++++++++++++++++++++
>   4 files changed, 262 insertions(+), 12 deletions(-)
> 
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index 7328a2552411..6e36471969ba 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -5,6 +5,7 @@
>   #include <linux/delay.h>
>   #include <linux/pci.h>
>   #include <linux/pci-doe.h>
> +#include <linux/aer.h>
>   #include <cxlpci.h>
>   #include <cxlmem.h>
>   #include <cxl.h>
> @@ -605,32 +606,88 @@ void read_cdat_data(struct cxl_port *port)
>   }
>   EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
>   
> -void cxl_cor_error_detected(struct pci_dev *pdev)
> +/* Get AER severity. Return false if there is no error. */
> +static bool cxl_rch_get_aer_severity(struct aer_capability_regs *aer_regs,
> +				     int *severity)
> +{
> +	if (aer_regs->uncor_status & ~aer_regs->uncor_mask) {
> +		if (aer_regs->uncor_status & PCI_ERR_ROOT_FATAL_RCV)
> +			*severity = AER_FATAL;
> +		else
> +			*severity = AER_NONFATAL;
> +		return true;
> +	}
> +
> +	if (aer_regs->cor_status & ~aer_regs->cor_mask) {
> +		*severity = AER_CORRECTABLE;
> +		return true;
> +	}
> +
> +	return false;
> +}
> +
> +/*
> + * Copy the AER capability registers to a buffer. This is necessary
> + * because RCRB AER capability is MMIO mapped. Clear the status
> + * after copying.
> + *
> + * @aer_base: base address of AER capability block in RCRB
> + * @aer_regs: destination for copying AER capability
> + */
> +static bool cxl_rch_get_aer_info(void __iomem *aer_base,
> +				 struct aer_capability_regs *aer_regs)
> +{
> +	int read_cnt = PCI_AER_CAPABILITY_LENGTH / sizeof(u32);
> +	u32 *aer_regs_buf = (u32 *)aer_regs;
> +	int n;
> +
> +	if (!aer_base)
> +		return false;
> +
> +	for (n = 0; n < read_cnt; n++)
> +		aer_regs_buf[n] = readl(aer_base + n * sizeof(u32));
> +
> +	writel(aer_regs->uncor_status, aer_base + PCI_ERR_UNCOR_STATUS);
> +	writel(aer_regs->cor_status, aer_base + PCI_ERR_COR_STATUS);
> +
> +	return true;
> +}
> +
> +static void __cxl_log_correctable_ras(struct cxl_dev_state *cxlds,
> +				      void __iomem *ras_base)
>   {
> -	struct cxl_dev_state *cxlds = pci_get_drvdata(pdev);
>   	void __iomem *addr;
>   	u32 status;
>   
> -	if (!cxlds->regs.ras)
> +	if (!ras_base)
>   		return;
>   
> -	addr = cxlds->regs.ras + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
> +	addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
>   	status = readl(addr);
>   	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
>   		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
>   		trace_cxl_aer_correctable_error(cxlds->cxlmd, status);
>   	}
>   }
> -EXPORT_SYMBOL_NS_GPL(cxl_cor_error_detected, CXL);
> +
> +static void cxl_log_correctable_ras_endpoint(struct cxl_dev_state *cxlds)
> +{
> +	return __cxl_log_correctable_ras(cxlds, cxlds->regs.ras);
> +}
> +
> +static void cxl_log_correctable_ras_dport(struct cxl_dev_state *cxlds)
> +{
> +	return __cxl_log_correctable_ras(cxlds, cxlds->regs.dport_ras);
> +}
>   
>   /* CXL spec rev3.0 8.2.4.16.1 */
> -static void header_log_copy(struct cxl_dev_state *cxlds, u32 *log)
> +static void header_log_copy(void __iomem *ras_base, u32 *log)
>   {
>   	void __iomem *addr;
>   	u32 *log_addr;
>   	int i, log_u32_size = CXL_HEADERLOG_SIZE / sizeof(u32);
>   
> -	addr = cxlds->regs.ras + CXL_RAS_HEADER_LOG_OFFSET;
> +	addr = ras_base + CXL_RAS_HEADER_LOG_OFFSET;
>   	log_addr = log;
>   
>   	for (i = 0; i < log_u32_size; i++) {
> @@ -644,17 +701,18 @@ static void header_log_copy(struct cxl_dev_state *cxlds, u32 *log)
>    * Log the state of the RAS status registers and prepare them to log the
>    * next error status. Return 1 if reset needed.
>    */
> -static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
> +static bool __cxl_report_and_clear(struct cxl_dev_state *cxlds,
> +				  void __iomem *ras_base)
>   {
>   	u32 hl[CXL_HEADERLOG_SIZE_U32];
>   	void __iomem *addr;
>   	u32 status;
>   	u32 fe;
>   
> -	if (!cxlds->regs.ras)
> +	if (!ras_base)
>   		return false;
>   
> -	addr = cxlds->regs.ras + CXL_RAS_UNCORRECTABLE_STATUS_OFFSET;
> +	addr = ras_base + CXL_RAS_UNCORRECTABLE_STATUS_OFFSET;
>   	status = readl(addr);
>   	if (!(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK))
>   		return false;
> @@ -662,7 +720,7 @@ static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
>   	/* If multiple errors, log header points to first error from ctrl reg */
>   	if (hweight32(status) > 1) {
>   		void __iomem *rcc_addr =
> -			cxlds->regs.ras + CXL_RAS_CAP_CONTROL_OFFSET;
> +			ras_base + CXL_RAS_CAP_CONTROL_OFFSET;
>   
>   		fe = BIT(FIELD_GET(CXL_RAS_CAP_CONTROL_FE_MASK,
>   				   readl(rcc_addr)));
> @@ -670,13 +728,54 @@ static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
>   		fe = status;
>   	}
>   
> -	header_log_copy(cxlds, hl);
> +	header_log_copy(ras_base, hl);
>   	trace_cxl_aer_uncorrectable_error(cxlds->cxlmd, status, fe, hl);
>   	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
>   
>   	return true;
>   }
>   
> +static bool cxl_report_and_clear(struct cxl_dev_state *cxlds)
> +{
> +	return __cxl_report_and_clear(cxlds, cxlds->regs.ras);
> +}
> +
> +static bool cxl_report_and_clear_dport(struct cxl_dev_state *cxlds)
> +{
> +	return __cxl_report_and_clear(cxlds, cxlds->regs.dport_ras);
> +}
> +
> +static void cxl_rch_log_error(struct cxl_dev_state *cxlds)
> +{
> +	struct pci_dev *pdev = to_pci_dev(cxlds->dev);
> +	struct aer_capability_regs aer_regs;
> +	int severity;
> +
> +	if (!cxl_rch_get_aer_info(cxlds->regs.aer, &aer_regs))
> +		return;
> +
> +	if (!cxl_rch_get_aer_severity(&aer_regs, &severity))
> +		return;
> +
> +	cper_print_aer(pdev, severity, &aer_regs);
> +
> +	if (severity == AER_CORRECTABLE)
> +		cxl_log_correctable_ras_dport(cxlds);
> +	else
> +		cxl_report_and_clear_dport(cxlds);
> +}
> +
> +void cxl_cor_error_detected(struct pci_dev *pdev)
> +{
> +	struct cxl_dev_state *cxlds = pci_get_drvdata(pdev);
> +
> +	if (cxlds->rcd)
> +		cxl_rch_log_error(cxlds);
> +
> +	cxl_log_correctable_ras_endpoint(cxlds);
> +}
> +EXPORT_SYMBOL_NS_GPL(cxl_cor_error_detected, CXL);
> +
>   pci_ers_result_t cxl_error_detected(struct pci_dev *pdev,
>   				    pci_channel_state_t state)
>   {
> @@ -685,6 +784,9 @@ pci_ers_result_t cxl_error_detected(struct pci_dev *pdev,
>   	struct device *dev = &cxlmd->dev;
>   	bool ue;
>   
> +	if (cxlds->rcd)
> +		cxl_rch_log_error(cxlds);
> +
>   	/*
>   	 * A frozen channel indicates an impending reset which is fatal to
>   	 * CXL.mem operation, and will likely crash the system. On the off
> diff --git a/drivers/cxl/core/regs.c b/drivers/cxl/core/regs.c
> index 108a349d8101..7130f35891da 100644
> --- a/drivers/cxl/core/regs.c
> +++ b/drivers/cxl/core/regs.c
> @@ -198,6 +198,7 @@ void __iomem *devm_cxl_iomap_block(struct device *dev, resource_size_t addr,
>   
>   	return ret_val;
>   }
> +EXPORT_SYMBOL_NS_GPL(devm_cxl_iomap_block, CXL);
>   
>   int cxl_map_component_regs(struct device *dev, struct cxl_component_regs *regs,
>   			   struct cxl_register_map *map, unsigned long map_mask)
> diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
> index 9fd7df48ce99..7036e34354bc 100644
> --- a/drivers/cxl/cxl.h
> +++ b/drivers/cxl/cxl.h
> @@ -66,6 +66,8 @@
>   #define CXL_DECODER_MIN_GRANULARITY 256
>   #define CXL_DECODER_MAX_ENCODED_IG 6
>   
> +#define PCI_AER_CAPABILITY_LENGTH 56
> +
>   static inline int cxl_hdm_decoder_count(u32 cap_hdr)
>   {
>   	int val = FIELD_GET(CXL_HDM_DECODER_COUNT_MASK, cap_hdr);
> @@ -209,6 +211,15 @@ struct cxl_regs {
>   	struct_group_tagged(cxl_device_regs, device_regs,
>   		void __iomem *status, *mbox, *memdev;
>   	);
> +
> +	/*
> +	 * Pointer to RCH cxl_dport AER. (only for RCH/RCD mode)
> +	 * @dport_aer: CXL 2.0 12.2.11 RCH Downstream Port-detected Errors
> +	 */
> +	struct_group_tagged(cxl_rch_regs, rch_regs,
> +		void __iomem *aer;
> +		void __iomem *dport_ras;
> +	);
>   };
>   
>   struct cxl_reg_map {
> @@ -249,6 +260,8 @@ struct cxl_register_map {
>   	};
>   };
>   
> +void __iomem *devm_cxl_iomap_block(struct device *dev, resource_size_t addr,
> +				   resource_size_t length);
>   void cxl_probe_component_regs(struct device *dev, void __iomem *base,
>   			      struct cxl_component_reg_map *map);
>   void cxl_probe_device_regs(struct device *dev, void __iomem *base,
> diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
> index 12e8e8ebaac0..e217c44ed749 100644
> --- a/drivers/cxl/mem.c
> +++ b/drivers/cxl/mem.c
> @@ -4,6 +4,7 @@
>   #include <linux/device.h>
>   #include <linux/module.h>
>   #include <linux/pci.h>
> +#include <linux/aer.h>
>   
>   #include "cxlmem.h"
>   #include "cxlpci.h"
> @@ -45,6 +46,132 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
>   	return 0;
>   }
>   
> +static int rcec_enable_aer_ints(struct pci_dev *pdev)
> +{
> +	struct pci_dev *rcec = pdev->rcec;
> +	int aer, rc;
> +	u32 mask;
> +
> +	if (!rcec)
> +		return -ENODEV;
> +
> +	/*
> +	 * Internal errors are masked by default, unmask RCEC's here
> +	 * PCI6.0 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h)
> +	 * PCI6.0 7.8.4.6 Correctable Error Mask Register (Offset 14h)
> +	 */
> +	aer = rcec->aer_cap;
> +	rc = pci_read_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, &mask);
> +	if (rc)
> +		return rc;
> +	mask &= ~PCI_ERR_UNC_INTN;
> +	rc = pci_write_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, mask);
> +	if (rc)
> +		return rc;
> +
> +	rc = pci_read_config_dword(rcec, aer + PCI_ERR_COR_MASK, &mask);
> +	if (rc)
> +		return rc;
> +	mask &= ~PCI_ERR_COR_INTERNAL;
> +	rc = pci_write_config_dword(rcec, aer + PCI_ERR_COR_MASK, mask);
> +
> +	return rc;
> +}
> +
> +static void disable_aer(void *_pdev)
> +{
> +	struct pci_dev *pdev = (struct pci_dev *)_pdev;
> +
> +	pci_disable_pcie_error_reporting(pdev);
> +
> +	/*
> +	 * Keep the RCEC's internal AER enabled. There
> +	 * could be other RCiEPs using this RCEC.
> +	 */
> +}
> +
> +static void rch_disable_root_ints(void __iomem *aer_base)
> +{
> +	u32 aer_cmd_mask, aer_cmd;
> +
> +	/*
> +	 * Disable RCH root port command interrupts.
> +	 * CXL3.0 12.2.1.1 - RCH Downstream Port-detected Errors
> +	 */
> +	aer_cmd_mask = (PCI_ERR_ROOT_CMD_COR_EN |
> +			PCI_ERR_ROOT_CMD_NONFATAL_EN |
> +			PCI_ERR_ROOT_CMD_FATAL_EN);
> +	aer_cmd = readl(aer_base + PCI_ERR_ROOT_COMMAND);
> +	aer_cmd &= ~aer_cmd_mask;
> +	writel(aer_cmd, aer_base + PCI_ERR_ROOT_COMMAND);
> +}
> +
> +static int cxl_ras_setup_interrupts(struct cxl_dev_state *cxlds)
> +{
> +	struct pci_dev *pdev = to_pci_dev(cxlds->dev);
> +	int rc;
> +
> +	if (cxlds->rcd) {
> +		rch_disable_root_ints(cxlds->regs.aer);
> +
> +		rc = rcec_enable_aer_ints(pdev);
> +		if (rc)
> +			return rc;
> +	}
> +
> +	rc = pci_enable_pcie_error_reporting(pdev);

Hi Terry, not sure if you saw this thread [1], but with the new changes 
upstream [2] to the PCIe subsystem, Bjorn says we no longer need to call 
pci_enable_pcie_error_report() by the driver.

[1]: 
https://lore.kernel.org/linux-cxl/c2e244bd-a94b-8de2-e43c-7ff8a756cbc7@intel.com/T/#mef401fb0580ebb4c4bc2a164f87e12b60cf76693
[2]: commit f26e58bf6f54 ("PCI/AER: Enable error reporting when AER is 
native")

DJ

> +	if (rc)
> +		return rc;
> +
> +	return devm_add_action_or_reset(&pdev->dev, disable_aer, pdev);
> +}
> +
> +static int cxl_rch_map_ras(struct cxl_dev_state *cxlds,
> +			   struct cxl_dport *parent_dport)
> +{
> +	struct device *dev = parent_dport->dport;
> +	resource_size_t aer_phys, ras_phys;
> +	void __iomem *aer, *dport_ras;
> +
> +	if (!parent_dport->rch)
> +		return 0;
> +
> +	if (!parent_dport->aer_cap || !parent_dport->ras_cap ||
> +	    parent_dport->component_reg_phys == CXL_RESOURCE_NONE)
> +		return -ENODEV;
> +
> +	aer_phys = parent_dport->aer_cap + parent_dport->rcrb;
> +	aer = devm_cxl_iomap_block(dev, aer_phys,
> +				   PCI_AER_CAPABILITY_LENGTH);
> +
> +	if (!aer)
> +		return -ENOMEM;
> +
> +	ras_phys = parent_dport->ras_cap + parent_dport->component_reg_phys;
> +	dport_ras = devm_cxl_iomap_block(dev, ras_phys,
> +					 CXL_RAS_CAPABILITY_LENGTH);
> +
> +	if (!dport_ras)
> +		return -ENOMEM;
> +
> +	cxlds->regs.aer = aer;
> +	cxlds->regs.dport_ras = dport_ras;
> +
> +	return 0;
> +}
> +
> +static int cxl_setup_ras(struct cxl_dev_state *cxlds,
> +			 struct cxl_dport *parent_dport)
> +{
> +	int rc;
> +
> +	rc = cxl_rch_map_ras(cxlds, parent_dport);
> +	if (rc)
> +		return rc;
> +
> +	return cxl_ras_setup_interrupts(cxlds);
> +}
> +
>   static void cxl_rcrb_setup(struct cxl_dev_state *cxlds,
>   			   struct cxl_dport *parent_dport)
>   {
> @@ -93,6 +220,13 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
>   
>   	cxl_rcrb_setup(cxlds, parent_dport);
>   
> +	rc = cxl_setup_ras(cxlds, parent_dport);
> +	/* Continue with RAS setup errors */
> +	if (rc)
> +		dev_warn(&cxlmd->dev, "CXL RAS setup failed: %d\n", rc);
> +	else
> +		dev_info(&cxlmd->dev, "CXL error handling enabled\n");
> +
>   	endpoint = devm_cxl_add_port(host, &cxlmd->dev, cxlds->component_reg_phys,
>   				     parent_dport);
>   	if (IS_ERR(endpoint))

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id F10C5C6FD1D
	for <linux-cxl@archiver.kernel.org>; Mon, 27 Mar 2023 21:51:55 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229827AbjC0Vvy (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Mon, 27 Mar 2023 17:51:54 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34718 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229452AbjC0Vvy (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Mon, 27 Mar 2023 17:51:54 -0400
Received: from NAM10-DM6-obe.outbound.protection.outlook.com (mail-dm6nam10on2049.outbound.protection.outlook.com [40.107.93.49])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 6625E2D66;
        Mon, 27 Mar 2023 14:51:47 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=YaJzxKzAD12h/DeNCvjNrREvE9pJ2vK9q+l5TsW/usDtF6Kc2g/FM17jgLJhPnrnPKUq7qURzuhUMEQ5t4761Ewa6gm1lzBmvAL9yHrxZ0nq3J4cDQhfybiQj3yTCamkbp237Re1SjOTUpm7FzQGv2kFi1sB7O6dE0OtcycjNIJkdYw2VieH838jHLSD8iB2cISofDYeG5bySznaCyP4RXg6P2siL6MZvYoYhkGqs1t5WgYC9MkqnPOYOMtimWsSXugydUyE5eYe+2uiDQQ9AK7TbUM7CdyoQSYu76k53oMDzgu36uKYsyeFWwVx1pjB3/NCAOorSvndTmB965Cy5g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=OFQHAh/BpWNRHnd1kvgVeQgj05l32vTbFswnzVs8yg4=;
 b=Q1Ww7Z2ypGgo7vNriF/oVOE6WONYJzTqzr5q5duenwayOnZKCsEoUw3wVRVj/YnwdI6A9iCIEtJH5csaXGBUSX1DE7BUq4kiA3iOLHrchpuDSnxnToRk/sYo5KqseFg+xGaz1Poh31b8doe0+sT/Yf89h/tsPQRTJVbHLP/KOoee4MjutaViEsD7NT/rDR3hDVcEhqb1E2+upk4u8GfONUgipLLqfd/x2RszaoviHcyx4tbYK8WPM+e2N1K+D6qf+/+pmY1RyDXXAugVbYNq/S7Npnltu1WwCFli59zROXCoFzJSi6cNvtRAj0BkWR9Flm/cqmBiNYy6SeD4veGhVg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=kernel.org smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=OFQHAh/BpWNRHnd1kvgVeQgj05l32vTbFswnzVs8yg4=;
 b=SNG1f3k1uWBhBqrAhBT2bkxQlZGQ89J+ig9AncNG2StCHrez077VHt1Z3gSvs8oabbY1mb6ZmwiIX/YCR5UVA/F98aCfNWqm1tdnCRE2Su0rf/tWJbBxLeg56YKBqQ577pfh+tVVnN33WIfWRmFk9qMUMi6TdGDNscTpynO8Kd0=
Received: from DM6PR02CA0114.namprd02.prod.outlook.com (2603:10b6:5:1b4::16)
 by CYYPR12MB8940.namprd12.prod.outlook.com (2603:10b6:930:bd::17) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6222.30; Mon, 27 Mar
 2023 21:51:45 +0000
Received: from DM6NAM11FT055.eop-nam11.prod.protection.outlook.com
 (2603:10b6:5:1b4:cafe::12) by DM6PR02CA0114.outlook.office365.com
 (2603:10b6:5:1b4::16) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.41 via Frontend
 Transport; Mon, 27 Mar 2023 21:51:45 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 DM6NAM11FT055.mail.protection.outlook.com (10.13.173.103) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.6222.22 via Frontend Transport; Mon, 27 Mar 2023 21:51:45 +0000
Received: from rric.localdomain (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2375.34; Mon, 27 Mar
 2023 16:51:42 -0500
Date: Mon, 27 Mar 2023 23:51:39 +0200
From: Robert Richter <rrichter@amd.com>
To: Bjorn Helgaas <helgaas@kernel.org>
CC: Terry Bowman <terry.bowman@amd.com>, <alison.schofield@intel.com>,
        <vishal.l.verma@intel.com>, <ira.weiny@intel.com>,
        <bwidawsk@kernel.org>, <dan.j.williams@intel.com>,
        <dave.jiang@intel.com>, <Jonathan.Cameron@huawei.com>,
        <linux-cxl@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <bhelgaas@google.com>
Subject: Re: [PATCH v2 4/5] cxl/pci: Forward RCH downstream port-detected
 errors to the CXL.mem dev handler
Message-ID: <ZCIPuPM+LZsOFIIZ@rric.localdomain>
References: <20230323213808.398039-5-terry.bowman@amd.com>
 <20230324223656.GA2660301@bhelgaas>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20230324223656.GA2660301@bhelgaas>
X-Originating-IP: [10.180.168.240]
X-ClientProxiedBy: SATLEXMB03.amd.com (10.181.40.144) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DM6NAM11FT055:EE_|CYYPR12MB8940:EE_
X-MS-Office365-Filtering-Correlation-Id: 77f1a313-4f41-45ab-5cfe-08db2f0d7543
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: z0G3TeIC7QLTzUlrvhOnhdAosH49pivGL94PO+FIEiAW8p/9roPUurD8q/2mL/DH0Y9uyGLb73So+jChjUFKiyUhWgVn6+hg70h5DJsG3HGF9eLkChRB9TOKPj/6af6qo5r8gvo6xs2/AMXgc6RrdNMSFs+1J/qvm2HGI7iOWsPDQaH/HmydFjbgAdtH5r+6nFPGCIUHJhLTst7tLKxlOhv+R8mV0iWtW8CZDWLiv2UMcn83pbNM6pvGzPyrWyt3GSAUZg9VnloxSAPV+rPUsb+M4utNltE8SY2NRG2ZZB4fZumgZJ63C52X062+DUWrIk0YLR15Wsu+c82w8DK1zDli46wBIEZbEdfUPq5H7QolNNU/6sItBlejO8bGIK999CRIdf7ziiT7EWIhi8PNt3gL4EApssyOqadMX96SQ2aaKj41vf7tolo3i8Ko+UKYSwadWcW9pga/HJ+rAuBki4VJ6lCavGPcFHDDZzXuzM4QyjiMiKGxPfnmlAe9D57LoVpdINRFTQYp4xz99ktR5R5MaA69Az+9gzKdiT/P9cToJHKcaarFF76m4L65imbaB1hU5aJH01Zk59V/QzXWZuDHHgTHs7nVdnr1V/Febv0h0r6QWMJ5zFJt+GBL8sNfnrx0yFeK+OrrJGqkkLo4S9hhFjdgES2dj3uH7qvEu8Vd4dfrc+3hmk1k/UWFanJt89TbZew/lttJWzmXbLGeWyz6NRpxDoovhSPRO/aAjeI7BmK1QLe/zBLkoXj40RUaGdLldmaG0QKclEJE0xNX8Q==
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230028)(4636009)(136003)(346002)(376002)(39860400002)(396003)(451199021)(46966006)(40470700004)(36840700001)(16526019)(9686003)(26005)(53546011)(426003)(40480700001)(41300700001)(186003)(55016003)(6666004)(7696005)(83380400001)(336012)(47076005)(478600001)(54906003)(316002)(36860700001)(40460700003)(4326008)(70206006)(2906002)(7416002)(70586007)(8676002)(6916009)(81166007)(82740400003)(356005)(82310400005)(5660300002)(8936002)(67856001)(36900700001);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 27 Mar 2023 21:51:45.0861
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 77f1a313-4f41-45ab-5cfe-08db2f0d7543
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: DM6NAM11FT055.eop-nam11.prod.protection.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CYYPR12MB8940
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Bjorn,

thanks for you review.

On 24.03.23 17:36:56, Bjorn Helgaas wrote:
> I'd call this a "PCI/AER: ..." patch since that's where all the
> changes are.
> 
> On Thu, Mar 23, 2023 at 04:38:07PM -0500, Terry Bowman wrote:
> > From: Robert Richter <rrichter@amd.com>
> > 
> > In RCD mode a CXL device (RCD) is exposed as an RCiEP, but CXL
> > downstream and upstream ports are not enumerated and not visible in
> > the PCIe hierarchy. Protocol and link errors are sent to an RCEC.
> 
> "RCD" isn't a common term in drivers/pci; can you expand it once here?
> 
> > Now, RCH downstream port-detected errors are signaled as internal AER
> > errors (UIE/CIE) with the RCEC's source ID. A CXL handler must then
> 
> Similarly, "UIE" and "CIE" are new to drivers/pci; can you expand them
> before using?  I assume Uncorrectable Internal Error (UIE) and
> Corrected Internal Error (CIE)?  (Annoying that the PCIe spec uses
> "Correctable" in general, but "Corrected" for Internal Errors.)
> 
> > inspect the error status in various CXL registers residing in the
> > dport's component register space (CXL RAS cap) or the dport's RCRB
> > (AER ext cap). [1]
> > 
> > This patch connects errors showing up in the RCEC's error handler with
> 
> "Connect errors ..." (we already know this text applies to *this
> patch*).

I will update subject and description.

> 
> > the CXL subsystem. Implement this by forwarding the error to all CXL
> > devices below the RCEC. Since the entire CXL device is controlled only
> > using PCIe Configuration Space of device 0, Function 0, only pass it
> > there [2]. These devices have the Memory Device class code set
> > (PCI_CLASS_MEMORY_CXL, 502h) and the existing cxl_pci driver can
> > implement the handler.
> 
> > The CXL device driver is then responsible to
> > enable error reporting in the RCEC's AER cap
> 
> I don't know exactly what you mean by "error reporting in the RCEC's
> AER cap", but IIUC, for non-Root Port devices, generation of ERR_COR/
> ERR_NONFATAL/ERR_FATAL messages is controlled by the Device Control
> register and should already be enabled by pci_aer_init().
> 
> Maybe you mean setting AER mask/severity specifically for Internal
> Errors?  I'm hoping to get as much of AER management as we can in the

Richt, this is implemented in patch #5 in function
rcec_enable_aer_ints().

> PCI core and out of drivers, so maybe we need a new PCI interface to
> do that.
> 
> In any event, I assume this sort of configuration would be an
> enumeration-time thing, while *this* patch is a run-time thing, so
> maybe this information belongs with a different patch?

Do you mean once a Restricted CXL host (RCH) is detected, the internal
errors should be enabled in the device mask, all this done during
device enumeration? But wouldn't interrupts being enabled then before
the CXL device is ready?

> 
> > (esp. CIE and UIE) and to
> > inspect the dport's CXL registers in addition (CXL RAS cap and AER ext
> > cap).
> > 
> > The reason for choosing this implementation is that a CXL RCEC device
> > is bound to the AER port driver, but the driver does not allow it to
> > register a custom specific handler to support CXL. Connecting the RCEC
> > hard-wired with a CXL handler does not work, as the CXL subsystem
> > might not be present all the time. The alternative to add an
> > implementation to the portdrv to allow the registration of a custom
> > RCEC error handler isn't worth doing it as CXL would be its only user.
> > Instead, just check for an CXL RCEC and pass it down to the connected
> > CXL device's error handler.
> > 
> > [1] CXL 3.0 spec, 12.2.1.1 RCH Downstream Port-detected Errors
> > [2] CXL 3.0 spec, 8.1.3 PCIe DVSEC for CXL Devices
> > 
> > Co-developed-by: Terry Bowman <terry.bowman@amd.com>
> > Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> > Signed-off-by: Robert Richter <rrichter@amd.com>
> 
> Since you're sending this patch (Terry) your Signed-off-by should be
> last.
> 
> > Cc: "Oliver O'Halloran" <oohall@gmail.com>
> > Cc: Bjorn Helgaas <bhelgaas@google.com>
> > Cc: linuxppc-dev@lists.ozlabs.org
> > Cc: linux-pci@vger.kernel.org
> > ---
> >  drivers/pci/pcie/aer.c | 45 ++++++++++++++++++++++++++++++++++++++++++
> >  1 file changed, 45 insertions(+)
> > 
> > diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> > index 7f0f52d094a4..d250a4caa85a 100644
> > --- a/drivers/pci/pcie/aer.c
> > +++ b/drivers/pci/pcie/aer.c
> > @@ -943,6 +943,49 @@ static bool find_source_device(struct pci_dev *parent,
> >  	return true;
> >  }
> >  
> > +#if IS_ENABLED(CONFIG_CXL_PCI)
> > +
> > +static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info);
> > +
> > +static int handle_cxl_error_iter(struct pci_dev *dev, void *data)
> > +{
> > +	struct aer_err_info *e_info = (struct aer_err_info *)data;
> > +
> 
> Thanks for explaining the :00.0 in the commit log.  I think a one-line
> comment here would be useful too so future readers don't have to dig
> out the commit to understand.

Sure, will add a comment.

> 
> > +	if (dev->devfn != PCI_DEVFN(0, 0))
> > +		return 0;
> > +
> > +	/* Right now there is only a CXL.mem driver */
> > +	if ((dev->class >> 8) != PCI_CLASS_MEMORY_CXL)
> > +		return 0;
> > +
> > +	/* pci_dev_put() in handle_error_source() */
> > +	dev = pci_dev_get(dev);

This dev is the endpoint's device handle.

> 
> I don't see why you need this.  Didn't we get here via this path?
> 
>   aer_isr
>     aer_isr_one_error
>       find_source_device
>         find_device_iter
>           if (is_error_source())
>             add_error_device
>               pci_dev_get          <-- existing pci_dev_get()

This is the RCEC's device handle. Note that downstream port errors
have the RCEC's error source id (the RCEC’s Bus, Device, and Function
Numbers, see CXL 3.0, 12.2.1.1). We pass this error to the CXL
endpoint's driver (RCD, the RCiEP) now. The iterator goes through all
endpoints connected to the RCEC.

>       aer_process_err_devices
>         for (i = 0; i < e_info->error_dev_num && e_info->dev[i]; i++)
>           if (aer_get_device_error_info(e_info->dev[i], e_info))
>             handle_error_source
>   +           handle_cxl_error

For the endpoint we further call here now:

                  pcie_walk_rcec(dev, handle_cxl_error_iter, info)
                    handle_cxl_error_iter(endpoint_dev)
		      pci_dev_get(endpoint_dev)
                      handle_error_source(endpoint_dev)
                        pci_dev_put(endpoint_dev)

>               pci_dev_put(dev)     <-- existing pci_dev_put()
> 
> So it looks like we wouldn't call handle_error_source() unless we had
> a valid e_info->dev[i], which has already had pci_dev_get() called on
> it.
> 
> Oh, I think I see ... handle_cxl_error() itself was called because an
> RCEC reported an error on behalf of a CXL RCiEP (?), and then you use
> pcie_walk_rcec() to look through all the associated RCiEPs, and
> recursively call handle_error_source(), and we haven't acquired a
> reference to those RCiEPs.  Right?

Yes, exacly.

> 
> But I thought the CXL things were not enumerated (first paragraph of
> commit log)?  But obviously these RCiEPs must be enumerated as PCI
> devices or pcie_walk_rcec() and pci_dev_get() wouldn't work.

The dport and uport are not enumerated, there are two RCRB ranges for
them. But errors are reported using the PCI hierarchy, using the RCEC
and the RCiEP. Once an internal error arrives with the RCEC as an
error source, the AER err cap in the RCRB must be checked.

> 
> I haven't worked all the way through this, but I thought Sean Kelley's
> and Qiuxu Zhuo's work was along the same line and might cover this,
> e.g.,
> 
>   a175102b0a82 ("PCI/ERR: Recover from RCEC AER errors")
>   579086225502 ("PCI/ERR: Recover from RCiEP AER errors")
>   af113553d961 ("PCI/AER: Add pcie_walk_rcec() to RCEC AER handling")
> 
> But I guess maybe it's not quite the same case?

Actually, we use this code to handle errors that are reported to the
RCEC and only implement here the CXL specifics. That is, checking if
the RCEC receives something from a CXL downstream port and forwarding
that to a CXL handler (this patch). The handler then checks the AER
err cap in the RCRB of all CXL downstream ports associated to the RCEC
(not visible in the PCI hierarchy), but discovered through the :00.0
RCiEP (patch #5).

> 
> If you *do* need this, I know pci_dev_get(NULL) is a no-op, but since
> you're testing for NULL anyway, I'd put it inside the "if" body.
> 
> > +	if (dev)
> > +		handle_error_source(dev, e_info);

The check is more for the (theoretical) case where we cannot increment
the refcount.

> > +
> > +	return 0;
> > +}
> > +
> > +static bool is_internal_error(struct aer_err_info *info)
> > +{
> > +	if (info->severity == AER_CORRECTABLE)
> > +		return info->status & PCI_ERR_COR_INTERNAL;
> > +
> > +	return info->status & PCI_ERR_UNC_INTN;
> > +}
> > +
> > +static void handle_cxl_error(struct pci_dev *dev, struct aer_err_info *info)
> > +{
> > +	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
> > +	    is_internal_error(info))
> 
> What's unique about Internal Errors?  I'm trying to figure out why you
> wouldn't do this for *all* CXL errors.

Per CXL specification downstream port errors are signaled using
internal errors. All other errors would be device specific, we cannot
handle that in a generic CXL driver. Note these are only errors
reported to the RCEC with the RCEC as a source, the RCiEP's errors are
handled using standard reporting already, see aer_isr_one_error() and
further calling pdrv->err_handler->cor_error_detected() or
pdrv->err_handler->error_detected().

-Robert

> 
> > +		pcie_walk_rcec(dev, handle_cxl_error_iter, info);
> > +}
> > +
> > +#else
> > +static inline void handle_cxl_error(struct pci_dev *dev,
> > +				    struct aer_err_info *info) { }
> > +#endif
> > +
> >  /**
> >   * handle_error_source - handle logging error into an event log
> >   * @dev: pointer to pci_dev data structure of error source device
> > @@ -954,6 +997,8 @@ static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info)
> >  {
> >  	int aer = dev->aer_cap;
> >  
> > +	handle_cxl_error(dev, info);
> > +
> >  	if (info->severity == AER_CORRECTABLE) {
> >  		/*
> >  		 * Correctable error does not need software intervention.
> > -- 
> > 2.34.1
> > 

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 800F4C76195
	for <linux-cxl@archiver.kernel.org>; Fri, 24 Mar 2023 22:37:02 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231963AbjCXWhB (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Fri, 24 Mar 2023 18:37:01 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:57008 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231658AbjCXWhA (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Fri, 24 Mar 2023 18:37:00 -0400
Received: from dfw.source.kernel.org (dfw.source.kernel.org [IPv6:2604:1380:4641:c500::1])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id DFF573A8F;
        Fri, 24 Mar 2023 15:36:58 -0700 (PDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by dfw.source.kernel.org (Postfix) with ESMTPS id 7E28E62CF8;
        Fri, 24 Mar 2023 22:36:58 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id B6E65C433EF;
        Fri, 24 Mar 2023 22:36:57 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1679697417;
        bh=FHDfGSZzbmTk+//HRHt6i1lfo5GNVr0Ttjxyt2cvrTI=;
        h=Date:From:To:Cc:Subject:In-Reply-To:From;
        b=opspLHEaeKbA4uehjxQMn6exzH/017owytagqPFzVQdcJl536gnEN64GBiPUmAyiB
         nkhTOe8hxUoKIgfKA2/noNzkq2iI7qSAr+e6EI1bGcsn7+6Q2ren9bEtvGR3glJMZ8
         wXGFvY2AnC0MWDGnpwSbuFq9o0rZ+Wle8Hra8SsUGWt69aEdtGMzlVbXlLuoPWrTEH
         gE6ieb5aXzPTWrweJdQZPIM7mX3fjdSJaIhmpXYfF2V+puHUeP6IO3hgGe5cRVMdqv
         S+BMaM48YuloMttbmQMEOFOPh7svdazWoIu2ZLzu1ubNMQ/8o/VUeR/cVweXWiVIL0
         myMh+tp2rymVQ==
Date: Fri, 24 Mar 2023 17:36:56 -0500
From: Bjorn Helgaas <helgaas@kernel.org>
To: Terry Bowman <terry.bowman@amd.com>
Cc: alison.schofield@intel.com, vishal.l.verma@intel.com,
        ira.weiny@intel.com, bwidawsk@kernel.org, dan.j.williams@intel.com,
        dave.jiang@intel.com, Jonathan.Cameron@huawei.com,
        linux-cxl@vger.kernel.org, rrichter@amd.com,
        linux-kernel@vger.kernel.org, bhelgaas@google.com
Subject: Re: [PATCH v2 4/5] cxl/pci: Forward RCH downstream port-detected
 errors to the CXL.mem dev handler
Message-ID: <20230324223656.GA2660301@bhelgaas>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20230323213808.398039-5-terry.bowman@amd.com>
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

I'd call this a "PCI/AER: ..." patch since that's where all the
changes are.

On Thu, Mar 23, 2023 at 04:38:07PM -0500, Terry Bowman wrote:
> From: Robert Richter <rrichter@amd.com>
> 
> In RCD mode a CXL device (RCD) is exposed as an RCiEP, but CXL
> downstream and upstream ports are not enumerated and not visible in
> the PCIe hierarchy. Protocol and link errors are sent to an RCEC.

"RCD" isn't a common term in drivers/pci; can you expand it once here?

> Now, RCH downstream port-detected errors are signaled as internal AER
> errors (UIE/CIE) with the RCEC's source ID. A CXL handler must then

Similarly, "UIE" and "CIE" are new to drivers/pci; can you expand them
before using?  I assume Uncorrectable Internal Error (UIE) and
Corrected Internal Error (CIE)?  (Annoying that the PCIe spec uses
"Correctable" in general, but "Corrected" for Internal Errors.)

> inspect the error status in various CXL registers residing in the
> dport's component register space (CXL RAS cap) or the dport's RCRB
> (AER ext cap). [1]
> 
> This patch connects errors showing up in the RCEC's error handler with

"Connect errors ..." (we already know this text applies to *this
patch*).

> the CXL subsystem. Implement this by forwarding the error to all CXL
> devices below the RCEC. Since the entire CXL device is controlled only
> using PCIe Configuration Space of device 0, Function 0, only pass it
> there [2]. These devices have the Memory Device class code set
> (PCI_CLASS_MEMORY_CXL, 502h) and the existing cxl_pci driver can
> implement the handler.

> The CXL device driver is then responsible to
> enable error reporting in the RCEC's AER cap

I don't know exactly what you mean by "error reporting in the RCEC's
AER cap", but IIUC, for non-Root Port devices, generation of ERR_COR/
ERR_NONFATAL/ERR_FATAL messages is controlled by the Device Control
register and should already be enabled by pci_aer_init().

Maybe you mean setting AER mask/severity specifically for Internal
Errors?  I'm hoping to get as much of AER management as we can in the
PCI core and out of drivers, so maybe we need a new PCI interface to
do that.

In any event, I assume this sort of configuration would be an
enumeration-time thing, while *this* patch is a run-time thing, so
maybe this information belongs with a different patch?

> (esp. CIE and UIE) and to
> inspect the dport's CXL registers in addition (CXL RAS cap and AER ext
> cap).
> 
> The reason for choosing this implementation is that a CXL RCEC device
> is bound to the AER port driver, but the driver does not allow it to
> register a custom specific handler to support CXL. Connecting the RCEC
> hard-wired with a CXL handler does not work, as the CXL subsystem
> might not be present all the time. The alternative to add an
> implementation to the portdrv to allow the registration of a custom
> RCEC error handler isn't worth doing it as CXL would be its only user.
> Instead, just check for an CXL RCEC and pass it down to the connected
> CXL device's error handler.
> 
> [1] CXL 3.0 spec, 12.2.1.1 RCH Downstream Port-detected Errors
> [2] CXL 3.0 spec, 8.1.3 PCIe DVSEC for CXL Devices
> 
> Co-developed-by: Terry Bowman <terry.bowman@amd.com>
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Signed-off-by: Robert Richter <rrichter@amd.com>

Since you're sending this patch (Terry) your Signed-off-by should be
last.

> Cc: "Oliver O'Halloran" <oohall@gmail.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linuxppc-dev@lists.ozlabs.org
> Cc: linux-pci@vger.kernel.org
> ---
>  drivers/pci/pcie/aer.c | 45 ++++++++++++++++++++++++++++++++++++++++++
>  1 file changed, 45 insertions(+)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 7f0f52d094a4..d250a4caa85a 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -943,6 +943,49 @@ static bool find_source_device(struct pci_dev *parent,
>  	return true;
>  }
>  
> +#if IS_ENABLED(CONFIG_CXL_PCI)
> +
> +static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info);
> +
> +static int handle_cxl_error_iter(struct pci_dev *dev, void *data)
> +{
> +	struct aer_err_info *e_info = (struct aer_err_info *)data;
> +

Thanks for explaining the :00.0 in the commit log.  I think a one-line
comment here would be useful too so future readers don't have to dig
out the commit to understand.

> +	if (dev->devfn != PCI_DEVFN(0, 0))
> +		return 0;
> +
> +	/* Right now there is only a CXL.mem driver */
> +	if ((dev->class >> 8) != PCI_CLASS_MEMORY_CXL)
> +		return 0;
> +
> +	/* pci_dev_put() in handle_error_source() */
> +	dev = pci_dev_get(dev);

I don't see why you need this.  Didn't we get here via this path?

  aer_isr
    aer_isr_one_error
      find_source_device
        find_device_iter
          if (is_error_source())
            add_error_device
              pci_dev_get          <-- existing pci_dev_get()
      aer_process_err_devices
        for (i = 0; i < e_info->error_dev_num && e_info->dev[i]; i++)
          if (aer_get_device_error_info(e_info->dev[i], e_info))
            handle_error_source
  +           handle_cxl_error
              pci_dev_put(dev)     <-- existing pci_dev_put()

So it looks like we wouldn't call handle_error_source() unless we had
a valid e_info->dev[i], which has already had pci_dev_get() called on
it.

Oh, I think I see ... handle_cxl_error() itself was called because an
RCEC reported an error on behalf of a CXL RCiEP (?), and then you use
pcie_walk_rcec() to look through all the associated RCiEPs, and
recursively call handle_error_source(), and we haven't acquired a
reference to those RCiEPs.  Right?

But I thought the CXL things were not enumerated (first paragraph of
commit log)?  But obviously these RCiEPs must be enumerated as PCI
devices or pcie_walk_rcec() and pci_dev_get() wouldn't work.

I haven't worked all the way through this, but I thought Sean Kelley's
and Qiuxu Zhuo's work was along the same line and might cover this,
e.g.,

  a175102b0a82 ("PCI/ERR: Recover from RCEC AER errors")
  579086225502 ("PCI/ERR: Recover from RCiEP AER errors")
  af113553d961 ("PCI/AER: Add pcie_walk_rcec() to RCEC AER handling")

But I guess maybe it's not quite the same case?

If you *do* need this, I know pci_dev_get(NULL) is a no-op, but since
you're testing for NULL anyway, I'd put it inside the "if" body.

> +	if (dev)
> +		handle_error_source(dev, e_info);
> +
> +	return 0;
> +}
> +
> +static bool is_internal_error(struct aer_err_info *info)
> +{
> +	if (info->severity == AER_CORRECTABLE)
> +		return info->status & PCI_ERR_COR_INTERNAL;
> +
> +	return info->status & PCI_ERR_UNC_INTN;
> +}
> +
> +static void handle_cxl_error(struct pci_dev *dev, struct aer_err_info *info)
> +{
> +	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
> +	    is_internal_error(info))

What's unique about Internal Errors?  I'm trying to figure out why you
wouldn't do this for *all* CXL errors.

> +		pcie_walk_rcec(dev, handle_cxl_error_iter, info);
> +}
> +
> +#else
> +static inline void handle_cxl_error(struct pci_dev *dev,
> +				    struct aer_err_info *info) { }
> +#endif
> +
>  /**
>   * handle_error_source - handle logging error into an event log
>   * @dev: pointer to pci_dev data structure of error source device
> @@ -954,6 +997,8 @@ static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info)
>  {
>  	int aer = dev->aer_cap;
>  
> +	handle_cxl_error(dev, info);
> +
>  	if (info->severity == AER_CORRECTABLE) {
>  		/*
>  		 * Correctable error does not need software intervention.
> -- 
> 2.34.1
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 7A0ADC6FD20
	for <linux-cxl@archiver.kernel.org>; Fri, 24 Mar 2023 21:52:23 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232118AbjCXVwW (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Fri, 24 Mar 2023 17:52:22 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:35436 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S232002AbjCXVwV (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Fri, 24 Mar 2023 17:52:21 -0400
Received: from NAM10-BN7-obe.outbound.protection.outlook.com (mail-bn7nam10on2071.outbound.protection.outlook.com [40.107.92.71])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id AE33C18175;
        Fri, 24 Mar 2023 14:52:20 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=MqQyDXn3PgXlGjyqwnjhAxq4waE4rV5Cw+DNYnNkCrAZXrrjHcfeHeQEjJ2TuLW3u/KQQ4tnKfa8F1P3IPg/qKnaOymWqsDnVeEnvtyCBPjpgPWv+1/W8uemlVBnsF0KZFFyLLRmzdal2z7/o9v2kxG6/XSxW0xt/RH4NC0lhOW/sPLOMKX8QCJOlhiGWxs0eMrpRwvX7CCwMB8ngxnOn3SqX5l+HOEs7KKMlg2734O1IgQYxCntpKiA0UR5Q1MvYujGglyhLJmIIJSG/0FMN2LZLbRlRfqPHDIn2PwQ+iEkAdAGVU7thIqMnaN2sx0FSiceKEmVnCzvnWFXvM74wA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=nH3YGonJc8BH+9GQXa4T7aINm6Vu+Ymg/3lTC+X8Jtw=;
 b=MpvONAWFTVZtDR6mtHvXKU9ZdU0AUfaZz3gQiOLPPpL/1PWdSN/39Np2s421VnYNnqZ6KQ3YiRvjbnmrO1UI5zIB9KYa7iN8Sm6PphoU0vnTemr6i0INwueA2XHN18Whi+H+Kim/4GcGfpaV715maoI/HVVv6otV5AuSQmzfWqKGv4Je5vsMopEl43prPPpTviy29P2c4hIAYyrUAa5xup/eldubxDaMamoQmG3FVPVYYytqDPs/jhh3P7Cyh9jQaZoPLtrFvVI4NyPBce6BAmDV6CONqJ7GP8tAg+W6c1SQVDTidFoHHvjgM8JxiylPdMimmiV9NbXlu9wwzC8M3A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=nH3YGonJc8BH+9GQXa4T7aINm6Vu+Ymg/3lTC+X8Jtw=;
 b=sualB6zZydp10VYl39p0D3oHoZQDXxDMdjBSmuDXwgD7XydvP/wBumWueUN1uzJg+R7NdnScn8ZaUY78F+w4l3Q7s7Volxv7JDqJbtUx959o1groXG4A6KFWFraN575HnHF/GULES0/bkuWP8uObWNUuKj/EPYEG56VsfccXJ4Q=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 MN2PR12MB4470.namprd12.prod.outlook.com (2603:10b6:208:260::19) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.39; Fri, 24 Mar
 2023 21:52:18 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc%5]) with mapi id 15.20.6178.038; Fri, 24 Mar 2023
 21:52:18 +0000
Message-ID: <3a21a541-d725-a199-0237-ed16cad29a28@amd.com>
Date: Fri, 24 Mar 2023 16:52:14 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.8.0
Subject: Re: [PATCH v2 3/5] pci/aer: Export cper_print_aer() for CXL driver
 logging
Content-Language: en-US
To: Bjorn Helgaas <helgaas@kernel.org>
Cc: alison.schofield@intel.com, vishal.l.verma@intel.com,
        ira.weiny@intel.com, bwidawsk@kernel.org, dan.j.williams@intel.com,
        dave.jiang@intel.com, Jonathan.Cameron@huawei.com,
        linux-cxl@vger.kernel.org, rrichter@amd.com,
        linux-kernel@vger.kernel.org, bhelgaas@google.com
References: <20230324214159.GA2660001@bhelgaas>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20230324214159.GA2660001@bhelgaas>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: BL0PR1501CA0007.namprd15.prod.outlook.com
 (2603:10b6:207:17::20) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|MN2PR12MB4470:EE_
X-MS-Office365-Filtering-Correlation-Id: 38760abe-c25c-4946-cacc-08db2cb209c2
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: TeL7NHPMaX22PFxW4Iijh7iJW2KeyP+UatpJUp2wCmI+k2pjPNW2vEuRyyHtuqo4ews8ON/Z8Afcx7kDqXfWGWzw2lsUfSYyfeZcGDg3YQn89AMK8ADxBurpTBMHEVpPZMXHwwzgSU8zhK/o33sDw0hDh93edYYOYBjsiyMugSGXaU6StIFKn5MoLCrDynme8z+DCIRiKthrqr2TcwzkcrGgzjHRUj3x9EcWzW432dCjSr8BdnyBFiONT1V1+nVBhhNS26FxT9bG6ZtakQDshq0ISI9K+G764Y31cdeeUoeXk5hHgWAGfLVrkTr3uvghLQvaybpHMKKVp0mCZylMylat+jPeJn4cY1oT217orLCCsZBsyp2babDPBoe4lsI6/uit9mslOPucfSEicUJ6ZzlRA8+D6z6wc3XP4jCG22WJ8KKN73A1mZxG54OlceAC7kCUoXLzGJaxx5dD/0xCVHZE1H7Z4dEa2/8RQ7fyiJNXC8pe+OhaFafWVJcIAGd1UpCA1M/A/1alRHLJ8hbAR4A8JBIWiVkLycwugR4T/4bpiBmONAz5suA19dBNKSeoEzqV2M4PEbUm8RhMG/rJ3o+dg8xhHYwlE1dsVOLVMH+e2JIJrBnlddQfKV61qiNXD+bwLjz9a7mgu4n4FhFOJoSGboXKisvLKeQsEjXDl7XKJnDDBaPuCsXTV+fnMK0hFoVir+0WYyK0lKYFza9QOCn3mD8oyImNMg5ReqDl7Ig=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(4636009)(136003)(376002)(39860400002)(346002)(366004)(396003)(451199021)(83380400001)(2616005)(7416002)(5660300002)(6666004)(6486002)(316002)(478600001)(2906002)(6512007)(66946007)(66556008)(6506007)(8936002)(66476007)(8676002)(6916009)(41300700001)(4326008)(36756003)(53546011)(31686004)(38100700002)(186003)(86362001)(31696002)(45980500001)(43740500002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?dmdBcXN6Z3hZNEloMEhkeGlkdmxGMXZKVHkzQUJML0tkUGNldXBBeHJOV2RT?=
 =?utf-8?B?YUZOZ3J6UHhCTnljUVNTTFRhYnQ4b2JoK2tKSTYzZWZzeEVRYTdlL0FqL1VH?=
 =?utf-8?B?Vk1ONEw3K1NXYWkyS0xVQkI3VENqcWJZaCs2QVB4WS9hL1NSZTgyUDFJZkpW?=
 =?utf-8?B?c0VCa2NYU2IrYng4N3NuVmM5aUdYVW5MR25sbUFqTnJhdm03Z25xVG8xZTBW?=
 =?utf-8?B?bEdJdFljSHB1ZjJCMmRZTExNcWw5ZTkxejVyRHVBbERGZ0NRUmsweXhQaldJ?=
 =?utf-8?B?YWxiQWU3cUNwd3ZxQlZvejUwVVFSQUtJd1EvVzNwZmdvdml2RlRvNHNTWEJj?=
 =?utf-8?B?WDhzUjlGemZLSlp3bHg0ZXAwTWNBbjFkVDhKTGJVQXNKZkVBZENWRmxmTEk3?=
 =?utf-8?B?Ymp1SGhVd25xK1BPTlBqVU1GNGl3NGFBdStIV1BKRVF0OVZjRXlxNnFQRHRx?=
 =?utf-8?B?aVJHb2llV2FvU2xJSlUvUGlSQ01yaWozeWNMMXRnT2o1ODcrTFFQeVc3RjFH?=
 =?utf-8?B?QnFOSk1oMFJSVm1FMTdLS09UZDZpa3ordTV5Wi8reEk2WXRMMkZaR0tVS3px?=
 =?utf-8?B?eEtYUlZsYXJUaEwwT2owNzJOdkE1Nk9SVFBiT2tUR3ZMd29ieUFkQzRCL04v?=
 =?utf-8?B?Q3k2QkpiZlpuYk1aWi9LLy9SVmVtblBUVzc1STdJNFB6QWJrQVFSLytnVHJL?=
 =?utf-8?B?UmQxYkRvWFlDTFAvejRYUnpqbVA3eTY5ajUrSTV5ODFhaHhrRi9pOTB5Ni85?=
 =?utf-8?B?NzZoS3hpNnhxbFk0UGZQN1c0clArSTJYSXoyRkhCKzNOT0xkanFJYWFqMlBv?=
 =?utf-8?B?SHdudTlodklKQTZaSzJUaWRySXVqSk56WnpXYzIzTENodDBteTN4ZHhtNEZP?=
 =?utf-8?B?T2tTWEs4UFk1Nlk4RTVsVlU2STNkRmFacW5UMEF1NW5OdHl0TEJqTnh4cFhp?=
 =?utf-8?B?ZEdBSmJkSXNSLy9nTURlanBVckVxRzV4MHJ4dXJqbmVqK3k2eHhoRTNFMWFF?=
 =?utf-8?B?djlKYjB2NDl0eVMxVE9FbDd1TTdYcVg5bW41UDY2K2F5N3l4OTR5OE9pQktD?=
 =?utf-8?B?OC96eW1uMG1sYU5jQ3VwcHl3ZldEZlRWTWhEeFo5R0JDM25xQWlTYW16bkRu?=
 =?utf-8?B?K2VzcFhIdlVJd3hJMlBMRlgraHVjZWhyR2xWTU1uTXVQK3ZPbllNOUd0REs4?=
 =?utf-8?B?UHlseWZjSDZHVGgra1Nqa3pPUzdIQ0NXV21XMXkrUkJna2xoK2VPTjJGbmVj?=
 =?utf-8?B?V1NRL003R1crSnB1dTk0SHJJOXZ3SlBlNW5EM1BaWW5rOUgvODVDc1dpTGp1?=
 =?utf-8?B?N0VZNnZLRm4vd0pWVTFEM2tqdTJKYm1xUWFySCtmRkVZcW5yYlFqZ2Q1OWZV?=
 =?utf-8?B?cGEvQjk1b1QzK3ZEU0kyd2VVQ0szUktxOHdWTklraWM1NmVzQkRjV09yaW1a?=
 =?utf-8?B?dTdBZmgva0FHbFNEekZML0ljcXd3a1lTTkY4dkNabFlzQ3pqZG9kZitVaWVt?=
 =?utf-8?B?ZnZuK1BCYVhhc25lS1JweEtVd1dzTmRWQ00xb1BWeXQ5c3VDR0JoaWtqT2R0?=
 =?utf-8?B?Tng0M0tKZ20vU3pHUU14QXQ0d1ZtL28ySUc1aG44enFHWUJrSE83aXNqbTBh?=
 =?utf-8?B?eVZ3VnFRM1JsMEdTaDJCMFc1bDBtUlhRL0JOOW9TMFJjb2Jla01xN2F5MTBa?=
 =?utf-8?B?OE92RXIxSmpOanowMzl0QzdENXZrYjRyNk4rWU51MXBGZ1pJOGpGZi9KV0tj?=
 =?utf-8?B?RmFLbnM3WmpkNktraTYyOHdydVBxN3FBWkQwUVgyais3Q1Zwb0k0Y3p0aWQv?=
 =?utf-8?B?Q2pzOVpZak96SERIL0ViUk5pZzk2MFdOSjVRMWFRT2RSR0tMVkZjNitUSUcx?=
 =?utf-8?B?Yml3SWNCcHlMWEZNd3pLT2E4clRScHlmV3lNdysxY29BZlFQSXE4MEYwekZ5?=
 =?utf-8?B?K3RhVUxZRXNmUEl4bmpZUDh3cTdLSnR6aGlseGJ4OXlkVmE4VWIzZ3p5cGZJ?=
 =?utf-8?B?QlpmbGdoQU9rQWZmVmdQRjVXelVjV0ZMS1BoWWFHWHJmbVorQi94c1E3bGlR?=
 =?utf-8?B?NzdHbXk5WlE3M1VHWXRhWjc5SGtkTVhtWFk5a3ZIWk1LbkRLTzhiNklOSW95?=
 =?utf-8?B?cm5hd0oyR3lMWG82b0FERWUwRllYY0R1QUQwby9DV1pEZWM2a0dlM2RuUTBW?=
 =?utf-8?Q?LZL8/JzyA2+kyWqJC/EC+BRt5LE/ZH4+3o9CbJ8kofqZ?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 38760abe-c25c-4946-cacc-08db2cb209c2
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2023 21:52:18.4493
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: PRKNrR6N2vYR4y5Idc/RkOIhAUE2uqzmPA5QkJUPYLbN2ExhNdpiIl8nY5kvuNxSOQRegq6x4XJNCcufiUdY0w==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB4470
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org



On 3/24/23 16:41, Bjorn Helgaas wrote:
> On Thu, Mar 23, 2023 at 04:38:06PM -0500, Terry Bowman wrote:
>> The CXL driver plans to use cper_print_aer() for restricted CXL host
>> (RCH) logging. cper_print_aer() is not exported and as a result is not
>> available to the CXL driver or other loadable modules. Export
>> cper_print_aer() making it available to CXL and other loadable modules.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> Cc: Mahesh J Salgaonkar <mahesh@linux.ibm.com>
>> Cc: "Oliver O'Halloran" <oohall@gmail.com>
>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>> Cc: linux-pci@vger.kernel.org
> 
> Acked-by: Bjorn Helgaas <bhelgaas@google.com>
> 
> But please update the subject line to:
> 
>   PCI/AER: Export cper_print_aer() for use by modules
> 
> to match previous history.
> 

Hi Bjorn,

Yes, I'll update the subject line. Thanks.

>> ---
>>  drivers/pci/pcie/aer.c | 1 +
>>  1 file changed, 1 insertion(+)
>>
>> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
>> index 625f7b2cafe4..7f0f52d094a4 100644
>> --- a/drivers/pci/pcie/aer.c
>> +++ b/drivers/pci/pcie/aer.c
>> @@ -809,6 +809,7 @@ void cper_print_aer(struct pci_dev *dev, int aer_severity,
>>  	trace_aer_event(dev_name(&dev->dev), (status & ~mask),
>>  			aer_severity, tlp_header_valid, &aer->header_log);
>>  }
>> +EXPORT_SYMBOL_GPL(cper_print_aer);
>>  #endif
>>  
>>  /**
>> -- 
>> 2.34.1
>>

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 7DDFBC6FD20
	for <linux-cxl@archiver.kernel.org>; Fri, 24 Mar 2023 21:42:04 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231522AbjCXVmD (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Fri, 24 Mar 2023 17:42:03 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:46278 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229748AbjCXVmD (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Fri, 24 Mar 2023 17:42:03 -0400
Received: from dfw.source.kernel.org (dfw.source.kernel.org [139.178.84.217])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 7C88B1B57A;
        Fri, 24 Mar 2023 14:42:02 -0700 (PDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by dfw.source.kernel.org (Postfix) with ESMTPS id 1D4C762C87;
        Fri, 24 Mar 2023 21:42:02 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 439E3C433D2;
        Fri, 24 Mar 2023 21:42:01 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1679694121;
        bh=xRa+m0mHGF8D1AxbZaKzDTDZQwY354virrBeCtIyB18=;
        h=Date:From:To:Cc:Subject:In-Reply-To:From;
        b=Y1C0yqHVuhxPHdfidRKUzK0ojng5Vs33q9VzcX+HPooy6IwHpiLex6g5UrEn2/5BL
         ODkgGgWqXgkgXOUOgZg6QXyQk/07XcH+VVcZgM8XeuPsi0XFIEFTxIHINfPX6h3FCP
         mOx5MXWRdC83YI0uKf7h93RRXWndCD0XtiNr+dFg6RBRr7toDpqDDJPpsQcbBR3rg0
         1Z28B42EBITIaMObyiBfUaPz7Drpr+P0Ny29YxizRl4kSjvyEmhT7omtSOEPqTEkvw
         UlRJjxmyHSJlYSD7uImzOUxndnlkq9WhsN3CZOJJZBPjml5Y7sN3iRcs2kbwJ6SSON
         dPgXLxtdnhqfg==
Date: Fri, 24 Mar 2023 16:41:59 -0500
From: Bjorn Helgaas <helgaas@kernel.org>
To: Terry Bowman <terry.bowman@amd.com>
Cc: alison.schofield@intel.com, vishal.l.verma@intel.com,
        ira.weiny@intel.com, bwidawsk@kernel.org, dan.j.williams@intel.com,
        dave.jiang@intel.com, Jonathan.Cameron@huawei.com,
        linux-cxl@vger.kernel.org, rrichter@amd.com,
        linux-kernel@vger.kernel.org, bhelgaas@google.com
Subject: Re: [PATCH v2 3/5] pci/aer: Export cper_print_aer() for CXL driver
 logging
Message-ID: <20230324214159.GA2660001@bhelgaas>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20230323213808.398039-4-terry.bowman@amd.com>
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Thu, Mar 23, 2023 at 04:38:06PM -0500, Terry Bowman wrote:
> The CXL driver plans to use cper_print_aer() for restricted CXL host
> (RCH) logging. cper_print_aer() is not exported and as a result is not
> available to the CXL driver or other loadable modules. Export
> cper_print_aer() making it available to CXL and other loadable modules.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Cc: Mahesh J Salgaonkar <mahesh@linux.ibm.com>
> Cc: "Oliver O'Halloran" <oohall@gmail.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linux-pci@vger.kernel.org

Acked-by: Bjorn Helgaas <bhelgaas@google.com>

But please update the subject line to:

  PCI/AER: Export cper_print_aer() for use by modules

to match previous history.

> ---
>  drivers/pci/pcie/aer.c | 1 +
>  1 file changed, 1 insertion(+)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 625f7b2cafe4..7f0f52d094a4 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -809,6 +809,7 @@ void cper_print_aer(struct pci_dev *dev, int aer_severity,
>  	trace_aer_event(dev_name(&dev->dev), (status & ~mask),
>  			aer_severity, tlp_header_valid, &aer->header_log);
>  }
> +EXPORT_SYMBOL_GPL(cper_print_aer);
>  #endif
>  
>  /**
> -- 
> 2.34.1
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id DCBECC74A5B
	for <linux-cxl@archiver.kernel.org>; Thu, 23 Mar 2023 22:29:23 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231532AbjCWW3W (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 23 Mar 2023 18:29:22 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:37792 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229690AbjCWW3V (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 23 Mar 2023 18:29:21 -0400
Received: from NAM10-MW2-obe.outbound.protection.outlook.com (mail-mw2nam10on2068.outbound.protection.outlook.com [40.107.94.68])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 78DE927D68;
        Thu, 23 Mar 2023 15:29:20 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=X0gT7A5LrZTCIUSq+hHghPO09co320ZrFLkt3byhzC28ahQMYStYpaZ2dGUBKXZxKJaLVZPN/24TnI/Iwrrc/LufnhKTdE5jeFAM//7YLkyHyh412SJGKh5fa8E2w6IucMQApkXu6PcAqta9V785+cTtdHMz/yRo+h/gVRqZq/5DApDLGAv9A9csiB8YO0MDjApPV/h8DuEltS3qvfJlqWd4mWHZB7aTTozPD9WKeeHAHk7zcVNTn8rRKQA30uGCHZYAJi2e64ZXdLfplyYh7FJa+uerHnNfwkyi7H3VvTyb4ELiFW3wZ6krj/jh7atYEUde8ciUY19UjLHg2MFJNQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=RFwOr765hp37mLihN9clLto9Gmb8x2ZlAOzwGD6FJZ8=;
 b=oKpLEF/FDTeO4ThptzTeJBfDVIX+g3VHyycOu5TIlVayUDqjKzIWmKW4hZL8uMpy86rgYP52O7TTmwRRUcQzKxmt+odPon9klEj+EbxmGCVibW+c4yDBuLJzgBIggVxsZHZKvNodljmQZr+NKjoMJS+1RoWVQOFLP3znHHxgEhknShYuRXr011J/XazrSHh9GLsHtLx6/ct71HLnE6OEHTNyuWIlHX9fopmTcWySjmWqaBtcDalRl2F1ditC3H8QqJt06mITG93mJ5xiZ4mxz2ecb8LrokIJFTrjfHBKGsldLWth8kyXOoFUavVvLgzEYnRjy3W22x09twgB+BCayg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=RFwOr765hp37mLihN9clLto9Gmb8x2ZlAOzwGD6FJZ8=;
 b=zf8+OJokv8Al5ekEQ+sFQyoM2m/yrYDpJankqVaHTTv7awmVZidUsItfcLt2IZnjg/wC06Fl7bTGfv42Mv32OyWiq/GqhD54Ofpax7nUBNQ4gEWbxdftjqD8a+7LLHDMz3xwaJ6LNk3ciKSuk7DeMkY0TvzJ4B3f57ycPwjIL7A=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 PH7PR12MB5596.namprd12.prod.outlook.com (2603:10b6:510:136::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38; Thu, 23 Mar
 2023 22:29:18 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc%5]) with mapi id 15.20.6178.038; Thu, 23 Mar 2023
 22:29:18 +0000
Message-ID: <21797f11-0e95-da38-28b6-7c366c6727da@amd.com>
Date: Thu, 23 Mar 2023 17:29:14 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.8.0
Subject: Re: [PATCH v2 2/5] efi/cper: Export cper_mem_err_unpack() for CXL
 logging
Content-Language: en-US
To: alison.schofield@intel.com, vishal.l.verma@intel.com,
        ira.weiny@intel.com, bwidawsk@kernel.org, dan.j.williams@intel.com,
        dave.jiang@intel.com, Jonathan.Cameron@huawei.com,
        linux-cxl@vger.kernel.org, rrichter@amd.com, ardb@kernel.org,
        linux-efi@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, bhelgaas@google.com
References: <20230323213808.398039-1-terry.bowman@amd.com>
 <20230323213808.398039-3-terry.bowman@amd.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20230323213808.398039-3-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: MN2PR11CA0026.namprd11.prod.outlook.com
 (2603:10b6:208:23b::31) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|PH7PR12MB5596:EE_
X-MS-Office365-Filtering-Correlation-Id: 7677b38d-cd6c-4cc6-e2bf-08db2bee0a45
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: D/6M/wT/LmPJjC4kQDcz0szjdbPLkJ+YTjKLolPuQzv2lUONE8aXSVHdDJ0JZBAuuGVyuCCg0tHLaanRdI1zl/EoOs6NGUsa7TBUb7XuBdnRL1NmQDQmzNxDOCcX9qbXcgvJlXSueQT1/H6CzWrxNY++BTuJy8UJMqj/F7C7cQ9zeIvCPmryvUV9zzqUM2qAmFBrmG6twqJ6fNQsS68NtFZ2JsaoDkCOyqRU16LRwpqVTrDotwQiQ8vnk71WlG5YUI0eWA9aZtQQA0oYplDKoZBbgzx8Ng5tLxDxrsLk3FQgakhtQX72xVTLoU8v4CKUsCwB48QQnCiu0+2JH7Deg+lrGwFRMndMRyG3Jj+H45+8j/k3SXqHsO542a79iIwGKZKXR21ws1XF3Imgj6/63is7FTpslT5s6xF9mnOYSCCa1zXJucosKb1c8myujVwt6f1Jp35ys3DspqDgTk1b9cSnxh+b1/viO85fWDzlNK4W7PYWxcJ+vKtuOwbSMnOWuIX/dkJePaaZsGxOC4Z9TJCBKR3PFOirUGrHA2bprktJlLSZazP+tfzt194o5mvFeyCIeydlWTfxNe6AiT84aRQ7p40Ra73rdpqHZIUv06DmnVbXbhWYcgyGDqPq+Qu5jrdofeJX18rzOPS2kdjb9oAEINKqizkdg8Ic00HAKtStjPFx9F1rK5GNxlzingzeucDx2xcGKn8ZqZNJK4MFw+DRnhcXdyoUmmLwGNjx7XaM2HYHkD7346bMyoB1YrSc
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230025)(4636009)(136003)(346002)(376002)(396003)(366004)(39860400002)(451199018)(558084003)(36756003)(38100700002)(86362001)(8676002)(4326008)(66476007)(66946007)(66556008)(8936002)(41300700001)(6486002)(316002)(478600001)(966005)(7416002)(2906002)(5660300002)(31696002)(53546011)(921005)(6512007)(6506007)(6666004)(186003)(2616005)(31686004)(45980500001)(43740500002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?Ty9PVm5Ra05mUG9GRXJDN09KVUFKOHgwL25lK0pwNU8zYU14VW45L2lFekxu?=
 =?utf-8?B?a1dkaE9GNDdDbXo5UUgwak1URGNrREdXTHFNb0Q2ZWVyYnkydkpLQWx4WVF0?=
 =?utf-8?B?V1pvUy9pYkhxVGV3bzBnOGRXZCtSN1lFL0taa0tCbFBaaXNleUJHcWJvT0lE?=
 =?utf-8?B?WWM4bTZLWTcrTUdtVjZDWS9hSjJWNHAvTGxOVzllYWpvQXRobUtsdzNRZHJy?=
 =?utf-8?B?b0JhUE94TWFYMElQYi9vODF6VnU3RVJDRjBCc1VvZWFSbk8wOURFa2JPL3dD?=
 =?utf-8?B?ZEpSL2x3Tk0wVGoyVW1uTm9kcjUxakkvMExXc2NzY1VuK1g1WEpPRGhQVnM4?=
 =?utf-8?B?S0R0dGtheFdpOEZwWVdIVW9BWE50aXluclJJZ3NYMjJIbjkvTDZXZWVYWlR6?=
 =?utf-8?B?eUp4WGpkRGp5U1VzMnlMMEpLN3JxamtjMFVCYTJwM05xOUg5MkhWdjNQVVYw?=
 =?utf-8?B?bkt0czlENnB2K0FsZFF3U1dST0xTSWZ2aWFvYnlJSjF2d0NpNnFuTC9zdFA1?=
 =?utf-8?B?d1ZEMHA0SnB0aW5MQWRlMVZRM2kzOENQcU1qUTF6NFZjMmtPK1FVZU5yYXZs?=
 =?utf-8?B?Tzh4UnlDRURwZ0VpR01nb0xRdFhwcFoxM3VvMWhEYU1EN080K2JIQllhdGV4?=
 =?utf-8?B?aENsSVVvV0tobTUzeC9hVGFIVFVCQTJ3WkFpTmlDS3BKRnIwM0pLQzFkUmwx?=
 =?utf-8?B?N3NHVCtidlFUanRTYk1WeHRTcVdtQ0Vqck5PZitjaWtVbmlJaTJCWEkwZGxS?=
 =?utf-8?B?OVJqT085K3NyMlJOejR2eDVqL2VObHdQdkpHTlkwSTVGS2UwUEJUK1RoQ0NV?=
 =?utf-8?B?b1FjUmsxamc4QWpwbWVRWFZnSU9CN01uZ2hLTU1heTdsT3lRdU5neWtYa2pL?=
 =?utf-8?B?TGRyVjBoVUpqdVJHZVh6Y0Y0QzhrQWdwaGVrbXh2blpYdi9uZkRJU2JRUG5p?=
 =?utf-8?B?dVdjV2RRcFBxRzk3Tm1vOXRNdEhXZTFsNUxtdnlaaStscHkzTFh2bVE1V0lW?=
 =?utf-8?B?Y1dXUGYyeWxpNTUxQmxXM3BTb05tWUV6RDNtTVRjVHhPRnFMaWtyb0hqbVBF?=
 =?utf-8?B?NXZOZ2w4akM4K1ROc0hUQ3V3WlpIemNZMEM5RFBXZkJ5RmJNZzB1K2svMGhh?=
 =?utf-8?B?aXNXeEJmTlVVMEtMWlRKQ1FiZHp4cm9uYjhhc2tuOElOTkVHdHZpZE9MZzRQ?=
 =?utf-8?B?QnZUZEowcTZpb3g1VFZPOGpobUZxU21RSnFTSWFoazl0eXVwcmdyam1sQVFF?=
 =?utf-8?B?NmYvajhWMFpuR0dKbkdGQ1U0RytWc2FYL0paS0RVQXJ6c3ZqallhaGNuallB?=
 =?utf-8?B?bVNmVWVONS9USVg5MnlJT1RIemZyR2ZMVmdhc2QxVmtPYmtNTmEzdEQxbnpN?=
 =?utf-8?B?WGtxbjJJbjRja1k5Nk4xMnhIdGU3RC8rWEVtcCtTTVV0anFmb1VCR0ZjRHRR?=
 =?utf-8?B?dlIxTkJYanlvYkJlWmRQcTdzd3o3N1ZTRXR0a3JjQWFZUVYyVFJqcis2UjJJ?=
 =?utf-8?B?U08vTXVQeG1nd3daZkFZVDAyZWVQRWVIYVVrUWUwUllxb05jTnlYckFsWENs?=
 =?utf-8?B?Q29tTUZvNWsva3lMUDlnYUkwVlp4eUJJbzlRdFhsazRmUFNvc284VmJ3WDdG?=
 =?utf-8?B?b2QwcnpUVTkxNDEzMjAyR1lqeGxrVkNxSmpWRnZVNFJaWm14VlpnRW8zK2Y2?=
 =?utf-8?B?V2czSkhhQ3BIYUdLRy9IeldYSjVPUzNtZUQrbVJ4OTc4NW5hK2NnUldzdHJH?=
 =?utf-8?B?dXlhTjVGMmY3d1FYSitOLzF0ZnZtd1pqTkNCSERmb3ZybUx5YzFFSk9PbGpV?=
 =?utf-8?B?NFBYcmJzaW03WFpzQk9kSTM2QXZ6M0swcCtLN3haY0ZQQmVlL2c3cnRWRnVO?=
 =?utf-8?B?WCsvYllDYVNxUlFoVXpST3A2SFltd25EZGhXK0dVamZYc3BzM0RGRmU2YWhR?=
 =?utf-8?B?RkUyWm5UaTk4Y1dtSzdmL2dLRndjOVZ3SW9Jc2NpSExibnN4d1oybWdwSHdH?=
 =?utf-8?B?bndGLzRnTE9KaVlJR0RHb1liajhhNGd1ak9nVXdIWGZYaStMWU9wMy9tRDhM?=
 =?utf-8?B?RUlrYS9XeEVMYVRaN25FUG9sYXN2UENkVnRhVXFORHpqSU0yNVRmUlJHZlN6?=
 =?utf-8?B?cjl4T3VXSWl5M0FjMWl4RW9qd2RXUzhwTEdITzNKUHJXT3JpR1lyek0wenFS?=
 =?utf-8?Q?DqVIKFg2l1Y7Xhy6U5MZhGUQU4z3ukmmlUABu8L+gq/6?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 7677b38d-cd6c-4cc6-e2bf-08db2bee0a45
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Mar 2023 22:29:17.9350
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: V1aoJOjKT/dFx4j6NehMjV/g1NfY1FB0nLQ/sJiTjnNXKAIaYN/8vSxz0kxIWDwAkx75F/kDCc6oZ0BYZXYMeQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH7PR12MB5596
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org


Adding EFI reviewers.

https://lore.kernel.org/all/20230323213808.398039-1-terry.bowman@amd.com/

On 3/23/23 16:38, Terry Bowman wrote:
> |Ard Biesheuvel <ardb@kernel.org> Cc: linux-efi@vger.kernel.org |

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 90040C6FD1C
	for <linux-cxl@archiver.kernel.org>; Thu, 23 Mar 2023 22:27:29 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S230259AbjCWW13 (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 23 Mar 2023 18:27:29 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:60192 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229690AbjCWW11 (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 23 Mar 2023 18:27:27 -0400
Received: from NAM02-BN1-obe.outbound.protection.outlook.com (mail-bn1nam02on2048.outbound.protection.outlook.com [40.107.212.48])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id A34D417CF7;
        Thu, 23 Mar 2023 15:27:23 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=I1GYwKn0qH4eEXdB29JAxMGAPqXl9FIiH6olu7IsDjNC/BraMf2m1wtG0s3W1JPRiKK+1rzhfIeCqDSMuK/OrqL3HoaajNO8P2ALjYS56Uzevv/bSrZVZ16GLMIkXe8kHmUxZ2xbp/zJxdz9j9ae9vT9QrV2NEjmqoNZgdZP32pBCoa+fJ75eH1eXSTM1Oct5dhTZ5mpbkAsFplLbiVBZeEmNpRsZRUacjbB+guVRbqN5FgGqSzniEfzHw5fRiO0W0sywQHnL9nVMw0MThyZ0iHUzmHjYmmlFcFvMBqA/GSc3Kvac9YYwopu94/yV4xQIZKCvVD0bQTMuRBKYtrl/w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=gNT6THAsSAAAwx4TR5nAgmZGFX8qnKAXpy8jGQGZCFs=;
 b=aKc+CMf3opSPH9FWkJlfgS5wkrOS32v+EW0MdYpj8g2WndyHtzo8V8KuDz7P9D1T4+7sxqBIXJSIf6yiyb+fiDupftu7U3PRu4nO7YVzttFyrO53GD9BY16mPfmy9UB2oavgFYPuljrKNAEXC06JfjV2A88dFfsMHZlyn/j6izv79ZnnBC6ODcpk6iJ+rkMk00wZQku1slLOD3rHBSwVsZ6iDoczNLNQFlNkCcx66zQOmsdITyGHKNoqo9V7HI/8DlOOcz2RVhMPJbluKTXtfczngu65/eG+mipLO8Qz+36TJhk6LSIMBLycrMf8DBqugfBNAhFNFUF6hsqlni9Now==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=gNT6THAsSAAAwx4TR5nAgmZGFX8qnKAXpy8jGQGZCFs=;
 b=iqRmmOQTHj405RGxlLs998WNe3aGzrnYBbijDti09miR+nWNTD023xJ/6jBporI22zYOXX5r/K/UCmkWd6j+LbPeAP61cwrcRFF1Wp5y0dkkfAJjxrxagiP7S+b3cDfy13B0NjkWyUzjdWlwDiGbJ+YT2AZO+OasQN00M9eG3IQ=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 BL1PR12MB5972.namprd12.prod.outlook.com (2603:10b6:208:39b::7) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.6178.38; Thu, 23 Mar 2023 22:27:21 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc%5]) with mapi id 15.20.6178.038; Thu, 23 Mar 2023
 22:27:20 +0000
Message-ID: <b4215d67-a5c9-aa96-704e-101770127f25@amd.com>
Date: Thu, 23 Mar 2023 17:27:17 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.8.0
Subject: Re: [PATCH v2 4/5] cxl/pci: Forward RCH downstream port-detected
 errors to the CXL.mem dev handler
Content-Language: en-US
To: alison.schofield@intel.com, vishal.l.verma@intel.com,
        ira.weiny@intel.com, bwidawsk@kernel.org, dan.j.williams@intel.com,
        dave.jiang@intel.com, Jonathan.Cameron@huawei.com,
        linux-cxl@vger.kernel.org, rrichter@amd.com, mahesh@linux.ibm.com,
        mahesh@linux.ibm.com, oohall@gmail.com
Cc: linux-kernel@vger.kernel.org, bhelgaas@google.com
References: <20230323213808.398039-1-terry.bowman@amd.com>
 <20230323213808.398039-5-terry.bowman@amd.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20230323213808.398039-5-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: MN2PR11CA0027.namprd11.prod.outlook.com
 (2603:10b6:208:23b::32) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|BL1PR12MB5972:EE_
X-MS-Office365-Filtering-Correlation-Id: 6e5a2793-4267-4de4-9450-08db2bedc476
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: Rm1rD161wCUVUK0TRvFpoAoB1UPom9S7HKVwuKh1Dsg3rSDP3/Ih2cAEjeLtJa2pvLBKVV3eS8ahRPBqS9jqf23Y1fkVvJOl5ZI/Q1V1c7hHOgsS0DP7Yl/HfPOj6N2e6S+WVrXxMlC8YzZVe+UKz8CGloGpts7I2MfdGAO9Djf3DcQCHa0490pBMYgVZwA9iH2lduArqlaFYCxWj272Sxu70W6Y0UrwLtYJdRnFblaFqLvfKOoZxfEsWATWpX7A+ngsvhkn7er9E9u7gBRdgiQlx6wQfXE7u9epN4LJfTKljBQHpj18u3yOwl//XFjrvS0vT9Z54DGkFV0XtKWvE6UikP1I5dSRbMoWxM6PsROCTPnR8ce2PPwolZ4IL42sxu0eJ5UQYaG4W8Ibz252/8x849t2HP/pqVBTog++bruKFbx4v11qd0kaOKhQ2kBj2f+E8YEaGR3nYK7HBn+4oCmtb8bYy+gv+cH7JmjsZ/TFHSMAlcR27457q1CufZPyO65t3UOFbxU64cKGtey3LBsH2hEXrruTo6kkCBdF/CuSsuTKRrd0vVMHw0QrH1IWxrNOPuDLEvVOWugYs+aEGKXxEmK6VOEgPPbUc03fhJHcl0yuBlY82evxuulkPIKhY7j73vGZGljbD/MKxr0+CE6AuRBwRIkXJiGSbIdgem/mJr5dCBRZ5c9ktqHr+8vtL+pvXrBsLl4oZbqzP/tHY33NB4KxnOb4TXb794mZRJ8=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230025)(4636009)(39860400002)(366004)(136003)(376002)(396003)(346002)(451199018)(5660300002)(8676002)(4326008)(66556008)(66946007)(66476007)(7416002)(41300700001)(316002)(8936002)(53546011)(6666004)(6512007)(6506007)(2616005)(186003)(478600001)(6486002)(966005)(86362001)(558084003)(31696002)(36756003)(921005)(38100700002)(2906002)(31686004)(45980500001)(43740500002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?b3ZSQ2Y0SVBRRDJtRDg4RUdnY2JSMGR3Y1Vjd2hoTlZKQ2oyUGllQzlJVS81?=
 =?utf-8?B?SzBsZW1WbjVEaVNGK3o4RkVIM0ZmajNLeDY3N3NZM3BaTnJuK3E4TFVNMlQy?=
 =?utf-8?B?UzlxWGJyUXFKellwdC9GV1k2SkpWSkVxcXYzcExsL3A1elo3QVJmYkdTbHdJ?=
 =?utf-8?B?dmFscjk2ZEJJWWdHa3lFcTdmcTR2d1N2a3JnK25pUnpOSGtFMTZGQ0JsQllJ?=
 =?utf-8?B?cTZQVGxBRi93UXg1NFBYT3lWbjNxL3ZOeFZkc2h2UWlMWm5ZZ1ZXdmFUWEdN?=
 =?utf-8?B?S2ZCT3ltclV5Zk5NZ3U5SG4reDR6eU1pVzRlRVJ5a3ZmZk1SSjI5ODhzei9Y?=
 =?utf-8?B?ZmhZcGF6RExWaWlueDlkbCtGVUZsZC9UWXZuS2FMSW8vVmd5TnlBUkdWQ0RM?=
 =?utf-8?B?TlBXWTV3Znc3U2ZIbmtmQ0FjdjFNUy8zSVpXYmM3L1lsdXpkZVMvaWhqOFhp?=
 =?utf-8?B?cWdNNmZxWXZDVmhBS0JibzVoa01GMDlsS2VhM0dZaTdqbHlRUGlCanYyNEpS?=
 =?utf-8?B?cDJld3FtdXZydHVpWVIwT0pMNk01aHl4Tmt5dmROMXZYRUt3eU8wejFvZFg5?=
 =?utf-8?B?Ly82dncySnV0SFhhZjg3UWxLcmEzODhJaU1mNmp5T1lHMXU3OC9vM2JPRFp6?=
 =?utf-8?B?TDV4eTg0MXNDVVB4YnRDSVp4Y3IwaHNFSnJYdlU5d2V1MXlwaDlyZklTeXpL?=
 =?utf-8?B?QTZIc1dBZGFKN1d3ZHZMNEQxK2lxQU1iWkZvTzBRTm9mUTZhY2htTHhScklG?=
 =?utf-8?B?ZVpDcWVIQldNUlJsY1ZSOWtwb1V0VTliZ01qS2dmbU9jdWlNOFQ2VUlPd1Z3?=
 =?utf-8?B?S3dhbVFFS1lTa21yZ1h4TVFoMXN4Q0pBcmt5ZHdHSnBRaHJBQmVIY2dsZWpU?=
 =?utf-8?B?TFRQb0JiTHRHSTg2alpWWkNOcXFuZ0RLNU9OcHRQVVlYSkNMWG1QVEJDckd4?=
 =?utf-8?B?RzlXTDYzUlZ0Q1Q5YVZtNzJNdVNyVlY2eHFYQ1lVeG9DRDhiYlJGSWRVQ1Jt?=
 =?utf-8?B?VDBWTDVTTGpmU2ZXWW1wUkE5djVOcnp6ZkQ2bG0zUHQ2Y0h1TldleWpwOXZo?=
 =?utf-8?B?V2hvUDlUbHp5eU0ydG5zVWNZVDRQVjZ3aGdyaVF2UTNMazZreE9SZkU2eWNJ?=
 =?utf-8?B?MVJjTWp2dXdodEFybW9pYklsMXI4Qi8wek92a0FaUUZqL3BjWk5INXhvZ3h3?=
 =?utf-8?B?Y0ZEUlZLeThHWm1MUUFsTWpubXdjRTE5S0ZlMk1lSTJOWWxHWUlvSmMrU3JP?=
 =?utf-8?B?alpNd2FWbWtzcjRQODhLbGFUSUU4SG5sWEZ2UWdxeFFZdy83YTYzcVNSVTA3?=
 =?utf-8?B?Y21wQmFiVHpyeTdNcmZ4TGNMRmdYVkhDZDVpRTNNZ2VYMTZ2cUhQRWZqNExV?=
 =?utf-8?B?NDNUVFBPdU9iRGhwRXN0MFUzdHNwY0YzTTZFUFladERxL1BsQ3gwaVk4VVph?=
 =?utf-8?B?TXVpeFhnNUdOZTNEUTJVSElpazhQQUpJenVsL0FYT0Ruc3M2QzAwdzA2eWdt?=
 =?utf-8?B?TlpsY25QOG1xWnUzR2RXSXNDOXVhUjZiZGZzUkxjdXRSY1FYWlBIR1duV1JO?=
 =?utf-8?B?dGdzMWdSdHR5NktDUTZoOWJFODhyR3RLNTEyQk1WS2d6RHhtWHoyYkNFVGpQ?=
 =?utf-8?B?dXhyMElhak9wcHQzM1VJbGhiQ2tVMWpEckFvUkZOVnMvSG9JaDArcTRuY0lH?=
 =?utf-8?B?bjUrWlZlcXRkeTdOREZSZnpmeDNNSWVTanhYME1XN0JzaThBWTQ2Wjd1bzFz?=
 =?utf-8?B?UHlyU3FQQnZXa0tVc1FyQklzMHJBL0YxU2pJUzRzTTNnWWh0VmVnYmNQY2hV?=
 =?utf-8?B?a1hlaXlJc1VrN2liWU5qcDJpYzcyUWtqS1NyeGNIL0xnM3NZTEU1NkU0b3Yr?=
 =?utf-8?B?aFBiQy9PUnlHUlZxTFd0Ni9EdmtNTWRGK3dON2VSNmI1ZENtQ0JtTkQ4d3pu?=
 =?utf-8?B?M0hRTzZvU0VHVnFjekdtUmpqb3Bxc3gvdFhxM0I1NVBTaFcyb1kvUXYxWCtI?=
 =?utf-8?B?TVJQQTNQcTZmN05pZzZHREVORkgvbE1BMlNOQ3RpOGlZbGUyVzJXb2tTNTZq?=
 =?utf-8?B?MUFwL2ZwY2RMemxRVTIzbGNrMlVFd3h2U0VRV1h3TUFnNnVXOXVaUEVHR2sx?=
 =?utf-8?B?c05mSUc2c2k1MUpSOXpTYUFpN1dpb20xMWRRTlpyQ3ZpS2ZIVXVBQXM4dnBs?=
 =?utf-8?Q?Eylv0J1bVSSyATHHflOzfJyfiQa61ZxHjElZOLZTYnnZ?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 6e5a2793-4267-4de4-9450-08db2bedc476
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Mar 2023 22:27:20.8437
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: PQcjf4aZi6cR8IawHYnzefxeXDy4yHaQfReB2NNoYqNamVz7db3kIlJ9th1rlUR9mV5OaI0UUvXaDCxHLuHV3g==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BL1PR12MB5972
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Adding PCI reviewers.

https://lore.kernel.org/all/20230323213808.398039-1-terry.bowman@amd.com/

On 3/23/23 16:38, Terry Bowman wrote:
> |errors (UIE/CIE) with the RCEC's source ID. A CXL handler must then|

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 1C904C6FD1C
	for <linux-cxl@archiver.kernel.org>; Thu, 23 Mar 2023 22:26:14 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S230213AbjCWW0N (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 23 Mar 2023 18:26:13 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:58702 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229690AbjCWW0M (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 23 Mar 2023 18:26:12 -0400
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 39A8B17CF7;
        Thu, 23 Mar 2023 15:26:11 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1679610371; x=1711146371;
  h=message-id:date:mime-version:subject:to:cc:references:
   from:in-reply-to:content-transfer-encoding;
  bh=JvqqlZLI5QBdLv7UHeMkvXGX53SPPfX+WJ20n97dxJY=;
  b=KQVV3w+htmOnDsGjb11tPDheLUzVMuWdgU/I3T8r1XWJy1FWFUrr1veP
   sYmNBZ0Ml4lJfyWRET8I4i0vO+ldMWb8qR2Jm3MNoPziOQh43fb6KtpvI
   9yo+UJf6uY+z9yaF7GVEQaKLdlFOJiQz18Fyx7yJU8swncmchie1lc9zI
   Lncbrk7/zkjqHAeJdIQQZ6yV1uHK7zIfqknUcupOj0MaqkskVfwYy/Nv9
   kQqOIiyiD3HH9yHKA0sbfl3Sp+bBchUw2liX7FPOR2/6qGgExwDYO+4ZN
   aGjS1DyjKDQMtyMd8KYTlH/A1CwXxN1RnMxZd+RKeMatP4VzSLZkKVIo+
   Q==;
X-IronPort-AV: E=McAfee;i="6600,9927,10658"; a="323504242"
X-IronPort-AV: E=Sophos;i="5.98,286,1673942400"; 
   d="scan'208";a="323504242"
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
  by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 23 Mar 2023 15:26:10 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10658"; a="751662842"
X-IronPort-AV: E=Sophos;i="5.98,286,1673942400"; 
   d="scan'208";a="751662842"
Received: from avandeve-mobl1.amr.corp.intel.com (HELO [10.209.121.177]) ([10.209.121.177])
  by fmsmga004-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 23 Mar 2023 15:26:08 -0700
Message-ID: <ef57e100-e656-d692-b776-3f6e3f242c15@linux.intel.com>
Date: Thu, 23 Mar 2023 15:26:07 -0700
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Firefox/102.0 Thunderbird/102.8.0
Subject: Re: [PATCH v2 3/5] pci/aer: Export cper_print_aer() for CXL driver
 logging
Content-Language: en-US
To: Terry Bowman <Terry.Bowman@amd.com>, alison.schofield@intel.com,
        vishal.l.verma@intel.com, ira.weiny@intel.com, bwidawsk@kernel.org,
        dan.j.williams@intel.com, dave.jiang@intel.com,
        Jonathan.Cameron@huawei.com, linux-cxl@vger.kernel.org,
        rrichter@amd.com, mahesh@linux.ibm.com, oohall@gmail.com,
        linux-pci@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, bhelgaas@google.com
References: <20230323213808.398039-1-terry.bowman@amd.com>
 <20230323213808.398039-4-terry.bowman@amd.com>
 <f31edb04-04c7-2d98-e3ef-a591993e7ceb@amd.com>
From: Sathyanarayanan Kuppuswamy 
        <sathyanarayanan.kuppuswamy@linux.intel.com>
In-Reply-To: <f31edb04-04c7-2d98-e3ef-a591993e7ceb@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org



On 3/23/23 3:20 PM, Terry Bowman wrote:
> Adding PCI reviewers.
> 
> https://lore.kernel.org/all/20230323213808.398039-1-terry.bowman@amd.com/

> 
> On 3/23/23 16:38, Terry Bowman wrote:
>> The CXL driver plans to use cper_print_aer() for restricted CXL host
>> (RCH) logging. cper_print_aer() is not exported and as a result is not
>> available to the CXL driver or other loadable modules. Export
>> cper_print_aer() making it available to CXL and other loadable modules.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> Cc: Mahesh J Salgaonkar <mahesh@linux.ibm.com>
>> Cc: "Oliver O'Halloran" <oohall@gmail.com>
>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>> Cc: linux-pci@vger.kernel.org
>> ---

Looks fine to me.

Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>


>>  drivers/pci/pcie/aer.c | 1 +
>>  1 file changed, 1 insertion(+)
>>
>> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
>> index 625f7b2cafe4..7f0f52d094a4 100644
>> --- a/drivers/pci/pcie/aer.c
>> +++ b/drivers/pci/pcie/aer.c
>> @@ -809,6 +809,7 @@ void cper_print_aer(struct pci_dev *dev, int aer_severity,
>>  	trace_aer_event(dev_name(&dev->dev), (status & ~mask),
>>  			aer_severity, tlp_header_valid, &aer->header_log);
>>  }
>> +EXPORT_SYMBOL_GPL(cper_print_aer);
>>  #endif
>>  
>>  /**

-- 
Sathyanarayanan Kuppuswamy
Linux Kernel Developer

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 7BEB2C6FD1C
	for <linux-cxl@archiver.kernel.org>; Thu, 23 Mar 2023 22:22:20 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231712AbjCWWWT (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 23 Mar 2023 18:22:19 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:50634 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231721AbjCWWWB (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 23 Mar 2023 18:22:01 -0400
Received: from NAM02-BN1-obe.outbound.protection.outlook.com (mail-bn1nam02on2085.outbound.protection.outlook.com [40.107.212.85])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 74ABE303CC;
        Thu, 23 Mar 2023 15:21:30 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=keJu6Mb/hwVDStmBJaLkF0uwVml1Xb9SQgA7SJmSDshoZ1hy5c+02X12Wrrye+XlyQBelvvs0zOs4snd3pvDicWEZBz+UjcywnRSIToW4mEePHDDKFm1dY6srDUrfpr0lQ/E+zjqlH5cGRvJnpirsBY0EsAhGcB9eyBsVyoxS2sS2cVXRUxbMFNm66uVi5JCPHeS4125FXZ14H5i3gF+b+9SSoatw2089Dbpq9gyiNEcHAzQ4hEf6+xs6nT2SurFmGvYjmcM7ohemMWcNXaeDFmE01Uo812GvguL4wB8zUNKnQjWRjAmW4Hom0iTyCWYWvXvUSd3S9+LWJbGUKFpbw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=AOR5AtT6SQ9LT5jS2SqMghYSJnHNzbi4FtMRsBbgN9Y=;
 b=gIiH3b19aTzVnqTezpBU1Z+LcB3gaUGK+Rb0hWiM6uXdxiVasJFf4O0BRuf9XxoRZzYHmeuIysRN/sJRV7ZVLbnxhE6F3ADjVY2STH248oNMvDxhTxVTdSP8j+xGdwNHDy6iN6V/KO4RAOzz9w3jVdUXmmJI3D8cWHf86Xszrre851bjnGvl1omapDqSOnZnDLv+nj0QjilK+H7Mr7ABqx6UqPlYCb913OuEwMYz01Gq754nlCWsFWXDGGBjYzXmYmZIeFL1Vm9XVrNbEQ7o+p1z59eBn4+rUDy9ZyClrg+yi4pLxxhude7izfaxvmUv1tmCA+umzvDMzYwPO8VI+A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=AOR5AtT6SQ9LT5jS2SqMghYSJnHNzbi4FtMRsBbgN9Y=;
 b=fAyXYlOgM71mGhz/mMD6t2cZwfZl/X6dZHKrV8NT1qEN0+TNs+2I4cpYWAXyqLWL1jZ0LCZNfaU/FD1SPv6iywIY5YnUlnS56z0R2vtETK03qbylIotTIvwEvXAULMQ1hGa2VSL4ZCBqnMmtQTHMoZWBSMSZGGe7BstkucXPFA0=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 SA0PR12MB7002.namprd12.prod.outlook.com (2603:10b6:806:2c0::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6156.28; Thu, 23 Mar
 2023 22:20:38 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc%5]) with mapi id 15.20.6178.038; Thu, 23 Mar 2023
 22:20:38 +0000
Message-ID: <f31edb04-04c7-2d98-e3ef-a591993e7ceb@amd.com>
Date: Thu, 23 Mar 2023 17:20:34 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.8.0
Subject: Re: [PATCH v2 3/5] pci/aer: Export cper_print_aer() for CXL driver
 logging
Content-Language: en-US
To: alison.schofield@intel.com, vishal.l.verma@intel.com,
        ira.weiny@intel.com, bwidawsk@kernel.org, dan.j.williams@intel.com,
        dave.jiang@intel.com, Jonathan.Cameron@huawei.com,
        linux-cxl@vger.kernel.org, rrichter@amd.com, mahesh@linux.ibm.com,
        oohall@gmail.com, linux-pci@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, bhelgaas@google.com
References: <20230323213808.398039-1-terry.bowman@amd.com>
 <20230323213808.398039-4-terry.bowman@amd.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20230323213808.398039-4-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: BLAPR03CA0156.namprd03.prod.outlook.com
 (2603:10b6:208:32f::29) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|SA0PR12MB7002:EE_
X-MS-Office365-Filtering-Correlation-Id: 8ad3d407-6b46-41f7-37c3-08db2becd48f
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: pCasH9cEhKkzh2qopy9l2EnY0NabeZ7td/Ebc03WP8laJ3Z9VRMeV94Ko0X6v7DwazwuGCLlTXUVj39K10mYzcysZxMgzHEGyF11Flo9CQ232fAr67X6cVolAtTFuNppJJobLldRRnD7aWOoD4txyQkMj8aDGKI8uYUdwLADr3UDgbYl2uFr1aovndZIkjzMPEuMvOobeikqhrsI3HGqPSnoAcn0e66mfd8WHcy1FS1XviSH0CSFT58KWEB1nJVPMNSDpxIomOgh34d9otVAtJMagvab6OqFHrd5dlhXtc6EdmxoqUElzkWar8eFaXtz5OCWGgEF2Tp0ELZYsy0LHQESlPcWkxuCZNs5d0WzkZAd6gVky59OqDPggj3Wi9eoia/NsAdSntGrL6RKTgOwlOxUThiB5t1u7np9vJBLwZc+2xPf4tz9JTQcEFYpO8ezXzEFxu6XU1EnTERSRI83NCqmTJT1YFL3ZncpOrPIkmaeHcb7+jNbN6bF1tHI0G4u+3Mytljjboq1qOSFk5jR6kje0XWKjx2EJ6ahOLE7zCKQHjuvuG6CthrhfdE5ryb514gW7UE4D9UTKrUnBDwwsh8JQ55Y8T82yvFRJB1uz+ATPwjpFkqAo6GqgjvEG/nCdnMj1sYbCvVFqu1nH1Q5O2eAf3LuXk7BtKi7P3OREDEXSxzuhPm5A6L7szopI7YYzlLKRQrk/hv/lX9+VDkw5JxxAFl4OCLYnX1o19LGzWQRHZ0zPnc0J8m9e5acpM+O
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230025)(4636009)(346002)(376002)(39860400002)(396003)(136003)(366004)(451199018)(31686004)(316002)(8676002)(36756003)(38100700002)(66476007)(7416002)(2906002)(8936002)(53546011)(6512007)(478600001)(31696002)(6666004)(6506007)(66946007)(41300700001)(6486002)(66556008)(2616005)(4326008)(86362001)(921005)(186003)(5660300002)(966005)(43740500002)(45980500001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?dkV3WTVORjVaQ1plQndMTEF6WlBxMXd0QXd6dk9aNFJSdFFNcy9pdlNYL2Ev?=
 =?utf-8?B?RFhGUjNBTWM0Q2xnSFhmdWVTMVFKMWtkdnQ3NjZQYWg3ZFZrdzd5TStjZ1VZ?=
 =?utf-8?B?cnZvTDliYzNxckt5MVBOQkVmMEgraUphdmRNTkhyNGxaTU9uRXB1ckFndnBI?=
 =?utf-8?B?dXJVSmVUY2hPelR0STVGb2dPaVRlK0RtMytlbitEa2o2M2NhbkhhZmlCRXBz?=
 =?utf-8?B?REJWQldEN2s1dHZYUzNBS21RV0JvT0xiWE5OSUxXVjV2Vy9wZG9JTklLZEY2?=
 =?utf-8?B?bGdZQjRyaGlHd3dtOFZWNUNHbDFPVi9aekgxcC9rM0RCeU9iWTNYWmNsKyta?=
 =?utf-8?B?RUpxOVJ4RmRvY2lPUUJsS2tBcm8wcGNVRTh3Z1FNb0hITDg5V29iODQ2cVNo?=
 =?utf-8?B?RUZxRTJSRktVd1VQWnlOMVNWYXN1Z3Nla1AwMWU1UWtESlUvY2JBRVBSUEtl?=
 =?utf-8?B?YkZjUVVWbGVYczJzL1c0aVlBOXZHU3I1UE56U2h5ZklpbmgzQklORS9Beko5?=
 =?utf-8?B?RmJzejNGWDczWHN1QTBDa0NDOUNJZUU4eTBFbWpXYUx3U3FSV3R5MzlYRVRL?=
 =?utf-8?B?M0FJZGRiZFh4QTlCckhtRXNqYStMMStBbFBtcmtJaytObWtZRmRWQVFpeTVs?=
 =?utf-8?B?dXpCUEFSc21lNGc5YW9aMThqVlZ0ZzhxblVmL24xQ29BLzZWUzMwK3Q2T3Rh?=
 =?utf-8?B?N28xYkxkVzZGRDVMWndkdTFkZjZSOXFHa1BialJJZEZWTWR4bWtmYkd1N3I4?=
 =?utf-8?B?OER0YTNEWXNvZnBCelQyaEdsZXl1NGRmckVFc1hScURtRnBkRDcxN2JoM2Nu?=
 =?utf-8?B?QlBVL3BHcWhEQjczMXVNRFRDbkdWeTljelNRSHFMWHZnREM4ZDQ3bk1aWXJZ?=
 =?utf-8?B?OW4wUy80YmhDNTJtZSt3R3JTdTlEYjFLSExrNXB4YVEvT2ZSOHNVTWVZWHor?=
 =?utf-8?B?S290OU8ycTFLYkFMcTVHU3JVVnZHYk5BNDE3dXNCK0xWOTBHT2RKdFArZG8x?=
 =?utf-8?B?ZWc2Q0g1a0VwdDJQZDc3SHFNR2lQaUxOUDJwRktWcWM5bFFYTkN0RGk0RE5Y?=
 =?utf-8?B?UHBoTDQyQlJhcnhrN09XL1R1VUZueGNPZEpGcklrRSt6NUhMVkFtb0JGYUNT?=
 =?utf-8?B?WFBWR09FT2FLOStvRmViNE8rNnRZQUw2cHUyVFJua2w1K0RQd01QQi9DWFN6?=
 =?utf-8?B?MTVPSHhaY1JEYnRwMHFWd1BlZE1EUXliTW8zMFJ5REJsRS9IdjVxcDlseDFh?=
 =?utf-8?B?OEg3eU0vRStSQTlKbHE1ck9yVlFxdHlpOWFZMEsxT2c1QWp3ZEdBQWNqZzVa?=
 =?utf-8?B?ZkJjVkU3MDNhbU5CZkpORVl3b1JNc2ZOYmlXQXNyaHhJRzU1K1Z3d1RZcFky?=
 =?utf-8?B?ZmhMSmJwdWt1N3hYQnFqT200TTAyanRBVmtsTlA5cHYrUnh6SVBlYmNvOW9R?=
 =?utf-8?B?bzdETUJnWlJiZk5nZjlkcnlsNWRLL0FRSHpUcDZaeGt4eEtOdFRuODZCejR4?=
 =?utf-8?B?UkNSK3FpOWx3MEJpOW94SFRSSnN3elZoeC9OTXpYa2dnL0Z0OTJ3RTBFY0g4?=
 =?utf-8?B?TVlKWUdVamZGUFpBM2VXTTdlcllKZ0U2R0trcUZQT09KR3hpZ0ZLSUdHQ05O?=
 =?utf-8?B?c1NsVzlmb2VhS29ZT080V0ZONjhydktBUWJjZlI1aEVjYnhKSU8rNDZiZUNs?=
 =?utf-8?B?Q3J4R2M3cUhaYkJrTFpMeUExQld0eExQMW9RMFM5YWFac08xMmNUdzduVTZG?=
 =?utf-8?B?U1hqYllJVUJaMHhmTk5kd1FWb1NWZy9ITEJUb0MrYnEyZURUWk1EYW1vNHV4?=
 =?utf-8?B?VEk0V0pGK3RCZnE4Qzdkd1pPaWc4NzBQUTQ5dVVnWEd4Q2gvckVmWWNYRVVv?=
 =?utf-8?B?dlVjWGRtZmRrdFh2aDd3WDJZWVNyRTl4TjByRklPRUt4Wk93bUp6ZTZCV3R4?=
 =?utf-8?B?RHc5UzhRSWNoZEFOMFBYNVRsMGZnTldHbzlvNnl5anB1MjFqbWsxKzk1UTdp?=
 =?utf-8?B?aE8xcnMvcVRGa1ZNYS9WQnp3ZmZTek1uSnFrZUo5NWF1U2RXVTNzTWJIbjJp?=
 =?utf-8?B?aDAvMEVnZ2NRK3M3RG1YQXB0VVdoTFNndUM5SlAxWHo2SHRXa0xZKzBZSmRD?=
 =?utf-8?B?VG9va2FPNzk3SjRhMWlLdUYvRnUwWlpEN0dvajRNRmVYR3A1N0dtdHRqSEQ5?=
 =?utf-8?Q?h2p8nOLVy4UZqUfDZy4MBH4W0qvfHOvdaY/+gBZvTmke?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 8ad3d407-6b46-41f7-37c3-08db2becd48f
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Mar 2023 22:20:38.3376
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: TOE1o3LJ8PABq+Y9eWByAQsSfGDDmMnmG7iL9LIOJEV9nu/OYbMzlSq7rP7n5A7pcBZ01w1C5tS3d1Y76ctSww==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB7002
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Adding PCI reviewers.

https://lore.kernel.org/all/20230323213808.398039-1-terry.bowman@amd.com/

On 3/23/23 16:38, Terry Bowman wrote:
> The CXL driver plans to use cper_print_aer() for restricted CXL host
> (RCH) logging. cper_print_aer() is not exported and as a result is not
> available to the CXL driver or other loadable modules. Export
> cper_print_aer() making it available to CXL and other loadable modules.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Cc: Mahesh J Salgaonkar <mahesh@linux.ibm.com>
> Cc: "Oliver O'Halloran" <oohall@gmail.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linux-pci@vger.kernel.org
> ---
>  drivers/pci/pcie/aer.c | 1 +
>  1 file changed, 1 insertion(+)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 625f7b2cafe4..7f0f52d094a4 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -809,6 +809,7 @@ void cper_print_aer(struct pci_dev *dev, int aer_severity,
>  	trace_aer_event(dev_name(&dev->dev), (status & ~mask),
>  			aer_severity, tlp_header_valid, &aer->header_log);
>  }
> +EXPORT_SYMBOL_GPL(cper_print_aer);
>  #endif
>  
>  /**

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-BN8-obe.outbound.protection.outlook.com (mail-bn8nam11on2041.outbound.protection.outlook.com [40.107.236.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A8E29D2F7
	for <oe-kbuild-all@lists.linux.dev>; Fri, 24 Mar 2023 17:41:12 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=QFEDYn3l1sSiQ9lL1cCGyK2Hf8OUyJukoS9tJLvIvMgZubSiWRdgPP8J6M5BzhXj05CXf83RjjyE+8ajrJy8T3FkDwfF+UEedZHKXGakH8pGXLYZurVZC3xlaHxl0QvZKHVpxkkdeZNsX9HeRP06et4kCpmg9ulPDyiLxw0jmRWZrS0i3aHqsc58wA7YoS0lKJ6DLlNEkYOGQG75reyHo4xkg413LIumT0FMLPdaSXIKnHM7igGpWb1htOHFAC813yWRKPbNlsiDacTJGZ7UjeJbKcYsvIIFN4kp0QO1kxf/Nqna4GlR5hWTK8xWiekDKX2BnZT+v4qXuMJy2cIGOw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=jQhpyV3URBLWe+xngP1NU8QdUR/DbxTOwJYO9tHq2XQ=;
 b=Alfg7bU/+hnNQIv5vN42W5XmHG1o6PixE8vfzx8qn96qP0t+siw7MGyWNS5ebTcsfas7DKzqn9a+NYoVgApJ+ZtALWrY0FSpPqnP2Qw24kEQpH3gLc1umvx0Mmv6GR9O7jZsNhTxqG8ZyMzLhV+zbJwQauWpQNpMOIhLnHQ9kaErIXHLdDZa4l5pa2vNj/676VDNqG7ZrjvgaVkDXqCtwSaOQ0kGpPtpOIruufUXW754R4w/JSm/5LfeqGCTz887wnmObcpJP0kT7sFYFdaM3TnpeFEqwWAoKyv7ZZPXxNBwzT0Wtj05wmxfZM8ahtYgOcf0ZuzmJNw/Ul92gWDgbg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jQhpyV3URBLWe+xngP1NU8QdUR/DbxTOwJYO9tHq2XQ=;
 b=GdJ6cGiEBeSTldMJkRWNQvF8Bf5U48JYS0KEcKqSWrF37RusG6JBLLaEddJOAZ0lO/k5ef2F0k+D3A3O2ZakcY0y6bMrIIBHfJMVOIIgX/WZUK/vO3v7Lk+EN4A2q4IpH1aJtcfyBYZaZM0MjcWOsW3T3EKT1chj8qdOfGzcrw4=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 BL1PR12MB5319.namprd12.prod.outlook.com (2603:10b6:208:317::24) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38; Fri, 24 Mar
 2023 17:41:10 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc%5]) with mapi id 15.20.6178.038; Fri, 24 Mar 2023
 17:41:09 +0000
Message-ID: <ce57b2ce-dcf1-1b32-3ebe-aeca66ff0f7a@amd.com>
Date: Fri, 24 Mar 2023 12:41:05 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.8.0
Subject: Re: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
Content-Language: en-US
To: kernel test robot <lkp@intel.com>, alison.schofield@intel.com,
 vishal.l.verma@intel.com, ira.weiny@intel.com, bwidawsk@kernel.org,
 dan.j.williams@intel.com, dave.jiang@intel.com, Jonathan.Cameron@huawei.com,
 linux-cxl@vger.kernel.org, rrichter@amd.com
Cc: oe-kbuild-all@lists.linux.dev, linux-kernel@vger.kernel.org,
 bhelgaas@google.com
References: <20230323213808.398039-6-terry.bowman@amd.com>
 <202303241458.BV292BDH-lkp@intel.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <202303241458.BV292BDH-lkp@intel.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: BL1PR13CA0315.namprd13.prod.outlook.com
 (2603:10b6:208:2c1::20) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: oe-kbuild-all@lists.linux.dev
List-Id: <oe-kbuild-all.lists.linux.dev>
List-Subscribe: <mailto:oe-kbuild-all+subscribe@lists.linux.dev>
List-Unsubscribe: <mailto:oe-kbuild-all+unsubscribe@lists.linux.dev>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|BL1PR12MB5319:EE_
X-MS-Office365-Filtering-Correlation-Id: 9016d21a-ff28-4bd8-193a-08db2c8ef436
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: jMs1RuQXg9fOjgowHON04YFrwPmrvAY06ySYJ/TjEecZWm/UFMcWF/TszxUmPMobs48wx2nc1CV1p8u7IHnA3QF465XR3HlKBMFiaJ1IpIi5QM/9EIsOStUpa8dFw/uaHXI1JGZKJcOorYgV7GDjAWkoh4qyIL8bi1cudBzXiQqL1/MOf7oWLknSpWiJ8E/+eZ26wP+HGWX3FS8E0iit/PiPOi7+SQtfICpFpkhE+R1uQe8oSfSf2rlWUL28pAxaM4ju0yf4xn1gCXnk5S1S6UZH8y7WBSlaWngqbFPKwWrEU2NSB/LRbBRq1IfLNeWB35bF2Nn9Iwh5QjBNnJqje9wTrydiee1Ty05tbV42aGOZulv3vNAI2rQ9qmqWFcLJNuHG7BrY18HinvCsXMQRAAPbbWBMPuylC7q6CNywmXvY2qzSNy0+3VIiX4WnK4kvD1x8dC1+kQhVNjkb4rDgfV8HuPWOVTpYKnE6NivAnHpip9SOl7sfJBA0w4CInQ4KYFBgn9MqT6gymHslgrv1cu5e7qNL5YH/3VjMesNYmdXt7SLbe8TPyjo4vdzId1Ltr5k+MArfyD/19qKfHma3oDxGhKMZz4jrGbcYrJnCRxuEIMJ2feFzJVL5Jv53W8pb2e21ZvhcaUJwWQnRApery8CQGsT36SLKAWGeQBdAPv1xJ5pomM4fUOjVjnUxCDGtWQe3UrpSYomCxCf/VGgMELTzYd6gM+lu0v9sLm9T8h5oUxXj0XhD8DayaIyLUOxgY1KoTpuqKcGDPID3XeNnEw==
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(4636009)(346002)(366004)(136003)(376002)(39860400002)(396003)(451199021)(6512007)(186003)(31686004)(83380400001)(86362001)(38100700002)(4326008)(7416002)(2616005)(8676002)(66556008)(66476007)(41300700001)(8936002)(66946007)(5660300002)(921005)(36756003)(6636002)(6506007)(6666004)(53546011)(31696002)(316002)(6486002)(966005)(478600001)(2906002)(43740500002)(45980500001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?SVlCNXdjWTlJRUk5cE10bnl0YzIzUVJzeXFvN09CemtLVFl3ZXBUL2l5STdl?=
 =?utf-8?B?WTh6dHZsNUwvc1hLOG5Ea0JDZFBjbkpmVUZKaFdWMURBTGxaVlpKa2srSmd3?=
 =?utf-8?B?UG90WGZ6TUlqbnNzN3U0U0RoUnN6VUsyMFpPelVGbUh5Z21UWXdVUERyVHUx?=
 =?utf-8?B?N3hSQlF4RHhoWTF1WnNQNGQ1QklDeVZhK3pna01KSGJwdkNtbGhXaUx3cWpC?=
 =?utf-8?B?RE1neHgyNm02cVVNR2s1TmVvM3c0NEtTRWIybElKYjB5aHYrTVVkMmdtcGFP?=
 =?utf-8?B?ZFBJd09tQ0htU25leXNiTXRwMzRhWFlsYVNUM2ZZTmM1RUo3RHl5QmFQN1Fx?=
 =?utf-8?B?Wko0d3NteTJSczlya2FJVTduYW1TZnNldXVpWDRlc1N6QzZ3dFFzazJMb2ht?=
 =?utf-8?B?RWtsOGhKWUczaDJpSFo3NzRKVnEwUlFIdE15elNLMk1PTDB1cjJ5aWlEaUNK?=
 =?utf-8?B?cnU0N24wSWtPVlJLaktuQkhRYUUzemRscHRuK3hMbjJFY0Q0ZnFqMHVGU21R?=
 =?utf-8?B?U3NGeWdUc0pMV21iMzFZZHM2R0E5ZjZQeC9heHVueXFVeGlIOHdlbSsxL3dV?=
 =?utf-8?B?YXB2V0thakdBVjBuNFBRaVFNZ2hjalloRWRsK3ZuZ0JnOW1lVkh4bmZFdGdu?=
 =?utf-8?B?dHJvdThJZmVIcDdMcEdHWW9DRWRLRlE3QzFTblQzdFEzVWlPU3pldDJFV1RR?=
 =?utf-8?B?S0dERmdKMVVVWkkyc0FRWEtsbjUxbjN3TEVacXNWck5ISHliSnpIcUFKUlB4?=
 =?utf-8?B?cDVQdllmMGdDZ2dzZHJuaUt6NnRoK295bHpuNkV6RU00Y1hEZVgvNGMwd2M1?=
 =?utf-8?B?cWhYT3RST2hmWFNJcE1DZENFcVlHMVV0azhOakhYNEpoQnc0Z0ZTK0M5SFVF?=
 =?utf-8?B?ZmpXOU5TQWZ3T01QVUFXQ3JBSkRGSlg1UnVob3N4NGlrRjkzNGRHUkR5bE9v?=
 =?utf-8?B?NXlvOW1DYVlrYnBvVHVYQngwUU1WV24vdWs1WC9vMjAzeWhPN0EyL2NHR2Zn?=
 =?utf-8?B?VHBWRjdWT3ljT3dtYjYwRWVlRC9XNFJwRG1FSHV1RXhNcmFNSXJRY283Z3ph?=
 =?utf-8?B?U0MyMG82cm1FRHdzRThUWnUzYkgzbXYxN0pNcHdlbCs3MGVRaHJ2TzJtYjZi?=
 =?utf-8?B?cXpIZGRZK3hjL0V6NzRBZDVraHRLWDdmc0NoVGNvVzBoSnJzMVo0YVZsdE5V?=
 =?utf-8?B?UFljOUpEWkgwQlFxZHE0MFVMR2VqQm5Jb2x5R0xma0N5Nmd4aTdJd0VSL0Rn?=
 =?utf-8?B?RWM4WjVUTjBpQVVodVFGUGdzYUxNaUdPRzVnMzNyNXFxNUJQSGErbFpyU1RB?=
 =?utf-8?B?UEJKNFBFYitHTUJDcmtxM2hxWUM1ZGgwSWlPYUJYR2toUTQxV0VzOGxIRGRY?=
 =?utf-8?B?YzJpd2xEeTdBZ0FhWEp0bGpwY2hlUlRldDJNSHNzWVEyRHlGSU5FUzdXNG9O?=
 =?utf-8?B?a1VKOXRlMWJack10cDQzSFQrMFB5SGFONSt3aUJsck8wZTJQTDFKZ21UVFZm?=
 =?utf-8?B?VEMzVW9FWUlqdHNMWjZzK0JHV01CTFg2aDByWXJoT2NzVEh5VElEYW5HN0Ir?=
 =?utf-8?B?ZERHWGZ6QnREMEZxUTYzc3lkTmZsV1R5eWZDL3VvNXNhNTBCaklUMkN0Wklo?=
 =?utf-8?B?dUs5U2Z2djNKRXMyZStEUWVTWjhNcUpHMm9sNkcyZHlMZlRyaU5QV3UyaHZu?=
 =?utf-8?B?M0Q5eGMrNitwN3pvWWsreU9tNXRaSW5PbGhuS0t0aElUYSszVndPZ01BR1Jz?=
 =?utf-8?B?eEVCNXhTdzYrWFBlME1FakJTQkZwdE1qZ3NPSnR2eEl5UnVDTitySjJYUURB?=
 =?utf-8?B?UDhRMmUxNHRFaDUzRkY4Qno3Yzg0RzYyT3VaZjYzK3pjMTY2N21uMEJQRDZk?=
 =?utf-8?B?SU10WkdoU2tnSk9lYlJ3R3dkV3EySTRqY3FySytBbExLNDJQaDZudU41enZH?=
 =?utf-8?B?KytueGtsREtxZlhCYUtZZVdzWklXelIyRXgzM0VMZGhXeVoxeWdSNFB4aTZL?=
 =?utf-8?B?ZFdyWEU3RWs3SEhqRkNwTk8wZnlrVTFWOXZjRmEwOXQvN1Z1b3JLckNPSzJl?=
 =?utf-8?B?UUxSSHNFVW54V00vWjhNYXVkNXUzeWlIejR1ZmU4VnBqdGplZkg1K0lGV0F3?=
 =?utf-8?B?VFJIa3pEVHNKYU8rc3VUZHZTVExjWS9vYzlHb296d0lWTkU5Y3huN0ZJLzRI?=
 =?utf-8?Q?LBPrfCtmRJno741fVvkDE9b4d4D4jv38hbv+7ehcioeQ?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 9016d21a-ff28-4bd8-193a-08db2c8ef436
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2023 17:41:09.8783
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: UW/dTKfShAwPl/hMXYQeskN41tXGY+wlVt/fDdATO+a7kq8jaxl0jT2ulEontUX7PTYKbmQS6ioOYVZpEQbgPQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BL1PR12MB5319

I added a comment below.

On 3/24/23 01:30, kernel test robot wrote:
> Hi Terry,
> 
> Thank you for the patch! Yet something to improve:
> 
> [auto build test ERROR on pci/next]
> [also build test ERROR on pci/for-linus efi/next cxl/next linus/master v6.3-rc3 next-20230323]
> [cannot apply to cxl/pending]
> [If your patch is applied to the wrong git tree, kindly drop us a note.
> And when submitting patch, we suggest to use '--base' as documented in
> https://git-scm.com/docs/git-format-patch#_base_tree_information]
> 
> url:    https://github.com/intel-lab-lkp/linux/commits/Terry-Bowman/cxl-pci-Add-RCH-downstream-port-AER-and-RAS-register-discovery/20230324-054044
> base:   https://git.kernel.org/pub/scm/linux/kernel/git/pci/pci.git next
> patch link:    https://lore.kernel.org/r/20230323213808.398039-6-terry.bowman%40amd.com
> patch subject: [PATCH v2 5/5] cxl/pci: Add RCH downstream port error logging
> config: i386-randconfig-a001 (https://download.01.org/0day-ci/archive/20230324/202303241458.BV292BDH-lkp@intel.com/config)
> compiler: gcc-11 (Debian 11.3.0-8) 11.3.0
> reproduce (this is a W=1 build):
>         # https://github.com/intel-lab-lkp/linux/commit/c40ca148e9cff1a1c32cd4c5c9b252bf0cf201b6
>         git remote add linux-review https://github.com/intel-lab-lkp/linux
>         git fetch --no-tags linux-review Terry-Bowman/cxl-pci-Add-RCH-downstream-port-AER-and-RAS-register-discovery/20230324-054044
>         git checkout c40ca148e9cff1a1c32cd4c5c9b252bf0cf201b6
>         # save the config file
>         mkdir build_dir && cp config build_dir/.config
>         make W=1 O=build_dir ARCH=i386 olddefconfig
>         make W=1 O=build_dir ARCH=i386 SHELL=/bin/bash drivers/
> 
> If you fix the issue, kindly add following tag where applicable
> | Reported-by: kernel test robot <lkp@intel.com>
> | Link: https://lore.kernel.org/oe-kbuild-all/202303241458.BV292BDH-lkp@intel.com/
> 
> All errors (new ones prefixed by >>):
> 
>    drivers/cxl/mem.c: In function 'rcec_enable_aer_ints':
>>> drivers/cxl/mem.c:51:36: error: 'struct pci_dev' has no member named 'rcec'
>       51 |         struct pci_dev *rcec = pdev->rcec;
>          |                                    ^~
>>> drivers/cxl/mem.c:63:21: error: 'struct pci_dev' has no member named 'aer_cap'; did you mean 'ats_cap'?
>       63 |         aer = rcec->aer_cap;
>          |                     ^~~~~~~
>          |                     ats_cap
> 
> 
> vim +51 drivers/cxl/mem.c
> 
>     48	
>     49	static int rcec_enable_aer_ints(struct pci_dev *pdev)
>     50	{
>   > 51		struct pci_dev *rcec = pdev->rcec;
>     52		int aer, rc;
>     53		u32 mask;
>     54	
>     55		if (!rcec)
>     56			return -ENODEV;
>     57	
>     58		/*
>     59		 * Internal errors are masked by default, unmask RCEC's here
>     60		 * PCI6.0 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h)
>     61		 * PCI6.0 7.8.4.6 Correctable Error Mask Register (Offset 14h)
>     62		 */
>   > 63		aer = rcec->aer_cap;
>     64		rc = pci_read_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, &mask);
>     65		if (rc)
>     66			return rc;
>     67		mask &= ~PCI_ERR_UNC_INTN;
>     68		rc = pci_write_config_dword(rcec, aer + PCI_ERR_UNCOR_MASK, mask);
>     69		if (rc)
>     70			return rc;
>     71	
>     72		rc = pci_read_config_dword(rcec, aer + PCI_ERR_COR_MASK, &mask);
>     73		if (rc)
>     74			return rc;
>     75		mask &= ~PCI_ERR_COR_INTERNAL;
>     76		rc = pci_write_config_dword(rcec, aer + PCI_ERR_COR_MASK, mask);
>     77	
>     78		return rc;
>     79	}
>     80	
> 

I will add #ifdef checks for CONFIG_PCIEPORTBUS and CONFIG_PCIEAER
around the related code.

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (mail-mw2nam12on2088.outbound.protection.outlook.com [40.107.244.88])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 381715662
	for <oe-kbuild-all@lists.linux.dev>; Fri, 24 Mar 2023 13:12:08 +0000 (UTC)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=d2cOnPV+HaKVahRZDCo9mzRBVK+PRF7uktzqSsuS+cm40B+IuW5sLNhyKI8fy6JSsEB/BcyibNqOcXb4sSdTlI2KAISs9O4rXpfb9kb2d7NKH/7a20B2KgSCXfjBINRO9TJ3OAoBKdTql8sfJE65DV7PRLfpD0C7LCTeoeD+fLQOZuA5/+Nnq1afzO/SUs1V4MLjtqzo5BrIo/fXnpJmzY2nfZyNl3iznKCz+MXRkmxUqOIwMLzyb7TiNpAJ5mCdblJfd2LyQXJD+W0n+7jqY2AuHz4N5D996G02DDLC0Tj/TT0Eis/rsXF0Tooxb2pnj39XYCM/YhyGOL+4NF7piw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=f1yIuICGNQiRIr4VlWoz5kt4GEDfTPMGKrv42GQIETo=;
 b=B4DLmlxKxBEVLnVTRESFZpTNpuAWGNFrdpdiMB8ZvSAcV8iJQCm8O/3Mcauu4SHVLitgRgRxcjA8tUtY1OQk0gw2x1ioOyOVXLxJx4ciywJ9sgOD0Hm3+7oWd0wY+o5gLFZU3v/iMm5y+jFNufQQLq1WiwAr92c3+Nmrl411D+oBSg6TcXm0OrobIoQbb9M0OKj1I+W/7I17p8Bo5tgVUg2JsYVXU0Yex4fIQDt6dFaY8yDABpLu2rEY08OBJL0oS9r8pBTRkgncrc02AyaL6zaUX1R9rAYjKyHMUwZG6TCvcJFWYFKRZX/a9cAwLCBnj75MeLuGfihL5ElhjTI38w==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=f1yIuICGNQiRIr4VlWoz5kt4GEDfTPMGKrv42GQIETo=;
 b=SFr9S3lwO/2ANtxCuxH+sFnJqY1XuxyxnZ08EzDBSNVlOCTiV4dqa24YFW+o5Xc/W5lbD9v2Q18rZlEsUhgDKyC99+uRXWKxlbzAYY7uF0vHcu1ZdePQR8tOBupOdxT/9JZA8pLyHdeL6eVwcifN3cCQiFqdmIJqA59vRYn41fo=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 CH3PR12MB8584.namprd12.prod.outlook.com (2603:10b6:610:164::14) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.38; Fri, 24 Mar
 2023 13:12:05 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::8ffc:be4a:e730:2bbc%5]) with mapi id 15.20.6178.038; Fri, 24 Mar 2023
 13:12:05 +0000
Message-ID: <8e593a61-8a0e-8e13-603b-ced514b7533e@amd.com>
Date: Fri, 24 Mar 2023 08:12:01 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.8.0
Subject: Re: [PATCH v2 1/5] cxl/pci: Add RCH downstream port AER and RAS
 register discovery
To: kernel test robot <lkp@intel.com>, alison.schofield@intel.com,
 vishal.l.verma@intel.com, ira.weiny@intel.com, bwidawsk@kernel.org,
 dan.j.williams@intel.com, dave.jiang@intel.com, Jonathan.Cameron@huawei.com,
 linux-cxl@vger.kernel.org, rrichter@amd.com
Cc: oe-kbuild-all@lists.linux.dev, linux-kernel@vger.kernel.org,
 bhelgaas@google.com
References: <20230323213808.398039-2-terry.bowman@amd.com>
 <202303241632.HTxJ0yfj-lkp@intel.com>
Content-Language: en-US
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <202303241632.HTxJ0yfj-lkp@intel.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: BL1PR13CA0349.namprd13.prod.outlook.com
 (2603:10b6:208:2c6::24) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: oe-kbuild-all@lists.linux.dev
List-Id: <oe-kbuild-all.lists.linux.dev>
List-Subscribe: <mailto:oe-kbuild-all+subscribe@lists.linux.dev>
List-Unsubscribe: <mailto:oe-kbuild-all+unsubscribe@lists.linux.dev>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|CH3PR12MB8584:EE_
X-MS-Office365-Filtering-Correlation-Id: 36e8abc6-af06-43c8-47f1-08db2c695d7d
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: vUxYf/KXVOBdcJ5s6/fkyrXr60NbPJuRVOdb5+MK2e8v/XxJQO0JFpqXeqbU6Rmkbo68UonaPo0QqrPmJ4i9vhL+qOnYud7xWrstBnJkkiSMFSgzAxAICp3K/lBecj0R9/z02/RkNccqd6AiD0tHKOI1H8hS79AUGqKNPo5SATXS4IB4M6FlWzN8LV65qsVqRWpEMroX2w41LFZrcGMNv4DNUJ+4lRkgakhGoAU/cqmbrbLwNNUfNos9rub6ji2A7Y3w8rnrAc61tnc8Y8OoQrUAccUvtFsBrsZhgNgeZLJmvnAUaB7AUUuNoqGenC0LBtQAKjr01vkhLPE79Dk6rr2vqVQmAnIPmfDOfLM23uC8+BHF7OOe5ftTXxwHczkfzQjk3gtiZsfxWAmj2kC3fL8EfuPHcx+ltIgb6ZLmtRd7iwvmLmA1dBC0hqu5DF7Y2sb9eRCFTEJ3GZqJBY1tgZ81SmyttDT4zh8+P30DmI4i2G3fvVlraQasKxQu+dGLbrWnNIfUqX5dUxiN5tcnlmZ8KFNxrrtxLxvpobwXm2mGtXkDQ6pR0pa5h1aN2tHKBwuYZSga4aNLoCcpRnWgS5EDyVQ1YEintlKOkOl5eS8TCnCR3QxPnlCdPp9vY5tKbtPNwklPYbZgO6sb780d+jwyjav5Vd+FTNTlotn1VzT+IF0AwozzsEbmDJY7tuVo3t7ZGJN61Qcu5q2lapIidmcK/764z7WHWff5S/4jY4M0qu/1WwGjWzaTgEnmurX1
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230025)(4636009)(396003)(366004)(376002)(39860400002)(346002)(136003)(451199018)(6506007)(6512007)(53546011)(186003)(6666004)(36756003)(921005)(31696002)(86362001)(38100700002)(2616005)(83380400001)(5660300002)(8676002)(7416002)(8936002)(66946007)(4326008)(66556008)(66476007)(4744005)(6636002)(41300700001)(31686004)(316002)(478600001)(2906002)(966005)(6486002)(45980500001)(43740500002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?TkdaeXNjaVlYNUtJKzBRVWNBeEx6T2IxSkhralRPZ29JNVNqbENxVXRzSVpG?=
 =?utf-8?B?N1pKM0Z5WUphejdPeUJMZmMwQ0ZFS0Rta0dscVo1aDZucDJVOFZVRXBIaUVu?=
 =?utf-8?B?VnFyRjFVdldsU1NTZHlBUVFRWityZnVML0NiY09VYVdDcjA0bU45aysyZFBw?=
 =?utf-8?B?a0FUSVhvYjNtbjNtUDJoVm5TVlR0VW1PK0hTMHNBTDBBYkFPMDNaWlljekVa?=
 =?utf-8?B?TG9UVi9ZYkwzM2diUkpPVnBVZVorS09XeG5PQUd2djcwcU5qWnNMYWJLa2wx?=
 =?utf-8?B?bWRqdmF1cklyMEFBOWZHdTNFUFcrSFkzRnByQ0lGc0hycmx1elMyUklPZHRk?=
 =?utf-8?B?SXBtTGZlV1k2ME40MXRxOHNhbW5MbzRlOFozOTBaQ2hWeG9Tdmw5K0E2L2lu?=
 =?utf-8?B?QnJYMjFNTEZTaEZrMTlGRytKUXNZdlZ2SXAzeFB6cU8rUThHcUprdlo1Qkdl?=
 =?utf-8?B?NnpXNG8zNjhMdExaaWcwbnZObGIyblhXN0JmTGJ6QU1Hc3h4dmxTZ1NOYmlp?=
 =?utf-8?B?alRzOFZuNU9PcC83NmhLWmUxUUZjdDE4cHI5bldUUnFqU2tmYjNuY21ZSWlL?=
 =?utf-8?B?ZDRjM2tYZVpvNDRYcFZrNDVqVFdtSGxWbFJHVHhydnVqa2ZGQzU3bFdFS2Ev?=
 =?utf-8?B?ZXdXb0hRSlNMeFgrWFkvdkk0RUY4OEs1R3k0RFkrZW9PNWU3SDJiNzBDS0dR?=
 =?utf-8?B?YXJUZXU0Ly93b0duV3lIbVU4Ni85WVkxeVZXZ1JmMUE2STFtZUt3RU9CTjdw?=
 =?utf-8?B?NHhsV00rR2tCTk4yQ01vT0hlbXlRYVRib1RtcCt4RGxxZFFNSjNka2VuMmZa?=
 =?utf-8?B?M0duQU5mcWZoTWFnR3JiWWpQYXdadE5oOFpMSGFIMnhsZGxpMWdMUXVtKzlm?=
 =?utf-8?B?V3ZrTFdHRWtobjEwZWlyOFVvejhuRUdBNlRlTmZ4Mi9zT0JhUHpJajR3bUo0?=
 =?utf-8?B?QVRIZDhyR0ZNOXNpdTc3ZWJqT1BnWjVUK1JHTHpHYmFnb2F2U0Y5cmtoTEpF?=
 =?utf-8?B?Zzg2WERkakpDOWp2Tk1Ta0JiTURQWmRDanNmVE5IT2FpYW9RL0ZzSDY1WFd1?=
 =?utf-8?B?cUN3QVNNWmlnZDZFVVhKUERkUzFjZVdDS1FYTzlsdmhUMEFWQTBLY2N1KzIy?=
 =?utf-8?B?SGs0b3A1VitHMlh4SG9HMmx1M0sxS0xHYTM2dzQ1azkwaTRBSEs2cWt2WUo2?=
 =?utf-8?B?Vlk2RVlGZE5FVWYzTWF4VEdSR0w0QzdUVVpoaXBHTVVxTmtjQXdxQWU3Rk5z?=
 =?utf-8?B?Qm83QU5QTEUrUDIvU3pHNXFiQzQyaTl3MURSelAzVkNPakdZVDB2RTAzc0JK?=
 =?utf-8?B?QzQ2VzVPcHlJbXZ3dXJudWhWM0VvQlV4NU9JSzlzVzBVQ3lHMHZ5ZUdyRTN4?=
 =?utf-8?B?c0RIQUhGbStwOEJUNmNpays4N0VJeWh2N1RXRW1Fdi9LNlVoY1ZzTEdaRFFG?=
 =?utf-8?B?MnVNN0JsTUFMNENiZVFtSEcxeiszcEFxMlFmR3RRRHBGVHVWVGsrWDhPdkV3?=
 =?utf-8?B?KzMxL05STUM2aGhWeUNKZ0p4NmVBd1gwbTVqeGxyTFQ4NndiVWNNaDk2czRT?=
 =?utf-8?B?NzlHaUlZd05FNTFjSkdxRkNTK2xhdE1EeFdndzhWUHEyNzBKUWg0dkZUWmwr?=
 =?utf-8?B?cyt4S1R6dmhZZU15bFVSYTFQQ0lXUm9uZVpPOXE2NWZ6ckJNU2hMWTJockly?=
 =?utf-8?B?S2owNC9ERUdrYXZVaTFBdUl3eEtiVGxSa3dvUDI2V2ZUV2tmdDhTQWtYMWNm?=
 =?utf-8?B?dk80eUtPa25XNHNXWU92RXZXeEFHd3lMNnd6T0ZiSTF0WWh1aTBaL0VnRlZk?=
 =?utf-8?B?bDZiaDdoZXBKeHh1c0RGb0hIb0YySm5nMTRiNHkxVkZybEFFaWdXNW1MOVNp?=
 =?utf-8?B?eGdkR3ZINlVzdGdmY1VUY01Lc0I1cmZJTG14R3NXc29BbVFGVlZIczVYTTc4?=
 =?utf-8?B?K25XMURadUZHd2J1cDUxUkVrK3BjcFJ5TjV0cDg4S2hQWGtMdzZmZVc5T1Zv?=
 =?utf-8?B?VkhWdzl0RDVrZTQwTGFkeEFMTCs0azFGMk5VZkxkWDl5RC96VjdZQVJZQ1ZM?=
 =?utf-8?B?K2I2bWtaZmlJMklqc1pZWmM2YjFVbkRiblpoQnBxSElzVVdBNmN5djU4RURD?=
 =?utf-8?B?bjRVWUxsVmJOZkpIY0RiSnJqZktUUTF4QUQ3cDFGMG5QYlhPNjF1TXJjTU1z?=
 =?utf-8?Q?VrkCVhjPjG2VJz+krNZHdKEAw+jrfnQW2961XstkeAvv?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 36e8abc6-af06-43c8-47f1-08db2c695d7d
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Mar 2023 13:12:05.7080
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: sRJZArAfIy2Du0EXAHXxEui8pLA4I43bvfeNoETiHK9ToxV+Gg4NcrlZl4gHip/0A7uDJGDL4YDLlHrGPRjeiw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CH3PR12MB8584



On 3/24/23 03:53, kernel test robot wrote:

> If you fix the issue, kindly add following tag where applicable
> | Reported-by: kernel test robot <lkp@intel.com>
> | Link: https://lore.kernel.org/oe-kbuild-all/202303241632.HTxJ0yfj-lkp@intel.com/
> 
> sparse warnings: (new ones prefixed by >>)
>>> drivers/cxl/core/regs.c:340:24: sparse: sparse: Using plain integer as NULL pointer
>    drivers/cxl/core/regs.c:345:24: sparse: sparse: Using plain integer as NULL pointer
> 
> vim +340 drivers/cxl/core/regs.c
> 
>    338	
>    339		if (!request_mem_region(map->resource, map->max_size, name))
>  > 340			return 0;
>    341	
>    342		map->base = ioremap(map->resource, map->max_size);
>    343		if (!map->base) {
>    344			release_mem_region(map->resource, map->max_size);
>    345			return 0;
>    346		}
>    347	
>    348		return map->base;
>    349	}
>    350	
> 

Yes, I will change the 0 return value to use NULL instead.

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 3C14FC77B71
	for <linux-cxl@archiver.kernel.org>; Wed, 29 Mar 2023 16:02:15 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S230384AbjC2QBo (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Wed, 29 Mar 2023 12:01:44 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:59598 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S230350AbjC2QB3 (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Wed, 29 Mar 2023 12:01:29 -0400
Received: from NAM10-DM6-obe.outbound.protection.outlook.com (mail-dm6nam10on2071.outbound.protection.outlook.com [40.107.93.71])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id D1C5E6E82;
        Wed, 29 Mar 2023 09:00:12 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=YwuOYPcqsF1jq+r3Pv4xcn3T6uQ9Vfp+TGeZG7SEHb/qIAXV8gpzMD3NwUHCmCuYa39nEdBwQ1jhbfFg8/bRTnZuwIRDX10cy15gkETOOaHw6K4q6l++glQSPK8mf91B1EB6N5MtSaZqJDBRfftyvYsIk6VvM3lgorhBcKNG/lsIKBgFnK9Vv48+ghFdOkoBWSRX4DMRco2rtYaBt+S02AFwzYD3JOzAcMA6UM8FyvgBElDVl2J6TPKjBRmQ3a4NlORBzpG/qa+UxnmuThEB8q/691RtMSzGXGkHUjlcMAoK0kwicmiI1zQUdjHfMcmdcB91toluHejDE2ClaGqZfQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=6IzTMCj6XqJuPKvMAINOCQ6Dx1LWIB46PBhf6uZX1m4=;
 b=Z7d8xoTlzMivbiza1q8rQtStANmBErkzGAvpH7C7TS5JyvzPjM0tRb+GbgFhjMwU+Nl535SI4jm/Y7nOPJlKr4gi6YulB4E9o7BYYDS6g98NFAH5nyvPTmbS/JQAMlRUU2lh9X6slpROQu5ZdHomIDMPMUUPvTzAqq3Wc5wBZ2mcIdfJ/Un2iED5cQLQH9mS2gRy6eu05aDGRXppAIC1QZTnLjtEgdmvKO10Xo1FIkaFjdG8ALuv/MSIKt9bRk9YeuTm6GXC5nqU/YBs+KOIWOSNMAklvU/I4ExUIJ+JNQyTxSa5fMBJlaH+obCOQDloWM0CU7xGd3C/bJPYvnVbHQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=kernel.org smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=6IzTMCj6XqJuPKvMAINOCQ6Dx1LWIB46PBhf6uZX1m4=;
 b=QRVF0USKCbfTCcsy/GwsU9OPp1H30yXsdMJ7g6r7DmAG3jTs3kWdcsq4U+gll/cuFuy+sgDA5Xe3K/H/DVAWmdtp+jVYyRPYFVhgzEtsVfeaZtUhtYHpbRvhU8qS1TDDRYcjrFFdL854b1UHxe3i0HGteKGUJpcLPTvbPBc/1co=
Received: from BN8PR15CA0057.namprd15.prod.outlook.com (2603:10b6:408:80::34)
 by DM4PR12MB5054.namprd12.prod.outlook.com (2603:10b6:5:389::24) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6222.33; Wed, 29 Mar
 2023 16:00:06 +0000
Received: from BN8NAM11FT112.eop-nam11.prod.protection.outlook.com
 (2603:10b6:408:80:cafe::3c) by BN8PR15CA0057.outlook.office365.com
 (2603:10b6:408:80::34) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6254.20 via Frontend
 Transport; Wed, 29 Mar 2023 16:00:05 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 BN8NAM11FT112.mail.protection.outlook.com (10.13.176.210) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.6222.22 via Frontend Transport; Wed, 29 Mar 2023 16:00:05 +0000
Received: from rric.localdomain (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2375.34; Wed, 29 Mar
 2023 11:00:01 -0500
Date: Wed, 29 Mar 2023 17:59:58 +0200
From: Robert Richter <rrichter@amd.com>
To: Bjorn Helgaas <helgaas@kernel.org>
CC: Terry Bowman <terry.bowman@amd.com>, <alison.schofield@intel.com>,
        <vishal.l.verma@intel.com>, <ira.weiny@intel.com>,
        <bwidawsk@kernel.org>, <dan.j.williams@intel.com>,
        <dave.jiang@intel.com>, <Jonathan.Cameron@huawei.com>,
        <linux-cxl@vger.kernel.org>, <linux-kernel@vger.kernel.org>,
        <bhelgaas@google.com>, <linux-pci@vger.kernel.org>,
        Mahesh J Salgaonkar <mahesh@linux.ibm.com>,
        Oliver O'Halloran <oohall@gmail.com>,
        <linuxppc-dev@lists.ozlabs.org>
Subject: Re: [PATCH v2 4/5] cxl/pci: Forward RCH downstream port-detected
 errors to the CXL.mem dev handler
Message-ID: <ZCRgfoXxsx8jHVCu@rric.localdomain>
References: <ZCIPuPM+LZsOFIIZ@rric.localdomain>
 <20230328172104.GA2897826@bhelgaas>
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <20230328172104.GA2897826@bhelgaas>
X-Originating-IP: [10.180.168.240]
X-ClientProxiedBy: SATLEXMB03.amd.com (10.181.40.144) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BN8NAM11FT112:EE_|DM4PR12MB5054:EE_
X-MS-Office365-Filtering-Correlation-Id: c10b1d08-6390-4885-a989-08db306ea9fc
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 68/dFVhbT5Pv0chLN0UC68ndbXEQLNDXKQHYhawaqMeBp0h9za3aEZB4KTVwsz4bymBbnfpMV3PsYn6Xjv+jrFF5gGy53ZLHqYS59+wLjMLyq4KZlK7fGovY84yvUKzQa4BHs+8yyYHR7ZvtlwzSNo/V/64hY4T5Y3/UsB3q4ySdZ94KL6XcADe8mOw+Pk0v/UazBRq08IT2eK1QQqr7rLdzVhleGlzoLKsoty/eA5zi58+pKI/HXOoeWU0hl9YmjoEnGTU8OF8BMdq4dEMGW/dkLJCD+7j94I295Vwr31obCYByTUwe/UfpP5BJf4FWJqyda7N/BOrEmTlKTfnF61iFVR/ReV58o3sL1D5uMGsmQkpLNvC0VOhh5S/RAK1k/2oXlltYCzxaTDvzCXrvhb2BsBKvvERAnvo1dQA8kz3ezUpL3KhxU5lvWvZyNqmR+8A/C6B+IvBTRCuCJJNI8hh3CPUIDr3BT6v8a5ihaJ/hwZWYG0VsXT+i6T6eaYfD75g1oY1qa2HQlQdZ0STqm6HNRdEYlReO88pR+cnzrhTuunvUg1qXJYWpH3rtb2dPlmLjzwgTvz54cHF83Pkp8+h3II22eVpmZ+QvNv0FYsguXFCTbu/aqwPgfethDjuZ8BQzM+eJKBJlegJlChJnh24UlpNbGwBDh0X54DORc4xO0uMOW5wJUhCHWmfMX5Bh7l7K2QMidNvt15wFsacXBFoo3311EROSN5uSWn8LCe0=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230028)(4636009)(39860400002)(136003)(396003)(376002)(346002)(451199021)(36840700001)(40470700004)(46966006)(2906002)(7416002)(8936002)(336012)(5660300002)(426003)(47076005)(82310400005)(36860700001)(356005)(55016003)(40480700001)(7696005)(82740400003)(966005)(40460700003)(81166007)(41300700001)(6916009)(4326008)(8676002)(83380400001)(70206006)(186003)(16526019)(54906003)(316002)(70586007)(26005)(9686003)(53546011)(6666004)(478600001)(36900700001);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 29 Mar 2023 16:00:05.9032
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: c10b1d08-6390-4885-a989-08db306ea9fc
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: BN8NAM11FT112.eop-nam11.prod.protection.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM4PR12MB5054
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On 28.03.23 12:21:04, Bjorn Helgaas wrote:
> [+cc linux-pci, more error handling folks; beginning of thread at
> https://lore.kernel.org/all/20230323213808.398039-1-terry.bowman@amd.com/]
> 
> On Mon, Mar 27, 2023 at 11:51:39PM +0200, Robert Richter wrote:
> > On 24.03.23 17:36:56, Bjorn Helgaas wrote:
> 
> > > > The CXL device driver is then responsible to
> > > > enable error reporting in the RCEC's AER cap
> > > 
> > > I don't know exactly what you mean by "error reporting in the RCEC's
> > > AER cap", but IIUC, for non-Root Port devices, generation of ERR_COR/
> > > ERR_NONFATAL/ERR_FATAL messages is controlled by the Device Control
> > > register and should already be enabled by pci_aer_init().
> > > 
> > > Maybe you mean setting AER mask/severity specifically for Internal
> > > Errors?  I'm hoping to get as much of AER management as we can in the
> > 
> > Richt, this is implemented in patch #5 in function
> > rcec_enable_aer_ints().
> 
> I think we should add a PCI core interface for this so we can enforce
> the AER ownership question (all the crud like pcie_aer_is_native()) in
> one place.

Do you mean, code around functions rcec_enable_aer_ints() should be
moved to aer.c and the cxl handler then just assumes it is enabled
already? That looks feasible.

> 
> > > PCI core and out of drivers, so maybe we need a new PCI interface to
> > > do that.
> > > 
> > > In any event, I assume this sort of configuration would be an
> > > enumeration-time thing, while *this* patch is a run-time thing, so
> > > maybe this information belongs with a different patch?
> > 
> > Do you mean once a Restricted CXL host (RCH) is detected, the internal
> > errors should be enabled in the device mask, all this done during
> > device enumeration? But wouldn't interrupts being enabled then before
> > the CXL device is ready?
> 
> I'm not sure what you mean by "before the CXL device is ready."  What
> makes a CXL device ready, and how do we know when it is ready?

The cxl_pci driver must be bound to a device which then further
creates a CXL mem dev. With that binding we can determine the
connected CXL dports from the cxl endpoints (which are seen as PCIe
endpoints) to inspect the CXL RAS caps (in the CXL component reg
space) and the PCIe AER caps (in the RCRB of the dport).

> 
> pci_aer_init() turns on PCI_EXP_DEVCTL_CERE, PCI_EXP_DEVCTL_FERE, etc
> as soon as we enumerate the device, before any driver claims the
> device.  I'm wondering whether we can do this PCI_ERR_COR_INTERNAL and
> PCI_ERR_UNC_INTN fiddling around the same time?

Yes, if the CXL device is not yet bound, there is no handler attached
and AER errors are only handled on a PCI level. Though, we need to
make sure the status is cleared.

> 
> > > I haven't worked all the way through this, but I thought Sean Kelley's
> > > and Qiuxu Zhuo's work was along the same line and might cover this,
> > > e.g.,
> > > 
> > >   a175102b0a82 ("PCI/ERR: Recover from RCEC AER errors")
> > >   579086225502 ("PCI/ERR: Recover from RCiEP AER errors")
> > >   af113553d961 ("PCI/AER: Add pcie_walk_rcec() to RCEC AER handling")
> > > 
> > > But I guess maybe it's not quite the same case?
> > 
> > Actually, we use this code to handle errors that are reported to the
> > RCEC and only implement here the CXL specifics. That is, checking if
> > the RCEC receives something from a CXL downstream port and forwarding
> > that to a CXL handler (this patch). The handler then checks the AER
> > err cap in the RCRB of all CXL downstream ports associated to the RCEC
> > (not visible in the PCI hierarchy), but discovered through the :00.0
> > RCiEP (patch #5).
> 
> There are two calls to pcie_walk_rcec():
> 
>   1) The existing one in find_source_device()
>   2) The one you add in handle_cxl_error()
> 
> Does the call in handle_cxl_error() look at devices that the existing
> call in find_source_device() does not?  I'm trying to understand why
> we need both calls.

In case of a dport error, e_info will only contain the RCEC's id after
running find_source_device(). Thus, only the RCEC's handler would be
called. The portdrv is already bound to the device and currently
doesn't have a handler attached.

As described, due to cross dependencies between cxl and the portdrv,
instead of implementing a handler in the portdrv, we decided to
forward errors to the CXL endpoint driver and handle it there. So now,
in handle_cxl_error(), we check if the error source is an RCEC
attached to a CXL bus and we forward everything directly to the CXL
endpoint handler. pcie_walk_rcec() is used for that.

> 
> > > > +static bool is_internal_error(struct aer_err_info *info)
> > > > +{
> > > > +	if (info->severity == AER_CORRECTABLE)
> > > > +		return info->status & PCI_ERR_COR_INTERNAL;
> > > > +
> > > > +	return info->status & PCI_ERR_UNC_INTN;
> > > > +}
> > > > +
> > > > +static void handle_cxl_error(struct pci_dev *dev, struct aer_err_info *info)
> > > > +{
> > > > +	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
> > > > +	    is_internal_error(info))
> > > 
> > > What's unique about Internal Errors?  I'm trying to figure out why you
> > > wouldn't do this for *all* CXL errors.
> > 
> > Per CXL specification downstream port errors are signaled using
> > internal errors. 
> 
> Maybe a spec reference here to explain is_internal_error()?  Is the
> point of the check to *exclude* non-internal errors?  Or is basically
> documentation that there shouldn't ever *be* any non-internal errors?
> I guess the latter wouldn't make sense because at this point we don't
> know whether this is a CXL hierarchy.

It is described in CXL 3.0 spec, 12.2.1.1 RCH Downstream Port-detected
Errors.

We do not handle errors other than internal ones, this is what the
check is for. In theory, an RCEC could also throw other kind of
errors. But, as per spec, once internal error are received from the
RCEC, the CXL dports need to be inspected.

> 
> > All other errors would be device specific, we cannot
> > handle that in a generic CXL driver.
> 
> I'm missing the point here.  We don't have any device-specific error
> handling in aer.c; it only connects the generic *reporting* mechanism
> (AER log registers and Root Port interrupts) to the drivers that do
> the device-specific things via err_handler hooks.  I assume we want a
> similar model for CXL.

With device specific I mean implementation defined and not described
in a specification. The CXL handler is sort of generic as it is
(solely) implementing the CXL spec. Hope that makes sense.

Thanks,

-Robert


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id C03C2C6FD18
	for <linux-cxl@archiver.kernel.org>; Tue, 28 Mar 2023 17:21:13 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S230507AbjC1RVM (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Tue, 28 Mar 2023 13:21:12 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:33296 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S230421AbjC1RVK (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Tue, 28 Mar 2023 13:21:10 -0400
Received: from dfw.source.kernel.org (dfw.source.kernel.org [IPv6:2604:1380:4641:c500::1])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id E303BE192;
        Tue, 28 Mar 2023 10:21:07 -0700 (PDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by dfw.source.kernel.org (Postfix) with ESMTPS id 4FA45618CE;
        Tue, 28 Mar 2023 17:21:07 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 6738FC433EF;
        Tue, 28 Mar 2023 17:21:06 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1680024066;
        bh=XG4Gv1uDdcHMJWold8r+MUkd4gUOdU/9HSIAESk1/iI=;
        h=Date:From:To:Cc:Subject:In-Reply-To:From;
        b=kcCgVmfoCcOL/fkAXJQsz0LR/9b+X2wFGZS6g8nS9Cva1U101OE0U3EYyXbdkbqTy
         aceP/+FEMtrdQPPfqvP04qtm8sFXLHSaf041pAalMFGJKoaaGgN8X+pOn+S8oI33Ye
         tIOd6sKIwS0xLixDLCa1mNY9dJyX+ECsqXhzOWdH8m5AScZp6HCSXUJID+reaRG3Wz
         Xv6Te2/TzBDwEPhxKQBKWns6Kx3J+HnN4AVGU1YcceA5efROf1luvolQTWIUtyl5IO
         RMLsJC8X3gumbnI1bFdMRIw1+8QGPcoQSwj8r8cEwhoZVTVT+phzktL1gEY8PnExS5
         mxpemz9CNneEQ==
Date: Tue, 28 Mar 2023 12:21:04 -0500
From: Bjorn Helgaas <helgaas@kernel.org>
To: Robert Richter <rrichter@amd.com>
Cc: Terry Bowman <terry.bowman@amd.com>, alison.schofield@intel.com,
        vishal.l.verma@intel.com, ira.weiny@intel.com, bwidawsk@kernel.org,
        dan.j.williams@intel.com, dave.jiang@intel.com,
        Jonathan.Cameron@huawei.com, linux-cxl@vger.kernel.org,
        linux-kernel@vger.kernel.org, bhelgaas@google.com,
        linux-pci@vger.kernel.org,
        Mahesh J Salgaonkar <mahesh@linux.ibm.com>,
        Oliver O'Halloran <oohall@gmail.com>,
        linuxppc-dev@lists.ozlabs.org
Subject: Re: [PATCH v2 4/5] cxl/pci: Forward RCH downstream port-detected
 errors to the CXL.mem dev handler
Message-ID: <20230328172104.GA2897826@bhelgaas>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <ZCIPuPM+LZsOFIIZ@rric.localdomain>
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

[+cc linux-pci, more error handling folks; beginning of thread at
https://lore.kernel.org/all/20230323213808.398039-1-terry.bowman@amd.com/]

On Mon, Mar 27, 2023 at 11:51:39PM +0200, Robert Richter wrote:
> On 24.03.23 17:36:56, Bjorn Helgaas wrote:

> > > The CXL device driver is then responsible to
> > > enable error reporting in the RCEC's AER cap
> > 
> > I don't know exactly what you mean by "error reporting in the RCEC's
> > AER cap", but IIUC, for non-Root Port devices, generation of ERR_COR/
> > ERR_NONFATAL/ERR_FATAL messages is controlled by the Device Control
> > register and should already be enabled by pci_aer_init().
> > 
> > Maybe you mean setting AER mask/severity specifically for Internal
> > Errors?  I'm hoping to get as much of AER management as we can in the
> 
> Richt, this is implemented in patch #5 in function
> rcec_enable_aer_ints().

I think we should add a PCI core interface for this so we can enforce
the AER ownership question (all the crud like pcie_aer_is_native()) in
one place.

> > PCI core and out of drivers, so maybe we need a new PCI interface to
> > do that.
> > 
> > In any event, I assume this sort of configuration would be an
> > enumeration-time thing, while *this* patch is a run-time thing, so
> > maybe this information belongs with a different patch?
> 
> Do you mean once a Restricted CXL host (RCH) is detected, the internal
> errors should be enabled in the device mask, all this done during
> device enumeration? But wouldn't interrupts being enabled then before
> the CXL device is ready?

I'm not sure what you mean by "before the CXL device is ready."  What
makes a CXL device ready, and how do we know when it is ready?

pci_aer_init() turns on PCI_EXP_DEVCTL_CERE, PCI_EXP_DEVCTL_FERE, etc
as soon as we enumerate the device, before any driver claims the
device.  I'm wondering whether we can do this PCI_ERR_COR_INTERNAL and
PCI_ERR_UNC_INTN fiddling around the same time?

> > I haven't worked all the way through this, but I thought Sean Kelley's
> > and Qiuxu Zhuo's work was along the same line and might cover this,
> > e.g.,
> > 
> >   a175102b0a82 ("PCI/ERR: Recover from RCEC AER errors")
> >   579086225502 ("PCI/ERR: Recover from RCiEP AER errors")
> >   af113553d961 ("PCI/AER: Add pcie_walk_rcec() to RCEC AER handling")
> > 
> > But I guess maybe it's not quite the same case?
> 
> Actually, we use this code to handle errors that are reported to the
> RCEC and only implement here the CXL specifics. That is, checking if
> the RCEC receives something from a CXL downstream port and forwarding
> that to a CXL handler (this patch). The handler then checks the AER
> err cap in the RCRB of all CXL downstream ports associated to the RCEC
> (not visible in the PCI hierarchy), but discovered through the :00.0
> RCiEP (patch #5).

There are two calls to pcie_walk_rcec():

  1) The existing one in find_source_device()
  2) The one you add in handle_cxl_error()

Does the call in handle_cxl_error() look at devices that the existing
call in find_source_device() does not?  I'm trying to understand why
we need both calls.

> > > +static bool is_internal_error(struct aer_err_info *info)
> > > +{
> > > +	if (info->severity == AER_CORRECTABLE)
> > > +		return info->status & PCI_ERR_COR_INTERNAL;
> > > +
> > > +	return info->status & PCI_ERR_UNC_INTN;
> > > +}
> > > +
> > > +static void handle_cxl_error(struct pci_dev *dev, struct aer_err_info *info)
> > > +{
> > > +	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
> > > +	    is_internal_error(info))
> > 
> > What's unique about Internal Errors?  I'm trying to figure out why you
> > wouldn't do this for *all* CXL errors.
> 
> Per CXL specification downstream port errors are signaled using
> internal errors. 

Maybe a spec reference here to explain is_internal_error()?  Is the
point of the check to *exclude* non-internal errors?  Or is basically
documentation that there shouldn't ever *be* any non-internal errors?
I guess the latter wouldn't make sense because at this point we don't
know whether this is a CXL hierarchy.

> All other errors would be device specific, we cannot
> handle that in a generic CXL driver.

I'm missing the point here.  We don't have any device-specific error
handling in aer.c; it only connects the generic *reporting* mechanism
(AER log registers and Root Port interrupts) to the drivers that do
the device-specific things via err_handler hooks.  I assume we want a
similar model for CXL.

Bjorn

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 452C2C77B72
	for <linux-cxl@archiver.kernel.org>; Fri, 14 Apr 2023 20:41:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229735AbjDNUl6 (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Fri, 14 Apr 2023 16:41:58 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:45012 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229497AbjDNUl5 (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Fri, 14 Apr 2023 16:41:57 -0400
Received: from NAM11-BN8-obe.outbound.protection.outlook.com (mail-bn8nam11on2040.outbound.protection.outlook.com [40.107.236.40])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id A6BF344A8;
        Fri, 14 Apr 2023 13:41:56 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=kVy+3QN6dzyTMdqIcoPs1RajsSS6/KQgwBuU69JIg5tFgDQ558aPDfINZKFtuGFpXZF9EpxdfkJdRRuTSQh4tV+BwZYPWXLJSnUf6YhMbCAGOWoMlwm62MOxBw/Pgx4V2UvajwTtpfWDMlk0pk5l89J8zfCAwhIyh1SIdLPVYcB7rh94Zw6Wx6clqv9Us2E5vkPbrcK1Bry+dSfk+rE2YhKSgptMhc6JPMZnmT6yfoS/vZdb3RRd+bFxENj3Et71NQoT+lbYu9rovZjZH+kFRBEGtfUUhPl3TUqXEFbfyDTTd0MQiO2C9GQ320RQ2ZFj4bU103Mpty2nRe8wJjL8UA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=VIXDGNruQWBQfHpl/ovgrhuDUFgKfVad/y94o7EFp00=;
 b=DMrAgnu5Yz9JtwlLWWVcdR/LoqQLhmTGn2XzzDFegqHAyQJFflUjBNUGRSeD1ZqhXOME+9LqMUktnl8tntEkz0QItaZ3SyGekaPt+aFw95ly14cEyoc4xle0bv3pgLKLtuNuT3eG4miDJO8JHTYkRjT+dSNzsh5kwzEdcu3djcdc2ehiECWtZuqXTfFppLrrV0wspSuNOtjX32rQYXHoHcGzCeyyGc4Ww1ub0NYRq678nPi+PnEpdfLU6VmUSbrJbIzhBoW1LMkn5Jpr988ZWKmbwXNQxtaj0GI5G+QpGMmvAN8hPaHKmJHow0F0iVwtz5ayJJww6pAFp5VV5A2dtg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=VIXDGNruQWBQfHpl/ovgrhuDUFgKfVad/y94o7EFp00=;
 b=pYkv6Vmt2gIBR4EaW3Qf2B0CT4IpH5YUTwl4cGC759M4OLVzYicZGnnlFufDByLRS8Fgco4EIfw6gpPWB3ZoKsGJazs6FMJsx1NU7wwQn36utwuKIDsZ0hzYAe45rF38TKRO0Nkg8happA6Ts8b1TjfjxkeAXlxXwsN+mo0FYsY=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 SA0PR12MB7073.namprd12.prod.outlook.com (2603:10b6:806:2d5::8) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.6298.30; Fri, 14 Apr 2023 20:41:54 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::48cb:9d06:e70b:4b42]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::48cb:9d06:e70b:4b42%3]) with mapi id 15.20.6298.030; Fri, 14 Apr 2023
 20:41:54 +0000
Message-ID: <1e93d649-c892-1992-2b38-93fa9ab3041d@amd.com>
Date: Fri, 14 Apr 2023 15:41:50 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Thunderbird/102.9.0
Subject: Re: [PATCH v2 3/5] pci/aer: Export cper_print_aer() for CXL driver
 logging
To: Sathyanarayanan Kuppuswamy 
        <sathyanarayanan.kuppuswamy@linux.intel.com>,
        alison.schofield@intel.com, vishal.l.verma@intel.com,
        ira.weiny@intel.com, bwidawsk@kernel.org, dan.j.williams@intel.com,
        dave.jiang@intel.com, Jonathan.Cameron@huawei.com,
        linux-cxl@vger.kernel.org, rrichter@amd.com, mahesh@linux.ibm.com,
        oohall@gmail.com, linux-pci@vger.kernel.org
Cc: linux-kernel@vger.kernel.org, bhelgaas@google.com
References: <20230323213808.398039-1-terry.bowman@amd.com>
 <20230323213808.398039-4-terry.bowman@amd.com>
 <f31edb04-04c7-2d98-e3ef-a591993e7ceb@amd.com>
 <ef57e100-e656-d692-b776-3f6e3f242c15@linux.intel.com>
Content-Language: en-US
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <ef57e100-e656-d692-b776-3f6e3f242c15@linux.intel.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: BLAPR03CA0123.namprd03.prod.outlook.com
 (2603:10b6:208:32e::8) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|SA0PR12MB7073:EE_
X-MS-Office365-Filtering-Correlation-Id: 1bf58b6d-1f0e-4b12-fcda-08db3d28ae94
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: QrfmbhfbBI/ZfEPkkSgNAJLKXy5RoApQxAOtgd/0Qq9HUdjn5BGKZ+OjixIIKt9n1Ie+5ukVt6buW1KizkulzKozC1RAvsVyXcL6U6l1eEhfMLXu3a2mpzYWAriAFdZLhpScDEX0ntIRiCFQXGj+k+Z6Wmc4UKie0obNFmXq/IXyhA/HrZ6mv5NYggnGnhyRNct9fOGW+rWvuAxYZlGraOZbsBglsjXlWa97tXpymAk31Xw0MvlA5pdSIGBcOVkM26w90o+keISwC9ccORLkMNSfWcvvawg7cUdjzQIelYChGHM7xEqQ94IOo8GDG9ZEck86420mfXfT1XYo2NFdF+ol8zb+Rno8jgWw2XJGkJlYTPdd3eqjtNefs/9w+BU/5weU8eRLMaPfq1qQNHAwtiZ6LgCbJADiJaiT5S0Cd08c9e5xRu6hsfUKZaf7ll2kYRNfTjuH1yp/BzX9naBzIE+IGA4SMC6P4v7AP7p4H2CsiFm5Ff1tqnGuSZkC0ZOM6cID9lXVcTlaOIharYKGfJTg+Sn5isdSc1p852lajJt+IRmcxsCqRgpBoUVfDQUD1ptp2ADk91YJCGSjB8Pipmg4Yq/1tp2O0C4EIgN+CW2upma8DIfTA7xMT5XqiHtB0lXqXdi3EaR3FAgIkovQbNiG8b5m5egcuvPPqtT+JXY=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(4636009)(39860400002)(136003)(366004)(376002)(346002)(396003)(451199021)(6506007)(2616005)(4326008)(6486002)(6666004)(478600001)(186003)(6512007)(53546011)(38100700002)(2906002)(5660300002)(316002)(36756003)(66946007)(66476007)(921005)(66556008)(41300700001)(31696002)(8936002)(86362001)(8676002)(558084003)(7416002)(31686004)(45980500001)(43740500002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?aHdiVGlaWkRpSGt4MDdORmlGRE1yUWozc2RLY2NqQWpwdlEyM3g5b1RINVRh?=
 =?utf-8?B?WG9aR1RHYVBSTUlOVjhzYXRDcWVZUVR5THBySWtTTURsNlQ3L1lEblRKT0o2?=
 =?utf-8?B?bXJwNno1WnNlb1B2VzIxa0xUcTdPMGExMmpQWHB1ZTJRbXdZU0tRQm85TzNU?=
 =?utf-8?B?OXVJVU5HWFpJaE1FRXdUNU55TWw5b0dqMFpUdDV5TE1TY0tjeS8rcGtuR2JX?=
 =?utf-8?B?RmJjbHVwQ0lYbXludjdGSEtzM2R6eEdlbTBQU0lWOUlOd0FCMXpaRmpINzZL?=
 =?utf-8?B?Ym1SZkNqTThmZCtKa0RJbVpodVQzb05MMmVLR0xDOE04eitSbnRYRVVlMmth?=
 =?utf-8?B?ZlFyYTV3ZmZwZTJBRjVNSXQvS3ZuZngrSnZLL1Y4MlpmSW5XWHFqREU5Vy9h?=
 =?utf-8?B?UktXRTNBYjJZZllXdTYrc09lWDlVYnhjeGFyMkNEYUluaGVIY0JFeWxwZkJk?=
 =?utf-8?B?L3FKK2paQXdIZmROdEZJVzZVRThMcGwyZFFLbUFqc1ZjOStFa1RoZWJWQ2xl?=
 =?utf-8?B?MlpaVzM1UU5PM1J5UnNqV3plSzJwcUx2MXlSNmg4Q0xxWFJGb2ZYMmxKcGlR?=
 =?utf-8?B?QXFjbXNicDlMUXI2STd2emp1bG0wOGhWL3B5UWs3VENId29sWHRJK3NlWUQ2?=
 =?utf-8?B?YTIwNXNrRHVGSmE5VytkU3JmTjBSNDh6N1JzK1ZaS29WK1JzWEtOaDZLaEtu?=
 =?utf-8?B?b0ZlU04rSnpkWkxMNkREczhrZkp5NFBVRkNwSWdlU21ORjNYOGNaRzUxeGhn?=
 =?utf-8?B?WnJnQUtoZGtoc1h6clhzZTNSVStiV2h4UlI3YlpDR2QxbEZoakNtdGdKU2Zk?=
 =?utf-8?B?TmRyRCszQlk2WGl4emFSbkNZUm92L3AyeHpoQUxZZ0ladlZQUGlEQ01WY2sz?=
 =?utf-8?B?S0lUZzk3RUNEYlIydUJReHp4WW5qNTBpaTJrczUvQWYxMTZOd2hQZlpVS0k3?=
 =?utf-8?B?dHdadkxvb2UxRldlY2hvbm5rcDFCWFgwdVRXTW9qdW1EbzlJTFJqVWcwWjRV?=
 =?utf-8?B?KzlKdVR4K0U2MGx4THc0eEVld0ZQNy9URWc4bWwzNi9pSVY4Q1VVSVc2QStH?=
 =?utf-8?B?dDYzVWZnYkxRcUpSR09JNVMva1R0L0F0RU9pWkR6blV0b0g5Si9mVEw0UkdP?=
 =?utf-8?B?dWlvRVhXMjhFdHNsblp0RStGVkJ5bkdZYVd4akJBRmtPeElDNlVsa0FINlNO?=
 =?utf-8?B?WmJ6ZzVrczFhajNEMENZTkMwejhGeVpIbzJYcXYvMnBHWWllWWhxTEY1VVln?=
 =?utf-8?B?NHVseW5FS25tVE1yNzNIU2xvTWZzalRsTGZlRit4MVpVaWlFdGtmUVBScStG?=
 =?utf-8?B?RXBRSUhmZWRDaUtuS1gxRFk0Q2duOUFlYVZ2SVRHRHdlcXl3NmlWV1lJdjVu?=
 =?utf-8?B?ek8wVUVyd2U2NDc2SHJ2UHMrWW9kc2Q5YW42Y3JpVkN4U2Nzb00xcFVWY0wv?=
 =?utf-8?B?dUYxRHdENTlpUkVmWENNQ2o1c1BaL01ReWR2b1M0ZVpVTjdncUV6bEl4bHNZ?=
 =?utf-8?B?Wmgya3lDTXViSnBDcS95NFprR3p2bW9aVUthV2hTbFVuS0Yxc3lvRDdUTml1?=
 =?utf-8?B?Vkdyd3FFRmRjbEJWazBaOGdnaXNPaXpZVktVR081NVl4TkRrRDJHOUZjcklz?=
 =?utf-8?B?RE42LzJvVFhSVjVOaTE4Q3ltWXptbmdvNWdMMkh4OGMrZStQK3VCK2Q3TnRR?=
 =?utf-8?B?TGl4MGFSVzN1L3pQU2hUckgwVUswTTdEWUZLZUxnelN0aS83T3czUkNFOTNK?=
 =?utf-8?B?dUlmN0pyRUkzTFlaUjRFRW5VSU82U0p4dERmZGxueEZNaUtDUjVFTVVEejkr?=
 =?utf-8?B?OWEwM2x2Z0JLOU9RNTJyaVMrRjg5Y05Md0h1RmRqeFVFclpVRXp1SUE2YXFJ?=
 =?utf-8?B?RWRmbEJpdnhmblFVcUlTNmRaUDh3OTJ3aC9NbGtrR1FPLzBDR3FtenEzWkJN?=
 =?utf-8?B?Tit0d2lVcHpQem9xdmZtczR6bDlIcmcvZFkzamhUQVR0S1J1dCtLUVl5cjYx?=
 =?utf-8?B?WHB4bzNSZnhzTk1tUlBaYm1vVEF3RFlCUUFzVnZCMG51dWVBalJZN3dtakIw?=
 =?utf-8?B?bEZSU1pnVFQzcGNpQ0hSS3U4bFIvT1BKeDhWeDFWbDJrYlBKYlY1cHJJMTg2?=
 =?utf-8?B?TWZpWHZDd3A3RFE2WkdqTnVQSmN4Ym5lRUNuNlpxczE0djdxVTRSQjlZOEtQ?=
 =?utf-8?Q?LG2uHG1UpIhjocSCW0fz5Pyk8VhPgM/zg1Yh+T4ST63p?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 1bf58b6d-1f0e-4b12-fcda-08db3d28ae94
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 14 Apr 2023 20:41:54.3958
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: Lc4t6sWQrQhZV0EZEqc5ogsLsFmD1jncqSiT8wwqHR9AQ9MlRtD8FZ/evCZXcJBV/NF8500KrrccATWG/4hp0Q==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA0PR12MB7073
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Thanks Sathya.

On 3/23/23 17:26, Sathyanarayanan Kuppuswamy wrote:
> Reviewed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>

