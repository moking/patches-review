From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (mail-dm6nam12on2045.outbound.protection.outlook.com [40.107.243.45])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A94B3D530
	for <linux-kernel@vger.kernel.org>; Fri, 14 Mar 2025 01:57:14 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.243.45
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1741917436; cv=fail; b=OJSQh7nbSQ3H+JzUnHJ9Ft10EBCeMM47B0PZemH1tSfU9Uh1A7lbJAKkc//YOZFO9NRk0IT0ssBrOjOwdlcKVI8lhVG5jxlZ86u4ihideuCJOjyb/dNG6Za8qf4yUTp66/g+4pxNvgpei74RiHJh1h8aJka4P3jZKMZRixNvHmw=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1741917436; c=relaxed/simple;
	bh=sqXsNOjjpChZrQS2qPuavLACDzA5ycoj7VEaZ6+BYX8=;
	h=Message-ID:Date:Subject:To:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=N/xpMl3wzsn17XutJt7e0QAxlX4dwZFXPOTDgRadGR6yV3KXY90CvZOUN+S4olpSv71pF1TKZA+cPjXtBB996TkaGD7qgzCwDGa1VTaPi6R8239wcgHr8uBMo39MLWF7P/g2yR7vWn+aRKlX0rzWVIe/XNOipVOxsO99d4z6PWA=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=kdqgE2Yq; arc=fail smtp.client-ip=40.107.243.45
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="kdqgE2Yq"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=W2I5xyY0g8ag9+85Zy6hPQkMH5tCa6LL2VkRJcyn0lE+AOX1Ou0GV5o3uHcOHczczzdnd9zSa2v29CaiBiDNRLbnvRWbJQBWiMrwjOFx65ZrgyVnhXAJt8jwvSu0SLeaVNEgsXjFCRpd+Y5y7wucsnCnBj5Vo4Upvvd5V0bZFuUYyx0e8KSnl83Ltu3Yhw3vj7r28b/cBEpoPnS9f7yiL5uW6E97Mf0d9bumebyxC3eHCfs2fYS9S61lbQmhg/F3XarwknL41+Vbf7iVpJ5UdX/vsZxOOh7AcSqiyrnS6tNZp3+91MpCL7D/TFHt0UcI4s3At1wgleW+QZk8MiD9Tg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=fY3zY3qIkwfFSdjci+DQOSrxS5bj++W1tdGaHd9SAQk=;
 b=xQ4f4pxBhqYOmIDnV1tAAx8bRsZ+sf3ZgqM+65neN0AKe20WYIB04yshaxuqJIoik42eff2pcKCW2YRexIQ5D3LVk59KyuoxSZ9ucAPCbjsgsqHRifnGnflg6YQCY/wILKSd3N841ffkSn0jFPoe22NAdZgUqVGiSWdWtFgKCDHhdrNG0PROE3qs6C9qY/OIYl9vQgStexPEzjacqtIRg7WxO093nbOsYR6L02isjRKbWYCs85fS3KFKDjyVsD71YZkxz1V2rLPCJuvTehHSwsxQJ/DJ/AFQynn7zlS+jCVqsrdlUeQRP0eXas8q12cGnykhQCu4h8mRSY6KAIdEwg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=fY3zY3qIkwfFSdjci+DQOSrxS5bj++W1tdGaHd9SAQk=;
 b=kdqgE2YqBciW6NoXAc4T3P3+J+cMgrGOlxhs+qXu6MjOHZvJ2TmMA03QtUfuEOpnVw3LoOC3VLu8pQ9FWV5NQ2Wktymdoy1vq/0bM9m5TCTUnCWFT93y7xlQZPgn1kMdBjuALK4yNz3gl9Nv8c1lmxi6HLgxDSq3mGrJTtwO4sg=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from PH7PR12MB5805.namprd12.prod.outlook.com (2603:10b6:510:1d1::13)
 by PH7PR12MB6811.namprd12.prod.outlook.com (2603:10b6:510:1b5::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8511.27; Fri, 14 Mar
 2025 01:57:11 +0000
Received: from PH7PR12MB5805.namprd12.prod.outlook.com
 ([fe80::11c7:4914:62f4:f4a3]) by PH7PR12MB5805.namprd12.prod.outlook.com
 ([fe80::11c7:4914:62f4:f4a3%3]) with mapi id 15.20.8511.026; Fri, 14 Mar 2025
 01:57:11 +0000
Message-ID: <56872982-8676-4d65-85ef-b894728db18b@amd.com>
Date: Fri, 14 Mar 2025 07:26:55 +0530
User-Agent: Mozilla Thunderbird
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
To: "Huang, Ying" <ying.huang@linux.alibaba.com>, linux-mm@kvack.org,
 akpm@linux-foundation.org, lsf-pc@lists.linux-foundation.org,
 bharata@amd.com, gourry@gourry.net, nehagholkar@meta.com,
 abhishekd@meta.com, nphamcs@gmail.com, hannes@cmpxchg.org,
 feng.tang@intel.com, kbusch@meta.com, Hasan.Maruf@amd.com, sj@kernel.org,
 david@redhat.com, willy@infradead.org, k.shutemov@gmail.com,
 mgorman@techsingularity.net, vbabka@suse.cz, hughd@google.com,
 rientjes@google.com, shy828301@gmail.com, liam.howlett@oracle.com,
 peterz@infradead.org, mingo@redhat.com, nadav.amit@gmail.com,
 shivankg@amd.com, ziy@nvidia.com, jhubbard@nvidia.com,
 AneeshKumar.KizhakeVeetil@arm.com, linux-kernel@vger.kernel.org,
 jon.grimm@amd.com, santosh.shukla@amd.com, Michael.Day@amd.com,
 riel@surriel.com, weixugc@google.com, leesuyeon0506@gmail.com,
 honggyu.kim@sk.com, leillc@google.com, kmanaouil.dev@gmail.com,
 rppt@kernel.org, dave.hansen@intel.com, dongjoo.linux.dev@gmail.com
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <87o6zub978.fsf@DESKTOP-5N7EMDA> <20250207190651.hpmkzl4f2zynqiun@offworld>
Content-Language: en-US
From: Raghavendra K T <raghavendra.kt@amd.com>
In-Reply-To: <20250207190651.hpmkzl4f2zynqiun@offworld>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit
X-ClientProxiedBy: PN3PR01CA0015.INDPRD01.PROD.OUTLOOK.COM
 (2603:1096:c01:95::19) To PH7PR12MB5805.namprd12.prod.outlook.com
 (2603:10b6:510:1d1::13)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH7PR12MB5805:EE_|PH7PR12MB6811:EE_
X-MS-Office365-Filtering-Correlation-Id: 74608381-f98e-46f9-172d-08dd629b88e0
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|376014|7416014|366016|1800799024|921020;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?WVM4WUZyQ3R4VUFBd2Yvc2ZFdGtGR2FyUnBVM0ZvSEo1aGM1OURsMmtjNWl1?=
 =?utf-8?B?VkNWbmQ4aVlGTkVNZWN5ejVDU2twdUI1cTRIbGdRSDNWblRiZmwyelVpQUVi?=
 =?utf-8?B?ZmJlbzFPZmlTaXRQQTE2YkRHbVVESFg3SG1mQS9wTURNOTZlMWJZWk9MZCsw?=
 =?utf-8?B?SVJneWZRRUhZWW1BQjdJTWxtbUNtNGYzU1hzTlhBdmR4K2JzRzh2eW1zdElv?=
 =?utf-8?B?SmhhNnpFYk1wUlZVK2xtYVBNRXJCbmRRaGZZdTJmOGFkR0ozUjkwd0diR2Fs?=
 =?utf-8?B?TXNIZHcvNktSak5Kb2IyN29yTnFhT2F0RklNVzYyM2ROR01OdE40Q1oxQVg0?=
 =?utf-8?B?L281UlM1VnRWWnJ6R0ZvcWtLSm4zeWlMMHVHbVVmQ3d3UlBrWmdQekRrb28y?=
 =?utf-8?B?c1E2SW9udjFCU3Q2aWVHOTZ5VW8wUWd1ZkFEcWdoa09hUDlqQWFLSHN5cWla?=
 =?utf-8?B?UC9ROVlSN01MMW92dzBtMGF2U0U2SERLOHQ2aVBpUTNnVE5USWZDbE1SclpG?=
 =?utf-8?B?NlRZcDkvOURZY2lObmxWTXlic1VGcXFVVjhUM0JRWnc1RlFqdmpFbjB2TU5I?=
 =?utf-8?B?UnpUVzk4NUl5Qy9ValpaTXp4U0NRSFRhTGUza0VISnZ0dXVNYmdSR2swK0tK?=
 =?utf-8?B?WnZjN1hUVm16Ym94dHlZWE1iZXJlTWxnREc2a1prcS9ocHJ3N2U1blRzaVI5?=
 =?utf-8?B?b0lGZURWcmwvcnBzRVFnQnZzL0NlMDJIQ3dNaWVFc3VpZ3I3ZUJ0U0FmV3Mx?=
 =?utf-8?B?ZEtPaVI4S2VyQkNEUTdiMStXQ2tyeWZGVWlvcDR4UzlBWFhpOGxVVnNaZ3hv?=
 =?utf-8?B?NGtvSWpLNTg1dTFDZUhpa3lrZllJWFFvTWJkMjlqYS93SllOWHVxZ0hPSk1D?=
 =?utf-8?B?SHF2UGN4bUNwNm5qMktzazlVaWM5aG5PQnlXaHptekpQR05xZGVJSjErWmNy?=
 =?utf-8?B?R0dBb1VZazVFYVM5ZGs2a3pnRFlub0lnbWxsa0plV3N0RUdKSVAxZ2t2RkVk?=
 =?utf-8?B?VVROSDAxQWVxR08vaU15dXlnQnpnTVA2SEZSck4wQ2tjMjNSN1ljMWU4RHAr?=
 =?utf-8?B?b21uT1Z0MVlCTUdVMFo0MlJVL3kvVTNwSlRXSjBPcUF4c2RGa0FUSVQxdTNC?=
 =?utf-8?B?RDhyZElCdVNQOGdYVjVNalI1aHpZekRGSmZXMFFseUlXaEVNTmZLNFhaU2FJ?=
 =?utf-8?B?RERTS3RkeHZFQ3R3K21kTjdYeDdLZ0xIY0tjMncwUDFPWmx4QWpTdU56YUZX?=
 =?utf-8?B?bEhUK1JVdXNlZVUwTWx6UzBVNHJsdlk5WjVLRnhxbm5oeEFxckxteDk0RXRa?=
 =?utf-8?B?Rmk2T2pmRWZka2ZZc2VkUkcwUU1xUytEVnJSbHMzSU0zUDQxMUw5WVRXb2wv?=
 =?utf-8?B?emVCYjl1SWQ4cXFZRlc4MzVtc1piVnpvSFg5LzJzODIzTDF4MXlWMkN2amRy?=
 =?utf-8?B?Y3hYNmhuNE5rYjQvMUJZUkRuTUlYVEpRUFk5SlZGWUdDUy96U3l3alkwNnlw?=
 =?utf-8?B?QzhKM05JN0hZL0s1dTl5OFRIUGRhSFQ3T2toRmJWUmluYnl1anZQUzd6b2Vr?=
 =?utf-8?B?VUVmMnVIRnN5QmJVV3FNa25ra2hzUlZoT3JFM2hjS21NMFBnZnhMdjExV2xJ?=
 =?utf-8?B?OU4yLzdLZ21MYnVhVldMZFpVNzU3cHpEM21NdG9CVzB1Zi93Q1BwLzR1ZDg2?=
 =?utf-8?B?eFhSWlFLd2FBaDd3bllWSTdJTUNLRG5ZQ0pIcnhLMm85Um85aUJ1QTV4NlBY?=
 =?utf-8?B?enFRaTRqZ1lobm1FT1QydCtqOWN4akFPZlhlZHFZemY1S0NBdXQ5bUpqd3ds?=
 =?utf-8?B?cTI5Zm5uNmNrZ1pnVktvS0hRNlk4eVVZSTlqUmdhSlRldGRldHBGVGpKZDJ5?=
 =?utf-8?Q?aYnI9PcEEJEF9?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH7PR12MB5805.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(376014)(7416014)(366016)(1800799024)(921020);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?UTZxaHlGTkdiQWVpNyttUGpYZHNqQkpyZDJPYnF4d0NrYzM3OXJORE4vU2Rz?=
 =?utf-8?B?ZkdjbVB0YTg4QW9aZnhFeFhDTVQ0Z2h0MElOck9hMDVKTXFIaTZ1QUlSc00w?=
 =?utf-8?B?YWxvRXJvR0ZwQUkyWGl0TmJtck4yZ3M2L1BzNTVYUHVYdE9nbm54ZlZ6M1Ez?=
 =?utf-8?B?N3dmZGMrZ0JtaFk0cTQxZXJVVG5SZ1lzRGZYaVFkQTJhTExQdXJuNG0zSjJu?=
 =?utf-8?B?ZE1QU0ZEck0xVUlWWHhIUDFhN0wvMGZDaUIzVTNXSU0xUUp2Y202N3hlcG1U?=
 =?utf-8?B?eWcxUDdCZ2hSUzlUSjJFTFFUMFByN0FJRTBaOWcrZkx1QlBSdksyeHhvWVcr?=
 =?utf-8?B?QWVlNE50YS90b1F2V3hQMUN4bnRkTGZHdk9jYS9FYjNOajh5ZjQzMklsTmd1?=
 =?utf-8?B?dG9PWU9uMGkzVXd3L2lkbzI1Vk1PYWFudnFlNTRhR1RvdjYrMGk1WFFGRjVZ?=
 =?utf-8?B?S0xwOXVVSHhhWVlyd2lqb2NsbDhKNEhNbVI0ZEo4YzhyNkhXR21SbFlNWTQr?=
 =?utf-8?B?bFFkSFFYdFBtMDBNVDJSQUxSNTJldE5BKzljSE01eDhNV3RqSldxWTU2SkZm?=
 =?utf-8?B?UFZyd1RCOVh4YUtrVFVwVDJLclI1SG54ZEpHcVIxekVCZXlNVTBPQ0dyZ0px?=
 =?utf-8?B?U0hXK0RYeUpITm9jTUZld3dEbWMwMklFVmlxWWZxYXVHVStwQ2FGRFdWMzI4?=
 =?utf-8?B?S3g3VlJnQm9kaXZ5WTZhMGpobVd5L2NGSkx1VHpwN0NWK0twbnVENWJrbkZx?=
 =?utf-8?B?a2JSK2s2Q3hhVk1DVmlDNEwwdnI2L3BnQ0xCTTdGcW9rbzc5aGtnUDMvZlFx?=
 =?utf-8?B?aTlmQnNBNTFFN2NZRy9EdGNhUUhENGwrZVpTSUd6Z2s5RlFBWFJabWl4RHg5?=
 =?utf-8?B?MHBQTWMzMWZaZ3RWek84TGJ1ZWpHZWxXb0NuRXVBT25RR0duUXQvUDhDQ2dB?=
 =?utf-8?B?YUR5OFJSZXNIR0RsMXZxcVhHcDFQTzNiY1JkdWV4c2lDZGxMNkdRWXBvYjNK?=
 =?utf-8?B?Wi9JQWRCeEcrOHA5TnVkNlFpdXdkYW9FNTNHR2hoTVdkbSthcWpURHFuS3pa?=
 =?utf-8?B?d3U0by8yL0RBK0Nha1ExZzVUVWpHbFh0SDJCdVhzUi9aRzdiWmJCS1JVMkFy?=
 =?utf-8?B?Skk5dWZNS3dibUNVMEtlRnJ2T1hkekwwZTNJOU51alZWSzRyZngvQnRTY1Ja?=
 =?utf-8?B?THppMkl6N203MVdhSjhTM2FIbWFHdlU3MXNaUnpzUjdGZmtnUUZiT0xwTkhQ?=
 =?utf-8?B?TG1mUUxhTW1JcGoxcnIvbHdodXBRa0tEQjFaRUltakw4Q2M5ZkNDNXpSNUtx?=
 =?utf-8?B?UzFFSWxqRjNHSEZ6TFdpTG80ZGxRQ2JudFA0V2lQTW1rUW1OZDZjQ01zbnFt?=
 =?utf-8?B?a3poTmdNOFZGdGNaVDhJTUt2Rk9WTThPcTY5eWF1Z3FscHFudHc3SlViQUJM?=
 =?utf-8?B?ZnlnaGF6bks4WjhhZmpNdmtQVzRDNUtwNkxQZGVPVTFCcnBEYzMzWHpCVll3?=
 =?utf-8?B?aTFzWVpYNWNZSEtmZ2JHMlJHdk03L2g4a3JIT0xSWUhsTSsrRmpoc3dldFE5?=
 =?utf-8?B?VmpRelVlK3FsNjJEaGJQNzF3TUh5aFc1YXdoblZseEozb3c2WGpSQW9PaVhU?=
 =?utf-8?B?a1lqdWlJbkRJT1AvL0w0SEFBYVhoTEJSbitBbUp0MmhZWFJ5S2xVZHNiZTlM?=
 =?utf-8?B?SXkzOHVCWGNVR0cyYmd5NGwvcGJIL211V0JGalc4MG1jbTZpRXBwQllwaWNn?=
 =?utf-8?B?QmU5cG9QS0JhZ3UyN3h3cE1jV1REdFhJaXBUbXF6aGRrU2JMZCtvSlVUeDF1?=
 =?utf-8?B?QlFib1kxb1hmcWQyaHNmZktneU4vR0IwdmdlUjlMT0JWcDN3RzhzcDBGTWNP?=
 =?utf-8?B?TDVrNXpFM1FxVGNuMUplVXJXR20vc05wZnJ0SmdJelhMRTFJOE9DSHAyVEdJ?=
 =?utf-8?B?SCt0ck1QMDIyditYR29GR21Cb25udWd4Vi83WGZGQVpoQ0o3dDNhcDNrb0k2?=
 =?utf-8?B?dDFNYzZyaGQwbmNBbXNKUG5MelRyVGN6TnNFcEREc0FIcHRvU2tET0VLNGxT?=
 =?utf-8?B?U1RaeU9sV3VWSk1IMEVKdzlDUGtKaXdsZHRRUHhKT3R1WEtsdmhaZm9SOEpi?=
 =?utf-8?Q?N5Zc761Z98xvbBpWRdvuixgGH?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 74608381-f98e-46f9-172d-08dd629b88e0
X-MS-Exchange-CrossTenant-AuthSource: PH7PR12MB5805.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 14 Mar 2025 01:57:11.6632
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: +91B/29HX2lisUfJ1pZqnIVdx2tDIQ7ZrvsXArfpAF2bSB+4AR5O7XvX9Zh8acAkt7aM7uDgcY/6z/lqQozY+g==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH7PR12MB6811



On 2/8/2025 12:36 AM, Davidlohr Bueso wrote:
> On Sun, 26 Jan 2025, Huang, Ying wrote:
> 
>> Hi, Raghavendra,
>>
>> Raghavendra K T <raghavendra.kt@amd.com> writes:
>>
>>> Bharata and I would like to propose the following topic for LSFMM.
>>>
>>> Topic: Overhauling hot page detection and promotion based on PTE A 
>>> bit scanning.
>>>
>>> In the Linux kernel, hot page information can potentially be obtained 
>>> from
>>> multiple sources:
>>>
>>> a. PROT_NONE faults (NUMA balancing)
>>> b. PTE Access bit (LRU scanning)
>>> c. Hardware provided page hotness info (like AMD IBS)
>>>
>>> This information is further used to migrate (or promote) pages from 
>>> slow memory
>>> tier to top tier to increase performance.
>>>
>>> In the current hot page promotion mechanism, all the activities 
>>> including the
>>> process address space scanning, NUMA hint fault handling and page 
>>> migration are
>>> performed in the process context. i.e., scanning overhead is borne by 
>>> the
>>> applications.
>>>
>>> I had recently posted a patch [1] to improve this in the context of 
>>> slow-tier
>>> page promotion. Here, Scanning is done by a global kernel thread 
>>> which routinely
>>> scans all the processes' address spaces and checks for accesses by 
>>> reading the
>>> PTE A bit. The hot pages thus identified are maintained in list and 
>>> subsequently
>>> are promoted to a default top-tier node. Thus, the approach pushes 
>>> overhead of
>>> scanning, NUMA hint faults and migrations off from process context.
> 
> It seems that overall having a global view of hot memory is where folks 
> are leaning
> towards. In the past we have discussed an external thread to harvest 
> information
> from different sources and do the corresponding migration. I think your 
> work is a
> step in this direction (and shows promising numbers), but I'm not sure 
> if it should
> be doing the scanning part, as opposed to just receive the information 
> and migrate
> (according to some policy based on a wider system view of what is hot; 
> ie: what CHMU
> says is hot might not be so hot to the rest of the system, or as is 
> pointed out
> below, workload based, as priorities).
> 
>>
>> This has been discussed before too.  For example, in the following thread
>>
>> https://lore.kernel.org/ 
>> all/20200417100633.GU20730@hirez.programming.kicks-ass.net/T/
>>
>> The drawbacks of asynchronous scanning including
>>
>> - The CPU cycles used are not charged properly
>>
>> - There may be no idle CPU cycles to use
>>
>> - The scanning CPU may be not near the workload CPUs enough
> 
> One approach we experimented with was doing only the page migration 
> asynchronously,
> leaving the scanning to the task context, which also knows the dest numa 
> node.
> Results showed that page fault latencies were reduced without affecting 
> benchmark
> performance. Of course busy systems are an issue, as the window between 
> servicing
> the fault and actually making it available to the user in fast memory is 
> enlarged.
> 
>> It's better to involve Mel and Peter in the discussion for this.
>>
>>> The topic was presented in the MM alignment session hosted by David 
>>> Rientjes [2].
>>> The topic also finds a mention in S J Park's LSFMM proposal [3].
>>>
>>> Here is the list of potential discussion points:
>>> 1. Other improvements and enhancements to PTE A bit scanning 
>>> approach. Use of
>>> multiple kernel threads, throttling improvements, promotion policies, 
>>> per-process
>>> opt-in via prctl, virtual vs physical address based scanning, tuning 
>>> hot page
>>> detection algorithm etc.
>>
>> One drawback of physical address based scanning is that it's hard to
>> apply some workload specific policy.  For example, if a low priority
>> workload has many relatively hot pages, while a high priority workload
>> has many relative warm (not so hot) pages.  We need to promote the warm
>> pages in the high priority workload, while physcial address based
>> scanning may report the hot pages in the low priority workload.  Right?
>>
>>> 2. Possibility of maintaining single source of truth for page hotness 
>>> that would
>>> maintain hot page information from multiple sources and let other 
>>> sub-systems
>>> use that info.
>>>
>>> 3. Discuss how hardware provided hotness info (like AMD IBS) can 
>>> further aid
>>> promotion. Bharata had posted an RFC [4] on this a while back.
>>>
>>> 4. Overlap with DAMON and potential reuse.
>>>
>>> Links:
>>>
>>> [1] https://lore.kernel.org/all/20241201153818.2633616-1- 
>>> raghavendra.kt@amd.com/
>>> [2] https://lore.kernel.org/linux- 
>>> mm/20241226012833.rmmbkws4wdhzdht6@ed.ac.uk/T/
>>> [3] https://lore.kernel.org/lkml/Z4XUoWlU-UgRik18@gourry-fedora- 
>>> PF4VCD3F/T/
>>> [4] https://lore.kernel.org/lkml/20230208073533.715-2-bharata@amd.com/


Hello All,
Sorry to comeback late on this. But after "Unifying source of page
temperature discussion",
I was trying to get one step closer towards that. (along with Bharata).
(also sometime spent on failed muti-threaded scanning that perhaps needs
more time if it is needed).

I am posting a single patch which is still in "raw" state (as reply to
this email). I will cleanup, split the patch and post early next week.

Sending this so to have a gist of what is coming atleast before LSFMM.

So here are the list of implemented feedback that we can build further
(depending on the consensus).

1. Scanning and migration is separated. A separate migration thread is
created.

Potential improvements that can be done here:
  - Have one instance of migration thread per node.
  - API to accept hot pages for promotion from different sources
	(for e.g., IBS / LRU as Bharata already mentioned)
  - Controlling throttling similar to what Huang has done in NUMAB=2 case
  - Take both PFN and folio as argument for migration
  - Make use of batch migration enhancements
  - usage of per mm migration list to have a easy lookup and control
(using  mmslot, This also helps build upon identifying actual hot pages 
(2 subsequent access) than single access.)

2. Implemented David's (Rientjes) suggestion of having a prctl approach.
Currently prctl values can range from 0..10.
	0 is for disabling
	>1 for enabling. But in the future idea is to use this as controlling 
scan rate further.

3. Steves' comment on tracing incorporated

4. Davidlohr's reported issue on the path series is fixed

5. Very importantly,
I do have a basic algorithm that detects "target node for migration"
which was the main pain point for PTE A bit scanning.

Algorithm:
As part of our scanning we are doing, scan of top tier pages also.
During the scan, How many pages
    - scanned/accessed that belongs to particular toptier/slowtier node
is also recorded.
Currently my algorithm chooses the toptier node that had the maximum
pages scanned.

But we can really build complex algorithm using scanned/accessed recently.
(for e.g. decay last scanned/accessed info, if current topteir node
becomes nearly becomes full find next preferred node, thus using
nodemask/or preferred list instead of single node etc).

Potential improvements on scanning part can be use of complex data 
structures to maintain area of hotpages similar to what DAMON is doing
or reuse some infrastructure from DAMON.

Thanks and Regards
- Raghu



From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from poodle.tulip.relay.mailchannels.net (poodle.tulip.relay.mailchannels.net [23.83.218.249])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 6210023C8B4
	for <linux-kernel@vger.kernel.org>; Fri,  7 Feb 2025 19:06:58 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=pass smtp.client-ip=23.83.218.249
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738955220; cv=pass; b=O4WcV+SuRn3TqTClPEqcJPkEnoM1cY6lCBf+nv2FZAbEtpAM63dEHo7esa0nAFRypL5l2DRdNJ6zwKe6DPTWVvqgklfHNdAqsaJ+0UJIsuv/zNfzQGOyBwzQutvKMf00EVBQa3rzHBYf+cslA09gTOjz1EObtF4+kxrtMP9VERo=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738955220; c=relaxed/simple;
	bh=lO8OUsKRIjUnAPdlIj7AK58m+QTgg+zlZphQ6a3JjVc=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=cawnM6qma+Lo+kcOTNAat4o1mxKJcG4flA8xSStjIoqTsrptNjCNHJ6PEwyVN+r8IfJ/6fTVh7yUzppkc9aypN6IrZcgr122hKkuNCyMcpIGRM9IldfLemyBXIpCRaQi1EB+WCnDQ2chcP1bZ1/5hp4yGsb2+mVOXfO8Lvbu/jk=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=stgolabs.net; spf=pass smtp.mailfrom=stgolabs.net; dkim=pass (2048-bit key) header.d=stgolabs.net header.i=@stgolabs.net header.b=ZmoBmPJr; arc=pass smtp.client-ip=23.83.218.249
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=stgolabs.net
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=stgolabs.net
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=stgolabs.net header.i=@stgolabs.net header.b="ZmoBmPJr"
X-Sender-Id: dreamhost|x-authsender|dave@stgolabs.net
Received: from relay.mailchannels.net (localhost [127.0.0.1])
	by relay.mailchannels.net (Postfix) with ESMTP id A8A7C1A4B5A;
	Fri,  7 Feb 2025 19:06:57 +0000 (UTC)
Received: from pdx1-sub0-mail-a311.dreamhost.com (100-126-221-226.trex-nlb.outbound.svc.cluster.local [100.126.221.226])
	(Authenticated sender: dreamhost)
	by relay.mailchannels.net (Postfix) with ESMTPA id B1B081A47BD;
	Fri,  7 Feb 2025 19:06:56 +0000 (UTC)
ARC-Seal: i=1; s=arc-2022; d=mailchannels.net; t=1738955217; a=rsa-sha256;
	cv=none;
	b=A5oFwym0jFAjufwIThzNbtzS+inIi7thY853ikaqVdrd6tGGm9Q1hA2z0DOQkuKz3pPfHm
	X7rPHWx1K4FFCgZdqUIV+w74SzFPQ785c0g6nCV/ypu3+Fy3JfetieFSPSEELVxHuK5rmt
	fA8XIaPdYzsNsfDoLYsmJ8o1M8s1pBG8sjs3SQqBx3Iqn9U1KPTxe/mFy0Uco8ObtKuMNp
	sCQ9+3Yvof8kPt/M38xcyF/yqgbg8kRCMUpr3eNmZWDJXYQ/p22NFlnfmhYcI5PaASTzcu
	kajfc7mBcZP1ks/I8CZsL1XvPYH8P/siC7jraUcXOiQ9y7ZjdwFcGQA0upV+Ag==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
 d=mailchannels.net;
	s=arc-2022; t=1738955217;
	h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
	 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
	 content-transfer-encoding:content-transfer-encoding:
	 in-reply-to:in-reply-to:references:references:dkim-signature;
	bh=y9ZVzTIynyCcvuECIWXnJaYZt7TfAR7IJxQ+MS6iWgs=;
	b=OqrnNmKXebMJRj3YP94DADgc7xkzZomWlQNjTj4NCFZZOls0kWbF1WGnvi+AZm7iQeGqHW
	GWhOY2PQiUIWS/wISdiJJ5cYRNKfAqRQerEnn6ZvK0oL5hd+ND6p6bwJDxRHVfiKH+fPIj
	qLRJFCDAPy74XBiUCCMp+V6VfLmO2EqAvMTh+I/KLwQnBbsW8gipoc+/0UiE/30pNdt3ZX
	58+jKb0ZBrJFagGMOd5pf08ynSbrn+rqR+EHD9kGhypKG7q+eq4p5t/vvBWArRKQ58V7b0
	oqzlub4DaYiGca+k1Ha5qBy6w5RA8y8AcNAzftP3EcxZsDg0W5pYgdP5Nh+pFA==
ARC-Authentication-Results: i=1;
	rspamd-587f8d7697-l5xwh;
	auth=pass smtp.auth=dreamhost smtp.mailfrom=dave@stgolabs.net
X-Sender-Id: dreamhost|x-authsender|dave@stgolabs.net
X-MC-Relay: Neutral
X-MailChannels-SenderId: dreamhost|x-authsender|dave@stgolabs.net
X-MailChannels-Auth-Id: dreamhost
X-Abiding-Thread: 0792cc8c59fd190c_1738955217544_2368620000
X-MC-Loop-Signature: 1738955217544:1337459757
X-MC-Ingress-Time: 1738955217544
Received: from pdx1-sub0-mail-a311.dreamhost.com (pop.dreamhost.com
 [64.90.62.162])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384)
	by 100.126.221.226 (trex/7.0.2);
	Fri, 07 Feb 2025 19:06:57 +0000
Received: from offworld (ip72-199-50-187.sd.sd.cox.net [72.199.50.187])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
	 key-exchange ECDHE (P-256) server-signature RSA-PSS (2048 bits) server-digest SHA256)
	(No client certificate requested)
	(Authenticated sender: dave@stgolabs.net)
	by pdx1-sub0-mail-a311.dreamhost.com (Postfix) with ESMTPSA id 4YqNkQ1z7Zz3S;
	Fri,  7 Feb 2025 11:06:54 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=stgolabs.net;
	s=dreamhost; t=1738955216;
	bh=y9ZVzTIynyCcvuECIWXnJaYZt7TfAR7IJxQ+MS6iWgs=;
	h=Date:From:To:Cc:Subject:Content-Type:Content-Transfer-Encoding;
	b=ZmoBmPJr6WiGEqM7Ytf0dHTIIIECi4KJcPDCCqy1KJFfMqiLz7kr48IJESUsfQ51l
	 EGncwPjMwwKcx82E6APWX81vCo4qmzT8QJ/ThIJmKTi+Y7XZBLuXOJTkN3kr2mPsns
	 iwkYBQWn/Cov9lPHccIXYAy2PKtPrlkE/Jj72xsogo3SLaOXLpN7KCf+bJtj3WWBSz
	 Fp+Q/H1k8b9rwcToguoL6SdE1zoDZDdcIv2y9FqY88W9NT1cGTJjLgDu3Cdg4xSouP
	 +njISAkRn+eFQXtce1m5CH+fY78toitk5jc1aUUnrHEMCO+Ph99X97IRfLGuaG8z1U
	 VoOLqAZweLuIw==
Date: Fri, 7 Feb 2025 11:06:51 -0800
From: Davidlohr Bueso <dave@stgolabs.net>
To: "Huang, Ying" <ying.huang@linux.alibaba.com>
Cc: Raghavendra K T <raghavendra.kt@amd.com>, linux-mm@kvack.org,
	akpm@linux-foundation.org, lsf-pc@lists.linux-foundation.org,
	bharata@amd.com, gourry@gourry.net, nehagholkar@meta.com,
	abhishekd@meta.com, nphamcs@gmail.com, hannes@cmpxchg.org,
	feng.tang@intel.com, kbusch@meta.com, Hasan.Maruf@amd.com,
	sj@kernel.org, david@redhat.com, willy@infradead.org,
	k.shutemov@gmail.com, mgorman@techsingularity.net, vbabka@suse.cz,
	hughd@google.com, rientjes@google.com, shy828301@gmail.com,
	liam.howlett@oracle.com, peterz@infradead.org, mingo@redhat.com,
	nadav.amit@gmail.com, shivankg@amd.com, ziy@nvidia.com,
	jhubbard@nvidia.com, AneeshKumar.KizhakeVeetil@arm.com,
	linux-kernel@vger.kernel.org, jon.grimm@amd.com,
	santosh.shukla@amd.com, Michael.Day@amd.com, riel@surriel.com,
	weixugc@google.com, leesuyeon0506@gmail.com, honggyu.kim@sk.com,
	leillc@google.com, kmanaouil.dev@gmail.com, rppt@kernel.org,
	dave.hansen@intel.com, dongjoo.linux.dev@gmail.com
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
Message-ID: <20250207190651.hpmkzl4f2zynqiun@offworld>
Mail-Followup-To: "Huang, Ying" <ying.huang@linux.alibaba.com>,
	Raghavendra K T <raghavendra.kt@amd.com>, linux-mm@kvack.org,
	akpm@linux-foundation.org, lsf-pc@lists.linux-foundation.org,
	bharata@amd.com, gourry@gourry.net, nehagholkar@meta.com,
	abhishekd@meta.com, nphamcs@gmail.com, hannes@cmpxchg.org,
	feng.tang@intel.com, kbusch@meta.com, Hasan.Maruf@amd.com,
	sj@kernel.org, david@redhat.com, willy@infradead.org,
	k.shutemov@gmail.com, mgorman@techsingularity.net, vbabka@suse.cz,
	hughd@google.com, rientjes@google.com, shy828301@gmail.com,
	liam.howlett@oracle.com, peterz@infradead.org, mingo@redhat.com,
	nadav.amit@gmail.com, shivankg@amd.com, ziy@nvidia.com,
	jhubbard@nvidia.com, AneeshKumar.KizhakeVeetil@arm.com,
	linux-kernel@vger.kernel.org, jon.grimm@amd.com,
	santosh.shukla@amd.com, Michael.Day@amd.com, riel@surriel.com,
	weixugc@google.com, leesuyeon0506@gmail.com, honggyu.kim@sk.com,
	leillc@google.com, kmanaouil.dev@gmail.com, rppt@kernel.org,
	dave.hansen@intel.com, dongjoo.linux.dev@gmail.com
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <87o6zub978.fsf@DESKTOP-5N7EMDA>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable
In-Reply-To: <87o6zub978.fsf@DESKTOP-5N7EMDA>
User-Agent: NeoMutt/20220429

On Sun, 26 Jan 2025, Huang, Ying wrote:

>Hi, Raghavendra,
>
>Raghavendra K T <raghavendra.kt@amd.com> writes:
>
>> Bharata and I would like to propose the following topic for LSFMM.
>>
>> Topic: Overhauling hot page detection and promotion based on PTE A bit s=
canning.
>>
>> In the Linux kernel, hot page information can potentially be obtained fr=
om
>> multiple sources:
>>
>> a. PROT_NONE faults (NUMA balancing)
>> b. PTE Access bit (LRU scanning)
>> c. Hardware provided page hotness info (like AMD IBS)
>>
>> This information is further used to migrate (or promote) pages from slow=
 memory
>> tier to top tier to increase performance.
>>
>> In the current hot page promotion mechanism, all the activities includin=
g the
>> process address space scanning, NUMA hint fault handling and page migrat=
ion are
>> performed in the process context. i.e., scanning overhead is borne by the
>> applications.
>>
>> I had recently posted a patch [1] to improve this in the context of slow=
-tier
>> page promotion. Here, Scanning is done by a global kernel thread which r=
outinely
>> scans all the processes' address spaces and checks for accesses by readi=
ng the
>> PTE A bit. The hot pages thus identified are maintained in list and subs=
equently
>> are promoted to a default top-tier node. Thus, the approach pushes overh=
ead of
>> scanning, NUMA hint faults and migrations off from process context.

It seems that overall having a global view of hot memory is where folks are=
 leaning
towards. In the past we have discussed an external thread to harvest inform=
ation
=66rom different sources and do the corresponding migration. I think your w=
ork is a
step in this direction (and shows promising numbers), but I'm not sure if i=
t should
be doing the scanning part, as opposed to just receive the information and =
migrate
(according to some policy based on a wider system view of what is hot; ie: =
what CHMU
says is hot might not be so hot to the rest of the system, or as is pointed=
 out
below, workload based, as priorities).

>
>This has been discussed before too.  For example, in the following thread
>
>https://lore.kernel.org/all/20200417100633.GU20730@hirez.programming.kicks=
-ass.net/T/
>
>The drawbacks of asynchronous scanning including
>
>- The CPU cycles used are not charged properly
>
>- There may be no idle CPU cycles to use
>
>- The scanning CPU may be not near the workload CPUs enough

One approach we experimented with was doing only the page migration asynchr=
onously,
leaving the scanning to the task context, which also knows the dest numa no=
de.
Results showed that page fault latencies were reduced without affecting ben=
chmark
performance. Of course busy systems are an issue, as the window between ser=
vicing
the fault and actually making it available to the user in fast memory is en=
larged.

>It's better to involve Mel and Peter in the discussion for this.
>
>> The topic was presented in the MM alignment session hosted by David Rien=
tjes [2].
>> The topic also finds a mention in S J Park's LSFMM proposal [3].
>>
>> Here is the list of potential discussion points:
>> 1. Other improvements and enhancements to PTE A bit scanning approach. U=
se of
>> multiple kernel threads, throttling improvements, promotion policies, pe=
r-process
>> opt-in via prctl, virtual vs physical address based scanning, tuning hot=
 page
>> detection algorithm etc.
>
>One drawback of physical address based scanning is that it's hard to
>apply some workload specific policy.  For example, if a low priority
>workload has many relatively hot pages, while a high priority workload
>has many relative warm (not so hot) pages.  We need to promote the warm
>pages in the high priority workload, while physcial address based
>scanning may report the hot pages in the low priority workload.  Right?
>
>> 2. Possibility of maintaining single source of truth for page hotness th=
at would
>> maintain hot page information from multiple sources and let other sub-sy=
stems
>> use that info.
>>
>> 3. Discuss how hardware provided hotness info (like AMD IBS) can further=
 aid
>> promotion. Bharata had posted an RFC [4] on this a while back.
>>
>> 4. Overlap with DAMON and potential reuse.
>>
>> Links:
>>
>> [1] https://lore.kernel.org/all/20241201153818.2633616-1-raghavendra.kt@=
amd.com/
>> [2] https://lore.kernel.org/linux-mm/20241226012833.rmmbkws4wdhzdht6@ed.=
ac.uk/T/
>> [3] https://lore.kernel.org/lkml/Z4XUoWlU-UgRik18@gourry-fedora-PF4VCD3F=
/T/
>> [4] https://lore.kernel.org/lkml/20230208073533.715-2-bharata@amd.com/
>>
>
>---
>Best Regards,
>Huang, Ying
>

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (mail-mw2nam12on2044.outbound.protection.outlook.com [40.107.244.44])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 890B9282EE
	for <linux-kernel@vger.kernel.org>; Mon, 27 Jan 2025 05:11:25 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.244.44
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737954687; cv=fail; b=FZqkugH2u3iFS6pxfvnfP5ipXBvmeZbdwAZZblD03iqDtOjiZAkF+/F1LcsonOh1qHQLpBGsA5Hye68ShwMRQa9Olw6J8FE7bwUZQrqxqUaAwysz9ZfFUj/+zkhxEko8NiRtNqpqURm8NSkfZrSz0Nc5yIslkTlaY0QNv7a2ydw=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737954687; c=relaxed/simple;
	bh=dyq6RAFoyuiNIjxCrlcHvpuHkn1/ZsCVvb2I0yDvmJ4=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=IQNvzGCUhc2bBNXtegFsmxd3LYrmV1viSj6Z/4nrxWSHRokzCK1d/BDFmKZM3oCpc14RFDf7FhTwOSKbj/JbV06b1DfGz2No6LT1lBgsMlkyuF5fHuqGiiygPPaO1NJLhYa2NJfrsB9D1zCzAIIj+X2c3qxJuZk6aB4t66YlsS8=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=K7Xiibaf; arc=fail smtp.client-ip=40.107.244.44
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="K7Xiibaf"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=QYXGmiZ74LKkzBq6asQZTpT8S4bxSt+QK7FHo8xtt7hl0z8oVzKXR+HrCEQ+au6+AFn4J1qfl9hxLhTHSTteZlFzBeeaoCmFwRPz5mHviq/WcnztfBHTvuJ7ao63lcDLaRdgm2uNZxXOL7rFu9YEC9R4CBV4xjwgBySx8/BNf8HctDGiLjEbibXFXaGGcY61JkCPUWKVT5TfNDv9LriYEgRKf46lfPWojC1C/K+qNBMDCw5eWFA5NSEKG8VJzKmIUjk/YK1uazRaYT7jFaKanhm6MIwUpwC1hzClAW2aYz8HNJVOmyOU80Zws5/OLaewKKJyuGIbDolIcAcYA/9Nlg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=QABVLkFpdqee2FnLInLs1s6yYTEppgfi0eYaA2EVSgc=;
 b=ZKxts8BXXAASgg/ydk0rkuXBVfX4RmfrvQF7FbUy21yqCdMbMOfDpHn/qBhnhGJh5/1Hr53KLr7+8FHs+R9bEWQmTgV+3ZZj+JqpXU3vwbQIIFBlQVsAKFkUAfcV9gcTMnSgiQJEgLi8+Br7qJXh6owkfep+McF3RxZta5wa2B433ZjAhpl37pZRWwAYw8wywU+ycu1J0Z4jQvjbPTbuUrB+kRYJTnfm2SgoZXUQGbZ3FggcEc8ExwM6FFAFnLn4sofJ8936RjHh+eMt+OQ9hVT+pOwJeBLi6CrHB9ZVh/LjXYHCnQ4Sk/BEwaVv0q0L7vONVgLAkbK3OnKiynkeDQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=QABVLkFpdqee2FnLInLs1s6yYTEppgfi0eYaA2EVSgc=;
 b=K7XiibafPGVOAGvdDwv3tZzPzTBJziyirGAUYsCsV9hzE1rfhT7dOuXJKYXeStUII++W7At7tWwTZYbnHJrFONdBe8kqumqzsfdiErgOONYKj5ZKX00Tm9qsIh2D2v2O+yscumP3a8ZPyy9/uYyMQr9A4ZQQjoQqcN2LlhNS8X4=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from IA1PR12MB6434.namprd12.prod.outlook.com (2603:10b6:208:3ae::10)
 by IA1PR12MB6091.namprd12.prod.outlook.com (2603:10b6:208:3ed::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8377.22; Mon, 27 Jan
 2025 05:11:22 +0000
Received: from IA1PR12MB6434.namprd12.prod.outlook.com
 ([fe80::dbf7:e40c:4ae9:8134]) by IA1PR12MB6434.namprd12.prod.outlook.com
 ([fe80::dbf7:e40c:4ae9:8134%7]) with mapi id 15.20.8377.021; Mon, 27 Jan 2025
 05:11:22 +0000
Message-ID: <c9c70938-24ac-4044-881e-6dffccc78126@amd.com>
Date: Mon, 27 Jan 2025 10:41:07 +0530
User-Agent: Mozilla Thunderbird
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
To: "Huang, Ying" <ying.huang@linux.alibaba.com>,
 Raghavendra K T <raghavendra.kt@amd.com>
Cc: linux-mm@kvack.org, akpm@linux-foundation.org,
 lsf-pc@lists.linux-foundation.org, gourry@gourry.net, nehagholkar@meta.com,
 abhishekd@meta.com, nphamcs@gmail.com, hannes@cmpxchg.org,
 feng.tang@intel.com, kbusch@meta.com, Hasan.Maruf@amd.com, sj@kernel.org,
 david@redhat.com, willy@infradead.org, k.shutemov@gmail.com,
 mgorman@techsingularity.net, vbabka@suse.cz, hughd@google.com,
 rientjes@google.com, shy828301@gmail.com, liam.howlett@oracle.com,
 peterz@infradead.org, mingo@redhat.com, nadav.amit@gmail.com,
 shivankg@amd.com, ziy@nvidia.com, jhubbard@nvidia.com,
 AneeshKumar.KizhakeVeetil@arm.com, linux-kernel@vger.kernel.org,
 jon.grimm@amd.com, santosh.shukla@amd.com, Michael.Day@amd.com,
 riel@surriel.com, weixugc@google.com, leesuyeon0506@gmail.com,
 honggyu.kim@sk.com, leillc@google.com, kmanaouil.dev@gmail.com,
 rppt@kernel.org, dave.hansen@intel.com
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <87o6zub978.fsf@DESKTOP-5N7EMDA>
Content-Language: en-US
From: Bharata B Rao <bharata@amd.com>
In-Reply-To: <87o6zub978.fsf@DESKTOP-5N7EMDA>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: PN3PR01CA0109.INDPRD01.PROD.OUTLOOK.COM
 (2603:1096:c01:96::22) To IA1PR12MB6434.namprd12.prod.outlook.com
 (2603:10b6:208:3ae::10)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: IA1PR12MB6434:EE_|IA1PR12MB6091:EE_
X-MS-Office365-Filtering-Correlation-Id: 0543aa45-2ffc-4711-020e-08dd3e910a54
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|366016|7416014|376014|1800799024;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?UnVpM1lBT21FbTFtNXhvUzJWdUlKNGFMTG1jVWZpMUNRMkdmYWhTaExJeFI2?=
 =?utf-8?B?blBUZllPYzA0cXV1REQxaVdFTHR6N1krQk5jcnhqQVk2VVhHVWZLbkxrV3JD?=
 =?utf-8?B?T0tQMU83NVdvR1hJcXJaTTBhQVBvL0haak03a2VUM2prbkFFNWlZUHJrVVNk?=
 =?utf-8?B?dUE0aXplTmo2UUw4dkZybzk0elZZN3dKbHFzaVk1ajRVMGs4TjJqZEJrbnJ6?=
 =?utf-8?B?dkhsWWVPSFpZdUtNbzBJMGxEZGNocllWcE12VWg2d0swSjN4SWxPSkVILzE3?=
 =?utf-8?B?Vjc4NnR3RjhRMUVYeFN5ZmkyUGp4Rm9PWkM2S0RnMGpNMllIaWRaRnRUQ3BY?=
 =?utf-8?B?SzZJSVM2WFNIeVJvMGpRQjFUNytKUytLdnlteEpNUHRMblp6aGVEUmZuelV3?=
 =?utf-8?B?dU9pSktJVmNLR3FYU2VVdm9LWDJheUZXaXA2blFWV3h1bk8vaW5wRFFSU2tJ?=
 =?utf-8?B?RTlBV1dyaUk5WFNpdGhWVFBKT1VET2tRbjZjNjF4c3Z4ek5NbXZEc0VpVEpp?=
 =?utf-8?B?VUJ6ZDRZUmcrV09uaGwrTjhDeWRYVzd4cVRaUmQ1UEt5aCtiUGhSYWZiVXhi?=
 =?utf-8?B?Y3J0YXFrdkdMYmI1YVFMYk0yOEVhdlYyTDVvdGsySWxwOCtpeFlVc3VGb0hU?=
 =?utf-8?B?WmV4bzNvZmdZd2JOUWVVVWs4cWFvTnRkWSsrMVBYSUg5QzdyM3BxNFFmQkk2?=
 =?utf-8?B?aElhMzRJTTZyS1pYZ01Xc3puaW1IM1dnL2Raam91K0JKZzZvRkxXd0xsNHZN?=
 =?utf-8?B?UDd2eVFOZW5rUWFTRnlDdDBiMUN1R1h6L29FOXM4MjFiNTJoOEFzQmZBYXI1?=
 =?utf-8?B?UTFiUUJxSEVIRHNrT0dQYkRSVGt0VVo4RXBucFl5YXFOVU1FY0t6Rkt0WVJM?=
 =?utf-8?B?TkMyNGxGMkZSU0R6WGV1MTFRT0o5R2puRm9CZk9BMnlmVlNIdS83RHdIMjRV?=
 =?utf-8?B?dE5LOWJEV1VaQ0NYOC9MMCs0NzkzTzBmYjVBYkl1azlzMm1nMTA0QnliNWNT?=
 =?utf-8?B?b0xKcWZwZzBTMTFUTHc4cmRhKzY2ejV6ay83QW0yZEhqeTVTTlUydDNDZVNB?=
 =?utf-8?B?OTV2eGlhd1hwaE1iSi9HYnN5RnNONFJ2MTZmbHBaVUJPRmp1R1JlNk82Z1lJ?=
 =?utf-8?B?QmgzcWh3UkdReGVCcUNyYlZEU1ZzQTVVOHBaMjYxTmltMlZXZWxNR21tQ3BX?=
 =?utf-8?B?T0RjZWlkRk1lSFAzYnZJWlZ3MjNkSVRGbzFFQnhzb2t2NFhwN0pUVVNTakxW?=
 =?utf-8?B?eUpmVU91cTczWFhQUXhZWGZuSWJJdDJ2bXE5Vk5ZQmFDc25kZ1RtMkJ4ZEg0?=
 =?utf-8?B?MnFSQzJjaDRkS1FmOUhsU1RWSTUvL3haU05HVW1tUCs2WTJUenk1VWJJNTdI?=
 =?utf-8?B?NGJOR0pxakVRbWhXMUlJNnlEWnhMdjNZcEpoeGtZYUZ0N2s5WExJK2gvYlQy?=
 =?utf-8?B?ZWhkTFFqb05ncGRaUlhGUi9SM0o2cDlrMTFkclVocWdrY2x4M2VwMEFRNGM4?=
 =?utf-8?B?VUlHcndYQkxYSEcvVGZkSkxnR3VoVGJtYW5nalkydWwySEd2U2Ztb1NjVEtR?=
 =?utf-8?B?NVRWTVhBaTN4ZXR5RC84R0Q4dVRSR05pMWlORHA1a2FZa3JuK3lJYmxpVzd4?=
 =?utf-8?B?RjVWZE1kOXBIM2l3Z3lHSHpIUlZKT0QrUGFYMUluL01ZWWlwS0pnQ2hNQmgr?=
 =?utf-8?B?Q3hQOEFNZzZNc2NGSFFINzVpRFNWM2l3ZHd3VVJnSzRSR2F0UlpQRGR3NXp2?=
 =?utf-8?B?Q1V0NDNwcEY1aWlJT3FNWXV5ZUtwMU9kWEd2dzJrbXRRdnViOTk1Z3JUaVhh?=
 =?utf-8?B?aXFqQVg2dHF4VkZYdDcvUT09?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:IA1PR12MB6434.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(366016)(7416014)(376014)(1800799024);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?SVYra2hqNmYzdGxEOThEM2NlRHNBdFZxc2RjODRFa1VjV2FwbzZUNnpRT042?=
 =?utf-8?B?aC8rVk5oSk9jdWlXaGljeXFSR2NMcWpDSnJrZnlNbU9hYkMxMTF3Q2VFT3JH?=
 =?utf-8?B?YUQzYkw3bU5nRmgwSTFRTWVtUWw1WTNkMjVmTkVRdWcrd29DUzNaVW81OXN6?=
 =?utf-8?B?RnVyWXo1dkRVMHdlSTU2L294TlZxL3had2JnRFROczRVM3c3a0RlWWNxUnV6?=
 =?utf-8?B?WVplVEUyNHA2MW05Z2NJcFVxNkhtZW5ZeGZHSGpoTTBrc01SeW5Zd3NJOTRL?=
 =?utf-8?B?THdaL2oxVnVsRXR2VlkyaE1odGNHY1ZsWnhpVkJUZmd5bkZWazZTUzZRdDlG?=
 =?utf-8?B?VzRzOTJ6bmRUMGxVQ21USTNLdTQ0dG9qbXd2dEhZTU5iQ1krNFpaeXl5bVV5?=
 =?utf-8?B?eW5xMGN2ZEdxdmVQYnFtVk45YU5uQ3B5eWJxUHl2UDRwdk44U3JrVWRjRWk4?=
 =?utf-8?B?Umgzdjd2TTAraExRR3E3d3lUT0MxZWtrS2pFTlorNkJKK0RvSDRzT0hkdlpL?=
 =?utf-8?B?Z0E4WTdNVDZ3bUZQNy82LzNSSjV5MGhWNGJEcENvNFdaM0cySGd1Z2lFOE9u?=
 =?utf-8?B?aHJZS2JzbjJuak44cUQySkJLQkNFcndGNzRPNVc2UDdXMTc3ZWFkbFpyOEkr?=
 =?utf-8?B?K3gwczJuRlp0K3ZhTnJneG1MTFdQNUNIVjhtcUJoUlNCQlFXdjJGVElmVk0v?=
 =?utf-8?B?YmU1SUVtNENhRnBpL3NwVGRFa1N4WS82OXpmNG5rRjZBU1hOVnBNYWRucVh6?=
 =?utf-8?B?SHlYQUFoMStKMk1SRjJxQ0ZtaHpRUUNCalVtaUpxZUluVGtIVi9xY2FHRTUx?=
 =?utf-8?B?VVFyKzhjMHhGZGY2L3FTU3RDdmZEbEQ5Tk4wWFZIVHdhSG82ckdiZ0dUT3hW?=
 =?utf-8?B?TTgyWmY5Um1saXJUMG4rQ1VrSWNQck1CVW5aOHRSbDV1eG94dThPUTlDU3Zs?=
 =?utf-8?B?Mms2ZWN3alZkMllXa1Q3NDRWLzZ4T0VwQnZkVEc3dmI3RWdCeGdxZjNyV1do?=
 =?utf-8?B?K0tySGg3RElLWmxrdHh0ZWVsWHBaMkV3cVNNczdZSTZlT3ZxenZkMWcrV2VG?=
 =?utf-8?B?SjFFY2FDckJRRGRqbmhjaGpSZjhGNU9tL3k1TDExUHZzc3hXS2laUVVJTElK?=
 =?utf-8?B?RU9KWEh5eDUzdnlRdnp6eVhJSnFBaDRmTk0vaFFwOFZkM2x2OVBjQnNOYzM1?=
 =?utf-8?B?ZnU0dk9EV1NNZDR0T2d3ZkloSUdCM01kWWNiVnhJdkthS2NDU1VrZUFPUlNE?=
 =?utf-8?B?TjYxR05OTjNCMGMxZTJmNmhKSlg2dGRmdUU2TDVYSmVUU1VDRDUwWGtWOGlr?=
 =?utf-8?B?ZmJhem1FYnk1VXJGU0dkNmUwUjJtSmpmWndqVm1JbzZNY2ZsenhCT0hFVGZI?=
 =?utf-8?B?RWpkZjIvTXhVd0FxZFBnc3ZpbGdJZkNYZ3ZyRGxwcHlJTUNCSSt2bU9FTVBS?=
 =?utf-8?B?SzJ1TDAwYjBNbGtCdGdyZW84OGJ2RFNSZjNmQU4wcWtIbVh3S0pOUlkycmNH?=
 =?utf-8?B?SXFmZi9NWUxhVzU5MUc3ZGxJVmwzS05WWW5tTWxQZzVLNTgzeDBWMjVqN21O?=
 =?utf-8?B?MFViOHVwbEhKWG1DRVhFb3I1eGk4bGhaMFE1eDlaampiRENvTFkwTHNOalA1?=
 =?utf-8?B?WnB2bUhJRzg0V3NYWVhjQVNlSU1mbE41eTcxL1FIRzljMWhraStCTGQzYjRE?=
 =?utf-8?B?QjV3emRGQkRHR0wveGFxSzFpOURHY1lrMnlrbzNFMWlLdENPSFNhRis0ZVpR?=
 =?utf-8?B?WGxFdFZmRC9qNHpjQjYwRzJGaDRpbTZRSzU3RThNU25OQVZzL0I2c2NQNVVm?=
 =?utf-8?B?Q3h1YVF3dVNuMWQ4c0kwV1NLb1ViNFFObTY1Nkw2R1NScEtxOVdVdlBUcnJ0?=
 =?utf-8?B?L01TSTVnR2dUU1ZzQ1N2bEhUbjBBeUZ5eTZtdndkM2ovYnA0ZXFoYW1oVXFp?=
 =?utf-8?B?cDQyUlh3bWFVV09sYUtPZEYxcFlhbU1VZjJaWWtJY0todkg2THZSTUFIUThF?=
 =?utf-8?B?YmZyRlJPUWpZSnhHMUhidjBCY3Q4Tzh3aTk2SmJFQmROYnMvZ2UrcFFuT1Rs?=
 =?utf-8?B?NHpZVjBtaEhGZXJ6Vm9FN2JPMlh5UXFqTCs0Z3dBNUovVENCRGdobzg3dFZS?=
 =?utf-8?Q?mASfdglIQeynSH4v2auQ+osch?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 0543aa45-2ffc-4711-020e-08dd3e910a54
X-MS-Exchange-CrossTenant-AuthSource: IA1PR12MB6434.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 27 Jan 2025 05:11:22.4194
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: VSGH/z/i6lBLhrjKWx32JBNnzwiIvFOeeZilrwk9g3xFoJTvheL9tbZv5jQPhnbIEbQ/Gv/QgH9ZZX6eMY5S3w==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA1PR12MB6091

On 26-Jan-25 7:57 AM, Huang, Ying wrote:
> Hi, Raghavendra,
> 
> Raghavendra K T <raghavendra.kt@amd.com> writes:
> 
>> Bharata and I would like to propose the following topic for LSFMM.
>>
>> Topic: Overhauling hot page detection and promotion based on PTE A bit scanning.
>>   
>> In the Linux kernel, hot page information can potentially be obtained from
>> multiple sources:
>>   
>> a. PROT_NONE faults (NUMA balancing)
>> b. PTE Access bit (LRU scanning)
>> c. Hardware provided page hotness info (like AMD IBS)
>>   
>> This information is further used to migrate (or promote) pages from slow memory
>> tier to top tier to increase performance.
>>
>> In the current hot page promotion mechanism, all the activities including the
>> process address space scanning, NUMA hint fault handling and page migration are
>> performed in the process context. i.e., scanning overhead is borne by the
>> applications.
>>   
>> I had recently posted a patch [1] to improve this in the context of slow-tier
>> page promotion. Here, Scanning is done by a global kernel thread which routinely
>> scans all the processes' address spaces and checks for accesses by reading the
>> PTE A bit. The hot pages thus identified are maintained in list and subsequently
>> are promoted to a default top-tier node. Thus, the approach pushes overhead of
>> scanning, NUMA hint faults and migrations off from process context.
> 
> This has been discussed before too.  For example, in the following thread
> 
> https://lore.kernel.org/all/20200417100633.GU20730@hirez.programming.kicks-ass.net/T/

Thanks for pointing to this discussion.

> 
> The drawbacks of asynchronous scanning including
> 
> - The CPU cycles used are not charged properly
> 
> - There may be no idle CPU cycles to use
> 
> - The scanning CPU may be not near the workload CPUs enough
> 
> It's better to involve Mel and Peter in the discussion for this.

They are CC'ed in this thread and hopefully have insights to share.

Charging CPU cycles to the right process has been brought up in other 
similar contexts. Recent one is from page migration batching and using 
multiple threads for migration - 
https://lore.kernel.org/all/CAHbLzkpoKP0fVZP5b10wdzAMDLWysDy7oH0qaUssiUXj80R6bw@mail.gmail.com/

Does it make sense to treat hot page promotion from slow tiers 
differently compared to locality based balancing? I mean couldn't the 
charging of this async thread be similar to the cycles spent by other 
system threads like kcompactd and khugepaged?

> 
>> The topic was presented in the MM alignment session hosted by David Rientjes [2].
>> The topic also finds a mention in S J Park's LSFMM proposal [3].
>>   
>> Here is the list of potential discussion points:
>> 1. Other improvements and enhancements to PTE A bit scanning approach. Use of
>> multiple kernel threads, throttling improvements, promotion policies, per-process
>> opt-in via prctl, virtual vs physical address based scanning, tuning hot page
>> detection algorithm etc.
> 
> One drawback of physical address based scanning is that it's hard to
> apply some workload specific policy.  For example, if a low priority
> workload has many relatively hot pages, while a high priority workload
> has many relative warm (not so hot) pages.  We need to promote the warm
> pages in the high priority workload, while physcial address based
> scanning may report the hot pages in the low priority workload.  Right?

Correct. I wonder if DAMON has already devised a scheme to address this. SJ?

Regards,
Bharata.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from out30-110.freemail.mail.aliyun.com (out30-110.freemail.mail.aliyun.com [115.124.30.110])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 5EB9E25A628
	for <linux-kernel@vger.kernel.org>; Sun, 26 Jan 2025 02:33:26 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=115.124.30.110
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737858811; cv=none; b=Lyg6cB+DbBAI2aA0VqAipUsIj5ihrIpmMvrpc5VzJSa8hFvpcumn6fIHwW6Lmbodx8I898gm4IP6zKJ3KwQT/kLXec29HLwzwysyZa9UFWBmgGVH+0RvYSDjV73k0V2iGSinwKkfkZlYROqnmqlfwy0aSs62VpRuTBMCHRGxCBE=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737858811; c=relaxed/simple;
	bh=xULJqkbcobMQf45OCsxbtRguQ+N1rSgQwz8hG1Ruj2s=;
	h=From:To:Cc:Subject:In-Reply-To:References:Date:Message-ID:
	 MIME-Version:Content-Type; b=S121zOfK9sTc4AAwVDlKfi6r6SQWN/96ItzpOa3SKXwiGLue5xB8aqqBxM2ekM9OScBNT9ZgEP9DRozdnzBvTcvN1ns8IgoDv5y/rtpWH6tRx1BVff7lJa/cfMA4fv8lKw/POKmR2R28t4/GLUf8M6spHcFuzPrto5k9guFiahA=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=linux.alibaba.com; spf=pass smtp.mailfrom=linux.alibaba.com; dkim=pass (1024-bit key) header.d=linux.alibaba.com header.i=@linux.alibaba.com header.b=VjtCBmZS; arc=none smtp.client-ip=115.124.30.110
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=linux.alibaba.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=linux.alibaba.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=linux.alibaba.com header.i=@linux.alibaba.com header.b="VjtCBmZS"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=linux.alibaba.com; s=default;
	t=1737858799; h=From:To:Subject:Date:Message-ID:MIME-Version:Content-Type;
	bh=yJARYSWlOupVxuoaYY576KiiQlNDmztq5lfwbUGtEkI=;
	b=VjtCBmZSI5AUG6SfXVl/pEX9wK++VJ8M3+8acRq0Hl3M3maqOQBi4JHx3C5WW4X4qC3iKW4RuoqXA9pGYUT91HZgIena/CQnEsyoHRiXZBH8eWSHV2bIusky6SNJkQObUR0biK/4xUVsdhA+uCc3m0iNImEG85aCZn4bqmC01GU=
Received: from DESKTOP-5N7EMDA(mailfrom:ying.huang@linux.alibaba.com fp:SMTPD_---0WOI6EsM_1737858474 cluster:ay36)
          by smtp.aliyun-inc.com;
          Sun, 26 Jan 2025 10:28:00 +0800
From: "Huang, Ying" <ying.huang@linux.alibaba.com>
To: Raghavendra K T <raghavendra.kt@amd.com>
Cc: <linux-mm@kvack.org>,  <akpm@linux-foundation.org>,
  <lsf-pc@lists.linux-foundation.org>,  <bharata@amd.com>,
  <gourry@gourry.net>,  <nehagholkar@meta.com>,  <abhishekd@meta.com>,
  <nphamcs@gmail.com>,  <hannes@cmpxchg.org>,  <feng.tang@intel.com>,
  <kbusch@meta.com>,  <Hasan.Maruf@amd.com>,  <sj@kernel.org>,
  <david@redhat.com>,  <willy@infradead.org>,  <k.shutemov@gmail.com>,
  <mgorman@techsingularity.net>,  <vbabka@suse.cz>,  <hughd@google.com>,
  <rientjes@google.com>,  <shy828301@gmail.com>,
  <liam.howlett@oracle.com>,  <peterz@infradead.org>,  <mingo@redhat.com>,
  <nadav.amit@gmail.com>,  <shivankg@amd.com>,  <ziy@nvidia.com>,
  <jhubbard@nvidia.com>,  <AneeshKumar.KizhakeVeetil@arm.com>,
  <linux-kernel@vger.kernel.org>,  <jon.grimm@amd.com>,
  <santosh.shukla@amd.com>,  <Michael.Day@amd.com>,  <riel@surriel.com>,
  <weixugc@google.com>,  <leesuyeon0506@gmail.com>,  <honggyu.kim@sk.com>,
  <leillc@google.com>,  <kmanaouil.dev@gmail.com>,  <rppt@kernel.org>,
  <dave.hansen@intel.com>
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
In-Reply-To: <20250123105721.424117-1-raghavendra.kt@amd.com> (Raghavendra
	K. T.'s message of "Thu, 23 Jan 2025 10:57:21 +0000")
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
Date: Sun, 26 Jan 2025 10:27:55 +0800
Message-ID: <87o6zub978.fsf@DESKTOP-5N7EMDA>
User-Agent: Gnus/5.13 (Gnus v5.13)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ascii

Hi, Raghavendra,

Raghavendra K T <raghavendra.kt@amd.com> writes:

> Bharata and I would like to propose the following topic for LSFMM.
>
> Topic: Overhauling hot page detection and promotion based on PTE A bit scanning.
>  
> In the Linux kernel, hot page information can potentially be obtained from
> multiple sources:
>  
> a. PROT_NONE faults (NUMA balancing)
> b. PTE Access bit (LRU scanning)
> c. Hardware provided page hotness info (like AMD IBS)
>  
> This information is further used to migrate (or promote) pages from slow memory
> tier to top tier to increase performance.
>
> In the current hot page promotion mechanism, all the activities including the
> process address space scanning, NUMA hint fault handling and page migration are
> performed in the process context. i.e., scanning overhead is borne by the
> applications.
>  
> I had recently posted a patch [1] to improve this in the context of slow-tier
> page promotion. Here, Scanning is done by a global kernel thread which routinely
> scans all the processes' address spaces and checks for accesses by reading the
> PTE A bit. The hot pages thus identified are maintained in list and subsequently
> are promoted to a default top-tier node. Thus, the approach pushes overhead of
> scanning, NUMA hint faults and migrations off from process context.

This has been discussed before too.  For example, in the following thread

https://lore.kernel.org/all/20200417100633.GU20730@hirez.programming.kicks-ass.net/T/

The drawbacks of asynchronous scanning including

- The CPU cycles used are not charged properly

- There may be no idle CPU cycles to use

- The scanning CPU may be not near the workload CPUs enough

It's better to involve Mel and Peter in the discussion for this.

> The topic was presented in the MM alignment session hosted by David Rientjes [2].
> The topic also finds a mention in S J Park's LSFMM proposal [3].
>  
> Here is the list of potential discussion points:
> 1. Other improvements and enhancements to PTE A bit scanning approach. Use of
> multiple kernel threads, throttling improvements, promotion policies, per-process
> opt-in via prctl, virtual vs physical address based scanning, tuning hot page
> detection algorithm etc.

One drawback of physical address based scanning is that it's hard to
apply some workload specific policy.  For example, if a low priority
workload has many relatively hot pages, while a high priority workload
has many relative warm (not so hot) pages.  We need to promote the warm
pages in the high priority workload, while physcial address based
scanning may report the hot pages in the low priority workload.  Right?

> 2. Possibility of maintaining single source of truth for page hotness that would
> maintain hot page information from multiple sources and let other sub-systems
> use that info.
>
> 3. Discuss how hardware provided hotness info (like AMD IBS) can further aid
> promotion. Bharata had posted an RFC [4] on this a while back.
>
> 4. Overlap with DAMON and potential reuse.
>  
> Links:
>
> [1] https://lore.kernel.org/all/20241201153818.2633616-1-raghavendra.kt@amd.com/
> [2] https://lore.kernel.org/linux-mm/20241226012833.rmmbkws4wdhzdht6@ed.ac.uk/T/
> [3] https://lore.kernel.org/lkml/Z4XUoWlU-UgRik18@gourry-fedora-PF4VCD3F/T/
> [4] https://lore.kernel.org/lkml/20230208073533.715-2-bharata@amd.com/
>  

---
Best Regards,
Huang, Ying

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from invmail3.skhynix.com (exvmail3.skhynix.com [166.125.252.90])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 40A45258A
	for <linux-kernel@vger.kernel.org>; Fri, 24 Jan 2025 05:53:11 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=166.125.252.90
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737697997; cv=none; b=OCuk24HcIZAuMbgLECLMK8U1wFJ5+P2K7EkuCcJLkZPXyKEFEcrfieCuDaKibWwgQlZ+nNt/yz9+cLBvU4rQzRAAA0Z+m4M+WF98c8wH02Hruo7fGj0y9jRxjjCs7nF119hqbUGAbILMTz5kJGGtfJx4xtJ0E+qU96huPQW17vk=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737697997; c=relaxed/simple;
	bh=ocRiUUEFLzEqC1rBLMEZ+AiQdwNg5Un5ys+cUKMbaog=;
	h=Message-ID:Date:MIME-Version:Cc:Subject:To:References:From:
	 In-Reply-To:Content-Type; b=AZvKHJQU0ACT60ZoV2RxJQ1ecL9oUed6+bUOJRft2BZif0rBTK+UMDVsINbok+KFz28Rd0gMoHAfZ518ygobJU7ClGIim2XESyXjbNFUn7MumZ6JVhYM7Qapwb91FM7RfsIopsHdXyQ5eebxGWjY0LG61V+ckJupwisiojjF48E=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=sk.com; spf=pass smtp.mailfrom=sk.com; arc=none smtp.client-ip=166.125.252.90
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=sk.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=sk.com
X-AuditID: a67dfc59-7a9ff700000194b3-2d-67932ac4f167
Message-ID: <0a9914f8-bec7-4e58-ab12-a87fe3876187@sk.com>
Date: Fri, 24 Jan 2025 14:53:08 +0900
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Cc: kernel_team@skhynix.com, 42.hyeyoo@gmail.com,
 "gourry@gourry.net" <gourry@gourry.net>,
 "nehagholkar@meta.com" <nehagholkar@meta.com>,
 "abhishekd@meta.com" <abhishekd@meta.com>,
 "ying.huang@linux.alibaba.com" <ying.huang@linux.alibaba.com>,
 "nphamcs@gmail.com" <nphamcs@gmail.com>,
 "hannes@cmpxchg.org" <hannes@cmpxchg.org>,
 "feng.tang@intel.com" <feng.tang@intel.com>,
 "kbusch@meta.com" <kbusch@meta.com>,
 "Hasan.Maruf@amd.com" <Hasan.Maruf@amd.com>, "sj@kernel.org"
 <sj@kernel.org>, "david@redhat.com" <david@redhat.com>,
 "willy@infradead.org" <willy@infradead.org>,
 "k.shutemov@gmail.com" <k.shutemov@gmail.com>,
 "mgorman@techsingularity.net" <mgorman@techsingularity.net>,
 "vbabka@suse.cz" <vbabka@suse.cz>, "hughd@google.com" <hughd@google.com>,
 "rientjes@google.com" <rientjes@google.com>,
 "shy828301@gmail.com" <shy828301@gmail.com>,
 "liam.howlett@oracle.com" <liam.howlett@oracle.com>,
 "peterz@infradead.org" <peterz@infradead.org>,
 "mingo@redhat.com" <mingo@redhat.com>,
 "nadav.amit@gmail.com" <nadav.amit@gmail.com>,
 "shivankg@amd.com" <shivankg@amd.com>, "ziy@nvidia.com" <ziy@nvidia.com>,
 "jhubbard@nvidia.com" <jhubbard@nvidia.com>,
 "AneeshKumar.KizhakeVeetil@arm.com" <AneeshKumar.KizhakeVeetil@arm.com>,
 "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
 "jon.grimm@amd.com" <jon.grimm@amd.com>,
 "santosh.shukla@amd.com" <santosh.shukla@amd.com>,
 "Michael.Day@amd.com" <Michael.Day@amd.com>,
 "riel@surriel.com" <riel@surriel.com>,
 "weixugc@google.com" <weixugc@google.com>,
 "leesuyeon0506@gmail.com" <leesuyeon0506@gmail.com>, honggyu.kim@sk.com,
 "leillc@google.com" <leillc@google.com>,
 "kmanaouil.dev@gmail.com" <kmanaouil.dev@gmail.com>,
 "rppt@kernel.org" <rppt@kernel.org>,
 "dave.hansen@intel.com" <dave.hansen@intel.com>, yuanchu@google.com
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
To: Raghavendra K T <raghavendra.kt@amd.com>,
 "linux-mm@kvack.org" <linux-mm@kvack.org>,
 "akpm@linux-foundation.org" <akpm@linux-foundation.org>,
 "lsf-pc@lists.linux-foundation.org" <lsf-pc@lists.linux-foundation.org>,
 "bharata@amd.com" <bharata@amd.com>
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
Content-Language: en-US
From: Hyeonggon Yoo <hyeonggon.yoo@sk.com>
In-Reply-To: <20250123105721.424117-1-raghavendra.kt@amd.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Brightmail-Tracker: H4sIAAAAAAAAA02Sa0iTcRTG+b93Z4vXpfW3qGhh1LrZhTiRSUTR/0uSRER+qZUv+tZcsqVp
	ENjNSLPmrXTa0syytjAnMe1i81JaaBdNaZJW5KKV5rTsZrFcEvjtx3Oe85znwxFolYudLsj6
	A5JBr9WpOQWjGJhUuviBJjcu3JJJQ/bpcMj2dHJQXGnj4H2bk4by7M80DHveIBip/EXD2Xtv
	WfjZ08yD1b4ZThTe5MA9fIaBKvclHn65/yAoPPeVh9bOUgYGTA4Ed7vmw3CtiwZH2hseOm4X
	c9Br87FQ9+keDTXldRTUujpZaHeWUFA/UobA7D3Ng+PVeR6as5wUfMz7wUKX/RYL6ZerKGiq
	dFDQf0cPT2xfeChpGVtoHOmnoOjIGQSDXUM8jP4YO2G1xcP9nxUIih708usWkRPtfzhis9gQ
	aewfpEmtuYcnJfYkkpnewZPqCg0pu+uhiP36KY7Yh3N40lIwypDat6tJ7suriDx5nkKyjn3m
	yJC7m9kSEqOIiJV0crJkWBq5SxFfXv+USrROTTEdD0lDFlUGChCwuBL3drxn/3Npu5fxs1Jc
	jd2X8zk/M2IYHnrchsb1IPyosO+fJ0ScjV93F/AZSCHQYvVk3FZ2cmwgCFPEvfjC7e1+PVhM
	p3DOYy/tX1CJEbi7d/Qf0+I03N13kfL7OVGDa05JfjlAXIsbH15jxy2rcMatDDTOs7FjoJj2
	Z2LRJ+CKPA8/XjoU11e8ZEwoyDyhn3nCCfOELPOErBLEXEfBsj45QSvrViwx7otP1cspS/bs
	T7CjsYe7cvj3jhr07dnWBiQKSD1JSVblxKlYbbIxNaEBYYFWByt9faY4lTJWm3pIMuzfaUjS
	ScYGNENg1NOUy78djFWJcdoD0j5JSpQM/6eUEDA9DSXecKjDDFHb5IKita9Njwb2Pt3oSZ+p
	mz9jedlcS4HVtbV13uTkLMonf98D6rDo3KRnzWtsXMdgKEse+sKd3i3rZ50PdLVHWgJb3D1N
	gS/kqK6I0Cm7lV5r7JyGTToq6oMm/1x+a0zT4WNy/ruFkbkbg6Ln5tVnxhw9vmGBc3udmjHG
	a5dpaINR+xelyn3xbAMAAA==
X-Brightmail-Tracker: H4sIAAAAAAAAA02Sa0iTcRTG+b93R7PXpfliF2kU5KhZFHKELn4IfAmK6IvVh3LU27bUlZuZ
	BpZWGtm0aWVzXpqpteZIndTUzLxVJlmouFLKNJxg07y1sEzKJYHfHp7n+Z1zPhwGlzSSQYxa
	kyBoNYpYKSUiRMZNCZvbZDeVW/ry1kGOfgvkjPZSUFhpo2CkswmH8pxvOEyPDiLwVP7C4caz
	IRJ+fnpFQ4V9H6TnV1EwM+LGwTWdTUC16x4Nv1zzCPLzvtPwpreEgNai1ySMGxwIGpwbYbqu
	DwdH6iANPfWFFAzY/pDQ6H6GQ215IwZ1fb0kdDeZMWj2lCIwTeppcHy8Q8OrrCYMvt6aJcFp
	f0xCRlk1Bm2VDgzGnmrgrW2GBnP7AtDqGcOgIC0bwYRzioa52YUVFTYVPP9pQVDwYoCOkPPp
	3fMUbyu2Ib51bALn60yfaN5sP8tfz+ih+RqLjC9tGMV4u/Uaxdunc2m+3ThH8HVD4fzNDw8Q
	/7Yric+6/I3ip1z9xIHAI6IdJ4RYdaKgDd0VLVKVN7/DzlSsTDJcCUhFxZJM5MNw7HaupHuS
	8GoxG865ym5TXk2wG7ipjk606Ptxr/OH/3UC2GDuc7+RzkQiBmdrfLnO0qsLAcOsYE9xRfVR
	Xt+fzcC43I5J3AtI2B1c/8DcP42zgVz/8F3M26dYGVd7TfDaPuxOrvXlQ3KxEsZlPs5EizqY
	c4wX4gbka1pyhmnJJNMSxLQEMSPCivzVmsQ4hTo2TK6LUSVr1Eny46fj7Gjhq+6n/M6tRT96
	IlsQyyDpMnFEaK5SQioSdclxLYhjcKm/+M+wQSkRn1Aknxe0p49pz8YKuha0iiGkgeK9UUK0
	hFUqEoQYQTgjaP+nGOMTlIriSlIaPOtlFwqnLH5yy9oJZ3O7KlwZErZ89Xu/tEazc7xizbby
	7LTfvRddu08GRsYbrW2sWX6RtPjt1e33P39YzxgO/Rjqts6PRoWQ8eyxvIjVs3s8j8RCltGM
	vUm/5D58tEqfE+3zJGDIfe6QZqRL/+WCVXGq60n9QevEiMQiJXQqxVYZrtUp/gIletfMUQMA
	AA==
X-CFilter-Loop: Reflected



On 1/23/2025 7:57 PM, Raghavendra K T wrote:
> Bharata and I would like to propose the following topic for LSFMM.
> 
> Topic: Overhauling hot page detection and promotion based on PTE A bit scanning.
>   
> In the Linux kernel, hot page information can potentially be obtained from
> multiple sources:
>   
> a. PROT_NONE faults (NUMA balancing)
> b. PTE Access bit (LRU scanning)
> c. Hardware provided page hotness info (like AMD IBS)
>   
> This information is further used to migrate (or promote) pages from slow memory
> tier to top tier to increase performance.
> 
> In the current hot page promotion mechanism, all the activities including the
> process address space scanning, NUMA hint fault handling and page migration are
> performed in the process context. i.e., scanning overhead is borne by the
> applications.
>  
> I had recently posted a patch [1] to improve this in the context of slow-tier
> page promotion. Here, Scanning is done by a global kernel thread which routinely
> scans all the processes' address spaces and checks for accesses by reading the
> PTE A bit. The hot pages thus identified are maintained in list and subsequently> are promoted to a default top-tier node. Thus, the approach pushes overhead of
> scanning, NUMA hint faults and migrations off from process context.
> 
> The topic was presented in the MM alignment session hosted by David Rientjes [2].
> The topic also finds a mention in S J Park's LSFMM proposal [3].
>   
> Here is the list of potential discussion points:
> 1. Other improvements and enhancements to PTE A bit scanning approach. Use of
> multiple kernel threads, throttling improvements, promotion policies, per-process
> opt-in via prctl, virtual vs physical address based scanning, tuning hot page
> detection algorithm etc.

Yuanchu's MGLRU periodic aging series [1] seems quite relevant here,
you might want to look at it. adding Yuanchu to Cc.

By the way, do you have any reason why you'd prefer opt-in prctl
over per-memcg control?

[1] https://lore.kernel.org/all/20221214225123.2770216-1-yuanchu@google.com/
  
> 2. Possibility of maintaining single source of truth for page hotness that would
> maintain hot page information from multiple sources and let other sub-systems
> use that info.
> 
> 3. Discuss how hardware provided hotness info (like AMD IBS) can further aid
> promotion. Bharata had posted an RFC [4] on this a while back.
> 
> 4. Overlap with DAMON and potential reuse.
>   
> Links:
> 
> [1] https://lore.kernel.org/all/20241201153818.2633616-1-raghavendra.kt@amd.com/
> [2] https://lore.kernel.org/linux-mm/20241226012833.rmmbkws4wdhzdht6@ed.ac.uk/T/
> [3] https://lore.kernel.org/lkml/Z4XUoWlU-UgRik18@gourry-fedora-PF4VCD3F/T/
> [4] https://lore.kernel.org/lkml/20230208073533.715-2-bharata@amd.com/
>   
> 


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id DD547154BFF
	for <linux-kernel@vger.kernel.org>; Thu, 23 Jan 2025 18:20:54 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737656454; cv=none; b=CLD6SHneX7ICnDYHql6uNBDk9t5Il1vSaMTjFZbdGBawJIqLAShdttPFC3Z1Nl8EE7hyvqEMXQN1xrrON5qZmr1xLqErUcNCAnZLR+uylU2k5xGDWxrjotQXfUQtbRKvLnF8cgUUyqKrPY2sxchLGTPZnlkTfU+/4jMab8LlUZ4=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737656454; c=relaxed/simple;
	bh=p22SG4r1RuyOLW5bR6lpFN9Jp0VVIrmxUClESsLYbww=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=ujmESF6uqHFKQ6hamIdcfJ+wjAua9pMIjl+U3gTfFDRaT1gJ7L5KevE5fogZCbCuMf6A54bqTb28lA9xHomKzxEILR+naqxWMX5vMmyUGrBnRHyxPNpI2AWpMsY+kPpnnd+9f31Snklw77coBMjUwUS42NJsfIMd4KbeemECGbo=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=DXdNMRzA; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="DXdNMRzA"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 23F5BC4CED3;
	Thu, 23 Jan 2025 18:20:54 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1737656454;
	bh=p22SG4r1RuyOLW5bR6lpFN9Jp0VVIrmxUClESsLYbww=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=DXdNMRzAoDCzIg6HXk/10ctgzt6CErJ/S6QPBGHpli727+7JQt08sZlNudRuexwxF
	 /nuTyhwWZikfd1n+TLlpAYIUvh+SncObh9JBjEC7NXQN8WpOmgM6Zq35ZwePFP3Ycs
	 P8Ob4rV6TWzEFmVgkKRCFTau5rx3IxeghBIrofM9bRTe5KQyeKOZ5TOE2QzLy21Nsk
	 FJ/xj8z/ffPOqKyxEweV6Mcbfz6AingS9i/1wkBWEKB6mgVulWcgNxuTv6T3oFQsJB
	 2RO7ca85Dqafg4guQfja/RD70LBwlNa3BXZZc+3w5dv3Kl5X1W+9MDj+5XMmtW1NQJ
	 y5yJf4e3jV/dg==
From: SeongJae Park <sj@kernel.org>
To: Raghavendra K T <raghavendra.kt@amd.com>
Cc: SeongJae Park <sj@kernel.org>,
	linux-mm@kvack.org,
	akpm@linux-foundation.org,
	lsf-pc@lists.linux-foundation.org,
	bharata@amd.com,
	gourry@gourry.net,
	nehagholkar@meta.com,
	abhishekd@meta.com,
	ying.huang@linux.alibaba.com,
	nphamcs@gmail.com,
	hannes@cmpxchg.org,
	feng.tang@intel.com,
	kbusch@meta.com,
	Hasan.Maruf@amd.com,
	david@redhat.com,
	willy@infradead.org,
	k.shutemov@gmail.com,
	mgorman@techsingularity.net,
	vbabka@suse.cz,
	hughd@google.com,
	rientjes@google.com,
	shy828301@gmail.com,
	liam.howlett@oracle.com,
	peterz@infradead.org,
	mingo@redhat.com,
	nadav.amit@gmail.com,
	shivankg@amd.com,
	ziy@nvidia.com,
	jhubbard@nvidia.com,
	AneeshKumar.KizhakeVeetil@arm.com,
	linux-kernel@vger.kernel.org,
	jon.grimm@amd.com,
	santosh.shukla@amd.com,
	Michael.Day@amd.com,
	riel@surriel.com,
	weixugc@google.com,
	leesuyeon0506@gmail.com,
	honggyu.kim@sk.com,
	leillc@google.com,
	kmanaouil.dev@gmail.com,
	rppt@kernel.org,
	dave.hansen@intel.com
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion based on PTE A bit scanning
Date: Thu, 23 Jan 2025 10:20:50 -0800
Message-Id: <20250123182050.53941-1-sj@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20250123105721.424117-1-raghavendra.kt@amd.com>
References: 
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Hi Raghavendra,

On Thu, 23 Jan 2025 10:57:21 +0000 Raghavendra K T <raghavendra.kt@amd.com> wrote:

> Bharata and I would like to propose the following topic for LSFMM.
> 
> Topic: Overhauling hot page detection and promotion based on PTE A bit scanning.

Thank you for proposing this.  I'm interested in this!

>  
> In the Linux kernel, hot page information can potentially be obtained from
> multiple sources:
>  
> a. PROT_NONE faults (NUMA balancing)
> b. PTE Access bit (LRU scanning)
> c. Hardware provided page hotness info (like AMD IBS)
>  
> This information is further used to migrate (or promote) pages from slow memory
> tier to top tier to increase performance.
> 
> In the current hot page promotion mechanism, all the activities including the
> process address space scanning, NUMA hint fault handling and page migration are
> performed in the process context. i.e., scanning overhead is borne by the
> applications.

I understand that you're mentioning about only fully in-kernel solutions.  Just
for readers' context, SK hynix' HMSDK cpacity expansion[1] does the works in
two asynchronous threads (one for promotion and the other for demotion), using
DAMON in kernel as the core worker, and controlling DAMON from the user-space.

>  
> I had recently posted a patch [1] to improve this in the context of slow-tier
> page promotion. Here, Scanning is done by a global kernel thread which routinely
> scans all the processes' address spaces and checks for accesses by reading the
> PTE A bit. The hot pages thus identified are maintained in list and subsequently
> are promoted to a default top-tier node. Thus, the approach pushes overhead of
> scanning, NUMA hint faults and migrations off from process context.
> 
> The topic was presented in the MM alignment session hosted by David Rientjes [2].
> The topic also finds a mention in S J Park's LSFMM proposal [3].
>  
> Here is the list of potential discussion points:

Great discussion points, thank you.  I'm adding how DAMON tries to deal with
some of the points below.

> 1. Other improvements and enhancements to PTE A bit scanning approach. Use of
> multiple kernel threads,

DAMON allows use of multiple kernel threads for different monitoring scopes.
There were also ideas for splitting the monitoring part and migration-like
system operation part to different threads.

> throttling improvements,

DAMON provides features called "adaptive regions adjustment" and "DAMOS quotas"
for throttling overheads from access monitoring and migration-like system
operation actions.

> promotion policies,

DAMON's access-aware system operation feature (DAMOS) allows setting this kind
of system operation policy based on access pattern and additional information
including page level information such as anonymousness, belonging cgroup, page
granular A bit recheck.

> per-process opt-in via prctl,

DAMON allows making the system operation action to pages belonging to specific
cgroups using a feature called DAMOS filters.  It is not integrated with prctl,
and would work in cgroups scope, but may be able to be used.  Extending DAMOS
filters for belonging processes may also be doable.

> virtual vs physical address based scanning,

DAMON supports both virtual and physical address spaces monitoring.  DAMON's
pages migration is currently not supported for virtual address spaces, though I
believe adding the support is not difficult.

I'm bit in favor or physical address space, probably because I'm biased to what
DAMON currently supports, but also due to unmapped pages promotion like edge
cases.

> tuning hot page detection algorithm etc.

DAMON requires users manually tuning some important paramters for hot pages
detection.  We recently provided a tuning guide[2], and working on making it
automated.  I believe the essential problem is similar to many use cases
regardless of the type of low level access check primitives, so want to learn
if the tuning automation idea can be generally used.

> 
> 2. Possibility of maintaining single source of truth for page hotness that would
> maintain hot page information from multiple sources and let other sub-systems
> use that info.

DAMON is currently using the PTE A bit as the essential access check primitive.
We designed DAMON to be able to be extended for other access check primitives
such as page faults and AMD IBS like h/w features.  We are now planning to do
such extension, though still in the very early low-priority planning stage.
DAMON also provides the kernel API.

> 
> 3. Discuss how hardware provided hotness info (like AMD IBS) can further aid
> promotion. Bharata had posted an RFC [4] on this a while back.

Maybe CXL Hotness Monitoring Unit could also be an interesting thing to discuss
together.

> 
> 4. Overlap with DAMON and potential reuse.

I confess that it seems some of the works might overlap with DAMON to my biased
eyes.  I'm looking forward to attend this session, to make it less biased and
more aligned with people :)

>  
> Links:
> 
> [1] https://lore.kernel.org/all/20241201153818.2633616-1-raghavendra.kt@amd.com/
> [2] https://lore.kernel.org/linux-mm/20241226012833.rmmbkws4wdhzdht6@ed.ac.uk/T/
> [3] https://lore.kernel.org/lkml/Z4XUoWlU-UgRik18@gourry-fedora-PF4VCD3F/T/
> [4] https://lore.kernel.org/lkml/20230208073533.715-2-bharata@amd.com/

Again, thank you for proposing this topic, and I wish to see you at Montreal!


[1] https://github.com/skhynix/hmsdk/wiki/Capacity-Expansion
[2] https://lkml.kernel.org/r/20250110185232.54907-1-sj@kernel.org


Thanks,
SJ

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-CO1-obe.outbound.protection.outlook.com (mail-co1nam11on2052.outbound.protection.outlook.com [40.107.220.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 3B5AC1C5F14
	for <linux-kernel@vger.kernel.org>; Thu, 23 Jan 2025 10:57:46 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.220.52
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737629869; cv=fail; b=jYvjgpJUpO1m+Elpl/1qQF4lOHF409UTCXAbuWnxdwQEU3ZAX7yBOCcEbMRqz9Fv35Fl9h6IhqFGkhMbTYAMJxETdTggzoU17+nKlYtdTLprC9W02IhwPcryJxUckNuqxkj5fK4CyD4ZYzANyTpBZF7IRIIzY/4VfJwqLhCGML8=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737629869; c=relaxed/simple;
	bh=+y+UXWD7tkEcHB5jqvSUn3J7HqGVr/4iBmzPxu46LKA=;
	h=From:To:CC:Subject:Date:Message-ID:MIME-Version:Content-Type; b=C4xbAw2KjTsZ2kzmIoyXOyWHr25A8nCMp5ZQ8gooHer/lAhztpyRAc1tWJNr3eWLQ4aBdQ66WB7ZSrxg01QPb23s8KTt7ZUofS1O2SebLDV0MiZ7JAPNNLaiucFe3ZbZAaWhLwlnMnyw7x4VB5e20alzjrCgvPK9Rt529P7RWpk=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=doh+FO9I; arc=fail smtp.client-ip=40.107.220.52
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="doh+FO9I"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=HWppPlHAlfHbQkkjF4ucBJNAE7h3rKcvL+M7Tu8S1YpSntp5vIvvOBCqf+kcPJjIptUGwNurIowL9tLA9LX54mXWZIvoaX9mB64ZCpOUEzFpERmQ5AdJIXyFr+EGttoZnTttSTL2OOLyxOWZGRoykdpU9jVujt6m4PQMFIuFgAix3Y0BGbKWByjGR4hM9hyTJHTheVd9eUZIMIvrjFgZJXhUxrirZGtXxOq6+bmV9cTg2CJuZuBCaTecymLz4jCirV61DIH/wBMkMa4JfhLe/jPWFG4vwx4REVsuGkCGAGEAkMffmjld7Gw8hw5+YFmqrH6rljckPAPytGy6se7wOg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=U4OfIM7g8nqw+RHN+y1hZGKIwQyjMtSAYWHHPiGqC0M=;
 b=hmvSMCSbpJaGPDcH0ndZ9a1NYvRRl925CZItV+24LsBVFB39Yeaqpj0cY0dG5EFjcnVrZogeB1idsXKQYtMG6v1yYYU4reTHwa83hXfI4a9+ru+LekYVMvW94gUc2QyOIOnDS50jz0LBZ9UQ0Rz3ijfowXMuZHFdj7jz0asYqGBOAuVl3c3oNGzUc4Yzk/hbbHsyk1/mEopitt9vWOLp17y8Agt2NH2y/lvVtxODSg4GZRnst5BYVLonvnjhvRa/qX81kN1uoCLwcZIhIGXKfrdDwGiUo12mWy3CzkUITtLVn6rfNyOZgukvOkFkQLzKkJO9eUu6GZoEcelrxGUSgw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=kvack.org smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=U4OfIM7g8nqw+RHN+y1hZGKIwQyjMtSAYWHHPiGqC0M=;
 b=doh+FO9ISjbL67hDGfkQPHXmVaDNxKnuqaEh4cZzEpAaj6DiDMclnGvrZuLnp/qmJ0QfjvQgNtyIib7VxRZBQdrqFIteM0U0sau1UiOgH0Go1F7XTQSJ72E1lE34SeeECJEfuTzJ2sImSm/4mkpuIqFBUaY4TIRqlzUKYc44Oxc=
Received: from BL0PR02CA0039.namprd02.prod.outlook.com (2603:10b6:207:3d::16)
 by CYXPR12MB9340.namprd12.prod.outlook.com (2603:10b6:930:e4::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8377.17; Thu, 23 Jan
 2025 10:57:44 +0000
Received: from BL6PEPF0001AB4B.namprd04.prod.outlook.com
 (2603:10b6:207:3d:cafe::35) by BL0PR02CA0039.outlook.office365.com
 (2603:10b6:207:3d::16) with Microsoft SMTP Server (version=TLS1_3,
 cipher=TLS_AES_256_GCM_SHA384) id 15.20.8356.21 via Frontend Transport; Thu,
 23 Jan 2025 10:57:43 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 BL6PEPF0001AB4B.mail.protection.outlook.com (10.167.242.69) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8377.8 via Frontend Transport; Thu, 23 Jan 2025 10:57:43 +0000
Received: from tunga.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Thu, 23 Jan
 2025 04:57:33 -0600
From: Raghavendra K T <raghavendra.kt@amd.com>
To: <linux-mm@kvack.org>, <akpm@linux-foundation.org>,
	<lsf-pc@lists.linux-foundation.org>, <bharata@amd.com>
CC: <gourry@gourry.net>, <nehagholkar@meta.com>, <abhishekd@meta.com>,
	<ying.huang@linux.alibaba.com>, <nphamcs@gmail.com>, <hannes@cmpxchg.org>,
	<feng.tang@intel.com>, <kbusch@meta.com>, <Hasan.Maruf@amd.com>,
	<sj@kernel.org>, <david@redhat.com>, <willy@infradead.org>,
	<k.shutemov@gmail.com>, <mgorman@techsingularity.net>, <vbabka@suse.cz>,
	<hughd@google.com>, <rientjes@google.com>, <shy828301@gmail.com>,
	<liam.howlett@oracle.com>, <peterz@infradead.org>, <mingo@redhat.com>,
	<nadav.amit@gmail.com>, <shivankg@amd.com>, <ziy@nvidia.com>,
	<jhubbard@nvidia.com>, <AneeshKumar.KizhakeVeetil@arm.com>,
	<linux-kernel@vger.kernel.org>, <jon.grimm@amd.com>,
	<santosh.shukla@amd.com>, <Michael.Day@amd.com>, <riel@surriel.com>,
	<weixugc@google.com>, <leesuyeon0506@gmail.com>, <honggyu.kim@sk.com>,
	<leillc@google.com>, <kmanaouil.dev@gmail.com>, <rppt@kernel.org>,
	<dave.hansen@intel.com>, <raghavendra.kt@amd.com>
Subject: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion based on PTE A bit scanning
Date: Thu, 23 Jan 2025 10:57:21 +0000
Message-ID: <20250123105721.424117-1-raghavendra.kt@amd.com>
X-Mailer: git-send-email 2.34.1
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB03.amd.com (10.181.40.144) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL6PEPF0001AB4B:EE_|CYXPR12MB9340:EE_
X-MS-Office365-Filtering-Correlation-Id: cdd0ce97-b5ca-48a9-b947-08dd3b9cc368
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|36860700013|7416014|82310400026|376014|1800799024|13003099007;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?0ZGfJfg7bu6dR+DuvN54Dcn8nGgHQ8rhm/r+uQFKYRmJb8ckW0HZWySouOmi?=
 =?us-ascii?Q?/kRjUh6lYnWChdrorHrJMTF2WvefJZYyf2tfbDLSK9TNoqVuLhAc/Np+IbxO?=
 =?us-ascii?Q?WoWqWu0f66I6gmYgjIxkJd4rrFOWMXIg687ioAB3r5MxapBSCuIoT1svVeVn?=
 =?us-ascii?Q?NYW8Nc5opoVwIpTGonUQg/rVFf+5hUE2XJTY4uKST1E2bf+JVI6alkZmaJy1?=
 =?us-ascii?Q?zEIRkg06QTUIrP9QX2hggcqOoWeYpLtWABB34i24mZXzm1nBuE+d+XbODcFv?=
 =?us-ascii?Q?GXcVSfVWOPk/BCctTOVGckcglCPj/CU7CJM/EGpk8VHxbiuJM1y9J8WcNSWk?=
 =?us-ascii?Q?8fRPkzXTureXPBWDsIOD27Ph3EAD/qgU++M7fhPVgBu2lpC319iOOYT18g5D?=
 =?us-ascii?Q?ArJfDV8NKlLlS7det2V1ad2HlDJD+zc1Qw9KMruTtFggYJtY0uSWrd0Iky4d?=
 =?us-ascii?Q?bJ13MblE1OQEdW4CcbeG0wTvaXXrMXuA2Mkh4SfOiV0VkFu0jOfGahNOoPAR?=
 =?us-ascii?Q?+4p4hxFWe8ShDN1OLNGd1QKjE3mUzXgHbKF8EJIavEjR5xc0cONTy4Vk7NPi?=
 =?us-ascii?Q?oVtksUGOerItKDoUp4eY8ErbBa48s+DqAZuwJl9WIO4PWtpY7cig1p3PEbKp?=
 =?us-ascii?Q?5qJXc+uZOEf48x9Nvnew0p4up2/+3YMBb/4O3In0yIDF4VUoCxLX7P4fE9D1?=
 =?us-ascii?Q?R7PUiib60Lj4lgNnNBF3M+VsKDKPJCcqn05ndYKQaYX60TWsyoAHL93jFAlZ?=
 =?us-ascii?Q?KdXgn1HB5RiIZHcodnCa989hflLDJLWLNgEpR9PMuX+KEKS66Yg4WxJEmbsb?=
 =?us-ascii?Q?+NnQBdjtQmBgIzgoKwxfrMbJPvrTD1yiK3v7XaThBfaPAQN6MpQJr4y7X52b?=
 =?us-ascii?Q?UWy8NDS9iHBiHMcJ1rEL2M1liiZZqCVeQjzF3bYpRFN5YewFG3MwE+BEr3aT?=
 =?us-ascii?Q?bAqhADuLywhR8KAnv5WisW3oFTc1Sffh2RuqLmXWSgSNAqdok9au+F6HEzSK?=
 =?us-ascii?Q?H2E0tT5vF9gzf2udWTC5PSG9miPp9VxhBvubeKgMu18aPbGDdSKRuhgIZ/AE?=
 =?us-ascii?Q?SmEplvT8r28JiN7ryl5yQfoIDGf3lQPCgu3Rf08PVa1qcE1r9XN3K06XIxjE?=
 =?us-ascii?Q?DgHqDpb/JiMvAvH0wDE1L3khoB8XBFhzK3vsE6/kFM5ybEHgMxpIirdjyXUk?=
 =?us-ascii?Q?3wUBgilhpiZ5xmAwLIRK4aaQh3+O3AXlhmqraFLfuDqc8H0oF1Mp/9gmQfNT?=
 =?us-ascii?Q?IuRnO3+PnYlN1Kf0o6XZZhupbSj6Ifi164N796TkV6Os2FgP4DEdAACfKiAH?=
 =?us-ascii?Q?un17GPYiLr0kpI1QdhRXd5u1/zQ/NqNffKTLKczuZsNycyrkusOJhLrQxM9S?=
 =?us-ascii?Q?rpebTTpfkKRfrbIYCzNSDBl9IA71yrHAqoGzMDpY+LHbeKhRK0zyl2jk40Fj?=
 =?us-ascii?Q?Bw+eVWbaM3Ax3dsrH8wnYy1tqdSLgQyh?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(36860700013)(7416014)(82310400026)(376014)(1800799024)(13003099007);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 23 Jan 2025 10:57:43.5210
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: cdd0ce97-b5ca-48a9-b947-08dd3b9cc368
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: BL6PEPF0001AB4B.namprd04.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CYXPR12MB9340

Bharata and I would like to propose the following topic for LSFMM.

Topic: Overhauling hot page detection and promotion based on PTE A bit scanning.
 
In the Linux kernel, hot page information can potentially be obtained from
multiple sources:
 
a. PROT_NONE faults (NUMA balancing)
b. PTE Access bit (LRU scanning)
c. Hardware provided page hotness info (like AMD IBS)
 
This information is further used to migrate (or promote) pages from slow memory
tier to top tier to increase performance.

In the current hot page promotion mechanism, all the activities including the
process address space scanning, NUMA hint fault handling and page migration are
performed in the process context. i.e., scanning overhead is borne by the
applications.
 
I had recently posted a patch [1] to improve this in the context of slow-tier
page promotion. Here, Scanning is done by a global kernel thread which routinely
scans all the processes' address spaces and checks for accesses by reading the
PTE A bit. The hot pages thus identified are maintained in list and subsequently
are promoted to a default top-tier node. Thus, the approach pushes overhead of
scanning, NUMA hint faults and migrations off from process context.

The topic was presented in the MM alignment session hosted by David Rientjes [2].
The topic also finds a mention in S J Park's LSFMM proposal [3].
 
Here is the list of potential discussion points:
1. Other improvements and enhancements to PTE A bit scanning approach. Use of
multiple kernel threads, throttling improvements, promotion policies, per-process
opt-in via prctl, virtual vs physical address based scanning, tuning hot page
detection algorithm etc.

2. Possibility of maintaining single source of truth for page hotness that would
maintain hot page information from multiple sources and let other sub-systems
use that info.

3. Discuss how hardware provided hotness info (like AMD IBS) can further aid
promotion. Bharata had posted an RFC [4] on this a while back.

4. Overlap with DAMON and potential reuse.
 
Links:

[1] https://lore.kernel.org/all/20241201153818.2633616-1-raghavendra.kt@amd.com/
[2] https://lore.kernel.org/linux-mm/20241226012833.rmmbkws4wdhzdht6@ed.ac.uk/T/
[3] https://lore.kernel.org/lkml/Z4XUoWlU-UgRik18@gourry-fedora-PF4VCD3F/T/
[4] https://lore.kernel.org/lkml/20230208073533.715-2-bharata@amd.com/
 

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-DM6-obe.outbound.protection.outlook.com (mail-dm6nam10on2082.outbound.protection.outlook.com [40.107.93.82])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CF50317BA5
	for <linux-kernel@vger.kernel.org>; Mon,  7 Apr 2025 03:13:51 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.93.82
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1743995633; cv=fail; b=SGfG1kibjbf39cn0fK+APCWCxhHiKT3kqmDp7S2JKngf6cORcuhA+hk84ZfY9W2hEpwAoz0bYO687WnHYS4kW9cZUHB1gdQ49a+i5B/yItkw+f9bZJLVKoOCr+Ap5xbEyMnhpVHlrNdNz5MazTaA6ItFX81dN10GrCcAXWMcxS0=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1743995633; c=relaxed/simple;
	bh=p+986X7FjTT9yJD5F4PIH8POh04usVuI4SoK6de3uTs=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=P2ovepcnJC+ecP/OpNVIQGkcL2MIX/SEM0KeYqmuKTQn2PE0hQOfKHgATMIrKfd2BDoJ2HGzmqT38oLVdbwNd886w59FnJGYxRu+zNZ82Y6V7vkmJGfennPCSWXPMNi2Nx0RJ4kKDUVUXdC6eUouavg/wBGK4FYSaGfjgtoopMw=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=o/S/DpBw; arc=fail smtp.client-ip=40.107.93.82
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="o/S/DpBw"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=NTRTjWiwuGQRZE19tY7lOyP1M11wHktN40Oj3BPacMKa0T+4MspczUB3t8c7YERq+ZQ2ncHxfvrRDFMJWqyW24+Lhge5tRXvtkOYCYX5ygwR+uPzXMbaqWS3Y8BWHCM8jTXmgcb9zzxuPVB9Je2vBYQyk9sbU/m1j6mptiTCPTGkl/TiuX8DGfv2Yp6kLX31cRdt8D//BHtSjGJ04zbYxViwwulay8rBo8TpbhMk++SBp1fiL/aETaM/Wt3koE/Z7rOy9hplt+lXCyABooGqexRShrpYNUynmVQepQ78JT/FYlRBy2jaPOzhrwm2KaESenrhNi1ykfJt2RHZpswNLg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=fUFCNqaa6VmRQ4Xmgiako4nVq/cXBPfS82vjkNPSuX8=;
 b=FwKoyoUdcKo7R5sz9NynKg27d3ML8PK3cqXfqSQ9QXsv+ay4edCTsqr+Pveob4TBbKnujCMFbL50JfomwseJtrYft0EbMCjqKXNWUGpF1dDD2weS9Vjy1j3nKcgh3xU73kWcEIoxBkIrJfSsQufvKXF48/eY3lu4z7gVtjiByWRe6uuY5c2ugwCYz38E6+sLY8fuD2et7wtRJQcmmcmf1aIVGxSQqF+XNUBoaQxGgR3O+Bxz2x1dNa41Zt5/ouY1fzcdEmkNDgPjIFSkP1Lo8wA046Pg3hFGCWKcIoBs5NSH0EA2rPUccK6Rp0Pn4l+rUbJeMio3tnCSK6WoeOMeEQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=fUFCNqaa6VmRQ4Xmgiako4nVq/cXBPfS82vjkNPSuX8=;
 b=o/S/DpBwnBINtYc85db1QMOsK34sdgY29JOkPVCPOXdZbvwTBXBOeSUNuEW7TSJHB0Ii0uSOt8B0I6OHQfDNuvPQTwfLVzje5htZWetwC6l4vsSBrRN+0LcSBu36pv2xhqZ/IJTXDtS06HHiffk4eVvdzHq275EDvr+iI45yLnY=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from IA1PR12MB6434.namprd12.prod.outlook.com (2603:10b6:208:3ae::10)
 by MN0PR12MB5833.namprd12.prod.outlook.com (2603:10b6:208:378::21) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8606.34; Mon, 7 Apr
 2025 03:13:49 +0000
Received: from IA1PR12MB6434.namprd12.prod.outlook.com
 ([fe80::dbf7:e40c:4ae9:8134]) by IA1PR12MB6434.namprd12.prod.outlook.com
 ([fe80::dbf7:e40c:4ae9:8134%3]) with mapi id 15.20.8606.028; Mon, 7 Apr 2025
 03:13:48 +0000
Message-ID: <ebf2b8e7-8978-4e8f-9a44-cb06e6e69a83@amd.com>
Date: Mon, 7 Apr 2025 08:43:35 +0530
User-Agent: Mozilla Thunderbird
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
To: Raghavendra K T <raghavendra.kt@amd.com>, linux-mm@kvack.org,
 akpm@linux-foundation.org, lsf-pc@lists.linux-foundation.org
Cc: gourry@gourry.net, nehagholkar@meta.com, abhishekd@meta.com,
 ying.huang@linux.alibaba.com, nphamcs@gmail.com, hannes@cmpxchg.org,
 feng.tang@intel.com, kbusch@meta.com, Hasan.Maruf@amd.com, sj@kernel.org,
 david@redhat.com, willy@infradead.org, k.shutemov@gmail.com,
 mgorman@techsingularity.net, vbabka@suse.cz, hughd@google.com,
 rientjes@google.com, shy828301@gmail.com, liam.howlett@oracle.com,
 peterz@infradead.org, mingo@redhat.com, nadav.amit@gmail.com,
 shivankg@amd.com, ziy@nvidia.com, jhubbard@nvidia.com,
 AneeshKumar.KizhakeVeetil@arm.com, linux-kernel@vger.kernel.org,
 jon.grimm@amd.com, santosh.shukla@amd.com, Michael.Day@amd.com,
 riel@surriel.com, weixugc@google.com, leesuyeon0506@gmail.com,
 leillc@google.com, kmanaouil.dev@gmail.com, rppt@kernel.org,
 dave.hansen@intel.com
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
Content-Language: en-US
From: Bharata B Rao <bharata@amd.com>
In-Reply-To: <20250123105721.424117-1-raghavendra.kt@amd.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: PN2PR01CA0090.INDPRD01.PROD.OUTLOOK.COM
 (2603:1096:c01:23::35) To IA1PR12MB6434.namprd12.prod.outlook.com
 (2603:10b6:208:3ae::10)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: IA1PR12MB6434:EE_|MN0PR12MB5833:EE_
X-MS-Office365-Filtering-Correlation-Id: f6d0ada4-b0b6-4d6d-3a57-08dd758236c0
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|366016|1800799024|376014|7416014;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?NjlpaEhFZHVRYXA3dnQrWXg0VUFxTUJWOXpLTm9SNHdBMk54eG5MQXpwbnVK?=
 =?utf-8?B?eFA4eGl4SXBTMHdXZWRrdi81M2c2SksxVlMxVzVIR201SDVSd3pFQUFOTUFS?=
 =?utf-8?B?UzNYMWlzcEUzS3hUZFNxOXNVVkQwUm95MHRLM3VyRzh2MzBzTDl2ZG8vTStu?=
 =?utf-8?B?N3IrTjNxMFNjM2FjTlJoTkI0L2l3RTVlWVJ4R1ByMUxEV3RMOFBOdGdJTDRl?=
 =?utf-8?B?Tmk4UDFuWlB4WGRENWFVclo5WDVDeUZQclFHSzViOVZyWWtzZTM1d0xvM0hM?=
 =?utf-8?B?NlZQTUNlczFERnJLcVBBMnNqdGIwSXR4M1JNMkhqTk1jVFIwVDltWWo1Y3Rz?=
 =?utf-8?B?N01ITVF5UzBYZUVBeG5teHlqMWhJYWFjak93K2NwbzhlOTJ2YWRrdFcvb2FW?=
 =?utf-8?B?R2tvQ0M5dWFFZEtCeHpjWGVmQkxzWnlNZXVUYmVPanVSMnZaTDY3Y082RkZI?=
 =?utf-8?B?ZnpFZlFVL3FmTTJiNUxqRHd2RmtIT2x4ZDF6blBBU2QzcWJ4QXh6VE5YUFZM?=
 =?utf-8?B?SU40YjQ0Z3YwL3crRytua2dMNlhaUTJ0NnNrYWhFZ1FiZjdrL0VwR2R3YlNn?=
 =?utf-8?B?Wjh5VG1zUmw5c2tSUnk0NVdxOTRzNmNwOEc4NzhYR1haeDRNMzdWOGNvOGgy?=
 =?utf-8?B?SFVScXovQkQxQXVkclVDWEJWaFU4dXdsTmw4VTkvemdMelV2NXExTjVCbEVF?=
 =?utf-8?B?Ui9zcmF1Nmpkc0xoRXZjeElEUVRXaWh4WUlWakNXY2pPN1kzUXJBeUxOTjRQ?=
 =?utf-8?B?ZU0wMkNxNWRhTVhoeG1WbzVKSlVNQ0tSRzI4UXFVeFpESW04OFBMcGhDZTRQ?=
 =?utf-8?B?aG1YMnN4Ty9Gc05qcVBJVnNFQTBrZTBRd2VzZ1pqdFk0TTI4TWpuSWlwZVhV?=
 =?utf-8?B?WlVCd1EzR3llZGhjcEl5RitDdmpFRWZBR0FzY1BST3pVNlZyVlNiRUJlbUl5?=
 =?utf-8?B?S25SV2x6bU9xK0dpckpXQVd4TFFkUlZOUHBoL2lqREMyWnM4ZmdDY29NRkZZ?=
 =?utf-8?B?UXdzakdCVWhScE12RTRLZ2hEU1g1b2xkV21uYmZCNDJja3VFTDJPeTF6cnpz?=
 =?utf-8?B?M1EwUHlJaW1NREF0a0ZheEJPZzZiSUJaQmlQZGFRbEtMMS83SUVSNEdiZTZG?=
 =?utf-8?B?elVCbHRDdGE5bWRzbjdKZzl5S0dpUXg1ZXNnK2lWcFB0RktaWnYwZVNPc1F5?=
 =?utf-8?B?djlIUWNzem5vTGZZVDNUc0ZQTG82TExvaEp1ekZLUU9aTjhpTFVXZkRteUpv?=
 =?utf-8?B?QmRERk1QcS9OWmc1WW5CR3ZyYUVZSGNqWTJkeDNoVUVLaCtVdTJvYWQ5dmJn?=
 =?utf-8?B?TlhWc1A5a1lGamI0aDJYTXlCSkw0UHlXTnV3US9weVl5MURNR1pwMUd3Q1RK?=
 =?utf-8?B?UEVIOVR0ZktZYUErdS9iaXhGOEt0bEJjVE5GRnFMbk94MEpKdm1Ec0V2RVEw?=
 =?utf-8?B?T1QxY0tYY0wzam9uaEUrSFdwaHFIeWNodVBNdjRiQlVxS2dzY1RzM1RuZUh0?=
 =?utf-8?B?d09ueVh0dlRFUDZnSzV3YUt0Q1lTSjBUaEdxNHI1ZVhvWmdWdFlpU2JscHVp?=
 =?utf-8?B?dHhkdStZblR2VGpMZkhlMkZYa1p3WUZwY202aTdQR09UdEtqUElKOW1EUERV?=
 =?utf-8?B?dElYMXZqOFZxbE43Y3lBT3JjNW1nN3JVS3dYeUM5WjFqNWVXeDBmYUxSTVps?=
 =?utf-8?B?akkweFdNYVVDSUhLQjk2NEFCdDM2OXRBY0RLQ2NxOEVOL2V6REpkcU8xY0xS?=
 =?utf-8?B?NFVTU2hQMVo2dmdqSE5ZU1lleVk3VkZQbW1VWnVqQU9LWk91b2srS0RRcEhn?=
 =?utf-8?B?V3p6bkUwbHM1WGpkL0dUQT09?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:IA1PR12MB6434.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(366016)(1800799024)(376014)(7416014);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?NVRrenEyWlROMmc3SGZ2MFhKR1I0RFNIYmg0VEwyZHRnKzhsdUc4VzA4QTBt?=
 =?utf-8?B?RjJKUXo0cWJBeDVQM1lZSHl4WUNmcmRkZHZMSjVxL0djRHlYeEhpUkVwbE94?=
 =?utf-8?B?NzRVRTN5QVhGNE82YVh0MjAvckdxWEhoNWh5SkQ1cGtjMmgzUzFqNlBnSUJi?=
 =?utf-8?B?Q2tmQU5kTkhndkFJb0lyaTBuOU0zNTlvZmZrMGs1eWJCTUxMaXBLekcrQVA2?=
 =?utf-8?B?WEhlaW9BS1dENitrb3BKaVFzQTZjd1hSSG1PUlBNNDNlSE0rcXloMUFzQ3dt?=
 =?utf-8?B?TVpwb013NUh1TWJoWExBcWxZSlU5SGxNTGQ2Wnl0R1F0ZUx3bnR0dXAwTk1m?=
 =?utf-8?B?K28rYkc1WXBtY1pDSU5GZXhyeS9JSUM3bE5rTnF2TVNGVTZzTC9kSUhlWFJl?=
 =?utf-8?B?T09zMFUrL2kxUkppc055dzBGQmxyTzFuc2FqSmJrNkRVaDBPTTg3eFR3VEpY?=
 =?utf-8?B?R1NWanJ3L2dzRDZSOFZGNkQwVUNyd1FiZDdpdTZtUzcwWUdBYy9aczBXZ0NV?=
 =?utf-8?B?bHloMS9EZXZ0UzRybEpBdU9GNkgwdmp0TFdqYWd1MEsxVEFwcEU5Qnc1ck5W?=
 =?utf-8?B?LzZ2RnArYm0vMUM5ZngxOWhTSFVYN0J3bHVIUDVDS2lVajFqVXY1akNCNDhy?=
 =?utf-8?B?ZUVoN3didlM4VzRxQUtsL3JvRnZ0VUlDM1NoL1p0UHRxUzYzakVITEhXZ1cy?=
 =?utf-8?B?MFBGTWhEVHVjQTZUc3BObThCTGhXWS9EQ0R2cStBUzRacGRIMkEzVm42NHhr?=
 =?utf-8?B?SEN6ekMrWXRQSno0ellTQVgyQnJxUlh2ZXRrYkg4MWlzQnE1WERKbHh6cmR6?=
 =?utf-8?B?S3UvL1ByRXhmOWJlSHJmLzc2TUVlQnBaSEsrYnNNNERDdFlxb3p3OWdNNHNI?=
 =?utf-8?B?VmpzQzZKaEUrYzlEOWRyRGxTK2V3VEdZUGI3WGd0VVhycGlFM0FKUFBCWXM2?=
 =?utf-8?B?WkhkV0Y1UEczN1NWcnN6aFJPME5SN3BTK041eGxzaUVFU0hWT1k4QzdHVUlG?=
 =?utf-8?B?YWt1dkIySUpiWFlhTTc2ZTJhWUZHSWxHc3k4L25FVXpFbEFBZ1R4YW44b2J1?=
 =?utf-8?B?RzJzZE82UUtPNjhBM1pJUXRQWFVWYnlNaGhFT2l5WktOakNXZ21tOHRuTWth?=
 =?utf-8?B?Wk80Um0zaUozQUwxQ2lTL29idmF4L3Fpc1V3YUVZTGpqMXp3eE12T3YrYity?=
 =?utf-8?B?QllxYWhCZ3VTaGN3OFAxSEkvWk1zY3Rpejgxa3dyMW5FdG9IVHVyaDRFejNF?=
 =?utf-8?B?bGdYQTFwWW1ud2dhd1ZPbnVjTTFoUHV4a1BMUjhrNFFEcE81emlVMDI2bGFp?=
 =?utf-8?B?WjM0eTllQlowbEFQQ0hjbnZrMjU0WWhteS9SVE1meDkraXdoaFk4THIxUGdF?=
 =?utf-8?B?RXJxbmZyV0Q2S3JqUnVpb1ZIWUE4ZDQ3QmZQbEh4RDlRZ0dKK2ppN3pOcS9J?=
 =?utf-8?B?OVd4VGZCTFd2dmhKenlxZTdudDAyNXVsNkh2WXlLeTFrVUEzSkl4WG8wVGhH?=
 =?utf-8?B?aFV6ODdQVUprblFLSlV1aWdENG1NQlVvT2VYdGFWaEtETUFaOThNNUtMenZF?=
 =?utf-8?B?N1crNlNrYVE2eUg1bVdXQTJ1cVNuUVZRNWxMcTkwSm8yaXh5QThWNWUzZmpH?=
 =?utf-8?B?MVhGbDYveU8wU1o4VFhtMTB0Q2ptd0d5a3hVeEFBZ2N1ckpMRHBNdlpXQUd2?=
 =?utf-8?B?WHBpeHBpeHdaSjh2bmJmVXZLRk1nZEpYdGsxRWNQaDVQd0IyVE5pOVhxd0xT?=
 =?utf-8?B?ZHB6eElaNk1ZeEw4SG5wOHFhUmN2YnhReHRYTTlYYTFFTmJvcXNWeDBEMGVY?=
 =?utf-8?B?dkU4RjRKc3FoOGVpNlNmK2dmcU9GcE5jcXNVeGp6RTFZNXlBYUdKd3Myb1lh?=
 =?utf-8?B?ZE5VOEFpMjZ1WFdCY3g3MkoxL2JSNkFUSHd1T0d4TGJTc3ZkcStHa3BSLzA2?=
 =?utf-8?B?NDczVlkyQVgvcjRoODRpdm91SkUxWEVWT3RxdlN2V2F3M2VmQTlvdVRQSkln?=
 =?utf-8?B?Z2FiNVhkTG9PWldRY0M4UDFVaDdQbmlsU1hkKzlaQVUwYmhFdVM1ZWlBaWhr?=
 =?utf-8?B?RkU0MU9WYWtPV3d5V0RvK0JUSzZxcWdNaC9IT0pYNFBVd1JFZGlTcXUyRjdK?=
 =?utf-8?Q?i01bHHYxNUlfaT7BJFVDDKwp6?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: f6d0ada4-b0b6-4d6d-3a57-08dd758236c0
X-MS-Exchange-CrossTenant-AuthSource: IA1PR12MB6434.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 07 Apr 2025 03:13:48.6488
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: Y7d9O/SMXqVlVrCxd4oxut1B/WGi5A8Cc9DCf1JK6JrS6q+g6bSfN7lH5feIMASVD/jI64htKHEiLqfWqQqHQA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN0PR12MB5833

On 23-Jan-25 4:27 PM, Raghavendra K T wrote:
> Bharata and I would like to propose the following topic for LSFMM.
> 
> Topic: Overhauling hot page detection and promotion based on PTE A bit scanning.

Slides that were used during LSFMM discussion -

https://docs.google.com/presentation/d/1zLyGriEyky_HLJPrrdKdhAS7h5oiGf4tIdGuhGX3fJ8/edit?usp=sharing

Regards,
Bharata.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (mail-dm6nam12on2080.outbound.protection.outlook.com [40.107.243.80])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CD8F74400
	for <linux-kernel@vger.kernel.org>; Fri, 14 Mar 2025 02:13:06 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.243.80
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1741918390; cv=fail; b=tph+SfmWZoSDJ70KX6aWJByQ+ScJQ5X3C47SHsHdNOtaeccd70Nguk3uoZUnsCT7S8E7/LIGedf9tL2dcfHsPE6hltugWeIvhp2S16Lc8iDAgh3euttKTnqO8gn9KQGJGLmtZ8z7cg1ISOWymczpwqGJ95yKcnjm9RLCjlO4OhI=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1741918390; c=relaxed/simple;
	bh=htpuAYnhdZIpsMd6Nx9dqyNpViuE4Wfu3I6+ebaQvX0=;
	h=From:To:CC:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=euweKuOR4HWhS3QvWqkvSC5R+hSGiDg63NkhtMS6waDrwmtZv91ioeC6J9Orbalwoub4TS2YTBjNClaFm89fguX9pE5T4ONCvxM9SOrnzn3aVu/bnlSCTt/q6Po7jkHioJTwVw2qejxn55IoZq9D6HMBHtF6GotLk1crh1wwGnY=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=tzTTXyFu; arc=fail smtp.client-ip=40.107.243.80
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="tzTTXyFu"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=oWXVJZB+AVfvx8KPgdmQvnVuIx60Fh5q6s9ZItil+KXxCMwqfcEMBZaWw98zUneAakRWvEWfzxRxj1L17TE6zbWGWYYOb+qLA5ilf0XY2qOgUqD5GVU4zZ1jgW25OOEMeyhlcxbsXnjQPWdCEn4WAuwbBBIvbL9W5geooFMBMM8npvkggbMTP6HEY+M8wAMeDEp3QhdskW7riX4oHWXq3B/+/DLxLkSlb1f2pMNvYdoiJhENxp9BnDuQdGQ3bc0sJj43VGGWXUoSAOPR3EaFP2H2a4xVXbZLqeify2VCunsk1JIdeb0SyGehjlay9SM1fBIz53YJU87jsqPFUQgkVA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=9+TaagNmerc8UQTFJWAuzDWVvuAubGqGqx7l/9+zPnk=;
 b=qpFHBAPODKldWG0Witroyv0UEWMzU16XqSm+eUWeGjleLS30sWl8lMnBTmm1fHnMfAbXlJJpPAs+jQgy3Uhtc0jpUcAuv62rgd1/EmqKPlmocZceNHgBZTDvvK2KdT2ggqKo1G7dgvzXkex52OaDE7OIGBzFWfUwg0j5EbT31wjg9VI+QMSRRE460IsZ0453KVAhKi58d3tvqXKNUCXxFbMTSMlc5vAsaGNjUJ2SnBRvMqT5Q84iP9XEpzJGWdUtddkS3DxDCvXq2ITYCftAPojdOUzRlV5z7+q/b3QCLhwUV8YwQ3iJZsmAUagF/dZQTIuh8gHeXK9X67jMMMufXw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=arm.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=9+TaagNmerc8UQTFJWAuzDWVvuAubGqGqx7l/9+zPnk=;
 b=tzTTXyFuH7MhAQivLslD9UJI3+kQfylFYE34VoapFTvYreY7pXOPegwAQ1lGJSxIdSN/OEQBIQyh0+0ZHkSj3nbgYUDcFf1crK/0kzvn81QGXn+ecgttQDeBg06e+RdZST2Zmp+WfhTfVRbIewemAM6/zt2zpu7AcNCMi0ik6Vg=
Received: from MW4PR03CA0233.namprd03.prod.outlook.com (2603:10b6:303:b9::28)
 by MN0PR12MB5739.namprd12.prod.outlook.com (2603:10b6:208:372::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8511.28; Fri, 14 Mar
 2025 02:13:00 +0000
Received: from SJ1PEPF00001CE6.namprd03.prod.outlook.com
 (2603:10b6:303:b9:cafe::85) by MW4PR03CA0233.outlook.office365.com
 (2603:10b6:303:b9::28) with Microsoft SMTP Server (version=TLS1_3,
 cipher=TLS_AES_256_GCM_SHA384) id 15.20.8534.27 via Frontend Transport; Fri,
 14 Mar 2025 02:13:00 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 SJ1PEPF00001CE6.mail.protection.outlook.com (10.167.242.22) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8534.20 via Frontend Transport; Fri, 14 Mar 2025 02:13:00 +0000
Received: from tunga.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Thu, 13 Mar
 2025 21:12:49 -0500
From: Raghavendra K T <raghavendra.kt@amd.com>
To: <raghavendra.kt@amd.com>
CC: <AneeshKumar.KizhakeVeetil@arm.com>, <Hasan.Maruf@amd.com>,
	<Michael.Day@amd.com>, <abhishekd@meta.com>, <akpm@linux-foundation.org>,
	<bharata@amd.com>, <dave.hansen@intel.com>, <david@redhat.com>,
	<dongjoo.linux.dev@gmail.com>, <feng.tang@intel.com>, <gourry@gourry.net>,
	<hannes@cmpxchg.org>, <honggyu.kim@sk.com>, <hughd@google.com>,
	<jhubbard@nvidia.com>, <jon.grimm@amd.com>, <k.shutemov@gmail.com>,
	<kbusch@meta.com>, <kmanaouil.dev@gmail.com>, <leesuyeon0506@gmail.com>,
	<leillc@google.com>, <liam.howlett@oracle.com>,
	<linux-kernel@vger.kernel.org>, <linux-mm@kvack.org>,
	<lsf-pc@lists.linux-foundation.org>, <mgorman@techsingularity.net>,
	<mingo@redhat.com>, <nadav.amit@gmail.com>, <nehagholkar@meta.com>,
	<nphamcs@gmail.com>, <peterz@infradead.org>, <riel@surriel.com>,
	<rientjes@google.com>, <rppt@kernel.org>, <santosh.shukla@amd.com>,
	<shivankg@amd.com>, <shy828301@gmail.com>, <sj@kernel.org>, <vbabka@suse.cz>,
	<weixugc@google.com>, <willy@infradead.org>, <ying.huang@linux.alibaba.com>,
	<ziy@nvidia.com>
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion based on PTE A bit scanning
Date: Fri, 14 Mar 2025 02:12:31 +0000
Message-ID: <20250314021231.11824-1-raghavendra.kt@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <56872982-8676-4d65-85ef-b894728db18b@amd.com>
References: <56872982-8676-4d65-85ef-b894728db18b@amd.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: SJ1PEPF00001CE6:EE_|MN0PR12MB5739:EE_
X-MS-Office365-Filtering-Correlation-Id: d57ef602-88ab-4496-dd57-08dd629dbe7e
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|82310400026|1800799024|7416014|376014|36860700013;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?0w7CHdPtdKSMsq2tHpbxfiqzurAC8YjL0rqTL247LM04jAs/cF1rdZ8l3CKg?=
 =?us-ascii?Q?ZOksPA8KVU8HIK8g7rSgmM0iJ1/fVNRTrpS1Fe/KAyd255Tyr6Btj0Uv8eNp?=
 =?us-ascii?Q?aDFweglvNPD7xRXNQi2dHM97/sxeCk/f5cBgsqSmrUj/+CPsyhFcHn2gOc47?=
 =?us-ascii?Q?ycULKGvjsLB0DAHydv4YJmcD2j3ozm8XguQhz4bA11QKG6WR+Yj5tKsJ3b1i?=
 =?us-ascii?Q?9pmGd4vIzG0nBBKMvaZd9zxYiIbjLujCMlWVceLkFBAu8xFBKVtYAdiwf3Vo?=
 =?us-ascii?Q?to3y1oFJ73DjjQ7qvcoq4Vqy88nIB7HubSzOnYmTHDAwfCkNJt6AnlOpRyop?=
 =?us-ascii?Q?huFNNlPUVu8WA77ZXalLF2H7rguoYIo2u49qdcEGbcU9LC5cDf+uvY3iCd9b?=
 =?us-ascii?Q?wLZm6kNbCHKMgq7C6zFGGZXmw1uojXjwBUCv7WJZDNwxme8O42H0ozhn6Xyi?=
 =?us-ascii?Q?CMSroCJPlC1/eEuNvV5k1+S/ET/3b/za3VOllTumMlBNtJHbAY/JDzK1i9GP?=
 =?us-ascii?Q?ZMmS4ppDDGf5/bKeWuh1lRbOFQXeeq7gRTksuHpQl7N5BcGI6dchGgFu/vrP?=
 =?us-ascii?Q?r2w277UbyuCHwEDbh7qgiDfCv0tGrDTJPu4cNUOMXSlPWZAmeTgyWRK9H0Xu?=
 =?us-ascii?Q?BZ1nErOrVLFGFxq3qCyx4sswp9Im3ltlih3JnoSHmwwl3GHjsk2UdSExDf83?=
 =?us-ascii?Q?tCQR8m4dnlpWDKOlruB3E2c6rWhgNKvJrwxWx1ZBc+ET2C/oCUHlvagygdx+?=
 =?us-ascii?Q?RQDmYjmjn38lioN+MMj2zQ0MUyd9CArsgoEMNKQtRWe1iMPWC2d0uF0/Q1S/?=
 =?us-ascii?Q?BepsvFilFsOG/j3omBikj1HAgHHBeOIg0bVPoxc7+GOD848i+j5mfr2bC1AK?=
 =?us-ascii?Q?IqbAFCuG523amjPxlszLkBKdP3olaefOH1q/+MUmtr6Qy48gSWEdfwIJC5T0?=
 =?us-ascii?Q?2eZxfD45KrbBzT3Bb76vB25WqKnzQHgZVk6QyWAPTsmFhN/jj+MTRNt5xFbG?=
 =?us-ascii?Q?DFO8FsyEHirSjjAqM3+OIi7XwZkznJq71rxBGmqNJA6OU0IQMexjKy8GT/je?=
 =?us-ascii?Q?feTbq2BCCRTbyrcZmYaD+NPLBjkO1OF66Da4YpnyGBvHjrJemc/Xwn8jrIri?=
 =?us-ascii?Q?CVArBLX+KR/SvFamWA2QUsedCNc/Vu+3yFnaabwKBlUuEWqexNf+Jhhk/0mP?=
 =?us-ascii?Q?TTnzoCCAQMupDOcFW3ImQoID9mse59FG0UQA8+3Eqj5ZSZkMWCAnPGcwTBvp?=
 =?us-ascii?Q?s5UvxJPkv74+phAY1TLY1/89JfhAeB4/9dGK/9trIjxWPx3FNruytPE5X6ob?=
 =?us-ascii?Q?y4qLrSMR7Du1z5n6W4Ng+BdGZXwsVCP8b4jrF5zcRuDzu7SWnxja06eRXXlk?=
 =?us-ascii?Q?tKH17LaZGQnq9ZXPpY43RGboEF63sc27qwMxWX1PVG6a2ZH35XQ2lq+OtIff?=
 =?us-ascii?Q?nXrxzv6svXvGdeyyrNKD0ZQVOrnAm2iMZ5+VB9Wkt44B9XKU9LZwWDRBEXA4?=
 =?us-ascii?Q?4CrblZzwru5xrus=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(82310400026)(1800799024)(7416014)(376014)(36860700013);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 14 Mar 2025 02:13:00.0288
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: d57ef602-88ab-4496-dd57-08dd629dbe7e
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: SJ1PEPF00001CE6.namprd03.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN0PR12MB5739

PTE A bit scanning single patch RFC v1

---8x---
diff --git a/Documentation/filesystems/proc.rst b/Documentation/filesystems/proc.rst
index 09f0aed5a08b..78633cab3f1a 100644
--- a/Documentation/filesystems/proc.rst
+++ b/Documentation/filesystems/proc.rst
@@ -195,6 +195,7 @@ read the file /proc/PID/status::
   VmLib:      1412 kB
   VmPTE:        20 kb
   VmSwap:        0 kB
+  PTEAScanScale: 0
   HugetlbPages:          0 kB
   CoreDumping:    0
   THP_enabled:	  1
@@ -278,6 +279,7 @@ It's slow but very precise.
  VmPTE                       size of page table entries
  VmSwap                      amount of swap used by anonymous private data
                              (shmem swap usage is not included)
+ PTEAScanScale               Integer representing async PTE A bit scan agrression
  HugetlbPages                size of hugetlb memory portions
  CoreDumping                 process's memory is currently being dumped
                              (killing the process may lead to a corrupted core)
diff --git a/fs/exec.c b/fs/exec.c
index 506cd411f4ac..e76285e4bc73 100644
--- a/fs/exec.c
+++ b/fs/exec.c
@@ -68,6 +68,7 @@
 #include <linux/user_events.h>
 #include <linux/rseq.h>
 #include <linux/ksm.h>
+#include <linux/kmmscand.h>
 
 #include <linux/uaccess.h>
 #include <asm/mmu_context.h>
@@ -266,6 +267,8 @@ static int __bprm_mm_init(struct linux_binprm *bprm)
 	if (err)
 		goto err_ksm;
 
+	kmmscand_execve(mm);
+
 	/*
 	 * Place the stack at the largest stack address the architecture
 	 * supports. Later, we'll move this to an appropriate place. We don't
@@ -288,6 +291,7 @@ static int __bprm_mm_init(struct linux_binprm *bprm)
 	return 0;
 err:
 	ksm_exit(mm);
+	kmmscand_exit(mm);
 err_ksm:
 	mmap_write_unlock(mm);
 err_free:
diff --git a/fs/proc/task_mmu.c b/fs/proc/task_mmu.c
index f02cd362309a..55620a5178fb 100644
--- a/fs/proc/task_mmu.c
+++ b/fs/proc/task_mmu.c
@@ -79,6 +79,10 @@ void task_mem(struct seq_file *m, struct mm_struct *mm)
 		    " kB\nVmPTE:\t", mm_pgtables_bytes(mm) >> 10, 8);
 	SEQ_PUT_DEC(" kB\nVmSwap:\t", swap);
 	seq_puts(m, " kB\n");
+#ifdef CONFIG_KMMSCAND
+	seq_put_decimal_ull_width(m, "PTEAScanScale:\t", mm->pte_scan_scale, 8);
+	seq_puts(m, "\n");
+#endif
 	hugetlb_report_usage(m, mm);
 }
 #undef SEQ_PUT_DEC
diff --git a/include/linux/kmmscand.h b/include/linux/kmmscand.h
new file mode 100644
index 000000000000..7021f7d979a6
--- /dev/null
+++ b/include/linux/kmmscand.h
@@ -0,0 +1,31 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#ifndef _LINUX_KMMSCAND_H_
+#define _LINUX_KMMSCAND_H_
+
+#ifdef CONFIG_KMMSCAND
+extern void __kmmscand_enter(struct mm_struct *mm);
+extern void __kmmscand_exit(struct mm_struct *mm);
+
+static inline void kmmscand_execve(struct mm_struct *mm)
+{
+	__kmmscand_enter(mm);
+}
+
+static inline void kmmscand_fork(struct mm_struct *mm, struct mm_struct *oldmm)
+{
+	mm->pte_scan_scale = oldmm->pte_scan_scale;
+	__kmmscand_enter(mm);
+}
+
+static inline void kmmscand_exit(struct mm_struct *mm)
+{
+	__kmmscand_exit(mm);
+}
+#else /* !CONFIG_KMMSCAND */
+static inline void __kmmscand_enter(struct mm_struct *mm) {}
+static inline void __kmmscand_exit(struct mm_struct *mm) {}
+static inline void kmmscand_execve(struct mm_struct *mm) {}
+static inline void kmmscand_fork(struct mm_struct *mm, struct mm_struct *oldmm) {}
+static inline void kmmscand_exit(struct mm_struct *mm) {}
+#endif
+#endif /* _LINUX_KMMSCAND_H_ */
diff --git a/include/linux/mm.h b/include/linux/mm.h
index 7b1068ddcbb7..fbd9273f6c65 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -682,6 +682,18 @@ struct vm_operations_struct {
 					  unsigned long addr);
 };
 
+#ifdef CONFIG_KMMSCAND
+void count_kmmscand_mm_scans(void);
+void count_kmmscand_vma_scans(void);
+void count_kmmscand_migadded(void);
+void count_kmmscand_migrated(void);
+void count_kmmscand_migrate_failed(void);
+void count_kmmscand_kzalloc_fail(void);
+void count_kmmscand_slowtier(void);
+void count_kmmscand_toptier(void);
+void count_kmmscand_idlepage(void);
+#endif
+
 #ifdef CONFIG_NUMA_BALANCING
 static inline void vma_numab_state_init(struct vm_area_struct *vma)
 {
diff --git a/include/linux/mm_types.h b/include/linux/mm_types.h
index 0234f14f2aa6..7950554f7447 100644
--- a/include/linux/mm_types.h
+++ b/include/linux/mm_types.h
@@ -1014,6 +1014,14 @@ struct mm_struct {
 
 		/* numa_scan_seq prevents two threads remapping PTEs. */
 		int numa_scan_seq;
+#endif
+#ifdef CONFIG_KMMSCAND
+		/* Tracks promotion node. XXX: use nodemask */
+		int target_node;
+
+		/* Integer representing PTE A bit scan aggression (0-10) */
+		unsigned int pte_scan_scale;
+
 #endif
 		/*
 		 * An operation with batched TLB flushing is going on. Anything
diff --git a/include/linux/vm_event_item.h b/include/linux/vm_event_item.h
index f70d0958095c..620c1b1c157a 100644
--- a/include/linux/vm_event_item.h
+++ b/include/linux/vm_event_item.h
@@ -65,6 +65,17 @@ enum vm_event_item { PGPGIN, PGPGOUT, PSWPIN, PSWPOUT,
 		NUMA_HINT_FAULTS_LOCAL,
 		NUMA_PAGE_MIGRATE,
 #endif
+#ifdef CONFIG_KMMSCAND
+		KMMSCAND_MM_SCANS,
+		KMMSCAND_VMA_SCANS,
+		KMMSCAND_MIGADDED,
+		KMMSCAND_MIGRATED,
+		KMMSCAND_MIGRATE_FAILED,
+		KMMSCAND_KZALLOC_FAIL,
+		KMMSCAND_SLOWTIER,
+		KMMSCAND_TOPTIER,
+		KMMSCAND_IDLEPAGE,
+#endif
 #ifdef CONFIG_MIGRATION
 		PGMIGRATE_SUCCESS, PGMIGRATE_FAIL,
 		THP_MIGRATION_SUCCESS,
diff --git a/include/trace/events/kmem.h b/include/trace/events/kmem.h
index b37eb0a7060f..be1a7188a192 100644
--- a/include/trace/events/kmem.h
+++ b/include/trace/events/kmem.h
@@ -9,6 +9,96 @@
 #include <linux/tracepoint.h>
 #include <trace/events/mmflags.h>
 
+DECLARE_EVENT_CLASS(kmem_mm_class,
+
+	TP_PROTO(struct mm_struct *mm),
+
+	TP_ARGS(mm),
+
+	TP_STRUCT__entry(
+		__field(	struct mm_struct *, mm		)
+	),
+
+	TP_fast_assign(
+		__entry->mm = mm;
+	),
+
+	TP_printk("mm = %p", __entry->mm)
+);
+
+DEFINE_EVENT(kmem_mm_class, kmem_mm_enter,
+	TP_PROTO(struct mm_struct *mm),
+	TP_ARGS(mm)
+);
+
+DEFINE_EVENT(kmem_mm_class, kmem_mm_exit,
+	TP_PROTO(struct mm_struct *mm),
+	TP_ARGS(mm)
+);
+
+DEFINE_EVENT(kmem_mm_class, kmem_scan_mm_start,
+	TP_PROTO(struct mm_struct *mm),
+	TP_ARGS(mm)
+);
+
+TRACE_EVENT(kmem_scan_mm_end,
+
+	TP_PROTO( struct mm_struct *mm,
+		 unsigned long start,
+		 unsigned long total,
+		 unsigned long scan_period,
+		 unsigned long scan_size,
+		 int target_node),
+
+	TP_ARGS(mm, start, total, scan_period, scan_size, target_node),
+
+	TP_STRUCT__entry(
+		__field(	struct mm_struct *, mm		)
+		__field(	unsigned long,   start		)
+		__field(	unsigned long,   total		)
+		__field(	unsigned long,   scan_period	)
+		__field(	unsigned long,   scan_size	)
+		__field(	int,   		 target_node	)
+	),
+
+	TP_fast_assign(
+		__entry->mm = mm;
+		__entry->start = start;
+		__entry->total = total;
+		__entry->scan_period  = scan_period;
+		__entry->scan_size    = scan_size;
+		__entry->target_node  = target_node;
+	),
+
+	TP_printk("mm=%p, start = %ld, total = %ld, scan_period = %ld, scan_size = %ld node = %d",
+		__entry->mm, __entry->start, __entry->total, __entry->scan_period,
+		__entry->scan_size, __entry->target_node)
+);
+
+TRACE_EVENT(kmem_scan_mm_migrate,
+
+	TP_PROTO(struct mm_struct *mm,
+		 int rc,
+		 int target_node),
+
+	TP_ARGS(mm, rc, target_node),
+
+	TP_STRUCT__entry(
+		__field(	struct mm_struct *, mm		)
+		__field(	int,   rc			)
+		__field(	int,   target_node		)
+	),
+
+	TP_fast_assign(
+		__entry->mm = mm;
+		__entry->rc = rc;
+		__entry->target_node = target_node;
+	),
+
+	TP_printk("mm = %p rc = %d node = %d",
+		__entry->mm, __entry->rc, __entry->target_node)
+);
+
 TRACE_EVENT(kmem_cache_alloc,
 
 	TP_PROTO(unsigned long call_site,
diff --git a/include/uapi/linux/prctl.h b/include/uapi/linux/prctl.h
index 5c6080680cb2..18face11440a 100644
--- a/include/uapi/linux/prctl.h
+++ b/include/uapi/linux/prctl.h
@@ -353,4 +353,11 @@ struct prctl_mm_map {
  */
 #define PR_LOCK_SHADOW_STACK_STATUS      76
 
+/* Set/get PTE A bit scan scale */
+#define PR_SET_PTE_A_SCAN_SCALE		77
+#define PR_GET_PTE_A_SCAN_SCALE		78
+# define PR_PTE_A_SCAN_SCALE_MIN	0
+# define PR_PTE_A_SCAN_SCALE_MAX	10
+# define PR_PTE_A_SCAN_SCALE_DEFAULT	1
+
 #endif /* _LINUX_PRCTL_H */
diff --git a/kernel/fork.c b/kernel/fork.c
index 735405a9c5f3..bfbbacb8ec36 100644
--- a/kernel/fork.c
+++ b/kernel/fork.c
@@ -85,6 +85,7 @@
 #include <linux/user-return-notifier.h>
 #include <linux/oom.h>
 #include <linux/khugepaged.h>
+#include <linux/kmmscand.h>
 #include <linux/signalfd.h>
 #include <linux/uprobes.h>
 #include <linux/aio.h>
@@ -105,6 +106,7 @@
 #include <uapi/linux/pidfd.h>
 #include <linux/pidfs.h>
 #include <linux/tick.h>
+#include <linux/prctl.h>
 
 #include <asm/pgalloc.h>
 #include <linux/uaccess.h>
@@ -656,6 +658,8 @@ static __latent_entropy int dup_mmap(struct mm_struct *mm,
 	mm->exec_vm = oldmm->exec_vm;
 	mm->stack_vm = oldmm->stack_vm;
 
+	kmmscand_fork(mm, oldmm);
+
 	/* Use __mt_dup() to efficiently build an identical maple tree. */
 	retval = __mt_dup(&oldmm->mm_mt, &mm->mm_mt, GFP_KERNEL);
 	if (unlikely(retval))
@@ -1289,6 +1293,9 @@ static struct mm_struct *mm_init(struct mm_struct *mm, struct task_struct *p,
 	init_tlb_flush_pending(mm);
 #if defined(CONFIG_TRANSPARENT_HUGEPAGE) && !defined(CONFIG_SPLIT_PMD_PTLOCKS)
 	mm->pmd_huge_pte = NULL;
+#endif
+#ifdef CONFIG_KMMSCAND
+	mm->pte_scan_scale = PR_PTE_A_SCAN_SCALE_DEFAULT;
 #endif
 	mm_init_uprobes_state(mm);
 	hugetlb_count_init(mm);
@@ -1353,6 +1360,7 @@ static inline void __mmput(struct mm_struct *mm)
 	exit_aio(mm);
 	ksm_exit(mm);
 	khugepaged_exit(mm); /* must run before exit_mmap */
+	kmmscand_exit(mm);
 	exit_mmap(mm);
 	mm_put_huge_zero_folio(mm);
 	set_mm_exe_file(mm, NULL);
diff --git a/kernel/sys.c b/kernel/sys.c
index cb366ff8703a..0518480d8f78 100644
--- a/kernel/sys.c
+++ b/kernel/sys.c
@@ -2142,6 +2142,19 @@ static int prctl_set_auxv(struct mm_struct *mm, unsigned long addr,
 
 	return 0;
 }
+#ifdef CONFIG_KMMSCAND
+static int prctl_pte_scan_scale_write(unsigned int scale)
+{
+	scale = clamp(scale, PR_PTE_A_SCAN_SCALE_MIN, PR_PTE_A_SCAN_SCALE_MAX);
+	current->mm->pte_scan_scale = scale;
+	return 0;
+}
+
+static unsigned int prctl_pte_scan_scale_read(void)
+{
+	return current->mm->pte_scan_scale;
+}
+#endif
 
 static int prctl_set_mm(int opt, unsigned long addr,
 			unsigned long arg4, unsigned long arg5)
@@ -2811,6 +2824,18 @@ SYSCALL_DEFINE5(prctl, int, option, unsigned long, arg2, unsigned long, arg3,
 			return -EINVAL;
 		error = arch_lock_shadow_stack_status(me, arg2);
 		break;
+#ifdef CONFIG_KMMSCAND
+	case PR_SET_PTE_A_SCAN_SCALE:
+		if (arg3 || arg4 || arg5)
+			return -EINVAL;
+		error = prctl_pte_scan_scale_write((unsigned int) arg2);
+		break;
+	case PR_GET_PTE_A_SCAN_SCALE:
+		if (arg2 || arg3 || arg4 || arg5)
+			return -EINVAL;
+		error = prctl_pte_scan_scale_read();
+		break;
+#endif
 	default:
 		trace_task_prctl_unknown(option, arg2, arg3, arg4, arg5);
 		error = -EINVAL;
diff --git a/mm/Kconfig b/mm/Kconfig
index 1b501db06417..529bf140e1f7 100644
--- a/mm/Kconfig
+++ b/mm/Kconfig
@@ -783,6 +783,13 @@ config KSM
 	  until a program has madvised that an area is MADV_MERGEABLE, and
 	  root has set /sys/kernel/mm/ksm/run to 1 (if CONFIG_SYSFS is set).
 
+config KMMSCAND
+	bool "Enable PTE A bit scanning and Migration"
+	depends on NUMA_BALANCING
+	help
+	  Enable PTE A bit scanning of page. CXL pages accessed are migrated to
+	  regular NUMA node (node 0 - default).
+
 config DEFAULT_MMAP_MIN_ADDR
 	int "Low address space to protect from user allocation"
 	depends on MMU
diff --git a/mm/Makefile b/mm/Makefile
index 850386a67b3e..45e2f8cc8fd6 100644
--- a/mm/Makefile
+++ b/mm/Makefile
@@ -94,6 +94,7 @@ obj-$(CONFIG_FAIL_PAGE_ALLOC) += fail_page_alloc.o
 obj-$(CONFIG_MEMTEST)		+= memtest.o
 obj-$(CONFIG_MIGRATION) += migrate.o
 obj-$(CONFIG_NUMA) += memory-tiers.o
+obj-$(CONFIG_KMMSCAND) += kmmscand.o
 obj-$(CONFIG_DEVICE_MIGRATION) += migrate_device.o
 obj-$(CONFIG_TRANSPARENT_HUGEPAGE) += huge_memory.o khugepaged.o
 obj-$(CONFIG_PAGE_COUNTER) += page_counter.o
diff --git a/mm/kmmscand.c b/mm/kmmscand.c
new file mode 100644
index 000000000000..2fc1b46cf512
--- /dev/null
+++ b/mm/kmmscand.c
@@ -0,0 +1,1505 @@
+// SPDX-License-Identifier: GPL-2.0
+#include <linux/mm.h>
+#include <linux/mm_types.h>
+#include <linux/sched.h>
+#include <linux/sched/mm.h>
+#include <linux/mmu_notifier.h>
+#include <linux/migrate.h>
+#include <linux/rmap.h>
+#include <linux/pagewalk.h>
+#include <linux/page_ext.h>
+#include <linux/page_idle.h>
+#include <linux/page_table_check.h>
+#include <linux/pagemap.h>
+#include <linux/swap.h>
+#include <linux/mm_inline.h>
+#include <linux/kthread.h>
+#include <linux/kmmscand.h>
+#include <linux/memory-tiers.h>
+#include <linux/mempolicy.h>
+#include <linux/string.h>
+#include <linux/cleanup.h>
+#include <linux/minmax.h>
+#include <linux/delay.h>
+#include <trace/events/kmem.h>
+
+#include <asm/pgalloc.h>
+#include "internal.h"
+#include "mm_slot.h"
+
+static struct task_struct *kmmscand_thread __read_mostly;
+static DEFINE_MUTEX(kmmscand_mutex);
+extern unsigned int sysctl_numa_balancing_scan_delay;
+
+/*
+ * Total VMA size to cover during scan.
+ * Min: 256MB default: 1GB max: 4GB
+ */
+#define KMMSCAND_SCAN_SIZE_MIN	(256 * 1024 * 1024UL)
+#define KMMSCAND_SCAN_SIZE_MAX	(8 * 1024 * 1024 * 1024UL)
+#define KMMSCAND_SCAN_SIZE	(2 * 1024 * 1024 * 1024UL)
+
+static unsigned long kmmscand_scan_size __read_mostly = KMMSCAND_SCAN_SIZE;
+
+/*
+ * Scan period for each mm.
+ * Min: 400ms default: 2sec Max: 5sec
+ */
+#define KMMSCAND_SCAN_PERIOD_MAX	5000U
+#define KMMSCAND_SCAN_PERIOD_MIN	400U
+#define KMMSCAND_SCAN_PERIOD		2000U
+
+static unsigned int kmmscand_mm_scan_period_ms __read_mostly = KMMSCAND_SCAN_PERIOD;
+
+/* How long to pause between two scan and migration cycle */
+static unsigned int kmmscand_scan_sleep_ms __read_mostly = 16;
+
+/* Max number of mms to scan in one scan and migration cycle */
+#define KMMSCAND_MMS_TO_SCAN	(4 * 1024UL)
+static unsigned long kmmscand_mms_to_scan __read_mostly = KMMSCAND_MMS_TO_SCAN;
+
+volatile bool kmmscand_scan_enabled = true;
+static bool need_wakeup;
+static bool migrated_need_wakeup;
+
+/* How long to pause between two migration cycles */
+static unsigned int kmmmigrate_sleep_ms __read_mostly = 20;
+
+static struct task_struct *kmmmigrated_thread __read_mostly;
+static DEFINE_MUTEX(kmmmigrated_mutex);
+static DECLARE_WAIT_QUEUE_HEAD(kmmmigrated_wait);
+static unsigned long kmmmigrated_sleep_expire;
+
+/* mm of the migrating folio entry */
+static struct mm_struct *kmmscand_cur_migrate_mm;
+
+/* Migration list is manipulated underneath because of mm_exit */
+static bool  kmmscand_migration_list_dirty;
+
+static unsigned long kmmscand_sleep_expire;
+#define KMMSCAND_DEFAULT_TARGET_NODE	(0)
+static int kmmscand_target_node = KMMSCAND_DEFAULT_TARGET_NODE;
+
+static DEFINE_SPINLOCK(kmmscand_mm_lock);
+static DEFINE_SPINLOCK(kmmscand_migrate_lock);
+static DECLARE_WAIT_QUEUE_HEAD(kmmscand_wait);
+
+#define KMMSCAND_SLOT_HASH_BITS 10
+static DEFINE_READ_MOSTLY_HASHTABLE(kmmscand_slots_hash, KMMSCAND_SLOT_HASH_BITS);
+
+static struct kmem_cache *kmmscand_slot_cache __read_mostly;
+
+struct kmmscand_nodeinfo {
+	unsigned long nr_scanned;
+	unsigned long nr_accessed;
+	int node;
+	bool is_toptier;
+};
+
+struct kmmscand_mm_slot {
+	struct mm_slot slot;
+	/* Unit: ms. Determines how aften mm scan should happen. */
+	unsigned int scan_period;
+	unsigned long next_scan;
+	/* Tracks how many useful pages obtained for migration in the last scan */
+	unsigned long scan_delta;
+	/* Determines how much VMA address space to be covered in the scanning */
+	unsigned long scan_size;
+	long address;
+	volatile bool is_scanned;
+	int target_node;
+};
+
+struct kmmscand_scan {
+	struct list_head mm_head;
+	struct kmmscand_mm_slot *mm_slot;
+};
+
+struct kmmscand_scan kmmscand_scan = {
+	.mm_head = LIST_HEAD_INIT(kmmscand_scan.mm_head),
+};
+
+struct kmmscand_scanctrl {
+	struct list_head scan_list;
+	struct kmmscand_nodeinfo *nodeinfo[MAX_NUMNODES];
+};
+
+struct kmmscand_scanctrl kmmscand_scanctrl;
+
+struct kmmscand_migrate_list {
+	struct list_head migrate_head;
+};
+
+struct kmmscand_migrate_list kmmscand_migrate_list = {
+	.migrate_head = LIST_HEAD_INIT(kmmscand_migrate_list.migrate_head),
+};
+
+struct kmmscand_migrate_info {
+	struct list_head migrate_node;
+	struct mm_struct *mm;
+	struct folio *folio;
+	unsigned long address;
+};
+
+#ifdef CONFIG_SYSFS
+static ssize_t scan_sleep_ms_show(struct kobject *kobj,
+					 struct kobj_attribute *attr,
+					 char *buf)
+{
+	return sysfs_emit(buf, "%u\n", kmmscand_scan_sleep_ms);
+}
+
+static ssize_t scan_sleep_ms_store(struct kobject *kobj,
+					  struct kobj_attribute *attr,
+					  const char *buf, size_t count)
+{
+	unsigned int msecs;
+	int err;
+
+	err = kstrtouint(buf, 10, &msecs);
+	if (err)
+		return -EINVAL;
+
+	kmmscand_scan_sleep_ms = msecs;
+	kmmscand_sleep_expire = 0;
+	wake_up_interruptible(&kmmscand_wait);
+
+	return count;
+}
+static struct kobj_attribute scan_sleep_ms_attr =
+	__ATTR_RW(scan_sleep_ms);
+
+static ssize_t mm_scan_period_ms_show(struct kobject *kobj,
+					 struct kobj_attribute *attr,
+					 char *buf)
+{
+	return sysfs_emit(buf, "%u\n", kmmscand_mm_scan_period_ms);
+}
+
+/* If a value less than MIN or greater than MAX asked for store value is clamped */
+static ssize_t mm_scan_period_ms_store(struct kobject *kobj,
+					  struct kobj_attribute *attr,
+					  const char *buf, size_t count)
+{
+	unsigned int msecs, stored_msecs;
+	int err;
+
+	err = kstrtouint(buf, 10, &msecs);
+	if (err)
+		return -EINVAL;
+
+	stored_msecs = clamp(msecs, KMMSCAND_SCAN_PERIOD_MIN, KMMSCAND_SCAN_PERIOD_MAX);
+
+	kmmscand_mm_scan_period_ms = stored_msecs;
+	kmmscand_sleep_expire = 0;
+	wake_up_interruptible(&kmmscand_wait);
+
+	return count;
+}
+
+static struct kobj_attribute mm_scan_period_ms_attr =
+	__ATTR_RW(mm_scan_period_ms);
+
+static ssize_t mms_to_scan_show(struct kobject *kobj,
+					 struct kobj_attribute *attr,
+					 char *buf)
+{
+	return sysfs_emit(buf, "%lu\n", kmmscand_mms_to_scan);
+}
+
+static ssize_t mms_to_scan_store(struct kobject *kobj,
+					  struct kobj_attribute *attr,
+					  const char *buf, size_t count)
+{
+	unsigned long val;
+	int err;
+
+	err = kstrtoul(buf, 10, &val);
+	if (err)
+		return -EINVAL;
+
+	kmmscand_mms_to_scan = val;
+	kmmscand_sleep_expire = 0;
+	wake_up_interruptible(&kmmscand_wait);
+
+	return count;
+}
+
+static struct kobj_attribute mms_to_scan_attr =
+	__ATTR_RW(mms_to_scan);
+
+static ssize_t scan_enabled_show(struct kobject *kobj,
+					 struct kobj_attribute *attr,
+					 char *buf)
+{
+	return sysfs_emit(buf, "%u\n", kmmscand_scan_enabled ? 1 : 0);
+}
+
+static ssize_t scan_enabled_store(struct kobject *kobj,
+					  struct kobj_attribute *attr,
+					  const char *buf, size_t count)
+{
+	unsigned int val;
+	int err;
+
+	err = kstrtouint(buf, 10, &val);
+	if (err || val > 1)
+		return -EINVAL;
+
+	if (val) {
+		kmmscand_scan_enabled = true;
+		need_wakeup = true;
+	} else
+		kmmscand_scan_enabled = false;
+
+	kmmscand_sleep_expire = 0;
+	wake_up_interruptible(&kmmscand_wait);
+
+	return count;
+}
+
+static struct kobj_attribute scan_enabled_attr =
+	__ATTR_RW(scan_enabled);
+
+static ssize_t target_node_show(struct kobject *kobj,
+					 struct kobj_attribute *attr,
+					 char *buf)
+{
+	return sysfs_emit(buf, "%u\n", kmmscand_target_node);
+}
+
+static ssize_t target_node_store(struct kobject *kobj,
+					  struct kobj_attribute *attr,
+					  const char *buf, size_t count)
+{
+	int err, node;
+
+	err = kstrtoint(buf, 10, &node);
+	if (err)
+		return -EINVAL;
+
+	kmmscand_sleep_expire = 0;
+	if (!node_is_toptier(node))
+		return -EINVAL;
+
+	kmmscand_target_node = node;
+	wake_up_interruptible(&kmmscand_wait);
+
+	return count;
+}
+static struct kobj_attribute target_node_attr =
+	__ATTR_RW(target_node);
+
+static struct attribute *kmmscand_attr[] = {
+	&scan_sleep_ms_attr.attr,
+	&mm_scan_period_ms_attr.attr,
+	&mms_to_scan_attr.attr,
+	&scan_enabled_attr.attr,
+	&target_node_attr.attr,
+	NULL,
+};
+
+struct attribute_group kmmscand_attr_group = {
+	.attrs = kmmscand_attr,
+	.name = "kmmscand",
+};
+#endif
+
+void count_kmmscand_mm_scans(void)
+{
+	count_vm_numa_event(KMMSCAND_MM_SCANS);
+}
+void count_kmmscand_vma_scans(void)
+{
+	count_vm_numa_event(KMMSCAND_VMA_SCANS);
+}
+void count_kmmscand_migadded(void)
+{
+	count_vm_numa_event(KMMSCAND_MIGADDED);
+}
+void count_kmmscand_migrated(void)
+{
+	count_vm_numa_event(KMMSCAND_MIGRATED);
+}
+void count_kmmscand_migrate_failed(void)
+{
+	count_vm_numa_event(KMMSCAND_MIGRATE_FAILED);
+}
+void count_kmmscand_kzalloc_fail(void)
+{
+	count_vm_numa_event(KMMSCAND_KZALLOC_FAIL);
+}
+void count_kmmscand_slowtier(void)
+{
+	count_vm_numa_event(KMMSCAND_SLOWTIER);
+}
+void count_kmmscand_toptier(void)
+{
+	count_vm_numa_event(KMMSCAND_TOPTIER);
+}
+void count_kmmscand_idlepage(void)
+{
+	count_vm_numa_event(KMMSCAND_IDLEPAGE);
+}
+
+static int kmmscand_has_work(void)
+{
+	return !list_empty(&kmmscand_scan.mm_head);
+}
+
+static int kmmmigrated_has_work(void)
+{
+	if (!list_empty(&kmmscand_migrate_list.migrate_head))
+		return true;
+	return false;
+}
+
+static bool kmmscand_should_wakeup(void)
+{
+	bool wakeup =  kthread_should_stop() || need_wakeup ||
+	       time_after_eq(jiffies, kmmscand_sleep_expire);
+	if (need_wakeup)
+		need_wakeup = false;
+
+	return wakeup;
+}
+
+static bool kmmmigrated_should_wakeup(void)
+{
+	bool wakeup =  kthread_should_stop() || migrated_need_wakeup ||
+	       time_after_eq(jiffies, kmmmigrated_sleep_expire);
+	if (migrated_need_wakeup)
+		migrated_need_wakeup = false;
+
+	return wakeup;
+}
+
+static void kmmscand_wait_work(void)
+{
+	const unsigned long scan_sleep_jiffies =
+		msecs_to_jiffies(kmmscand_scan_sleep_ms);
+
+	if (!scan_sleep_jiffies)
+		return;
+
+	kmmscand_sleep_expire = jiffies + scan_sleep_jiffies;
+	wait_event_timeout(kmmscand_wait,
+			kmmscand_should_wakeup(),
+			scan_sleep_jiffies);
+	return;
+}
+
+static void kmmmigrated_wait_work(void)
+{
+	const unsigned long migrate_sleep_jiffies =
+		msecs_to_jiffies(kmmmigrate_sleep_ms);
+
+       if (!migrate_sleep_jiffies)
+		return;
+
+	kmmmigrated_sleep_expire = jiffies + migrate_sleep_jiffies;
+	wait_event_timeout(kmmmigrated_wait,
+			kmmmigrated_should_wakeup(),
+			migrate_sleep_jiffies);
+	return;
+}
+
+static unsigned long get_slowtier_accesed(struct kmmscand_scanctrl *scanctrl)
+{
+	int node;
+	unsigned long accessed = 0;
+
+	for_each_node_state(node, N_MEMORY) {
+		if (!node_is_toptier(node))
+			accessed += (scanctrl->nodeinfo[node])->nr_accessed;
+	}
+	return accessed;
+}
+
+static inline unsigned long get_nodeinfo_nr_accessed(struct kmmscand_nodeinfo *ni)
+{
+	return ni->nr_accessed;
+}
+
+static inline void set_nodeinfo_nr_accessed(struct kmmscand_nodeinfo *ni, unsigned long val)
+{
+	ni->nr_accessed = val;
+}
+
+static inline void reset_nodeinfo_nr_accessed(struct kmmscand_nodeinfo *ni)
+{
+	set_nodeinfo_nr_accessed(ni, 0);
+}
+
+static inline void nodeinfo_nr_accessed_inc(struct kmmscand_nodeinfo *ni)
+{
+	ni->nr_accessed++;
+}
+
+static inline unsigned long get_nodeinfo_nr_scanned(struct kmmscand_nodeinfo *ni)
+{
+	return ni->nr_scanned;
+}
+
+static inline void set_nodeinfo_nr_scanned(struct kmmscand_nodeinfo *ni, unsigned long val)
+{
+	ni->nr_scanned = val;
+}
+
+static inline void reset_nodeinfo_nr_scanned(struct kmmscand_nodeinfo *ni)
+{
+	set_nodeinfo_nr_scanned(ni, 0);
+}
+
+static inline void nodeinfo_nr_scanned_inc(struct kmmscand_nodeinfo *ni)
+{
+	ni->nr_scanned++;
+}
+
+
+static inline void reset_nodeinfo(struct kmmscand_nodeinfo *ni)
+{
+	set_nodeinfo_nr_scanned(ni, 0);
+	set_nodeinfo_nr_accessed(ni, 0);
+}
+
+static void init_one_nodeinfo(struct kmmscand_nodeinfo *ni, int node)
+{
+	ni->nr_scanned = 0;
+	ni->nr_accessed = 0;
+	ni->node = node;
+	ni->is_toptier = node_is_toptier(node) ? true : false;
+}
+
+static struct kmmscand_nodeinfo *alloc_one_nodeinfo(int node)
+{
+	struct kmmscand_nodeinfo *ni;
+
+	ni = kzalloc(sizeof(*ni), GFP_KERNEL);
+
+	if (!ni)
+		return NULL;
+
+	init_one_nodeinfo(ni, node);
+
+	return ni;
+}
+
+/* TBD: Handle errors */
+static void init_scanctrl(struct kmmscand_scanctrl *scanctrl)
+{
+	struct kmmscand_nodeinfo *ni;
+	int node;
+	for_each_node_state(node, N_MEMORY) {
+		ni = alloc_one_nodeinfo(node);
+		if (!ni)
+			WARN_ON_ONCE(ni);
+		scanctrl->nodeinfo[node] = ni;
+	}
+	pr_warn("scan ctrl init %d", node);
+}
+
+static void reset_scanctrl(struct kmmscand_scanctrl *scanctrl)
+{
+	int node;
+	for_each_node_state(node, N_MEMORY)
+		reset_nodeinfo(scanctrl->nodeinfo[node]);
+}
+
+static bool kmmscand_eligible_srcnid(int nid)
+{
+	if (!node_is_toptier(nid))
+		return true;
+
+	return false;
+}
+
+/*
+ * Do not know what info to pass in the future to make
+ * decision on taget node. Keep it void * now.
+ */
+static int kmmscand_get_target_node(void *data)
+{
+	return kmmscand_target_node;
+}
+
+static int get_target_node(struct kmmscand_scanctrl *scanctrl)
+{
+	int node, target_node = -9999;
+	unsigned long old_accessed = 0;
+
+	for_each_node(node) {
+		if (get_nodeinfo_nr_scanned(scanctrl->nodeinfo[node]) > old_accessed
+			&& node_is_toptier(node)) {
+			old_accessed = get_nodeinfo_nr_scanned(scanctrl->nodeinfo[node]);
+			target_node = node;
+		}
+	}
+	if (target_node == -9999)
+		target_node = kmmscand_get_target_node(NULL);
+
+	return target_node;
+}
+
+extern bool migrate_balanced_pgdat(struct pglist_data *pgdat,
+					unsigned long nr_migrate_pages);
+
+/*XXX: Taken from migrate.c to avoid NUMAB mode=2 and NULL vma checks*/
+static int kmmscand_migrate_misplaced_folio_prepare(struct folio *folio,
+		struct vm_area_struct *vma, int node)
+{
+	int nr_pages = folio_nr_pages(folio);
+	pg_data_t *pgdat = NODE_DATA(node);
+
+	if (folio_is_file_lru(folio)) {
+		/*
+		 * Do not migrate file folios that are mapped in multiple
+		 * processes with execute permissions as they are probably
+		 * shared libraries.
+		 *
+		 * See folio_likely_mapped_shared() on possible imprecision
+		 * when we cannot easily detect if a folio is shared.
+		 */
+		if (vma && (vma->vm_flags & VM_EXEC) &&
+		    folio_likely_mapped_shared(folio))
+			return -EACCES;
+		/*
+		 * Do not migrate dirty folios as not all filesystems can move
+		 * dirty folios in MIGRATE_ASYNC mode which is a waste of
+		 * cycles.
+		 */
+		if (folio_test_dirty(folio))
+			return -EAGAIN;
+	}
+
+	/* Avoid migrating to a node that is nearly full */
+	if (!migrate_balanced_pgdat(pgdat, nr_pages)) {
+		int z;
+
+		for (z = pgdat->nr_zones - 1; z >= 0; z--) {
+			if (managed_zone(pgdat->node_zones + z))
+				break;
+		}
+
+		/*
+		 * If there are no managed zones, it should not proceed
+		 * further.
+		 */
+		if (z < 0)
+			return -EAGAIN;
+
+		wakeup_kswapd(pgdat->node_zones + z, 0,
+			      folio_order(folio), ZONE_MOVABLE);
+		return -EAGAIN;
+	}
+
+	if (!folio_isolate_lru(folio))
+		return -EAGAIN;
+
+	node_stat_mod_folio(folio, NR_ISOLATED_ANON + folio_is_file_lru(folio),
+			    nr_pages);
+
+	return 0;
+}
+
+enum kmmscand_migration_err {
+	KMMSCAND_NULL_MM = 1,
+	KMMSCAND_EXITING_MM,
+	KMMSCAND_INVALID_FOLIO,
+	KMMSCAND_INVALID_VMA,
+	KMMSCAND_INELIGIBLE_SRC_NODE,
+	KMMSCAND_SAME_SRC_DEST_NODE,
+	KMMSCAND_PTE_NOT_PRESENT,
+	KMMSCAND_PMD_NOT_PRESENT,
+	KMMSCAND_NO_PTE_OFFSET_MAP_LOCK,
+	KMMSCAND_LRU_ISOLATION_ERR,
+};
+
+static int kmmscand_promote_folio(struct kmmscand_migrate_info *info, int destnid)
+{
+	unsigned long pfn;
+	unsigned long address;
+	struct page *page;
+	struct folio *folio;
+	int ret;
+	struct mm_struct *mm;
+	pmd_t *pmd;
+	pte_t *pte;
+	spinlock_t *ptl;
+	pmd_t pmde;
+	int srcnid;
+
+	if (info->mm == NULL)
+		return KMMSCAND_NULL_MM;
+
+	if (info->mm == READ_ONCE(kmmscand_cur_migrate_mm) &&
+		READ_ONCE(kmmscand_migration_list_dirty)) {
+		WARN_ON_ONCE(mm);
+		return KMMSCAND_EXITING_MM;
+	}
+
+	mm = info->mm;
+
+	folio = info->folio;
+
+	/* Check again if the folio is really valid now */
+	if (folio) {
+		pfn = folio_pfn(folio);
+		page = pfn_to_online_page(pfn);
+	}
+
+	if (!page || PageTail(page) || !folio || !folio_test_lru(folio) || folio_test_unevictable(folio) ||
+		folio_is_zone_device(folio) || !folio_mapped(folio) || folio_likely_mapped_shared(folio))
+		return KMMSCAND_INVALID_FOLIO;
+
+	folio_get(folio);
+
+	srcnid = folio_nid(folio);
+
+	/* Do not try to promote pages from regular nodes */
+	if (!kmmscand_eligible_srcnid(srcnid)) {
+		folio_put(folio);
+		return KMMSCAND_INELIGIBLE_SRC_NODE;
+	}
+
+
+	if (srcnid == destnid) {
+		folio_put(folio);
+		return KMMSCAND_SAME_SRC_DEST_NODE;
+	}
+	address = info->address;
+	pmd = pmd_off(mm, address);
+	pmde = pmdp_get(pmd);
+
+	if (!pmd_present(pmde)) {
+		folio_put(folio);
+		return KMMSCAND_PMD_NOT_PRESENT;
+	}
+	pte = pte_offset_map_lock(mm, pmd, address, &ptl);
+
+	if (!pte) {
+		folio_put(folio);
+		WARN_ON_ONCE(!pte);
+		return KMMSCAND_NO_PTE_OFFSET_MAP_LOCK;
+	}
+
+
+	ret = kmmscand_migrate_misplaced_folio_prepare(folio, NULL, destnid);
+	if (ret) {
+		folio_put(folio);
+		pte_unmap_unlock(pte, ptl);
+		return KMMSCAND_LRU_ISOLATION_ERR;
+	}
+
+	folio_put(folio);
+	pte_unmap_unlock(pte, ptl);
+
+	return  migrate_misplaced_folio(folio, destnid);
+}
+
+static bool folio_idle_clear_pte_refs_one(struct folio *folio,
+					 struct vm_area_struct *vma,
+					 unsigned long addr,
+					 pte_t *ptep)
+{
+	bool referenced = false;
+	struct mm_struct *mm = vma->vm_mm;
+	pmd_t *pmd = pmd_off(mm, addr);
+
+	if (ptep) {
+		if (ptep_clear_young_notify(vma, addr, ptep))
+			referenced = true;
+	} else if (IS_ENABLED(CONFIG_TRANSPARENT_HUGEPAGE)) {
+		if (!pmd_present(*pmd))
+			WARN_ON_ONCE(1);
+		if (pmdp_clear_young_notify(vma, addr, pmd))
+			referenced = true;
+	} else {
+		WARN_ON_ONCE(1);
+	}
+
+	if (referenced) {
+		folio_clear_idle(folio);
+		folio_set_young(folio);
+	}
+
+	return true;
+}
+
+static void page_idle_clear_pte_refs(struct page *page, pte_t *pte, struct mm_walk *walk)
+{
+	bool need_lock;
+	struct folio *folio =  page_folio(page);
+	unsigned long address;
+
+	if (!folio_mapped(folio) || !folio_raw_mapping(folio))
+		return;
+
+	need_lock = !folio_test_anon(folio) || folio_test_ksm(folio);
+	if (need_lock && !folio_trylock(folio))
+		return;
+	address = vma_address(walk->vma, page_pgoff(folio, page), compound_nr(page));
+	VM_BUG_ON_VMA(address == -EFAULT, walk->vma);
+	folio_idle_clear_pte_refs_one(folio, walk->vma, address, pte);
+
+	if (need_lock)
+		folio_unlock(folio);
+}
+
+static int hot_vma_idle_pte_entry(pte_t *pte,
+				 unsigned long addr,
+				 unsigned long next,
+				 struct mm_walk *walk)
+{
+	struct page *page;
+	struct folio *folio;
+	struct mm_struct *mm;
+	struct vm_area_struct *vma;
+	struct kmmscand_migrate_info *info;
+	struct kmmscand_scanctrl *scanctrl = walk->private;
+
+	int srcnid;
+
+	pte_t pteval = ptep_get(pte);
+
+	if (!pte_present(pteval))
+		return 1;
+
+	if (pte_none(pteval))
+		return 1;
+
+	vma = walk->vma;
+	mm = vma->vm_mm;
+
+	page = pte_page(*pte);
+
+	page_idle_clear_pte_refs(page, pte, walk);
+
+	folio = page_folio(page);
+	folio_get(folio);
+
+	if (!folio || folio_is_zone_device(folio) || folio_test_unevictable(folio)
+		|| !folio_mapped(folio) || folio_likely_mapped_shared(folio)) {
+		folio_put(folio);
+		return 1;
+	}
+
+	srcnid = folio_nid(folio);
+
+	if (node_is_toptier(srcnid)) {
+		scanctrl->nodeinfo[srcnid]->nr_scanned++;
+		count_kmmscand_toptier();
+	}
+
+	if (!folio_test_idle(folio) || folio_test_young(folio) ||
+			mmu_notifier_test_young(mm, addr) ||
+			folio_test_referenced(folio) || pte_young(pteval)) {
+
+		/* TBD: Use helpers */
+		scanctrl->nodeinfo[srcnid]->nr_accessed++;
+
+		/* Do not try to promote pages from regular nodes */
+		if (!kmmscand_eligible_srcnid(srcnid))
+			goto end;
+
+		info = kzalloc(sizeof(struct kmmscand_migrate_info), GFP_NOWAIT);
+		if (info && scanctrl) {
+
+			count_kmmscand_slowtier();
+			info->mm = mm;
+			info->address = addr;
+			info->folio = folio;
+
+			/* No need of lock now */
+			list_add_tail(&info->migrate_node, &scanctrl->scan_list);
+
+			count_kmmscand_migadded();
+		}
+	} else
+		count_kmmscand_idlepage();
+end:
+	folio_set_idle(folio);
+	folio_put(folio);
+	return 0;
+}
+
+static const struct mm_walk_ops hot_vma_set_idle_ops = {
+	.pte_entry = hot_vma_idle_pte_entry,
+	.walk_lock = PGWALK_RDLOCK,
+};
+
+static void kmmscand_walk_page_vma(struct vm_area_struct *vma, struct kmmscand_scanctrl *scanctrl)
+{
+	if (!vma_migratable(vma) || !vma_policy_mof(vma) ||
+	    is_vm_hugetlb_page(vma) || (vma->vm_flags & VM_MIXEDMAP)) {
+		return;
+	}
+	if (!vma->vm_mm ||
+	    (vma->vm_file && (vma->vm_flags & (VM_READ|VM_WRITE)) == (VM_READ)))
+		return;
+
+	if (!vma_is_accessible(vma))
+		return;
+
+	walk_page_vma(vma, &hot_vma_set_idle_ops, scanctrl);
+}
+
+static inline int kmmscand_test_exit(struct mm_struct *mm)
+{
+	return atomic_read(&mm->mm_users) == 0;
+}
+
+static void kmmscand_cleanup_migration_list(struct mm_struct *mm)
+{
+	struct kmmscand_migrate_info *info, *tmp;
+
+	spin_lock(&kmmscand_migrate_lock);
+	if (!list_empty(&kmmscand_migrate_list.migrate_head)) {
+		if (mm == READ_ONCE(kmmscand_cur_migrate_mm)) {
+			/* A folio in this mm is being migrated. wait */
+			WRITE_ONCE(kmmscand_migration_list_dirty, true);
+		}
+
+		list_for_each_entry_safe(info, tmp, &kmmscand_migrate_list.migrate_head,
+			migrate_node) {
+			if (info && (info->mm == mm)) {
+				info->mm = NULL;
+				WRITE_ONCE(kmmscand_migration_list_dirty, true);
+			}
+		}
+	}
+	spin_unlock(&kmmscand_migrate_lock);
+}
+
+static void kmmscand_collect_mm_slot(struct kmmscand_mm_slot *mm_slot)
+{
+	struct mm_slot *slot = &mm_slot->slot;
+	struct mm_struct *mm = slot->mm;
+
+	lockdep_assert_held(&kmmscand_mm_lock);
+
+	if (kmmscand_test_exit(mm)) {
+		/* free mm_slot */
+		hash_del(&slot->hash);
+		list_del(&slot->mm_node);
+
+		kmmscand_cleanup_migration_list(mm);
+
+		mm_slot_free(kmmscand_slot_cache, mm_slot);
+		mmdrop(mm);
+	} else {
+		WARN_ON_ONCE(mm_slot);
+		mm_slot->is_scanned = false;
+	}
+}
+
+static void kmmscand_migrate_folio(void)
+{
+	int ret = 0, dest = -1;
+	struct mm_struct *oldmm = NULL;
+	struct kmmscand_migrate_info *info, *tmp;
+
+	spin_lock(&kmmscand_migrate_lock);
+
+	if (!list_empty(&kmmscand_migrate_list.migrate_head)) {
+		list_for_each_entry_safe(info, tmp, &kmmscand_migrate_list.migrate_head,
+			migrate_node) {
+			if (READ_ONCE(kmmscand_migration_list_dirty)) {
+				kmmscand_migration_list_dirty = false;
+				list_del(&info->migrate_node);
+				/*
+				 * Do not try to migrate this entry because mm might have
+				 * vanished underneath.
+				 */
+				kfree(info);
+				spin_unlock(&kmmscand_migrate_lock);
+				goto dirty_list_handled;
+			}
+
+			list_del(&info->migrate_node);
+			/* Note down the mm of folio entry we are migrating */
+			WRITE_ONCE(kmmscand_cur_migrate_mm, info->mm);
+			spin_unlock(&kmmscand_migrate_lock);
+
+			if (info->mm) {
+				if (oldmm != info->mm) {
+					if(!mmap_read_trylock(info->mm)) {
+						dest = kmmscand_get_target_node(NULL);
+					} else {
+						dest = READ_ONCE(info->mm->target_node);
+						mmap_read_unlock(info->mm);
+					}
+					oldmm = info->mm;
+				}
+
+				ret = kmmscand_promote_folio(info, dest);
+				trace_kmem_scan_mm_migrate(info->mm, ret, dest);
+			}
+
+			/* TBD: encode migrated count here, currently assume folio_nr_pages */
+			if (!ret)
+				count_kmmscand_migrated();
+			else
+				count_kmmscand_migrate_failed();
+
+			kfree(info);
+
+			spin_lock(&kmmscand_migrate_lock);
+			/* Reset  mm  of folio entry we are migrating */
+			WRITE_ONCE(kmmscand_cur_migrate_mm, NULL);
+			spin_unlock(&kmmscand_migrate_lock);
+dirty_list_handled:
+			cond_resched();
+			spin_lock(&kmmscand_migrate_lock);
+		}
+	}
+	spin_unlock(&kmmscand_migrate_lock);
+}
+
+/*
+ * This is the normal change percentage when old and new delta remain same.
+ * i.e., either both positive or both zero.
+ */
+#define SCAN_PERIOD_TUNE_PERCENT	15
+
+/* This is to change the scan_period aggressively when deltas are different */
+#define SCAN_PERIOD_CHANGE_SCALE	3
+/*
+ * XXX: Hack to prevent unmigrated pages coming again and again while scanning.
+ * Actual fix needs to identify the type of unmigrated pages OR consider migration
+ * failures in next scan.
+ */
+#define KMMSCAND_IGNORE_SCAN_THR	100
+
+#define SCAN_SIZE_CHANGE_SCALE	1
+/*
+ * X : Number of useful pages in the last scan.
+ * Y : Number of useful pages found in current scan.
+ * Tuning scan_period:
+ *	Initial scan_period is 2s.
+ *	case 1: (X = 0, Y = 0)
+ *		Increase scan_period by SCAN_PERIOD_TUNE_PERCENT.
+ *	case 2: (X = 0, Y > 0)
+ *		Decrease scan_period by (2 << SCAN_PERIOD_CHANGE_SCALE).
+ *	case 3: (X > 0, Y = 0 )
+ *		Increase scan_period by (2 << SCAN_PERIOD_CHANGE_SCALE).
+ *	case 4: (X > 0, Y > 0)
+ *		Decrease scan_period by SCAN_PERIOD_TUNE_PERCENT.
+ * Tuning scan_size:
+ * Initial scan_size is 4GB
+ *	case 1: (X = 0, Y = 0)
+ *		Decrease scan_size by (1 << SCAN_SIZE_CHANGE_SCALE).
+ *	case 2: (X = 0, Y > 0)
+ *		scan_size = KMMSCAND_SCAN_SIZE_MAX
+ *  case 3: (X > 0, Y = 0 )
+ *		No change
+ *  case 4: (X > 0, Y > 0)
+ *		Increase scan_size by (1 << SCAN_SIZE_CHANGE_SCALE).
+ */
+static inline void kmmscand_update_mmslot_info(struct kmmscand_mm_slot *mm_slot,
+				unsigned long total, int target_node)
+{
+	unsigned int scan_period;
+	unsigned long now;
+	unsigned long scan_size;
+	unsigned long old_scan_delta;
+
+	/* XXX: Hack to get rid of continuously failing/unmigrateable pages */
+	if (total < KMMSCAND_IGNORE_SCAN_THR)
+		total = 0;
+
+	scan_period = mm_slot->scan_period;
+	scan_size = mm_slot->scan_size;
+
+	old_scan_delta = mm_slot->scan_delta;
+
+	/*
+	 * case 1: old_scan_delta and new delta are similar, (slow) TUNE_PERCENT used.
+	 * case 2: old_scan_delta and new delta are different. (fast) CHANGE_SCALE used.
+	 * TBD:
+	 * 1. Further tune scan_period based on delta between last and current scan delta.
+	 * 2. Optimize calculation
+	 */
+	if (!old_scan_delta && !total) {
+		scan_period = (100 + SCAN_PERIOD_TUNE_PERCENT) * scan_period;
+		scan_period /= 100;
+		scan_size = scan_size >> SCAN_SIZE_CHANGE_SCALE;
+	} else if (old_scan_delta && total) {
+		scan_period = (100 - SCAN_PERIOD_TUNE_PERCENT) * scan_period;
+		scan_period /= 100;
+		scan_size = scan_size << SCAN_SIZE_CHANGE_SCALE;
+	} else if (old_scan_delta && !total) {
+		scan_period = scan_period << SCAN_PERIOD_CHANGE_SCALE;
+	} else {
+		scan_period = scan_period >> SCAN_PERIOD_CHANGE_SCALE;
+		scan_size = KMMSCAND_SCAN_SIZE_MAX;
+	}
+
+	scan_period = clamp(scan_period, KMMSCAND_SCAN_PERIOD_MIN, KMMSCAND_SCAN_PERIOD_MAX);
+	scan_size = clamp(scan_size, KMMSCAND_SCAN_SIZE_MIN, KMMSCAND_SCAN_SIZE_MAX);
+
+	now = jiffies;
+	mm_slot->next_scan = now + msecs_to_jiffies(scan_period);
+	mm_slot->scan_period = scan_period;
+	mm_slot->scan_size = scan_size;
+	mm_slot->scan_delta = total;
+	mm_slot->target_node = target_node;
+}
+
+static unsigned long kmmscand_scan_mm_slot(void)
+{
+	bool next_mm = false;
+	bool update_mmslot_info = false;
+
+	unsigned int mm_slot_scan_period;
+	int target_node, mm_slot_target_node, mm_target_node;
+	unsigned long now;
+	unsigned long mm_slot_next_scan;
+	unsigned long mm_slot_scan_size;
+	unsigned long scanned_size = 0;
+	unsigned long address;
+	unsigned long total = 0;
+
+	struct mm_slot *slot;
+	struct mm_struct *mm;
+	struct vma_iterator vmi;
+	struct vm_area_struct *vma = NULL;
+	struct kmmscand_mm_slot *mm_slot;
+
+	/* Retrieve mm */
+	spin_lock(&kmmscand_mm_lock);
+
+	if (kmmscand_scan.mm_slot) {
+		mm_slot = kmmscand_scan.mm_slot;
+		slot = &mm_slot->slot;
+		address = mm_slot->address;
+	} else {
+		slot = list_entry(kmmscand_scan.mm_head.next,
+				     struct mm_slot, mm_node);
+		mm_slot = mm_slot_entry(slot, struct kmmscand_mm_slot, slot);
+		address = mm_slot->address;
+		kmmscand_scan.mm_slot = mm_slot;
+	}
+
+	mm = slot->mm;
+	mm_slot->is_scanned = true;
+	mm_slot_next_scan = mm_slot->next_scan;
+	mm_slot_scan_period = mm_slot->scan_period;
+	mm_slot_scan_size = mm_slot->scan_size;
+	mm_slot_target_node = mm_slot->target_node;
+	spin_unlock(&kmmscand_mm_lock);
+
+	if (unlikely(!mmap_read_trylock(mm)))
+		goto outerloop_mmap_lock;
+
+	if (unlikely(kmmscand_test_exit(mm))) {
+		next_mm = true;
+		goto outerloop;
+	}
+
+	if (!mm->pte_scan_scale) {
+		next_mm = true;
+		goto outerloop;
+	}
+
+	mm_target_node = READ_ONCE(mm->target_node);
+	/* XXX: Do we need write lock? */
+	if (mm_target_node != mm_slot_target_node)
+		WRITE_ONCE(mm->target_node, mm_slot_target_node);
+
+	trace_kmem_scan_mm_start(mm);
+
+	now = jiffies;
+
+	if (mm_slot_next_scan && time_before(now, mm_slot_next_scan))
+		goto outerloop;
+
+	vma_iter_init(&vmi, mm, address);
+	vma = vma_next(&vmi);
+	if (!vma) {
+		address = 0;
+		vma_iter_set(&vmi, address);
+		vma = vma_next(&vmi);
+	}
+
+	for_each_vma(vmi, vma) {
+		/* Count the scanned pages here to decide exit */
+		kmmscand_walk_page_vma(vma, &kmmscand_scanctrl);
+		count_kmmscand_vma_scans();
+		scanned_size += vma->vm_end - vma->vm_start;
+		address = vma->vm_end;
+
+		if (scanned_size >= mm_slot_scan_size) {
+			total = get_slowtier_accesed(&kmmscand_scanctrl);
+
+			/* If we had got accessed pages, ignore the current scan_size threshold */
+			if (total > KMMSCAND_IGNORE_SCAN_THR) {
+				mm_slot_scan_size = KMMSCAND_SCAN_SIZE_MAX;
+				continue;
+			}
+			next_mm = true;
+			break;
+		}
+
+		/* Add scanned folios to migration list */
+		spin_lock(&kmmscand_migrate_lock);
+		list_splice_tail_init(&kmmscand_scanctrl.scan_list, &kmmscand_migrate_list.migrate_head);
+		spin_unlock(&kmmscand_migrate_lock);
+	}
+
+	if (!vma)
+		address = 0;
+
+	update_mmslot_info = true;
+
+	count_kmmscand_mm_scans();
+
+	total = get_slowtier_accesed(&kmmscand_scanctrl);
+	target_node = get_target_node(&kmmscand_scanctrl);
+
+	mm_target_node = READ_ONCE(mm->target_node);
+
+	/* XXX: Do we need write lock? */
+	if (mm_target_node != target_node)
+		WRITE_ONCE(mm->target_node, target_node);
+
+	reset_scanctrl(&kmmscand_scanctrl);
+
+	if (update_mmslot_info) {
+		mm_slot->address = address;
+		kmmscand_update_mmslot_info(mm_slot, total, target_node);
+	}
+
+	trace_kmem_scan_mm_end(mm, address, total, mm_slot_scan_period,
+			mm_slot_scan_size, target_node);
+
+outerloop:
+	/* exit_mmap will destroy ptes after this */
+	mmap_read_unlock(mm);
+
+outerloop_mmap_lock:
+	spin_lock(&kmmscand_mm_lock);
+	VM_BUG_ON(kmmscand_scan.mm_slot != mm_slot);
+
+	/*
+	 * Release the current mm_slot if this mm is about to die, or
+	 * if we scanned all vmas of this mm.
+	 */
+	if (unlikely(kmmscand_test_exit(mm)) || !vma || next_mm) {
+		/*
+		 * Make sure that if mm_users is reaching zero while
+		 * kmmscand runs here, kmmscand_exit will find
+		 * mm_slot not pointing to the exiting mm.
+		 */
+		WARN_ON_ONCE(current->rcu_read_lock_nesting < 0);
+		if (slot->mm_node.next != &kmmscand_scan.mm_head) {
+			slot = list_entry(slot->mm_node.next,
+					struct mm_slot, mm_node);
+			kmmscand_scan.mm_slot =
+				mm_slot_entry(slot, struct kmmscand_mm_slot, slot);
+
+		} else
+			kmmscand_scan.mm_slot = NULL;
+
+		WARN_ON_ONCE(current->rcu_read_lock_nesting < 0);
+		if (kmmscand_test_exit(mm)) {
+			kmmscand_collect_mm_slot(mm_slot);
+			WARN_ON_ONCE(current->rcu_read_lock_nesting < 0);
+			goto end;
+		}
+	}
+	mm_slot->is_scanned = false;
+end:
+	spin_unlock(&kmmscand_mm_lock);
+	return total;
+}
+
+static void kmmscand_do_scan(void)
+{
+	unsigned long iter = 0, mms_to_scan;
+
+	mms_to_scan = READ_ONCE(kmmscand_mms_to_scan);
+
+	while (true) {
+		cond_resched();
+
+		if (unlikely(kthread_should_stop()) || !READ_ONCE(kmmscand_scan_enabled))
+			break;
+
+		if (kmmscand_has_work())
+			kmmscand_scan_mm_slot();
+
+		iter++;
+		if (iter >= mms_to_scan)
+			break;
+	}
+}
+
+static int kmmscand(void *none)
+{
+	for (;;) {
+		if (unlikely(kthread_should_stop()))
+			break;
+
+		kmmscand_do_scan();
+
+		while (!READ_ONCE(kmmscand_scan_enabled)) {
+			cpu_relax();
+			kmmscand_wait_work();
+		}
+
+		kmmscand_wait_work();
+	}
+	return 0;
+}
+
+#ifdef CONFIG_SYSFS
+extern struct kobject *mm_kobj;
+static int __init kmmscand_init_sysfs(struct kobject **kobj)
+{
+	int err;
+
+	err = sysfs_create_group(*kobj, &kmmscand_attr_group);
+	if (err) {
+		pr_err("failed to register kmmscand group\n");
+		goto err_kmmscand_attr;
+	}
+
+	return 0;
+
+err_kmmscand_attr:
+	sysfs_remove_group(*kobj, &kmmscand_attr_group);
+	return err;
+}
+
+static void __init kmmscand_exit_sysfs(struct kobject *kobj)
+{
+		sysfs_remove_group(kobj, &kmmscand_attr_group);
+}
+#else
+static inline int __init kmmscand_init_sysfs(struct kobject **kobj)
+{
+	return 0;
+}
+static inline void __init kmmscand_exit_sysfs(struct kobject *kobj)
+{
+}
+#endif
+
+static inline void kmmscand_destroy(void)
+{
+	kmem_cache_destroy(kmmscand_slot_cache);
+	kmmscand_exit_sysfs(mm_kobj);
+}
+
+void __kmmscand_enter(struct mm_struct *mm)
+{
+	struct kmmscand_mm_slot *kmmscand_slot;
+	struct mm_slot *slot;
+	unsigned long now;
+	int wakeup;
+
+	/* __kmmscand_exit() must not run from under us */
+	VM_BUG_ON_MM(kmmscand_test_exit(mm), mm);
+
+	kmmscand_slot = mm_slot_alloc(kmmscand_slot_cache);
+
+	if (!kmmscand_slot)
+		return;
+
+	now = jiffies;
+	kmmscand_slot->address = 0;
+	kmmscand_slot->scan_period = kmmscand_mm_scan_period_ms;
+	kmmscand_slot->scan_size = kmmscand_scan_size;
+	kmmscand_slot->next_scan = now +
+			msecs_to_jiffies(sysctl_numa_balancing_scan_delay);
+	kmmscand_slot->scan_delta = 0;
+
+	slot = &kmmscand_slot->slot;
+
+	spin_lock(&kmmscand_mm_lock);
+	mm_slot_insert(kmmscand_slots_hash, mm, slot);
+
+	wakeup = list_empty(&kmmscand_scan.mm_head);
+	list_add_tail(&slot->mm_node, &kmmscand_scan.mm_head);
+	spin_unlock(&kmmscand_mm_lock);
+
+	mmgrab(mm);
+	trace_kmem_mm_enter(mm);
+	if (wakeup)
+		wake_up_interruptible(&kmmscand_wait);
+}
+
+void __kmmscand_exit(struct mm_struct *mm)
+{
+	struct kmmscand_mm_slot *mm_slot;
+	struct mm_slot *slot;
+	int free = 0, serialize = 1;
+
+	trace_kmem_mm_exit(mm);
+	spin_lock(&kmmscand_mm_lock);
+	slot = mm_slot_lookup(kmmscand_slots_hash, mm);
+	mm_slot = mm_slot_entry(slot, struct kmmscand_mm_slot, slot);
+	if (mm_slot && kmmscand_scan.mm_slot != mm_slot) {
+		hash_del(&slot->hash);
+		list_del(&slot->mm_node);
+		free = 1;
+	} else if (mm_slot && kmmscand_scan.mm_slot == mm_slot && !mm_slot->is_scanned) {
+		hash_del(&slot->hash);
+		list_del(&slot->mm_node);
+		free = 1;
+		/* TBD: Set the actual next slot */
+		kmmscand_scan.mm_slot = NULL;
+	} else if (mm_slot && kmmscand_scan.mm_slot == mm_slot && mm_slot->is_scanned) {
+		serialize = 0;
+	}
+
+	spin_unlock(&kmmscand_mm_lock);
+
+	if (serialize)
+		kmmscand_cleanup_migration_list(mm);
+
+	if (free) {
+		mm_slot_free(kmmscand_slot_cache, mm_slot);
+		mmdrop(mm);
+	} else if (mm_slot) {
+		mmap_write_lock(mm);
+		mmap_write_unlock(mm);
+	}
+}
+
+static int start_kmmscand(void)
+{
+	int err = 0;
+
+	guard(mutex)(&kmmscand_mutex);
+
+	/* Some one already succeeded in starting daemon */
+	if (kmmscand_thread)
+		goto end;
+
+	kmmscand_thread = kthread_run(kmmscand, NULL, "kmmscand");
+	if (IS_ERR(kmmscand_thread)) {
+		pr_err("kmmscand: kthread_run(kmmscand) failed\n");
+		err = PTR_ERR(kmmscand_thread);
+		kmmscand_thread = NULL;
+		goto end;
+	} else {
+		pr_info("kmmscand: Successfully started kmmscand");
+	}
+
+	if (!list_empty(&kmmscand_scan.mm_head))
+		wake_up_interruptible(&kmmscand_wait);
+
+end:
+	return err;
+}
+
+static int stop_kmmscand(void)
+{
+	int err = 0;
+
+	guard(mutex)(&kmmscand_mutex);
+
+	if (kmmscand_thread) {
+		kthread_stop(kmmscand_thread);
+		kmmscand_thread = NULL;
+	}
+
+	return err;
+}
+static int kmmmigrated(void *arg)
+{
+	for (;;) {
+		WRITE_ONCE(migrated_need_wakeup, false);
+		if (unlikely(kthread_should_stop()))
+			break;
+		if (kmmmigrated_has_work())
+			kmmscand_migrate_folio();
+		msleep(20);
+		kmmmigrated_wait_work();
+	}
+	return 0;
+}
+
+static int start_kmmmigrated(void)
+{
+	int err = 0;
+
+	guard(mutex)(&kmmmigrated_mutex);
+
+	/* Someone already succeeded in starting daemon */
+	if (kmmmigrated_thread)
+		goto end;
+
+	kmmmigrated_thread = kthread_run(kmmmigrated, NULL, "kmmmigrated");
+	if (IS_ERR(kmmmigrated_thread)) {
+		pr_err("kmmmigrated: kthread_run(kmmmigrated)  failed\n");
+		err = PTR_ERR(kmmmigrated_thread);
+		kmmmigrated_thread = NULL;
+		goto end;
+	} else {
+		pr_info("kmmmigrated: Successfully started kmmmigrated");
+	}
+
+	wake_up_interruptible(&kmmmigrated_wait);
+end:
+	return err;
+}
+
+static int stop_kmmmigrated(void)
+{
+	guard(mutex)(&kmmmigrated_mutex);
+	kthread_stop(kmmmigrated_thread);
+	return 0;
+}
+
+static void init_migration_list(void)
+{
+	INIT_LIST_HEAD(&kmmscand_migrate_list.migrate_head);
+	INIT_LIST_HEAD(&kmmscand_scanctrl.scan_list);
+	spin_lock_init(&kmmscand_migrate_lock);
+	init_waitqueue_head(&kmmscand_wait);
+	init_waitqueue_head(&kmmmigrated_wait);
+	init_scanctrl(&kmmscand_scanctrl);
+}
+
+static int __init kmmscand_init(void)
+{
+	int err;
+
+	kmmscand_slot_cache = KMEM_CACHE(kmmscand_mm_slot, 0);
+
+	if (!kmmscand_slot_cache) {
+		pr_err("kmmscand: kmem_cache error");
+		return -ENOMEM;
+	}
+
+	err = kmmscand_init_sysfs(&mm_kobj);
+
+	if (err)
+		goto err_init_sysfs;
+
+	init_migration_list();
+
+	err = start_kmmscand();
+	if (err)
+		goto err_kmmscand;
+
+	err = start_kmmmigrated();
+	if (err)
+		goto err_kmmmigrated;
+
+	return 0;
+
+err_kmmmigrated:
+	stop_kmmmigrated();
+
+err_kmmscand:
+	stop_kmmscand();
+err_init_sysfs:
+	kmmscand_destroy();
+
+	return err;
+}
+subsys_initcall(kmmscand_init);
diff --git a/mm/migrate.c b/mm/migrate.c
index fb19a18892c8..9d39abc7662a 100644
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@ -2598,7 +2598,7 @@ SYSCALL_DEFINE6(move_pages, pid_t, pid, unsigned long, nr_pages,
  * Returns true if this is a safe migration target node for misplaced NUMA
  * pages. Currently it only checks the watermarks which is crude.
  */
-static bool migrate_balanced_pgdat(struct pglist_data *pgdat,
+bool migrate_balanced_pgdat(struct pglist_data *pgdat,
 				   unsigned long nr_migrate_pages)
 {
 	int z;
@@ -2656,7 +2656,7 @@ int migrate_misplaced_folio_prepare(struct folio *folio,
 		 * See folio_likely_mapped_shared() on possible imprecision
 		 * when we cannot easily detect if a folio is shared.
 		 */
-		if ((vma->vm_flags & VM_EXEC) &&
+		if ((vma && vma->vm_flags & VM_EXEC) &&
 		    folio_likely_mapped_shared(folio))
 			return -EACCES;
 
diff --git a/mm/vmstat.c b/mm/vmstat.c
index 16bfe1c694dd..cb21441969c5 100644
--- a/mm/vmstat.c
+++ b/mm/vmstat.c
@@ -1340,6 +1340,17 @@ const char * const vmstat_text[] = {
 	"numa_hint_faults_local",
 	"numa_pages_migrated",
 #endif
+#ifdef CONFIG_KMMSCAND
+	"nr_kmmscand_mm_scans",
+	"nr_kmmscand_vma_scans",
+	"nr_kmmscand_migadded",
+	"nr_kmmscand_migrated",
+	"nr_kmmscand_migrate_failed",
+	"nr_kmmscand_kzalloc_fail",
+	"nr_kmmscand_slowtier",
+	"nr_kmmscand_toptier",
+	"nr_kmmscand_idlepage",
+#endif
 #ifdef CONFIG_MIGRATION
 	"pgmigrate_success",
 	"pgmigrate_fail",


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from out30-131.freemail.mail.aliyun.com (out30-131.freemail.mail.aliyun.com [115.124.30.131])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 821971A9B24
	for <linux-kernel@vger.kernel.org>; Fri,  7 Feb 2025 08:11:22 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=115.124.30.131
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738915885; cv=none; b=HIg7MfnVqmnT5X0i8hIHPy+EMkzSlxb3n93n7strSIHKqxHw7nFuKHHBpJ5ylSUe6UY6NLtFjckx/K/xW91Rn1AkcgFz3P7t9XFRUcwz6JoUCpfvC/aSRGJUVB7vvqEeWDu71F6Ds+60sKdrr8jRBm3k7im/Tq0UCziphw/TYFc=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738915885; c=relaxed/simple;
	bh=RouE6emE/rjzrEAgIhsucJqSqBHtFMa2adnU0+jmGbQ=;
	h=From:To:Cc:Subject:In-Reply-To:References:Date:Message-ID:
	 MIME-Version:Content-Type; b=K+gzyeMSNY94J+Bz/MsRxJx7MV6kF0UdtFIRBKF89PCUYjCf00ZlK/RUX4kEDtV9sqsiFJ3jZWWR5Nua63KNn9UkX26BQ0ckHCCfinHkJvMrDRIBOaQPM98Q0ThFaNpHp6AgzezkeRT9qB3UcBzdN9sCFXZ535j08+3zh2gLXtg=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=linux.alibaba.com; spf=pass smtp.mailfrom=linux.alibaba.com; dkim=pass (1024-bit key) header.d=linux.alibaba.com header.i=@linux.alibaba.com header.b=fEDTAXQJ; arc=none smtp.client-ip=115.124.30.131
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=linux.alibaba.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=linux.alibaba.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=linux.alibaba.com header.i=@linux.alibaba.com header.b="fEDTAXQJ"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=linux.alibaba.com; s=default;
	t=1738915874; h=From:To:Subject:Date:Message-ID:MIME-Version:Content-Type;
	bh=dVuULOgwJVVDB350O2198xhLn306zAjDe0As6X37muw=;
	b=fEDTAXQJJ9Nsn5ASx8wXw0oGcKc4z7WAzG4/ySqEMm1hjNJkotdigl1xWR/itjBRgpDd4sqcIbSUTqg9/z51Emp4PACF9GacGRd9CaaJhaaL1Hb4mvHZWBvLWssNGL/I8vnjjBnXVxFiOQOVWUDmpDAJx+qll8f/oXyB+Li+9vM=
Received: from DESKTOP-5N7EMDA(mailfrom:ying.huang@linux.alibaba.com fp:SMTPD_---0WOyo3Fx_1738915844 cluster:ay36)
          by smtp.aliyun-inc.com;
          Fri, 07 Feb 2025 16:11:11 +0800
From: "Huang, Ying" <ying.huang@linux.alibaba.com>
To: SeongJae Park <sj@kernel.org>, Bharata B Rao <bharata@amd.com>
Cc: Raghavendra K T <raghavendra.kt@amd.com>,  linux-mm@kvack.org,
  akpm@linux-foundation.org,  lsf-pc@lists.linux-foundation.org,
  gourry@gourry.net,  nehagholkar@meta.com,  abhishekd@meta.com,
  nphamcs@gmail.com,  hannes@cmpxchg.org,  feng.tang@intel.com,
  kbusch@meta.com,  Hasan.Maruf@amd.com,  david@redhat.com,
  willy@infradead.org,  k.shutemov@gmail.com,  mgorman@techsingularity.net,
  vbabka@suse.cz,  hughd@google.com,  rientjes@google.com,
  shy828301@gmail.com,  liam.howlett@oracle.com,  peterz@infradead.org,
  mingo@redhat.com,  nadav.amit@gmail.com,  shivankg@amd.com,
  ziy@nvidia.com,  jhubbard@nvidia.com,  AneeshKumar.KizhakeVeetil@arm.com,
  linux-kernel@vger.kernel.org,  jon.grimm@amd.com,
  santosh.shukla@amd.com,  Michael.Day@amd.com,  riel@surriel.com,
  weixugc@google.com,  leesuyeon0506@gmail.com,  honggyu.kim@sk.com,
  leillc@google.com,  kmanaouil.dev@gmail.com,  rppt@kernel.org,
  dave.hansen@intel.com
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
In-Reply-To: <20250127183403.67757-1-sj@kernel.org> (SeongJae Park's message
	of "Mon, 27 Jan 2025 10:34:03 -0800")
References: <20250127183403.67757-1-sj@kernel.org>
Date: Fri, 07 Feb 2025 16:10:47 +0800
Message-ID: <87ikpmgooo.fsf@DESKTOP-5N7EMDA>
User-Agent: Gnus/5.13 (Gnus v5.13)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ascii

SeongJae Park <sj@kernel.org> writes:

> On Mon, 27 Jan 2025 10:41:07 +0530 Bharata B Rao <bharata@amd.com> wrote:
>
>> On 26-Jan-25 7:57 AM, Huang, Ying wrote:
>> > Hi, Raghavendra,
>> > 
>> > Raghavendra K T <raghavendra.kt@amd.com> writes:
>> > 
>> >> Bharata and I would like to propose the following topic for LSFMM.
>> >>
>> >> Topic: Overhauling hot page detection and promotion based on PTE A bit scanning.
>> >>   
>> >> In the Linux kernel, hot page information can potentially be obtained from
>> >> multiple sources:
>> >>   
>> >> a. PROT_NONE faults (NUMA balancing)
>> >> b. PTE Access bit (LRU scanning)
>> >> c. Hardware provided page hotness info (like AMD IBS)
>> >>   
>> >> This information is further used to migrate (or promote) pages from slow memory
>> >> tier to top tier to increase performance.
>> >>
>> >> In the current hot page promotion mechanism, all the activities including the
>> >> process address space scanning, NUMA hint fault handling and page migration are
>> >> performed in the process context. i.e., scanning overhead is borne by the
>> >> applications.
>> >>   
>> >> I had recently posted a patch [1] to improve this in the context of slow-tier
>> >> page promotion. Here, Scanning is done by a global kernel thread which routinely
>> >> scans all the processes' address spaces and checks for accesses by reading the
>> >> PTE A bit. The hot pages thus identified are maintained in list and subsequently
>> >> are promoted to a default top-tier node. Thus, the approach pushes overhead of
>> >> scanning, NUMA hint faults and migrations off from process context.
>> > 
>> > This has been discussed before too.  For example, in the following thread
>> > 
>> > https://lore.kernel.org/all/20200417100633.GU20730@hirez.programming.kicks-ass.net/T/
>> 
>> Thanks for pointing to this discussion.
>> 
>> > 
>> > The drawbacks of asynchronous scanning including
>> > 
>> > - The CPU cycles used are not charged properly
>> > 
>> > - There may be no idle CPU cycles to use
>> > 
>> > - The scanning CPU may be not near the workload CPUs enough
>> > 
>> > It's better to involve Mel and Peter in the discussion for this.
>> 
>> They are CC'ed in this thread and hopefully have insights to share.
>> 
>> Charging CPU cycles to the right process has been brought up in other 
>> similar contexts. Recent one is from page migration batching and using 
>> multiple threads for migration - 
>> https://lore.kernel.org/all/CAHbLzkpoKP0fVZP5b10wdzAMDLWysDy7oH0qaUssiUXj80R6bw@mail.gmail.com/
>> 
>> Does it make sense to treat hot page promotion from slow tiers 
>> differently compared to locality based balancing? I mean couldn't the 
>> charging of this async thread be similar to the cycles spent by other 
>> system threads like kcompactd and khugepaged?
>
> I'm up to this idea.
>
> I agree the fairness is a thing that we need to aware of.  But IMHO, it is
> something that the async approach can further be advanced for, not a strict
> blocker for now.

Personally, I have no objection to async operations in general.
However, we may need to find some way to control these async operations
instead of adding more and more background kthreads blindly.  How to
charge and constrain the resources used by these async operations is
important too.  For example, some users may want to bind some async
operations on some CPUs.

IMHO, we should think about the requirements and possible solutions
instead of ignoring the issues.

>> 
>> > 
>> >> The topic was presented in the MM alignment session hosted by David Rientjes [2].
>> >> The topic also finds a mention in S J Park's LSFMM proposal [3].
>> >>   
>> >> Here is the list of potential discussion points:
>> >> 1. Other improvements and enhancements to PTE A bit scanning approach. Use of
>> >> multiple kernel threads, throttling improvements, promotion policies, per-process
>> >> opt-in via prctl, virtual vs physical address based scanning, tuning hot page
>> >> detection algorithm etc.
>> > 
>> > One drawback of physical address based scanning is that it's hard to
>> > apply some workload specific policy.  For example, if a low priority
>> > workload has many relatively hot pages, while a high priority workload
>> > has many relative warm (not so hot) pages.  We need to promote the warm
>> > pages in the high priority workload, while physcial address based
>> > scanning may report the hot pages in the low priority workload.  Right?
>> 
>> Correct. I wonder if DAMON has already devised a scheme to address this. SJ?
>
> Yes, I think DAMOS quotas and DAMOS filters can be used to address this issue.
>
> For this case, assuming each workload has its own cgroup, users can add a DAMOS
> scheme for promotion per workload.  The schemes will have different DAMOS
> quotas based on the workloads' priority.  The schemes will also be controlled
> to do the promotion for pages of the specific workloads using DAMOS filters.
>
> For example, below kdamond configuration can be used.
>
> # damo args damon \
> 	--damos_action migrate_hot 0 --damos_quotas 100ms 1G 1s 0% 100% 100% \
> 	--damos_filter reject none memcg /workloads/high-priority \
> 	\
> 	--damos_action migrate_hot 0 --damos_quotas 10ms 100M 1s 0% 100% 100% \
> 	--damos_filter reject none memcg /workloads/low-priority \
> 	--damos_nr_filters 1 1 --out kdamond.json
> # damo report damon --input_file ./kdamond.json --damon_params_omit_defaults
> kdamond 0
>     context 0
>         ops: paddr
>         target 0
>             region [4,294,967,296, 68,577,918,975) (59.868 GiB)
>         intervals: sample 5 ms, aggr 100 ms, update 1 s
>         nr_regions: [10, 1,000]
>         scheme 0
>             action: migrate_hot to node 0 per aggr interval
>             target access pattern
>                 sz: [0 B, max]
>                 nr_accesses: [0 %, 18,446,744,073,709,551,616 %]
>                 age: [0 ns, max]
>             quotas
>                 100 ms / 1024.000 MiB / 0 B per 1 s
>                 priority: sz 0 %, nr_accesses 100 %, age 100 %
>             filter 0
>                 reject none memcg /workloads/high-priority
>         scheme 1
>             action: migrate_hot to node 0 per aggr interval
>             target access pattern
>                 sz: [0 B, max]
>                 nr_accesses: [0 %, 18,446,744,073,709,551,616 %]
>                 age: [0 ns, max]
>             quotas
>                 10 ms / 100.000 MiB / 0 B per 1 s
>                 priority: sz 0 %, nr_accesses 100 %, age 100 %
>             filter 0
>                 reject none memcg /workloads/low-priority
>
> Please note that this is just one example based on existing DAMOS features.
> This may have drawbacks and future optimizations would be possible.

IIUC, this is something like,

physical address -> struct page -> cgroup -> per-cgroup hot threshold

this sounds good to me.  Thanks!

---
Best Regards,
Huang, Ying

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pl1-f181.google.com (mail-pl1-f181.google.com [209.85.214.181])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 555DC155308
	for <linux-kernel@vger.kernel.org>; Thu,  6 Feb 2025 03:15:00 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.214.181
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738811701; cv=none; b=LSTM5OaCHiS8F+0bkgnjWPQqzPC+uwQBLCpoKQR8v8xaIhL5O5J4pwf+ABNf+XB6no1EGg50kmP3dmjbeJkMBpvDgOxcAt0pDyhfJdKqwNL2HgDgauwB7dGXPlgMSvSScsQ6Xgh8FMPYsfIcl7xVLbtcjGtD+c5A6s3Fp8Ll4H4=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738811701; c=relaxed/simple;
	bh=/JeFWiTSOl1cDmmcwJFbN19r2ymeaCQGzWm+iagJ3x4=;
	h=MIME-Version:References:In-Reply-To:From:Date:Message-ID:Subject:
	 To:Cc:Content-Type; b=HNol1gerD5YaRwrGbMNks0++R9nDx2ckY0tzUj/k0UuvE6XDXMcYgHw2iyUWobNhbZ/LpN+dhsCZcgeyC7HqID6upQReBvLnysPY4Ox9E+kxNH8hva53deIrxJlBG9lZ8jTjRd8UPe62g8gKfrIJXJcni3Pz+iKNTDQEdJrLRi0=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=reject dis=none) header.from=google.com; spf=pass smtp.mailfrom=google.com; dkim=pass (2048-bit key) header.d=google.com header.i=@google.com header.b=HG7qGK3b; arc=none smtp.client-ip=209.85.214.181
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=reject dis=none) header.from=google.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=google.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=google.com header.i=@google.com header.b="HG7qGK3b"
Received: by mail-pl1-f181.google.com with SMTP id d9443c01a7336-21f032484d4so80205ad.0
        for <linux-kernel@vger.kernel.org>; Wed, 05 Feb 2025 19:15:00 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20230601; t=1738811699; x=1739416499; darn=vger.kernel.org;
        h=content-transfer-encoding:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:from:to:cc:subject:date
         :message-id:reply-to;
        bh=/JeFWiTSOl1cDmmcwJFbN19r2ymeaCQGzWm+iagJ3x4=;
        b=HG7qGK3bY8HigikhhenFEb+wH03XAh78jeizTSWtdwWNaR4aQ2lvkEDmQoMA4KxOb/
         BmgbucFTzG06Cxsiq6WBhUJuebcKj1fRpjN0i/H0eKFbhhs9/vg/Ccc3ihVJcCGD0KbZ
         rVH408AbPaJkOAtfgGsaMNOIo5xUsNk8L3+DffQ6hTd/jbmXOfBjYSTde9/hB/yRWZd2
         Tc+HDiYbJfZkNTLAPqvk+haH42xt+Hcnl4hutuP/nJntjJn5DRo7+gtQxFtEdAY2+WWm
         7pdJ/75I0dfm+MQxQqTUYmavw0QUAcdDISW6lvCe69aAeYaRmAeHR+WHLEtQ9lhXW821
         EioQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1738811699; x=1739416499;
        h=content-transfer-encoding:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=/JeFWiTSOl1cDmmcwJFbN19r2ymeaCQGzWm+iagJ3x4=;
        b=rfg+J25b+HpxKfWueByB/U5VxtJYI4NDxKhdCRNod8kUMUwpXTpGwBtZUlqWQYI82r
         mSyt9FbDEqNCfaDe+JCLgDhzxNygBOZuHI6TfvpfFEJ/bUAzRa+Yf/McLM1tPg+7s4vO
         60IDRBPchsP9h3f5JEWl9wwgDRHKjV+FKJapXALIzSAB4BUfsJllVcalEPnlepSAjfo3
         gf595CSiemV9Ir+H3jsJofMLiIxW4gNql9jZgMzhpJRSMsf4JMCDby9jCrQ9e0aAQvjX
         qeoF82JCDT7aIF2cmqYLQcvve2XBj40Pbm3w+Al5KRySaFOaHNXIj99QqT6sPzBKEsAC
         pQJA==
X-Forwarded-Encrypted: i=1; AJvYcCUqaewf+o6ZolM8PLK6Y7eGjj4HUa/aIiMAKmXMD9n4TjwBL6CMTUQ5CcVOhQeFBZ8XKHDHCSX6FT5A2/U=@vger.kernel.org
X-Gm-Message-State: AOJu0YxwIJzt122NQYBE+zvyYId3edyUhKXtXhXcBSRBzGD3npHs0dV1
	ck1IGNk2j9znYOuAQ2Wip3HW1RhSU8zE+/MBTPyWN5C63kf7EUaihznl9sRSsDJQ2hWE/9k994T
	xbdblVoBK0NNjrBuk1VshHrV18J9ndYm1LnnG
X-Gm-Gg: ASbGnctneeVKkLsYOqPa1lvDlo7djGMCi2E9LE253whcKxblxFBgyE2Ek+BYHsMDV6C
	sYs8tQPmS1uIgIHODeGCTsDinXx3kYOKqy3njWdA6YFQq06YjeJFPfL8MgFbh53wOon9jY/iYSX
	LdKI0RgcrpK6OESJ34cqrsiqdbtQ==
X-Google-Smtp-Source: AGHT+IEMYysos1RIWu4KraSQB7jvZmlFjQnYGI8ubCzHGgNPVyVmEnJ253SjiVzHGIflpLdIAjZFieoErSbMVInlLmY=
X-Received: by 2002:a17:902:b589:b0:216:4d90:47af with SMTP id
 d9443c01a7336-21f34cc65ddmr583825ad.29.1738811699233; Wed, 05 Feb 2025
 19:14:59 -0800 (PST)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
References: <20250123105721.424117-1-raghavendra.kt@amd.com> <0a9914f8-bec7-4e58-ab12-a87fe3876187@sk.com>
In-Reply-To: <0a9914f8-bec7-4e58-ab12-a87fe3876187@sk.com>
From: Yuanchu Xie <yuanchu@google.com>
Date: Wed, 5 Feb 2025 19:14:42 -0800
X-Gm-Features: AWEUYZn6MPTY1_MU1S8hLVyAdHYXGxJzF-tVdC8MWzr1l3c8Snt-2ud2DsTxV0U
Message-ID: <CAJj2-QE10YknASd9b=_Qe8dWt4eRD1ZtOSFMYe3-26M0aEpUcQ@mail.gmail.com>
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
To: Hyeonggon Yoo <hyeonggon.yoo@sk.com>, Raghavendra K T <raghavendra.kt@amd.com>, 
	"bharata@amd.com" <bharata@amd.com>
Cc: "linux-mm@kvack.org" <linux-mm@kvack.org>, 
	"akpm@linux-foundation.org" <akpm@linux-foundation.org>, 
	"lsf-pc@lists.linux-foundation.org" <lsf-pc@lists.linux-foundation.org>, kernel_team@skhynix.com, 
	42.hyeyoo@gmail.com, "gourry@gourry.net" <gourry@gourry.net>, 
	"nehagholkar@meta.com" <nehagholkar@meta.com>, "abhishekd@meta.com" <abhishekd@meta.com>, 
	"ying.huang@linux.alibaba.com" <ying.huang@linux.alibaba.com>, "nphamcs@gmail.com" <nphamcs@gmail.com>, 
	"hannes@cmpxchg.org" <hannes@cmpxchg.org>, "feng.tang@intel.com" <feng.tang@intel.com>, 
	"kbusch@meta.com" <kbusch@meta.com>, "Hasan.Maruf@amd.com" <Hasan.Maruf@amd.com>, "sj@kernel.org" <sj@kernel.org>, 
	"david@redhat.com" <david@redhat.com>, "willy@infradead.org" <willy@infradead.org>, 
	"k.shutemov@gmail.com" <k.shutemov@gmail.com>, 
	"mgorman@techsingularity.net" <mgorman@techsingularity.net>, "vbabka@suse.cz" <vbabka@suse.cz>, 
	"hughd@google.com" <hughd@google.com>, "rientjes@google.com" <rientjes@google.com>, 
	"shy828301@gmail.com" <shy828301@gmail.com>, "liam.howlett@oracle.com" <liam.howlett@oracle.com>, 
	"peterz@infradead.org" <peterz@infradead.org>, "mingo@redhat.com" <mingo@redhat.com>, 
	"nadav.amit@gmail.com" <nadav.amit@gmail.com>, "shivankg@amd.com" <shivankg@amd.com>, 
	"ziy@nvidia.com" <ziy@nvidia.com>, "jhubbard@nvidia.com" <jhubbard@nvidia.com>, 
	"AneeshKumar.KizhakeVeetil@arm.com" <AneeshKumar.KizhakeVeetil@arm.com>, 
	"linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>, "jon.grimm@amd.com" <jon.grimm@amd.com>, 
	"santosh.shukla@amd.com" <santosh.shukla@amd.com>, "Michael.Day@amd.com" <Michael.Day@amd.com>, 
	"riel@surriel.com" <riel@surriel.com>, "weixugc@google.com" <weixugc@google.com>, 
	"leesuyeon0506@gmail.com" <leesuyeon0506@gmail.com>, honggyu.kim@sk.com, 
	"leillc@google.com" <leillc@google.com>, "kmanaouil.dev@gmail.com" <kmanaouil.dev@gmail.com>, 
	"rppt@kernel.org" <rppt@kernel.org>, "dave.hansen@intel.com" <dave.hansen@intel.com>, Kinsey Ho <kinseyho@google.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

On Thu, Jan 23, 2025 at 9:53=E2=80=AFPM Hyeonggon Yoo <hyeonggon.yoo@sk.com=
> wrote:
> On 1/23/2025 7:57 PM, Raghavendra K T wrote:
> > Bharata and I would like to propose the following topic for LSFMM.
> >
> > Here is the list of potential discussion points:
> > 1. Other improvements and enhancements to PTE A bit scanning approach. =
Use of
> > multiple kernel threads, throttling improvements, promotion policies, p=
er-process
> > opt-in via prctl, virtual vs physical address based scanning, tuning ho=
t page
> > detection algorithm etc.
>
> Yuanchu's MGLRU periodic aging series [1] seems quite relevant here,
> you might want to look at it. adding Yuanchu to Cc.

Thanks for the mention, Hyeonggon Yoo.

Working set reporting doesn't aim to promote/demote/reclaim pages, but
to show aggregate stats of the memory in access recency. The periodic
aging part is optional since client devices wouldn't want a background
daemon wasting battery aging lruvecs when nothing is happening.
For the server use case, the aging kthread periodically invoke MGLRU
aging, which performs the PTE A bit scanning. MGLRU handles unmapped
page cache as well for reclaim purposes.

Reading through the kmmscand patch series.
Kmmscand also keeps a list of mm_struct and performs scanning on them,
so given there're many use cases for PTE A bit scanning, this seems
like an opportunity to abstract some of the mm_struct scanning.
Code-wise the A bit scanners do very similar things, and the MGLRU
version has optional optimizations that reduce the scanning overhead.
I wonder if you have considered migrating pages from the MGLRU young
generation of a remote node, or pages that have remained in the young
generation. Some changes to MGLRU would be necessary in that case.

Also adding Kinsey Ho since he's been looking at page promotion as well.

Thanks,
Yuanchu

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM04-DM6-obe.outbound.protection.outlook.com (mail-dm6nam04on2056.outbound.protection.outlook.com [40.107.102.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id AC76B17993
	for <linux-kernel@vger.kernel.org>; Mon,  3 Feb 2025 02:24:08 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.102.56
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738549450; cv=fail; b=LaN7+BftRMjry7hNTJHRp8UegT6aTMy+qMiWoOL3jUY8ZZVoMLhpFsgPqsAZzU+k02QNMszKl2fKc149sSuXQfnMhCS7xoQHc2a9ADF1Mji0QC8gTiwhvOhZqdP1SshRKzRyAtgAyRRdS2DII0i/s8SPAtPSQXa1V6i7TrjT+yg=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738549450; c=relaxed/simple;
	bh=prrODPLzqqgwEpOJEJQJBBO5HnYjWbXLV0I8v8A6i+I=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=L5vbwGq4sESVeVaP2XH3lL/4DhZWH0+fecNYkFoFAY1QNm/snMpJ7uc816L4ju4kRfC8URpjZrZa7/dlqVWji9+J4cWfJNrMaX1yG+3kzRYTc5wuRiedbm3ARvSI6HBKdWHR5/T2w/BB4+B2h/zhEXVA6dIGpauLRDvodFgejvw=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=ytSiij7X; arc=fail smtp.client-ip=40.107.102.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="ytSiij7X"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=zGnPGoEZDnBsNq5ybdv4dthcMum9YpRXZ4zYwYhL2cV6wAvz42I6szbIR844anPaPie+h3fQik0ao1gRQQEWQYy4KR5ZME2YO8IpNYGXLF63ig61vxbz9ELvx/HrCf1BS0jH5mlGj1xo6jkXFNIqqX3PmiO6DtBLCvTrNLAF15hm44+iLged5CuCcIVe3nJ2+2KMNYXxz1Isnin4m9X5iLg7oQITw61ioVsbkM5e5gmVQCFF250umvX1wS0jvxsqFP91lTKsQRpnJ1p+h15/FmR7fRiI7cpzbBHLNe5xLHee6zQcKdElooTtoxwAYnQGtxNmmlqDGtz9Il11EXHhag==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=6qsVS3mDwYeGn4oLbJV2VGklCkT0ovzAXgYy6UmwiDo=;
 b=SWKEeh0PPG5tbpFWY/gbFTBQVaslVtwVz5TQgTZv2qJyUEJEXtnM612DKcS138B17WrjoyYgJ5jmkFsBo5MZc65O+CHBAaYskvvIIbDojYg1wzxiKS/qeyiPp2Y6yC+YN8SAf/2vsFo3om48SObkEiQ8+hds9ENqr1uny+zIeS42oMWmz9ineUGJ6HCRzE+mtZKqzyY3RJ0Focsan4qcCf1XFWa9RznPG5JzVIQh9pL3yuKa5kv4KzUkwPuGeUan4+T0ajEm+BA/zJN1xNdpIJjQzwGiddiKD5Nb22VrU2t32W4WYdNwGTC2LksvWkrNPtQijnJxdnmjzV+AVR5JTA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=6qsVS3mDwYeGn4oLbJV2VGklCkT0ovzAXgYy6UmwiDo=;
 b=ytSiij7XBsC2QWKAY2QXUoSSnNkj9tmqDqvrt08Nn0Um785QG0c5Ew6JGaf+6owmbI21qpfev/ejVXL+D0bp3381st2c52Q9AzBfrmdn3aRDGhmfCr4D2Dg2rtUSKC9JnEwPFwU+045ggrmG3dCjzj9UCtjlUpc4D7yBe7PYRCg=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from PH7PR12MB5805.namprd12.prod.outlook.com (2603:10b6:510:1d1::13)
 by IA1PR12MB6459.namprd12.prod.outlook.com (2603:10b6:208:3a9::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8398.24; Mon, 3 Feb
 2025 02:24:05 +0000
Received: from PH7PR12MB5805.namprd12.prod.outlook.com
 ([fe80::11c7:4914:62f4:f4a3]) by PH7PR12MB5805.namprd12.prod.outlook.com
 ([fe80::11c7:4914:62f4:f4a3%6]) with mapi id 15.20.8398.021; Mon, 3 Feb 2025
 02:24:05 +0000
Message-ID: <6dfd5d11-4e95-4181-ac3a-d30c4c218df9@amd.com>
Date: Mon, 3 Feb 2025 07:53:47 +0530
User-Agent: Mozilla Thunderbird
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
To: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Cc: linux-mm@kvack.org, akpm@linux-foundation.org,
 lsf-pc@lists.linux-foundation.org, bharata@amd.com, gourry@gourry.net,
 nehagholkar@meta.com, abhishekd@meta.com, ying.huang@linux.alibaba.com,
 nphamcs@gmail.com, hannes@cmpxchg.org, feng.tang@intel.com, kbusch@meta.com,
 Hasan.Maruf@amd.com, sj@kernel.org, david@redhat.com, willy@infradead.org,
 k.shutemov@gmail.com, mgorman@techsingularity.net, vbabka@suse.cz,
 hughd@google.com, rientjes@google.com, shy828301@gmail.com,
 liam.howlett@oracle.com, peterz@infradead.org, mingo@redhat.com,
 nadav.amit@gmail.com, shivankg@amd.com, ziy@nvidia.com, jhubbard@nvidia.com,
 AneeshKumar.KizhakeVeetil@arm.com, linux-kernel@vger.kernel.org,
 jon.grimm@amd.com, santosh.shukla@amd.com, Michael.Day@amd.com,
 riel@surriel.com, weixugc@google.com, leesuyeon0506@gmail.com,
 honggyu.kim@sk.com, leillc@google.com, kmanaouil.dev@gmail.com,
 rppt@kernel.org, dave.hansen@intel.com
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <20250131122803.000031aa@huawei.com>
Content-Language: en-US
From: Raghavendra K T <raghavendra.kt@amd.com>
In-Reply-To: <20250131122803.000031aa@huawei.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: PN3PR01CA0195.INDPRD01.PROD.OUTLOOK.COM
 (2603:1096:c01:be::23) To PH7PR12MB5805.namprd12.prod.outlook.com
 (2603:10b6:510:1d1::13)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH7PR12MB5805:EE_|IA1PR12MB6459:EE_
X-MS-Office365-Filtering-Correlation-Id: 8567b756-e19b-4ca9-35fc-08dd43f9d483
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|366016|1800799024|376014|7416014;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?NXIxOFpWODNsclVRcjIyRFBVVUdIRVVXMERucTVDNGxJb080UmJwK1FVQ3FK?=
 =?utf-8?B?YlZsMG5mczhpY1pNT2o1Ri9vMGNRMjY0THM5RngvMS9UWHZpTklEUVIyLzRs?=
 =?utf-8?B?Y1NDMnRWb3ZjcGg3d1E5WVJPcFllS3psMmlwV0JtWnBBQlNnS2ZnZFJvUUtO?=
 =?utf-8?B?MFpoOUJ6TW9Vb3hSZXZBNjdpUElRR1NRd01QT1hDM1o1cnMrSXo3SnAzdmVj?=
 =?utf-8?B?cHpYdmdjd0xWZUFCS3VnMVlzbHY0MDZEbjJpUzJVOVlYR1VSMFBZTXY4S1cy?=
 =?utf-8?B?dk9udkZYZkowelRDcXd0QjJxa1VTYmN5bnhrSmpuOWR1OVN2SnA1cmNYYWtl?=
 =?utf-8?B?c25oVHlWS042Vi9KL2hRZ0pQUGFMRkppeVJEYVd6VHUxU0lTQVZNaWVFK3N6?=
 =?utf-8?B?UkRWTEtQUEV6RjFpNDRnVXJCc09tbTBZKzNrZE5aNDNEc2pCOXJPWVBWZnFw?=
 =?utf-8?B?V3VxdWNXU1JjbmtFZEJiMFpnUWJPQ0JqVWNYbnh6NGdYYTF3MXU4TGJLSmZh?=
 =?utf-8?B?M1ZFUmVWQ2lRNytoWlpkcnVrMnU5dzV4SHYyNitBWmRMdjlUME1KNCtzWXdv?=
 =?utf-8?B?VDBJSXdCVXJEQ080RWw4dEJQaTZTeUo1NzVma3BXVXNITnFRWHJVZWRVNit4?=
 =?utf-8?B?cTZwTkoyQmVzc3VrZFhOeWowWlVwMWVua1FMejJKUHR2UitGVlc0OWJDWEEw?=
 =?utf-8?B?RE1tRi8rRTRaQ3dJK0lCZ1B4S3VkUVJ6Z2ZZYXNYWmZkOEdpdXMzY2tBOE1N?=
 =?utf-8?B?NGFhYVRES0VnaDFKZUR4NzBQVDFzWVhKcVZmczdUREthUXhPaXk4c24wbmtI?=
 =?utf-8?B?YTVnUExNSml4OVU0SGs1eHVWYnVXMy9GN0d3TXF0THUxcG9KU2F5MDY4MGU0?=
 =?utf-8?B?YVZ5OGtNV1YwSVFQME8ySVNnS1lqS0xWNmd4YXZLTHExVnZYY1BWSFN2M09L?=
 =?utf-8?B?MU1MRFVIR28zQVFpQ1dXL0o4bFVJSjBsTWE4SlVzMk1jdVlwRzlqaTJBWVZa?=
 =?utf-8?B?QkVHMWdJMVVFSndJbUpVN21xK2ZvRE8zOHl4TGJRU1lTLzkxblZoM0dZMy9w?=
 =?utf-8?B?WWdGWWRJWWZXaWpqdlhYS2NrYThEWGhlaHlJbzNaeUFRdE1kSUVCYzkzT1Yx?=
 =?utf-8?B?TzU4VlN3Ynp3WE5pbHVaZnpkeTBKRzFDZ21ZSGdIZ2RtWHhicktSM01xRWdU?=
 =?utf-8?B?UjVXOHZmVWpQOWs0c2JLamRCNTFBVTZjMUVGM2lubkowUU1WdGZVYmJ6M3Bw?=
 =?utf-8?B?d3dyNGtzc3B6Q0kxa1dvZDBqZ0RMM3NRWnhBV1BOb0MrVGVSTDFseDB2WUl2?=
 =?utf-8?B?WDVlVEdlcFBGcFd6Y0tZZXVhWlA5ZW9WYmVIdDZqcm9kOTdhcGpkaU9LTjBq?=
 =?utf-8?B?bEcwSVV4SFA5blNZZkcvaE94enhLd0pxcUhXRVhKTElNTUwrK3lzSHl5SU5Q?=
 =?utf-8?B?bmJxbTQwcVJSVTVDOTdLSVhtaFZEb3VySWJUanYwSE9ES3cvbVNFSXA4V2xQ?=
 =?utf-8?B?eStKUHpGUm44aHpySlRqYUQ5VDZCbUtFcnJIWU1JWkxoZnpaZUhKS1gzM2tx?=
 =?utf-8?B?LzJ4WGxzbm5ucUVDdHFBU2ZPZGJML1ZncFZ0Uk1DdjR2OHNtaEN5VzhsbEU1?=
 =?utf-8?B?ZGhJTWp1NlVhWWJFS3I3OFZrb3FNM09obEp6Z1FUc3NOKy9aQ0w2bDZSSXpJ?=
 =?utf-8?B?ZE5XcmlnMDlsaWdiaTczR0RFZWtwb1A2cW9hSDBKUVg0dU0xWVNrb0hMckYz?=
 =?utf-8?B?SXFSQ3FPcTZhNUEzWHZKUEdQczBzVmxLdzhoemhON2hJWFB0SWVZU0lRbUtn?=
 =?utf-8?B?VGxkWlY3cEl2Q3p1bE1TSkZPMmFqMXBjR2k2YnFhNndkZU10Vk14cXVHS2tn?=
 =?utf-8?Q?QJ/jLU7yWskSY?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH7PR12MB5805.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(366016)(1800799024)(376014)(7416014);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?d0JqcFBweVpzTGpwWkxORFFLWjdTZEN1UkllU0twckZ0NUs2bXNDcGVUK3Na?=
 =?utf-8?B?d0dLRnNpUWQ4VkozNm1ySnR1TG9VL3hTendMZEtzRWhHcW0xcmhzcnVyRzZo?=
 =?utf-8?B?UU9FdG5SL2lQbTlHMVJ5N1k4Q0owZVFJS0dwR1RzeEZRVTNWTTQwcXUxdUtl?=
 =?utf-8?B?TU1QVktURk4yd3RrSkEvSmpwVC9FV2ZhZ0x1czYvOHRsazc1T2tHb1BjSnBC?=
 =?utf-8?B?RktjeGZJSEE0ZHNQQ2RORktvalFTV2FsTGx4UTVCaStySkNaTEVFSXlscUtq?=
 =?utf-8?B?aWIyYStGb1AzVGlvMU1hbjJUVEJLSjlrcktidmk2OUd6MThoU2tTMjYxT1hW?=
 =?utf-8?B?eGJucUxOcFlHejBxY1dCYzBkK21PeUhycU1Xai9qUlNUOUZsdGRvVVIxRnFk?=
 =?utf-8?B?VVpnM1hTMi9GU3RTaGN3ekxyMVo1NTNSZmZMN3ZKY1NxT0p4STExM2sxcHdW?=
 =?utf-8?B?YXg5RTB5cWI3RGJoWVFsZXJSQnJtTTZZZW9WV0h2dzUvcFREZE05NUY0TnM0?=
 =?utf-8?B?MFhGQUFoS1h4VDhiTU12YTl3WWtnbThPSFhINFNvVjNRUTdGeXVCbWFyeFk2?=
 =?utf-8?B?MFU1YkpvbWJjVnFXbkRidU5DVUJZTlpodW9Td1JpQkU3aWRlVDl2dm9FZ0tT?=
 =?utf-8?B?bHgvVjAyc1dGdUh1YnRRUzV0eVQ5NWF2a3d6eGttNkw5UkZienVjSHdqZUE5?=
 =?utf-8?B?dE05WTMxd1p2MGxLVDZ1V0hnTEo4aUFjRU1pUEVyN0NWeDlZVmVqbkpISlZU?=
 =?utf-8?B?TUpxTW9UUzVMUWNxZDgySGxnSzdhRGZmeHN5YUZTRTVpeXN3UUhXVldXa2lh?=
 =?utf-8?B?K0huSy9iT2c3SUFOYmVBcXc4WEgrQjJRQStuR09xclltT1I2YUNhZk95bTZ1?=
 =?utf-8?B?WnVES29KVnd2RTN2a2NLc2xDekZYVFFSVEVSazgvWVp2RUZIS1hxN1Q2eWR6?=
 =?utf-8?B?ZjQzTnliZ2hxSFB5NTkxdkIrbWx6ZUdGaGkvQm11cktYeDdZdi9RYkJiVGlo?=
 =?utf-8?B?QzBhNkZNMzJUYURZamw1d1E2ZXhkdGdGb0R3TWFlaFpQTkcwNmpQRGQ1TWVL?=
 =?utf-8?B?MnRRdnVZTEM2YmZMRTNSUm9kU1hhaDIxa3dYNTNFM2VNWXVDZWpncnAxT0VK?=
 =?utf-8?B?V0tub1NtWEhrdU5raDFlV01EdHpUQXBHektPdHZqeklsOXIvL0p1SzdGTDk1?=
 =?utf-8?B?bFk5aTczajVDTEZDSUY1NStpWDVoVFJCa2hPODRpWDZRc1NRQmF5UEFLRElG?=
 =?utf-8?B?UUhBcFBBN2x3NTRMRHYzSkx0SWFicEdpQ1d4OTEyVmZoakZNS0h4Y0Uxc3Bi?=
 =?utf-8?B?a1RlbmUvMytYV0ovbzlDSFFibGFNZVhuRWJQQTJ2ZmtVcUJ3cDFjOUI3K051?=
 =?utf-8?B?Uis5TitUS1IzMjdYY2FxZUlmdks3RUhVdjFZZFJrZ1crVzFYa1RTQmRlNG1Z?=
 =?utf-8?B?eUhnbTJMbDQrd2lScDlyd21xU3EwMTlPcW5uWWhwRUF5WFZmVGdoTWpFUjF3?=
 =?utf-8?B?aTNFMWwwWUhIWmh0ZlhkRWs1U0JoZGxCamxIaW1XM0J4b0NDUDRFNXZHZnlL?=
 =?utf-8?B?RDhHUDNXbVRORW90UkdXZ3hPVlpJM05vVGF1dER2R1VoT09IbjI2WTU3aXBr?=
 =?utf-8?B?cU1CN3ZNYlM5d1VBZGpyS25FRVBzVUJ0aTVXQ25JemQ4c2N6VWVJR1RCbXBt?=
 =?utf-8?B?V2VvRnFkNmpJTGhjYTBwRm85Qk16WmYwQkpBTG8xd1MrbGpWMmlSQUR4RnUy?=
 =?utf-8?B?RkYxdGtKa05WUjFKTEtvMVVlN0F1NWVtdG9URy9YRDVHRmp2WXNWOWhVeGdh?=
 =?utf-8?B?T1I5cSt0YktYeWgvazJIQitzZXc1YmllVzBBcVErcmFTM1R0TTdIU0w1YzJJ?=
 =?utf-8?B?cHFtT1AxSk5CQ3h3ZzJDWTF6Q0phSFBZQ1UxMlBOM1B0dnphTGNzUHV3eEhl?=
 =?utf-8?B?b2ZMcHdxcG1SUzNObUZ2SFg3NUY3T0RvZ01hOTRmVUtlcXEveHlzSGtEMDFX?=
 =?utf-8?B?ZUxnWk9NVFY1eGliNHI1L1o1eVJMMGRzSnBoRHNVMkZPMVNUL3JWdG5PckN6?=
 =?utf-8?B?UVhVZjFveHVZejdabExHWTBZV2hkekF2Q1BpcXZOVTU4dVowWDVCb2hlVTZJ?=
 =?utf-8?Q?giNIoFu5iNtkB0NdTUTU3Ao6E?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 8567b756-e19b-4ca9-35fc-08dd43f9d483
X-MS-Exchange-CrossTenant-AuthSource: PH7PR12MB5805.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 03 Feb 2025 02:24:05.1749
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: JTn8WIWhKcrim86vFQ5qvjhpZ2OyiBJXKbMqWJIIF4sjTwErcV+A5xG3zVJAWNag9oD2iU5Rzn3ErL18ag6EzQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA1PR12MB6459



On 1/31/2025 5:58 PM, Jonathan Cameron wrote:
> 
>> Here is the list of potential discussion points:
> ...
> 
>> 2. Possibility of maintaining single source of truth for page hotness that would
>> maintain hot page information from multiple sources and let other sub-systems
>> use that info.
> Hi,
> 
> I was thinking of proposing a separate topic on a single source of hotness,
> but this question covers it so I'll add some thoughts here instead.
> I think we are very early, but sharing some experience and thoughts in a
> session may be useful.
> 
> What do the other subsystems that want to use a single source of page hotness
> want to be able to find out? (subject to filters like memory range, process etc)
> 
> A) How hot is page X?
> - Is this useful, or too much data? What would use it?
>    * Application optimization maybe. Very handy for developing algorithms
>      to do the rest of the options here as an Oracle!
> - Provides both the cold and hot end of the scale, but maybe measurement
>    techniques vary and can not be easily combined. Hard in general to combine
>    multiple sources of truth if aiming for an absolute number.>
> B) Which pages are super hot?
> - Probably these that make the most difference if they are in a slower memory tier.
> 
> C) Some pages are hot enough to consider moving?
> - This may be good enough to get the key data into the fast memory over time.
> - Can combine sources of info as being able to compare precise numbers doesn't matter.
> 
> D) Which pages are fairly cold?
> - Likewise maybe good enough over time.
> 
> E) Which pages are very cold?
> - Ideal case for tiering. Swap these with the super hot ones.
> - Maybe extra signal for swap / zswap etc
> 
> F) Did these hot pages remain hot (and same for cold)
> - This is needed to know when to back off doing things as we have unstable
>    hotness (two phase applications are a pain for this), sampling a few
>    pages may be fine.
> 
> Messy corners:
> 
> Temporal aspects.
> - If only providing lists of hottest / coldest in last second, very hard
>    to find those that are of a stable temperature. We end up moving
>    very hot data (which is disruptive) and it doesn't stay hot.
> - Can reduce that affect by long sampling windows on some measurement approaches
>    (on hardware trackers that can trash accuracy due to resource exhaustion
>     and other subtle effects).
> - bistable / phase based applications are a pain but perhaps up to higher
>    levels to back off.
> 
> My main interest is migrating in tiered systems but good to look at what
> else would use a common layer.
> > Mostly I want to know something that is useful to move, and assume 
convergence
> over the long term with the best things to move so to me the ideal layer has
> following interface (strawman so shoot holes in it!):
> 
> 1) Give me up to X hotish pages from a slow tier (greater than a specific measure
> of temperature)
> 2) Give me X coldish pages a faster tier.
> 3) I expect to ask again in X seconds so please have some info ready for me!> 4) (a path to get an idea of 'unhelpful moves' from earlier 
iterations - this
>      is bleeding the tiering application into a shared interface though).
> 

Hello Jonathan,
Thank you for listing all these points in detail.

Agree with you all the points in general.

Very hard/tricky to find balance. for. e.g. if we are slow in finding
hot pages with more accuracy, we need to store more information, on the
other hand prematurely moving pages may result in ping ponging.

So may be we have to balance with moderately accurate information, but
at the same time optimizing such that we avoid redundant scans from
everybody.

Thinking loud again, apart from slow-tier optimization potentials listed
above, I also hope that we can provide necessary information for NUMAB=1
case, to get it to know more about hot VMA's (Mel had pointed that 
identifying hot VMA's helps scanning long back).

> If we have multiple subsystems using the data we will need to resolve their
> conflicting demands to generate good enough data with appropriate overhead.
> > I'd also like a virtualized solution for case of hardware PA trackers 
(what
> I have with CXL Hotness Monitoring Units) and classic memory pool / stranding
> avoidance case where the VM is the right entity to make migration decisions.
> Making that interface convey what the kernel is going to use would be an
> efficient option. I'd like to hide how the sausage was made from the VM.
> 

Thanks and Regards
- Raghu


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B39311C245C
	for <linux-kernel@vger.kernel.org>; Fri, 31 Jan 2025 13:09:09 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738328952; cv=none; b=Yw3tQNDeHdFtYkDc1KaprcIbrGd05Ziv8Fhr4wie6wMLHoMiKKQ1oVccpEliMyz0qzG+uWDL/522EUSJIzzmc4Fe/GL40xQVwowbpgDmFS05uQvTrbs0QoNnSUvmrJLnTEh7GzriLJxSInQ5BjeSUnlt/4unPSjhnuhJKa+tkc0=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738328952; c=relaxed/simple;
	bh=t4zcKHE90KfWeNDwXqb5TfI7Z9zckUGM6AekiBPuMTE=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=j2iJetyiUyHAPD/5Vu2aK1n2Tl2HKhx/lg5Eo8MwcdxzXDjqmTVEIJbnCSOcXVKdsFI/8Mrq6xGqueMZlD7ljmW4qwonLQrp5r/oOb6Zp6Qyc9XPmikj1+ULp89fbMMu8+9aucPbpnueKonD2jEMgXGldHAkSTjrIQgmLRHDtTA=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4Ykx4L0QbVz6M4Pp;
	Fri, 31 Jan 2025 21:06:58 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 68CE6140517;
	Fri, 31 Jan 2025 21:09:06 +0800 (CST)
Received: from localhost (10.195.244.178) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Fri, 31 Jan
 2025 14:09:03 +0100
Date: Fri, 31 Jan 2025 13:09:01 +0000
From: Jonathan Cameron <Jonathan.Cameron@huawei.com>
To: Raghavendra K T <raghavendra.kt@amd.com>
CC: <linux-mm@kvack.org>, <akpm@linux-foundation.org>,
	<lsf-pc@lists.linux-foundation.org>, <bharata@amd.com>, <gourry@gourry.net>,
	<nehagholkar@meta.com>, <abhishekd@meta.com>, <ying.huang@linux.alibaba.com>,
	<nphamcs@gmail.com>, <hannes@cmpxchg.org>, <feng.tang@intel.com>,
	<kbusch@meta.com>, <Hasan.Maruf@amd.com>, <sj@kernel.org>,
	<david@redhat.com>, <willy@infradead.org>, <k.shutemov@gmail.com>,
	<mgorman@techsingularity.net>, <vbabka@suse.cz>, <hughd@google.com>,
	<rientjes@google.com>, <shy828301@gmail.com>, <liam.howlett@oracle.com>,
	<peterz@infradead.org>, <mingo@redhat.com>, <nadav.amit@gmail.com>,
	<shivankg@amd.com>, <ziy@nvidia.com>, <jhubbard@nvidia.com>,
	<AneeshKumar.KizhakeVeetil@arm.com>, <linux-kernel@vger.kernel.org>,
	<jon.grimm@amd.com>, <santosh.shukla@amd.com>, <Michael.Day@amd.com>,
	<riel@surriel.com>, <weixugc@google.com>, <leesuyeon0506@gmail.com>,
	<honggyu.kim@sk.com>, <leillc@google.com>, <kmanaouil.dev@gmail.com>,
	<rppt@kernel.org>, <dave.hansen@intel.com>
Subject: [LSF/MM/BPF TOPIC] Unifying sources of page temperature information
 - what info is actually wanted?
Message-ID: <20250131130901.00000dd1@huawei.com>
In-Reply-To: <20250131122803.000031aa@huawei.com>
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
	<20250131122803.000031aa@huawei.com>
X-Mailer: Claws Mail 4.3.0 (GTK 3.24.42; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500009.china.huawei.com (7.191.174.84) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 31 Jan 2025 12:28:03 +0000
Jonathan Cameron <Jonathan.Cameron@huawei.com> wrote:

> > Here is the list of potential discussion points:  
> ...
> 
> > 2. Possibility of maintaining single source of truth for page hotness that would
> > maintain hot page information from multiple sources and let other sub-systems
> > use that info.  
> Hi,
> 
> I was thinking of proposing a separate topic on a single source of hotness,
> but this question covers it so I'll add some thoughts here instead.
> I think we are very early, but sharing some experience and thoughts in a
> session may be useful.

Thinking more on this over lunch, I think it is worth calling this out as a
potential session topic in it's own right rather than trying to find
time within other sessions.  Hence the title change.

I think a session would start with a brief listing of the temperature sources
we have and those on the horizon to motivate what we are unifying, then
discussion to focus on need for such a unification + requirements 
(maybe with a straw man).

> 
> What do the other subsystems that want to use a single source of page hotness
> want to be able to find out? (subject to filters like memory range, process etc)
> 
> A) How hot is page X?  
> - Is this useful, or too much data? What would use it?
>   * Application optimization maybe. Very handy for developing algorithms
>     to do the rest of the options here as an Oracle!
> - Provides both the cold and hot end of the scale, but maybe measurement
>   techniques vary and can not be easily combined. Hard in general to combine
>   multiple sources of truth if aiming for an absolute number.
> 
> B) Which pages are super hot?
> - Probably these that make the most difference if they are in a slower memory tier.
> 
> C) Some pages are hot enough to consider moving?
> - This may be good enough to get the key data into the fast memory over time.
> - Can combine sources of info as being able to compare precise numbers doesn't matter.
> 
> D) Which pages are fairly cold?
> - Likewise maybe good enough over time.
> 
> E) Which pages are very cold?
> - Ideal case for tiering. Swap these with the super hot ones.
> - Maybe extra signal for swap / zswap etc
> 
> F) Did these hot pages remain hot (and same for cold)
> - This is needed to know when to back off doing things as we have unstable
>   hotness (two phase applications are a pain for this), sampling a few
>   pages may be fine.
> 
> Messy corners:
> 
> Temporal aspects.
> - If only providing lists of hottest / coldest in last second, very hard
>   to find those that are of a stable temperature. We end up moving
>   very hot data (which is disruptive) and it doesn't stay hot.
> - Can reduce that affect by long sampling windows on some measurement approaches
>   (on hardware trackers that can trash accuracy due to resource exhaustion
>    and other subtle effects).
> - bistable / phase based applications are a pain but perhaps up to higher
>   levels to back off.
> 
> My main interest is migrating in tiered systems but good to look at what
> else would use a common layer.
> 
> Mostly I want to know something that is useful to move, and assume convergence
> over the long term with the best things to move so to me the ideal layer has
> following interface (strawman so shoot holes in it!):
> 
> 1) Give me up to X hotish pages from a slow tier (greater than a specific measure
> of temperature)
> 2) Give me X coldish pages a faster tier.
> 3) I expect to ask again in X seconds so please have some info ready for me!
> 4) (a path to get an idea of 'unhelpful moves' from earlier iterations - this
>     is bleeding the tiering application into a shared interface though).
> 
> If we have multiple subsystems using the data we will need to resolve their
> conflicting demands to generate good enough data with appropriate overhead.
> 
> I'd also like a virtualized solution for case of hardware PA trackers (what
> I have with CXL Hotness Monitoring Units) and classic memory pool / stranding
> avoidance case where the VM is the right entity to make migration decisions.
> Making that interface convey what the kernel is going to use would be an
> efficient option. I'd like to hide how the sausage was made from the VM.
> 
> Jonathan
> 


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 62FA21B85EC
	for <linux-kernel@vger.kernel.org>; Fri, 31 Jan 2025 12:28:10 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738326493; cv=none; b=L9oYzktn1MKL9dYcjFUumdZZn4pAibqf3Jc634ctjrBIyAAzCqMfWCUMBYghR+3J7tOyjGh05358GH6JhdiVXBEbqf+f+mhTnKl/GosQvFQgbwsf1F5Ihh5A8UjwdQiPTE349AxbWhRXTMMpcGV7FSszYihmIREuOsFiQ71H5uY=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738326493; c=relaxed/simple;
	bh=AxlAmbsbklafPezcuVaKmZgzl38ZFNWKc4FmDA9Nofw=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=lfKR5+hqMRYvDuuUxdYkS8SdBuNVSN2L1BNIHEPBIWPj0eJuJWelt5WUbrvZdXJBLaswQCLDOsyZ07Q9JOtuM5QRWXYKU2wSJIJh/9FOHIW3R/dLyUIJCsdpeWzyG9dtGccfJ2fN0llyoGy80JRPpQXFX4g3NGQZGsXhbWkbDGA=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.216])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4Ykw932TKzz6M4NV;
	Fri, 31 Jan 2025 20:25:59 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 9BF571400DB;
	Fri, 31 Jan 2025 20:28:07 +0800 (CST)
Received: from localhost (10.195.244.178) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Fri, 31 Jan
 2025 13:28:05 +0100
Date: Fri, 31 Jan 2025 12:28:03 +0000
From: Jonathan Cameron <Jonathan.Cameron@huawei.com>
To: Raghavendra K T <raghavendra.kt@amd.com>
CC: <linux-mm@kvack.org>, <akpm@linux-foundation.org>,
	<lsf-pc@lists.linux-foundation.org>, <bharata@amd.com>, <gourry@gourry.net>,
	<nehagholkar@meta.com>, <abhishekd@meta.com>, <ying.huang@linux.alibaba.com>,
	<nphamcs@gmail.com>, <hannes@cmpxchg.org>, <feng.tang@intel.com>,
	<kbusch@meta.com>, <Hasan.Maruf@amd.com>, <sj@kernel.org>,
	<david@redhat.com>, <willy@infradead.org>, <k.shutemov@gmail.com>,
	<mgorman@techsingularity.net>, <vbabka@suse.cz>, <hughd@google.com>,
	<rientjes@google.com>, <shy828301@gmail.com>, <liam.howlett@oracle.com>,
	<peterz@infradead.org>, <mingo@redhat.com>, <nadav.amit@gmail.com>,
	<shivankg@amd.com>, <ziy@nvidia.com>, <jhubbard@nvidia.com>,
	<AneeshKumar.KizhakeVeetil@arm.com>, <linux-kernel@vger.kernel.org>,
	<jon.grimm@amd.com>, <santosh.shukla@amd.com>, <Michael.Day@amd.com>,
	<riel@surriel.com>, <weixugc@google.com>, <leesuyeon0506@gmail.com>,
	<honggyu.kim@sk.com>, <leillc@google.com>, <kmanaouil.dev@gmail.com>,
	<rppt@kernel.org>, <dave.hansen@intel.com>
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
Message-ID: <20250131122803.000031aa@huawei.com>
In-Reply-To: <20250123105721.424117-1-raghavendra.kt@amd.com>
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
X-Mailer: Claws Mail 4.3.0 (GTK 3.24.42; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100010.china.huawei.com (7.191.174.197) To
 frapeml500008.china.huawei.com (7.182.85.71)


> Here is the list of potential discussion points:
...

> 2. Possibility of maintaining single source of truth for page hotness that would
> maintain hot page information from multiple sources and let other sub-systems
> use that info.
Hi,

I was thinking of proposing a separate topic on a single source of hotness,
but this question covers it so I'll add some thoughts here instead.
I think we are very early, but sharing some experience and thoughts in a
session may be useful.

What do the other subsystems that want to use a single source of page hotness
want to be able to find out? (subject to filters like memory range, process etc)

A) How hot is page X?  
- Is this useful, or too much data? What would use it?
  * Application optimization maybe. Very handy for developing algorithms
    to do the rest of the options here as an Oracle!
- Provides both the cold and hot end of the scale, but maybe measurement
  techniques vary and can not be easily combined. Hard in general to combine
  multiple sources of truth if aiming for an absolute number.

B) Which pages are super hot?
- Probably these that make the most difference if they are in a slower memory tier.

C) Some pages are hot enough to consider moving?
- This may be good enough to get the key data into the fast memory over time.
- Can combine sources of info as being able to compare precise numbers doesn't matter.

D) Which pages are fairly cold?
- Likewise maybe good enough over time.

E) Which pages are very cold?
- Ideal case for tiering. Swap these with the super hot ones.
- Maybe extra signal for swap / zswap etc

F) Did these hot pages remain hot (and same for cold)
- This is needed to know when to back off doing things as we have unstable
  hotness (two phase applications are a pain for this), sampling a few
  pages may be fine.

Messy corners:

Temporal aspects.
- If only providing lists of hottest / coldest in last second, very hard
  to find those that are of a stable temperature. We end up moving
  very hot data (which is disruptive) and it doesn't stay hot.
- Can reduce that affect by long sampling windows on some measurement approaches
  (on hardware trackers that can trash accuracy due to resource exhaustion
   and other subtle effects).
- bistable / phase based applications are a pain but perhaps up to higher
  levels to back off.

My main interest is migrating in tiered systems but good to look at what
else would use a common layer.

Mostly I want to know something that is useful to move, and assume convergence
over the long term with the best things to move so to me the ideal layer has
following interface (strawman so shoot holes in it!):

1) Give me up to X hotish pages from a slow tier (greater than a specific measure
of temperature)
2) Give me X coldish pages a faster tier.
3) I expect to ask again in X seconds so please have some info ready for me!
4) (a path to get an idea of 'unhelpful moves' from earlier iterations - this
    is bleeding the tiering application into a shared interface though).

If we have multiple subsystems using the data we will need to resolve their
conflicting demands to generate good enough data with appropriate overhead.

I'd also like a virtualized solution for case of hardware PA trackers (what
I have with CXL Hotness Monitoring Units) and classic memory pool / stranding
avoidance case where the VM is the right entity to make migration decisions.
Making that interface convey what the kernel is going to use would be an
efficient option. I'd like to hide how the sausage was made from the VM.

Jonathan

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 2A2FF18A93C
	for <linux-kernel@vger.kernel.org>; Mon, 27 Jan 2025 18:34:08 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738002849; cv=none; b=StvBJPTlseV7ospNG7DZ9tW1IIug4SvSkvZEk9Ebjplj+/g/498UY/hRnmEneuEoKOsJWNQZQyeHE2XZvfXUprSGpeb1cVsRpD5kJRtFUSnYfAHHQhWUIsBnbeKedj6bv6o8x0+A/rmerAjQUjjx4u1mWv5ZaoG2MDB+kMwzj5k=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738002849; c=relaxed/simple;
	bh=OObHv3VqXzo+pa00HAsYEtKnB27wzaQ8/ruE7ArSeRY=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=V7ZDZkaxRS2TSbNrlRqgPbbbN/sZZRCSOrt7Vx1UZ1yIULneZy3MeTUgNYeHAhQ3v2cb0EqVzWgQfx+LKri6FJFjmgIgLwEx8X0Vb/qI6cO4GTjg+exWL4rc6t70dk/wEJcw7sShV2vBzKW0UygtPILkftiq6hxnviH9NrmZp2k=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=FFhFXhB0; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="FFhFXhB0"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 63BC4C4CED2;
	Mon, 27 Jan 2025 18:34:08 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1738002848;
	bh=OObHv3VqXzo+pa00HAsYEtKnB27wzaQ8/ruE7ArSeRY=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=FFhFXhB0K5tyFpi/4/JrRgB66ffKwgHG6KxC/YQWrfp0iFOBB0kSNRyM2dxiwxmqH
	 r/RoEMVYZD5dC6yAVY19g3YQ0RGKulJIDL717+2EjCdb9WrKdNXY/3vDy0VkW/RlOM
	 yLYv3WilLtss0qDFqoYoc2RfayLSC/CPJwOwN/a0P85Tyfc+lCKiKr6198fKBVDB0C
	 ELsXEMSiZpJG6OeTHTJ0mq6CRF1HR2UhCLUhUr9VRtGC996Ek5yuTwQ57SRTczKO36
	 J2w7J+OodRqwHN9fvoNwiaRqPKPfoQWb7c3x92kc3mqyD7OJDA16TkDrDHYKgsDyS5
	 44vNurjvUpkMw==
From: SeongJae Park <sj@kernel.org>
To: Bharata B Rao <bharata@amd.com>
Cc: SeongJae Park <sj@kernel.org>,
	"Huang, Ying" <ying.huang@linux.alibaba.com>,
	Raghavendra K T <raghavendra.kt@amd.com>,
	linux-mm@kvack.org,
	akpm@linux-foundation.org,
	lsf-pc@lists.linux-foundation.org,
	gourry@gourry.net,
	nehagholkar@meta.com,
	abhishekd@meta.com,
	nphamcs@gmail.com,
	hannes@cmpxchg.org,
	feng.tang@intel.com,
	kbusch@meta.com,
	Hasan.Maruf@amd.com,
	david@redhat.com,
	willy@infradead.org,
	k.shutemov@gmail.com,
	mgorman@techsingularity.net,
	vbabka@suse.cz,
	hughd@google.com,
	rientjes@google.com,
	shy828301@gmail.com,
	liam.howlett@oracle.com,
	peterz@infradead.org,
	mingo@redhat.com,
	nadav.amit@gmail.com,
	shivankg@amd.com,
	ziy@nvidia.com,
	jhubbard@nvidia.com,
	AneeshKumar.KizhakeVeetil@arm.com,
	linux-kernel@vger.kernel.org,
	jon.grimm@amd.com,
	santosh.shukla@amd.com,
	Michael.Day@amd.com,
	riel@surriel.com,
	weixugc@google.com,
	leesuyeon0506@gmail.com,
	honggyu.kim@sk.com,
	leillc@google.com,
	kmanaouil.dev@gmail.com,
	rppt@kernel.org,
	dave.hansen@intel.com
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion based on PTE A bit scanning
Date: Mon, 27 Jan 2025 10:34:03 -0800
Message-Id: <20250127183403.67757-1-sj@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <c9c70938-24ac-4044-881e-6dffccc78126@amd.com>
References: 
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

On Mon, 27 Jan 2025 10:41:07 +0530 Bharata B Rao <bharata@amd.com> wrote:

> On 26-Jan-25 7:57 AM, Huang, Ying wrote:
> > Hi, Raghavendra,
> > 
> > Raghavendra K T <raghavendra.kt@amd.com> writes:
> > 
> >> Bharata and I would like to propose the following topic for LSFMM.
> >>
> >> Topic: Overhauling hot page detection and promotion based on PTE A bit scanning.
> >>   
> >> In the Linux kernel, hot page information can potentially be obtained from
> >> multiple sources:
> >>   
> >> a. PROT_NONE faults (NUMA balancing)
> >> b. PTE Access bit (LRU scanning)
> >> c. Hardware provided page hotness info (like AMD IBS)
> >>   
> >> This information is further used to migrate (or promote) pages from slow memory
> >> tier to top tier to increase performance.
> >>
> >> In the current hot page promotion mechanism, all the activities including the
> >> process address space scanning, NUMA hint fault handling and page migration are
> >> performed in the process context. i.e., scanning overhead is borne by the
> >> applications.
> >>   
> >> I had recently posted a patch [1] to improve this in the context of slow-tier
> >> page promotion. Here, Scanning is done by a global kernel thread which routinely
> >> scans all the processes' address spaces and checks for accesses by reading the
> >> PTE A bit. The hot pages thus identified are maintained in list and subsequently
> >> are promoted to a default top-tier node. Thus, the approach pushes overhead of
> >> scanning, NUMA hint faults and migrations off from process context.
> > 
> > This has been discussed before too.  For example, in the following thread
> > 
> > https://lore.kernel.org/all/20200417100633.GU20730@hirez.programming.kicks-ass.net/T/
> 
> Thanks for pointing to this discussion.
> 
> > 
> > The drawbacks of asynchronous scanning including
> > 
> > - The CPU cycles used are not charged properly
> > 
> > - There may be no idle CPU cycles to use
> > 
> > - The scanning CPU may be not near the workload CPUs enough
> > 
> > It's better to involve Mel and Peter in the discussion for this.
> 
> They are CC'ed in this thread and hopefully have insights to share.
> 
> Charging CPU cycles to the right process has been brought up in other 
> similar contexts. Recent one is from page migration batching and using 
> multiple threads for migration - 
> https://lore.kernel.org/all/CAHbLzkpoKP0fVZP5b10wdzAMDLWysDy7oH0qaUssiUXj80R6bw@mail.gmail.com/
> 
> Does it make sense to treat hot page promotion from slow tiers 
> differently compared to locality based balancing? I mean couldn't the 
> charging of this async thread be similar to the cycles spent by other 
> system threads like kcompactd and khugepaged?

I'm up to this idea.

I agree the fairness is a thing that we need to aware of.  But IMHO, it is
something that the async approach can further be advanced for, not a strict
blocker for now.

> 
> > 
> >> The topic was presented in the MM alignment session hosted by David Rientjes [2].
> >> The topic also finds a mention in S J Park's LSFMM proposal [3].
> >>   
> >> Here is the list of potential discussion points:
> >> 1. Other improvements and enhancements to PTE A bit scanning approach. Use of
> >> multiple kernel threads, throttling improvements, promotion policies, per-process
> >> opt-in via prctl, virtual vs physical address based scanning, tuning hot page
> >> detection algorithm etc.
> > 
> > One drawback of physical address based scanning is that it's hard to
> > apply some workload specific policy.  For example, if a low priority
> > workload has many relatively hot pages, while a high priority workload
> > has many relative warm (not so hot) pages.  We need to promote the warm
> > pages in the high priority workload, while physcial address based
> > scanning may report the hot pages in the low priority workload.  Right?
> 
> Correct. I wonder if DAMON has already devised a scheme to address this. SJ?

Yes, I think DAMOS quotas and DAMOS filters can be used to address this issue.

For this case, assuming each workload has its own cgroup, users can add a DAMOS
scheme for promotion per workload.  The schemes will have different DAMOS
quotas based on the workloads' priority.  The schemes will also be controlled
to do the promotion for pages of the specific workloads using DAMOS filters.

For example, below kdamond configuration can be used.

# damo args damon \
	--damos_action migrate_hot 0 --damos_quotas 100ms 1G 1s 0% 100% 100% \
	--damos_filter reject none memcg /workloads/high-priority \
	\
	--damos_action migrate_hot 0 --damos_quotas 10ms 100M 1s 0% 100% 100% \
	--damos_filter reject none memcg /workloads/low-priority \
	--damos_nr_filters 1 1 --out kdamond.json
# damo report damon --input_file ./kdamond.json --damon_params_omit_defaults
kdamond 0
    context 0
        ops: paddr
        target 0
            region [4,294,967,296, 68,577,918,975) (59.868 GiB)
        intervals: sample 5 ms, aggr 100 ms, update 1 s
        nr_regions: [10, 1,000]
        scheme 0
            action: migrate_hot to node 0 per aggr interval
            target access pattern
                sz: [0 B, max]
                nr_accesses: [0 %, 18,446,744,073,709,551,616 %]
                age: [0 ns, max]
            quotas
                100 ms / 1024.000 MiB / 0 B per 1 s
                priority: sz 0 %, nr_accesses 100 %, age 100 %
            filter 0
                reject none memcg /workloads/high-priority
        scheme 1
            action: migrate_hot to node 0 per aggr interval
            target access pattern
                sz: [0 B, max]
                nr_accesses: [0 %, 18,446,744,073,709,551,616 %]
                age: [0 ns, max]
            quotas
                10 ms / 100.000 MiB / 0 B per 1 s
                priority: sz 0 %, nr_accesses 100 %, age 100 %
            filter 0
                reject none memcg /workloads/low-priority

Please note that this is just one example based on existing DAMOS features.
This may have drawbacks and future optimizations would be possible.


Thanks,
SJ


> 
> Regards,
> Bharata.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pl1-f181.google.com (mail-pl1-f181.google.com [209.85.214.181])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CFB3425A65E
	for <linux-kernel@vger.kernel.org>; Mon, 27 Jan 2025 07:01:27 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.214.181
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737961299; cv=none; b=HblltUtILJa6qiACmRpHiOcIX+bh9qLi9D9Z1jHyGgvkZxq0OWEhTTOZoq8SJ2ny9CffAsOpq03Ia1kinHowcWREwkLEyaMQkV7gxq4IoruiotNG1F1fTHxT/ADanpY4iFR1CGRD1v3bS+s63DdO3gUsEYb1U+wJqZMF9DkkSZs=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737961299; c=relaxed/simple;
	bh=XAO7HMaCtt7hsPZg/MhP7t0n2z1/cDPQJjtRI4hddXI=;
	h=Date:From:To:cc:Subject:In-Reply-To:Message-ID:References:
	 MIME-Version:Content-Type; b=dhzUzaZihgJ4nJ3A9v2a8uxV4tjHt2uuy+3l5lB4AXafG3yOJVvw+jspIuT0Z5xC078zrkutVup6sbMIIn6O9MBOfBYdb5yjFLvxejD3apMQAJBHFSrM1uZIvi5vm6WlBD03/fT61+ojsH6WhZLawoawZJo4Y2sCWa7wdojQWdU=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=reject dis=none) header.from=google.com; spf=pass smtp.mailfrom=google.com; dkim=pass (2048-bit key) header.d=google.com header.i=@google.com header.b=0MD6vLiG; arc=none smtp.client-ip=209.85.214.181
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=reject dis=none) header.from=google.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=google.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=google.com header.i=@google.com header.b="0MD6vLiG"
Received: by mail-pl1-f181.google.com with SMTP id d9443c01a7336-215740b7fb8so191575ad.0
        for <linux-kernel@vger.kernel.org>; Sun, 26 Jan 2025 23:01:27 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20230601; t=1737961287; x=1738566087; darn=vger.kernel.org;
        h=mime-version:references:message-id:in-reply-to:subject:cc:to:from
         :date:from:to:cc:subject:date:message-id:reply-to;
        bh=d6nwyRUKCsNWbGoX5iljVTur3taYBTQI5qEJ7uoSJSk=;
        b=0MD6vLiGCc5am8I3eMGGE2ui3L6n+Z7g3mLsTKDKcvlPrTMaawBGIOwtHvjzZoA5YZ
         lP3W71nxXA6Hyyf0w7UGxd7ro9bzpBMeIBJSIczm3sEHt1sP3UD4FDEBLLc74PNGEaBe
         KZxwwHmzfMtuuc0hvX5DGIOAQCbFmSKC5G5tpKwK/5PehXoQlFIj+p5y55EtOVH7A/Bz
         Tig+xclGhWxeP8IAKslLDAaaFW61zuuAFa0IOq9zHNJLZAIRwxw3ulkj6rwBINqZRK7B
         dWul8nKqrg8HllJ1m8cCeGKXtsRKUOINnlXN1UrqX6LJRkY3z3jlJIF/2JDE9eoUEIQ9
         ulqg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1737961287; x=1738566087;
        h=mime-version:references:message-id:in-reply-to:subject:cc:to:from
         :date:x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;
        bh=d6nwyRUKCsNWbGoX5iljVTur3taYBTQI5qEJ7uoSJSk=;
        b=nHfRCFYrEMGYvXADQyW0KrqT/fV08pxdlikrfDhaN9JGyjDscT6hLm83DFnQU+n41q
         Ot8OxntbPBOtRTW7IaOCBOCmwF2KaAg9Da+Z1tuJnic/OHmcSy5t1EW3zsnjIENIrHaT
         pVvx2e8ngs/If4lKdz6aHIW0et5mq7oMOP1pni1N9Th/FtpXB/l1exEWHl62OSSG+3Og
         Hfk9OIMl6oJS2HnMp1Jj5iNu8cSLLXMyyaXhu94gff8qlp5xHbLwo1Hm3HT1r6QWfeXW
         7U8E7DWpVDLmo3IliqkLvMYsA3Z5baNsqgmUVID4B+M9NZjgAvVZLNXQqAGLfgaOoHv1
         3lqQ==
X-Forwarded-Encrypted: i=1; AJvYcCUmvbEsVxxyOVF7HwdwRMYVWDqYJRi3s3yqSLrH0hIYmsQCQ3P6gXKhAuM9BW9YX49wzgP7w6AZ9jj3Yfg=@vger.kernel.org
X-Gm-Message-State: AOJu0Yyhag6TNp5eU8rJXpzhszyRH93TF7mT0svlqZvLwflNls8kOz8k
	KfWy4hEZzA3n9uW/KxXes4DRUz5gfiYXkz2iCufq1h0EaBDLMzXTwbSITEOxWA==
X-Gm-Gg: ASbGncsR9BUV7wE9lDgz/Ca4Q7U7mzAgZToW1QkGEOKRZfMKWiYQfqMbjeWPrFpdU/Z
	sRIxGqXEACRpRHkfsnF5UiYSOb1f9MFzdkGC7c9A9qfF82U9YOJ8GIoXBZTRZ+Hhyfyc76UmYwR
	JFmSTu9pYKXvC6y8hYI87b+vNrAiT7YLyenBalfTW3yuPciuEjUsJFDfOSRYpUNK7rB6lz9hpMK
	s8VOE+FAe8g2RyjUKM004JyxkIKY0CMjwip2LaRhzYYHxbNBs6tYBRa89cI0zSAqTyD1SBj7LFe
	l3LEJpl9jg/hjbKcdFuVNAthnzGq6GZO0pQ=
X-Google-Smtp-Source: AGHT+IEX+vMbPpgOyhqwtT8txMxa/aJ6xnhP7cnm2jQB9azYEibJeaVQ1w0SGNCFluWdQ5i8Sbe37Q==
X-Received: by 2002:a17:902:cf03:b0:21a:8331:c23b with SMTP id d9443c01a7336-21daf172701mr2940885ad.28.1737961286787;
        Sun, 26 Jan 2025 23:01:26 -0800 (PST)
Received: from [2620:0:1008:15:a895:32e7:423e:b2d8] ([2620:0:1008:15:a895:32e7:423e:b2d8])
        by smtp.gmail.com with ESMTPSA id d9443c01a7336-21da414cc61sm55454425ad.164.2025.01.26.23.01.25
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sun, 26 Jan 2025 23:01:26 -0800 (PST)
Date: Sun, 26 Jan 2025 23:01:25 -0800 (PST)
From: David Rientjes <rientjes@google.com>
To: Raghavendra K T <raghavendra.kt@amd.com>
cc: Hyeonggon Yoo <hyeonggon.yoo@sk.com>, 
    "linux-mm@kvack.org" <linux-mm@kvack.org>, 
    "akpm@linux-foundation.org" <akpm@linux-foundation.org>, 
    "lsf-pc@lists.linux-foundation.org" <lsf-pc@lists.linux-foundation.org>, 
    "bharata@amd.com" <bharata@amd.com>, kernel_team@skhynix.com, 
    42.hyeyoo@gmail.com, "gourry@gourry.net" <gourry@gourry.net>, 
    "nehagholkar@meta.com" <nehagholkar@meta.com>, 
    "abhishekd@meta.com" <abhishekd@meta.com>, 
    "ying.huang@linux.alibaba.com" <ying.huang@linux.alibaba.com>, 
    "nphamcs@gmail.com" <nphamcs@gmail.com>, 
    "hannes@cmpxchg.org" <hannes@cmpxchg.org>, 
    "feng.tang@intel.com" <feng.tang@intel.com>, 
    "kbusch@meta.com" <kbusch@meta.com>, 
    "Hasan.Maruf@amd.com" <Hasan.Maruf@amd.com>, 
    "sj@kernel.org" <sj@kernel.org>, "david@redhat.com" <david@redhat.com>, 
    "willy@infradead.org" <willy@infradead.org>, 
    "k.shutemov@gmail.com" <k.shutemov@gmail.com>, 
    "mgorman@techsingularity.net" <mgorman@techsingularity.net>, 
    "vbabka@suse.cz" <vbabka@suse.cz>, "hughd@google.com" <hughd@google.com>, 
    "shy828301@gmail.com" <shy828301@gmail.com>, 
    "liam.howlett@oracle.com" <liam.howlett@oracle.com>, 
    "peterz@infradead.org" <peterz@infradead.org>, 
    "mingo@redhat.com" <mingo@redhat.com>, 
    "nadav.amit@gmail.com" <nadav.amit@gmail.com>, 
    "shivankg@amd.com" <shivankg@amd.com>, "ziy@nvidia.com" <ziy@nvidia.com>, 
    "jhubbard@nvidia.com" <jhubbard@nvidia.com>, 
    "AneeshKumar.KizhakeVeetil@arm.com" <AneeshKumar.KizhakeVeetil@arm.com>, 
    "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>, 
    "jon.grimm@amd.com" <jon.grimm@amd.com>, 
    "santosh.shukla@amd.com" <santosh.shukla@amd.com>, 
    "Michael.Day@amd.com" <Michael.Day@amd.com>, 
    "riel@surriel.com" <riel@surriel.com>, 
    "weixugc@google.com" <weixugc@google.com>, 
    "leesuyeon0506@gmail.com" <leesuyeon0506@gmail.com>, honggyu.kim@sk.com, 
    "leillc@google.com" <leillc@google.com>, 
    "kmanaouil.dev@gmail.com" <kmanaouil.dev@gmail.com>, 
    "rppt@kernel.org" <rppt@kernel.org>, 
    "dave.hansen@intel.com" <dave.hansen@intel.com>, yuanchu@google.com
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
In-Reply-To: <0571919b-52e1-4981-8d34-bcc781c0561a@amd.com>
Message-ID: <4c805e3c-4d5d-6880-7e65-cce1041f7d35@google.com>
References: <20250123105721.424117-1-raghavendra.kt@amd.com> <0a9914f8-bec7-4e58-ab12-a87fe3876187@sk.com> <0571919b-52e1-4981-8d34-bcc781c0561a@amd.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII

On Fri, 24 Jan 2025, Raghavendra K T wrote:

> On 1/24/2025 11:23 AM, Hyeonggon Yoo wrote:
> > 
> > 
> > On 1/23/2025 7:57 PM, Raghavendra K T wrote:
> > > Bharata and I would like to propose the following topic for LSFMM.
> > > 
> > > Topic: Overhauling hot page detection and promotion based on PTE A bit
> > > scanning.
> [...]
> > > Here is the list of potential discussion points:
> > > 1. Other improvements and enhancements to PTE A bit scanning approach. Use
> > > of
> > > multiple kernel threads, throttling improvements, promotion policies,
> > > per-process
> > > opt-in via prctl, virtual vs physical address based scanning, tuning hot
> > > page
> > > detection algorithm etc.
> > 
> > Yuanchu's MGLRU periodic aging series [1] seems quite relevant here,
> > you might want to look at it. adding Yuanchu to Cc.
> 
> Thank you for pointing that.
> 

+1.  Yuanchu, do you have ideas for how MGLRU periodic aging and working 
set can play a role in this?

> > By the way, do you have any reason why you'd prefer opt-in prctl
> > over per-memcg control?
> > 
> 
> opt-in prctl came in the MM alignment discussion, and have added that.

Are you planning on sending a refresh of that patch series? :)

> per-memcg also definitely makes sense. I am not aware which is the most
> used usecase. But adding provision for both with one having more
> priority over other may be the way to go.
> 

I would suggest leveraging prctl() for this as opposed to memcg.  I think 
making this part of memcg is beyond the scope for what memcg is intended 
to do, limitation of memory resources, similar to the recent discussions 
on per-cgroup control for THP.

Additionally, the current memcg configuration of the system may also not 
be convenient for using for this purpose, especially if one process should 
be opted out in the memcg hierarchy.  Requiring users to change how their 
memcg is configured just to opt out would be rather unfortunate.

> Overall point here is to save time in unnecessary scanning.
> will be adding prctl in the upcoming version to start with.
> 

Fully agreed.

Thanks very much for proposing this topic, Raghu, I think it will be very 
useful to discuss!  Looking forward to it!

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 50DE682D98
	for <linux-kernel@vger.kernel.org>; Fri, 24 Jan 2025 18:05:12 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737741915; cv=none; b=MY6lfOWH26/5vpjv+8l8AaiEHKGlzaIzmwA5iOMwjpFpwMYWjQGwUw5aNXBIzyPjM3OTX0K693wij3QTvQ9f1OpGEsuDhzu5DXO0FNnSamygzmlhgNLQB+OoGUQAan08oY5JdQd3JM9RcuN5mB+8xIueiRSkolzgOH5lkZNZcjw=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737741915; c=relaxed/simple;
	bh=/7LwD7JlO+Oq02kHAFE1INRF7LPa49c+EMJuvZSz1WM=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=MS6vCkmaOtbg72/xyyh0y1IDPqk0d4eq81wQv6ZhCM41hnHG119+dmlDpVIzBxJiDwuGez0eyiI4EEpmI7HRQXKyUk/h/O6naIo5tagIQveEdylgh6GYienWooMw+SlrmCHdIBIW8Z/DFwc4fmPGm5cnVSYdvLLkXub92vQC++g=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4YflzL3VYyz6M4Y0;
	Sat, 25 Jan 2025 02:03:10 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 61E681402DB;
	Sat, 25 Jan 2025 02:05:09 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Fri, 24 Jan
 2025 19:05:07 +0100
Date: Fri, 24 Jan 2025 18:05:06 +0000
From: Jonathan Cameron <Jonathan.Cameron@huawei.com>
To: Raghavendra K T <raghavendra.kt@amd.com>
CC: SeongJae Park <sj@kernel.org>, <linux-mm@kvack.org>,
	<akpm@linux-foundation.org>, <lsf-pc@lists.linux-foundation.org>,
	<bharata@amd.com>, <gourry@gourry.net>, <nehagholkar@meta.com>,
	<abhishekd@meta.com>, <ying.huang@linux.alibaba.com>, <nphamcs@gmail.com>,
	<hannes@cmpxchg.org>, <feng.tang@intel.com>, <kbusch@meta.com>,
	<Hasan.Maruf@amd.com>, <david@redhat.com>, <willy@infradead.org>,
	<k.shutemov@gmail.com>, <mgorman@techsingularity.net>, <vbabka@suse.cz>,
	<hughd@google.com>, <rientjes@google.com>, <shy828301@gmail.com>,
	<liam.howlett@oracle.com>, <peterz@infradead.org>, <mingo@redhat.com>,
	<nadav.amit@gmail.com>, <shivankg@amd.com>, <ziy@nvidia.com>,
	<jhubbard@nvidia.com>, <AneeshKumar.KizhakeVeetil@arm.com>,
	<linux-kernel@vger.kernel.org>, <jon.grimm@amd.com>,
	<santosh.shukla@amd.com>, <Michael.Day@amd.com>, <riel@surriel.com>,
	<weixugc@google.com>, <leesuyeon0506@gmail.com>, <honggyu.kim@sk.com>,
	<leillc@google.com>, <kmanaouil.dev@gmail.com>, <rppt@kernel.org>,
	<dave.hansen@intel.com>
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
Message-ID: <20250124180506.00002936@huawei.com>
In-Reply-To: <dccf7286-2ab2-4a48-92fc-49b3a4c09e1d@amd.com>
References: <20250123182050.53941-1-sj@kernel.org>
	<dccf7286-2ab2-4a48-92fc-49b3a4c09e1d@amd.com>
X-Mailer: Claws Mail 4.3.0 (GTK 3.24.42; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100012.china.huawei.com (7.191.174.184) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 24 Jan 2025 14:24:40 +0530
Raghavendra K T <raghavendra.kt@amd.com> wrote:

> On 1/23/2025 11:50 PM, SeongJae Park wrote:
> > Hi Raghavendra,
> > 
> > On Thu, 23 Jan 2025 10:57:21 +0000 Raghavendra K T <raghavendra.kt@amd.com> wrote:
> >   
> >> Bharata and I would like to propose the following topic for LSFMM.
> >>
> >> Topic: Overhauling hot page detection and promotion based on PTE A bit scanning.  
> > 
> > Thank you for proposing this.  I'm interested in this!
> >   
> 
> Thank you.
> 
> [...]
> 
> >> virtual vs physical address based scanning,  
> > 
> > DAMON supports both virtual and physical address spaces monitoring.  DAMON's
> > pages migration is currently not supported for virtual address spaces, though I
> > believe adding the support is not difficult.
> >   
> 
> Will check this.
> 
> [...]
> 
> >>
> >> 3. Discuss how hardware provided hotness info (like AMD IBS) can further aid
> >> promotion. Bharata had posted an RFC [4] on this a while back.  
> > 
> > Maybe CXL Hotness Monitoring Unit could also be an interesting thing to discuss
> > together.
> >   
> 
> Definitely.

Thanks for the shout out SJ.  I'm definitely interested in this topic from the
angle of the hardware hotness monitoring units (roughly speaking ones that give
you a list of hot pages - typically by PA).  Making sure any solution works
for those is perhaps key for the longer term.  Not entirely clear to me that
we are ready yet for data aggregation solution, or mixed techniques
but definitely interesting to brainstorm.

Until now my main focus has been on getting infrastructure in place to work out the
lower levels of using a hardware hotness monitoring unit (using QEMU for now
with TCG plugins to get the access data).  In general, not stuff I suspect
anyone will want to discuss at LSF/MM, but perhaps providing insights into how
good data we might get could be.

Unless the hardware units people build are very capable (and expensive)
the chances are we will have to deal with accuracy limitations that I
suspect the users of this data for migration etc do not want to explicitly
deal with.  If our tracking is coming from multiple sources we need to
deal with differences in, and potentially estimation of accuracy.
Anything efficient is going to have some accuracy issues (regions for Damon,
access bit scanning frequency for your technique, sampling for page fault
techniques, data in wrong place - access bit's will tell you to promote
stuff that is always in cache - arguably a waste of time etc)
I've no idea yet how painful this is going to be.  Using the different
sources to overcome limitations on each one is interesting but likely
to be complex and tricky to generalize.  Maybe access bit scanning
to detect hotish large scale regions, then a hardware tracker to separate
out 'hot' from 'warm'.  Sounds fun, but far form general!

Lots of problems to solve in this space. And when we have done that, there
is paravirtualizing hardware trackers / other methods, application
specific usage of the data (some apps will know better than the kernel and
will want this data, security / side channels etc).

For stretch goals there is even the fun question of hotness monitoring down
stream of interleave, particularly when it's scrambled and not a power of
2 ways.  Again, maybe not a general problem but will affect data biases.
How much of that we want to hide down in implementations below some general
'give me hot stuff' is an open question (I'm guessing hide almost everything
beyond controls on data bandwidth).

Jonathan

> 
> >>
> >> 4. Overlap with DAMON and potential reuse.  
> > 
> > I confess that it seems some of the works might overlap with DAMON to my biased
> > eyes.  I'm looking forward to attend this session, to make it less biased and
> > more aligned with people :)
> >   
> 
> Yes. Agree.
> 
> >>   
> >> Links:
> >>
> >> [1] https://lore.kernel.org/all/20241201153818.2633616-1-raghavendra.kt@amd.com/
> >> [2] https://lore.kernel.org/linux-mm/20241226012833.rmmbkws4wdhzdht6@ed.ac.uk/T/
> >> [3] https://lore.kernel.org/lkml/Z4XUoWlU-UgRik18@gourry-fedora-PF4VCD3F/T/
> >> [4] https://lore.kernel.org/lkml/20230208073533.715-2-bharata@amd.com/  
> > 
> > Again, thank you for proposing this topic, and I wish to see you at Montreal!
> >   
> 
> Same here .. Thank you :)
> 
> - Raghu
> 
> 


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-SN1-obe.outbound.protection.outlook.com (mail-sn1nam02on2062.outbound.protection.outlook.com [40.107.96.62])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 730A11D014E
	for <linux-kernel@vger.kernel.org>; Fri, 24 Jan 2025 09:03:03 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.96.62
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737709385; cv=fail; b=PBnvVenQJIDZjlvHwKcmvsuJYnFiiiG4oMlIxcegAI6QfYF6xmxuapbJ3BMZgPiZzwBwR+s6q/6gIggi1Kr5ct2ZtsfPZRXLl0iOiFyJT1dhx/78uFxpYuEGUXYGO5hqwucCgEWT+6iz4o9sGZcLc8+suKAAxLMfZ2naC7ZMpyw=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737709385; c=relaxed/simple;
	bh=1M6XB0AL8sjfQ8ucgkjPhbOevvESDGOQF4Y/MlOShpA=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=Kn4UnrW5Z14Yb55Bg7kQVAES7AuSLsDMAoqj2m3PbLmB9iXOwU6t1NXN44s6YrEi3PNe5dIQHqzA21w4nRvPnV9arcPaojfPT5gOko6aWjXvkvxel2pu9NZHC2mPMErobRF2YEv0wf7QhbXFAyqxQOcdrLqWyJRczWYvqWRFVzs=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=FMpVxGdp; arc=fail smtp.client-ip=40.107.96.62
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="FMpVxGdp"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=vZjodPQpsNQmB4c+jlkf9ZjiCxZf5f/3bCZn3wJptef8ABRNG0F2w4sbitmtBgYrCnwluLMQl+ByxYmHGl5ux9jcA3ykv1NiXwTfy4lbvWZebBLD8VaDW/13GL83M3s0rxCT/jcRIhyzmZR4n9GUWNpa2rUvO0yb49g/YWtfjRD24zll2O9tV6RSdCKa8s2Y+fqnIsXSmD7PaIDMU9QIKfzWzKqnbaijyiBcDqYNTKgVzi8UI5Xg7rVPuwP8DqMeMi7vrqGzpMgvD4iMRMCAIB4ETp9YARn4sJEX2ixvHxCEHcJ9vcypVs5+zdqT5fDJsDwIjXEOOtHb02W+jOOVVg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=zSwTYdHxybKlVzCHgmyIZgBy4oqjdOcLQJCe57BrBmc=;
 b=ywRnTXeE6jA4hESbSQWcn6mvyMn4/i11hDxHmevFgQgKD8i2wCBAJmgZhW3VtJ8eaOy+Uc1kobMIbkhX7O4xal6kZnIVJDJ6ARLWixnhqmh0ehdTJ/yfQi6upYQ/xiRs9qFFzgv1caS0A+RdoYZomdByFse+/grtVYf5esjAs+grml58g+aO5K/jV8dSU1SrYz5Y50c5MvzX42iwfC8omVrxFFV9bbcVYG4moDWO5/JE1sARWfEdjuVNL6Kk0uXxQoWPpLa/zUi3atDq8+G1lLC3lk//8YnHbq0Q7vv7RgQGRAm8/rBOgzvcbw2m5z+RwiBMg1iQhapAejUz65nnEg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zSwTYdHxybKlVzCHgmyIZgBy4oqjdOcLQJCe57BrBmc=;
 b=FMpVxGdpPcmoQhoTWRA74l9VtIt4BFA1T6OQNhUP51hok3ESmW7EaicWTGR4A1CvMJu/1yV7E7a5lKIEhNmQjndA2pu2kjEYsdBJ3PvBZ7Qz3Des7H0oVUt8QewKCCJjfmWthzS5zvqHnha2Zi2exeCXjvhGasnQ3rsJ+54wEGU=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from PH7PR12MB5805.namprd12.prod.outlook.com (2603:10b6:510:1d1::13)
 by PH0PR12MB5646.namprd12.prod.outlook.com (2603:10b6:510:143::6) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8377.16; Fri, 24 Jan
 2025 09:03:00 +0000
Received: from PH7PR12MB5805.namprd12.prod.outlook.com
 ([fe80::11c7:4914:62f4:f4a3]) by PH7PR12MB5805.namprd12.prod.outlook.com
 ([fe80::11c7:4914:62f4:f4a3%6]) with mapi id 15.20.8356.020; Fri, 24 Jan 2025
 09:03:00 +0000
Message-ID: <0571919b-52e1-4981-8d34-bcc781c0561a@amd.com>
Date: Fri, 24 Jan 2025 14:32:42 +0530
User-Agent: Mozilla Thunderbird
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
To: Hyeonggon Yoo <hyeonggon.yoo@sk.com>,
 "linux-mm@kvack.org" <linux-mm@kvack.org>,
 "akpm@linux-foundation.org" <akpm@linux-foundation.org>,
 "lsf-pc@lists.linux-foundation.org" <lsf-pc@lists.linux-foundation.org>,
 "bharata@amd.com" <bharata@amd.com>
Cc: kernel_team@skhynix.com, 42.hyeyoo@gmail.com,
 "gourry@gourry.net" <gourry@gourry.net>,
 "nehagholkar@meta.com" <nehagholkar@meta.com>,
 "abhishekd@meta.com" <abhishekd@meta.com>,
 "ying.huang@linux.alibaba.com" <ying.huang@linux.alibaba.com>,
 "nphamcs@gmail.com" <nphamcs@gmail.com>,
 "hannes@cmpxchg.org" <hannes@cmpxchg.org>,
 "feng.tang@intel.com" <feng.tang@intel.com>,
 "kbusch@meta.com" <kbusch@meta.com>,
 "Hasan.Maruf@amd.com" <Hasan.Maruf@amd.com>, "sj@kernel.org"
 <sj@kernel.org>, "david@redhat.com" <david@redhat.com>,
 "willy@infradead.org" <willy@infradead.org>,
 "k.shutemov@gmail.com" <k.shutemov@gmail.com>,
 "mgorman@techsingularity.net" <mgorman@techsingularity.net>,
 "vbabka@suse.cz" <vbabka@suse.cz>, "hughd@google.com" <hughd@google.com>,
 "rientjes@google.com" <rientjes@google.com>,
 "shy828301@gmail.com" <shy828301@gmail.com>,
 "liam.howlett@oracle.com" <liam.howlett@oracle.com>,
 "peterz@infradead.org" <peterz@infradead.org>,
 "mingo@redhat.com" <mingo@redhat.com>,
 "nadav.amit@gmail.com" <nadav.amit@gmail.com>,
 "shivankg@amd.com" <shivankg@amd.com>, "ziy@nvidia.com" <ziy@nvidia.com>,
 "jhubbard@nvidia.com" <jhubbard@nvidia.com>,
 "AneeshKumar.KizhakeVeetil@arm.com" <AneeshKumar.KizhakeVeetil@arm.com>,
 "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
 "jon.grimm@amd.com" <jon.grimm@amd.com>,
 "santosh.shukla@amd.com" <santosh.shukla@amd.com>,
 "Michael.Day@amd.com" <Michael.Day@amd.com>,
 "riel@surriel.com" <riel@surriel.com>,
 "weixugc@google.com" <weixugc@google.com>,
 "leesuyeon0506@gmail.com" <leesuyeon0506@gmail.com>, honggyu.kim@sk.com,
 "leillc@google.com" <leillc@google.com>,
 "kmanaouil.dev@gmail.com" <kmanaouil.dev@gmail.com>,
 "rppt@kernel.org" <rppt@kernel.org>,
 "dave.hansen@intel.com" <dave.hansen@intel.com>, yuanchu@google.com
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <0a9914f8-bec7-4e58-ab12-a87fe3876187@sk.com>
Content-Language: en-US
From: Raghavendra K T <raghavendra.kt@amd.com>
In-Reply-To: <0a9914f8-bec7-4e58-ab12-a87fe3876187@sk.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: PN2PR01CA0136.INDPRD01.PROD.OUTLOOK.COM
 (2603:1096:c01:6::21) To PH7PR12MB5805.namprd12.prod.outlook.com
 (2603:10b6:510:1d1::13)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH7PR12MB5805:EE_|PH0PR12MB5646:EE_
X-MS-Office365-Filtering-Correlation-Id: 134aae81-599a-4f1c-8a2e-08dd3c55e740
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|376014|7416014|366016|1800799024;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?dlluTFYvcEdhY2duUjB0d0MvQTN4SnFlalAwNW5qREI3Qm5pZmdhWUs2dXZh?=
 =?utf-8?B?UExJc0RvbmxRbytIRURSbkRHVzlSOWtSK0dwckVHVUkyaGRxa1FWT2htazg3?=
 =?utf-8?B?MEcwOUl4ZW1QZ2ZHRmNGWThRTGJvTy9jYVNKK3NWcW9uSG1ZRlFSK012YzEw?=
 =?utf-8?B?V3EyRUZBSVUzbEwxRFljWmc2VXNHOVlFSjArc1YzeGpQMEF1Uzh3VVdhTUxR?=
 =?utf-8?B?ZHJkWVJnblp0eEl5VzJ3VXBBNUNOUHJWZFZRb281NnpReWl3cHlDUEMvVDYz?=
 =?utf-8?B?cEZxUjloVFVZSUo4SXgrUlhDTXo4MDRyNnRhbm9Gd1VMOCs2VGQ1YW01RFpC?=
 =?utf-8?B?SzVtdy9xZlBrUnY1MGlWTktnZGFXVDMvRFhvYmpxby8xcm9OMksxY0ZYY3dK?=
 =?utf-8?B?eUsxaXowbXRLVjhMMEplMFJMYWtudm1scWNSSHcxNGlDM2g5bjUzWEJSSXdk?=
 =?utf-8?B?cDhkWm4rOFNnOU1qZC9ZT2poRm52Q091YUUrMVlhaHJMSTVwUnZPRHAreTA4?=
 =?utf-8?B?OHFsajA1MmIwcm9ydlI1MW15YlJnbmpZenJEaWhMd3ZJVUQycElNRDltbGE3?=
 =?utf-8?B?azdMcUhRU1VvQnBlN1VWUnlPOURnUWZneXBDOURQb0NDZVZQN2RUcWNlNGZn?=
 =?utf-8?B?dERxR0FmRFNtUWJwS3NOS3hYQU51ekxaZUY3TTJPUlZza0NSbytlNGNsdSs1?=
 =?utf-8?B?MDduZEx6QUFseFJsMGVnYS9UQVlIcExPZW9xZjRkY2U0eElsZjA2KzBUZEMr?=
 =?utf-8?B?cms2OUl3TE1TbU5CRkM2Mks0c3IxeFVDQUYxbFBpRlJRNkpsdHJwVVA4bXlK?=
 =?utf-8?B?VUVMSGU2cHZHelZzbHhHVEx1MjlFVlNlK2c4Q0dCV1U4c2lpNnYvVnRKN2tU?=
 =?utf-8?B?R0tTY3dJSFNKc2JxbHZ0N3lQVzgwSjlya2ozbXIrbWNIWEVXUXVBRTlBNjQy?=
 =?utf-8?B?SE5HK2ZRUjlIY3Z3OStXcnVLN3BnRThOSURkb3l1d3pzRUUzT2loc2dCbDVI?=
 =?utf-8?B?TkpHaHVhUklXMk9WeUJaTTNxcWllVHEwQmVsKzZIRUlNVnpkOERKRWYwRjBl?=
 =?utf-8?B?TnRIcGdmTEhJdk0xMzErK01JMVNDTWpObU1wVXlyaEtncG9KQzFOSnVLdnBy?=
 =?utf-8?B?aVV6Z0RKY09ONjY1bW54QlNMVmQ4LzBNOGQ2Rnc0UnV1OFJJL1c2a1F5eHFr?=
 =?utf-8?B?OVdwMVJYcURrWjgzWEx3U3FpMzBnTTI5dWF2bm9QN0s5N0I2OWVqOWF0dHpI?=
 =?utf-8?B?VlNKcVdZWXJ2MmtMUGZ6M2t0ci8zY2JNdllwdzZVN0F4NVR5Vk9ydXlWL3ZH?=
 =?utf-8?B?ZDd2Q2gwc0dxbjhqY3pjb3RmWDFmYzFTcDVGaXVQSlhodmZFSktxM0JBdWlx?=
 =?utf-8?B?N3pSamUvWXBYNzFZd0NWenhVSmJ0Y2RkdjRYS3dZaTJnZXBWcDVtdFdBcFlZ?=
 =?utf-8?B?a1d0N3BVanhUQThaaHJDM00zQ09HbVpMSlRTcGJlK2VTL09yVFplcUltNHE3?=
 =?utf-8?B?bC9YRXByR2FkM2ErNS9oY2JCZ2xQYXROS1V4K2c4QVAwYzhNRk5jZ0htMUti?=
 =?utf-8?B?ZFA4eTV3RmV0NTFYVk9VeC8wa1dZWXBzOVkxM3VVelJWVXBjZ0I1Ry85alZ2?=
 =?utf-8?B?VElqc1JlMkxvSkRCQlN0VzhDdEZLdzIrVGtQYktBWGRRWFJOVEZhYi81R3BT?=
 =?utf-8?B?V2hlQ3IxUm85alMzUWIxNktZNWFwMWkyeUJ0RDBoNnpPY3lTTWpUNFFsQzhM?=
 =?utf-8?B?V2pvQjBTenRxdzdBek44T1ovMmtlVnA4MDAzTHAxS0RNOVUrd1g5UnJpS0d6?=
 =?utf-8?B?MStXY3ljYWJCTDlzajRJdz09?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH7PR12MB5805.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(376014)(7416014)(366016)(1800799024);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?d01xZEVYUEdQcnJ4Y01QNDVEdEhxMzVSNXI5NzZQOGFEa05qU2RMOXlhaUt0?=
 =?utf-8?B?eThPRzRQWFN5bGg2VWIzTTRSa2I0eWN0ZFBHK0pMS09vTXlqck1sMnZONTNB?=
 =?utf-8?B?dnVhVVFpa29EUXB6VjlERkhMUHZnRC93WE9yNlFtUXRhVnJsWXRqQlE3L3Fy?=
 =?utf-8?B?S0tXd0Y4Vi9ocW1udGNpWDFBUW5qczlaeVNkRmU2eTQ2R3d4UzRSYjg5SXZx?=
 =?utf-8?B?V3g4LzcyeHNnZ0V4Q2p4R29lWHBXdjRLYzB6T2EvMVoydzJMcHY3SUluUkJh?=
 =?utf-8?B?UHh1YUFCZWU3VXdvd3ZyTm02NStmbmpjay9KYVNFeXM2WERxVTMrZnhXbERW?=
 =?utf-8?B?V3BZQXdTM1BXV0V4Sm5QRktIc3FrRG5VNlF3RUpvcGZxSWRmbFBYc3hId2V4?=
 =?utf-8?B?UFJLS09TaG1TQUxYRlAzVXZYbjE2R1p3N25XeWtqaGFlWU8xamdVWCtnK3k1?=
 =?utf-8?B?YW1hZE9jMEREMWxJc0tDb1FOMHFhUnJDanZlK2dKTW5IME1Cb2tORytHMk41?=
 =?utf-8?B?ajkwNStqbzNrUzFTeElFcEJpVjJRenU0S0N1VWU1eWdOdG8rU2pEWmpkTnFY?=
 =?utf-8?B?ZDJCZ29aMDZ0Vit5MkNHWGVIQXhpT0RPRS9HZEhLcjNpdzFjeHRpVjQ2dFNM?=
 =?utf-8?B?MUZPSDJ3NisrUXhzVmhGTW9Cakp5MEFTZHdxcEY5dGFVdW50SHloaThObzBw?=
 =?utf-8?B?aHhDZHN6aWwrNTFqd3J0L3lRV2tiZkxvVGU1YU9LWEFrb1ZIT0xGUWdYOU9R?=
 =?utf-8?B?Mm84MS9pUU5iR3F4VUZvZFEwZ3MwQnV5c1JkOU5SQUIyOVZMZlEyN1V2UVdE?=
 =?utf-8?B?NDdOeFBoOFM3U1htM3p4R0ZaRXFWNkdMb24wZnpZUVEyeUtkeHRCL2RwL2wv?=
 =?utf-8?B?VmRVWktXbVR6c2VOeXdEQ3krNnF4Q3RoQUt1TFprcW8xYUp2aHNJWVRHeWxj?=
 =?utf-8?B?bWNWdXlWdVdpTzNLeUpoYU1Qelo2cGJ6YlB6YUwyRVJMUGVPWlFndXl3V3Qr?=
 =?utf-8?B?ejRSdDg0UmtvMXhPdHowVmxHcEdnRHYxeUtFaGpHMmFKbUo3eVFLeDZKc3F3?=
 =?utf-8?B?L2hPWHJnZTNubnMwMyt1c2s3MGh1RnQ1MFU3TTdOWHhRVU1RSTVSYTdxK01u?=
 =?utf-8?B?Q2VkQjcwY3loajh2RU8wM2tCMUd1SDhlY0k5dUh0cEF1TXFiYnN4bUs5WGtW?=
 =?utf-8?B?THRDazR3Mi93bXdGOGRXZmhWZG95azRZRFJhWXFzeHhJQk5pclFnR0t6Nk8x?=
 =?utf-8?B?Y012eHN1YzJqc0YxSTk3QVJ2OUhUNlc3bUs5Q0thSFA0QlNmdXBLYUlmd21q?=
 =?utf-8?B?ZmQ5UXZaMDd3aldVS25GN2p5dHZSQ2pWMEExRVhIZHdvanJrTFEwUUdnTFVk?=
 =?utf-8?B?Mm1YRzJJcmFPbGNNNURGT29jQW1DWHE4dExzcXlUT0VKSDlueEtVQW5BcHBv?=
 =?utf-8?B?YnROd0Z2ckNTVWcydm1CenRSVzY3eVk4V2g5MEZ2SWZGcGVmV3RkZzdDdVlj?=
 =?utf-8?B?NFpDdi9BMk53RkhNL2RZeFM4dEg2dEJ4VHN6ZWl0ak5ESzl3TVFjZ0sweHQz?=
 =?utf-8?B?QWhmK1VqSEYzOHpFc3BNTXdBa2NpL0YvalhXaEZ4ejRSTklNVnNHSWxuclpD?=
 =?utf-8?B?THdjbGJNQXNHNy9BUk8rU1hhSDlEeDU4SlQwRWwydGFvdW5OV0FNbG9DYWV5?=
 =?utf-8?B?OVNpK2s3MEwwa3lsWXNheVlJNklnRjV2TEt6ZUg0Rnh5UmVHa3hrZzN0QXpB?=
 =?utf-8?B?MHExdnR5VWU0YkpUbnczd1Zob2I4NkNpME81bmRJMGpiNFdLditGemlqckJi?=
 =?utf-8?B?aTZ4eGdFdnFPSEl1bGJ1QzhlUmdzNEMwZWNYMWlQR2Y0ZTVRK2k5d3UvaUFP?=
 =?utf-8?B?NE9GVXVaclRUNkFyWlhHU09ldkxURTRDNDZFSmRyUnJ5N1duWitWYkI4aGph?=
 =?utf-8?B?SmMvcGlrcW5YUFc3L0pDS2F5OU1Xb3B1MU5PdUk2bkhzODVTUjFRK1pGK0h0?=
 =?utf-8?B?STlTWXp5VEt6Z29kYkNpRGU2N1ppWThXaENZOHFibWQwNFFBalFIUU1yaUdN?=
 =?utf-8?B?TjhjekdSVVFhQlRVZzNlY01RZlBhSGRhTk1XbHFINTRRYkFTQ0t1OC8ra0Rt?=
 =?utf-8?Q?UdJgzTNBC60sGuOwjqIFsDNjI?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 134aae81-599a-4f1c-8a2e-08dd3c55e740
X-MS-Exchange-CrossTenant-AuthSource: PH7PR12MB5805.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jan 2025 09:03:00.7337
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: zralNgS9oajUpnBu5PtHarX42JmypQ+JKNr/RcMU0Hk+sCfgfugph2zQMAC0ONXHO5WeHStpIH46I44ZgeQ5Tg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH0PR12MB5646

On 1/24/2025 11:23 AM, Hyeonggon Yoo wrote:
> 
> 
> On 1/23/2025 7:57 PM, Raghavendra K T wrote:
>> Bharata and I would like to propose the following topic for LSFMM.
>>
>> Topic: Overhauling hot page detection and promotion based on PTE A bit 
>> scanning.
[...]
>> Here is the list of potential discussion points:
>> 1. Other improvements and enhancements to PTE A bit scanning approach. 
>> Use of
>> multiple kernel threads, throttling improvements, promotion policies, 
>> per-process
>> opt-in via prctl, virtual vs physical address based scanning, tuning 
>> hot page
>> detection algorithm etc.
> 
> Yuanchu's MGLRU periodic aging series [1] seems quite relevant here,
> you might want to look at it. adding Yuanchu to Cc.

Thank you for pointing that.

> 
> By the way, do you have any reason why you'd prefer opt-in prctl
> over per-memcg control?
>

opt-in prctl came in the MM alignment discussion, and have added that.
per-memcg also definitely makes sense. I am not aware which is the most
used usecase. But adding provision for both with one having more
priority over other may be the way to go.

Overall point here is to save time in unnecessary scanning.
will be adding prctl in the upcoming version to start with.

> [1] https://lore.kernel.org/all/20221214225123.2770216-1- 
> yuanchu@google.com/
> 


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-DM6-obe.outbound.protection.outlook.com (mail-dm6nam10on2088.outbound.protection.outlook.com [40.107.93.88])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 100DA1DB134
	for <linux-kernel@vger.kernel.org>; Fri, 24 Jan 2025 08:55:00 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.93.88
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737708902; cv=fail; b=kgSultVgyYGMs0wkv2t5Gx1OLxcPR1wR1ID6v0sHfQ5A5mI26XzUjDo4/FV3bUu7wD5W3aVexz1x7a3pkWHazUB+e7TTJY0KVwBvJfTq4bGAc1TTTdPv3O6t7fxa285BeqVvlkeS7c0l5OTcOTPGfgoCxTKzJXag3zVL79yrcws=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737708902; c=relaxed/simple;
	bh=7daaPgU/gBCzGuOhsOFOGtinvU1o9tNhWqxabjy/zUU=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=Wy/XjYmc9DJ5QAzyUIH21YKUj4bt7SSUcQalYvsFTpheIWjy13hzZwspAv3lR4q9Si+MQe9EvQyF2pNuxndMBg9yps5M66Gm92+i8NNEvu5TXFufxo2k11nPDG1I67hUuo3417hQbo0B9OAKAWFl/y8jPKgg7E3jByi6HnuMBTA=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=Nd9od4IW; arc=fail smtp.client-ip=40.107.93.88
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="Nd9od4IW"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=CkB63kOr6H0lccqDC1/Z2upVqnqi0h1w8afeACaN94sXnMsslSbXp9r9pQdD8z2ZvST2RudKgLjl3PgHttBRoozQapwwK1Fayhfiw6fVrgdKdYlGAfyRrzcfevmXDFJ78J+1LilUkEXBEqrUyzc3yRkPyOmJQcgLdQRDN6fstFyZYy8vdyiUSgUqUlqsvyUklYDRPd1RZ0RedR4Q1+7JA1c2GOkZ/wCgjiiXXZkJjgEQJ2WnTMDIfbMP9Ce/udfxF2AfPxvoPrXDgch+c96y5rELUffHKq14Sxr1VE5LjKDuTxnZkdI6QvzEkOZYKFKhCNnNq8rhHW5Wm97xiIXNNg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=Bziyry3skE6U3LCYm2yJB/qjfPwcNBBv1xlY4a5vdNc=;
 b=OFxrvfp0doITsg4y4uutNH0rR/KbUKkj0tPmPKLbnzFBRIsKb7m+L02I+j79x2ZEUSZFonL8/uzR4saOa5DoJ8aihLLGR0ZzvXNGFu6OZDD4c9M/2+lEQfkjEIjhSIWQ3dcpabv31IWmTL0Ac4W6iMd6Gn0YwjqfpYrSaRNsPEpOqXDCAJFHd3JOFnhynGLNtAfG+af6huoWUb6gXbPfbwLoKPALPs6KCPjfFRokZVSs/PMs+fx4H2EM6+MAu3NBz1jyKxJ/yoVJjs3hF80k3mcRREObgnSIdXSeEnQTJsYu8L4DXIs/9DlD3G4defYUDsb6XiUm+Pu9XH4XrxcIPQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Bziyry3skE6U3LCYm2yJB/qjfPwcNBBv1xlY4a5vdNc=;
 b=Nd9od4IWsMrlwCnvqL49Hc7+wLTOop1S0LkTx/Cclm2ySRg9GOsS43vui4JmZH4ERMdRViCOGqUZwP4d0MxctKn4CpnUKGLCZ2MKqM19kjQ3XHxJMZDVxjmZbp9ukPLfwG8SmteOWbZM5v3JTwVVqy+/MhRj2V/HvFhn2Z6yb94=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from PH7PR12MB5805.namprd12.prod.outlook.com (2603:10b6:510:1d1::13)
 by BY5PR12MB4258.namprd12.prod.outlook.com (2603:10b6:a03:20d::10) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8377.19; Fri, 24 Jan
 2025 08:54:57 +0000
Received: from PH7PR12MB5805.namprd12.prod.outlook.com
 ([fe80::11c7:4914:62f4:f4a3]) by PH7PR12MB5805.namprd12.prod.outlook.com
 ([fe80::11c7:4914:62f4:f4a3%6]) with mapi id 15.20.8356.020; Fri, 24 Jan 2025
 08:54:57 +0000
Message-ID: <dccf7286-2ab2-4a48-92fc-49b3a4c09e1d@amd.com>
Date: Fri, 24 Jan 2025 14:24:40 +0530
User-Agent: Mozilla Thunderbird
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
To: SeongJae Park <sj@kernel.org>
Cc: linux-mm@kvack.org, akpm@linux-foundation.org,
 lsf-pc@lists.linux-foundation.org, bharata@amd.com, gourry@gourry.net,
 nehagholkar@meta.com, abhishekd@meta.com, ying.huang@linux.alibaba.com,
 nphamcs@gmail.com, hannes@cmpxchg.org, feng.tang@intel.com, kbusch@meta.com,
 Hasan.Maruf@amd.com, david@redhat.com, willy@infradead.org,
 k.shutemov@gmail.com, mgorman@techsingularity.net, vbabka@suse.cz,
 hughd@google.com, rientjes@google.com, shy828301@gmail.com,
 liam.howlett@oracle.com, peterz@infradead.org, mingo@redhat.com,
 nadav.amit@gmail.com, shivankg@amd.com, ziy@nvidia.com, jhubbard@nvidia.com,
 AneeshKumar.KizhakeVeetil@arm.com, linux-kernel@vger.kernel.org,
 jon.grimm@amd.com, santosh.shukla@amd.com, Michael.Day@amd.com,
 riel@surriel.com, weixugc@google.com, leesuyeon0506@gmail.com,
 honggyu.kim@sk.com, leillc@google.com, kmanaouil.dev@gmail.com,
 rppt@kernel.org, dave.hansen@intel.com
References: <20250123182050.53941-1-sj@kernel.org>
Content-Language: en-US
From: Raghavendra K T <raghavendra.kt@amd.com>
In-Reply-To: <20250123182050.53941-1-sj@kernel.org>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: PN2PR01CA0200.INDPRD01.PROD.OUTLOOK.COM
 (2603:1096:c01:e9::11) To PH7PR12MB5805.namprd12.prod.outlook.com
 (2603:10b6:510:1d1::13)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH7PR12MB5805:EE_|BY5PR12MB4258:EE_
X-MS-Office365-Filtering-Correlation-Id: c26d47d3-d7f5-4498-9821-08dd3c54c6c3
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|7416014|376014|366016|1800799024;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?TWt3TnVhVUhTRWwwcXdwRXFxTmVtZURBbUJCVTI3ZzZyemU4dzI1UW1hU2NY?=
 =?utf-8?B?ZGxqY3ZNUnh0THFYMllDZ2wxWUpHY1BkT0ZCV2JUYkxwbHQ3ZjUyWmNRUkky?=
 =?utf-8?B?d0xVcC85NDVoVXVYNG03THVveFAwSnpENmN6VGx5SnJSYjdjYm9sK2VrN1ZM?=
 =?utf-8?B?aFJmbVNVUkMrbDdwY1BhTm1vMHdXOHJnVXRYZFdBUysyTUxTek9MYk5SV1Jj?=
 =?utf-8?B?cE03Y1dMUms2czhHOStxQnhaUUt5ZmtxeHN5eHhVMGI3VjM2TExWdzhkbXlH?=
 =?utf-8?B?OG84NDJ4eDcvZXR4OUZPbXMxVWhkUTZOdnZMNVlNTkhmcWF6SlBuQTZodm52?=
 =?utf-8?B?Z0xlT2xkcXo1VWg3NDFTcEY5a2RFQ3Nod29ITlh3c0FFU2JyYllaMXY2MGw4?=
 =?utf-8?B?aEJUb3dDN1VMU2tDZ3R0MTQxcHV1RWtTd2EzUU5NaUxpTXJXMVd4enZaTEls?=
 =?utf-8?B?NFRGbjZjVDhWczNXTEpGcThQN2JKYUdtck5HMWI3SFhaaWVHcUpsbUJOWGhK?=
 =?utf-8?B?UEFIcURxUHVXaks2V205WUFHQU9xMGJkVnlwSXZSUm5vbjhvbDE2OEtDNEM4?=
 =?utf-8?B?YTd1RHdWS2gwT3QwejN0YnlzajVyVUhHOXpjam11VTA3Z0c4emFMNmpmVm5P?=
 =?utf-8?B?dkZMeUE3cmd3ZGk4aHEvbHpWN1hNU2hXaloyVjZ1WS85VzJBSnBleElwNHdB?=
 =?utf-8?B?K0xVYWEyZWYzSTcyTTdFRXlCL2gxNzFkY3p5ZDVMa2Faa3lFelhMcTl4WXhi?=
 =?utf-8?B?ME1zUDlmOUVZZGFtbWdaU0JoVEVnblM5VDRidXRNZDhUQjc2dHF3cEdLcFpY?=
 =?utf-8?B?SnBZOEw5N3h2OXdUMnlKL0MvN3FqZThFMnlJaGUxRHZoZlRwd1pIVlZBY29V?=
 =?utf-8?B?S2wrd1AyWSt0dEU4UzQ0bXNqSHAzRWIvTU0wYXFUdGpxbkRzWHNkY0czakEv?=
 =?utf-8?B?T1crNlh6VlhlaDVFNFdYcEsvN0RWSjRwNVhGU0tkbnk0M2R4b3NvaDhpQU5I?=
 =?utf-8?B?ZlJKbTdxL0IyWk05dU9TY1Bnem93ODdXVnpjdkpSUlJJVk1kOTk0bjQ2RTJh?=
 =?utf-8?B?WVNIODRZMjhLRmJhMTIzQW9od1ZpbVhCYUlCWHBSb0xxbU0ydjNCTjltMjNm?=
 =?utf-8?B?ZTNMTWhUVHE1UVFacitFY1V1VGpBZFBsV1R3QkRvMUlYbU9BUGx4eGRSQ2hO?=
 =?utf-8?B?ZDRSOVJZODVORHk2WGFPMWxxbE96dS8rQi9sTHNNSCtjSzVwS1N3VU92SUtV?=
 =?utf-8?B?M2RZdmVGNDdDYVRxNlpwZ2hzV1VjSlREMG1IVHh1QXpqc3NRa256VExYQ3ll?=
 =?utf-8?B?L0lCS0FzdkdHYzhOMSttMzdrWk4xWThwVVkyRmttT1p1ZndLSXRwajh5elpD?=
 =?utf-8?B?eGE4cHhrMjVieU0wekRCdVd4VHc4TG1jODJSN2dsendlNUNYMUI1QTZXeXFS?=
 =?utf-8?B?c0xVYWxBdnlwSGNTb3QxVFZISE8rSkJiaHpvUFZFcnkyMGxBTy9kY0tVNkJD?=
 =?utf-8?B?QWhvcUY2Q0liM1lIcVR3Z3E1alRidHpVNFJvZHdqZk9xVVZHcEdFNG1qc2pQ?=
 =?utf-8?B?MFp6L0xhOUNEZHpkYnVjdDhlUjFOWVhHaDl0TnZMRHJZeE5FQk9hQUYxdFho?=
 =?utf-8?B?RnZ6QWMvQWJUKzBCWk8zM3grcE1yNGZJU2M0UHRhM1Y1YjA4akZRZHlrZUNh?=
 =?utf-8?B?cjUvQlkzVXF0cXMzSFJnMHhxZUhOaW5YdVE3bUZnSXpTeGFwWnlXWE5SRUwr?=
 =?utf-8?B?WGc4TUk0eDIyYXUrMFhXZSs3L1YxTDVDMG8zVzJodThCWk8wQzN1bDVyUUtI?=
 =?utf-8?B?TUQ4NVF4d0ZQL3dVY3NlZz09?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH7PR12MB5805.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(7416014)(376014)(366016)(1800799024);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?eWNkSE14MmE5bUl5djU3UmhBK01FN0JGMk9ML0xLS3hqR2QxcmtDYnJTL2JJ?=
 =?utf-8?B?NXZ5ZkJiazRLZHFTYms2aHRoeEpnN05taFdSVWpJeGpkbTVJdmVJdUN5RXVB?=
 =?utf-8?B?ZlIzcjNCdVZFQmdVRW1HYk1UUWM0eG9nTzcyVHpuOGNZRlhNNktRc1QvZGx4?=
 =?utf-8?B?cHl3aEtVaWRQeENOTGFWUTV0VjJHeDJYbENlWFNpU3g2TkcyTittRGNya2tt?=
 =?utf-8?B?RC9UVEhmMlZHWHdKeVVwWmJ1RzdFV1FRSEZEMkFXRzhtbDMrRXB2ZWt2YmZt?=
 =?utf-8?B?MXNLQk41S2ZXM2FPZmJpbWwrREFiWUsxSitSOWQzMkVOQkhBcXpIOEsrUHcw?=
 =?utf-8?B?Q1IvQXFmcXJ3cjlJdEVzajFMdkxIOTlRUlFoOVRidzBDeDJCRjZVdytLUnIz?=
 =?utf-8?B?NGt3M3MvZElmTEllVGRtM2tEL1Fsbi9FRUJOSTBnOTJNdnRmcnBadXN1SHoy?=
 =?utf-8?B?ZUZSYXdKQlg3eU83dFFhc1FXcUFDK3EvUXVTR1Z2dUpQR3Ard1hjdDdKNm85?=
 =?utf-8?B?b2NCYUlELzhuL1ZxSlNxNUhBcVZuQng5K2FmL05VSEN0SjQyZ0FTZG05c3lL?=
 =?utf-8?B?bXF5TVI4Yk40alI2OEFxM0swUzZYS1FpQVF5TjJRSklmQWhZdWt0aUxxVnc5?=
 =?utf-8?B?SEYzbXRUeDFHOXQxUS9nUStkUmhnMzlNWnYzT0FvdDF5MmxzbEVxZ0Y2NE5u?=
 =?utf-8?B?cTZZS3NhRG91NEcvTFVjbFA3MUo2UHZYcEsxREFWTkFtQjZqaGVjZXBWMXV4?=
 =?utf-8?B?MDhNNnN0UVI5SUpzbjIvUTFobk4wUmxRbFRrc3ZGdmNyZjBmRHdpU09pYzJs?=
 =?utf-8?B?b2lpNzhTMEU2ZjdseWxpMHZaSEhhSDdQbWU0TUN4NlBTMk5kcnZIOG1JT0xx?=
 =?utf-8?B?eVNaVEpFTkNBWHE3U1BTK25ZNG5XaGZNak9weWZwUHkwUm4wLzJRK2Vod0tk?=
 =?utf-8?B?cW9BR0V3aUhjTXgxTVpUQ0JFUFo2Y2hJRFBXOWlyUXY4K2gzMGlBamxTczRs?=
 =?utf-8?B?YVllNEJoUCtpaExFMnEzblhPT2pQQmNvZ3cxVFpYdkJpbU80bFlWeVlSWTBK?=
 =?utf-8?B?Y003dDZDOHJYYkZSTWt3SEErTlNpaVZvRnN4dk8xUFY2WGVrcVY2ZFpRSDNt?=
 =?utf-8?B?Y1hUalR5Z3Y1WEMrV0N2SEZTZE41MHZoMXZyNVRlbGRGektIeHYxRmlKeXFi?=
 =?utf-8?B?Q0VqVWduSExXbkc4SWVCVkRnMVQ4dXlQUERiYk00b2NTRTFsa0grKytzeFZj?=
 =?utf-8?B?V3J4TWFSNnJ0Zk1OcEtiOU5pSlNUTnhzK3NFSHVCRlIxK3hoK2UyU2dIbXZ1?=
 =?utf-8?B?TUU0ZGJJVGlqUkF4a3JjU3JQZGEvQWt4aU5BNVRtQ3JWOGlmRHVUQVlySVU3?=
 =?utf-8?B?bXRQbEFxbmRmdEZxSS8rRFVRZDdqYXg2MGgzRzhqR1pJOXgySXNDeThTbFNv?=
 =?utf-8?B?ZE9SaEIvNXhaeWpjODZTOVN2UW1MMllFd3paVTlIL1hSMG9jZXJYUjFSMzNY?=
 =?utf-8?B?Umx2Vzd3OVFJaVNaelZSOGN1dVNuRGExVFRncEhsMzJSay9nakd6S1F5eU4y?=
 =?utf-8?B?bG94eDl1ajkybXRrTDhWanh2azJkTmR0cVF2WERSbTd2cXVDUXJiUDBSc3c3?=
 =?utf-8?B?MnpwUXB5QzJ1THZ5MmhwVlJCVFg2ZzZaNWp5enNGbllDWHN2UGlmeWRwajAy?=
 =?utf-8?B?c1FVZlA5TUVnZlpRODJJUmFxaGMzUmtEeHd2KzBxVnMxYmZTb244S2IwZnRG?=
 =?utf-8?B?ZUZSMlpTNEZxQmd5MEdidXVEVVAwMDVRNWVKK3pqWGl0NkJ4REtDL1RGNVdB?=
 =?utf-8?B?MkwvbXZndUJIQ1AzalNyTUpVMmlDdlFMT3hJLzhxck1mYUdwS2dIWU8wZE1X?=
 =?utf-8?B?UVBXbS9GOXc2bnQrUHRBOG9lTDUyYmlwMmZxTDNkcUxGSk91V2gxbnFXM1Q0?=
 =?utf-8?B?dVk0RlhVN203a1I4dEEwK20vMEZPbUlnZzBSU1hpS3VVVk1LWnRBekxXV0xx?=
 =?utf-8?B?eFhxQU5XNWg2R2VscGZzT1JrYWVYUVFGdGhROTRUMmQ5L3Jxcm1NNmJpQmI5?=
 =?utf-8?B?MW9GS0xCcUVIN0d4elJVRXpzazdIRFFVWE1JOFA4ZW1DSGNnN0k2U3NHRHpq?=
 =?utf-8?Q?HlLz988qDBanSKeBJuyXx7nfY?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: c26d47d3-d7f5-4498-9821-08dd3c54c6c3
X-MS-Exchange-CrossTenant-AuthSource: PH7PR12MB5805.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jan 2025 08:54:57.0114
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: PobUpG2OXMa5XiAZ5Mwv7BKSIpUZS+/9P0AFsNRO3SS6137NdDYXnC4FL+RunOAFHW9ZyRgcWAcmUKECHrz+Gw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BY5PR12MB4258

On 1/23/2025 11:50 PM, SeongJae Park wrote:
> Hi Raghavendra,
> 
> On Thu, 23 Jan 2025 10:57:21 +0000 Raghavendra K T <raghavendra.kt@amd.com> wrote:
> 
>> Bharata and I would like to propose the following topic for LSFMM.
>>
>> Topic: Overhauling hot page detection and promotion based on PTE A bit scanning.
> 
> Thank you for proposing this.  I'm interested in this!
> 

Thank you.

[...]

>> virtual vs physical address based scanning,
> 
> DAMON supports both virtual and physical address spaces monitoring.  DAMON's
> pages migration is currently not supported for virtual address spaces, though I
> believe adding the support is not difficult.
> 

Will check this.

[...]

>>
>> 3. Discuss how hardware provided hotness info (like AMD IBS) can further aid
>> promotion. Bharata had posted an RFC [4] on this a while back.
> 
> Maybe CXL Hotness Monitoring Unit could also be an interesting thing to discuss
> together.
> 

Definitely.

>>
>> 4. Overlap with DAMON and potential reuse.
> 
> I confess that it seems some of the works might overlap with DAMON to my biased
> eyes.  I'm looking forward to attend this session, to make it less biased and
> more aligned with people :)
> 

Yes. Agree.

>>   
>> Links:
>>
>> [1] https://lore.kernel.org/all/20241201153818.2633616-1-raghavendra.kt@amd.com/
>> [2] https://lore.kernel.org/linux-mm/20241226012833.rmmbkws4wdhzdht6@ed.ac.uk/T/
>> [3] https://lore.kernel.org/lkml/Z4XUoWlU-UgRik18@gourry-fedora-PF4VCD3F/T/
>> [4] https://lore.kernel.org/lkml/20230208073533.715-2-bharata@amd.com/
> 
> Again, thank you for proposing this topic, and I wish to see you at Montreal!
> 

Same here .. Thank you :)

- Raghu


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 37A8C1FF5EB
	for <linux-kernel@vger.kernel.org>; Fri, 14 Mar 2025 14:24:18 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1741962261; cv=none; b=ttSUCk+inW51lpA6CRYf9ou9HabuFSPmLSb5SQPxuHRiAM28nrFxKSm7vupA6xwzYHYrvMfbeuY4ZTB2nDxzkZzd7j3X9x3S8c1N351POTouO1o6oxT3hhTgYiHRCLB8pyn6dwRxLi2iik4CNdNKoBADSUZRwDQqpE84sWCyuBo=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1741962261; c=relaxed/simple;
	bh=kYyJLmSymRZAmh2EhKWsFiv6RQFJTIzx/aENnxg8Zgw=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=eP/bK65P0Vw+zkyQUVRJuOWsvNXjZfkmaeuHwTLtbJIMTBF+vpbF6e3JKmADLxIpylvYZnOa7as3RLeOEXFHJ8j1Y8f8TSZiX7PFEqloRElnIyk21DQqC0m24dgDJTn2hFy6/q68ZF+Nzg7+yVsOnU63sxQT3B2+4AujEpGiJZ4=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4ZDml235Zjz6J9YF;
	Fri, 14 Mar 2025 22:21:34 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 8B9D9140155;
	Fri, 14 Mar 2025 22:24:15 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Fri, 14 Mar
 2025 15:24:13 +0100
Date: Fri, 14 Mar 2025 14:24:12 +0000
From: Jonathan Cameron <Jonathan.Cameron@huawei.com>
To: "Huang, Ying" <ying.huang@linux.alibaba.com>
CC: Raghavendra K T <raghavendra.kt@amd.com>, <linux-mm@kvack.org>,
	<akpm@linux-foundation.org>, <lsf-pc@lists.linux-foundation.org>,
	<bharata@amd.com>, <gourry@gourry.net>, <nehagholkar@meta.com>,
	<abhishekd@meta.com>, <nphamcs@gmail.com>, <hannes@cmpxchg.org>,
	<feng.tang@intel.com>, <kbusch@meta.com>, <Hasan.Maruf@amd.com>,
	<sj@kernel.org>, <david@redhat.com>, <willy@infradead.org>,
	<k.shutemov@gmail.com>, <mgorman@techsingularity.net>, <vbabka@suse.cz>,
	<hughd@google.com>, <rientjes@google.com>, <shy828301@gmail.com>,
	<liam.howlett@oracle.com>, <peterz@infradead.org>, <mingo@redhat.com>,
	<nadav.amit@gmail.com>, <shivankg@amd.com>, <ziy@nvidia.com>,
	<jhubbard@nvidia.com>, <AneeshKumar.KizhakeVeetil@arm.com>,
	<linux-kernel@vger.kernel.org>, <jon.grimm@amd.com>,
	<santosh.shukla@amd.com>, <Michael.Day@amd.com>, <riel@surriel.com>,
	<weixugc@google.com>, <leesuyeon0506@gmail.com>, <honggyu.kim@sk.com>,
	<leillc@google.com>, <kmanaouil.dev@gmail.com>, <rppt@kernel.org>,
	<dave.hansen@intel.com>
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature
 information - what info is actually wanted?
Message-ID: <20250314142412.00001689@huawei.com>
In-Reply-To: <87h64u2xkh.fsf@DESKTOP-5N7EMDA>
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
	<20250131122803.000031aa@huawei.com>
	<20250131130901.00000dd1@huawei.com>
	<87h64u2xkh.fsf@DESKTOP-5N7EMDA>
X-Mailer: Claws Mail 4.3.0 (GTK 3.24.42; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100010.china.huawei.com (7.191.174.197) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Sun, 16 Feb 2025 14:49:50 +0800
"Huang, Ying" <ying.huang@linux.alibaba.com> wrote:

> Hi, Jonathan,
> 
> Sorry for late reply.

Sorry for even later reply!

> 
> Jonathan Cameron <Jonathan.Cameron@huawei.com> writes:
> 
> > On Fri, 31 Jan 2025 12:28:03 +0000
> > Jonathan Cameron <Jonathan.Cameron@huawei.com> wrote:
> >  
> >> > Here is the list of potential discussion points:    
> >> ...
> >>   
> >> > 2. Possibility of maintaining single source of truth for page hotness that would
> >> > maintain hot page information from multiple sources and let other sub-systems
> >> > use that info.    
> >> Hi,
> >> 
> >> I was thinking of proposing a separate topic on a single source of hotness,
> >> but this question covers it so I'll add some thoughts here instead.
> >> I think we are very early, but sharing some experience and thoughts in a
> >> session may be useful.  
> >
> > Thinking more on this over lunch, I think it is worth calling this out as a
> > potential session topic in it's own right rather than trying to find
> > time within other sessions.  Hence the title change.
> >
> > I think a session would start with a brief listing of the temperature sources
> > we have and those on the horizon to motivate what we are unifying, then
> > discussion to focus on need for such a unification + requirements 
> > (maybe with a straw man).
> >  
> >> 
> >> What do the other subsystems that want to use a single source of page hotness
> >> want to be able to find out? (subject to filters like memory range, process etc)
> >> 
> >> A) How hot is page X?  
> >> - Is this useful, or too much data? What would use it?
> >>   * Application optimization maybe. Very handy for developing algorithms
> >>     to do the rest of the options here as an Oracle!
> >> - Provides both the cold and hot end of the scale, but maybe measurement
> >>   techniques vary and can not be easily combined. Hard in general to combine
> >>   multiple sources of truth if aiming for an absolute number.
> >> 
> >> B) Which pages are super hot?
> >> - Probably these that make the most difference if they are in a slower memory tier.
> >> 
> >> C) Some pages are hot enough to consider moving?
> >> - This may be good enough to get the key data into the fast memory over time.
> >> - Can combine sources of info as being able to compare precise numbers doesn't matter.
> >> 
> >> D) Which pages are fairly cold?
> >> - Likewise maybe good enough over time.
> >> 
> >> E) Which pages are very cold?
> >> - Ideal case for tiering. Swap these with the super hot ones.
> >> - Maybe extra signal for swap / zswap etc
> >> 
> >> F) Did these hot pages remain hot (and same for cold)
> >> - This is needed to know when to back off doing things as we have unstable
> >>   hotness (two phase applications are a pain for this), sampling a few
> >>   pages may be fine.
> >> 
> >> Messy corners:
> >> 
> >> Temporal aspects.
> >> - If only providing lists of hottest / coldest in last second, very hard
> >>   to find those that are of a stable temperature. We end up moving
> >>   very hot data (which is disruptive) and it doesn't stay hot.
> >> - Can reduce that affect by long sampling windows on some measurement approaches
> >>   (on hardware trackers that can trash accuracy due to resource exhaustion
> >>    and other subtle effects).
> >> - bistable / phase based applications are a pain but perhaps up to higher
> >>   levels to back off.
> >> 
> >> My main interest is migrating in tiered systems but good to look at what
> >> else would use a common layer.
> >> 
> >> Mostly I want to know something that is useful to move, and assume convergence
> >> over the long term with the best things to move so to me the ideal layer has
> >> following interface (strawman so shoot holes in it!):
> >> 
> >> 1) Give me up to X hotish pages from a slow tier (greater than a specific measure
> >> of temperature)  
> 
> Because the hot pages may be available upon page accessing (such PROT_NONE
> page fault), the interface may be "push" style instead of "pull" style,
> e.g.,

Absolutely agree that might be the approach, but with some form of back pressure
as for at least some approaches it is much cheaper to find a find a few hot
pages than to find lots of them.  More complex if you want a few of the very hottest
or just hotter than X. 

> 
> int register_hot_page_handler(void (*handler)(struct page *hot_page, int temperature));
> 
> >> 2) Give me X coldish pages a faster tier.
> >> 3) I expect to ask again in X seconds so please have some info ready for me!
> >> 4) (a path to get an idea of 'unhelpful moves' from earlier iterations - this
> >>     is bleeding the tiering application into a shared interface though).  
> 
> In addition to get a list hot/cold pages, it's also useful to get
> hot/cold statistics of a memory device (NUMA node), e.g., something like
> below,
> 
> Access frequency        percent
>    > 1000 HZ            10%  
>  600-1000 HZ            20%
>  200- 600 HZ            50%
>    1- 200 HZ            15%
>       < 1 HZ             5%
> 
> Compared with hot/cold pages list, this may be gotten with lower
> overhead and can be useful to tune the promotion/demotion alrogithm.  At
> the same time, a sampled (incomplete) list of hot/cold page list may be
> available too.

I agree it's useful info and 'might' be cheaper to get.  Depends on the
tracking solution and impacts of sampling approaches.

> 
> >> If we have multiple subsystems using the data we will need to resolve their
> >> conflicting demands to generate good enough data with appropriate overhead.
> >> 
> >> I'd also like a virtualized solution for case of hardware PA trackers (what
> >> I have with CXL Hotness Monitoring Units) and classic memory pool / stranding
> >> avoidance case where the VM is the right entity to make migration decisions.
> >> Making that interface convey what the kernel is going to use would be an
> >> efficient option. I'd like to hide how the sausage was made from the VM.  
> 
> ---
> Best Regards,
> Huang, Ying


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-BN8-obe.outbound.protection.outlook.com (mail-bn8nam11on2069.outbound.protection.outlook.com [40.107.236.69])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 388B75C603
	for <linux-kernel@vger.kernel.org>; Mon, 17 Feb 2025 04:10:52 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.236.69
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1739765454; cv=fail; b=VsGJj7WIINwV7HQwe/N2CPSysESVaKqb5blnwUW6p2+MSL6jGRd3cztDeu0rQBy1x9QCIAOF7Z3qRX/MP6h74KDXOW+F6CcXUUIutWcgHb6Xpkkzb2R84rGWmyel4UJRZ7+oAphZoOqdFCUSfpFWWReHNrF+Vmu+K9DhbBEDuDc=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1739765454; c=relaxed/simple;
	bh=V9cb8+G0joJA6LqI2GLX0FaCAoKVlOrN839o1sY2qn0=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=uTnW1LQjHMIZc40LKundYm0ctZCDORYhpr4P1R22RPGsPi5mPaEh0OXINgCKAjQ5US6xzo2911D0jimmGFhJoPfF0sTS7y0CLIdEBZ+Hx8VVEVpLzkjw/HPOizyurN8j32TkLz8WyoM3GUujTaAiZVLNNGR8fSxmckbHQ3gumQc=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=1n/czlAc; arc=fail smtp.client-ip=40.107.236.69
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="1n/czlAc"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=sQTJ3zIfk95WNkrgXmjDpqDuG9sImB4MmvmkfTw1UdKbGVl3Jd2zDDVYUc6xUAvbNaMHEkEYgAkxvo7gvgR96eqwgFkQwT8zJBOM2+3kDd3pqI4IiH/SCQnZyclpds4OepvmqaQkQVZfhvLMvJ5yVbOG0i2cf34x4ztNnCSf+lvw1QqgWrfW3PsXGQp9ReUU1V+LeDzZaYCL7Y652PTcu4CaTZnPCXrByJaqUIimMctc8nhR9O4c52VpyjUPfC6UxG3FKwziCn0CF0Jem6HEEoe91+XKHnECUMP7iMBUSmaVPJDNUmn2WECRzwAQrG6pho7BYF84fVBluHzRoSxjRg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=epfl23qaw7miR+9mBXHL77LyDCdj7vJhJo+wd4WFAH0=;
 b=xoeXGj+DoEp40EcQzPBKQoEhPC6pgGQhrkm766vV7BsXNDFoXupn0fEWrhKJBgi3nwKz8gwgf2n8dgok4ruYIvxMt2+4KsJXaOm1KocXsJv/XyIxLI0wqfEioUZgR0iDqzwiB+VegCYTNaNAoZpNzApjgJuJvmAXPX0mGkfUB8tkDfOuydFzCzUwwQoGL2XyjjGeSgmFYORJ2xWQlBKhODuK7pzF94H9AuaEBK/GSlOf8ZRG45wRZ9zkiqrACmMhjNA1N4xWWvglIkNv55PKhW971+CCcpzWkuOS46kRdcH/ED4ptIlx4GWaaeFoj+syxNfMngeUkPU00m8dL+vn1w==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=epfl23qaw7miR+9mBXHL77LyDCdj7vJhJo+wd4WFAH0=;
 b=1n/czlAcXkX7ea7P5TlSIKar7v3dV3QFS/kMX03bBhEJdCNijwCQazAtZ0ccoHwtZ7x2aUFA2JxsNi+CjmkYHTOA4GH5foidAsmu49Z8Dlk+U8pozrKs+a2doZj5CBNmuC1jk7hsDQFZb7bqhAb/l+UnCtz7AsbQQCUL6IX8BY8=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from IA1PR12MB6434.namprd12.prod.outlook.com (2603:10b6:208:3ae::10)
 by IA0PR12MB8984.namprd12.prod.outlook.com (2603:10b6:208:492::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8445.18; Mon, 17 Feb
 2025 04:10:50 +0000
Received: from IA1PR12MB6434.namprd12.prod.outlook.com
 ([fe80::dbf7:e40c:4ae9:8134]) by IA1PR12MB6434.namprd12.prod.outlook.com
 ([fe80::dbf7:e40c:4ae9:8134%7]) with mapi id 15.20.8445.017; Mon, 17 Feb 2025
 04:10:50 +0000
Message-ID: <f091e09a-1f39-48ee-8968-8f616d8102a6@amd.com>
Date: Mon, 17 Feb 2025 09:40:36 +0530
User-Agent: Mozilla Thunderbird
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature
 information - what info is actually wanted?
To: "Huang, Ying" <ying.huang@linux.alibaba.com>,
 Jonathan Cameron <Jonathan.Cameron@huawei.com>
Cc: Raghavendra K T <raghavendra.kt@amd.com>, linux-mm@kvack.org,
 akpm@linux-foundation.org, lsf-pc@lists.linux-foundation.org,
 gourry@gourry.net, nehagholkar@meta.com, abhishekd@meta.com,
 nphamcs@gmail.com, hannes@cmpxchg.org, feng.tang@intel.com, kbusch@meta.com,
 Hasan.Maruf@amd.com, sj@kernel.org, david@redhat.com, willy@infradead.org,
 k.shutemov@gmail.com, mgorman@techsingularity.net, vbabka@suse.cz,
 hughd@google.com, rientjes@google.com, shy828301@gmail.com,
 liam.howlett@oracle.com, peterz@infradead.org, mingo@redhat.com,
 nadav.amit@gmail.com, shivankg@amd.com, ziy@nvidia.com, jhubbard@nvidia.com,
 AneeshKumar.KizhakeVeetil@arm.com, linux-kernel@vger.kernel.org,
 jon.grimm@amd.com, santosh.shukla@amd.com, Michael.Day@amd.com,
 riel@surriel.com, weixugc@google.com, leesuyeon0506@gmail.com,
 honggyu.kim@sk.com, leillc@google.com, kmanaouil.dev@gmail.com,
 rppt@kernel.org, dave.hansen@intel.com
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <20250131122803.000031aa@huawei.com> <20250131130901.00000dd1@huawei.com>
 <87h64u2xkh.fsf@DESKTOP-5N7EMDA>
Content-Language: en-US
From: Bharata B Rao <bharata@amd.com>
In-Reply-To: <87h64u2xkh.fsf@DESKTOP-5N7EMDA>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: PN2PR01CA0062.INDPRD01.PROD.OUTLOOK.COM
 (2603:1096:c01:23::7) To IA1PR12MB6434.namprd12.prod.outlook.com
 (2603:10b6:208:3ae::10)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: IA1PR12MB6434:EE_|IA0PR12MB8984:EE_
X-MS-Office365-Filtering-Correlation-Id: d41ad7f4-eeef-4e61-c414-08dd4f09100c
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|366016|7416014|376014|1800799024;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?eTVzMGl3emJ3VVdCNnVoN3ZBWmQxMmEzNyt2RThxaGtZbzZFWEp4cnF3VnNy?=
 =?utf-8?B?MFBMMWxOdFBHRDNoUjFJdW9LQmI1cmhiTXZBOWthYmFhbDE1bG9ENnI1VzJG?=
 =?utf-8?B?RllNOUhZRWkvQi93a3ArVVlVeFZDN1d5bDl4VnFVZG9VUnR6dXpyN21qcWF6?=
 =?utf-8?B?MEFpbGkvcm40OFFTcDcwRXR4QytXUnVCSDBMTGNmQWhKM2V3aU5sN2JDNUNq?=
 =?utf-8?B?RG0xRTFFL0daOXZ0MDlyeWFNR1I5R1VYbWJaTW90YVJjUjJCdGx3NFJmZFpK?=
 =?utf-8?B?Z0NEQzlpaTZtNkUveER4anBFRndMa29MNzAzQ3A4M3JjbEcrTWh5Y0hyVzVS?=
 =?utf-8?B?Y0JQTnJzZEVaVnlGK0xERDhTUUNDWEl3NnpiQitvd1FVTkhxTWQ0Uk50eE5m?=
 =?utf-8?B?eTZxVm0xbXB4cDBpM2M5Tzg3UHQ1bk1VNmZlczJrMzY0aDRBM0hEd1V2WmN5?=
 =?utf-8?B?T2RXUURVMW1tbDVJN3pULzFXaDN6ZVJXUUhxQlNxN05mU282VHQyb2NxRllj?=
 =?utf-8?B?RkFweGQyZjJodDNzTTJTSnNKVVVEVEt3b2dGeVdjbFJWRXA3bHpWbkNVZVlG?=
 =?utf-8?B?cGtMdHV4TllkOC9nQ0Vha0ZEYW9YZVJUeU55VUJwbzE1TEd2MG8wSE5uUy9r?=
 =?utf-8?B?OE96K2U4UDB3SGxBTmdCaEcxSTE0ZCsrNDhxdzBNWElWS1phVkFpMTNORzF2?=
 =?utf-8?B?TjBoT3hKNXh0WTZQT3hhK0FISnhzVGhta1VOOWEzQXNHVmtuOW9XN2l0SEdD?=
 =?utf-8?B?cjlVRXpJc29aUmxNb2xFdXZBb0J4ajJhVXZJUHZTVUl0czBRSit4RW81S0ZF?=
 =?utf-8?B?OXc2dThzMVVZV1BhcWFKWmo5Q2dZeFhlZWZkVGRwNGNaQkdyM0tielV1VFVw?=
 =?utf-8?B?a1hXTzFGcHFieSs3bjQyUStQZ0hzNXMwckJHWG1Xamh3QXE5YXhnOUhrakF3?=
 =?utf-8?B?U0FWZnFIcHUyU2Z4YjZqY0hpL1AyQ0Q4S0M1SkNiZFFRSjVTT2cvSEZDTUNJ?=
 =?utf-8?B?bC9reHBKOW0xd2NLaCtacFJyRFlNUGx6WVdnZ1VEVHdJYzRURW1CREsvTjVh?=
 =?utf-8?B?SU5OSEpBaENWZmQ5VCsvSHpvdmMyNml0M3lqd1VsMWc0SERiWDhtNCtNWlNS?=
 =?utf-8?B?Y0VkSUpWcUZ1TXZnbzBJcUhmTmt1b3Q3djAyM2pLTlBXM3drMzhwOWRVbnVV?=
 =?utf-8?B?WWlBTkpnVXdiLzdtYWdUS0E0K3dWa045UlB0MWJmVXJwTndVWUxwOGltS1ls?=
 =?utf-8?B?NzVBc2I2S2cwODlCZjloSXBDSUIzZjJlckpIcVo3NmsvQjhvR0VkUVlhZFhj?=
 =?utf-8?B?VmhBdnlzWVc3aS9aVW9ENVlSc0VZM2N5d1IvdE1yUThXd2VvajdrN2YzTkhS?=
 =?utf-8?B?aDBJTEpGaXhlTExTd05HaG8wQ0Jnd0pRaCtyWXlBTHNlbkVRaDEwaUI5RmRH?=
 =?utf-8?B?TlVRQ0tPTklka0FQTmdVbXpqVDR2YWh6SXQzLzVhZzlyd0Q5T1dKZ2tORWZS?=
 =?utf-8?B?QVdzVjhxRi9VbnVNL3lzcUMrMnU4VWRaQy85UEFTOW9jdm51SmwzRlFQV095?=
 =?utf-8?B?c1pZUHB2Zlpyc0JCVHZNeis4L2k5ZTZpWEVnUzdDeVpudGkwc3J3OFF5Y3Nk?=
 =?utf-8?B?bkphY3IwQmJsL3MrcENsMmtmQ0lvdng5Vk00ZGVvTU9pZE43cW5pdS8zeDY3?=
 =?utf-8?B?K240NFc3UjRRcE5hbFZ2dElubjQvSnVpSU43QU5zUE4vQm9IVWVkSm9ERGlN?=
 =?utf-8?B?Rkg4L0psQTA4TzEwVk5GWlZvdzZDNCtmYlBwVEwzeFlncFBhdXdtcVJDbm9i?=
 =?utf-8?B?YThKTTY5a0NoUUlpSlArUHdoMllINkdzTXRUUlFxTzI0OG9FNEpyYWRmblF2?=
 =?utf-8?Q?iKsLpiTH3+XA3?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:IA1PR12MB6434.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(366016)(7416014)(376014)(1800799024);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?RWJKNitOS3FISlZxTWZ6RTh6U0F6SS91WFR2QzRMWmtQejBDVzdQVGprSFo5?=
 =?utf-8?B?blBwZGRTVFRMT3dscEpkdE4yNGtuN1kwWlN6ZlBIdjh0dXVMS3ZIWXBpNkht?=
 =?utf-8?B?Z29hMTlCMVhBbXRhVkkrRW9hV2tWa1IyQkdZZkpRYldzOGhPVkVIUW5ZQWNK?=
 =?utf-8?B?SllTWTN3bkVtMnFKcmQ5aU1VU0cxcUpWbm92MzFJcWc4Y2FnNVBtd3VkQUtZ?=
 =?utf-8?B?S3dBWkJuTjI3TFhoQUZZVG1OWWw2aWpnZHhQYzAzcWt3enYrOFBCMzZ3TG9V?=
 =?utf-8?B?elN4VURJb1hPc3puTE8yNnVhUFhIblJlaSt0d20wOElNd2hqWGhJY0tKZEEy?=
 =?utf-8?B?SnVFL09WOFVDOXY4MHJUc2NscHZadDZoRVI5aXNUdnRObTNJSmMwODVram5w?=
 =?utf-8?B?YWV5WGl2MENUbmd4R0MrNmtFZHJDSFBlNTFyREtyaEFsVmdqYkY5YlkrMEJm?=
 =?utf-8?B?Ykl4SUYxMnV0SGlkMUxoMVlwYWtHc3o4ZUNnWlQ5TjY4UjJCeHp0RXhjNjhn?=
 =?utf-8?B?R3diZmFEU09UMVBMYWdqa0ZRbnd5ZUFBOGo1T3RrZ1h4Mk9SSmJ6dUdVU0ta?=
 =?utf-8?B?VE1ZbENGSXNWZUxibXJhNFVyQ0drZlZRQ2w5UHA1eTNlZmhoc2tTM1RGanJQ?=
 =?utf-8?B?SUlFY1ZuVEF1ZDBrT1N6RFhWRUc0ZkIvWnR0QlNwYlF3ekc4WkNnQWFjOFZx?=
 =?utf-8?B?bW9Qem9hY2o3d0hnRTBpVUN1akRSc1dFL3FrWEgxM2xiSGkzSE05ejZXMzJ6?=
 =?utf-8?B?dElGWHN0R1g2aGREY09jVldSZDVHNUJmZitqQVRGcWJZRmRKTXlKbzg2OWI4?=
 =?utf-8?B?UE5jUERxOG1TZXMza2RNWnZlSCtvS3Y4akE2YVBYSXprMy9kMDkzSEE2OE5L?=
 =?utf-8?B?dHp6Q05BbFh4bEc2ZlRjV2VpNXI4eGZzNW5zbmN4U3JOU2hKT1h5MFlQRjJn?=
 =?utf-8?B?M2V2ZmFuT2xsdzdENXpvNFRoQU11K1hFOEI2ZVpNOVdLNnRWTjZnTkF5YW9l?=
 =?utf-8?B?K0REb3l6aWJoaXlBaUVoQSszQmFLR2oxK2ZJcXJ1Rmx5ZnAyY0pPTUUvWFhH?=
 =?utf-8?B?YnVxVGRad3FhOHRLcnIzOC90eHN6Z2pvTEltV29jWlA0cFM5NTJKeXFCcG0w?=
 =?utf-8?B?ZnR6dUpoeXVEeS9vczFjaXdiamgzWUsxQ2hQQkxnd1lVdFpTdEdiNFhaY3dM?=
 =?utf-8?B?alk5OUpuU2ZWVVJjcjNHa1RSSjZveGk4NjhaMkVkeFJsZVo2QTJhUkpDeHkv?=
 =?utf-8?B?L2UvN2xFL0hCZ1VkTG9La0Q1cklzS0hEQWRBWkI1NExjZnUzQkc5MHZUSUhT?=
 =?utf-8?B?ei9jWVJNbzFFYTRSaUNXV1pjMkN5ZmJHS2p5TVpxV2FnQkRGeHlqTkZvV09o?=
 =?utf-8?B?OGRrZUJhdGFtQ0FMTE9vb1V1MW1jY2JSRlRBNFJtSHBiZ1JHR3E3QlB0WS8w?=
 =?utf-8?B?djM1bTlmRXJQbzBaZnRURy9wSzdzM3RhdGd6OW02akMvTVNnbkZXNGxoS1A5?=
 =?utf-8?B?eWNQNHI2NE9WSU5UL3ZFeEhzVmFoN1gxdUNkUU5BR0VueGZ3Wnd0VVF2bDAx?=
 =?utf-8?B?bHVLbHlPUGMwd3BiSHA2YzV4YVo0ZTh4bW5sOUF4S1V4U2pGaFcyVGhQTEVj?=
 =?utf-8?B?bVpEN2RIMEFPdmpIOW9ESEQ0UWJCck9Pd1FYL05Ga0xOOXlkRG9qUzVpeENj?=
 =?utf-8?B?NnpWN3paUnJFZnpwRk5DNndVYjBreVVDV0dLMHVZY1RWN0h6OUNEaUR4SkJx?=
 =?utf-8?B?bWVkUE1jZWc3dG56VS9mR3dCWXZYKzJjckhWVURtOUZYVE9RWFhJRWFMNEpD?=
 =?utf-8?B?VWsrNksvSWE1VTNQOVBRaGpIcDNCZGVHTG9rRUwrMFBHQ0ZKSkMxMk1hNHpR?=
 =?utf-8?B?MHpYbHV1cFRIVU52Vk4zM2ExWnl1b3RveXpyR1ZwWlRjMWd4bkhwWklib2lr?=
 =?utf-8?B?MFpmc0xSNS9sempDVCtTMitRWHNNQ3UwbERzSlJaVE9QYUMwWmo0Q3JlWUtv?=
 =?utf-8?B?Vk1DZ095NXJEbWRRdEtzY0krbzRKMGRDUjV4NmhkMEx5YTZWT2pPRS81YVM1?=
 =?utf-8?B?eXNSTFdUV2ZNVXp0WkVnSmFiM2x4R2ZqeU5QY2JNNUNHdWt4SW1uSTJOSzBy?=
 =?utf-8?Q?ScOAUDnevNfc2Lv1dsoLUSM6Q?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: d41ad7f4-eeef-4e61-c414-08dd4f09100c
X-MS-Exchange-CrossTenant-AuthSource: IA1PR12MB6434.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Feb 2025 04:10:50.2278
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: iUQ96JottH/FK5X54Ztpo31DdizDZesaSF3llF/bQuHaq0uhudvPby/Kw4BqdLmft06gWGy1yyLzaOHsGUJF3A==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA0PR12MB8984

On 16-Feb-25 12:19 PM, Huang, Ying wrote:
>>>
>>> 1) Give me up to X hotish pages from a slow tier (greater than a specific measure
>>> of temperature)
> 
> Because the hot pages may be available upon page accessing (such PROT_NONE
> page fault), the interface may be "push" style instead of "pull" style,
> e.g.,
> 
> int register_hot_page_handler(void (*handler)(struct page *hot_page, int temperature));

Yes, push model appears natural to me given that there are producers who 
are themselves consumers as well.

Let's take an example of access being detected by PTE scan by DAMON 
first and LRU and hot page promotion subsystems have registered handlers 
for hot page info.

Now if hot page promotion handler gets called first and if it promotes 
the page, calling LRU registered handler still makes sense? May be not I 
suppose.

On the other hand if LRU subsystem handler gets first and it 
adjusts/modifies the hot page's list, it would still make sense to 
activate the hot page promotion handler to check for possible promotion.

Is this how you are envisioning the different consumers of hot page 
access info could work/cooperate?

Regards,
Bharata.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from out30-100.freemail.mail.aliyun.com (out30-100.freemail.mail.aliyun.com [115.124.30.100])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B05BA14387B
	for <linux-kernel@vger.kernel.org>; Sun, 16 Feb 2025 07:04:55 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=115.124.30.100
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1739689500; cv=none; b=BFnC3+jA+gv8bw12iSJie9/4bswGutXVoi2rIBUAr3Z2tkIes/FwvqaGUwgZLdc8FkANQeE3CyolTkA9v9S7PHr51wy9aoZhojcnV4zfCRpYfhnHSPq1iY6/xW8YwoD9ygKqZ5qgPD7s/Oi36R+P5SSXSi2+NeN2joefndfdL20=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1739689500; c=relaxed/simple;
	bh=gg3jH31zGAHJiHekNhoUqb9X9KejcHabojVZg2sXCCM=;
	h=From:To:Cc:Subject:In-Reply-To:References:Date:Message-ID:
	 MIME-Version:Content-Type; b=QvH9h8X96UwDgA+3exyyza3U6jziIMtAjgircparWzPyweVbDM3SR61gh3TmqZ3PQTrIfSCYPR4CbzBAVd+DcTldElPTBXZxOyrhM1tmSBRYjqMsGxS6TGgVHhgv2f8yU0S71eMhoK1RSED+IKfLZNm6EtRHSmivsoORjyLIkMM=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=linux.alibaba.com; spf=pass smtp.mailfrom=linux.alibaba.com; dkim=pass (1024-bit key) header.d=linux.alibaba.com header.i=@linux.alibaba.com header.b=YTYxVF1g; arc=none smtp.client-ip=115.124.30.100
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=linux.alibaba.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=linux.alibaba.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=linux.alibaba.com header.i=@linux.alibaba.com header.b="YTYxVF1g"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=linux.alibaba.com; s=default;
	t=1739689494; h=From:To:Subject:Date:Message-ID:MIME-Version:Content-Type;
	bh=lBJ47s5NRlrS0cb6wfv64d5UsTFv+6Rba2Bz4U5pMfc=;
	b=YTYxVF1gtf3u8hkoxPa5C6nZ7hmGx2ovTNFb5oeDlPl1nT4IWdwUFDI5cu14PipCchAq/zMK7zVKU0C3PF2EWLbzNfZ68fzAHDUHh76K9fIJEARq886LJ3pbUCQcFyxFNuTqma9EUSxMF/q2bzVmIb0ffV6J0anmYvxkzfagRPg=
Received: from DESKTOP-5N7EMDA(mailfrom:ying.huang@linux.alibaba.com fp:SMTPD_---0WPVxozs_1739689489 cluster:ay36)
          by smtp.aliyun-inc.com;
          Sun, 16 Feb 2025 15:04:51 +0800
From: "Huang, Ying" <ying.huang@linux.alibaba.com>
To: Bharata B Rao <bharata@amd.com>
Cc: Jonathan Cameron <Jonathan.Cameron@huawei.com>,  Raghavendra K T
 <raghavendra.kt@amd.com>,  linux-mm@kvack.org,  akpm@linux-foundation.org,
  lsf-pc@lists.linux-foundation.org,  gourry@gourry.net,
  nehagholkar@meta.com,  abhishekd@meta.com,  nphamcs@gmail.com,
  hannes@cmpxchg.org,  feng.tang@intel.com,  kbusch@meta.com,
  Hasan.Maruf@amd.com,  sj@kernel.org,  david@redhat.com,
  willy@infradead.org,  k.shutemov@gmail.com,  mgorman@techsingularity.net,
  vbabka@suse.cz,  hughd@google.com,  rientjes@google.com,
  shy828301@gmail.com,  liam.howlett@oracle.com,  peterz@infradead.org,
  mingo@redhat.com,  nadav.amit@gmail.com,  shivankg@amd.com,
  ziy@nvidia.com,  jhubbard@nvidia.com,  AneeshKumar.KizhakeVeetil@arm.com,
  linux-kernel@vger.kernel.org,  jon.grimm@amd.com,
  santosh.shukla@amd.com,  Michael.Day@amd.com,  riel@surriel.com,
  weixugc@google.com,  leesuyeon0506@gmail.com,  honggyu.kim@sk.com,
  leillc@google.com,  kmanaouil.dev@gmail.com,  rppt@kernel.org,
  dave.hansen@intel.com, yuanchu@google.com
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature
 information - what info is actually wanted?
In-Reply-To: <de31971e-98fc-4baf-8f4f-09d153902e2e@amd.com> (Bharata B. Rao's
	message of "Wed, 5 Feb 2025 11:54:05 +0530")
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
	<20250131122803.000031aa@huawei.com>
	<20250131130901.00000dd1@huawei.com>
	<de31971e-98fc-4baf-8f4f-09d153902e2e@amd.com>
Date: Sun, 16 Feb 2025 15:04:48 +0800
Message-ID: <87bjv22wvj.fsf@DESKTOP-5N7EMDA>
User-Agent: Gnus/5.13 (Gnus v5.13)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ascii

Hi, Bharata,

Bharata B Rao <bharata@amd.com> writes:

> On 31-Jan-25 6:39 PM, Jonathan Cameron wrote:
>> On Fri, 31 Jan 2025 12:28:03 +0000
>> Jonathan Cameron <Jonathan.Cameron@huawei.com> wrote:
>> 
>>>> Here is the list of potential discussion points:
>>> ...
>>>
>>>> 2. Possibility of maintaining single source of truth for page hotness that would
>>>> maintain hot page information from multiple sources and let other sub-systems
>>>> use that info.
>>> Hi,
>>>
>>> I was thinking of proposing a separate topic on a single source of hotness,
>>> but this question covers it so I'll add some thoughts here instead.
>>> I think we are very early, but sharing some experience and thoughts in a
>>> session may be useful.
>> Thinking more on this over lunch, I think it is worth calling this
>> out as a
>> potential session topic in it's own right rather than trying to find
>> time within other sessions.  Hence the title change.
>> I think a session would start with a brief listing of the
>> temperature sources
>> we have and those on the horizon to motivate what we are unifying, then
>> discussion to focus on need for such a unification + requirements
>> (maybe with a straw man).
>
> Here is a compilation of available temperature sources and how the
> hot/access data is consumed by different subsystems:

Thanks for your information!

> PA-Physical address available
> VA-Virtual address available
> AA-Access time available
> NA-accessing Node info available
>
> I have left the slot blank for those which I am not sure about.
> ==================================================
> Temperature		PA	VA	AA	NA
> source
> ==================================================
> PROT_NONE faults	Y	Y	Y	Y
> --------------------------------------------------
> folio_mark_accessed()	Y		Y	Y
> --------------------------------------------------
> PTE A bit		Y	Y	N	N

We can get some coarse-grained AA from PTE A bit scanning.  That is, the
page is accessed at least once between two rounds of scanning.  The AA
is less the scanning interval.  IIUC, the similar information is
available in Yuanchu's MGLRU periodic aging series [1].

[1] https://lore.kernel.org/all/20221214225123.2770216-1-yuanchu@google.com/

> --------------------------------------------------
> Platform hints		Y	Y	Y	Y
> (AMD IBS)
> --------------------------------------------------
> Device hints		Y
> (CXL HMU)
> ==================================================
>
> And here is an attempt to compile how different subsystems
> use the above data:
> ==============================================================
> Source			Subsystem		Consumption
> ==============================================================
> PROT_NONE faults	NUMAB		NUMAB=1 locality based
> via process pgtable			balancing
> walk					NUMAB=2 hot page
> 					promotion
> ==============================================================
> folio_mark_accessed()	FS/filemap/GUP	LRU list activation

IIUC, Gregory is working on a patchset to promote unmapped file cache
pages via folio_mark_accessed().

> ==============================================================
> PTE A bit via		Reclaim:LRU	LRU list activation,	
> rmap walk				deactivation/demotion
> ==============================================================
> PTE A bit via		Reclaim:MGLRU	LRU list activation,	
> rmap walk and process			deactivation/demotion
> pgtable walk
> ==============================================================
> PTE A bit via		DAMON		LRU activation,
> rmap walk				hot page promotion,
> 					demotion etc
> ==============================================================
> Platform hints		NUMAB		NUMAB=1 Locality based
> (AMD IBS)				balancing and
> 					NUMAB=2 hot page
> 					promotion
> ==============================================================
> Device hints		NUMAB		NUMAB=2 hot page
> 					promotion
> ==============================================================
> The last two are listed as possibilities.
>
> Feel free to correct/clarify and add more.

---
Best Regards,
Huang, Ying

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from out30-100.freemail.mail.aliyun.com (out30-100.freemail.mail.aliyun.com [115.124.30.100])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id BDB24748D
	for <linux-kernel@vger.kernel.org>; Sun, 16 Feb 2025 06:50:04 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=115.124.30.100
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1739688608; cv=none; b=qbfiUmZJLEYX9Eq/VNTABZP0pmjn32WnSkbHUWYZI8o5dmmXCq+JX8kgGivihDfw0TU1+YiGTamU4mzFJSr8t0VGMHdaq3rWqb01e21GR51zIntChwOEUsBjlo06BqeK4KwTOtktM8Abymqntv0m1/BO59E0YRX2OfZ2tO1Inkk=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1739688608; c=relaxed/simple;
	bh=h6QnH1MmtkzBR4KPzRKDT/nAdN+/Ff5Wf+BqxP1Sww0=;
	h=From:To:Cc:Subject:In-Reply-To:References:Date:Message-ID:
	 MIME-Version:Content-Type; b=VImoXfU4eJTW6JWt6EFmkjVhg+TOiBF+EE4ICZhHaHrMSSRrDlvlVYgCYRRw1cPi4I4XIadZODV9YEyhPaLUe/NmohF01F1/NXGX2gUsyTpGPDx3pn14oRtM4WGE3xNVvueROgqQFyOD1KocSseo4ycj8A8qcbAoTve8bmrKUKc=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=linux.alibaba.com; spf=pass smtp.mailfrom=linux.alibaba.com; dkim=pass (1024-bit key) header.d=linux.alibaba.com header.i=@linux.alibaba.com header.b=AWqIcDF4; arc=none smtp.client-ip=115.124.30.100
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=linux.alibaba.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=linux.alibaba.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=linux.alibaba.com header.i=@linux.alibaba.com header.b="AWqIcDF4"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=linux.alibaba.com; s=default;
	t=1739688596; h=From:To:Subject:Date:Message-ID:MIME-Version:Content-Type;
	bh=A4i12Hq2xcwxxA1hyCxMdNiAIgNeSCHhJ94p41qg+Yc=;
	b=AWqIcDF4U2MUoQNgWx9XFspghPzW8ychyx1J/bBBQ0JsIePFjhRLqY/tNCs5vT5FSo6EXrH01mtT1EHdW/rApNXsBTPnltv1J1Jsz/zs04xJyt2zx4iOu+PRR/s5C3R46URZ1jW/Rp7OMBtflXrezUh0deiibhl9hJfTJo4PVIs=
Received: from DESKTOP-5N7EMDA(mailfrom:ying.huang@linux.alibaba.com fp:SMTPD_---0WPVzX6N_1739688591 cluster:ay36)
          by smtp.aliyun-inc.com;
          Sun, 16 Feb 2025 14:49:53 +0800
From: "Huang, Ying" <ying.huang@linux.alibaba.com>
To: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Cc: Raghavendra K T <raghavendra.kt@amd.com>,  <linux-mm@kvack.org>,
  <akpm@linux-foundation.org>,  <lsf-pc@lists.linux-foundation.org>,
  <bharata@amd.com>,  <gourry@gourry.net>,  <nehagholkar@meta.com>,
  <abhishekd@meta.com>,  <nphamcs@gmail.com>,  <hannes@cmpxchg.org>,
  <feng.tang@intel.com>,  <kbusch@meta.com>,  <Hasan.Maruf@amd.com>,
  <sj@kernel.org>,  <david@redhat.com>,  <willy@infradead.org>,
  <k.shutemov@gmail.com>,  <mgorman@techsingularity.net>,
  <vbabka@suse.cz>,  <hughd@google.com>,  <rientjes@google.com>,
  <shy828301@gmail.com>,  <liam.howlett@oracle.com>,
  <peterz@infradead.org>,  <mingo@redhat.com>,  <nadav.amit@gmail.com>,
  <shivankg@amd.com>,  <ziy@nvidia.com>,  <jhubbard@nvidia.com>,
  <AneeshKumar.KizhakeVeetil@arm.com>,  <linux-kernel@vger.kernel.org>,
  <jon.grimm@amd.com>,  <santosh.shukla@amd.com>,  <Michael.Day@amd.com>,
  <riel@surriel.com>,  <weixugc@google.com>,  <leesuyeon0506@gmail.com>,
  <honggyu.kim@sk.com>,  <leillc@google.com>,  <kmanaouil.dev@gmail.com>,
  <rppt@kernel.org>,  <dave.hansen@intel.com>
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature
 information - what info is actually wanted?
In-Reply-To: <20250131130901.00000dd1@huawei.com> (Jonathan Cameron's message
	of "Fri, 31 Jan 2025 13:09:01 +0000")
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
	<20250131122803.000031aa@huawei.com>
	<20250131130901.00000dd1@huawei.com>
Date: Sun, 16 Feb 2025 14:49:50 +0800
Message-ID: <87h64u2xkh.fsf@DESKTOP-5N7EMDA>
User-Agent: Gnus/5.13 (Gnus v5.13)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ascii

Hi, Jonathan,

Sorry for late reply.

Jonathan Cameron <Jonathan.Cameron@huawei.com> writes:

> On Fri, 31 Jan 2025 12:28:03 +0000
> Jonathan Cameron <Jonathan.Cameron@huawei.com> wrote:
>
>> > Here is the list of potential discussion points:  
>> ...
>> 
>> > 2. Possibility of maintaining single source of truth for page hotness that would
>> > maintain hot page information from multiple sources and let other sub-systems
>> > use that info.  
>> Hi,
>> 
>> I was thinking of proposing a separate topic on a single source of hotness,
>> but this question covers it so I'll add some thoughts here instead.
>> I think we are very early, but sharing some experience and thoughts in a
>> session may be useful.
>
> Thinking more on this over lunch, I think it is worth calling this out as a
> potential session topic in it's own right rather than trying to find
> time within other sessions.  Hence the title change.
>
> I think a session would start with a brief listing of the temperature sources
> we have and those on the horizon to motivate what we are unifying, then
> discussion to focus on need for such a unification + requirements 
> (maybe with a straw man).
>
>> 
>> What do the other subsystems that want to use a single source of page hotness
>> want to be able to find out? (subject to filters like memory range, process etc)
>> 
>> A) How hot is page X?  
>> - Is this useful, or too much data? What would use it?
>>   * Application optimization maybe. Very handy for developing algorithms
>>     to do the rest of the options here as an Oracle!
>> - Provides both the cold and hot end of the scale, but maybe measurement
>>   techniques vary and can not be easily combined. Hard in general to combine
>>   multiple sources of truth if aiming for an absolute number.
>> 
>> B) Which pages are super hot?
>> - Probably these that make the most difference if they are in a slower memory tier.
>> 
>> C) Some pages are hot enough to consider moving?
>> - This may be good enough to get the key data into the fast memory over time.
>> - Can combine sources of info as being able to compare precise numbers doesn't matter.
>> 
>> D) Which pages are fairly cold?
>> - Likewise maybe good enough over time.
>> 
>> E) Which pages are very cold?
>> - Ideal case for tiering. Swap these with the super hot ones.
>> - Maybe extra signal for swap / zswap etc
>> 
>> F) Did these hot pages remain hot (and same for cold)
>> - This is needed to know when to back off doing things as we have unstable
>>   hotness (two phase applications are a pain for this), sampling a few
>>   pages may be fine.
>> 
>> Messy corners:
>> 
>> Temporal aspects.
>> - If only providing lists of hottest / coldest in last second, very hard
>>   to find those that are of a stable temperature. We end up moving
>>   very hot data (which is disruptive) and it doesn't stay hot.
>> - Can reduce that affect by long sampling windows on some measurement approaches
>>   (on hardware trackers that can trash accuracy due to resource exhaustion
>>    and other subtle effects).
>> - bistable / phase based applications are a pain but perhaps up to higher
>>   levels to back off.
>> 
>> My main interest is migrating in tiered systems but good to look at what
>> else would use a common layer.
>> 
>> Mostly I want to know something that is useful to move, and assume convergence
>> over the long term with the best things to move so to me the ideal layer has
>> following interface (strawman so shoot holes in it!):
>> 
>> 1) Give me up to X hotish pages from a slow tier (greater than a specific measure
>> of temperature)

Because the hot pages may be available upon page accessing (such PROT_NONE
page fault), the interface may be "push" style instead of "pull" style,
e.g.,

int register_hot_page_handler(void (*handler)(struct page *hot_page, int temperature));

>> 2) Give me X coldish pages a faster tier.
>> 3) I expect to ask again in X seconds so please have some info ready for me!
>> 4) (a path to get an idea of 'unhelpful moves' from earlier iterations - this
>>     is bleeding the tiering application into a shared interface though).

In addition to get a list hot/cold pages, it's also useful to get
hot/cold statistics of a memory device (NUMA node), e.g., something like
below,

Access frequency        percent
   > 1000 HZ            10%
 600-1000 HZ            20%
 200- 600 HZ            50%
   1- 200 HZ            15%
      < 1 HZ             5%

Compared with hot/cold pages list, this may be gotten with lower
overhead and can be useful to tune the promotion/demotion alrogithm.  At
the same time, a sampled (incomplete) list of hot/cold page list may be
available too.

>> If we have multiple subsystems using the data we will need to resolve their
>> conflicting demands to generate good enough data with appropriate overhead.
>> 
>> I'd also like a virtualized solution for case of hardware PA trackers (what
>> I have with CXL Hotness Monitoring Units) and classic memory pool / stranding
>> avoidance case where the VM is the right entity to make migration decisions.
>> Making that interface convey what the kernel is going to use would be an
>> efficient option. I'd like to hide how the sausage was made from the VM.

---
Best Regards,
Huang, Ying

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A1D29198823
	for <linux-kernel@vger.kernel.org>; Fri,  7 Feb 2025 19:52:13 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738957933; cv=none; b=Sh/5QFMS1MRgA7GedtROxJP8XJG35m/LH034VurIsaMCzYklMoI+RF1/viIEdMcCHaP7Uq2Hl23WC3dXC7VnMUfYrFKDuwzMGrwrbJ8SBtVzOLahKJKa6EqsBDJzx623Gc80wLN0Oz8835dpuDtx6dsRHJjwpxHjstvLrf0FeHo=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738957933; c=relaxed/simple;
	bh=YD6Vnw1Zes8qZzj1Vzq2xXKOSpCh7rLVAGQgkXot9Ck=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=SqDisyeFGB2dst4jzHob7/MnPGx7+rXFHU01OTET9ZmfGAOyQJbzt/f32P+ifL7OfVfW3Pz04Okg5mBiGXW0qbU8N73z/DVxP3FRgCEX4Wb0jtG1wQMcij3kzBX0GiTD7rXv3IPRaFyaVk8Lv0WEwRixw92biBc7HgCXCc6/yMk=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=S+EaCJ4k; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="S+EaCJ4k"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id E2E4EC4CED1;
	Fri,  7 Feb 2025 19:52:12 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1738957933;
	bh=YD6Vnw1Zes8qZzj1Vzq2xXKOSpCh7rLVAGQgkXot9Ck=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=S+EaCJ4kZ8MjJkJkm812+G2E3W3aw0QbXrMkuc0wqhXmTZeEtj74U/xAelzdfGq5f
	 1Az5itXg3wOdTN1gJ2wOcefR6nDNTDXYKNTuRhvb22pvQT3PYn7gJNnRDeuOFmWWNI
	 rhpZt+yqzFckk5ioxJpvnszYA6VP+0dqP5khEzZNBIZVAlmBOY1p2NVkJInbTKGLnW
	 xMxetbFM6pMlRJuYAeikV45bl3OkL0UShJdg/G9KHtXIWetZolIKqurIQ5WAZfaPrm
	 TeQcqjBHVKTjb+nv4fY2pMVX6YDtrSKM7nXOJvytFuGkDWS3THw0Hwx+NSO0kjDcfK
	 22Ibntn0MxVbw==
From: SeongJae Park <sj@kernel.org>
To: "Huang, Ying" <ying.huang@linux.alibaba.com>
Cc: SeongJae Park <sj@kernel.org>,
	Bharata B Rao <bharata@amd.com>,
	Raghavendra K T <raghavendra.kt@amd.com>,
	linux-mm@kvack.org,
	akpm@linux-foundation.org,
	lsf-pc@lists.linux-foundation.org,
	gourry@gourry.net,
	nehagholkar@meta.com,
	abhishekd@meta.com,
	nphamcs@gmail.com,
	hannes@cmpxchg.org,
	feng.tang@intel.com,
	kbusch@meta.com,
	Hasan.Maruf@amd.com,
	david@redhat.com,
	willy@infradead.org,
	k.shutemov@gmail.com,
	mgorman@techsingularity.net,
	vbabka@suse.cz,
	hughd@google.com,
	rientjes@google.com,
	shy828301@gmail.com,
	liam.howlett@oracle.com,
	peterz@infradead.org,
	mingo@redhat.com,
	nadav.amit@gmail.com,
	shivankg@amd.com,
	ziy@nvidia.com,
	jhubbard@nvidia.com,
	AneeshKumar.KizhakeVeetil@arm.com,
	linux-kernel@vger.kernel.org,
	jon.grimm@amd.com,
	santosh.shukla@amd.com,
	Michael.Day@amd.com,
	riel@surriel.com,
	weixugc@google.com,
	leesuyeon0506@gmail.com,
	honggyu.kim@sk.com,
	leillc@google.com,
	kmanaouil.dev@gmail.com,
	rppt@kernel.org,
	dave.hansen@intel.com
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion based on PTE A bit scanning
Date: Fri,  7 Feb 2025 11:52:10 -0800
Message-Id: <20250207195210.43726-1-sj@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <87ikpmgooo.fsf@DESKTOP-5N7EMDA>
References: 
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

On Fri, 07 Feb 2025 16:10:47 +0800 "Huang, Ying" <ying.huang@linux.alibaba.com> wrote:

> SeongJae Park <sj@kernel.org> writes:
> 
> > On Mon, 27 Jan 2025 10:41:07 +0530 Bharata B Rao <bharata@amd.com> wrote:
> >
> >> On 26-Jan-25 7:57 AM, Huang, Ying wrote:
> >> > Hi, Raghavendra,
> >> > 
> >> > Raghavendra K T <raghavendra.kt@amd.com> writes:
[...]
> >> > The drawbacks of asynchronous scanning including
> >> > 
> >> > - The CPU cycles used are not charged properly
> >> > 
> >> > - There may be no idle CPU cycles to use
> >> > 
> >> > - The scanning CPU may be not near the workload CPUs enough
> >> > 
> >> > It's better to involve Mel and Peter in the discussion for this.
> >> 
> >> They are CC'ed in this thread and hopefully have insights to share.
> >> 
> >> Charging CPU cycles to the right process has been brought up in other 
> >> similar contexts. Recent one is from page migration batching and using 
> >> multiple threads for migration - 
> >> https://lore.kernel.org/all/CAHbLzkpoKP0fVZP5b10wdzAMDLWysDy7oH0qaUssiUXj80R6bw@mail.gmail.com/
> >> 
> >> Does it make sense to treat hot page promotion from slow tiers 
> >> differently compared to locality based balancing? I mean couldn't the 
> >> charging of this async thread be similar to the cycles spent by other 
> >> system threads like kcompactd and khugepaged?
> >
> > I'm up to this idea.
> >
> > I agree the fairness is a thing that we need to aware of.  But IMHO, it is
> > something that the async approach can further be advanced for, not a strict
> > blocker for now.
> 
> Personally, I have no objection to async operations in general.
> However, we may need to find some way to control these async operations
> instead of adding more and more background kthreads blindly.  How to
> charge and constrain the resources used by these async operations is
> important too.  For example, some users may want to bind some async
> operations on some CPUs.
> 
> IMHO, we should think about the requirements and possible solutions
> instead of ignoring the issues.

I agree.  For DAMON, we implemented DAMOS quotas feature for such resource
control.  We also had a (non-public) discussion about splitting DAMON thread
for monitoring part and operation schemes execution parts for finer control.
I'm also thinking about making the quotas for monitoring part resource
consumption.  We didn't implement the ideas yet since the requirements on
real-world is unclear as of now, though.  We will keep collecting the
requirements and prioritize those or make another solution as the requirements
becomes clearer.

[...]
> >> > One drawback of physical address based scanning is that it's hard to
> >> > apply some workload specific policy.  For example, if a low priority
> >> > workload has many relatively hot pages, while a high priority workload
> >> > has many relative warm (not so hot) pages.  We need to promote the warm
> >> > pages in the high priority workload, while physcial address based
> >> > scanning may report the hot pages in the low priority workload.  Right?
> >> 
> >> Correct. I wonder if DAMON has already devised a scheme to address this. SJ?
> >
> > Yes, I think DAMOS quotas and DAMOS filters can be used to address this issue.
> >
> > For this case, assuming each workload has its own cgroup, users can add a DAMOS
> > scheme for promotion per workload.  The schemes will have different DAMOS
> > quotas based on the workloads' priority.  The schemes will also be controlled
> > to do the promotion for pages of the specific workloads using DAMOS filters.
> >
> > For example, below kdamond configuration can be used.
> >
> > # damo args damon \
> > 	--damos_action migrate_hot 0 --damos_quotas 100ms 1G 1s 0% 100% 100% \
> > 	--damos_filter reject none memcg /workloads/high-priority \
> > 	\
> > 	--damos_action migrate_hot 0 --damos_quotas 10ms 100M 1s 0% 100% 100% \
> > 	--damos_filter reject none memcg /workloads/low-priority \
> > 	--damos_nr_filters 1 1 --out kdamond.json
> > # damo report damon --input_file ./kdamond.json --damon_params_omit_defaults
> > kdamond 0
> >     context 0
> >         ops: paddr
> >         target 0
> >             region [4,294,967,296, 68,577,918,975) (59.868 GiB)
> >         intervals: sample 5 ms, aggr 100 ms, update 1 s
> >         nr_regions: [10, 1,000]
> >         scheme 0
> >             action: migrate_hot to node 0 per aggr interval
> >             target access pattern
> >                 sz: [0 B, max]
> >                 nr_accesses: [0 %, 18,446,744,073,709,551,616 %]
> >                 age: [0 ns, max]
> >             quotas
> >                 100 ms / 1024.000 MiB / 0 B per 1 s
> >                 priority: sz 0 %, nr_accesses 100 %, age 100 %
> >             filter 0
> >                 reject none memcg /workloads/high-priority
> >         scheme 1
> >             action: migrate_hot to node 0 per aggr interval
> >             target access pattern
> >                 sz: [0 B, max]
> >                 nr_accesses: [0 %, 18,446,744,073,709,551,616 %]
> >                 age: [0 ns, max]
> >             quotas
> >                 10 ms / 100.000 MiB / 0 B per 1 s
> >                 priority: sz 0 %, nr_accesses 100 %, age 100 %
> >             filter 0
> >                 reject none memcg /workloads/low-priority
> >
> > Please note that this is just one example based on existing DAMOS features.
> > This may have drawbacks and future optimizations would be possible.
> 
> IIUC, this is something like,
> 
> physical address -> struct page -> cgroup -> per-cgroup hot threshold

You're right.

> 
> this sounds good to me.  Thanks!

Happy to hear that, and looking forward to contiue improving it further with
you! :)


Thanks,
SJ

> 
> ---
> Best Regards,
> Huang, Ying

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from casper.infradead.org (casper.infradead.org [90.155.50.34])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id C0D751A23A9
	for <linux-kernel@vger.kernel.org>; Fri,  7 Feb 2025 09:51:20 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=90.155.50.34
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738921882; cv=none; b=RLXXg4FIbPpuZmW49YBwPEF/5YqyMJsTbg7Bj9txDUTvJ3VzNnScCjhfQtT0z5WQ+bcgBOTqHy1zs9ad7qdXgjAeeghyYTG0TGGN6vHd4A9uBOo/vgSBST/1wlqlxVlJkAqPZz33jdxtC+YsV03njNoy0pP02OeT1BDbwTdsHd0=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738921882; c=relaxed/simple;
	bh=ngJO7QmaDQrn23uZgS2xweCgDp91dFI3t0Q8eN71yoQ=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=SNPaqm++SXRveEuoB04YTMCIAN5MsDWtDzHksX86L9UcW2DtXhTIDg/Z6KoVf4VT1QBxWAwGt2HQ/bAHoKsNt+egQvPMmNXijEM+/Z4nedVoLV4orMOLyVHQTTpe+SpwsomMSOzLaMYC57bvnzbhhJBLGQ/qUd4Nc4iI2dMwX7w=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=infradead.org; spf=none smtp.mailfrom=infradead.org; dkim=pass (2048-bit key) header.d=infradead.org header.i=@infradead.org header.b=NUS6vtz6; arc=none smtp.client-ip=90.155.50.34
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=infradead.org
Authentication-Results: smtp.subspace.kernel.org; spf=none smtp.mailfrom=infradead.org
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=infradead.org header.i=@infradead.org header.b="NUS6vtz6"
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=casper.20170209; h=In-Reply-To:Content-Type:MIME-Version:
	References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
	Content-Transfer-Encoding:Content-ID:Content-Description;
	bh=I3zHKIIrHLZPRQJg9EPbWWtt+Jc1QDKf1pOOHmPfCvA=; b=NUS6vtz6BBZ7OxDmYuLHAQtwWX
	HUruHEv4y0/38vsTBSGHox8V14WNq1koNkFg5pmNys8ITSq+N0vUPrbkypcit4YZVtWInswyqP0Tp
	dZNShe9iI9poWZp8S1lFD2iqYxG8P05Q4WcU38mSz4wcN5iD54UnOtpJRDPoVbZO8JlsK5ny+hMXH
	aP119/cCCAqI3efFIw+gCwSHgZYjQLlto0GwmQIHiZ8g11qIvGKim+94IMhBiMgh+R4Uupk5wAsDO
	3rilYisiS29euEPQS4MgLYJbB2Suhr3H/IFCiZb8t7Ukex5srCcqcMhRL9m+9Gp7B4HRMMftRKvmk
	hGGKlz+w==;
Received: from willy by casper.infradead.org with local (Exim 4.98 #2 (Red Hat Linux))
	id 1tgL0h-00000007aqf-3vaR;
	Fri, 07 Feb 2025 09:50:55 +0000
Date: Fri, 7 Feb 2025 09:50:55 +0000
From: Matthew Wilcox <willy@infradead.org>
To: Bharata B Rao <bharata@amd.com>
Cc: Jonathan Cameron <Jonathan.Cameron@huawei.com>,
	Raghavendra K T <raghavendra.kt@amd.com>, linux-mm@kvack.org,
	akpm@linux-foundation.org, lsf-pc@lists.linux-foundation.org,
	gourry@gourry.net, nehagholkar@meta.com, abhishekd@meta.com,
	ying.huang@linux.alibaba.com, nphamcs@gmail.com, hannes@cmpxchg.org,
	feng.tang@intel.com, kbusch@meta.com, Hasan.Maruf@amd.com,
	sj@kernel.org, david@redhat.com, k.shutemov@gmail.com,
	mgorman@techsingularity.net, vbabka@suse.cz, hughd@google.com,
	rientjes@google.com, shy828301@gmail.com, liam.howlett@oracle.com,
	peterz@infradead.org, mingo@redhat.com, nadav.amit@gmail.com,
	shivankg@amd.com, ziy@nvidia.com, jhubbard@nvidia.com,
	AneeshKumar.KizhakeVeetil@arm.com, linux-kernel@vger.kernel.org,
	jon.grimm@amd.com, santosh.shukla@amd.com, Michael.Day@amd.com,
	riel@surriel.com, weixugc@google.com, leesuyeon0506@gmail.com,
	honggyu.kim@sk.com, leillc@google.com, kmanaouil.dev@gmail.com,
	rppt@kernel.org, dave.hansen@intel.com
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature
 information - what info is actually wanted?
Message-ID: <Z6XXf5OaLe9ZaN02@casper.infradead.org>
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <20250131122803.000031aa@huawei.com>
 <20250131130901.00000dd1@huawei.com>
 <de31971e-98fc-4baf-8f4f-09d153902e2e@amd.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <de31971e-98fc-4baf-8f4f-09d153902e2e@amd.com>

On Wed, Feb 05, 2025 at 11:54:05AM +0530, Bharata B Rao wrote:
> Here is a compilation of available temperature sources and how the
> hot/access data is consumed by different subsystems:
> 
> PA-Physical address available
> VA-Virtual address available
> AA-Access time available
> NA-accessing Node info available
> 
> I have left the slot blank for those which I am not sure about.
> ==================================================
> Temperature		PA	VA	AA	NA
> source
> ==================================================
> PROT_NONE faults	Y	Y	Y	Y
> --------------------------------------------------
> folio_mark_accessed()	Y		Y	Y
> --------------------------------------------------
> PTE A bit		Y	Y	N	N
> --------------------------------------------------
> Platform hints		Y	Y	Y	Y
> (AMD IBS)
> --------------------------------------------------
> Device hints		Y
> (CXL HMU)
> ==================================================
> 
> And here is an attempt to compile how different subsystems
> use the above data:
> ==============================================================
> Source			Subsystem		Consumption
> ==============================================================
> PROT_NONE faults	NUMAB		NUMAB=1 locality based
> via process pgtable			balancing
> walk					NUMAB=2 hot page
> 					promotion
> ==============================================================
> folio_mark_accessed()	FS/filemap/GUP	LRU list activation
> ==============================================================
> PTE A bit via		Reclaim:LRU	LRU list activation,	
> rmap walk				deactivation/demotion
> ==============================================================
> PTE A bit via		Reclaim:MGLRU	LRU list activation,	
> rmap walk and process			deactivation/demotion
> pgtable walk
> ==============================================================
> PTE A bit via		DAMON		LRU activation,
> rmap walk				hot page promotion,
> 					demotion etc
> ==============================================================
> Platform hints		NUMAB		NUMAB=1 Locality based
> (AMD IBS)				balancing and
> 					NUMAB=2 hot page
> 					promotion
> ==============================================================
> Device hints		NUMAB		NUMAB=2 hot page
> 					promotion
> ==============================================================
> The last two are listed as possibilities.
> 
> Feel free to correct/clarify and add more.

There's PG_young / PG_idle as well.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-qk1-f179.google.com (mail-qk1-f179.google.com [209.85.222.179])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A65A91D5AB7
	for <linux-kernel@vger.kernel.org>; Fri,  7 Feb 2025 09:06:47 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.222.179
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738919209; cv=none; b=lHjiR8I9E1U75wXUMbc+fcoBKUOD2LoXoGPrq9v9erFAZy83Mbsm8QfYJecBKBJKd0bNyI38fZ+DgpNFODH0OPWpEnKmz+oDvXyojDpUwOUOt2lOygQLeilA2fWCikEvVPsf1WmPZx6rbFX/Vu8+CICEXduscCMDvyFiFenLmMA=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738919209; c=relaxed/simple;
	bh=+woGmxCMu2JzyJ0YCPBlHL3Y4fLfMfw0zcAOzy24UFw=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=jfdwdZDgE5Xl2oxSezr5opRHjbP9m7f4SFEMexKZxA72uJqbVLMoGp3GQTGO3QMYkmEMML2nfmE/XmeF7+EU3eTU3AVld5P8LP58T1mdpaUFtWvk4Wb5BuUovx55LZtRXSxNIZZV4xiKhGJDDQ8eOq9nLBE+kHkCZ0wObYOKZcU=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=gourry.net; spf=pass smtp.mailfrom=gourry.net; dkim=pass (2048-bit key) header.d=gourry.net header.i=@gourry.net header.b=JCmxkFc6; arc=none smtp.client-ip=209.85.222.179
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=gourry.net
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gourry.net
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gourry.net header.i=@gourry.net header.b="JCmxkFc6"
Received: by mail-qk1-f179.google.com with SMTP id af79cd13be357-7b6f7d7e128so290399485a.1
        for <linux-kernel@vger.kernel.org>; Fri, 07 Feb 2025 01:06:47 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gourry.net; s=google; t=1738919206; x=1739524006; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:from:date:from:to:cc:subject:date:message-id:reply-to;
        bh=KlsCGWDYgEMFIAxn5ZNnnG9gpMSYaXAreXaY6lgyHOI=;
        b=JCmxkFc6uPS2abEWD3dIr+ZpHS0Ao8l6xX5LBWYMfkKvh0ZqegTfDiDeNz3UFhDKcw
         xxQNfEPD+54bcfZ0XLQFzRI2sgThRUeWc9x1Gg37912KVQoW3q9PqMaSPxE4WxH8LBPO
         AQW1kfxd5Mg9xbNrjxHSHc68MXUb/vO86DEUk2Fp0Bia+oMMlrWy7nX5c0/RMiIJRVNh
         S8SqlpHjzMgAodoBfxLInmylziYZbbMNfhGeq1NaqRZYO05NZW8x0Ghp5z1gmn+Yvhi8
         XMI7FYcoq7rI16rQ/q58G5yV9B72opVHXVoyGVzI0gu0V8x+AEC1DaVtyWfZ/l67tKkk
         fFEg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1738919206; x=1739524006;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:from:date:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=KlsCGWDYgEMFIAxn5ZNnnG9gpMSYaXAreXaY6lgyHOI=;
        b=wi4OMH/9uJORZ3hy1chHsO8DUp09ys/FItJr05TL35cRNEir1eGdGaOFQiA4CCyxRu
         dLLqM1USxZd4SpuIhYeBQBJng69WiiPKiys0X1/G3ztM1bWsNjmWjSwG1quOVTNmJjfv
         vm+TDN5T7iGeBfrrZGEvJ17OaiYxczPKz4n8rOsOB+7X+pLSHgcvunvPuhvybtXBZ+aP
         YG9XHeLNGZ32IEyQxSBbXq8UijoLYD6KZlcxU41EWtwhJkLrwWTRQH2lIfuJ7c8iJV0D
         G2RIr6HsAOl9BJj/XijbylugMtnz/UlZJTB+PDpK/hXEGcYFLVbNNcEZl6FOSMWUwZoX
         j/yA==
X-Forwarded-Encrypted: i=1; AJvYcCX/woNAaD9WnPOL5xzAwjjsB23UsfsTxJzVhPTFd5ffHjJ21HLDximRkMyZmI3Rf50Dp1ileJs/lqjtxFk=@vger.kernel.org
X-Gm-Message-State: AOJu0YzE+yv8IVS+tmEc6aIGMPz6qfYu9TdgNcaanXZEiIakc70D6+IZ
	3loEtlJojHOIaWSWrETc9EpfGPdt1sZWz/py1EsYX40nEBMY4La+nA7bqIitOWA=
X-Gm-Gg: ASbGnctwsocFesbJnFfc6t+AHrmDzDF06poV2W8FQ8iPjLaI3umFBk42YZKzeSnLm+h
	puMlPGyRVD89iZ5ZUf6X82+yFDVNiH4P0CuLxqxXuCoQJennh+G7gUBcpqWlM4qy2uhURugFtsX
	YAlI/dEQEaKwxDuqRecv/JporN9TP87o0L+1ZwwCuDZ18wVMUL8cyCxcMXKkBUCqP7g88rqCBVb
	8O5EvplUTUXICSYDZmoNsJeHNJBP2qLwulg/Hv/7wcwaG90fPGvuZmNdGz4S99Ho5MDe/NglyYC
	NOAtyJi0qPhTKAh1UvlyfmF3TadwZeVfznNOZ1c0cPGl6RjNYNF3VYs17WoHXbxZrdc+KXHBPw=
	=
X-Google-Smtp-Source: AGHT+IFix9/6/WikxUXpr4E81NDyDlXxaQWFzjmD160fcdkrmvnCsAAyMkgJA4E3sG1vrdNPNKoSjA==
X-Received: by 2002:a05:6214:d68:b0:6e4:47b0:8b53 with SMTP id 6a1803df08f44-6e447b08f9fmr22904806d6.9.1738919206428;
        Fri, 07 Feb 2025 01:06:46 -0800 (PST)
Received: from gourry-fedora-PF4VCD3F (pool-173-79-56-208.washdc.fios.verizon.net. [173.79.56.208])
        by smtp.gmail.com with ESMTPSA id 6a1803df08f44-6e43ba368a9sm14778966d6.29.2025.02.07.01.06.44
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Fri, 07 Feb 2025 01:06:45 -0800 (PST)
Date: Fri, 7 Feb 2025 04:06:42 -0500
From: Gregory Price <gourry@gourry.net>
To: "Huang, Ying" <ying.huang@linux.alibaba.com>
Cc: SeongJae Park <sj@kernel.org>, Bharata B Rao <bharata@amd.com>,
	Raghavendra K T <raghavendra.kt@amd.com>, linux-mm@kvack.org,
	akpm@linux-foundation.org, lsf-pc@lists.linux-foundation.org,
	nehagholkar@meta.com, abhishekd@meta.com, nphamcs@gmail.com,
	hannes@cmpxchg.org, feng.tang@intel.com, kbusch@meta.com,
	Hasan.Maruf@amd.com, david@redhat.com, willy@infradead.org,
	k.shutemov@gmail.com, mgorman@techsingularity.net, vbabka@suse.cz,
	hughd@google.com, rientjes@google.com, shy828301@gmail.com,
	liam.howlett@oracle.com, peterz@infradead.org, mingo@redhat.com,
	nadav.amit@gmail.com, shivankg@amd.com, ziy@nvidia.com,
	jhubbard@nvidia.com, AneeshKumar.KizhakeVeetil@arm.com,
	linux-kernel@vger.kernel.org, jon.grimm@amd.com,
	santosh.shukla@amd.com, Michael.Day@amd.com, riel@surriel.com,
	weixugc@google.com, leesuyeon0506@gmail.com, honggyu.kim@sk.com,
	leillc@google.com, kmanaouil.dev@gmail.com, rppt@kernel.org,
	dave.hansen@intel.com
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
Message-ID: <Z6XNIuVbYvZMYJs2@gourry-fedora-PF4VCD3F>
References: <20250127183403.67757-1-sj@kernel.org>
 <87ikpmgooo.fsf@DESKTOP-5N7EMDA>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <87ikpmgooo.fsf@DESKTOP-5N7EMDA>

On Fri, Feb 07, 2025 at 04:10:47PM +0800, Huang, Ying wrote:
> SeongJae Park <sj@kernel.org> writes:
> >
> > I agree the fairness is a thing that we need to aware of.  But IMHO, it is
> > something that the async approach can further be advanced for, not a strict
> > blocker for now.
> 
> Personally, I have no objection to async operations in general.
> However, we may need to find some way to control these async operations
> instead of adding more and more background kthreads blindly.  How to
> charge and constrain the resources used by these async operations is
> important too.  For example, some users may want to bind some async
> operations on some CPUs.
> 
> IMHO, we should think about the requirements and possible solutions
> instead of ignoring the issues.
>

It also concerns me that most every proposal on async promotion ignores
the promotion-node selection problem as if it's a secondary issue.

Async systems fundamentally lack accessor-locality information unless it
is recorded - and recording this information is expensive and/or
heuristically imprecise for memory shared across tasks (two threads in
the same process schedule across sockets).

If we can't agree on a solution to this problem, it undercuts many of
these RFCs which often simply hard-code the target node to "0" because
it's too hard or too expensive to consider the multi-socket scenario.

~Gregory

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-qt1-f181.google.com (mail-qt1-f181.google.com [209.85.160.181])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id BEB37185E7F
	for <linux-kernel@vger.kernel.org>; Wed,  5 Feb 2025 16:05:37 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.160.181
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738771540; cv=none; b=Pynr69QCmqs96Sx9w3ZVkHPxJMypvCmaxncpp5gAV9LIs7+Iy7s+49R4HXfABoQx4mmzZQqVvtkAFKexW0waeGbcUt3Q8PnbG3z+HRtwIwAWHujkhzoHQyNCee6D+pe6FiAoIvlc4srthfbBqxEnF9wzpHqARbiwXkkLWL/vpeY=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738771540; c=relaxed/simple;
	bh=7GtzonogMvHHgGMGnFdGJR/KaR3oN192mOjriytdFq0=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=I3jlGCabdgcugqEH4+udYXXuJgODVQtGueMy6EEM3S6q8jjc+qJXahohTG8x7M35irWOuSVdHFkbhtgslaaUDM3gduxPRMW2NRYfqADiK0v0874L11Lhn2Qy5zUL9V+jmk6wqGsDMzSYN0rPxD6CYVbPL/QnYQOkraQ+w9aEYDg=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=cmpxchg.org; spf=pass smtp.mailfrom=cmpxchg.org; dkim=pass (2048-bit key) header.d=cmpxchg-org.20230601.gappssmtp.com header.i=@cmpxchg-org.20230601.gappssmtp.com header.b=GuO847zS; arc=none smtp.client-ip=209.85.160.181
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=cmpxchg.org
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=cmpxchg.org
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=cmpxchg-org.20230601.gappssmtp.com header.i=@cmpxchg-org.20230601.gappssmtp.com header.b="GuO847zS"
Received: by mail-qt1-f181.google.com with SMTP id d75a77b69052e-46fcbb96ba9so75443071cf.0
        for <linux-kernel@vger.kernel.org>; Wed, 05 Feb 2025 08:05:37 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=cmpxchg-org.20230601.gappssmtp.com; s=20230601; t=1738771536; x=1739376336; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:from:date:from:to:cc:subject:date:message-id:reply-to;
        bh=nI3OxNrtDO2/9J234gYunPE+YsfotDZVga3ivwTWhbY=;
        b=GuO847zSa5SDVSAjZoADJH/XEpGrA/2iY/sib4X2bRYDQh9rH8L2OWLjO+LUqqigB2
         kAACUbDDwmpdTmESt+kAocmB+576/uhwdqn2jrasUT0ZzL5kSqw3Fh5maxORjKUYAIrM
         WOVPqUOAY46GkSGqX9j4W6I90r9UEvURRCiA6g+LtefbBTHFm8Oe6P5Xw8nHFXrVtNTJ
         HSJaBCXCTW9kUXa6tttK8lDaHn7j5LavN07UMfkh35QfLIyhYO5IvTS4EKZW7H2Dcoj4
         R3l/3+tyhdZaQWEBlS/Z+2WMo1s8BT8VUk/Y3vjtqOcsS6ay7tzaiAqtSXC+10N0M4Fl
         iteA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1738771536; x=1739376336;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:from:date:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=nI3OxNrtDO2/9J234gYunPE+YsfotDZVga3ivwTWhbY=;
        b=QMAi8zuYUL85t6dEgrFnsaqAatoaOhkBYeSuMgTPJyEcfxAL3ABQXrWpH0+t/Q26nr
         gUI8omVBhku+lAR/4MBInIueuO/SO4i21Lj26sVXqt1ShT2/6zBa/FJcZ+/gnJ//CRmz
         dVirwX+hlc/eAVdO0nxLwpFlu9pDIxI1nIYYjEj+YiJfKcdaCl4qCCh5LmisMzQeWZJL
         po9NVSFXsFIYmwAIWYYAfj46OltAxemcHXyKtdDmZxXy0hLEJ2KIjq2hkXVFNgih931o
         JiDLBdP2QKsd3hUhgA54faVB4ibXRb+QppMp7R7aJTxL7CxgPdTcrRx+ZnIuSquyM1uv
         mEGA==
X-Forwarded-Encrypted: i=1; AJvYcCVLF2BE12cah0HGpuOyml4jcmQ7SryBFHzQ8VOY5xSHuNZzQXrv+gpXsMbs/POWU0z5mYBmLxMc8eA9vSM=@vger.kernel.org
X-Gm-Message-State: AOJu0Yx46cCeF6sZqJVcwByL6QwWNkPiEtKs5/TJlrKyIq4hQRFZj0Te
	T2ollBbhZKcDu0DhHM5DqrU/jR8UPiIRcm3wGecYWfAsO5hTSHJEovaBghzHWjI=
X-Gm-Gg: ASbGncvzobokllMLQDaAWQQpr+wFLWGvU+5eWxQTa9N8YF0kSl3+fDge+QZn3obZX/C
	/ZFqf2PT6oNpd8/ftf/p3s/kmF3t1YHrAB76+l81ho/KoIvUMMAeo7Y36pBTsNPKq/Uee/wqmIr
	SWd902YeD/Zs86WG0BDsLURLR9/mxSH+Rh6IGDA0CxV+0lhjWL5775nANAv+hbz+HIJtAgPlzK7
	fpRWcMJbk3Jei99n1ne/eTb1gCbn6ESXvppSE7eP00ZfaAihbWOktOUpHavYykM92iW6/rFTvuT
	tIH6Hgf85yfJBA==
X-Google-Smtp-Source: AGHT+IGDxwlKxUxtmqiAukdUNAhCmwtT1XnLXZnSe9RyA+1/jO1dxUHk3/+YWgtCBRrKv23ZyapWoQ==
X-Received: by 2002:ac8:7d91:0:b0:466:b122:5143 with SMTP id d75a77b69052e-47028168982mr51301281cf.16.1738771536086;
        Wed, 05 Feb 2025 08:05:36 -0800 (PST)
Received: from localhost ([2603:7000:c01:2716:da5e:d3ff:fee7:26e7])
        by smtp.gmail.com with UTF8SMTPSA id d75a77b69052e-46fdf18cbb8sm71612721cf.78.2025.02.05.08.05.34
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Wed, 05 Feb 2025 08:05:34 -0800 (PST)
Date: Wed, 5 Feb 2025 11:05:29 -0500
From: Johannes Weiner <hannes@cmpxchg.org>
To: Bharata B Rao <bharata@amd.com>
Cc: Jonathan Cameron <Jonathan.Cameron@huawei.com>,
	Raghavendra K T <raghavendra.kt@amd.com>, linux-mm@kvack.org,
	akpm@linux-foundation.org, lsf-pc@lists.linux-foundation.org,
	gourry@gourry.net, nehagholkar@meta.com, abhishekd@meta.com,
	ying.huang@linux.alibaba.com, nphamcs@gmail.com,
	feng.tang@intel.com, kbusch@meta.com, Hasan.Maruf@amd.com,
	sj@kernel.org, david@redhat.com, willy@infradead.org,
	k.shutemov@gmail.com, mgorman@techsingularity.net, vbabka@suse.cz,
	hughd@google.com, rientjes@google.com, shy828301@gmail.com,
	liam.howlett@oracle.com, peterz@infradead.org, mingo@redhat.com,
	nadav.amit@gmail.com, shivankg@amd.com, ziy@nvidia.com,
	jhubbard@nvidia.com, AneeshKumar.KizhakeVeetil@arm.com,
	linux-kernel@vger.kernel.org, jon.grimm@amd.com,
	santosh.shukla@amd.com, Michael.Day@amd.com, riel@surriel.com,
	weixugc@google.com, leesuyeon0506@gmail.com, honggyu.kim@sk.com,
	leillc@google.com, kmanaouil.dev@gmail.com, rppt@kernel.org,
	dave.hansen@intel.com
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature
 information - what info is actually wanted?
Message-ID: <20250205160529.GB1183495@cmpxchg.org>
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <20250131122803.000031aa@huawei.com>
 <20250131130901.00000dd1@huawei.com>
 <de31971e-98fc-4baf-8f4f-09d153902e2e@amd.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <de31971e-98fc-4baf-8f4f-09d153902e2e@amd.com>

On Wed, Feb 05, 2025 at 11:54:05AM +0530, Bharata B Rao wrote:
> On 31-Jan-25 6:39 PM, Jonathan Cameron wrote:
> > On Fri, 31 Jan 2025 12:28:03 +0000
> > Jonathan Cameron <Jonathan.Cameron@huawei.com> wrote:
> > 
> >>> Here is the list of potential discussion points:
> >> ...
> >>
> >>> 2. Possibility of maintaining single source of truth for page hotness that would
> >>> maintain hot page information from multiple sources and let other sub-systems
> >>> use that info.
> >> Hi,
> >>
> >> I was thinking of proposing a separate topic on a single source of hotness,
> >> but this question covers it so I'll add some thoughts here instead.
> >> I think we are very early, but sharing some experience and thoughts in a
> >> session may be useful.
> > 
> > Thinking more on this over lunch, I think it is worth calling this out as a
> > potential session topic in it's own right rather than trying to find
> > time within other sessions.  Hence the title change.
> > 
> > I think a session would start with a brief listing of the temperature sources
> > we have and those on the horizon to motivate what we are unifying, then
> > discussion to focus on need for such a unification + requirements
> > (maybe with a straw man).
> 
> Here is a compilation of available temperature sources and how the 
> hot/access data is consumed by different subsystems:

This is super useful, thanks for collecting this.

> PA-Physical address available
> VA-Virtual address available
> AA-Access time available
> NA-accessing Node info available
> 
> I have left the slot blank for those which I am not sure about.
> ==================================================
> Temperature		PA	VA	AA	NA
> source
> ==================================================
> PROT_NONE faults	Y	Y	Y	Y
> --------------------------------------------------
> folio_mark_accessed()	Y		Y	Y
> --------------------------------------------------

For fma(), the VA info is available in unmap, but usually it isn't -
or doesn't meaningfully exist, as in the case of unmapped buffered IO.

I'd say it's an N.

> PTE A bit		Y	Y	N	N
> --------------------------------------------------
> Platform hints		Y	Y	Y	Y
> (AMD IBS)
> --------------------------------------------------
> Device hints		Y
> (CXL HMU)
> ==================================================

For the following table, it might be useful to add *when* the source
produces this information. Sampling frequency is a likely challenge:
consumers have different requirements, and overhead should be limited
to the minimum required to serve enabled consumers.

Here is an (incomplete) attempt - sorry about the long lines:

> And here is an attempt to compile how different subsystems
> use the above data:
> ==============================================================
> Source			Subsystem		Consumption         Activation/Frequency
> ==============================================================
> PROT_NONE faults	NUMAB		NUMAB=1 locality based              While task is running,
> via process pgtable			balancing                           rate varies on observed
> walk					NUMAB=2 hot page                    locality and sysctl knobs.
> 					promotion
> ==============================================================
> folio_mark_accessed()	FS/filemap/GUP	LRU list activation                 On cache access and unmap
> ==============================================================
> PTE A bit via		Reclaim:LRU	LRU list activation,	            During memory pressure
> rmap walk				deactivation/demotion
> ==============================================================
> PTE A bit via		Reclaim:MGLRU	LRU list activation,	            - During memory pressure
> rmap walk and process			deactivation/demotion               - Continuous sampling (configurable)
> pgtable walk                                                                for workingset reporting
> ==============================================================
> PTE A bit via		DAMON		LRU activation,                     Continuous sampling (configurable)?
> rmap walk				hot page promotion,                 (I believe SJ is looking into
> 					demotion etc                         auto-tuning this).
> ==============================================================
> Platform hints		NUMAB		NUMAB=1 Locality based
> (AMD IBS)				balancing and
> 					NUMAB=2 hot page
> 					promotion
> ==============================================================
> Device hints		NUMAB		NUMAB=2 hot page
> 					promotion
> ==============================================================
> The last two are listed as possibilities.
> 
> Feel free to correct/clarify and add more.
> 
> Regards,
> Bharata.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-SN1-obe.outbound.protection.outlook.com (mail-sn1nam02on2083.outbound.protection.outlook.com [40.107.96.83])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 82AD7227B98
	for <linux-kernel@vger.kernel.org>; Wed,  5 Feb 2025 06:24:24 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.96.83
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738736666; cv=fail; b=DYFDenFE3puw3cX3pRj+RczlkH2zXJ3Pjy9pi2XHotdYjC9mI/FECZcx85zNvSnuDnOCKhR9kg6HaQz9OWtzHhRYF2CgyZl7PhmgoWMwfiZjufYqzJQZQFoPWzfZeGnL79lcvlQvsoCMe+QkOwAFP/ox6rx/spHvapLhsNq9I1o=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738736666; c=relaxed/simple;
	bh=eCZ6xyxYxPundi7zrobw5X4bCKqDdbpojnyb7WsT53I=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=LhfILLatlPf2UVL7UChVGIql1ZPMhrh4UDrpUeSbJvpv13w/uB/AvYvWAOrOOm8b9vs1P7qIv2fP/GEemoe4Pax0NkS4K77qXvokKpqFFRbLdwsW22HtjcTeNRNu/paOvAyvj2KYiKeKozn8PwGiHCyrW2CBdx9wHaLUIoepGc8=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=Jb0jJuap; arc=fail smtp.client-ip=40.107.96.83
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="Jb0jJuap"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=MrVSriJOHH2ZkeUaA/vYy5zSnnqq+JYh3RJu1oLEGs5IW2ogKAVl70GgXpCkVnFIJpgklGcaJ/TUYVWjYvi6PU02TPlpNm87qxt2FLIqFGMUZJZbZiorH3I6e7mtRuYFqyBKcV4W+qHxzQ2VaXho87hkhCrj2GMjg9xDfW0kN5gA2nheeu+iXf5e0/HGT+hWWMuLa/R0iAcqCMx1mW0KbCRVuO2erfbKzy5B+tywSjRGfQOPUryfj3P5I7Z+tzo8PySOVdXsj/pbBTFbgP4ZPIrKWuUlQDqbEB1PV+Sd1fR7IJa5SELv0+DFZ3M3AZbwzJjPClh5Q1bum5semKipLw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=P3E2HEYPGTxZlN0XoIWltePQt/XHuTqrjM9TyenT6q0=;
 b=Du2DTPvLM6lT9qE6r9LEPwXfrFXHDfEWs6DY2TzI4z612+Ujbtogu+lm7AOq4qIzrW4o/JAyT7Q85ox2TEunOB9g389g+unYEw1V6AzMab7tRuE8leVGUWgfqjsH2/NUy4IRB43CqiC5VPobRGkLJEXizDdi9odiHphCVsdkQV4YnglcharelTtRKgKedG0n7R6KyEV4Sdm/OXQVrIWvRKS1Njl4evXxypSQMYrIZPhmV02ft5GpmjYgli/YlwwlBrhYjXAeMA4t6UImd3nmL1hwklGjbJe5h8+HO7t8cVuxaqxxoYzlqQo/7HZGskEtsTPP9tWR28jTkvNyxI99IA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=P3E2HEYPGTxZlN0XoIWltePQt/XHuTqrjM9TyenT6q0=;
 b=Jb0jJuapI5E/0ciMxeri8a72fIelox3Zpophh98K7DSBVnbsLwUoyEyxsQWkePMBjn/Fl/XRUHpc5A/BM/o5dmekq1FxcljmeRgtiGjS9YVq0FnbS3P13tfG86BfyNH8hSLJiDNDJym8TPKIJIfu7nY84PY7kf6nt//lVM2sUO8=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from IA1PR12MB6434.namprd12.prod.outlook.com (2603:10b6:208:3ae::10)
 by BL3PR12MB6594.namprd12.prod.outlook.com (2603:10b6:208:38d::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8422.11; Wed, 5 Feb
 2025 06:24:21 +0000
Received: from IA1PR12MB6434.namprd12.prod.outlook.com
 ([fe80::dbf7:e40c:4ae9:8134]) by IA1PR12MB6434.namprd12.prod.outlook.com
 ([fe80::dbf7:e40c:4ae9:8134%7]) with mapi id 15.20.8398.025; Wed, 5 Feb 2025
 06:24:21 +0000
Message-ID: <de31971e-98fc-4baf-8f4f-09d153902e2e@amd.com>
Date: Wed, 5 Feb 2025 11:54:05 +0530
User-Agent: Mozilla Thunderbird
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature
 information - what info is actually wanted?
To: Jonathan Cameron <Jonathan.Cameron@huawei.com>,
 Raghavendra K T <raghavendra.kt@amd.com>
Cc: linux-mm@kvack.org, akpm@linux-foundation.org,
 lsf-pc@lists.linux-foundation.org, gourry@gourry.net, nehagholkar@meta.com,
 abhishekd@meta.com, ying.huang@linux.alibaba.com, nphamcs@gmail.com,
 hannes@cmpxchg.org, feng.tang@intel.com, kbusch@meta.com,
 Hasan.Maruf@amd.com, sj@kernel.org, david@redhat.com, willy@infradead.org,
 k.shutemov@gmail.com, mgorman@techsingularity.net, vbabka@suse.cz,
 hughd@google.com, rientjes@google.com, shy828301@gmail.com,
 liam.howlett@oracle.com, peterz@infradead.org, mingo@redhat.com,
 nadav.amit@gmail.com, shivankg@amd.com, ziy@nvidia.com, jhubbard@nvidia.com,
 AneeshKumar.KizhakeVeetil@arm.com, linux-kernel@vger.kernel.org,
 jon.grimm@amd.com, santosh.shukla@amd.com, Michael.Day@amd.com,
 riel@surriel.com, weixugc@google.com, leesuyeon0506@gmail.com,
 honggyu.kim@sk.com, leillc@google.com, kmanaouil.dev@gmail.com,
 rppt@kernel.org, dave.hansen@intel.com
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <20250131122803.000031aa@huawei.com> <20250131130901.00000dd1@huawei.com>
Content-Language: en-US
From: Bharata B Rao <bharata@amd.com>
In-Reply-To: <20250131130901.00000dd1@huawei.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: PN3PR01CA0031.INDPRD01.PROD.OUTLOOK.COM
 (2603:1096:c01:97::20) To IA1PR12MB6434.namprd12.prod.outlook.com
 (2603:10b6:208:3ae::10)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: IA1PR12MB6434:EE_|BL3PR12MB6594:EE_
X-MS-Office365-Filtering-Correlation-Id: 3a8a1822-eda7-4f30-43b5-08dd45adb9e1
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|366016|1800799024|7416014|376014|7053199007;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?VGNKVWZ2V0JsTUgvWFk0SjZlVVdsYVZyY2NmSEgvUDU1MVVENzdsTmpEK3k0?=
 =?utf-8?B?amdxb25LekJ2c1Q2M2NIc1VLN3FLUUxKa3l2UzlWdmJCZ1Z3RVc0VDE0STVC?=
 =?utf-8?B?cUhZcTQ3S3Z2SHRMTGJLRXdGM20zMUVUNU92SCtQTlVnSVRER1Z0cjNuWklK?=
 =?utf-8?B?WG5OcGpGdHpTYTFGU3ZlZXdXU00vUytKdExHZTdKVi8vVE1XMTJsQ0M2dmdE?=
 =?utf-8?B?NWc5ZG1uQXVuNnFYVnowVS8vWFpiWGxscHEydWhIVWpSNW84Wnl0UStneTlo?=
 =?utf-8?B?OXh3VmZUVFNJMklITitzVEhLeUFrL1BXbHdURmpaWjdBamVxSCtxcHpkdlls?=
 =?utf-8?B?MEVRWUFOMVhlUncyOVhxMWNmR0NxSTdEaFZFb3pHUzVqb2h4RXltSHIya1I2?=
 =?utf-8?B?Q2ZPZTdPOUdWSkVWRnczOGNWa3ZLYWVUNlNSdEpZNDVUQU5vdDBNY3V0WmtS?=
 =?utf-8?B?NVBSNzJSVmg5b1NSbW5QdlNlSDhycVU2RlZBdkJmZ1N3d0o3dDF4SCtGNm9z?=
 =?utf-8?B?enpsN1pWTk8rOWg5YW9HaHlkOUl3TVBQcldGWDNGMlRuU0xBbzFiajJBQW5Y?=
 =?utf-8?B?R2REdGd6MVMzYkJkZFhPRnRpckk0UEpTOGIyQnp6OGlBd0xtc2F6endtY3B0?=
 =?utf-8?B?Z0RqRzd1UHdJQWFBYjFTTER4ejhsd3lwWXNhbGF4czRjTjN1SXArL2kya092?=
 =?utf-8?B?anM4c1ZWZmlObk5BVXl5eHBTcGE1bGQ0b2lUditQOW1CdXdtclZhZ2I2L1RR?=
 =?utf-8?B?VndDUlR6Z3dIL1FsTlBkcW0yQXVKTUxXN0JxWTQzWWVBZ2Fib1F3bzV2cmpL?=
 =?utf-8?B?SkRDZkZScUhrcTJTQnNrTjdCNVlNQ05yNk5zZ2IzWEQvT0Q2UVVuL2VmMGs0?=
 =?utf-8?B?UC9DSEI0TDlBMkhGU3FCYW4zUDc5RGpmUU1KV0FFZlozd1hxT1E0OER0SS9S?=
 =?utf-8?B?YThvMkJPemZQbXE0YTFQcERPM3pzNnhFSnRDckVUWTdvMDRySUlsNitOc2p5?=
 =?utf-8?B?REdsRHBiczU0NmlRWjU0OWhVQ1VEK0tmV25sbllnRWtFRFZVYWtGOWd3cFJO?=
 =?utf-8?B?azRrRkhUMDdUUitIaGtjOHFzb1kyd1UxZ1lYQjNIMmNaMTdybSthNmJocjhE?=
 =?utf-8?B?U2M2VkZqSFJEays5OGp4TlZ0RE9XdUZkdTExc1RGaFJqbW1oaXg3NkZza0dy?=
 =?utf-8?B?TTgvMmFtbWJrTjQ4NG9JTDFJZG1KYWpYdjBScG1EMzljOXpvY2wzbDlkaWJr?=
 =?utf-8?B?Nkt4WG1JUFdXb2RmSGZSNUlWVElEdVN3QWFFZjRqZjhrZnRUaS9GZmgyR3hS?=
 =?utf-8?B?WVhDanl4U2RFTGRrNHJ0NWdzaFFPOHpaazlHK25HNFpUKzh3ZmdramtQdm1x?=
 =?utf-8?B?UW1MWjdGa2JuaVhRSEhSQzRFSG9SYzNWZUVEd1FVajZEa2NzV3NmaGlpNDli?=
 =?utf-8?B?c1F1ZG5zU005d2wwRXNiY1BGYXRSOHByYVF1Sk9VYm11ZS9CdVZDamd5dGc2?=
 =?utf-8?B?ZWpPelZOZEtoY2ZjaU91ZU8wdldhSy92M3U4UklSVVQ1eWlneFJNQkRzZ1JQ?=
 =?utf-8?B?RXFMdmZtQUxtSmxjeWhJTldQZkdsOEpzSERCWGw2Z1FSaGRsZDhrajhrcU0v?=
 =?utf-8?B?dlJHeEtRUHBtajZZcW9mSTlXM0JNQzJvZ01RaVIwd1lBQmhlWWdOVzRsY210?=
 =?utf-8?B?RkMwd1N0Z2VsVDNVaXdVVTZyZUt2N21ySGIxWCswRkxEdUNxTmFNNTExKytz?=
 =?utf-8?B?ZXM2Sk1ZRE5JZld4QkFhZmFCaGFNamIrY29JaGIycFlLRjJPa3dBby8wSklj?=
 =?utf-8?B?WE9SZis2SXdhOGxxTUFDbHpPTEZiUDdBZlZOS1lwLzFvbkhOeVkyTFR5a1Q5?=
 =?utf-8?Q?FuNWgahff4fl/?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:IA1PR12MB6434.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(366016)(1800799024)(7416014)(376014)(7053199007);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?aktHVFNnSTdzbDJaMGpRU2FFWnZPMVpnSG8xQUt1OFFiT3dUalZ1MHZUSzdo?=
 =?utf-8?B?aTZlT0p3MDB4QzFINURkQkRIalpwc25OOCtUaUhYd3p2aTYyRm1vMWo3ekNV?=
 =?utf-8?B?cEVNeFN0MW9vbHdyTDlwYWV0SUxvbXg3aUkyOVlEZ2UzaTBYVWF3S0N3L0Y4?=
 =?utf-8?B?ZWJCVUF2NERxNlNBdjBKNjAyWitiR29aRW1YUzVxRXhWQ0w1M0w2N3BldnZG?=
 =?utf-8?B?d1hVYktCV0E4MEVZZ242eFZ0cnd3b25aZkhCUVFnOExKTlFCaW1hTUpxeVIr?=
 =?utf-8?B?UlRKUHkrMEZKY1pVMzRxVE5mUW5lalhrcHpLSkk2UER3ZE9QTU1vL0JicVc5?=
 =?utf-8?B?Nm5BL1ZBMXdQU28ySzBkbkxDWnFtRm9YT2tWY0sxUEpsM3JGdWN5RTFUZjFC?=
 =?utf-8?B?eGM1dGl2a0g2L2ZzdGxCOGJaZ3B2RHdoQzlIQUVYZVAreUIyTTV0WGNaQTIr?=
 =?utf-8?B?Zm1QVTZDWkhOakg3ZUtIUXo4dXdNNEp5ZEF5K09vdTRJV2FNWm5SR2tXL2Vh?=
 =?utf-8?B?bkpFVWlldWlzTW93enVTSWtIKzlNdGNQZExiQWpFN2JoK2c5Tk9PZE5Nd1R6?=
 =?utf-8?B?am42N0xIbjd4OTNnbFJueHllaDk1YnFIeEZ5aHNORHdWQlhLZmFENnkwNFli?=
 =?utf-8?B?TkQ0aGlsZkNaclBmTDVtSHNTUU53MEVUMmdjZzh2aWNnRHJyeUpCWWdScUo4?=
 =?utf-8?B?ZDQvanVON0h3ZU5sOEhJVDYzZW5kK2xuK21DM2wraDQvTEo2dUJ2ck4vanpa?=
 =?utf-8?B?VVExeVJQZlpKRnNyTnpGd2FYdjJCc0RYVVJsVWF0UzV2SUY5QkRWMFFqZnB2?=
 =?utf-8?B?RjF1cjNFZ2NuVmQ4R2J2czNIa1dycEo4UE5HcUM1ZlZMdk1zZEh5eTYyTlYx?=
 =?utf-8?B?UnM2T0YrMnpxQ0p5eTRtZGR2dzloOTg0MmZVUnFtN01hWHEzQTFmZCswdkNm?=
 =?utf-8?B?ZnFvdmF5cDhiTlg4M3pPSmZTYjltMVo1dmZCQkR3T1RRdE1Vb3JjTHdCTTVS?=
 =?utf-8?B?RmdIYUtWSkZnL2hGeHNHdUxkTml4TEh3NHE3NUhtbGhRUkxnWkFBSzR0WVVE?=
 =?utf-8?B?YkplK1JHa21WdExqNTgwVDhEdTJZdFVSMW45Zzd5QXdoNll5WHd5Q2tqT1V6?=
 =?utf-8?B?M0RCRzE3UHRPUncxelZOckYwVkFPYXFJNGt5Ui9QcUJTWmJBYzJnK3ptMG02?=
 =?utf-8?B?Szg5b2ovUHdoRWM5Mlc1MXBnRno3L0NtUFlyeXpIcjdJMU5uOVMwcCtEYXdG?=
 =?utf-8?B?NVplU0RtL0dRa0wwaGQ3Skxud3hQWmlsVnRvb0JwUmo0a1l6bXdoMGpsRERE?=
 =?utf-8?B?MHBab1ZjY3lJRVN5NEYreXM1SG1jRW54OTg4dXBWZlZzZkpGNUdDWUFWRk5J?=
 =?utf-8?B?U2hMYUVRRm9uMEVsY1lpWjh4c3pKZWtyMVNES2lYdFpPTjM4U2h1SW10ZXZR?=
 =?utf-8?B?UCtaQUpmbDNrMmtDUTF6MEM4akpza2E4UDU0d1lTRGd6RU12VURNVTQ3aWd1?=
 =?utf-8?B?a1ZQUTVOTDZNVWVDSlRGTHpsU3BLSGdVSVRZTWNuQkJyMXdlMzBqcWt2QVBW?=
 =?utf-8?B?SURKL2ZIdFk5d1VaRGdSZEtHM1VLZktaUkxrWjdDN21Ed2o3VUxPdU5zVTQy?=
 =?utf-8?B?VEJiZERZMFRJNnZTcUNDdFRRRENmSTJXYUdDSUFYaUF3WWoweGI0T1QvM1Jx?=
 =?utf-8?B?TGNndEw0d0NTMTlNMW4vc2d0ME9LNUMvL0ZYWDVwbWJGU2pQYkl6ZmlwZ2sz?=
 =?utf-8?B?QWZrWmJyaC9tZVVoOUUzS21VNFVuRW9XaXFhQjFwdXBBV3VGWXFyL2diUUpT?=
 =?utf-8?B?WGF6REEzYSt6V2piLzBFcDIxY1J4T0RZWFdiaDN6VStpWkJuZ0ZoRDc4SWFY?=
 =?utf-8?B?aWloWTNpK2h1WjNWQzNtUHh5Mk9LZEhjbmdlaktzNEQxVFJSc1pDWU9yelZv?=
 =?utf-8?B?MmgxVm1RWTdiem5zdi9PZjdUZkZ0NEhyQXBIMkJERmI4WFRjS3NpUVVYNm5o?=
 =?utf-8?B?V0p4ckErNlV3dkJsUXowbStoZlFSOElyaks2Y2tlelFLMUxnNmZmOVh5UXox?=
 =?utf-8?B?VXp6VGpYWThLRk1EdTdtZzhGNFZ4dUwvZTFMbjRzWlowd1dzOW9jWG15T1hk?=
 =?utf-8?Q?g9m2VCc40KuQLSSmViZwyUz5+?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 3a8a1822-eda7-4f30-43b5-08dd45adb9e1
X-MS-Exchange-CrossTenant-AuthSource: IA1PR12MB6434.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 05 Feb 2025 06:24:20.9848
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: AJ1f+Lkg/vY6iVxG+dSMKqHz5l+ek89tdMEsIZlCpPsgwUBkK6m6uW619M8OgoN9LyhNC/9qJQDm/7wpJTnGDw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BL3PR12MB6594

On 31-Jan-25 6:39 PM, Jonathan Cameron wrote:
> On Fri, 31 Jan 2025 12:28:03 +0000
> Jonathan Cameron <Jonathan.Cameron@huawei.com> wrote:
> 
>>> Here is the list of potential discussion points:
>> ...
>>
>>> 2. Possibility of maintaining single source of truth for page hotness that would
>>> maintain hot page information from multiple sources and let other sub-systems
>>> use that info.
>> Hi,
>>
>> I was thinking of proposing a separate topic on a single source of hotness,
>> but this question covers it so I'll add some thoughts here instead.
>> I think we are very early, but sharing some experience and thoughts in a
>> session may be useful.
> 
> Thinking more on this over lunch, I think it is worth calling this out as a
> potential session topic in it's own right rather than trying to find
> time within other sessions.  Hence the title change.
> 
> I think a session would start with a brief listing of the temperature sources
> we have and those on the horizon to motivate what we are unifying, then
> discussion to focus on need for such a unification + requirements
> (maybe with a straw man).

Here is a compilation of available temperature sources and how the 
hot/access data is consumed by different subsystems:

PA-Physical address available
VA-Virtual address available
AA-Access time available
NA-accessing Node info available

I have left the slot blank for those which I am not sure about.
==================================================
Temperature		PA	VA	AA	NA
source
==================================================
PROT_NONE faults	Y	Y	Y	Y
--------------------------------------------------
folio_mark_accessed()	Y		Y	Y
--------------------------------------------------
PTE A bit		Y	Y	N	N
--------------------------------------------------
Platform hints		Y	Y	Y	Y
(AMD IBS)
--------------------------------------------------
Device hints		Y
(CXL HMU)
==================================================

And here is an attempt to compile how different subsystems
use the above data:
==============================================================
Source			Subsystem		Consumption
==============================================================
PROT_NONE faults	NUMAB		NUMAB=1 locality based
via process pgtable			balancing
walk					NUMAB=2 hot page
					promotion
==============================================================
folio_mark_accessed()	FS/filemap/GUP	LRU list activation
==============================================================
PTE A bit via		Reclaim:LRU	LRU list activation,	
rmap walk				deactivation/demotion
==============================================================
PTE A bit via		Reclaim:MGLRU	LRU list activation,	
rmap walk and process			deactivation/demotion
pgtable walk
==============================================================
PTE A bit via		DAMON		LRU activation,
rmap walk				hot page promotion,
					demotion etc
==============================================================
Platform hints		NUMAB		NUMAB=1 Locality based
(AMD IBS)				balancing and
					NUMAB=2 hot page
					promotion
==============================================================
Device hints		NUMAB		NUMAB=2 hot page
					promotion
==============================================================
The last two are listed as possibilities.

Feel free to correct/clarify and add more.

Regards,
Bharata.






From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (mail-dm6nam12on2049.outbound.protection.outlook.com [40.107.243.49])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9E0F5158D8B
	for <linux-kernel@vger.kernel.org>; Mon, 27 Jan 2025 07:12:11 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.243.49
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737961933; cv=fail; b=uLF/c5DnMPHb4oE2q04jmqt19EBfE+bXkMCxrWObYgkVH1kqOXrH4x/zObdaNnH40HfzmHGP2wBTKuND9l3OglHyllQYjfUoG7FBf6t++6NH+d9oOOY8qTO90B2zna7VWVn7Eq/6akx/0U2Ol2lWacpa985g94Etcerci6dTVZQ=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737961933; c=relaxed/simple;
	bh=h/uqoaBRoKwPNep/BU3v9R7POts8dDkHLH+1t8gMyZM=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=RWwP/oiv4+HNCqxqZoKWLtOCcN3tt63a9yfzCOOyQVkohmo/PnRf9WXvm7X6N0FvYd0wjD5axXQ5Y99vdKmkz554+ZoSTzaAkMC9Zx/t5beHD9V4iWvqP7e2AqumC7dtLFTk5827mX8ePMFmH0TfXcTAaHHz82UskhUjho05X0g=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=DVyNuKSl; arc=fail smtp.client-ip=40.107.243.49
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="DVyNuKSl"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=g2DYe9oQTtRGLGuboqUHj9Q+PoCPJtnbXHBSOPgVJFTvR0CmRV39QwdE7ijgiw9ts5ryB/tWpD+LptC13vhd+vWZdYFeZmpht+YrtKKZzLcoqAP+XCUykom2tNkMNVPmH/LQBoCqdzAvsBYNhfqunejgLuPizd1EwKiYLvinmdA/UohaQQXsenNwUxGzOtmyADKjlFtcWP3fSKxSL+G2MjazFQSt45hcOnQVXI6d5wXVqI6DTuY/s+wDZopcwODKoPanyLSqSEO8LY24Oy+w4Ch4rjWxLegNmOlN0HLORTQcN3wUgfrNgtxuYoh9tpEh1W9O3PzLGMfC1OU5ZOACgw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=OAWQVYYzp8X8D0vOt0f82PzfAkLA8K7PqBqAAsWm6Vc=;
 b=F2xoaq0g/1qpRrBqkE2mIKXkSFO+xuVRpTVa+pv8+AK712XfAvu6lkxNsWhVp7YUKvX8qx6Z4aRfQhfS6nyukcf0hBdHkOiaTgDy0fbhCwisUvfK5WpiOy+AQ9jp3GAt+5JUwPYv/IT4671NlBtF5uslNk9UHKyQKKgY+IWa5i0G0a++Y47ByPqYw0jA09M1w7bFkty2crC5/stm5Aw1bGV6NtHmfakqgmwogVucKpEqOIIDh0Ee7yRV83BYBHbEO6T3V6kWt9/UUIqYk65grQtqeMo2plbt5bWgTq7926QWse3Ie+mclHu0t+2bRzcO8yUW72vCzvCw0paefW2Mfg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=OAWQVYYzp8X8D0vOt0f82PzfAkLA8K7PqBqAAsWm6Vc=;
 b=DVyNuKSlL4wkaZBcgyoHbiLNwEutujUGc/uwNEG6GypFBbiXEJwkxntmuQXan9TsuTZpIcw3iQHpcDxEb1P47eMyu2kU9R//x7wSM8v1A9zw/PI1zGvZ9/myATGkSRwYGYY4bW78H8WKgtkiuTxpZuFVIOvq+kPseZVNESM4F9I=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from PH7PR12MB5805.namprd12.prod.outlook.com (2603:10b6:510:1d1::13)
 by PH7PR12MB8177.namprd12.prod.outlook.com (2603:10b6:510:2b4::8) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8377.22; Mon, 27 Jan
 2025 07:12:09 +0000
Received: from PH7PR12MB5805.namprd12.prod.outlook.com
 ([fe80::11c7:4914:62f4:f4a3]) by PH7PR12MB5805.namprd12.prod.outlook.com
 ([fe80::11c7:4914:62f4:f4a3%6]) with mapi id 15.20.8377.021; Mon, 27 Jan 2025
 07:12:08 +0000
Message-ID: <a4595e44-bf57-4e6e-8e43-a502381707a5@amd.com>
Date: Mon, 27 Jan 2025 12:41:49 +0530
User-Agent: Mozilla Thunderbird
Subject: Re: [LSF/MM/BPF TOPIC] Overhauling hot page detection and promotion
 based on PTE A bit scanning
To: David Rientjes <rientjes@google.com>
Cc: Hyeonggon Yoo <hyeonggon.yoo@sk.com>,
 "linux-mm@kvack.org" <linux-mm@kvack.org>,
 "akpm@linux-foundation.org" <akpm@linux-foundation.org>,
 "lsf-pc@lists.linux-foundation.org" <lsf-pc@lists.linux-foundation.org>,
 "bharata@amd.com" <bharata@amd.com>, kernel_team@skhynix.com,
 42.hyeyoo@gmail.com, "gourry@gourry.net" <gourry@gourry.net>,
 "nehagholkar@meta.com" <nehagholkar@meta.com>,
 "abhishekd@meta.com" <abhishekd@meta.com>,
 "ying.huang@linux.alibaba.com" <ying.huang@linux.alibaba.com>,
 "nphamcs@gmail.com" <nphamcs@gmail.com>,
 "hannes@cmpxchg.org" <hannes@cmpxchg.org>,
 "feng.tang@intel.com" <feng.tang@intel.com>,
 "kbusch@meta.com" <kbusch@meta.com>,
 "Hasan.Maruf@amd.com" <Hasan.Maruf@amd.com>, "sj@kernel.org"
 <sj@kernel.org>, "david@redhat.com" <david@redhat.com>,
 "willy@infradead.org" <willy@infradead.org>,
 "k.shutemov@gmail.com" <k.shutemov@gmail.com>,
 "mgorman@techsingularity.net" <mgorman@techsingularity.net>,
 "vbabka@suse.cz" <vbabka@suse.cz>, "hughd@google.com" <hughd@google.com>,
 "shy828301@gmail.com" <shy828301@gmail.com>,
 "liam.howlett@oracle.com" <liam.howlett@oracle.com>,
 "peterz@infradead.org" <peterz@infradead.org>,
 "mingo@redhat.com" <mingo@redhat.com>,
 "nadav.amit@gmail.com" <nadav.amit@gmail.com>,
 "shivankg@amd.com" <shivankg@amd.com>, "ziy@nvidia.com" <ziy@nvidia.com>,
 "jhubbard@nvidia.com" <jhubbard@nvidia.com>,
 "AneeshKumar.KizhakeVeetil@arm.com" <AneeshKumar.KizhakeVeetil@arm.com>,
 "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
 "jon.grimm@amd.com" <jon.grimm@amd.com>,
 "santosh.shukla@amd.com" <santosh.shukla@amd.com>,
 "Michael.Day@amd.com" <Michael.Day@amd.com>,
 "riel@surriel.com" <riel@surriel.com>,
 "weixugc@google.com" <weixugc@google.com>,
 "leesuyeon0506@gmail.com" <leesuyeon0506@gmail.com>, honggyu.kim@sk.com,
 "leillc@google.com" <leillc@google.com>,
 "kmanaouil.dev@gmail.com" <kmanaouil.dev@gmail.com>,
 "rppt@kernel.org" <rppt@kernel.org>,
 "dave.hansen@intel.com" <dave.hansen@intel.com>, yuanchu@google.com
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <0a9914f8-bec7-4e58-ab12-a87fe3876187@sk.com>
 <0571919b-52e1-4981-8d34-bcc781c0561a@amd.com>
 <4c805e3c-4d5d-6880-7e65-cce1041f7d35@google.com>
Content-Language: en-US
From: Raghavendra K T <raghavendra.kt@amd.com>
In-Reply-To: <4c805e3c-4d5d-6880-7e65-cce1041f7d35@google.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: PN3PR01CA0062.INDPRD01.PROD.OUTLOOK.COM
 (2603:1096:c01:99::11) To PH7PR12MB5805.namprd12.prod.outlook.com
 (2603:10b6:510:1d1::13)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH7PR12MB5805:EE_|PH7PR12MB8177:EE_
X-MS-Office365-Filtering-Correlation-Id: 3b080682-0a97-4713-73c0-08dd3ea1e910
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|7416014|376014|1800799024|366016;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?Q1dmQ0FUY0hSazVlWEZuTVNjS2t6TEtUVTN4UllzT0UxZURhTDI5T052VUFn?=
 =?utf-8?B?RDVoNHNkUlZRdmt1bXp2RE4yVTd1QlRRVm5PWHJ6WHQvT3JLQ1p3ZHNlSU8v?=
 =?utf-8?B?TUVEMU43VEtqNldNN0NONFM2bEZzd3pJQ21xMFk2ZmlrczBPWGExc0NmMjF6?=
 =?utf-8?B?NUJyUWdTTUhxeGRWUS9iT3Z4SVB1N1Joc25makZRUzg4M21vY1QydmJaZ2pE?=
 =?utf-8?B?UEdPTlJENko5MTUxMk12djcxeXdJellPVUExaUI1cXlsVldLWEJUUVJCMU00?=
 =?utf-8?B?M1VUbkxLMDQ5QTBFS2RUUHg1UEtIMzFjOWs0eGdJS3lVb3d3QzNMQnpjY0NE?=
 =?utf-8?B?MmVhZXFkZ2luY2ZlOStCSS9SUzhYU2MvZFZ3cmtMN2FqMU5TQ0Y0TFVtbFo4?=
 =?utf-8?B?ajFMb2NLa1c5WkRIWTFYK1gxOFJVbTR6bmVYcSs2alNXS0lJQ1I2b0NtbDVr?=
 =?utf-8?B?bFFyVFBJL0tnYmZ1ZXNPQWFrTkZNbGJqVDRZR3p2MTRtWEpHY20xYnA1cGlC?=
 =?utf-8?B?R1oxcjFkNjE1TkdId1hPbkhvdlhQTURnQ1NRVXd2ZVdsVXJGSVFwTTA0R2hR?=
 =?utf-8?B?aVJQSmpaV3N1bXZxMXFhc1UvU2RLczY4SnRTa2U5RGZvbkVwKzN3VFRObUdY?=
 =?utf-8?B?OE5iMFN5STRlM244WDFJQTF5L25TZEs3RFh5bUVjSTBOVVF1Wk9DTXE5ajFR?=
 =?utf-8?B?VlZic084bHpqNnVPREhNWklpUk5keVdMMU1zUHlEdzMxbkhVNnlrcTJKekRM?=
 =?utf-8?B?R3lVVEhtMVJJTWFrOVJtRE5lU2Q3TzZ3dXR2UFV4aEhQd1NZN2pQTytQcUhZ?=
 =?utf-8?B?cTFFZVFaazcvRjBoUWtlUkZKRU9DWmY3SWcrbWtzV24vNnArRDVLbDEzZWR5?=
 =?utf-8?B?OExLUjhFL29zUmdLT0ZsOGpDZG4wZThOZWV1blNXdjBtMDVJOW9vN1pLanVt?=
 =?utf-8?B?ZWhrNHc0VVoza2l4NTBaOEJONWp0YXR2NUcvWVRleEtJTFQwUW90UTkwQ01E?=
 =?utf-8?B?VkRXYjB5cURIL1h6anY0aXc5ZzZsZHpYaUlTdUR2QmVWa3EyekVSUVRwOW1o?=
 =?utf-8?B?bVdlbGJ4bDBwY1dXOTJ4QmcyR1BEdDA0NkRHR3dhZDBZaVpBSGJoTEpQSHdt?=
 =?utf-8?B?bk9UM3FWbVV2SFJYeHQxV21ncWV5UE00SzZtRi9VT3RWN2tyNUpnaXozR0h4?=
 =?utf-8?B?UTR0M1JIbDJRT0wxTldhSTNXcmhvYXAzamNNcW5wY3B1Z3JwN1VkS2xkV3R1?=
 =?utf-8?B?OUZCbGh5NjV1aU9FUnJKbFhhSFA2aXJjOHpqSlQ5RjVOWUZibWFOVHlxWU5J?=
 =?utf-8?B?WUZVenRremExODA0TGo3MEhrR01sbEtGWEs4SGZTUm9oZ1piM2F0bGNHc3kw?=
 =?utf-8?B?VEZ3QlAzbjVIOEJJZ05oTllPV2FuTkQ5KzZOQkU4SGFnTVV5QUVaUjZ6VjRs?=
 =?utf-8?B?WjRDVlB6elZKZXVSWFNBSTRiLzhsWStPUUdVL3ZTeEN3WWNCYmtWaXdKdTd2?=
 =?utf-8?B?c0VDMjJlN0NMTEplRHVOOEdmU0h4bElVQmY3TDJkSUFJZzl1Z3ZxNmJ6MjZR?=
 =?utf-8?B?TWRCYTJHVE1yc3FSYm0xdHlQUDA4cWpVUGZqSVE3TTZsWGpXdWYrYUliM0tK?=
 =?utf-8?B?ZndVZnVTVW9SdTN3ZUtSK2V1SzhLSmZVZDdjMDB5bVZtMngzUVpDcldGQ0hk?=
 =?utf-8?B?SHY4TVJ0Mi9hWm45NjBtUFZpVXBCTnc4TnVkclNXNWErS0NuTGlMUzhRUmVz?=
 =?utf-8?B?alZLUFZVdVZBdFphdnYreTdMd0pWNHdzSXZkK051NjliWnJkWnRmb2pMZmxu?=
 =?utf-8?B?enFxY0l4VVgzeDlvMWNHYUZDajhxbDhFQ0M5L3pNV1lDZ1NuK3hIenoxNEV3?=
 =?utf-8?Q?GNpqtuRhQsA7y?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH7PR12MB5805.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(7416014)(376014)(1800799024)(366016);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?NkVjZ3pReWU3MVhNM1hVSm5EdzlYdTJzemh1OWUrVkdIV0xUWlZSU1lMWENs?=
 =?utf-8?B?aEhKUjZOQU5IQmxjUXRPcWFyYnBSVlpwMmhONVFtamtNRk9TaFhRWVlaT0lB?=
 =?utf-8?B?K1NlTDZnYnczMHlJYi92UW9BY3NCSTlaSG15ZnV3MUtGc2Z3bko5NHdLU2Nx?=
 =?utf-8?B?a1RKUiszS2ZkYlhJOWx3VS9NMWdTWTI1alc5algxRStLVkdTMXZweUlsT0hk?=
 =?utf-8?B?WENzdm9LTVFlenZqZVZPVkFSNHRLaGdrNEdLajgwYm4xV3BwclFzR2gxUXhu?=
 =?utf-8?B?WDBBZ0szUnlpd0FxMzFOdFFrZWZwOVpzTkRvZDJWbnBkTXI0RlJ4d1JkRjNj?=
 =?utf-8?B?NlFleDZRNDdwcWZlN1JqYWdNTnZWbWlrRUg3S2llY0VpalZPc3gyUjIvaXJU?=
 =?utf-8?B?WUN0NVdyTDJBWlpreTFVOXFHNWs1d1FuL29QNEVlYzh6cUhaY2FBRlQrR3NL?=
 =?utf-8?B?SGlQUTNWRERjZGs1UXBpSG9BSkZjME9FbE80STZ5bzFGNnRORFY4dDJwb1lW?=
 =?utf-8?B?MS9Uek54dnRTcTRDb21rUTJuZGY5cERHS3M0aGVoR0lxeVdrZU03M2ZXQVNV?=
 =?utf-8?B?cE9qVEcwWUFQYWtnc3pZMTZGZlJXUGkzditZbkJQNS9mRHJRSWh0Rlc0ZTNQ?=
 =?utf-8?B?WlAvREFEN2Y4TFlFK2dLVzN2TU5kUCtOMnd1UTV3bzhXcGxIU3JMVjZRNTRS?=
 =?utf-8?B?S1Y1VDc1Q0RGREtBa3ZGYzlqUHdUVVJSNXBvZ0Y3ZHRJaXd4V0JQWmlnRDF4?=
 =?utf-8?B?dHZrbE4vOS9PU1B0TGhJa3RXYXo2UGdmSjRORThQYzJic21ISGdiOGI5UUQy?=
 =?utf-8?B?dDFaUUVyRUlSRWYyZFQ5bFlUQ1NpY3N5SUJULzJLeFRhNUppYlpBSGgxODF0?=
 =?utf-8?B?S0FET3BWbnQ4MGhiTVByRlh2VXVqdEo3RDhBM2o4Q2NhMzl1QnpIK08xOWVs?=
 =?utf-8?B?d1VKNFVPenVsTEtCZUJDbHM3QmpyMUFCNUtsMnhWRVJwRWhTakdONmxXMG5x?=
 =?utf-8?B?cXd1TXRqVndCMDdQa3Q3OGRpTWg1WStETWMyaVhQMk9GN2wyd3IvbmVxNG5k?=
 =?utf-8?B?aEd5YjNxeE9ZcldXbm9KREpIbzYrbmZmQ0tVa0VXL3M4dHo4NmRHaEpYdEtj?=
 =?utf-8?B?S3NVL2dDbDhZSFh6WFA2MWtnUkoxR2tCN3dyeUdLc2hBSVJjTmpQY3ZwaHgx?=
 =?utf-8?B?TUpkdzRDK3NxdFllWlRVbTJaL1d4SWU1ZkpzT0dFMlg0NkM2UDkyQkRPbS9J?=
 =?utf-8?B?QnBZTWVSMXR6S2FuZTlpS2FtODRyai8zdXRoZlZTbUJkVVhqczMxUVRvQ2dw?=
 =?utf-8?B?eVhOSjQ2akN1OUVZY1JIckhyb1loRFlNNVBZdGE5N3hiVHUxd0pXYmFHejNk?=
 =?utf-8?B?YkNpTStkbEVsWDB1ZFFkcVVIS1hpV0ZKZjZxMlQxZG1iczl4OXFpQ1cyb3oz?=
 =?utf-8?B?RFVVVFFKaDZIOVE0NW9oUlM3bGpuL2J0a2xacEYrMC8wbVg5WWxEbjFlcnMv?=
 =?utf-8?B?em1pdy8rdTZwT1ZHdWJNRjNXR1NERUFzVVBoMWowNTQ5ZzNWL0lQZTJRZjlI?=
 =?utf-8?B?anZnb3ZzSW4vdE5FNTdKeDVXclVuU2RwekdnYi91SjJVbHVHek4ybVNNbi9X?=
 =?utf-8?B?V05WVzJUc20xbXdCNFUzNnhlZUs1THlpRHM5dzl5MmdPOXBpbi9UMGtIOWRD?=
 =?utf-8?B?REtUcEFNaVFUTEVheHQ4cjhVY0JDWjNsY0EwRW03WjBNUGhOWHlMQUl2dVNi?=
 =?utf-8?B?QUpEWitkSE1uMTVuRmZ3ZDNmcGlIRkQreVNZZkJBalNvZDY3V2pyODZINGNh?=
 =?utf-8?B?WVl4RHMxY2JpdkhvdUF0dmlRMldTNk9lOFp3RGFYUnhuRWRMZDYxWE81TW5r?=
 =?utf-8?B?cTBMVmxnMXREQ251ZnhEbDJMK2czY1FEdy9KSTBzSy9YcVlncDlsaXV6b1ZS?=
 =?utf-8?B?ampQanQ4NWJHanVOMlBVNzlXT0NobEhUN254cVBnT1dBK3ZSblhQTVdiU1lz?=
 =?utf-8?B?N3VyRzBvR05FamY3NVJ6Y0t1VnpEcENtdkhYcWdaaEM0alNOMjRnSWZOYXpN?=
 =?utf-8?B?UEJKeElRdWxxTW9xOTllUFB4RWlHZ2ZUZ2sxbWxmVmk5R2tnakNwNkMycXZs?=
 =?utf-8?Q?aYmrJVCbhA+yCOj6J5e2oZKlx?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 3b080682-0a97-4713-73c0-08dd3ea1e910
X-MS-Exchange-CrossTenant-AuthSource: PH7PR12MB5805.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 27 Jan 2025 07:12:08.1497
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: gVP2yFp1KNlpRdUEVMGmbn1X3phpQdULl8VbfIviA/bYut6PJLp5A3+ix5QYyLk4SjU4zmEvjk+fd6WiZ7VRhw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH7PR12MB8177



On 1/27/2025 12:31 PM, David Rientjes wrote:
> On Fri, 24 Jan 2025, Raghavendra K T wrote:
[...]
> 
>>> By the way, do you have any reason why you'd prefer opt-in prctl
>>> over per-memcg control?
>>>
>>
>> opt-in prctl came in the MM alignment discussion, and have added that.
> 
> Are you planning on sending a refresh of that patch series? :)

Hello David,
Current plan is to send by next week.
(Because after measuring the per mm latency and overall latency to do
full scan, I was thinking to add parallel scanning in next version itself).

> 
>> per-memcg also definitely makes sense. I am not aware which is the most
>> used usecase. But adding provision for both with one having more
>> priority over other may be the way to go.
>>
> 
> I would suggest leveraging prctl() for this as opposed to memcg.  I think
> making this part of memcg is beyond the scope for what memcg is intended
> to do, limitation of memory resources, similar to the recent discussions
> on per-cgroup control for THP.
> 
> Additionally, the current memcg configuration of the system may also not
> be convenient for using for this purpose, especially if one process should
> be opted out in the memcg hierarchy.  Requiring users to change how their
> memcg is configured just to opt out would be rather unfortunate.
> 
>> Overall point here is to save time in unnecessary scanning.
>> will be adding prctl in the upcoming version to start with.
>>
> 
> Fully agreed.
> 
> Thanks very much for proposing this topic, Raghu, I think it will be very
> useful to discuss!  Looking forward to it!

Thank you.

- Raghu

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <owner-linux-mm@kvack.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from kanga.kvack.org (kanga.kvack.org [205.233.56.17])
	by smtp.lore.kernel.org (Postfix) with ESMTP id A6BCBC282EC
	for <linux-mm@archiver.kernel.org>; Mon, 17 Mar 2025 22:35:01 +0000 (UTC)
Received: by kanga.kvack.org (Postfix)
	id 0DA3D280002; Mon, 17 Mar 2025 18:34:59 -0400 (EDT)
Received: by kanga.kvack.org (Postfix, from userid 40)
	id 08A0D280001; Mon, 17 Mar 2025 18:34:59 -0400 (EDT)
X-Delivered-To: int-list-linux-mm@kvack.org
Received: by kanga.kvack.org (Postfix, from userid 63042)
	id E43C2280002; Mon, 17 Mar 2025 18:34:58 -0400 (EDT)
X-Delivered-To: linux-mm@kvack.org
Received: from relay.hostedemail.com (smtprelay0012.hostedemail.com [216.40.44.12])
	by kanga.kvack.org (Postfix) with ESMTP id C6C74280001
	for <linux-mm@kvack.org>; Mon, 17 Mar 2025 18:34:58 -0400 (EDT)
Received: from smtpin21.hostedemail.com (a10.router.float.18 [10.200.18.1])
	by unirelay09.hostedemail.com (Postfix) with ESMTP id 868AB802D1
	for <linux-mm@kvack.org>; Mon, 17 Mar 2025 22:35:00 +0000 (UTC)
X-FDA: 83232499560.21.93172CA
Received: from siberian.tulip.relay.mailchannels.net (siberian.tulip.relay.mailchannels.net [23.83.218.246])
	by imf01.hostedemail.com (Postfix) with ESMTP id 0F7FE40004
	for <linux-mm@kvack.org>; Mon, 17 Mar 2025 22:34:57 +0000 (UTC)
Authentication-Results: imf01.hostedemail.com;
	dkim=pass header.d=stgolabs.net header.s=dreamhost header.b=f1XJuASG;
	spf=pass (imf01.hostedemail.com: domain of dave@stgolabs.net designates 23.83.218.246 as permitted sender) smtp.mailfrom=dave@stgolabs.net;
	dmarc=none;
	arc=pass ("mailchannels.net:s=arc-2022:i=1")
ARC-Message-Signature: i=2; a=rsa-sha256; c=relaxed/relaxed; d=hostedemail.com;
	s=arc-20220608; t=1742250898;
	h=from:from:sender:reply-to:subject:subject:date:date:
	 message-id:message-id:to:to:cc:cc:mime-version:mime-version:
	 content-type:content-type:content-transfer-encoding:
	 in-reply-to:in-reply-to:references:references:dkim-signature;
	bh=fQZ8Peo0EcyLC8yIVFCFJCblTL90CxFK0J30iXAPUL8=;
	b=sD5gbR69xZFMZBTLb9wgj4fXCs/5cR8wR39t8MESyIC+CvovtWojYIwzdS817vaqUYLgRb
	hvy0KSQJhToeGbP1w0VzwlGsEAbFk8US0bX1krmK31nXs5CcGx0laiiZOXMqeyXEu2MK3o
	yUklP9TREKOsNIxQDnLORGS8n9dAinI=
ARC-Authentication-Results: i=2;
	imf01.hostedemail.com;
	dkim=pass header.d=stgolabs.net header.s=dreamhost header.b=f1XJuASG;
	spf=pass (imf01.hostedemail.com: domain of dave@stgolabs.net designates 23.83.218.246 as permitted sender) smtp.mailfrom=dave@stgolabs.net;
	dmarc=none;
	arc=pass ("mailchannels.net:s=arc-2022:i=1")
ARC-Seal: i=2; s=arc-20220608; d=hostedemail.com; t=1742250898; a=rsa-sha256;
	cv=pass;
	b=Sl+etevso7bf4c1d7s3fY7idIy/W/Uixya8wySV5K9pxTeyFbBVcOtN6+It0M3Mqyc4o1d
	DoDK0ucDDa1kxGNR5if8R9QJ0+/M04z878+A0lhQEMAEwasydDOSf8e/iaQ6+RXbXpv0Ox
	NoZ7tFSMc8zHuqWdnTicqLxFEH3tif4=
X-Sender-Id: dreamhost|x-authsender|dave@stgolabs.net
Received: from relay.mailchannels.net (localhost [127.0.0.1])
	by relay.mailchannels.net (Postfix) with ESMTP id 7975E1C4351;
	Mon, 17 Mar 2025 22:34:56 +0000 (UTC)
Received: from pdx1-sub0-mail-a234.dreamhost.com (trex-2.trex.outbound.svc.cluster.local [100.114.55.81])
	(Authenticated sender: dreamhost)
	by relay.mailchannels.net (Postfix) with ESMTPA id 8F1311C3867;
	Mon, 17 Mar 2025 22:34:55 +0000 (UTC)
ARC-Seal: i=1; s=arc-2022; d=mailchannels.net; t=1742250896; a=rsa-sha256;
	cv=none;
	b=FwS4d3DpFzvId2ULlZAt13jdOomXbSoVqgkSX0nJmX77SWFrIKn3clNtQtHmN01As6dj8o
	8fK9TuRS0/DmnhsIPpHDDCQLC/inis2OX3Q6gGV4h/D9l6FAgoyRjGCYOnDbvV6lvk0eFi
	tn0qymbjxL2CbSfL1ol9HWjLkQBQL4U81Pva70xO78N23gImS5u6MCJyJdiGWJV/CUKNC6
	G/yZj1nEyLb3tD/dBwwXjh0xxFgqcrjVHsePUl2JfKukRE3KB8ZBd/c4ZJWzPIIhJ+FMSG
	D6FPvayAxtHxoXwPFZmTNiY6cRroSJaI5K12zV3QZkCVld9OA+qQSAjoowRHrA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed;
 d=mailchannels.net;
	s=arc-2022; t=1742250896;
	h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
	 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
	 in-reply-to:in-reply-to:references:references:dkim-signature;
	bh=fQZ8Peo0EcyLC8yIVFCFJCblTL90CxFK0J30iXAPUL8=;
	b=5zrm9ICry2SzwKzkmn6k4LqYBbd4TtTQ4bqtLMXV87xg385a/WmabkfdVW3eN+ghgRL3mx
	YULtz5bPVGOPRoJxDgHvSDx67Wz7I/tnbgp/2cUp3gymeg+12ASu57ipQR8X3OjugBzxeC
	CGF9vq5c6HThqHVq7QyHs8CurzgwgRQMpNkA84y/sGKlbRoa36QEsN0rfCzSRMKpO2CIlP
	/joGrvvOq3LbKrnzmBEKuoJ+svtfXXhF1wNbsvwy0hXqkBKJaoa5o+Ve9ERIaoVMzPx2pS
	3u4OkxQqAZPvv/vy2ZaHkhe/cVaZwL/kx32UEspV0SRt7V9s2c/YxJEyEz0/VA==
ARC-Authentication-Results: i=1;
	rspamd-588454d544-jqzjf;
	auth=pass smtp.auth=dreamhost smtp.mailfrom=dave@stgolabs.net
X-Sender-Id: dreamhost|x-authsender|dave@stgolabs.net
X-MC-Relay: Neutral
X-MailChannels-SenderId: dreamhost|x-authsender|dave@stgolabs.net
X-MailChannels-Auth-Id: dreamhost
X-Invention-Fumbling: 2e88b8fa534c6be9_1742250896207_4080570025
X-MC-Loop-Signature: 1742250896206:2401649619
X-MC-Ingress-Time: 1742250896206
Received: from pdx1-sub0-mail-a234.dreamhost.com (pop.dreamhost.com
 [64.90.62.162])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384)
	by 100.114.55.81 (trex/7.0.2);
	Mon, 17 Mar 2025 22:34:56 +0000
Received: from offworld (unknown [104.36.25.240])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
	 key-exchange ECDHE (P-256) server-signature RSA-PSS (2048 bits) server-digest SHA256)
	(No client certificate requested)
	(Authenticated sender: dave@stgolabs.net)
	by pdx1-sub0-mail-a234.dreamhost.com (Postfix) with ESMTPSA id 4ZGqXs0qHTzGw;
	Mon, 17 Mar 2025 15:34:53 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=stgolabs.net;
	s=dreamhost; t=1742250895;
	bh=fQZ8Peo0EcyLC8yIVFCFJCblTL90CxFK0J30iXAPUL8=;
	h=Date:From:To:Cc:Subject:Content-Type;
	b=f1XJuASGUzTFAevRUSWZvyaBpiUcAMUfDbbsikEVAiW327O8IhtNlgoMWxY7We3UY
	 QsQdPKTM3TCb4tEiU3Oj92NXMdxa3BxrSbRmc6j9cX22eGGlXWrgaBKz/nKPvgztFA
	 5YL0fXIp45VLoyOicVkf27y1sTzW6qF5jfXiOzSaKB5Xh5f9F+JOE3EmBCBxZwU6ia
	 WtV7c1Yxeu+t/EFoKABfbGxz8KTDizT1Hd3+iKXa8r7BGMpvW2TXw0uxDmvmpe2dwG
	 qglE9jHfvhLW7AISaF32YRMe+Xwa+7nAn2DJdpSqCMTIV4CLIhXuhv1nB/LWwo+TKD
	 hH95iCe8QKl9Q==
Date: Mon, 17 Mar 2025 15:34:50 -0700
From: Davidlohr Bueso <dave@stgolabs.net>
To: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Cc: "Huang, Ying" <ying.huang@linux.alibaba.com>,
	Raghavendra K T <raghavendra.kt@amd.com>, linux-mm@kvack.org,
	akpm@linux-foundation.org, lsf-pc@lists.linux-foundation.org,
	bharata@amd.com, gourry@gourry.net, nehagholkar@meta.com,
	abhishekd@meta.com, nphamcs@gmail.com, hannes@cmpxchg.org,
	feng.tang@intel.com, kbusch@meta.com, Hasan.Maruf@amd.com,
	sj@kernel.org, david@redhat.com, willy@infradead.org,
	k.shutemov@gmail.com, mgorman@techsingularity.net, vbabka@suse.cz,
	hughd@google.com, rientjes@google.com, shy828301@gmail.com,
	liam.howlett@oracle.com, peterz@infradead.org, mingo@redhat.com,
	nadav.amit@gmail.com, shivankg@amd.com, ziy@nvidia.com,
	jhubbard@nvidia.com, AneeshKumar.KizhakeVeetil@arm.com,
	linux-kernel@vger.kernel.org, jon.grimm@amd.com,
	santosh.shukla@amd.com, Michael.Day@amd.com, riel@surriel.com,
	weixugc@google.com, leesuyeon0506@gmail.com, honggyu.kim@sk.com,
	leillc@google.com, kmanaouil.dev@gmail.com, rppt@kernel.org,
	dave.hansen@intel.com
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature
 information - what info is actually wanted?
Message-ID: <20250317223450.4j7xsnm46vtpo7xt@offworld>
Mail-Followup-To: Jonathan Cameron <Jonathan.Cameron@huawei.com>,
	"Huang, Ying" <ying.huang@linux.alibaba.com>,
	Raghavendra K T <raghavendra.kt@amd.com>, linux-mm@kvack.org,
	akpm@linux-foundation.org, lsf-pc@lists.linux-foundation.org,
	bharata@amd.com, gourry@gourry.net, nehagholkar@meta.com,
	abhishekd@meta.com, nphamcs@gmail.com, hannes@cmpxchg.org,
	feng.tang@intel.com, kbusch@meta.com, Hasan.Maruf@amd.com,
	sj@kernel.org, david@redhat.com, willy@infradead.org,
	k.shutemov@gmail.com, mgorman@techsingularity.net, vbabka@suse.cz,
	hughd@google.com, rientjes@google.com, shy828301@gmail.com,
	liam.howlett@oracle.com, peterz@infradead.org, mingo@redhat.com,
	nadav.amit@gmail.com, shivankg@amd.com, ziy@nvidia.com,
	jhubbard@nvidia.com, AneeshKumar.KizhakeVeetil@arm.com,
	linux-kernel@vger.kernel.org, jon.grimm@amd.com,
	santosh.shukla@amd.com, Michael.Day@amd.com, riel@surriel.com,
	weixugc@google.com, leesuyeon0506@gmail.com, honggyu.kim@sk.com,
	leillc@google.com, kmanaouil.dev@gmail.com, rppt@kernel.org,
	dave.hansen@intel.com
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
 <20250131122803.000031aa@huawei.com>
 <20250131130901.00000dd1@huawei.com>
 <87h64u2xkh.fsf@DESKTOP-5N7EMDA>
 <20250314142412.00001689@huawei.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
In-Reply-To: <20250314142412.00001689@huawei.com>
User-Agent: NeoMutt/20220429
X-Rspam-User: 
X-Rspamd-Server: rspam10
X-Rspamd-Queue-Id: 0F7FE40004
X-Stat-Signature: drqdnzg4qi5zaj854b313hs5iyw1og43
X-HE-Tag: 1742250897-691916
X-HE-Meta: U2FsdGVkX184l5U9hpiYsVubRGpks2VYasWad1pw5qHEz8bodpbBg7SgSoVQuq486G5qyMJIMdgYJL/NoMYGiI7ka+CJFzWwt+axXN3PBYCr3eeP3xp8wyXBzOl/2IB346XgXz4EgosFsZLi6aNhBQNPM3aXEPjbX+kJ1mWfec4X/JAH/6D12vu6O2EKmZKlUbcZkGTobnhwokLM/oTivaQ60/IGoKoewgVf+XxjzxEWxUTR7HtH/wrUhIvW5qVcMrUINwHRtv8LOXo9dYXhvas4W6wWGQP71M9pD2RYWDKd4sfoJQJKaoDka0J1aUXKPDZNJQJCS0WiKECb0xrJ1UnFG7m9zyq5OAaAQvkwHvKziaGNHV7NWWDMAhbHlFGpDuCA6AHNSyJrbDI+TeLjHl2K1T6a7xPmGDTjF3G4rJv+xd1v5qlZBUcjZU8n78w09Zy4zVZrEFhBf0OeBl62ObCsQf/qMXmGZ6tNLVi/DFN6rTSkHWHrMXNoXHQ4pLV0m4FZHBUoYNL87RNhQ4pJWLFXyLDBy9ZYhVqqLeJGipZwB+ob8h8+K59o9TFRDdFoXYqJxoOmDGriUsKomUrXUewqGN0lHGrSDHDkXko2YeiTTkhy4w6NK6218O/UY9y/Tf6Hi3lt2MKC9HwG7zNKaSD7DmK06X3S0dNZxpOR+62F1Z2hRxrFcc/YN47pR3Q5opajCxPNJcAyTsOSlXA4ygnHe8vAB44Jx3f/vQYCxjndSMB+5CvWjypwPxyaLyjIIexqcqPZF/46SV+Q6WAmL9RF/ETtrTXIWbvHKygvdQxZXAot/ZTp2QjS+oFii3tF2orbn6t42im65Vv/Rl76z5ppyj7AHrqSAi2mCaJy564wEkCIiRuOpsIccjF5WiZN2M/11argfYFyjtaqemB6lisBIwOSW14AaX5h3tfbtuxRGgca5V5ayPAt09CBz3FDUFQwkn2stU/Qvc4nZXd
 ip0FVVKG
 fGvumlA5UPv1CshUIWTs6+xS4mFfpQHradXeYTWCMtnqO6LKaNEgqBMt8VcUEEH5Rp3aLmN31V+WchDAbh9zHzoz1gVFt8nqwlm9fUG2Yv5xGQKKzHBTDxzKvIW0TDrS0LbBaE2oLhVOU/MCXW+3qOeWWTzomp2+B62Fsz7BA5D5eO+rsyL4kcezD9sPOFmPF5GXzvigxKBciyS8YOLdjRL+xBM3E1naXzDLHils0Qtq8MuQhJ541XBJCsOp4YiQUKThPEVFdoYgAMisHqr8jZOqVKzuXtujj5d3VJLKQS5zgh/P5KRv9E32U9uCtr39B0cgIMTECIlH2l5TJdJxLF7aq5qAlyTZwxOo2WfmMpu15vC0juj7cZVUlCtGcuLZJ6TCZX66xzLv93rzF8P1zJK5Zza0kB93ubYkCRrz206n3K9mjFPtp14gShg==
X-Bogosity: Ham, tests=bogofilter, spamicity=0.000000, version=1.2.4
Sender: owner-linux-mm@kvack.org
Precedence: bulk
X-Loop: owner-majordomo@kvack.org
List-ID: <linux-mm.kvack.org>
List-Subscribe: <mailto:majordomo@kvack.org>
List-Unsubscribe: <mailto:majordomo@kvack.org>

On Fri, 14 Mar 2025, Jonathan Cameron wrote:

>On Sun, 16 Feb 2025 14:49:50 +0800
>"Huang, Ying" <ying.huang@linux.alibaba.com> wrote:

>> Because the hot pages may be available upon page accessing (such PROT_NONE
>> page fault), the interface may be "push" style instead of "pull" style,
>> e.g.,
>

Right, I was also thinking along those lines. Hot pages could be fed right into
kpromoted (with the appropriate interface for 'phi' of course), then kicked to
do the migration. This already has the frequency, and the destination node so
no guessing as to where the page should be placed.

So this makes me wonder kmmscand vs NUMAB=2... should both co-exist? Doubling
the scanning overhead, so I think not (albeit non mapped page cache pages).
The original data from kmmscand is with a busted nid selection, but now Raghu
has a proposed some heuristics, so I am curious what kind of numbers come up
in terms of accuracy and performance vs a NUMAB=2 migration offload.

>Absolutely agree that might be the approach, but with some form of back pressure
>as for at least some approaches it is much cheaper to find a find a few hot
>pages than to find lots of them.  More complex if you want a few of the very hottest
>or just hotter than X.

Yeah, also cases like different CXL type3 devices with different access latencies
both saying here's what's hot.

Thanks,
Davidlohr


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from out30-119.freemail.mail.aliyun.com (out30-119.freemail.mail.aliyun.com [115.124.30.119])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id C057C18DB23
	for <linux-kernel@vger.kernel.org>; Mon, 17 Feb 2025 08:06:08 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=115.124.30.119
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1739779572; cv=none; b=pMp+4USt7Jm87TsivGHjOHR7F3YJAIOeRwoC2rtUemgcZ23c6MNfLN9PROupYNLLJ1PykcHlwiZ/5CTx5iwO15RivXXqIkKxVklooLzU2J5ABlhYtEXdWuKOtk35BP2YYDkOy2JdBiUIrSrM1O/0Xo6iNjllhCiWs1yLaL4GVBM=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1739779572; c=relaxed/simple;
	bh=vPMO9PqP4rX/Oy3q+jLqKiaClpW7niNkGlZcUNnvXRA=;
	h=From:To:Cc:Subject:In-Reply-To:References:Date:Message-ID:
	 MIME-Version:Content-Type; b=Uh8Oh0jCQNsAsBuLp6wXquxoUWIO9vbGWDLP91R7y/es2uaQ2TbUOQz15I5Wmb4waawvrTfiTxL4uGRrm5Timm71SSqgEACRdnVELtwQhEYZCjmDOwrbGRlOgmwoMryqElRCLIdwyx5WPGxEzUnnD32gzpV944avWEnEY3Hp4hk=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=linux.alibaba.com; spf=pass smtp.mailfrom=linux.alibaba.com; dkim=pass (1024-bit key) header.d=linux.alibaba.com header.i=@linux.alibaba.com header.b=wVRwTHu+; arc=none smtp.client-ip=115.124.30.119
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=linux.alibaba.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=linux.alibaba.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=linux.alibaba.com header.i=@linux.alibaba.com header.b="wVRwTHu+"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
	d=linux.alibaba.com; s=default;
	t=1739779566; h=From:To:Subject:Date:Message-ID:MIME-Version:Content-Type;
	bh=sfNxgtmB0/jz3pq8TzZXhfYQ6DAYL0BO+1v9NrYYgkg=;
	b=wVRwTHu+FRVv4H8nQQW7aCKdtvCw/flOnjuASjmdsixqLcUIi6Jl9gvAXx82tWNYM+Irj6nx99sgaa9CbshpWRi5KLm/gUBIikSQpUKwa5e4V1ZdBCXEbZP420CPQD+RuUZQCjLisqk7KxtJjL+pgSW9KFQkI97A1W1ozVK9NzM=
Received: from DESKTOP-5N7EMDA(mailfrom:ying.huang@linux.alibaba.com fp:SMTPD_---0WPc6v4i_1739779561 cluster:ay36)
          by smtp.aliyun-inc.com;
          Mon, 17 Feb 2025 16:06:03 +0800
From: "Huang, Ying" <ying.huang@linux.alibaba.com>
To: Bharata B Rao <bharata@amd.com>
Cc: Jonathan Cameron <Jonathan.Cameron@huawei.com>,  Raghavendra K T
 <raghavendra.kt@amd.com>,  linux-mm@kvack.org,  akpm@linux-foundation.org,
  lsf-pc@lists.linux-foundation.org,  gourry@gourry.net,
  nehagholkar@meta.com,  abhishekd@meta.com,  nphamcs@gmail.com,
  hannes@cmpxchg.org,  kbusch@meta.com,  Hasan.Maruf@amd.com,
  sj@kernel.org,  david@redhat.com,  willy@infradead.org,
  k.shutemov@gmail.com,  mgorman@techsingularity.net,  vbabka@suse.cz,
  hughd@google.com,  rientjes@google.com,  shy828301@gmail.com,
  liam.howlett@oracle.com,  peterz@infradead.org,  mingo@redhat.com,
  nadav.amit@gmail.com,  shivankg@amd.com,  ziy@nvidia.com,
  jhubbard@nvidia.com,  AneeshKumar.KizhakeVeetil@arm.com,
  linux-kernel@vger.kernel.org,  jon.grimm@amd.com,
  santosh.shukla@amd.com,  Michael.Day@amd.com,  riel@surriel.com,
  weixugc@google.com,  leesuyeon0506@gmail.com,  honggyu.kim@sk.com,
  leillc@google.com,  kmanaouil.dev@gmail.com,  rppt@kernel.org,
  dave.hansen@intel.com, feng.tang@linux.alibaba.com
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature
 information - what info is actually wanted?
In-Reply-To: <f091e09a-1f39-48ee-8968-8f616d8102a6@amd.com> (Bharata B. Rao's
	message of "Mon, 17 Feb 2025 09:40:36 +0530")
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
	<20250131122803.000031aa@huawei.com>
	<20250131130901.00000dd1@huawei.com> <87h64u2xkh.fsf@DESKTOP-5N7EMDA>
	<f091e09a-1f39-48ee-8968-8f616d8102a6@amd.com>
Date: Mon, 17 Feb 2025 16:06:01 +0800
Message-ID: <874j0t2dxy.fsf@DESKTOP-5N7EMDA>
User-Agent: Gnus/5.13 (Gnus v5.13)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ascii

Bharata B Rao <bharata@amd.com> writes:

> On 16-Feb-25 12:19 PM, Huang, Ying wrote:
>>>>
>>>> 1) Give me up to X hotish pages from a slow tier (greater than a specific measure
>>>> of temperature)
>> Because the hot pages may be available upon page accessing (such
>> PROT_NONE
>> page fault), the interface may be "push" style instead of "pull" style,
>> e.g.,
>> int register_hot_page_handler(void (*handler)(struct page *hot_page,
>> int temperature));
>
> Yes, push model appears natural to me given that there are producers
> who are themselves consumers as well.
>
> Let's take an example of access being detected by PTE scan by DAMON
> first and LRU and hot page promotion subsystems have registered
> handlers for hot page info.
>
> Now if hot page promotion handler gets called first and if it promotes
> the page, calling LRU registered handler still makes sense? May be not
> I suppose.
>
> On the other hand if LRU subsystem handler gets first and it
> adjusts/modifies the hot page's list, it would still make sense to
> activate the hot page promotion handler to check for possible
> promotion.
>
> Is this how you are envisioning the different consumers of hot page
> access info could work/cooperate?

Sorry, I have no idea about what is the right behavior now.  It appears
hard to coordinate different consumers.

In theory, we can promote the hottest pages while activate (in LRU
lists) the warm pages.

---
Best Regards,
Huang, Ying

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CA2431A317C
	for <linux-kernel@vger.kernel.org>; Thu,  6 Feb 2025 15:30:12 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738855816; cv=none; b=DGKrGT45TXJHrOIQa65I8oF5WImlShOEP+shHgQ82abci9p4RtXLuGzIkqaJRqKrBnJhJpu3lIO+9nikf2N1813eOzumuNfH6hE/YcMI0pJ9wvlQYYWn9+4eHlOJxwQmByMLMsrnI/BLslP5gqg1rTGbVz/1fRBtaVWK0iMJq24=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738855816; c=relaxed/simple;
	bh=oL/EN/nl6O958Rm22BmCrabMDXCT96uo90M+Q954Hgo=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=bIjRwpIrpClBMstDuGFWla5xHa1eWdNdy8mXl6CCGyPvGo7Tj7S171Mv6IaXIn0psYyJMxzD5vWkcAydEeRUvcg4zNpgWJHrjvf3veBYhDEX3R41+rVv4LYdffMpaq46gkPsm6xXa5sHYeKCEvQyLO0RpP1z5OWjSQ/XsMGCADI=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4Ypgvg6wwlz67TqW;
	Thu,  6 Feb 2025 23:27:27 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id D0E18140B38;
	Thu,  6 Feb 2025 23:30:09 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Thu, 6 Feb
 2025 16:30:08 +0100
Date: Thu, 6 Feb 2025 15:30:06 +0000
From: Jonathan Cameron <Jonathan.Cameron@huawei.com>
To: Johannes Weiner <hannes@cmpxchg.org>
CC: Bharata B Rao <bharata@amd.com>, Raghavendra K T <raghavendra.kt@amd.com>,
	<linux-mm@kvack.org>, <akpm@linux-foundation.org>,
	<lsf-pc@lists.linux-foundation.org>, <gourry@gourry.net>,
	<nehagholkar@meta.com>, <abhishekd@meta.com>, <ying.huang@linux.alibaba.com>,
	<nphamcs@gmail.com>, <feng.tang@intel.com>, <kbusch@meta.com>,
	<Hasan.Maruf@amd.com>, <sj@kernel.org>, <david@redhat.com>,
	<willy@infradead.org>, <k.shutemov@gmail.com>, <mgorman@techsingularity.net>,
	<vbabka@suse.cz>, <hughd@google.com>, <rientjes@google.com>,
	<shy828301@gmail.com>, <liam.howlett@oracle.com>, <peterz@infradead.org>,
	<mingo@redhat.com>, <nadav.amit@gmail.com>, <shivankg@amd.com>,
	<ziy@nvidia.com>, <jhubbard@nvidia.com>, <AneeshKumar.KizhakeVeetil@arm.com>,
	<linux-kernel@vger.kernel.org>, <jon.grimm@amd.com>,
	<santosh.shukla@amd.com>, <Michael.Day@amd.com>, <riel@surriel.com>,
	<weixugc@google.com>, <leesuyeon0506@gmail.com>, <honggyu.kim@sk.com>,
	<leillc@google.com>, <kmanaouil.dev@gmail.com>, <rppt@kernel.org>,
	<dave.hansen@intel.com>
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature
 information - what info is actually wanted?
Message-ID: <20250206153006.00003e0f@huawei.com>
In-Reply-To: <20250205160529.GB1183495@cmpxchg.org>
References: <20250123105721.424117-1-raghavendra.kt@amd.com>
	<20250131122803.000031aa@huawei.com>
	<20250131130901.00000dd1@huawei.com>
	<de31971e-98fc-4baf-8f4f-09d153902e2e@amd.com>
	<20250205160529.GB1183495@cmpxchg.org>
X-Mailer: Claws Mail 4.3.0 (GTK 3.24.42; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100011.china.huawei.com (7.191.174.247) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Wed, 5 Feb 2025 11:05:29 -0500
Johannes Weiner <hannes@cmpxchg.org> wrote:

> On Wed, Feb 05, 2025 at 11:54:05AM +0530, Bharata B Rao wrote:
> > On 31-Jan-25 6:39 PM, Jonathan Cameron wrote:  
> > > On Fri, 31 Jan 2025 12:28:03 +0000
> > > Jonathan Cameron <Jonathan.Cameron@huawei.com> wrote:
> > >   
> > >>> Here is the list of potential discussion points:  
> > >> ...
> > >>  
> > >>> 2. Possibility of maintaining single source of truth for page hotness that would
> > >>> maintain hot page information from multiple sources and let other sub-systems
> > >>> use that info.  
> > >> Hi,
> > >>
> > >> I was thinking of proposing a separate topic on a single source of hotness,
> > >> but this question covers it so I'll add some thoughts here instead.
> > >> I think we are very early, but sharing some experience and thoughts in a
> > >> session may be useful.  
> > > 
> > > Thinking more on this over lunch, I think it is worth calling this out as a
> > > potential session topic in it's own right rather than trying to find
> > > time within other sessions.  Hence the title change.
> > > 
> > > I think a session would start with a brief listing of the temperature sources
> > > we have and those on the horizon to motivate what we are unifying, then
> > > discussion to focus on need for such a unification + requirements
> > > (maybe with a straw man).  
> > 
> > Here is a compilation of available temperature sources and how the 
> > hot/access data is consumed by different subsystems:  
> 
> This is super useful, thanks for collecting this.

Absolutely agree!

> 
> > PA-Physical address available
> > VA-Virtual address available
> > AA-Access time available
> > NA-accessing Node info available
> > 
> > I have left the slot blank for those which I am not sure about.
> > ==================================================
> > Temperature		PA	VA	AA	NA
> > source
> > ==================================================
> > PROT_NONE faults	Y	Y	Y	Y
> > --------------------------------------------------
> > folio_mark_accessed()	Y		Y	Y
> > --------------------------------------------------  
> 
> For fma(), the VA info is available in unmap, but usually it isn't -
> or doesn't meaningfully exist, as in the case of unmapped buffered IO.
> 
> I'd say it's an N.
> 
> > PTE A bit		Y	Y	N	N
> > --------------------------------------------------
> > Platform hints		Y	Y	Y	Y
> > (AMD IBS)
> > --------------------------------------------------
> > Device hints		Y
> > (CXL HMU)
> > ==================================================  

For the use cases where we have relatively few 'pages' the cost of a reverse
map look up doesn't look to be a problem.  Trick is to do it
only after we've done what we can in PA space to cut down on the
pages of interest. So maybe (Y) to reflect that it is indirect.
Whether it makes sense to do that before or after some common
layer is an interesting question.  That PA/VA mapping might be
out of date anyway by the time we see the data.

> 
> For the following table, it might be useful to add *when* the source
> produces this information. Sampling frequency is a likely challenge:
> consumers have different requirements, and overhead should be limited
> to the minimum required to serve enabled consumers.
> 
> Here is an (incomplete) attempt - sorry about the long lines:
> 
> > And here is an attempt to compile how different subsystems
> > use the above data:
> > ==============================================================
> > Source			Subsystem		Consumption         Activation/Frequency
> > ==============================================================
> > PROT_NONE faults	NUMAB		NUMAB=1 locality based              While task is running,
> > via process pgtable			balancing                           rate varies on observed
> > walk					NUMAB=2 hot page                    locality and sysctl knobs.
> > 					promotion
> > ==============================================================
> > folio_mark_accessed()	FS/filemap/GUP	LRU list activation                 On cache access and unmap
> > ==============================================================
> > PTE A bit via		Reclaim:LRU	LRU list activation,	            During memory pressure
> > rmap walk				deactivation/demotion
> > ==============================================================
> > PTE A bit via		Reclaim:MGLRU	LRU list activation,	            - During memory pressure
> > rmap walk and process			deactivation/demotion               - Continuous sampling (configurable)
> > pgtable walk                                                                for workingset reporting
> > ==============================================================
> > PTE A bit via		DAMON		LRU activation,                     Continuous sampling (configurable)?
> > rmap walk				hot page promotion,                 (I believe SJ is looking into
> > 					demotion etc                         auto-tuning this).
> > ==============================================================
> > Platform hints		NUMAB		NUMAB=1 Locality based
> > (AMD IBS)				balancing and
> > 					NUMAB=2 hot page
> > 					promotion
> > ==============================================================
Based on the CXL one...

> > Device hints		NUMAB		NUMAB=2 hot page       Continuous sampling, frequency controllable.
> > 					promotion                      Subsampling programable.
> > ==============================================================
> > The last two are listed as possibilities.
> > 
> > Feel free to correct/clarify and add more.

The above covers what the use cases require. Maybe we need to do similar
for the controls needed the other way (frequency already covered)

Filtering.
* Process ID
* Address range (PA / VA)
* Access type (read vs write) may matter for migration cost.

Also frequency is more nuanced perhaps:
- How often to give data (timeliness)
- How much data to give (bandwidth)
- When don't I care (threshold)
- How precise do I want it to be (subsampling etc)

The layering is clearly to be complex, so maybe addressing each
use case for what info that needs would be helpful?

The following is probably too simplistic.

==================================================================
Usecase       Nature of data
==================================================================
NUMAB =1      Enough hot pages with remote source.
Balancing
==================================================================
NUMAB =2      Enough hot pages in slow memory
Tiering
Promotion
==================================================================
NUMAB = 2     Enough cold pages in fast memory
Tiering
Demotion
===================================================================
LRU list      Specific pages of interest accessed
activation
===================================================================
LRU list      Enough cold pages?
deactivation
====================================================================


Jonathan
> > 
> > Regards,
> > Bharata.  


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 8EA0A225760
	for <linux-kernel@vger.kernel.org>; Thu,  6 Feb 2025 06:46:28 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1738824388; cv=none; b=Q7Xf6VvAJj2FoqbenslFgJAzM1oyq5ihCepXMS6GDHjxGpn8kv8QtsOAMoANd4m4sAyKXSTINg1nLn+EZjl0DUbUn+9MQM4gf275CpkVKYetHpJj5po+uy1qhg7fHJBwn7XrXyEQmgJJZwiog3yly2MaNhLua9zJ/VH77o1BTUg=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1738824388; c=relaxed/simple;
	bh=L/04Y76RLArXwdFii0mJtBTfcSdeQFU6jkHVLh9O17I=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=K8LkE4yQ0QsmdViNrqW5rZvMtSo32W89jdtgDYg8ghkcBBkVKDhLaqDnBnPy98fHsuqExnlW+TaM8gXeMhtb0DdmD4TVAzik+KrFYmE3YYEewJnZzQrQNVbYDzqDH87/8HDIPouCGK9d6UlqyEVBxSMAxJqDYmhQ7x4lq8ozPNE=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=CoE5a86r; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="CoE5a86r"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id BD725C4CEE5;
	Thu,  6 Feb 2025 06:46:27 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1738824388;
	bh=L/04Y76RLArXwdFii0mJtBTfcSdeQFU6jkHVLh9O17I=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=CoE5a86ris0IpWocXajhAtzTjF7wF76YDX55jHiMlo14Mjc/i3UBb3864/TVtlzOi
	 81Kl0BzNU7RrcHX5bhm53cYxkcc/T2hLaVlprbofXwWJ4Zz5YISrU9mlSHOuEN+2wf
	 Pa/1UhWaxAmMW0cZbVvTvfAzTaV9iawAxSAsuebOB8OpmBXVSJw2xrYF5Ht2DrrcXQ
	 Mw2xQu5W1Elzoxqg9/AublBW1yH6BqMF4FxyctC9a50tkGjfjpFxvuyHroCffZEP2H
	 5Jq2etxnWlfhy4Z3yBjSLcnC29KHo9Yh2kCERYNxS0MzaanDQTXfuV5qbi5A6hB4dH
	 j6ejlkS29g4NA==
From: SeongJae Park <sj@kernel.org>
To: Johannes Weiner <hannes@cmpxchg.org>
Cc: SeongJae Park <sj@kernel.org>,
	Bharata B Rao <bharata@amd.com>,
	Jonathan Cameron <Jonathan.Cameron@huawei.com>,
	Raghavendra K T <raghavendra.kt@amd.com>,
	linux-mm@kvack.org,
	akpm@linux-foundation.org,
	lsf-pc@lists.linux-foundation.org,
	gourry@gourry.net,
	nehagholkar@meta.com,
	abhishekd@meta.com,
	ying.huang@linux.alibaba.com,
	nphamcs@gmail.com,
	feng.tang@intel.com,
	kbusch@meta.com,
	Hasan.Maruf@amd.com,
	david@redhat.com,
	willy@infradead.org,
	k.shutemov@gmail.com,
	mgorman@techsingularity.net,
	vbabka@suse.cz,
	hughd@google.com,
	rientjes@google.com,
	shy828301@gmail.com,
	liam.howlett@oracle.com,
	peterz@infradead.org,
	mingo@redhat.com,
	nadav.amit@gmail.com,
	shivankg@amd.com,
	ziy@nvidia.com,
	jhubbard@nvidia.com,
	AneeshKumar.KizhakeVeetil@arm.com,
	linux-kernel@vger.kernel.org,
	jon.grimm@amd.com,
	santosh.shukla@amd.com,
	Michael.Day@amd.com,
	riel@surriel.com,
	weixugc@google.com,
	leesuyeon0506@gmail.com,
	honggyu.kim@sk.com,
	leillc@google.com,
	kmanaouil.dev@gmail.com,
	rppt@kernel.org,
	dave.hansen@intel.com
Subject: Re: [LSF/MM/BPF TOPIC] Unifying sources of page temperature information - what info is actually wanted?
Date: Wed,  5 Feb 2025 22:46:24 -0800
Message-Id: <20250206064624.3225-1-sj@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20250205160529.GB1183495@cmpxchg.org>
References: 
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

On Wed, 5 Feb 2025 11:05:29 -0500 Johannes Weiner <hannes@cmpxchg.org> wrote:

> On Wed, Feb 05, 2025 at 11:54:05AM +0530, Bharata B Rao wrote:
> > On 31-Jan-25 6:39 PM, Jonathan Cameron wrote:
> > > On Fri, 31 Jan 2025 12:28:03 +0000
> > > Jonathan Cameron <Jonathan.Cameron@huawei.com> wrote:
[...]
> > Here is a compilation of available temperature sources and how the 
> > hot/access data is consumed by different subsystems:
> 
> This is super useful, thanks for collecting this.

Indeed.  Thank you Bharata!

[...]
> For the following table, it might be useful to add *when* the source
> produces this information.  Sampling frequency is a likely challenge:
> consumers have different requirements, and overhead should be limited
> to the minimum required to serve enabled consumers.

+1

> 
> Here is an (incomplete) attempt - sorry about the long lines:
> 
> > And here is an attempt to compile how different subsystems
> > use the above data:
> > ==============================================================
> > Source			Subsystem		Consumption         Activation/Frequency
[...]
> > ==============================================================
> > PTE A bit via		DAMON		LRU activation,                     Continuous sampling (configurable)?
> > rmap walk				hot page promotion,                 (I believe SJ is looking into
> > 					demotion etc                         auto-tuning this).

You're right.  I'm working on auto-tuning of the sampling/aggregation intervals
of DAMON based on its tuning guide theory[1].  Hopefully I will be able to post
an RFC patch series within a couple of weeks.

> > ==============================================================
> > Platform hints		NUMAB		NUMAB=1 Locality based
> > (AMD IBS)				balancing and
> > 					NUMAB=2 hot page
> > 					promotion
> > ==============================================================
> > Device hints		NUMAB		NUMAB=2 hot page
> > 					promotion
> > ==============================================================
> > The last two are listed as possibilities.

I'm also trying to extend DAMON to use PROT_NONE faults and AMD IBS like access
check sources.  Hopefully I will share more details of the plan and experiment
results for the PROT_NONE faults extension by LSFMMBPF.

[1] https://lore.kernel.org/20241202175459.2005526-1-sj@kernel.org


Thanks,
SJ

[...]

