From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id B00C5C07E9B
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:45:18 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 8AADC61029
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:45:18 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234558AbhGUGEG (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 02:04:06 -0400
Received: from mga06.intel.com ([134.134.136.31]:44379 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S234290AbhGUF7f (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 01:59:35 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10051"; a="272496411"
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="272496411"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:40:05 -0700
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="511390108"
Received: from yhuang6-desk2.sh.intel.com ([10.239.159.119])
  by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:40:00 -0700
From: Huang Ying <ying.huang@intel.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Huang Ying <ying.huang@intel.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Michal Hocko <mhocko@suse.com>, Wei Xu <weixugc@google.com>,
        Yang Shi <yang.shi@linux.alibaba.com>, Zi Yan <ziy@nvidia.com>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>,
        Oscar Salvador <osalvador@suse.de>,
        Yang Shi <shy828301@gmail.com>
Subject: [PATCH -V11 9/9] mm/migrate: add sysfs interface to enable reclaim migration
Date: Wed, 21 Jul 2021 14:39:26 +0800
Message-Id: <20210721063926.3024591-9-ying.huang@intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20210721063926.3024591-1-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Some method is obviously needed to enable reclaim-based migration.

Just like traditional autonuma, there will be some workloads that will
benefit like workloads with more "static" configurations where hot pages
stay hot and cold pages stay cold.  If pages come and go from the hot and
cold sets, the benefits of this approach will be more limited.

The benefits are truly workload-based and *not* hardware-based.  We do not
believe that there is a viable threshold where certain hardware
configurations should have this mechanism enabled while others do not.

To be conservative, earlier work defaulted to disable reclaim- based
migration and did not include a mechanism to enable it.  This proposes add
a new sysfs file

  /sys/kernel/mm/numa/demotion_enabled

as a method to enable it.

We are open to any alternative that allows end users to enable this
mechanism or disable it if workload harm is detected (just like
traditional autonuma).

Once this is enabled page demotion may move data to a NUMA node that does
not fall into the cpuset of the allocating process.  This could be
construed to violate the guarantees of cpusets.  However, since this is an
opt-in mechanism, the assumption is that anyone enabling it is content to
relax the guarantees.

Originally-by: Dave Hansen <dave.hansen@linux.intel.com>
Link: https://lkml.kernel.org/r/20210715055145.195411-10-ying.huang@intel.com
Signed-off-by: Huang Ying <ying.huang@intel.com>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Wei Xu <weixugc@google.com>
Cc: Yang Shi <yang.shi@linux.alibaba.com>
Cc: Zi Yan <ziy@nvidia.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Greg Thelen <gthelen@google.com>
Cc: Keith Busch <kbusch@kernel.org>
Cc: Oscar Salvador <osalvador@suse.de>
Cc: Yang Shi <shy828301@gmail.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 .../ABI/testing/sysfs-kernel-mm-numa          | 24 ++++++++
 include/linux/mempolicy.h                     |  4 ++
 mm/mempolicy.c                                | 61 +++++++++++++++++++
 mm/vmscan.c                                   |  5 +-
 4 files changed, 92 insertions(+), 2 deletions(-)
 create mode 100644 Documentation/ABI/testing/sysfs-kernel-mm-numa

diff --git a/Documentation/ABI/testing/sysfs-kernel-mm-numa b/Documentation/ABI/testing/sysfs-kernel-mm-numa
new file mode 100644
index 000000000000..77e559d4ed80
--- /dev/null
+++ b/Documentation/ABI/testing/sysfs-kernel-mm-numa
@@ -0,0 +1,24 @@
+What:		/sys/kernel/mm/numa/
+Date:		June 2021
+Contact:	Linux memory management mailing list <linux-mm@kvack.org>
+Description:	Interface for NUMA
+
+What:		/sys/kernel/mm/numa/demotion_enabled
+Date:		June 2021
+Contact:	Linux memory management mailing list <linux-mm@kvack.org>
+Description:	Enable/disable demoting pages during reclaim
+
+		Page migration during reclaim is intended for systems
+		with tiered memory configurations.  These systems have
+		multiple types of memory with varied performance
+		characteristics instead of plain NUMA systems where
+		the same kind of memory is found at varied distances.
+		Allowing page migration during reclaim enables these
+		systems to migrate pages from fast tiers to slow tiers
+		when the fast tier is under pressure.  This migration
+		is performed before swap.  It may move data to a NUMA
+		node that does not fall into the cpuset of the
+		allocating process which might be construed to violate
+		the guarantees of cpusets.  This should not be enabled
+		on systems which need strict cpuset location
+		guarantees.
diff --git a/include/linux/mempolicy.h b/include/linux/mempolicy.h
index 0aaf91b496e2..4ca025e2a77e 100644
--- a/include/linux/mempolicy.h
+++ b/include/linux/mempolicy.h
@@ -184,6 +184,8 @@ extern bool vma_migratable(struct vm_area_struct *vma);
 extern int mpol_misplaced(struct page *, struct vm_area_struct *, unsigned long);
 extern void mpol_put_task_policy(struct task_struct *);
 
+extern bool numa_demotion_enabled;
+
 #else
 
 struct mempolicy {};
@@ -292,5 +294,7 @@ static inline nodemask_t *policy_nodemask_current(gfp_t gfp)
 {
 	return NULL;
 }
+
+#define numa_demotion_enabled	false
 #endif /* CONFIG_NUMA */
 #endif
diff --git a/mm/mempolicy.c b/mm/mempolicy.c
index f58c38ea1e83..a0535b73697f 100644
--- a/mm/mempolicy.c
+++ b/mm/mempolicy.c
@@ -3062,3 +3062,64 @@ void mpol_to_str(char *buffer, int maxlen, struct mempolicy *pol)
 		p += scnprintf(p, buffer + maxlen - p, ":%*pbl",
 			       nodemask_pr_args(&nodes));
 }
+
+bool numa_demotion_enabled = false;
+
+#ifdef CONFIG_SYSFS
+static ssize_t numa_demotion_enabled_show(struct kobject *kobj,
+					  struct kobj_attribute *attr, char *buf)
+{
+	return sysfs_emit(buf, "%s\n",
+			  numa_demotion_enabled? "true" : "false");
+}
+
+static ssize_t numa_demotion_enabled_store(struct kobject *kobj,
+					   struct kobj_attribute *attr,
+					   const char *buf, size_t count)
+{
+	if (!strncmp(buf, "true", 4) || !strncmp(buf, "1", 1))
+		numa_demotion_enabled = true;
+	else if (!strncmp(buf, "false", 5) || !strncmp(buf, "0", 1))
+		numa_demotion_enabled = false;
+	else
+		return -EINVAL;
+
+	return count;
+}
+
+static struct kobj_attribute numa_demotion_enabled_attr =
+	__ATTR(demotion_enabled, 0644, numa_demotion_enabled_show,
+	       numa_demotion_enabled_store);
+
+static struct attribute *numa_attrs[] = {
+	&numa_demotion_enabled_attr.attr,
+	NULL,
+};
+
+static const struct attribute_group numa_attr_group = {
+	.attrs = numa_attrs,
+};
+
+static int __init numa_init_sysfs(void)
+{
+	int err;
+	struct kobject *numa_kobj;
+
+	numa_kobj = kobject_create_and_add("numa", mm_kobj);
+	if (!numa_kobj) {
+		pr_err("failed to create numa kobject\n");
+		return -ENOMEM;
+	}
+	err = sysfs_create_group(numa_kobj, &numa_attr_group);
+	if (err) {
+		pr_err("failed to register numa group\n");
+		goto delete_obj;
+	}
+	return 0;
+
+delete_obj:
+	kobject_put(numa_kobj);
+	return err;
+}
+subsys_initcall(numa_init_sysfs);
+#endif
diff --git a/mm/vmscan.c b/mm/vmscan.c
index 60179903ed9e..fa59b1344e36 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -521,6 +521,8 @@ static long add_nr_deferred(long nr, struct shrinker *shrinker,
 
 static bool can_demote(int nid, struct scan_control *sc)
 {
+	if (!numa_demotion_enabled)
+		return false;
 	if (sc) {
 		if (sc->no_demotion)
 			return false;
@@ -531,8 +533,7 @@ static bool can_demote(int nid, struct scan_control *sc)
 	if (next_demotion_node(nid) == NUMA_NO_NODE)
 		return false;
 
-	// FIXME: actually enable this later in the series
-	return false;
+	return true;
 }
 
 static inline bool can_reclaim_anon_pages(struct mem_cgroup *memcg,
-- 
2.30.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 25219C12002
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:44:37 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 0FD2760FD7
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:44:37 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233710AbhGUGD4 (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 02:03:56 -0400
Received: from mga06.intel.com ([134.134.136.31]:44391 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S234258AbhGUF7U (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 01:59:20 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10051"; a="272496396"
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="272496396"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:57 -0700
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="511390036"
Received: from yhuang6-desk2.sh.intel.com ([10.239.159.119])
  by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:53 -0700
From: Huang Ying <ying.huang@intel.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Keith Busch <kbusch@kernel.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        "Huang, Ying" <ying.huang@intel.com>,
        Yang Shi <shy828301@gmail.com>, Michal Hocko <mhocko@suse.com>,
        Zi Yan <ziy@nvidia.com>, Wei Xu <weixugc@google.com>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Oscar Salvador <osalvador@suse.de>,
        Yang Shi <yang.shi@linux.alibaba.com>
Subject: [PATCH -V11 7/9] mm/vmscan: Consider anonymous pages without swap
Date: Wed, 21 Jul 2021 14:39:24 +0800
Message-Id: <20210721063926.3024591-7-ying.huang@intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20210721063926.3024591-1-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Keith Busch <kbusch@kernel.org>

Reclaim anonymous pages if a migration path is available now that demotion
provides a non-swap recourse for reclaiming anon pages.

Note that this check is subtly different from the can_age_anon_pages()
checks.  This mechanism checks whether a specific page in a specific
context can actually be reclaimed, given current swap space and cgroup
limits.

can_age_anon_pages() is a much simpler and more preliminary check which
just says whether there is a possibility of future reclaim.

Link: https://lkml.kernel.org/r/20210715055145.195411-8-ying.huang@intel.com
Cc: Keith Busch <kbusch@kernel.org>
Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
Reviewed-by: Yang Shi <shy828301@gmail.com>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Zi Yan <ziy@nvidia.com>
Cc: Wei Xu <weixugc@google.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Greg Thelen <gthelen@google.com>
Cc: Oscar Salvador <osalvador@suse.de>
Cc: Yang Shi <yang.shi@linux.alibaba.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 mm/vmscan.c | 34 ++++++++++++++++++++++++++++++----
 1 file changed, 30 insertions(+), 4 deletions(-)

diff --git a/mm/vmscan.c b/mm/vmscan.c
index d79bf91700de..67a320c6571d 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -521,7 +521,7 @@ static long add_nr_deferred(long nr, struct shrinker *shrinker,
 
 static bool can_demote(int nid, struct scan_control *sc)
 {
-	if (sc->no_demotion)
+	if (sc && sc->no_demotion)
 		return false;
 	if (next_demotion_node(nid) == NUMA_NO_NODE)
 		return false;
@@ -530,6 +530,31 @@ static bool can_demote(int nid, struct scan_control *sc)
 	return false;
 }
 
+static inline bool can_reclaim_anon_pages(struct mem_cgroup *memcg,
+					  int nid,
+					  struct scan_control *sc)
+{
+	if (memcg == NULL) {
+		/*
+		 * For non-memcg reclaim, is there
+		 * space in any swap device?
+		 */
+		if (get_nr_swap_pages() > 0)
+			return true;
+	} else {
+		/* Is the memcg below its swap limit? */
+		if (mem_cgroup_get_nr_swap_pages(memcg) > 0)
+			return true;
+	}
+
+	/*
+	 * The page can not be swapped.
+	 *
+	 * Can it be reclaimed from this node via demotion?
+	 */
+	return can_demote(nid, sc);
+}
+
 /*
  * This misses isolated pages which are not accounted for to save counters.
  * As the data only determines if reclaim or compaction continues, it is
@@ -541,7 +566,7 @@ unsigned long zone_reclaimable_pages(struct zone *zone)
 
 	nr = zone_page_state_snapshot(zone, NR_ZONE_INACTIVE_FILE) +
 		zone_page_state_snapshot(zone, NR_ZONE_ACTIVE_FILE);
-	if (get_nr_swap_pages() > 0)
+	if (can_reclaim_anon_pages(NULL, zone_to_nid(zone), NULL))
 		nr += zone_page_state_snapshot(zone, NR_ZONE_INACTIVE_ANON) +
 			zone_page_state_snapshot(zone, NR_ZONE_ACTIVE_ANON);
 
@@ -2544,6 +2569,7 @@ enum scan_balance {
 static void get_scan_count(struct lruvec *lruvec, struct scan_control *sc,
 			   unsigned long *nr)
 {
+	struct pglist_data *pgdat = lruvec_pgdat(lruvec);
 	struct mem_cgroup *memcg = lruvec_memcg(lruvec);
 	unsigned long anon_cost, file_cost, total_cost;
 	int swappiness = mem_cgroup_swappiness(memcg);
@@ -2554,7 +2580,7 @@ static void get_scan_count(struct lruvec *lruvec, struct scan_control *sc,
 	enum lru_list lru;
 
 	/* If we have no swap space, do not bother scanning anon pages. */
-	if (!sc->may_swap || mem_cgroup_get_nr_swap_pages(memcg) <= 0) {
+	if (!sc->may_swap || !can_reclaim_anon_pages(memcg, pgdat->node_id, sc)) {
 		scan_balance = SCAN_FILE;
 		goto out;
 	}
@@ -2924,7 +2950,7 @@ static inline bool should_continue_reclaim(struct pglist_data *pgdat,
 	 */
 	pages_for_compaction = compact_gap(sc->order);
 	inactive_lru_pages = node_page_state(pgdat, NR_INACTIVE_FILE);
-	if (get_nr_swap_pages() > 0)
+	if (can_reclaim_anon_pages(NULL, pgdat->node_id, sc))
 		inactive_lru_pages += node_page_state(pgdat, NR_INACTIVE_ANON);
 
 	return inactive_lru_pages > pages_for_compaction;
-- 
2.30.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 9BDD9C636C9
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:44:03 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 7E6A061175
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:44:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234709AbhGUGDW (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 02:03:22 -0400
Received: from mga06.intel.com ([134.134.136.31]:44388 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S234275AbhGUF70 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 01:59:26 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10051"; a="272496401"
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="272496401"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:40:00 -0700
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="511390055"
Received: from yhuang6-desk2.sh.intel.com ([10.239.159.119])
  by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:57 -0700
From: Huang Ying <ying.huang@intel.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Dave Hansen <dave.hansen@linux.intel.com>,
        "Huang, Ying" <ying.huang@intel.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Yang Shi <shy828301@gmail.com>, Michal Hocko <mhocko@suse.com>,
        Wei Xu <weixugc@google.com>,
        Oscar Salvador <osalvador@suse.de>, Zi Yan <ziy@nvidia.com>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>
Subject: [PATCH -V11 8/9] mm/vmscan: never demote for memcg reclaim
Date: Wed, 21 Jul 2021 14:39:25 +0800
Message-Id: <20210721063926.3024591-8-ying.huang@intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20210721063926.3024591-1-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Dave Hansen <dave.hansen@linux.intel.com>

Global reclaim aims to reduce the amount of memory used on a given node or
set of nodes.  Migrating pages to another node serves this purpose.

memcg reclaim is different.  Its goal is to reduce the total memory
consumption of the entire memcg, across all nodes.  Migration does not
assist memcg reclaim because it just moves page contents between nodes
rather than actually reducing memory consumption.

Link: https://lkml.kernel.org/r/20210715055145.195411-9-ying.huang@intel.com
Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
Suggested-by: Yang Shi <yang.shi@linux.alibaba.com>
Reviewed-by: Yang Shi <shy828301@gmail.com>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Wei Xu <weixugc@google.com>
Cc: Oscar Salvador <osalvador@suse.de>
Cc: Zi Yan <ziy@nvidia.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Greg Thelen <gthelen@google.com>
Cc: Keith Busch <kbusch@kernel.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 mm/vmscan.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/mm/vmscan.c b/mm/vmscan.c
index 67a320c6571d..60179903ed9e 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -521,8 +521,13 @@ static long add_nr_deferred(long nr, struct shrinker *shrinker,
 
 static bool can_demote(int nid, struct scan_control *sc)
 {
-	if (sc && sc->no_demotion)
-		return false;
+	if (sc) {
+		if (sc->no_demotion)
+			return false;
+		/* It is pointless to do demotion in memcg reclaim */
+		if (cgroup_reclaim(sc))
+			return false;
+	}
 	if (next_demotion_node(nid) == NUMA_NO_NODE)
 		return false;
 
-- 
2.30.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 2D514C07E9B
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:43:53 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 141DA61029
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:43:53 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234037AbhGUGDO (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 02:03:14 -0400
Received: from mga06.intel.com ([134.134.136.31]:44379 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S234243AbhGUF7Q (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 01:59:16 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10051"; a="272496391"
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="272496391"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:53 -0700
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="511390027"
Received: from yhuang6-desk2.sh.intel.com ([10.239.159.119])
  by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:50 -0700
From: Huang Ying <ying.huang@intel.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Dave Hansen <dave.hansen@linux.intel.com>,
        "Huang, Ying" <ying.huang@intel.com>,
        Yang Shi <shy828301@gmail.com>,
        Greg Thelen <gthelen@google.com>,
        Michal Hocko <mhocko@suse.com>, Wei Xu <weixugc@google.com>,
        Oscar Salvador <osalvador@suse.de>, Zi Yan <ziy@nvidia.com>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Keith Busch <kbusch@kernel.org>,
        Yang Shi <yang.shi@linux.alibaba.com>
Subject: [PATCH -V11 6/9] mm/vmscan: add helper for querying ability to age anonymous pages
Date: Wed, 21 Jul 2021 14:39:23 +0800
Message-Id: <20210721063926.3024591-6-ying.huang@intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20210721063926.3024591-1-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Dave Hansen <dave.hansen@linux.intel.com>

Anonymous pages are kept on their own LRU(s).  These lists could
theoretically always be scanned and maintained.  But, without swap, there
is currently nothing the kernel can *do* with the results of a scanned,
sorted LRU for anonymous pages.

A check for '!total_swap_pages' currently serves as a valid check as to
whether anonymous LRUs should be maintained.  However, another method will
be added shortly: page demotion.

Abstract out the 'total_swap_pages' checks into a helper, give it a
logically significant name, and check for the possibility of page
demotion.

Link: https://lkml.kernel.org/r/20210715055145.195411-7-ying.huang@intel.com
Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
Reviewed-by: Yang Shi <shy828301@gmail.com>
Reviewed-by: Greg Thelen <gthelen@google.com>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Wei Xu <weixugc@google.com>
Cc: Oscar Salvador <osalvador@suse.de>
Cc: Zi Yan <ziy@nvidia.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Keith Busch <kbusch@kernel.org>
Cc: Yang Shi <yang.shi@linux.alibaba.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 mm/vmscan.c | 20 ++++++++++++++++++--
 1 file changed, 18 insertions(+), 2 deletions(-)

diff --git a/mm/vmscan.c b/mm/vmscan.c
index 90fa026cfa29..d79bf91700de 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -2729,6 +2729,21 @@ static void get_scan_count(struct lruvec *lruvec, struct scan_control *sc,
 	}
 }
 
+/*
+ * Anonymous LRU management is a waste if there is
+ * ultimately no way to reclaim the memory.
+ */
+static bool can_age_anon_pages(struct pglist_data *pgdat,
+			       struct scan_control *sc)
+{
+	/* Aging the anon LRU is valuable if swap is present: */
+	if (total_swap_pages > 0)
+		return true;
+
+	/* Also valuable if anon pages can be demoted: */
+	return can_demote(pgdat->node_id, sc);
+}
+
 static void shrink_lruvec(struct lruvec *lruvec, struct scan_control *sc)
 {
 	unsigned long nr[NR_LRU_LISTS];
@@ -2838,7 +2853,8 @@ static void shrink_lruvec(struct lruvec *lruvec, struct scan_control *sc)
 	 * Even if we did not try to evict anon pages at all, we want to
 	 * rebalance the anon lru active/inactive ratio.
 	 */
-	if (total_swap_pages && inactive_is_low(lruvec, LRU_INACTIVE_ANON))
+	if (can_age_anon_pages(lruvec_pgdat(lruvec), sc) &&
+	    inactive_is_low(lruvec, LRU_INACTIVE_ANON))
 		shrink_active_list(SWAP_CLUSTER_MAX, lruvec,
 				   sc, LRU_ACTIVE_ANON);
 }
@@ -3669,7 +3685,7 @@ static void age_active_anon(struct pglist_data *pgdat,
 	struct mem_cgroup *memcg;
 	struct lruvec *lruvec;
 
-	if (!total_swap_pages)
+	if (!can_age_anon_pages(pgdat, sc))
 		return;
 
 	lruvec = mem_cgroup_lruvec(NULL, pgdat);
-- 
2.30.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 8B776C07E9B
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:43:42 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 6817461029
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:43:42 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233902AbhGUGCz (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 02:02:55 -0400
Received: from mga06.intel.com ([134.134.136.31]:44371 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S234182AbhGUF7C (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 01:59:02 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10051"; a="272496363"
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="272496363"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:39 -0700
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="511389983"
Received: from yhuang6-desk2.sh.intel.com ([10.239.159.119])
  by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:35 -0700
From: Huang Ying <ying.huang@intel.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Dave Hansen <dave.hansen@linux.intel.com>,
        "Huang, Ying" <ying.huang@intel.com>,
        Yang Shi <shy828301@gmail.com>, Zi Yan <ziy@nvidia.com>,
        Michal Hocko <mhocko@suse.com>, Wei Xu <weixugc@google.com>,
        Oscar Salvador <osalvador@suse.de>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>,
        Yang Shi <yang.shi@linux.alibaba.com>
Subject: [PATCH -V11 2/9] mm/migrate: update node demotion order on hotplug events
Date: Wed, 21 Jul 2021 14:39:19 +0800
Message-Id: <20210721063926.3024591-2-ying.huang@intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20210721063926.3024591-1-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Dave Hansen <dave.hansen@linux.intel.com>

Reclaim-based migration is attempting to optimize data placement in memory
based on the system topology.  If the system changes, so must the
migration ordering.

The implementation is conceptually simple and entirely unoptimized.  On
any memory or CPU hotplug events, assume that a node was added or removed
and recalculate all migration targets.  This ensures that the
node_demotion[] array is always ready to be used in case the new reclaim
mode is enabled.

This recalculation is far from optimal, most glaringly that it does not
even attempt to figure out the hotplug event would have some *actual*
effect on the demotion order.  But, given the expected paucity of hotplug
events, this should be fine.

Link: https://lkml.kernel.org/r/20210715055145.195411-3-ying.huang@intel.com
Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
Reviewed-by: Yang Shi <shy828301@gmail.com>
Reviewed-by: Zi Yan <ziy@nvidia.com>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Wei Xu <weixugc@google.com>
Cc: Oscar Salvador <osalvador@suse.de>
Cc: David Rientjes <rientjes@google.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Greg Thelen <gthelen@google.com>
Cc: Keith Busch <kbusch@kernel.org>
Cc: Yang Shi <yang.shi@linux.alibaba.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 mm/migrate.c | 90 +++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 89 insertions(+), 1 deletion(-)

diff --git a/mm/migrate.c b/mm/migrate.c
index b7a40ab47648..a40c391f9ca7 100644
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@ -49,6 +49,7 @@
 #include <linux/sched/mm.h>
 #include <linux/ptrace.h>
 #include <linux/oom.h>
+#include <linux/memory.h>
 
 #include <asm/tlbflush.h>
 
@@ -3057,6 +3058,7 @@ void migrate_vma_finalize(struct migrate_vma *migrate)
 EXPORT_SYMBOL(migrate_vma_finalize);
 #endif /* CONFIG_DEVICE_PRIVATE */
 
+#if defined(CONFIG_MEMORY_HOTPLUG)
 /* Disable reclaim-based migration. */
 static void __disable_all_migrate_targets(void)
 {
@@ -3191,10 +3193,96 @@ static void __set_migration_target_nodes(void)
 /*
  * For callers that do not hold get_online_mems() already.
  */
-__maybe_unused // <- temporay to prevent warnings during bisects
 static void set_migration_target_nodes(void)
 {
 	get_online_mems();
 	__set_migration_target_nodes();
 	put_online_mems();
 }
+
+/*
+ * React to hotplug events that might affect the migration targets
+ * like events that online or offline NUMA nodes.
+ *
+ * The ordering is also currently dependent on which nodes have
+ * CPUs.  That means we need CPU on/offline notification too.
+ */
+static int migration_online_cpu(unsigned int cpu)
+{
+	set_migration_target_nodes();
+	return 0;
+}
+
+static int migration_offline_cpu(unsigned int cpu)
+{
+	set_migration_target_nodes();
+	return 0;
+}
+
+/*
+ * This leaves migrate-on-reclaim transiently disabled between
+ * the MEM_GOING_OFFLINE and MEM_OFFLINE events.  This runs
+ * whether reclaim-based migration is enabled or not, which
+ * ensures that the user can turn reclaim-based migration at
+ * any time without needing to recalculate migration targets.
+ *
+ * These callbacks already hold get_online_mems().  That is why
+ * __set_migration_target_nodes() can be used as opposed to
+ * set_migration_target_nodes().
+ */
+static int __meminit migrate_on_reclaim_callback(struct notifier_block *self,
+						 unsigned long action, void *arg)
+{
+	switch (action) {
+	case MEM_GOING_OFFLINE:
+		/*
+		 * Make sure there are not transient states where
+		 * an offline node is a migration target.  This
+		 * will leave migration disabled until the offline
+		 * completes and the MEM_OFFLINE case below runs.
+		 */
+		disable_all_migrate_targets();
+		break;
+	case MEM_OFFLINE:
+	case MEM_ONLINE:
+		/*
+		 * Recalculate the target nodes once the node
+		 * reaches its final state (online or offline).
+		 */
+		__set_migration_target_nodes();
+		break;
+	case MEM_CANCEL_OFFLINE:
+		/*
+		 * MEM_GOING_OFFLINE disabled all the migration
+		 * targets.  Reenable them.
+		 */
+		__set_migration_target_nodes();
+		break;
+	case MEM_GOING_ONLINE:
+	case MEM_CANCEL_ONLINE:
+		break;
+	}
+
+	return notifier_from_errno(0);
+}
+
+static int __init migrate_on_reclaim_init(void)
+{
+	int ret;
+
+	ret = cpuhp_setup_state(CPUHP_AP_ONLINE_DYN, "migrate on reclaim",
+				migration_online_cpu,
+				migration_offline_cpu);
+	/*
+	 * In the unlikely case that this fails, the automatic
+	 * migration targets may become suboptimal for nodes
+	 * where N_CPU changes.  With such a small impact in a
+	 * rare case, do not bother trying to do anything special.
+	 */
+	WARN_ON(ret < 0);
+
+	hotplug_memory_notifier(migrate_on_reclaim_callback, 100);
+	return 0;
+}
+late_initcall(migrate_on_reclaim_init);
+#endif /* CONFIG_MEMORY_HOTPLUG */
-- 
2.30.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 16B8FC07E9B
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:42:47 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id F161B61175
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:42:46 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234332AbhGUGCD (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 02:02:03 -0400
Received: from mga06.intel.com ([134.134.136.31]:44388 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S234241AbhGUF7N (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 01:59:13 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10051"; a="272496386"
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="272496386"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:50 -0700
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="511390018"
Received: from yhuang6-desk2.sh.intel.com ([10.239.159.119])
  by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:46 -0700
From: Huang Ying <ying.huang@intel.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        "Huang, Ying" <ying.huang@intel.com>,
        Yang Shi <shy828301@gmail.com>, Wei Xu <weixugc@google.com>,
        Michal Hocko <mhocko@suse.com>, Zi Yan <ziy@nvidia.com>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Oscar Salvador <osalvador@suse.de>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>
Subject: [PATCH -V11 5/9] mm/vmscan: add page demotion counter
Date: Wed, 21 Jul 2021 14:39:22 +0800
Message-Id: <20210721063926.3024591-5-ying.huang@intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20210721063926.3024591-1-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Yang Shi <yang.shi@linux.alibaba.com>

Account the number of demoted pages.

Add pgdemote_kswapd and pgdemote_direct VM counters showed in
/proc/vmstat.

[ daveh:
   - __count_vm_events() a bit, and made them look at the THP
     size directly rather than getting data from migrate_pages()
]

Link: https://lkml.kernel.org/r/20210715055145.195411-6-ying.huang@intel.com
Signed-off-by: Yang Shi <yang.shi@linux.alibaba.com>
Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
Reviewed-by: Yang Shi <shy828301@gmail.com>
Reviewed-by: Wei Xu <weixugc@google.com>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Zi Yan <ziy@nvidia.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Oscar Salvador <osalvador@suse.de>
Cc: Greg Thelen <gthelen@google.com>
Cc: Keith Busch <kbusch@kernel.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 include/linux/vm_event_item.h | 2 ++
 mm/vmscan.c                   | 5 +++++
 mm/vmstat.c                   | 2 ++
 3 files changed, 9 insertions(+)

diff --git a/include/linux/vm_event_item.h b/include/linux/vm_event_item.h
index ae0dd1948c2b..a185cc75ff52 100644
--- a/include/linux/vm_event_item.h
+++ b/include/linux/vm_event_item.h
@@ -33,6 +33,8 @@ enum vm_event_item { PGPGIN, PGPGOUT, PSWPIN, PSWPOUT,
 		PGREUSE,
 		PGSTEAL_KSWAPD,
 		PGSTEAL_DIRECT,
+		PGDEMOTE_KSWAPD,
+		PGDEMOTE_DIRECT,
 		PGSCAN_KSWAPD,
 		PGSCAN_DIRECT,
 		PGSCAN_DIRECT_THROTTLE,
diff --git a/mm/vmscan.c b/mm/vmscan.c
index 49d03b5e3c18..90fa026cfa29 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -1322,6 +1322,11 @@ static unsigned int demote_page_list(struct list_head *demote_pages,
 			    target_nid, MIGRATE_ASYNC, MR_DEMOTION,
 			    &nr_succeeded);
 
+	if (current_is_kswapd())
+		__count_vm_events(PGDEMOTE_KSWAPD, nr_succeeded);
+	else
+		__count_vm_events(PGDEMOTE_DIRECT, nr_succeeded);
+
 	return nr_succeeded;
 }
 
diff --git a/mm/vmstat.c b/mm/vmstat.c
index 6246bab9fae2..13ff25d0d96a 100644
--- a/mm/vmstat.c
+++ b/mm/vmstat.c
@@ -1217,6 +1217,8 @@ const char * const vmstat_text[] = {
 	"pgreuse",
 	"pgsteal_kswapd",
 	"pgsteal_direct",
+	"pgdemote_kswapd",
+	"pgdemote_direct",
 	"pgscan_kswapd",
 	"pgscan_direct",
 	"pgscan_direct_throttle",
-- 
2.30.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 8FA2CC12002
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:42:39 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 6B1D361029
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:42:39 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234104AbhGUGBz (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 02:01:55 -0400
Received: from mga06.intel.com ([134.134.136.31]:44379 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S234158AbhGUF7J (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 01:59:09 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10051"; a="272496378"
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="272496378"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:45 -0700
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="511390001"
Received: from yhuang6-desk2.sh.intel.com ([10.239.159.119])
  by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:42 -0700
From: Huang Ying <ying.huang@intel.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Dave Hansen <dave.hansen@linux.intel.com>,
        "Huang, Ying" <ying.huang@intel.com>,
        Yang Shi <shy828301@gmail.com>, Wei Xu <weixugc@google.com>,
        Oscar Salvador <osalvador@suse.de>,
        Michal Hocko <mhocko@suse.com>, Zi Yan <ziy@nvidia.com>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>
Subject: [PATCH -V11 4/9] mm/migrate: demote pages during reclaim
Date: Wed, 21 Jul 2021 14:39:21 +0800
Message-Id: <20210721063926.3024591-4-ying.huang@intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20210721063926.3024591-1-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Dave Hansen <dave.hansen@linux.intel.com>

This is mostly derived from a patch from Yang Shi:

	https://lore.kernel.org/linux-mm/1560468577-101178-10-git-send-email-yang.shi@linux.alibaba.com/

Add code to the reclaim path (shrink_page_list()) to "demote" data to
another NUMA node instead of discarding the data.  This always avoids the
cost of I/O needed to read the page back in and sometimes avoids the
writeout cost when the page is dirty.

A second pass through shrink_page_list() will be made if any demotions
fail.  This essentially falls back to normal reclaim behavior in the case
that demotions fail.  Previous versions of this patch may have simply
failed to reclaim pages which were eligible for demotion but were unable
to be demoted in practice.

For some cases, for example, MADV_PAGEOUT, the pages are always discarded
instead of demoted to follow the kernel API definition.  Because
MADV_PAGEOUT is defined as freeing specified pages regardless in which
tier they are.

Note: This just adds the start of infrastructure for migration.  It is
actually disabled next to the FIXME in migrate_demote_page_ok().

Link: https://lkml.kernel.org/r/20210715055145.195411-5-ying.huang@intel.com
Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
Reviewed-by: Yang Shi <shy828301@gmail.com>
Reviewed-by: Wei Xu <weixugc@google.com>
Reviewed-by: Oscar Salvador <osalvador@suse.de>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Zi Yan <ziy@nvidia.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Greg Thelen <gthelen@google.com>
Cc: Keith Busch <kbusch@kernel.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 include/linux/migrate.h        |  9 ++++
 include/trace/events/migrate.h |  3 +-
 mm/vmscan.c                    | 85 ++++++++++++++++++++++++++++++++++
 3 files changed, 96 insertions(+), 1 deletion(-)

diff --git a/include/linux/migrate.h b/include/linux/migrate.h
index 8ab88d46318e..326250996b4e 100644
--- a/include/linux/migrate.h
+++ b/include/linux/migrate.h
@@ -28,6 +28,7 @@ enum migrate_reason {
 	MR_NUMA_MISPLACED,
 	MR_CONTIG_RANGE,
 	MR_LONGTERM_PIN,
+	MR_DEMOTION,
 	MR_TYPES
 };
 
@@ -167,6 +168,14 @@ struct migrate_vma {
 int migrate_vma_setup(struct migrate_vma *args);
 void migrate_vma_pages(struct migrate_vma *migrate);
 void migrate_vma_finalize(struct migrate_vma *migrate);
+int next_demotion_node(int node);
+
+#else /* CONFIG_MIGRATION disabled: */
+
+static inline int next_demotion_node(int node)
+{
+	return NUMA_NO_NODE;
+}
 
 #endif /* CONFIG_MIGRATION */
 
diff --git a/include/trace/events/migrate.h b/include/trace/events/migrate.h
index 9fb2a3bbcdfb..779f3fad9ecd 100644
--- a/include/trace/events/migrate.h
+++ b/include/trace/events/migrate.h
@@ -21,7 +21,8 @@
 	EM( MR_MEMPOLICY_MBIND,	"mempolicy_mbind")		\
 	EM( MR_NUMA_MISPLACED,	"numa_misplaced")		\
 	EM( MR_CONTIG_RANGE,	"contig_range")			\
-	EMe(MR_LONGTERM_PIN,	"longterm_pin")
+	EM( MR_LONGTERM_PIN,	"longterm_pin")			\
+	EMe(MR_DEMOTION,	"demotion")
 
 /*
  * First define the enums in the above macros to be exported to userspace
diff --git a/mm/vmscan.c b/mm/vmscan.c
index 9e1d66c81e6f..49d03b5e3c18 100644
--- a/mm/vmscan.c
+++ b/mm/vmscan.c
@@ -41,6 +41,7 @@
 #include <linux/kthread.h>
 #include <linux/freezer.h>
 #include <linux/memcontrol.h>
+#include <linux/migrate.h>
 #include <linux/delayacct.h>
 #include <linux/sysctl.h>
 #include <linux/oom.h>
@@ -118,6 +119,9 @@ struct scan_control {
 	/* The file pages on the current node are dangerously low */
 	unsigned int file_is_tiny:1;
 
+	/* Always discard instead of demoting to lower tier memory */
+	unsigned int no_demotion:1;
+
 	/* Allocation order */
 	s8 order;
 
@@ -515,6 +519,17 @@ static long add_nr_deferred(long nr, struct shrinker *shrinker,
 	return atomic_long_add_return(nr, &shrinker->nr_deferred[nid]);
 }
 
+static bool can_demote(int nid, struct scan_control *sc)
+{
+	if (sc->no_demotion)
+		return false;
+	if (next_demotion_node(nid) == NUMA_NO_NODE)
+		return false;
+
+	// FIXME: actually enable this later in the series
+	return false;
+}
+
 /*
  * This misses isolated pages which are not accounted for to save counters.
  * As the data only determines if reclaim or compaction continues, it is
@@ -1267,6 +1282,49 @@ static void page_check_dirty_writeback(struct page *page,
 		mapping->a_ops->is_dirty_writeback(page, dirty, writeback);
 }
 
+static struct page *alloc_demote_page(struct page *page, unsigned long node)
+{
+	struct migration_target_control mtc = {
+		/*
+		 * Allocate from 'node', or fail quickly and quietly.
+		 * When this happens, 'page' will likely just be discarded
+		 * instead of migrated.
+		 */
+		.gfp_mask = (GFP_HIGHUSER_MOVABLE & ~__GFP_RECLAIM) |
+			    __GFP_THISNODE  | __GFP_NOWARN |
+			    __GFP_NOMEMALLOC | GFP_NOWAIT,
+		.nid = node
+	};
+
+	return alloc_migration_target(page, (unsigned long)&mtc);
+}
+
+/*
+ * Take pages on @demote_list and attempt to demote them to
+ * another node.  Pages which are not demoted are left on
+ * @demote_pages.
+ */
+static unsigned int demote_page_list(struct list_head *demote_pages,
+				     struct pglist_data *pgdat)
+{
+	int target_nid = next_demotion_node(pgdat->node_id);
+	unsigned int nr_succeeded;
+	int err;
+
+	if (list_empty(demote_pages))
+		return 0;
+
+	if (target_nid == NUMA_NO_NODE)
+		return 0;
+
+	/* Demotion ignores all cpuset and mempolicy settings */
+	err = migrate_pages(demote_pages, alloc_demote_page, NULL,
+			    target_nid, MIGRATE_ASYNC, MR_DEMOTION,
+			    &nr_succeeded);
+
+	return nr_succeeded;
+}
+
 /*
  * shrink_page_list() returns the number of reclaimed pages
  */
@@ -1278,12 +1336,16 @@ static unsigned int shrink_page_list(struct list_head *page_list,
 {
 	LIST_HEAD(ret_pages);
 	LIST_HEAD(free_pages);
+	LIST_HEAD(demote_pages);
 	unsigned int nr_reclaimed = 0;
 	unsigned int pgactivate = 0;
+	bool do_demote_pass;
 
 	memset(stat, 0, sizeof(*stat));
 	cond_resched();
+	do_demote_pass = can_demote(pgdat->node_id, sc);
 
+retry:
 	while (!list_empty(page_list)) {
 		struct address_space *mapping;
 		struct page *page;
@@ -1432,6 +1494,17 @@ static unsigned int shrink_page_list(struct list_head *page_list,
 			; /* try to reclaim the page below */
 		}
 
+		/*
+		 * Before reclaiming the page, try to relocate
+		 * its contents to another node.
+		 */
+		if (do_demote_pass &&
+		    (thp_migration_supported() || !PageTransHuge(page))) {
+			list_add(&page->lru, &demote_pages);
+			unlock_page(page);
+			continue;
+		}
+
 		/*
 		 * Anonymous process memory has backing store?
 		 * Try to allocate it some swap space here.
@@ -1684,6 +1757,17 @@ static unsigned int shrink_page_list(struct list_head *page_list,
 		list_add(&page->lru, &ret_pages);
 		VM_BUG_ON_PAGE(PageLRU(page) || PageUnevictable(page), page);
 	}
+	/* 'page_list' is always empty here */
+
+	/* Migrate pages selected for demotion */
+	nr_reclaimed += demote_page_list(&demote_pages, pgdat);
+	/* Pages that could not be demoted are still in @demote_pages */
+	if (!list_empty(&demote_pages)) {
+		/* Pages which failed to demoted go back on @page_list for retry: */
+		list_splice_init(&demote_pages, page_list);
+		do_demote_pass = false;
+		goto retry;
+	}
 
 	pgactivate = stat->nr_activate[0] + stat->nr_activate[1];
 
@@ -2329,6 +2413,7 @@ unsigned long reclaim_pages(struct list_head *page_list)
 		.may_writepage = 1,
 		.may_unmap = 1,
 		.may_swap = 1,
+		.no_demotion = 1,
 	};
 
 	noreclaim_flag = memalloc_noreclaim_save();
-- 
2.30.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 27128C636C9
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:42:30 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 0C9A861029
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:42:30 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234155AbhGUGBh (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 02:01:37 -0400
Received: from mga06.intel.com ([134.134.136.31]:44375 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S234215AbhGUF7F (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 01:59:05 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10051"; a="272496372"
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="272496372"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:42 -0700
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="511389991"
Received: from yhuang6-desk2.sh.intel.com ([10.239.159.119])
  by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:39 -0700
From: Huang Ying <ying.huang@intel.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        "Huang, Ying" <ying.huang@intel.com>,
        Oscar Salvador <osalvador@suse.de>,
        Yang Shi <shy828301@gmail.com>, Zi Yan <ziy@nvidia.com>,
        Michal Hocko <mhocko@suse.com>, Wei Xu <weixugc@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        David Rientjes <rientjes@google.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>
Subject: [PATCH -V11 3/9] mm/migrate: enable returning precise migrate_pages() success count
Date: Wed, 21 Jul 2021 14:39:20 +0800
Message-Id: <20210721063926.3024591-3-ying.huang@intel.com>
X-Mailer: git-send-email 2.30.2
In-Reply-To: <20210721063926.3024591-1-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Yang Shi <yang.shi@linux.alibaba.com>

Under normal circumstances, migrate_pages() returns the number of pages
migrated.  In error conditions, it returns an error code.  When returning
an error code, there is no way to know how many pages were migrated or not
migrated.

Make migrate_pages() return how many pages are demoted successfully for
all cases, including when encountering errors.  Page reclaim behavior will
depend on this in subsequent patches.

Link: https://lkml.kernel.org/r/20210715055145.195411-4-ying.huang@intel.com
Signed-off-by: Yang Shi <yang.shi@linux.alibaba.com>
Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
Suggested-by: Oscar Salvador <osalvador@suse.de> [optional parameter]
Reviewed-by: Yang Shi <shy828301@gmail.com>
Reviewed-by: Zi Yan <ziy@nvidia.com>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Wei Xu <weixugc@google.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Greg Thelen <gthelen@google.com>
Cc: Keith Busch <kbusch@kernel.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 include/linux/migrate.h |  5 +++--
 mm/compaction.c         |  2 +-
 mm/gup.c                |  2 +-
 mm/memory-failure.c     |  2 +-
 mm/memory_hotplug.c     |  2 +-
 mm/mempolicy.c          |  4 ++--
 mm/migrate.c            | 11 ++++++++---
 mm/page_alloc.c         |  2 +-
 8 files changed, 18 insertions(+), 12 deletions(-)

diff --git a/include/linux/migrate.h b/include/linux/migrate.h
index 23dadf7aeba8..8ab88d46318e 100644
--- a/include/linux/migrate.h
+++ b/include/linux/migrate.h
@@ -41,7 +41,8 @@ extern int migrate_page(struct address_space *mapping,
 			struct page *newpage, struct page *page,
 			enum migrate_mode mode);
 extern int migrate_pages(struct list_head *l, new_page_t new, free_page_t free,
-		unsigned long private, enum migrate_mode mode, int reason);
+		unsigned long private, enum migrate_mode mode, int reason,
+		unsigned int *ret_succeeded);
 extern struct page *alloc_migration_target(struct page *page, unsigned long private);
 extern int isolate_movable_page(struct page *page, isolate_mode_t mode);
 
@@ -56,7 +57,7 @@ extern int migrate_page_move_mapping(struct address_space *mapping,
 static inline void putback_movable_pages(struct list_head *l) {}
 static inline int migrate_pages(struct list_head *l, new_page_t new,
 		free_page_t free, unsigned long private, enum migrate_mode mode,
-		int reason)
+		int reason, unsigned int *ret_succeeded)
 	{ return -ENOSYS; }
 static inline struct page *alloc_migration_target(struct page *page,
 		unsigned long private)
diff --git a/mm/compaction.c b/mm/compaction.c
index ed37e1cb4369..79aaf21058da 100644
--- a/mm/compaction.c
+++ b/mm/compaction.c
@@ -2392,7 +2392,7 @@ compact_zone(struct compact_control *cc, struct capture_control *capc)
 
 		err = migrate_pages(&cc->migratepages, compaction_alloc,
 				compaction_free, (unsigned long)cc, cc->mode,
-				MR_COMPACTION);
+				MR_COMPACTION, NULL);
 
 		trace_mm_compaction_migratepages(cc->nr_migratepages, err,
 							&cc->migratepages);
diff --git a/mm/gup.c b/mm/gup.c
index 42b8b1fa6521..c4441fc4cfba 100644
--- a/mm/gup.c
+++ b/mm/gup.c
@@ -1772,7 +1772,7 @@ static long check_and_migrate_movable_pages(unsigned long nr_pages,
 	if (!list_empty(&movable_page_list)) {
 		ret = migrate_pages(&movable_page_list, alloc_migration_target,
 				    NULL, (unsigned long)&mtc, MIGRATE_SYNC,
-				    MR_LONGTERM_PIN);
+				    MR_LONGTERM_PIN, NULL);
 		if (ret && !list_empty(&movable_page_list))
 			putback_movable_pages(&movable_page_list);
 	}
diff --git a/mm/memory-failure.c b/mm/memory-failure.c
index eefd823deb67..3eed65e56f93 100644
--- a/mm/memory-failure.c
+++ b/mm/memory-failure.c
@@ -2093,7 +2093,7 @@ static int __soft_offline_page(struct page *page)
 
 	if (isolate_page(hpage, &pagelist)) {
 		ret = migrate_pages(&pagelist, alloc_migration_target, NULL,
-			(unsigned long)&mtc, MIGRATE_SYNC, MR_MEMORY_FAILURE);
+			(unsigned long)&mtc, MIGRATE_SYNC, MR_MEMORY_FAILURE, NULL);
 		if (!ret) {
 			bool release = !huge;
 
diff --git a/mm/memory_hotplug.c b/mm/memory_hotplug.c
index 0bb73fd1035a..d45c69d78b83 100644
--- a/mm/memory_hotplug.c
+++ b/mm/memory_hotplug.c
@@ -1462,7 +1462,7 @@ do_migrate_range(unsigned long start_pfn, unsigned long end_pfn)
 		if (nodes_empty(nmask))
 			node_set(mtc.nid, nmask);
 		ret = migrate_pages(&source, alloc_migration_target, NULL,
-			(unsigned long)&mtc, MIGRATE_SYNC, MR_MEMORY_HOTPLUG);
+			(unsigned long)&mtc, MIGRATE_SYNC, MR_MEMORY_HOTPLUG, NULL);
 		if (ret) {
 			list_for_each_entry(page, &source, lru) {
 				if (__ratelimit(&migrate_rs)) {
diff --git a/mm/mempolicy.c b/mm/mempolicy.c
index e5ce5a7e8d92..f58c38ea1e83 100644
--- a/mm/mempolicy.c
+++ b/mm/mempolicy.c
@@ -1084,7 +1084,7 @@ static int migrate_to_node(struct mm_struct *mm, int source, int dest,
 
 	if (!list_empty(&pagelist)) {
 		err = migrate_pages(&pagelist, alloc_migration_target, NULL,
-				(unsigned long)&mtc, MIGRATE_SYNC, MR_SYSCALL);
+				(unsigned long)&mtc, MIGRATE_SYNC, MR_SYSCALL, NULL);
 		if (err)
 			putback_movable_pages(&pagelist);
 	}
@@ -1338,7 +1338,7 @@ static long do_mbind(unsigned long start, unsigned long len,
 		if (!list_empty(&pagelist)) {
 			WARN_ON_ONCE(flags & MPOL_MF_LAZY);
 			nr_failed = migrate_pages(&pagelist, new_page, NULL,
-				start, MIGRATE_SYNC, MR_MEMPOLICY_MBIND);
+				start, MIGRATE_SYNC, MR_MEMPOLICY_MBIND, NULL);
 			if (nr_failed)
 				putback_movable_pages(&pagelist);
 		}
diff --git a/mm/migrate.c b/mm/migrate.c
index a40c391f9ca7..35d34ef837ed 100644
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@ -1429,6 +1429,8 @@ static inline int try_split_thp(struct page *page, struct page **page2,
  * @mode:		The migration mode that specifies the constraints for
  *			page migration, if any.
  * @reason:		The reason for page migration.
+ * @ret_succeeded:	Set to the number of pages migrated successfully if
+ *			the caller passes a non-NULL pointer.
  *
  * The function returns after 10 attempts or if no pages are movable any more
  * because the list has become empty or no retryable pages exist any more.
@@ -1439,7 +1441,7 @@ static inline int try_split_thp(struct page *page, struct page **page2,
  */
 int migrate_pages(struct list_head *from, new_page_t get_new_page,
 		free_page_t put_new_page, unsigned long private,
-		enum migrate_mode mode, int reason)
+		enum migrate_mode mode, int reason, unsigned int *ret_succeeded)
 {
 	int retry = 1;
 	int thp_retry = 1;
@@ -1594,6 +1596,9 @@ int migrate_pages(struct list_head *from, new_page_t get_new_page,
 	if (!swapwrite)
 		current->flags &= ~PF_SWAPWRITE;
 
+	if (ret_succeeded)
+		*ret_succeeded = nr_succeeded;
+
 	return rc;
 }
 
@@ -1663,7 +1668,7 @@ static int do_move_pages_to_node(struct mm_struct *mm,
 	};
 
 	err = migrate_pages(pagelist, alloc_migration_target, NULL,
-			(unsigned long)&mtc, MIGRATE_SYNC, MR_SYSCALL);
+		(unsigned long)&mtc, MIGRATE_SYNC, MR_SYSCALL, NULL);
 	if (err)
 		putback_movable_pages(pagelist);
 	return err;
@@ -2178,7 +2183,7 @@ int migrate_misplaced_page(struct page *page, struct vm_area_struct *vma,
 
 	list_add(&page->lru, &migratepages);
 	nr_remaining = migrate_pages(&migratepages, *new, NULL, node,
-				     MIGRATE_ASYNC, MR_NUMA_MISPLACED);
+				     MIGRATE_ASYNC, MR_NUMA_MISPLACED, NULL);
 	if (nr_remaining) {
 		if (!list_empty(&migratepages)) {
 			list_del(&page->lru);
diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 942417c78a8a..62dc229c1dd1 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -8969,7 +8969,7 @@ static int __alloc_contig_migrate_range(struct compact_control *cc,
 		cc->nr_migratepages -= nr_reclaimed;
 
 		ret = migrate_pages(&cc->migratepages, alloc_migration_target,
-				NULL, (unsigned long)&mtc, cc->mode, MR_CONTIG_RANGE);
+			NULL, (unsigned long)&mtc, cc->mode, MR_CONTIG_RANGE, NULL);
 
 		/*
 		 * On -ENOMEM, migrate_pages() bails out right away. It is pointless
-- 
2.30.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-16.8 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,INCLUDES_CR_TRAILER,INCLUDES_PATCH,
	MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS,USER_AGENT_GIT autolearn=ham
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 89671C12002
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:42:14 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 6129661244
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 06:42:14 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234310AbhGUF76 (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 01:59:58 -0400
Received: from mga18.intel.com ([134.134.136.126]:64547 "EHLO mga18.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S234144AbhGUF7A (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 01:59:00 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10051"; a="198653175"
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="198653175"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:35 -0700
X-IronPort-AV: E=Sophos;i="5.84,257,1620716400"; 
   d="scan'208";a="511389969"
Received: from yhuang6-desk2.sh.intel.com ([10.239.159.119])
  by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 20 Jul 2021 23:39:31 -0700
From: Huang Ying <ying.huang@intel.com>
To: Andrew Morton <akpm@linux-foundation.org>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Dave Hansen <dave.hansen@linux.intel.com>,
        "Huang, Ying" <ying.huang@intel.com>,
        Yang Shi <shy828301@gmail.com>, Zi Yan <ziy@nvidia.com>,
        Oscar Salvador <osalvador@suse.de>,
        Michal Hocko <mhocko@suse.com>, Wei Xu <weixugc@google.com>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>,
        Yang Shi <yang.shi@linux.alibaba.com>
Subject: [PATCH -V11 1/9] mm/numa: automatically generate node migration order
Date: Wed, 21 Jul 2021 14:39:18 +0800
Message-Id: <20210721063926.3024591-1-ying.huang@intel.com>
X-Mailer: git-send-email 2.30.2
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

From: Dave Hansen <dave.hansen@linux.intel.com>

This patchset is generated via

- `git format-patch` the V10 patchset in the mmots tree of 2021-07-15

The changes are as follows,

- Revise the patch description of [1/9] based on the previous discussion

- Rename can_demote_anon_pages() to can_demote() to reflect the fact
  that the function is for anon and file pages.

--

Patch series "Migrate Pages in lieu of discard", v11.

We're starting to see systems with more and more kinds of memory such as
Intel's implementation of persistent memory.

Let's say you have a system with some DRAM and some persistent memory.
Today, once DRAM fills up, reclaim will start and some of the DRAM
contents will be thrown out.  Allocations will, at some point, start
falling over to the slower persistent memory.

That has two nasty properties.  First, the newer allocations can end up in
the slower persistent memory.  Second, reclaimed data in DRAM are just
discarded even if there are gobs of space in persistent memory that could
be used.

This patchset implements a solution to these problems.  At the end of the
reclaim process in shrink_page_list() just before the last page refcount
is dropped, the page is migrated to persistent memory instead of being
dropped.

While I've talked about a DRAM/PMEM pairing, this approach would function
in any environment where memory tiers exist.

This is not perfect.  It "strands" pages in slower memory and never brings
them back to fast DRAM.  Huang Ying has follow-on work which repurposes
NUMA balancing to promote hot pages back to DRAM.

This is also all based on an upstream mechanism that allows persistent
memory to be onlined and used as if it were volatile:

	http://lkml.kernel.org/r/20190124231441.37A4A305@viggo.jf.intel.com

With that, the DRAM and PMEM in each socket will be represented as 2
separate NUMA nodes, with the CPUs sit in the DRAM node.  So the
general inter-NUMA demotion mechanism introduced in the patchset can
migrate the cold DRAM pages to the PMEM node.

We have tested the patchset with the postgresql and pgbench.  On a
2-socket server machine with DRAM and PMEM, the kernel with the patchset
can improve the score of pgbench up to 22.1% compared with that of the
DRAM only + disk case.  This comes from the reduced disk read throughput
(which reduces up to 70.8%).

== Open Issues ==

 * Memory policies and cpusets that, for instance, restrict allocations
   to DRAM can be demoted to PMEM whenever they opt in to this
   new mechanism.  A cgroup-level API to opt-in or opt-out of
   these migrations will likely be required as a follow-on.
 * Could be more aggressive about where anon LRU scanning occurs
   since it no longer necessarily involves I/O.  get_scan_count()
   for instance says: "If we have no swap space, do not bother
   scanning anon pages"


This patch (of 9):

Prepare for the kernel to auto-migrate pages to other memory nodes with a
node migration table.  This allows creating single migration target for
each NUMA node to enable the kernel to do NUMA page migrations instead of
simply discarding colder pages.  A node with no target is a "terminal
node", so reclaim acts normally there.  The migration target does not
fundamentally _need_ to be a single node, but this implementation starts
there to limit complexity.

When memory fills up on a node, memory contents can be automatically
migrated to another node.  The biggest problems are knowing when to
migrate and to where the migration should be targeted.

The most straightforward way to generate the "to where" list would be to
follow the page allocator fallback lists.  Those lists already tell us if
memory is full where to look next.  It would also be logical to move
memory in that order.

But, the allocator fallback lists have a fatal flaw: most nodes appear in
all the lists.  This would potentially lead to migration cycles (A->B,
B->A, A->B, ...).

Instead of using the allocator fallback lists directly, keep a separate
node migration ordering.  But, reuse the same data used to generate page
allocator fallback in the first place: find_next_best_node().

This means that the firmware data used to populate node distances
essentially dictates the ordering for now.  It should also be
architecture-neutral since all NUMA architectures have a working
find_next_best_node().

RCU is used to allow lock-less read of node_demotion[] and prevent
demotion cycles been observed.  If multiple reads of node_demotion[] are
performed, a single rcu_read_lock() must be held over all reads to ensure
no cycles are observed.  Details are as follows.

=== What does RCU provide? ===

Imagine a simple loop which walks down the demotion path looking
for the last node:

        terminal_node = start_node;
        while (node_demotion[terminal_node] != NUMA_NO_NODE) {
                terminal_node = node_demotion[terminal_node];
        }

The initial values are:

        node_demotion[0] = 1;
        node_demotion[1] = NUMA_NO_NODE;

and are updated to:

        node_demotion[0] = NUMA_NO_NODE;
        node_demotion[1] = 0;

What guarantees that the cycle is not observed:

        node_demotion[0] = 1;
        node_demotion[1] = 0;

and would loop forever?

With RCU, a rcu_read_lock/unlock() can be placed around the loop.  Since
the write side does a synchronize_rcu(), the loop that observed the old
contents is known to be complete before the synchronize_rcu() has
completed.

RCU, combined with disable_all_migrate_targets(), ensures that the old
migration state is not visible by the time __set_migration_target_nodes()
is called.

=== What does READ_ONCE() provide? ===

READ_ONCE() forbids the compiler from merging or reordering successive
reads of node_demotion[].  This ensures that any updates are *eventually*
observed.

Consider the above loop again.  The compiler could theoretically read the
entirety of node_demotion[] into local storage (registers) and never go
back to memory, and *permanently* observe bad values for node_demotion[].

Note: RCU does not provide any universal compiler-ordering
guarantees:

	https://lore.kernel.org/lkml/20150921204327.GH4029@linux.vnet.ibm.com/

This code is unused for now.  It will be called later in the
series.

Link: https://lkml.kernel.org/r/20210715055145.195411-1-ying.huang@intel.com
Link: https://lkml.kernel.org/r/20210715055145.195411-2-ying.huang@intel.com
Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
Reviewed-by: Yang Shi <shy828301@gmail.com>
Reviewed-by: Zi Yan <ziy@nvidia.com>
Reviewed-by: Oscar Salvador <osalvador@suse.de>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Wei Xu <weixugc@google.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Dan Williams <dan.j.williams@intel.com>
Cc: David Hildenbrand <david@redhat.com>
Cc: Greg Thelen <gthelen@google.com>
Cc: Keith Busch <kbusch@kernel.org>
Cc: Yang Shi <yang.shi@linux.alibaba.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
---
 mm/internal.h   |   5 ++
 mm/migrate.c    | 216 ++++++++++++++++++++++++++++++++++++++++++++++++
 mm/page_alloc.c |   2 +-
 3 files changed, 222 insertions(+), 1 deletion(-)

diff --git a/mm/internal.h b/mm/internal.h
index 57e28261a3b1..cf3cb933eba3 100644
--- a/mm/internal.h
+++ b/mm/internal.h
@@ -543,12 +543,17 @@ static inline void mminit_validate_memmodel_limits(unsigned long *start_pfn,
 
 #ifdef CONFIG_NUMA
 extern int node_reclaim(struct pglist_data *, gfp_t, unsigned int);
+extern int find_next_best_node(int node, nodemask_t *used_node_mask);
 #else
 static inline int node_reclaim(struct pglist_data *pgdat, gfp_t mask,
 				unsigned int order)
 {
 	return NODE_RECLAIM_NOSCAN;
 }
+static inline int find_next_best_node(int node, nodemask_t *used_node_mask)
+{
+	return NUMA_NO_NODE;
+}
 #endif
 
 extern int hwpoison_filter(struct page *p);
diff --git a/mm/migrate.c b/mm/migrate.c
index 34a9ad3e0a4f..b7a40ab47648 100644
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@ -1099,6 +1099,80 @@ static int __unmap_and_move(struct page *page, struct page *newpage,
 	return rc;
 }
 
+
+/*
+ * node_demotion[] example:
+ *
+ * Consider a system with two sockets.  Each socket has
+ * three classes of memory attached: fast, medium and slow.
+ * Each memory class is placed in its own NUMA node.  The
+ * CPUs are placed in the node with the "fast" memory.  The
+ * 6 NUMA nodes (0-5) might be split among the sockets like
+ * this:
+ *
+ *	Socket A: 0, 1, 2
+ *	Socket B: 3, 4, 5
+ *
+ * When Node 0 fills up, its memory should be migrated to
+ * Node 1.  When Node 1 fills up, it should be migrated to
+ * Node 2.  The migration path start on the nodes with the
+ * processors (since allocations default to this node) and
+ * fast memory, progress through medium and end with the
+ * slow memory:
+ *
+ *	0 -> 1 -> 2 -> stop
+ *	3 -> 4 -> 5 -> stop
+ *
+ * This is represented in the node_demotion[] like this:
+ *
+ *	{  1, // Node 0 migrates to 1
+ *	   2, // Node 1 migrates to 2
+ *	  -1, // Node 2 does not migrate
+ *	   4, // Node 3 migrates to 4
+ *	   5, // Node 4 migrates to 5
+ *	  -1} // Node 5 does not migrate
+ */
+
+/*
+ * Writes to this array occur without locking.  Cycles are
+ * not allowed: Node X demotes to Y which demotes to X...
+ *
+ * If multiple reads are performed, a single rcu_read_lock()
+ * must be held over all reads to ensure that no cycles are
+ * observed.
+ */
+static int node_demotion[MAX_NUMNODES] __read_mostly =
+	{[0 ...  MAX_NUMNODES - 1] = NUMA_NO_NODE};
+
+/**
+ * next_demotion_node() - Get the next node in the demotion path
+ * @node: The starting node to lookup the next node
+ *
+ * @returns: node id for next memory node in the demotion path hierarchy
+ * from @node; NUMA_NO_NODE if @node is terminal.  This does not keep
+ * @node online or guarantee that it *continues* to be the next demotion
+ * target.
+ */
+int next_demotion_node(int node)
+{
+	int target;
+
+	/*
+	 * node_demotion[] is updated without excluding this
+	 * function from running.  RCU doesn't provide any
+	 * compiler barriers, so the READ_ONCE() is required
+	 * to avoid compiler reordering or read merging.
+	 *
+	 * Make sure to use RCU over entire code blocks if
+	 * node_demotion[] reads need to be consistent.
+	 */
+	rcu_read_lock();
+	target = READ_ONCE(node_demotion[node]);
+	rcu_read_unlock();
+
+	return target;
+}
+
 /*
  * Obtain the lock on page, remove all ptes and migrate the page
  * to the newly allocated page in newpage.
@@ -2982,3 +3056,145 @@ void migrate_vma_finalize(struct migrate_vma *migrate)
 }
 EXPORT_SYMBOL(migrate_vma_finalize);
 #endif /* CONFIG_DEVICE_PRIVATE */
+
+/* Disable reclaim-based migration. */
+static void __disable_all_migrate_targets(void)
+{
+	int node;
+
+	for_each_online_node(node)
+		node_demotion[node] = NUMA_NO_NODE;
+}
+
+static void disable_all_migrate_targets(void)
+{
+	__disable_all_migrate_targets();
+
+	/*
+	 * Ensure that the "disable" is visible across the system.
+	 * Readers will see either a combination of before+disable
+	 * state or disable+after.  They will never see before and
+	 * after state together.
+	 *
+	 * The before+after state together might have cycles and
+	 * could cause readers to do things like loop until this
+	 * function finishes.  This ensures they can only see a
+	 * single "bad" read and would, for instance, only loop
+	 * once.
+	 */
+	synchronize_rcu();
+}
+
+/*
+ * Find an automatic demotion target for 'node'.
+ * Failing here is OK.  It might just indicate
+ * being at the end of a chain.
+ */
+static int establish_migrate_target(int node, nodemask_t *used)
+{
+	int migration_target;
+
+	/*
+	 * Can not set a migration target on a
+	 * node with it already set.
+	 *
+	 * No need for READ_ONCE() here since this
+	 * in the write path for node_demotion[].
+	 * This should be the only thread writing.
+	 */
+	if (node_demotion[node] != NUMA_NO_NODE)
+		return NUMA_NO_NODE;
+
+	migration_target = find_next_best_node(node, used);
+	if (migration_target == NUMA_NO_NODE)
+		return NUMA_NO_NODE;
+
+	node_demotion[node] = migration_target;
+
+	return migration_target;
+}
+
+/*
+ * When memory fills up on a node, memory contents can be
+ * automatically migrated to another node instead of
+ * discarded at reclaim.
+ *
+ * Establish a "migration path" which will start at nodes
+ * with CPUs and will follow the priorities used to build the
+ * page allocator zonelists.
+ *
+ * The difference here is that cycles must be avoided.  If
+ * node0 migrates to node1, then neither node1, nor anything
+ * node1 migrates to can migrate to node0.
+ *
+ * This function can run simultaneously with readers of
+ * node_demotion[].  However, it can not run simultaneously
+ * with itself.  Exclusion is provided by memory hotplug events
+ * being single-threaded.
+ */
+static void __set_migration_target_nodes(void)
+{
+	nodemask_t next_pass	= NODE_MASK_NONE;
+	nodemask_t this_pass	= NODE_MASK_NONE;
+	nodemask_t used_targets = NODE_MASK_NONE;
+	int node;
+
+	/*
+	 * Avoid any oddities like cycles that could occur
+	 * from changes in the topology.  This will leave
+	 * a momentary gap when migration is disabled.
+	 */
+	disable_all_migrate_targets();
+
+	/*
+	 * Allocations go close to CPUs, first.  Assume that
+	 * the migration path starts at the nodes with CPUs.
+	 */
+	next_pass = node_states[N_CPU];
+again:
+	this_pass = next_pass;
+	next_pass = NODE_MASK_NONE;
+	/*
+	 * To avoid cycles in the migration "graph", ensure
+	 * that migration sources are not future targets by
+	 * setting them in 'used_targets'.  Do this only
+	 * once per pass so that multiple source nodes can
+	 * share a target node.
+	 *
+	 * 'used_targets' will become unavailable in future
+	 * passes.  This limits some opportunities for
+	 * multiple source nodes to share a destination.
+	 */
+	nodes_or(used_targets, used_targets, this_pass);
+	for_each_node_mask(node, this_pass) {
+		int target_node = establish_migrate_target(node, &used_targets);
+
+		if (target_node == NUMA_NO_NODE)
+			continue;
+
+		/*
+		 * Visit targets from this pass in the next pass.
+		 * Eventually, every node will have been part of
+		 * a pass, and will become set in 'used_targets'.
+		 */
+		node_set(target_node, next_pass);
+	}
+	/*
+	 * 'next_pass' contains nodes which became migration
+	 * targets in this pass.  Make additional passes until
+	 * no more migrations targets are available.
+	 */
+	if (!nodes_empty(next_pass))
+		goto again;
+}
+
+/*
+ * For callers that do not hold get_online_mems() already.
+ */
+__maybe_unused // <- temporay to prevent warnings during bisects
+static void set_migration_target_nodes(void)
+{
+	get_online_mems();
+	__set_migration_target_nodes();
+	put_online_mems();
+}
diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 29f41d095002..942417c78a8a 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -6139,7 +6139,7 @@ static int node_load[MAX_NUMNODES];
  *
  * Return: node id of the found node or %NUMA_NO_NODE if no node is found.
  */
-static int find_next_best_node(int node, nodemask_t *used_node_mask)
+int find_next_best_node(int node, nodemask_t *used_node_mask)
 {
 	int n, val;
 	int min_val = INT_MAX;
-- 
2.30.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id C5822C433EF
	for <linux-kernel@archiver.kernel.org>; Thu, 24 Feb 2022 00:06:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S245134AbiBXAGh (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 23 Feb 2022 19:06:37 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:56384 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S239487AbiBXAGg (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 23 Feb 2022 19:06:36 -0500
Received: from mga06.intel.com (mga06.intel.com [134.134.136.31])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id B253558380
        for <linux-kernel@vger.kernel.org>; Wed, 23 Feb 2022 16:06:04 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1645661164; x=1677197164;
  h=message-id:date:mime-version:to:cc:references:from:
   subject:in-reply-to:content-transfer-encoding;
  bh=Uu+jTVal72wWHq+zRSDpCjRHJopUoZhOIPfQFDisbtU=;
  b=UZmRO4wP5INCTYApUxIveaRquM5lsq6ho+icEkZ0kn4zOPjcAQcFQqWZ
   +fvfFQ5uESqJLjnwITl1NQ+BM8YxAhnIkyjZuI9L63AuB7v2EFExFjy3i
   8eEwS1pVlR7AXf4WfMIOtiMTNHuRzFckrRrEodeEQj594p7j/JMuzSDjf
   9RHo48QaFFkKUn1wdsQuzuwyaz/7eA/XAQk9KKCoqgZccsghXcllvsSGF
   RO0C8hn05oUoz3xohvijDUmUdzRHOQS5LHxR4jwYtUCJLH7DM5G7pq1FQ
   HdUhjp2jYM41pmjQ8pWTscTN2/oE44NmI/pn6f/ng1Ifn9e48Ofnzu0ki
   w==;
X-IronPort-AV: E=McAfee;i="6200,9189,10267"; a="312828359"
X-IronPort-AV: E=Sophos;i="5.88,392,1635231600"; 
   d="scan'208";a="312828359"
Received: from orsmga003.jf.intel.com ([10.7.209.27])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 23 Feb 2022 16:06:04 -0800
X-IronPort-AV: E=Sophos;i="5.88,392,1635231600"; 
   d="scan'208";a="491398664"
Received: from chakanog-mobl.amr.corp.intel.com (HELO [10.212.198.215]) ([10.212.198.215])
  by orsmga003-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 23 Feb 2022 16:06:03 -0800
Message-ID: <f5edb9dc-8b25-47c2-9905-09e88e41861b@intel.com>
Date: Wed, 23 Feb 2022 16:05:59 -0800
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.5.0
Content-Language: en-US
To: Abhishek Goel <huntbag@linux.vnet.ibm.com>,
        Dave Hansen <dave.hansen@linux.intel.com>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Zi Yan <ziy@nvidia.com>, David Hildenbrand <david@redhat.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Huang Ying <ying.huang@intel.com>,
        Andrew Morton <akpm@linux-foundation.org>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-2-ying.huang@intel.com>
 <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
From: Dave Hansen <dave.hansen@intel.com>
Subject: Re: [PATCH -V11 2/9] mm/migrate: update node demotion order on
 hotplug events
In-Reply-To: <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 2/23/22 15:02, Abhishek Goel wrote:
> If needed, I will provide experiment results and traces that were used
> to conclude this.

It would be great if you can provide some more info.  Even just a CPU
time profile would be helpful.

It would also be great to understand more about what "hotplug on power
systems" actually means.  Is this a synthetic benchmark, or are actual
end-users running into this issue?  Are entire nodes of CPUs going
offline?  Or is this just doing an offline/online of CPU 22 in a 100-CPU
NUMA node?

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 85CD0C433EF
	for <linux-kernel@archiver.kernel.org>; Wed, 23 Feb 2022 23:03:11 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S244698AbiBWXDi (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 23 Feb 2022 18:03:38 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:44840 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S234474AbiBWXDg (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 23 Feb 2022 18:03:36 -0500
Received: from mx0a-001b2d01.pphosted.com (mx0b-001b2d01.pphosted.com [148.163.158.5])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 651D55715E
        for <linux-kernel@vger.kernel.org>; Wed, 23 Feb 2022 15:03:07 -0800 (PST)
Received: from pps.filterd (m0098413.ppops.net [127.0.0.1])
        by mx0b-001b2d01.pphosted.com (8.16.1.2/8.16.1.2) with SMTP id 21NLkpmA007359;
        Wed, 23 Feb 2022 23:03:02 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ibm.com; h=message-id : date :
 subject : to : cc : references : from : in-reply-to : content-type :
 content-transfer-encoding : mime-version; s=pp1;
 bh=df9oL0BxwL53oqsYNSY+RoJOe2vYAFtgm9R2PxkFKDI=;
 b=EczgsH6rupFpTltVpdlGgsw8qM9nXxFNk0KlfsZWxtrfU0GjpgZbxx307bT/Ic0IBBt6
 vN5ieSgCZOWJshFoNuCys2tCSvX4CGjPQbhuTTpubNA8lpdnBG1cceF2+YgKz7Ix0BPY
 2WD+kowdF4kVEXBZP5BusyAgSKh5HPId6BDqequtPTMw9vSJqSAYqiLJPrWDfURYI4pW
 kyyUoln3sXZJoWY3EH/tyHMOs4UYr8k+TT8ZiuUIESY+IX2Dvt5+9UXfrm1afKHrNxd3
 mMnUjT6tb6qY5BWuhXrv/6Yf3XoYd4fB9UptxgYap3KPQNJKR+bfS2R/Rgjqve2pYwFN rA== 
Received: from pps.reinject (localhost [127.0.0.1])
        by mx0b-001b2d01.pphosted.com with ESMTP id 3edw511a26-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
        Wed, 23 Feb 2022 23:03:01 +0000
Received: from m0098413.ppops.net (m0098413.ppops.net [127.0.0.1])
        by pps.reinject (8.16.0.43/8.16.0.43) with SMTP id 21NMuBEC017666;
        Wed, 23 Feb 2022 23:03:01 GMT
Received: from ppma03ams.nl.ibm.com (62.31.33a9.ip4.static.sl-reverse.com [169.51.49.98])
        by mx0b-001b2d01.pphosted.com with ESMTP id 3edw511a1h-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
        Wed, 23 Feb 2022 23:03:01 +0000
Received: from pps.filterd (ppma03ams.nl.ibm.com [127.0.0.1])
        by ppma03ams.nl.ibm.com (8.16.1.2/8.16.1.2) with SMTP id 21NN2ntQ008360;
        Wed, 23 Feb 2022 23:02:59 GMT
Received: from b06cxnps3074.portsmouth.uk.ibm.com (d06relay09.portsmouth.uk.ibm.com [9.149.109.194])
        by ppma03ams.nl.ibm.com with ESMTP id 3ear69d6cp-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
        Wed, 23 Feb 2022 23:02:59 +0000
Received: from d06av23.portsmouth.uk.ibm.com (d06av23.portsmouth.uk.ibm.com [9.149.105.59])
        by b06cxnps3074.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id 21NN2vSZ45810056
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Wed, 23 Feb 2022 23:02:57 GMT
Received: from d06av23.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id DA774A405B;
        Wed, 23 Feb 2022 23:02:56 +0000 (GMT)
Received: from d06av23.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id 42092A4040;
        Wed, 23 Feb 2022 23:02:54 +0000 (GMT)
Received: from [9.43.109.214] (unknown [9.43.109.214])
        by d06av23.portsmouth.uk.ibm.com (Postfix) with ESMTP;
        Wed, 23 Feb 2022 23:02:53 +0000 (GMT)
Message-ID: <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
Date: Thu, 24 Feb 2022 04:32:52 +0530
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.5.0
Subject: Re: [PATCH -V11 2/9] mm/migrate: update node demotion order on
 hotplug events
Content-Language: en-US
To: Dave Hansen <dave.hansen@linux.intel.com>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Zi Yan <ziy@nvidia.com>, David Hildenbrand <david@redhat.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Huang Ying <ying.huang@intel.com>,
        Andrew Morton <akpm@linux-foundation.org>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-2-ying.huang@intel.com>
From: Abhishek Goel <huntbag@linux.vnet.ibm.com>
In-Reply-To: <20210721063926.3024591-2-ying.huang@intel.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
X-TM-AS-GCONF: 00
X-Proofpoint-GUID: Ih_O3fL9gF_5JvNi810rRXyqtqsK8EpM
X-Proofpoint-ORIG-GUID: J3gs5CQzjGhSx4z_qmCpVHtXPU6KSzV_
Content-Transfer-Encoding: 7bit
X-Proofpoint-UnRewURL: 0 URL was un-rewritten
MIME-Version: 1.0
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.205,Aquarius:18.0.816,Hydra:6.0.425,FMLib:17.11.64.514
 definitions=2022-02-23_09,2022-02-23_01,2022-02-23_01
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0 mlxlogscore=999
 suspectscore=0 priorityscore=1501 lowpriorityscore=0 spamscore=0
 mlxscore=0 adultscore=0 bulkscore=0 malwarescore=0 phishscore=0
 impostorscore=0 clxscore=1011 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.12.0-2201110000 definitions=main-2202230130
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Dave,


> From: Dave Hansen <dave.hansen@linux.intel.com>
>
> Reclaim-based migration is attempting to optimize data placement in memory
> based on the system topology.  If the system changes, so must the
> migration ordering.
>
> The implementation is conceptually simple and entirely unoptimized.  On
> any memory or CPU hotplug events, assume that a node was added or removed
> and recalculate all migration targets.  This ensures that the
> node_demotion[] array is always ready to be used in case the new reclaim
> mode is enabled.
>
> This recalculation is far from optimal, most glaringly that it does not
> even attempt to figure out the hotplug event would have some *actual*
> effect on the demotion order.  But, given the expected paucity of hotplug
> events, this should be fine.
>
> Link: https://lkml.kernel.org/r/20210715055145.195411-3-ying.huang@intel.com
> Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
> Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
> Reviewed-by: Yang Shi <shy828301@gmail.com>
> Reviewed-by: Zi Yan <ziy@nvidia.com>
> Cc: Michal Hocko <mhocko@suse.com>
> Cc: Wei Xu <weixugc@google.com>
> Cc: Oscar Salvador <osalvador@suse.de>
> Cc: David Rientjes <rientjes@google.com>
> Cc: Dan Williams <dan.j.williams@intel.com>
> Cc: David Hildenbrand <david@redhat.com>
> Cc: Greg Thelen <gthelen@google.com>
> Cc: Keith Busch <kbusch@kernel.org>
> Cc: Yang Shi <yang.shi@linux.alibaba.com>
> Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
> ---
>   mm/migrate.c | 90 +++++++++++++++++++++++++++++++++++++++++++++++++++-
>   1 file changed, 89 insertions(+), 1 deletion(-)
>
> diff --git a/mm/migrate.c b/mm/migrate.c
> index b7a40ab47648..a40c391f9ca7 100644
> --- a/mm/migrate.c
> +++ b/mm/migrate.c
> @@ -49,6 +49,7 @@
>   #include <linux/sched/mm.h>
>   #include <linux/ptrace.h>
>   #include <linux/oom.h>
> +#include <linux/memory.h>
>   
>   #include <asm/tlbflush.h>
>   
> @@ -3057,6 +3058,7 @@ void migrate_vma_finalize(struct migrate_vma *migrate)
>   EXPORT_SYMBOL(migrate_vma_finalize);
>   #endif /* CONFIG_DEVICE_PRIVATE */
>   
> +#if defined(CONFIG_MEMORY_HOTPLUG)
>   /* Disable reclaim-based migration. */
>   static void __disable_all_migrate_targets(void)
>   {
> @@ -3191,10 +3193,96 @@ static void __set_migration_target_nodes(void)
>   /*
>    * For callers that do not hold get_online_mems() already.
>    */
> -__maybe_unused // <- temporay to prevent warnings during bisects
>   static void set_migration_target_nodes(void)
>   {
>   	get_online_mems();
>   	__set_migration_target_nodes();
>   	put_online_mems();
>   }
> +
> +/*
> + * React to hotplug events that might affect the migration targets
> + * like events that online or offline NUMA nodes.
> + *
> + * The ordering is also currently dependent on which nodes have
> + * CPUs.  That means we need CPU on/offline notification too.
> + */
> +static int migration_online_cpu(unsigned int cpu)
> +{
> +	set_migration_target_nodes();
> +	return 0;
> +}
> +
> +static int migration_offline_cpu(unsigned int cpu)
> +{
> +	set_migration_target_nodes();
> +	return 0;
> +}
> +
> +/*
> + * This leaves migrate-on-reclaim transiently disabled between
> + * the MEM_GOING_OFFLINE and MEM_OFFLINE events.  This runs
> + * whether reclaim-based migration is enabled or not, which
> + * ensures that the user can turn reclaim-based migration at
> + * any time without needing to recalculate migration targets.
> + *
> + * These callbacks already hold get_online_mems().  That is why
> + * __set_migration_target_nodes() can be used as opposed to
> + * set_migration_target_nodes().
> + */
> +static int __meminit migrate_on_reclaim_callback(struct notifier_block *self,
> +						 unsigned long action, void *arg)
> +{
> +	switch (action) {
> +	case MEM_GOING_OFFLINE:
> +		/*
> +		 * Make sure there are not transient states where
> +		 * an offline node is a migration target.  This
> +		 * will leave migration disabled until the offline
> +		 * completes and the MEM_OFFLINE case below runs.
> +		 */
> +		disable_all_migrate_targets();
> +		break;
> +	case MEM_OFFLINE:
> +	case MEM_ONLINE:
> +		/*
> +		 * Recalculate the target nodes once the node
> +		 * reaches its final state (online or offline).
> +		 */
> +		__set_migration_target_nodes();
> +		break;
> +	case MEM_CANCEL_OFFLINE:
> +		/*
> +		 * MEM_GOING_OFFLINE disabled all the migration
> +		 * targets.  Reenable them.
> +		 */
> +		__set_migration_target_nodes();
> +		break;
> +	case MEM_GOING_ONLINE:
> +	case MEM_CANCEL_ONLINE:
> +		break;
> +	}
> +
> +	return notifier_from_errno(0);
> +}
> +
> +static int __init migrate_on_reclaim_init(void)
> +{
> +	int ret;
> +
> +	ret = cpuhp_setup_state(CPUHP_AP_ONLINE_DYN, "migrate on reclaim",
> +				migration_online_cpu,
> +				migration_offline_cpu);
> +	/*
> +	 * In the unlikely case that this fails, the automatic
> +	 * migration targets may become suboptimal for nodes
> +	 * where N_CPU changes.  With such a small impact in a
> +	 * rare case, do not bother trying to do anything special.
> +	 */
> +	WARN_ON(ret < 0);
> +
> +	hotplug_memory_notifier(migrate_on_reclaim_callback, 100);
> +	return 0;
> +}
> +late_initcall(migrate_on_reclaim_init);
> +#endif /* CONFIG_MEMORY_HOTPLUG */
I intend to report a issue that is being caused by this patch.
 From 5.14 to 5.15 kernel, hotplug on power systems was observed to be
taking double the expected time. Git bisect between these two kernels
points to this patch as the one causing the issue.
I have verified from cpu-hotplug callback trace that we are infact
spending a lot of time in migration_offline_cpu code path.
I see that there have been subsequent patches to optimize this update
node demotion order code, but those patches are already in 5.15 kernel
and regressions are still observed even after those optimizations.
I have also recreated and observed the issue across systems with
different configs, and across different kernels containing this patch.
If needed, I will provide experiment results and traces that were used
to conclude this.

Regards,

- Abhishek


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-5.4 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,MAILING_LIST_MULTI,NICE_REPLY_A,SPF_HELO_NONE,
	SPF_PASS,USER_AGENT_SANE_1 autolearn=no autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id DF575C6377B
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:58:20 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id C6FB961222
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:58:20 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229977AbhGUVRn (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 17:17:43 -0400
Received: from mga06.intel.com ([134.134.136.31]:52303 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S229916AbhGUVRk (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 17:17:40 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10052"; a="272638071"
X-IronPort-AV: E=Sophos;i="5.84,258,1620716400"; 
   d="scan'208";a="272638071"
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 21 Jul 2021 14:58:12 -0700
X-IronPort-AV: E=Sophos;i="5.84,258,1620716400"; 
   d="scan'208";a="576832800"
Received: from aannamal-mobl.amr.corp.intel.com (HELO [10.212.140.253]) ([10.212.140.253])
  by fmsmga001-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 21 Jul 2021 14:58:12 -0700
Subject: Re: [PATCH -V11 8/9] mm/vmscan: never demote for memcg reclaim
To: Zi Yan <ziy@nvidia.com>, Huang Ying <ying.huang@intel.com>
Cc: Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Yang Shi <shy828301@gmail.com>, Michal Hocko <mhocko@suse.com>,
        Wei Xu <weixugc@google.com>,
        Oscar Salvador <osalvador@suse.de>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-8-ying.huang@intel.com>
 <43A1CB83-6127-427F-94AF-40CE1B283BE1@nvidia.com>
From: Dave Hansen <dave.hansen@intel.com>
Autocrypt: addr=dave.hansen@intel.com; keydata=
 xsFNBE6HMP0BEADIMA3XYkQfF3dwHlj58Yjsc4E5y5G67cfbt8dvaUq2fx1lR0K9h1bOI6fC
 oAiUXvGAOxPDsB/P6UEOISPpLl5IuYsSwAeZGkdQ5g6m1xq7AlDJQZddhr/1DC/nMVa/2BoY
 2UnKuZuSBu7lgOE193+7Uks3416N2hTkyKUSNkduyoZ9F5twiBhxPJwPtn/wnch6n5RsoXsb
 ygOEDxLEsSk/7eyFycjE+btUtAWZtx+HseyaGfqkZK0Z9bT1lsaHecmB203xShwCPT49Blxz
 VOab8668QpaEOdLGhtvrVYVK7x4skyT3nGWcgDCl5/Vp3TWA4K+IofwvXzX2ON/Mj7aQwf5W
 iC+3nWC7q0uxKwwsddJ0Nu+dpA/UORQWa1NiAftEoSpk5+nUUi0WE+5DRm0H+TXKBWMGNCFn
 c6+EKg5zQaa8KqymHcOrSXNPmzJuXvDQ8uj2J8XuzCZfK4uy1+YdIr0yyEMI7mdh4KX50LO1
 pmowEqDh7dLShTOif/7UtQYrzYq9cPnjU2ZW4qd5Qz2joSGTG9eCXLz5PRe5SqHxv6ljk8mb
 ApNuY7bOXO/A7T2j5RwXIlcmssqIjBcxsRRoIbpCwWWGjkYjzYCjgsNFL6rt4OL11OUF37wL
 QcTl7fbCGv53KfKPdYD5hcbguLKi/aCccJK18ZwNjFhqr4MliQARAQABzShEYXZpZCBDaHJp
 c3RvcGhlciBIYW5zZW4gPGRhdmVAc3I3MS5uZXQ+wsF7BBMBAgAlAhsDBgsJCAcDAgYVCAIJ
 CgsEFgIDAQIeAQIXgAUCTo3k0QIZAQAKCRBoNZUwcMmSsMO2D/421Xg8pimb9mPzM5N7khT0
 2MCnaGssU1T59YPE25kYdx2HntwdO0JA27Wn9xx5zYijOe6B21ufrvsyv42auCO85+oFJWfE
 K2R/IpLle09GDx5tcEmMAHX6KSxpHmGuJmUPibHVbfep2aCh9lKaDqQR07gXXWK5/yU1Dx0r
 VVFRaHTasp9fZ9AmY4K9/BSA3VkQ8v3OrxNty3OdsrmTTzO91YszpdbjjEFZK53zXy6tUD2d
 e1i0kBBS6NLAAsqEtneplz88T/v7MpLmpY30N9gQU3QyRC50jJ7LU9RazMjUQY1WohVsR56d
 ORqFxS8ChhyJs7BI34vQusYHDTp6PnZHUppb9WIzjeWlC7Jc8lSBDlEWodmqQQgp5+6AfhTD
 kDv1a+W5+ncq+Uo63WHRiCPuyt4di4/0zo28RVcjtzlGBZtmz2EIC3vUfmoZbO/Gn6EKbYAn
 rzz3iU/JWV8DwQ+sZSGu0HmvYMt6t5SmqWQo/hyHtA7uF5Wxtu1lCgolSQw4t49ZuOyOnQi5
 f8R3nE7lpVCSF1TT+h8kMvFPv3VG7KunyjHr3sEptYxQs4VRxqeirSuyBv1TyxT+LdTm6j4a
 mulOWf+YtFRAgIYyyN5YOepDEBv4LUM8Tz98lZiNMlFyRMNrsLV6Pv6SxhrMxbT6TNVS5D+6
 UorTLotDZKp5+M7BTQRUY85qARAAsgMW71BIXRgxjYNCYQ3Xs8k3TfAvQRbHccky50h99TUY
 sqdULbsb3KhmY29raw1bgmyM0a4DGS1YKN7qazCDsdQlxIJp9t2YYdBKXVRzPCCsfWe1dK/q
 66UVhRPP8EGZ4CmFYuPTxqGY+dGRInxCeap/xzbKdvmPm01Iw3YFjAE4PQ4hTMr/H76KoDbD
 cq62U50oKC83ca/PRRh2QqEqACvIH4BR7jueAZSPEDnzwxvVgzyeuhwqHY05QRK/wsKuhq7s
 UuYtmN92Fasbxbw2tbVLZfoidklikvZAmotg0dwcFTjSRGEg0Gr3p/xBzJWNavFZZ95Rj7Et
 db0lCt0HDSY5q4GMR+SrFbH+jzUY/ZqfGdZCBqo0cdPPp58krVgtIGR+ja2Mkva6ah94/oQN
 lnCOw3udS+Eb/aRcM6detZr7XOngvxsWolBrhwTQFT9D2NH6ryAuvKd6yyAFt3/e7r+HHtkU
 kOy27D7IpjngqP+b4EumELI/NxPgIqT69PQmo9IZaI/oRaKorYnDaZrMXViqDrFdD37XELwQ
 gmLoSm2VfbOYY7fap/AhPOgOYOSqg3/Nxcapv71yoBzRRxOc4FxmZ65mn+q3rEM27yRztBW9
 AnCKIc66T2i92HqXCw6AgoBJRjBkI3QnEkPgohQkZdAb8o9WGVKpfmZKbYBo4pEAEQEAAcLB
 XwQYAQIACQUCVGPOagIbDAAKCRBoNZUwcMmSsJeCEACCh7P/aaOLKWQxcnw47p4phIVR6pVL
 e4IEdR7Jf7ZL00s3vKSNT+nRqdl1ugJx9Ymsp8kXKMk9GSfmZpuMQB9c6io1qZc6nW/3TtvK
 pNGz7KPPtaDzvKA4S5tfrWPnDr7n15AU5vsIZvgMjU42gkbemkjJwP0B1RkifIK60yQqAAlT
 YZ14P0dIPdIPIlfEPiAWcg5BtLQU4Wg3cNQdpWrCJ1E3m/RIlXy/2Y3YOVVohfSy+4kvvYU3
 lXUdPb04UPw4VWwjcVZPg7cgR7Izion61bGHqVqURgSALt2yvHl7cr68NYoFkzbNsGsye9ft
 M9ozM23JSgMkRylPSXTeh5JIK9pz2+etco3AfLCKtaRVysjvpysukmWMTrx8QnI5Nn5MOlJj
 1Ov4/50JY9pXzgIDVSrgy6LYSMc4vKZ3QfCY7ipLRORyalFDF3j5AGCMRENJjHPD6O7bl3Xo
 4DzMID+8eucbXxKiNEbs21IqBZbbKdY1GkcEGTE7AnkA3Y6YB7I/j9mQ3hCgm5muJuhM/2Fr
 OPsw5tV/LmQ5GXH0JQ/TZXWygyRFyyI2FqNTx4WHqUn3yFj8rwTAU1tluRUYyeLy0ayUlKBH
 ybj0N71vWO936MqP6haFERzuPAIpxj2ezwu0xb1GjTk4ynna6h5GjnKgdfOWoRtoWndMZxbA
 z5cecg==
Message-ID: <59a92898-4a8a-05d3-5f75-1f8defb6feda@intel.com>
Date: Wed, 21 Jul 2021 14:58:05 -0700
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.10.0
MIME-Version: 1.0
In-Reply-To: <43A1CB83-6127-427F-94AF-40CE1B283BE1@nvidia.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 7/21/21 2:38 PM, Zi Yan wrote:
> On 21 Jul 2021, at 2:39, Huang Ying wrote:
>> From: Dave Hansen <dave.hansen@linux.intel.com>
>>
>> Global reclaim aims to reduce the amount of memory used on a
>> given node or set of nodes.  Migrating pages to another node
>> serves this purpose.
>>
>> memcg reclaim is different.  Its goal is to reduce the total
>> memory consumption of the entire memcg, across all nodes.
>> Migration does not assist memcg reclaim because it just moves
>> page contents between nodes rather than actually reducing memory
>> consumption.
...
> Should this be folded into Patch 4 when can_demote() is
> introduced?

I guess it could be.  But, it's logically separate since it has its
own justification which is rather discrete.

I think it's best to keep it separate.

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-17.2 required=3.0 tests=BAYES_00,DKIMWL_WL_HIGH,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,
	INCLUDES_CR_TRAILER,INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,
	SPF_HELO_NONE,SPF_PASS autolearn=unavailable autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 8E9A4C6377B
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:38:55 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 753FB613AE
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:38:55 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229837AbhGUU6S (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 16:58:18 -0400
Received: from mail-mw2nam10on2082.outbound.protection.outlook.com ([40.107.94.82]:51680
        "EHLO NAM10-MW2-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S229597AbhGUU6Q (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 16:58:16 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=S3P66cibWR6PN9Hatt3Cyn+3DlJHynmgpNjyOKrYPfzYKR4siYoAaS6wIn0/pifcdw1/AJ1oSb8SuxB7UioJKmOz7CAXIV7TCj5T2puhwMXSvOWuQzXAW9nukx64biMnRy3R5MQubNo4czcw305ba0ku77iF/t8Ow8KccTPYoqLSjDKdgKhClIuqv/pY34zig8ixpYjy0/0ozzUhZrlLjaOQoGNqhiy59f2YTebjTkK0Ujf9sxzjerXuLBmtq6qJtZRapO2i0zA26Fc1NdQVexO+hby/evmeox0tQ4I247BBBx6BCixYkKQwtbdOpAtqER1oEY/cph43Tm+r4HPTog==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=ybxPnST5HuEFuD1BlDX7aqWGQqMruSdLkSlZeHMM01M=;
 b=kEKDUWA4tlF7PQ80eCQGUt8AVw2ojacynguczy1ss+GfmQ1bklheVDYsB2CKLo7MM25MtC0iGBrBKooxLLEc8UR3KCzumeevlQjmOqNO6akrKI9cmk4U+uZ2rrIuSbqL/h5087Toz2t2yMNFmskqIsOV8uAuryHtzjIQLcGuqJt0ilfg8gBh+yzb1ektQOWNIZrlPIDUaYkw86jl8oDPpyR3qPAnCQ3imCwe62ULhMd+qTVbV/IomQMANt7yojKlsUQule8fYTwfBWpcF6NJSQgGsvbn40ebNSGM7DZbGUzVHq0NuZvv9x4I+o1X/oYfeDBIXJXANCLnZWNGgY4XOw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=nvidia.com; dmarc=pass action=none header.from=nvidia.com;
 dkim=pass header.d=nvidia.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=Nvidia.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=ybxPnST5HuEFuD1BlDX7aqWGQqMruSdLkSlZeHMM01M=;
 b=Tu5ZT248dTPDaHExb2MawW7mVyE10UNukzsos3/9Y2ungN04SFKEGyg3vh5I8xpr4AlIlnzymQLjx0OqwhHWgacUvvKNc02ATXIzIpwp6/6EweT3fq4EjKx2uKbconmQVNbPD4Jtl6UdWuPqv0gZL2EraEYKAlxgFnfEhQXpUz584rcCpdN+HULDb+Ss6yj7OY0Z5JZ6Y8EwmCesYjFOpp18mEWeeqytASjSQxil85agM5h3s3CcAfTCWR24CmfENUSc838hpKHzREhagNhGtflBSpSj9Kx2UaVitW6806QZrKJdhNh5aS33Grl/IpVES5c8S09mWWQXSsvV/QKv2g==
Authentication-Results: intel.com; dkim=none (message not signed)
 header.d=none;intel.com; dmarc=none action=none header.from=nvidia.com;
Received: from MN2PR12MB3823.namprd12.prod.outlook.com (2603:10b6:208:168::26)
 by MN2PR12MB4080.namprd12.prod.outlook.com (2603:10b6:208:1d9::16) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4331.25; Wed, 21 Jul
 2021 21:38:51 +0000
Received: from MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4]) by MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4%6]) with mapi id 15.20.4352.025; Wed, 21 Jul 2021
 21:38:51 +0000
From: Zi Yan <ziy@nvidia.com>
To: Huang Ying <ying.huang@intel.com>
Cc: Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Yang Shi <shy828301@gmail.com>, Michal Hocko <mhocko@suse.com>,
        Wei Xu <weixugc@google.com>,
        Oscar Salvador <osalvador@suse.de>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>
Subject: Re: [PATCH -V11 8/9] mm/vmscan: never demote for memcg reclaim
Date: Wed, 21 Jul 2021 17:38:45 -0400
X-Mailer: MailMate (1.14r5812)
Message-ID: <43A1CB83-6127-427F-94AF-40CE1B283BE1@nvidia.com>
In-Reply-To: <20210721063926.3024591-8-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-8-ying.huang@intel.com>
Content-Type: multipart/signed;
 boundary="=_MailMate_B1EDC7E6-C631-4573-8A8E-31071A42A683_=";
 micalg=pgp-sha512; protocol="application/pgp-signature"
X-ClientProxiedBy: BL1PR13CA0370.namprd13.prod.outlook.com
 (2603:10b6:208:2c0::15) To MN2PR12MB3823.namprd12.prod.outlook.com
 (2603:10b6:208:168::26)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from [10.2.55.80] (216.228.112.21) by BL1PR13CA0370.namprd13.prod.outlook.com (2603:10b6:208:2c0::15) with Microsoft SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4352.10 via Frontend Transport; Wed, 21 Jul 2021 21:38:48 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 7ee5c375-269a-43c5-6452-08d94c8fee8e
X-MS-TrafficTypeDiagnostic: MN2PR12MB4080:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: <MN2PR12MB40806443FCFF5BF1171329C1C2E39@MN2PR12MB4080.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:4941;
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: m/G5Q7u8bHgblgq1lbPkFmdldev5NXrutVaIVTI6CCZQhctwMfKOrqCYgpZEt6meronbfMB6KBHYKOfBxmTNe+/4jw1coGXTNPyFGkvb0xvenm1r1xnF2n3mk+qfRJsC8BVxLFNoAVgJAoopo92IlnP06B+6fEtqMLmoqDy1efRRvzuMm9tmXSQLQ2thgEp25ggEpRXQiLA35WbD+54cxG+J+h4agIohu57rgZG0k0qgyqM+A6YYewfEF19an6GOlC8ppThFYupkBTElTmRDd5mr8AxeXa/qXulFw0WykgYnXJcDKXbQ6vN4ELHOjH3Cwte1k1dC4OMav+6rvtQQvbcAaC3Cg89k2MWJ+CcEcIWKfH7E0xfgm+W6sbV9R1V8kmblL9v3bx5dUNBSe61ar+JQJD+WUvlCZUNhP85DFp86ikfwwMbDbQpM/INJXxncnJDyDlageM8d3TN5IOEsuuaPIrrSs0WIObt+wquaQP/glOXRadZMqm0pSgzkUrelQpjVB+A3QABnIa692WyEoYW21wYXMiq8BRBnLkKa3ogLfOQwFaq8KHA/4l4vjvzEq9dmJwp3ProqfOdgM0EZSni7hL73d0cV9Jhras5TwYYgGbtU4J2zNo33XywsKKmKaKsZn8YxW4k3UaT5WCXyVg4pHEAvog4XyonDIS+fGcIH6ygokrxPp9fI/VbWBy1G7ZWiKa/jLJyIuVMGBT+28//VvGyOFmyU1D/x/FoIGV/Rv03agu4kBEKVbpmY1IBsCrs3txSdoDKmd2ndERnNXKOFe8zi+Gjyg0S488qegAiglN55lPSGjDgo8mKrMKpW
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:MN2PR12MB3823.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(346002)(376002)(136003)(396003)(33656002)(478600001)(16576012)(38100700002)(8936002)(5660300002)(6666004)(2616005)(8676002)(36756003)(966005)(83380400001)(7416002)(235185007)(53546011)(6486002)(54906003)(66476007)(66556008)(6916009)(4326008)(186003)(26005)(316002)(21480400003)(2906002)(66946007)(33964004)(956004)(86362001)(72826004)(45980500001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?SlB4NzFxdlU3OTBwZkhwN25SRFZFNlFLWTZkMzI1dWJPdnJqeDRyajQ3dHhZ?=
 =?utf-8?B?QW1hd3kvTmNtbVQweFNWUnFOc3Bjcjk2ejArektzcmhFWWhjemdTWHBBVVZJ?=
 =?utf-8?B?U3FZR0FtTFM4NGVFK1JidFdsaXRwTDlhQysyUVh5OHZJOVhBWXIyeE9Memg5?=
 =?utf-8?B?YXMvMWhDQXhnV2tZNTVnK0NDdUx1R3RHa2IxWVg4K0JEWVdNaU5DRVMwSTJa?=
 =?utf-8?B?amhEb3FmNmZUVkgrWE8rSUl2bGxld3pQVGVwdlcrWTNZR0xrYVZYbU9pWk5x?=
 =?utf-8?B?NDdOZXNlR3FNanRWT1hSTW9BSzgrNGxYODhkRzFmL3BhbmxnRG4valU1ZXps?=
 =?utf-8?B?clFjeC8zNCt4dnptd3U1TUt1WEFRTzdyQTF1RWN5YTF3ZUFlYm4rbnA4U3c4?=
 =?utf-8?B?MzJ4Wk9aNXgvOUJ4UEg4RWFZSmlLcXZCOHcwemdDRXJRa3RjdzB3Q2tHcHVl?=
 =?utf-8?B?dXpDa0pQdzZxRmRYYU1CdDU5bUZxK2xQNW11VllqN1g3MnNveThSZEZHNy9C?=
 =?utf-8?B?QzhpbnZvb1RMekZ0UU42RUo4dzQrNldrVlR5cGJUQ25zL0xUNFgxMm9UK1VG?=
 =?utf-8?B?NVd0V1V4b2xjeE55YVh6cUNrWFlEd3JweUczM0M0VFJtWDJMMThoM3EvWHB5?=
 =?utf-8?B?YVFSZkVPa05yWFNteEJxSzNmSW0xT3RBT3FYMVhpcUl4RkEvaUdUV013QWxx?=
 =?utf-8?B?NVdsbGR1NG5YcW42RXFQY2FNaDZTUWRORnlIU2VVd09sK0JoeUNrck5BV2VI?=
 =?utf-8?B?Vnk1SjRmMFcwUzV0a1djZEFyVkpOWWhaanpUS3kzWEhaSVJqWUQ4ckNESUY4?=
 =?utf-8?B?dm40cTI1R1d2SU4wRXZJakdHdmcvK3J1NVgraEM0TzVjUXBtM3VWSVJGQmFx?=
 =?utf-8?B?aS9jSEhQaXN1bGhYeXlCeTIvTklnaEl5Ynd4WDlqT1VhelZrdUV5aUFRTU1Q?=
 =?utf-8?B?Zk9SYWpSUDF3Tkt3LzVtZS92N0VybmJFcE5iaUQrVFpRTUNlMkVPRmErQitw?=
 =?utf-8?B?d3FWOGVMYUpxQlFCN3lEc1huZ2RkZzBzZjNiNG1aWnQ2Z3BBUC9jbnk1amFp?=
 =?utf-8?B?eU1KZm9vYk9aS2tuL1VSaDdtR0RCSzZHT2drdjVZQjV2Q1FrQWpETXRwei9v?=
 =?utf-8?B?U25xUGtRbFVGR1dPT0lLQStzOVhreEZobDZ0dXhIQmhVU1lBaCsyUk5tWFFv?=
 =?utf-8?B?WjlYWUx2RHpzcktRcUhLcFBnM1FFMHRqZEV1RlV6T3A2TGxscUlDQnloRklB?=
 =?utf-8?B?MXhOaTlSbDhvK3FnRnhLQTFGRmtSWUZKMmVFNGxZWit5em1NcngxTzRZMndW?=
 =?utf-8?B?VFBWWGpmSVgvZVh4bDNqQVBOQjlaWllHK1JTMnhMekdZc0hEY2RRK0FRT0Zl?=
 =?utf-8?B?UzYyQVlPUDZIRzlicFZYZHdEQ0N0NGR5d3lsdWFNQWN6M0h0aHJENW5yRXA1?=
 =?utf-8?B?cVF5YTFqbU9QUXBLNmFVMUlBeDdYQk52M043dEREMjBwdG5hWjdLN0lpcllL?=
 =?utf-8?B?Qjc3eDBSaXE0MkUrMGpocjZpZlh4SS9sVitqeEs3YWdrMlVtSXloN1RvSmNU?=
 =?utf-8?B?ZGhYbTA4RVpjcW1TK0FxZTRlcUxtTGdQMHlPRW80VjAzRXpNOVBWLzMrbzBQ?=
 =?utf-8?B?Y2UvSW9nc2hyK1h5TWh3V1pZeEpOTm45MEtmR3l5emZpV05mVGdUWXlqSnNZ?=
 =?utf-8?B?Yml2aElrYzdISXdLU0dQS1IwblUxajljckxQbDFydnhTd2tITTROdnQwdkxS?=
 =?utf-8?Q?Sedltu4Lm11rtQ6SqMzLjMKc2u7erME14s+oU9+?=
X-OriginatorOrg: Nvidia.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 7ee5c375-269a-43c5-6452-08d94c8fee8e
X-MS-Exchange-CrossTenant-AuthSource: MN2PR12MB3823.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jul 2021 21:38:51.7278
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 43083d15-7273-40c1-b7db-39efd9ccc17a
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: i9TLUb4efa1QNTlgWMi4pjtg/TWOihkfeKRLFn1Jer+Bjz9U1MiAwy/XmjZ23tGf
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB4080
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--=_MailMate_B1EDC7E6-C631-4573-8A8E-31071A42A683_=
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

On 21 Jul 2021, at 2:39, Huang Ying wrote:

> From: Dave Hansen <dave.hansen@linux.intel.com>
>
> Global reclaim aims to reduce the amount of memory used on a given node=
 or
> set of nodes.  Migrating pages to another node serves this purpose.
>
> memcg reclaim is different.  Its goal is to reduce the total memory
> consumption of the entire memcg, across all nodes.  Migration does not
> assist memcg reclaim because it just moves page contents between nodes
> rather than actually reducing memory consumption.
>
> Link: https://lkml.kernel.org/r/20210715055145.195411-9-ying.huang@inte=
l.com
> Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
> Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
> Suggested-by: Yang Shi <yang.shi@linux.alibaba.com>
> Reviewed-by: Yang Shi <shy828301@gmail.com>
> Cc: Michal Hocko <mhocko@suse.com>
> Cc: Wei Xu <weixugc@google.com>
> Cc: Oscar Salvador <osalvador@suse.de>
> Cc: Zi Yan <ziy@nvidia.com>
> Cc: David Rientjes <rientjes@google.com>
> Cc: Dan Williams <dan.j.williams@intel.com>
> Cc: David Hildenbrand <david@redhat.com>
> Cc: Greg Thelen <gthelen@google.com>
> Cc: Keith Busch <kbusch@kernel.org>
> Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
> ---
>  mm/vmscan.c | 9 +++++++--
>  1 file changed, 7 insertions(+), 2 deletions(-)

LGTM. Reviewed-by: Zi Yan <ziy@nvidia.com>.

Should this be folded into Patch 4 when can_demote() is introduced?


=E2=80=94
Best Regards,
Yan, Zi

--=_MailMate_B1EDC7E6-C631-4573-8A8E-31071A42A683_=
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQJDBAEBCgAtFiEEh7yFAW3gwjwQ4C9anbJR82th+ooFAmD4k+UPHHppeUBudmlk
aWEuY29tAAoJEJ2yUfNrYfqKe0AP/jOB76epG49N+ZXkWbO0t1lefDjP4xMpskDs
nAadE7nCZqRk/+n33Py6My7xghHq3mWrVdv0cdiWKzipdbf8adcXzhzJTGgtwCuH
uXpybOf5OweYCTMl+Y8AAqXYWoZgjoN6AzNL0omqmsRDhaqJIeCF1zg2tABjewIA
xwa7rmf9cexlpRMW8PmiXTYXLG01BfNDO12o6Jv87jU60594dMWB6kvs8XT/5PLP
SbXWazkifQqXRC9ynBNYkFEOu7becUNJC+Kyu/r6YSDhXilZndYan5uNnpVTUVa6
ACAHHXvi4n/td/Se4WpHbGR5rmlxYKhLexi4mo47F3svBlxqDMWKCVh9oVT3LtBZ
bWmV86paT8Vn5Ye4Y67CTocJdRlGW+eH4uRZdkUrPElACDzF7lQWPCPMkqIT+L1B
gRVz6nV2ssFCy5NCpNAbBge2XxVTBOPI8Cl4xM9DP9uJGY4+CACHWLz1M0JRCyTm
fSF6uEWIE8GOYwKobm5YK5O4KPtHCUZFQSYKbiMzbJ5xVCXIFh/w4P3BAgSeXDBe
PSAA0J07Rfq9E3O5ee/GzjS8UDHOs3q/OUr6HdAX9aawhQiTL0Iwo12Jn6DIvkTV
H4CO0ATXuME9haWSiGlgZPwbofeWlk4kEnK/L/xi5N4iUiuWF/UMbJ6EZMXq8whh
BP0f2pcD
=Y3mk
-----END PGP SIGNATURE-----

--=_MailMate_B1EDC7E6-C631-4573-8A8E-31071A42A683_=--

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-17.2 required=3.0 tests=BAYES_00,DKIMWL_WL_HIGH,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,
	INCLUDES_CR_TRAILER,INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,
	SPF_HELO_NONE,SPF_PASS autolearn=unavailable autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 25149C6377B
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:21:31 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 0DE5661208
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:21:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229845AbhGUUkx (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 16:40:53 -0400
Received: from mail-dm6nam10on2086.outbound.protection.outlook.com ([40.107.93.86]:43744
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S229749AbhGUUkv (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 16:40:51 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=aVSmr1fqEWMCvAW5uUths2VZ1k1MPfsKehH4yfryGCc1t4iT8RPtG5WHHbOdQJqD8Drh6Y13OG5XvoDGdIZcD7MEaoVUDmEF5IJJ0XCaZMLT6te/exHyAV55IAc1dqldZtntca7uAIyYtYNV/Ye30PKw4oHPH7dszYVxLasPVPpJbHOXEOqWfeCt6+ld10wIwdCP4pj4gvzOVG83IWwNI9wyMpe2rSLhrmDsnqUwERlRLpBTPbT5/OOpK2wesd0d4nVHmF6gvTYCOsp0mQdes5e0GMGeYW7xPBaP9f/464ml5cCLs7rsTzD45P6T+DtsjuI0UZun+DBfS98+ncI6Eg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=CuYd6wdZYvHgbrGJYEOvy3p7h7bWQ5Vc0JGsJNPXwrQ=;
 b=j0iACJhrZeczlRT6u3uJlwLyGaWPJK0RALVUD19uWEQk/Ok8N/w1ytTJcqsHBklplylYLDf1DMW58qelkKy+cJqt6cOPq50dvtS5D4ZjnKLHKAWZbW+tnSAfBF/MCN6CaJLfJvnBLT6UMc5XCBasTcZjhv4UT86FBc3R0bc4So4hl397lHK1kAA+ef9hLx2tXGq3SvZkee+NS6E8l5KsZ69mk+M/nwzsrQzK3GJoATSUcqLaV/JHHlkKjUdNif/eb2j1XIto8qpv5jj3+cRGwT3DLlbkGYFUPARIDpXCvYmUheKK4omgBJ1jlMexBKps3K7fGibo4xtDfBtbg00w3w==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=nvidia.com; dmarc=pass action=none header.from=nvidia.com;
 dkim=pass header.d=nvidia.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=Nvidia.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=CuYd6wdZYvHgbrGJYEOvy3p7h7bWQ5Vc0JGsJNPXwrQ=;
 b=KJakeKiPDPcvFzgb4b5ht0Ob9lfZ8dMVP9GIcP+fXrHoVs0WS8zXoSUTdpqyiGztIpJQ5rnDf7og2HY+4LW6FEKTNF5u55A6AgiGHMg74EuV70mCbzPSpaE/22MLG9EPv29Osb617B/lJThGlRx4tZvHss7Fu8ZamlecGt7lAsImj6nLrw4fz10zuwWiYGXmtL5hvVACnfSDeDrK+RU9vwmCebiPAcp1RuHc0x3iu5vU9ApqEuCLnwpBrHunSLYC3eIDoiF5zIbsFePUj8FV8TTHRcokqh7csqsegCYEcClNCFYmT+TREcHsgfSXgCaTchtDxcTesRuqdl9t3cyd7A==
Authentication-Results: intel.com; dkim=none (message not signed)
 header.d=none;intel.com; dmarc=none action=none header.from=nvidia.com;
Received: from MN2PR12MB3823.namprd12.prod.outlook.com (2603:10b6:208:168::26)
 by BL0PR12MB2499.namprd12.prod.outlook.com (2603:10b6:207:43::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4331.26; Wed, 21 Jul
 2021 21:21:26 +0000
Received: from MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4]) by MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4%6]) with mapi id 15.20.4352.025; Wed, 21 Jul 2021
 21:21:26 +0000
From: Zi Yan <ziy@nvidia.com>
To: Huang Ying <ying.huang@intel.com>
Cc: Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org, Keith Busch <kbusch@kernel.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Yang Shi <shy828301@gmail.com>, Michal Hocko <mhocko@suse.com>,
        Wei Xu <weixugc@google.com>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Oscar Salvador <osalvador@suse.de>,
        Yang Shi <yang.shi@linux.alibaba.com>
Subject: Re: [PATCH -V11 7/9] mm/vmscan: Consider anonymous pages without swap
Date: Wed, 21 Jul 2021 17:21:20 -0400
X-Mailer: MailMate (1.14r5812)
Message-ID: <43FA897B-ABFC-4C52-8DFD-8BAF992BD0D4@nvidia.com>
In-Reply-To: <20210721063926.3024591-7-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-7-ying.huang@intel.com>
Content-Type: multipart/signed;
 boundary="=_MailMate_BF9DAD1B-67EE-4C3B-9EE0-C3C40EC9816C_=";
 micalg=pgp-sha512; protocol="application/pgp-signature"
X-ClientProxiedBy: MN2PR14CA0028.namprd14.prod.outlook.com
 (2603:10b6:208:23e::33) To MN2PR12MB3823.namprd12.prod.outlook.com
 (2603:10b6:208:168::26)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from [10.2.55.80] (216.228.112.21) by MN2PR14CA0028.namprd14.prod.outlook.com (2603:10b6:208:23e::33) with Microsoft SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4352.25 via Frontend Transport; Wed, 21 Jul 2021 21:21:23 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: f19d3676-1a25-4bf5-9daf-08d94c8d7f4c
X-MS-TrafficTypeDiagnostic: BL0PR12MB2499:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: <BL0PR12MB249913EECE144C297A359594C2E39@BL0PR12MB2499.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:6790;
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 9h1UoAGM3xesWWI8ytbB0VTX0ZIX5Be9XV+sFw4PsETI6Sn8RN4pOjAyNv9LGGQYVfbwoNkFGvK5Phr+qYy7BX/WZTJtfjT2byeWgPb886YaZA1PUtM2+R3B06hsXEyW4k/1HCOOk0VexUZblvdbCoeRp0Qc0omkJso4sgsBG4f2QaPdDYCKqnR4rukPLFcBYw35R3mHRWC3A+Ytd7e5gKYaMFenCYGHwWTV9u8Z03jhlz60AGu3GbDQGinXWpaYd3uqAZ5I8gnfwllWp8ZNr0uKTCPwS0VR7isCzDy5xW1ie4PHjzpazKRr07rWKKNxptWav4rmG8WynmZ0OOsv+thvBQdCBU4zYzJ9NJ/v/XPV68D0Yte5jjCdSGCvQ/ZSaOrSvCfvsmVWOkbGmL+9FA2zX7hSS+XbkqZqyqiobm1aU24v5UPPqHGDRoQ2OXvoM9CFAQ9N9Cj3QGVep15BFnPlkIjey55hKqC4EuJDP4cisoq6/qXttS3CRdp6eU8bci9kxMgyne28A1F8El+zv70Vqr9aE+3R9t2SkE4lZXET1GLWi2LYC5+ftteH3kWr393mwvc0QzuBhO1ocMuCf5jf9yQtuGwTLunk/PFHL0/F8zk1oHBz7fzIEQUF+XfJOQt+azZS9Vc/shiRTr7KmWt+AhR9L0I4mNOuqKiOxphQ9zasTaDtYab0gf2icVBPdG31UuS+puskjxa6EDju2mmTG1UShK8LTzQEgdCi9ilGL4Zv5Vk3qqoC9y7Wa/0WF0An+pnVLcIOhSabLpjD6UnUhZtIM7Eue6SJ0dLlGA7jLB0ri3hJ6dR/ED9s7tT5
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:MN2PR12MB3823.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(366004)(39860400002)(136003)(346002)(376002)(396003)(5660300002)(33656002)(83380400001)(38100700002)(86362001)(478600001)(2616005)(26005)(956004)(54906003)(186003)(4326008)(966005)(7416002)(6486002)(66476007)(21480400003)(8936002)(66556008)(8676002)(16576012)(36756003)(6916009)(66946007)(235185007)(2906002)(33964004)(316002)(53546011)(72826004)(45980500001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?Vk1PVDc5aDVQU2xGL0VrS2tHeWZScWdWaDdhd3IvcEIwMTViamt1MlNPMDVv?=
 =?utf-8?B?dWFXQ0ozNys0OXpPUCs5amFkOGhMYmVoL0RxSmgyVnFMQk1VM3hrL0R2aEdX?=
 =?utf-8?B?RjQxeWk0TFlnQ1c5Z2ZJT0VHSG80RTRmaEJnTzJTNGUzazc3R21nUXhWeEpI?=
 =?utf-8?B?ZUZSenhvbDRPWEUrbVVOSEZJN1FqYlZidTN0YU1RcVk5WkpOOUpaU0kyZ2lo?=
 =?utf-8?B?WnNzUDFhYzJZcTZZOTFsUElsV0dUYTIvbWJEMXFPcUNXUHlMMTMxRGd4eEVJ?=
 =?utf-8?B?YkZrYlRqZVd3ZnUycHNoN3RsVEI0Wno3bStEVnpmVHc1aVZLQ1lxa25TVnBW?=
 =?utf-8?B?UnpxaGVwZThLVTFhK0p1Q0Z0TFhsRSsxK0tDUDFWM08wK2R6UWdCbWVvWGhI?=
 =?utf-8?B?NzNQM2RvVy9tNFp0TXJtZXAyNENDdzk2WUJCUTJzOUh3WmljTHliWnBUa2s0?=
 =?utf-8?B?aWVuTkxkSURrY05NNHhsUXRUdWFCR25wbnZ6ajBuR2pLVTFiVEt3enNaTzBK?=
 =?utf-8?B?YVpoQVRKUG5EWGNnckdyRTVBZjVlMWR6Y3FrQVMzTzZJMkgydUlvV09Fd3lY?=
 =?utf-8?B?MnhHK2MvZXZrWmU1WnY2TzFBc2pFVlZjSTkxckhPWWpnaENlZTZCU21PVlda?=
 =?utf-8?B?bVAyakxpSWR3Sm9HR0tBR2t6OWJTRVZSK0JvVEdSbFZwc0plbEt0SzB3Nk9x?=
 =?utf-8?B?a0dvN1VpclhrdndvVXV6cEd5ZmVWbmRkRWtoaW1ONk5PWjdWYTgxK21Wdkov?=
 =?utf-8?B?d3NzbVU2Yi91Zk5rSTkvYWVwUkpjNWhLTFMrQllQclAvSGVzZVFrN2VJd2ZY?=
 =?utf-8?B?RHhpMXQwUWpyTGltL09XV0k2SEZsN2FlM3hrTUZrSXRMdDJkSXV1aU0vYW44?=
 =?utf-8?B?VEJvdFVWUDRpSEhhUkY5dVRJcHV0L0VHeWJTOVZWcmNUTUg4cnAwU2RBM1hV?=
 =?utf-8?B?M0MyNmJMR3N5TUdUcC9vTFFTZjNNeWFjWm5nQ3lnaGQ0SUp2ekxXTnhMSFhN?=
 =?utf-8?B?WkNkb2UrN01OeUVQejBPR3VUZFNoeDlEa21OQzdRYTBxM2RFbmQxVURneVFz?=
 =?utf-8?B?OGtOM0ZJODNUUTZoZGtkZjZLSWdoc2p2Wm1hSkN1bGVOcjlXYmM1dEkvOWJp?=
 =?utf-8?B?d3NxUlhtZjhxaU12eFZLdElkSFQvUTlJOVFrV2pLSVJiaEliNHVjVVlaeWl4?=
 =?utf-8?B?VTltODBuYXZsUWNORnBiK2lzakNCTDBEYmxGb29rb0l0aFB1bS9nak9DWUx1?=
 =?utf-8?B?SWY0dVF4VUZZcFJOL0djZGZVZ3d3NFo1MXh5bHNRcWdqdk9BTlJBNlFSZ3NK?=
 =?utf-8?B?Rnpyam5ycHFPTXpoT1dKL0cwNno4MUVLM3RFakpUM0czS1FtQUttZmVPS3VS?=
 =?utf-8?B?bCt3eVFhckNxTUhoWEdUdHRKTktaaTNybWhSYmtsNXh2MjR1MmF6Z1FxOXgy?=
 =?utf-8?B?ZVVLVGw2VUF1NE01RG93WXNXWXpqenBwSmFvY1BGV2E0cnp5cXljNS9hMzBM?=
 =?utf-8?B?YTlKK2hOU0FuT1kvUERSSFptV3ZEV09UeEduekhiQ3YzZysxbit5VndtTWVO?=
 =?utf-8?B?UWtFM3NFWWhwVnB6WG9EcnYveWRXMitlcWNKZTlTeXBpb2tqaUNZdmNPWXpF?=
 =?utf-8?B?amZ3UG1GSFQ4S2xKNUNualRDZHNsTWxOT2d0bFdkTTFBRTZNNGY4Y0svN2xC?=
 =?utf-8?B?alp2cEhQNVRxOHo5T3NSQXp1RXdTQ1NmTGRscEt6RExiN0ZqK2QxRDYvOVRa?=
 =?utf-8?Q?b/JcrHiici49GdPsAGc0UhWjH6rH7dkY8HOrcjS?=
X-OriginatorOrg: Nvidia.com
X-MS-Exchange-CrossTenant-Network-Message-Id: f19d3676-1a25-4bf5-9daf-08d94c8d7f4c
X-MS-Exchange-CrossTenant-AuthSource: MN2PR12MB3823.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jul 2021 21:21:26.0582
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 43083d15-7273-40c1-b7db-39efd9ccc17a
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: WoOwmmvpOh2EOfOoY6agRtHIp8O2VjAAvdbvo55Q6xEJ2R+y+kPSyjDexV+gwPM9
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BL0PR12MB2499
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--=_MailMate_BF9DAD1B-67EE-4C3B-9EE0-C3C40EC9816C_=
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

On 21 Jul 2021, at 2:39, Huang Ying wrote:

> From: Keith Busch <kbusch@kernel.org>
>
> Reclaim anonymous pages if a migration path is available now that demot=
ion
> provides a non-swap recourse for reclaiming anon pages.
>
> Note that this check is subtly different from the can_age_anon_pages()
> checks.  This mechanism checks whether a specific page in a specific
> context can actually be reclaimed, given current swap space and cgroup
> limits.
>
> can_age_anon_pages() is a much simpler and more preliminary check which=

> just says whether there is a possibility of future reclaim.
>
> Link: https://lkml.kernel.org/r/20210715055145.195411-8-ying.huang@inte=
l.com
> Cc: Keith Busch <kbusch@kernel.org>
> Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
> Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
> Reviewed-by: Yang Shi <shy828301@gmail.com>
> Cc: Michal Hocko <mhocko@suse.com>
> Cc: Zi Yan <ziy@nvidia.com>
> Cc: Wei Xu <weixugc@google.com>
> Cc: David Rientjes <rientjes@google.com>
> Cc: Dan Williams <dan.j.williams@intel.com>
> Cc: David Hildenbrand <david@redhat.com>
> Cc: Greg Thelen <gthelen@google.com>
> Cc: Oscar Salvador <osalvador@suse.de>
> Cc: Yang Shi <yang.shi@linux.alibaba.com>
> Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
> ---
>  mm/vmscan.c | 34 ++++++++++++++++++++++++++++++----
>  1 file changed, 30 insertions(+), 4 deletions(-)

LGTM. Reviewed-by: Zi Yan <ziy@nvidia.com>

=E2=80=94
Best Regards,
Yan, Zi

--=_MailMate_BF9DAD1B-67EE-4C3B-9EE0-C3C40EC9816C_=
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQJDBAEBCgAtFiEEh7yFAW3gwjwQ4C9anbJR82th+ooFAmD4j9APHHppeUBudmlk
aWEuY29tAAoJEJ2yUfNrYfqKCnkP/142QRxKYp0cxnJob46hPecYeinp/YiDrmoi
JeiocVqCVW3FKctVffrfIcVh2FR1AfJfDHGfxhzx3N3FnCocDTINbHTFzxN9pxFY
+Q9k2rMyKXSJh96y68o0cqyRklSpEYT62XTizVD0MhKJYSpqvndq/cexFoDTnlRw
TzLtNHFg7hDqiI3v62Yj6xnoQAZLMZbRJ+rCpdzK51j4RZ+Kc6WqtF9zSI2yCtcY
eRgUdAzVO3bdFMIgijgN4WFMGvYmD5zej8CNzlMGQS5jbHKKJLARV+emGiFYaQzQ
OxQ6LtQkUfwruYql8t4h113iw3UmvXZh3ukPqZWOHkeFagaGaQi2CnwthFaaoWnt
KnHIOGW8c33CTv/g7dHYFFwt0rDW5qo6wFnWNrdZlnGn6AgqLHpOao5H6/PJwlhH
HxlUD/ekU1xLtZSUzFWky8gJHv0jHST/1zY1+KDN3IFpbRzmHp4jn4Wr4xcLAfyx
wISUDnbFl4gpanyMZFbvcO7sVBWLxE8zuqB224Y8JD7nNuEdLVCnlb7MdhsfXh16
pf36TvBcU8Cla4QWgVHvpP+DDYDcEYahLI7e0UeQ/198SqBKzWEoiHZAr02Zy4AB
HZ+zbk+E4d9KcPrK1y74yRkzSL2wb7pNueAJigfnxFGE1Lpk+JI4DgWtlUJog1IB
hKF94YiK
=ALFk
-----END PGP SIGNATURE-----

--=_MailMate_BF9DAD1B-67EE-4C3B-9EE0-C3C40EC9816C_=--

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-17.2 required=3.0 tests=BAYES_00,DKIMWL_WL_HIGH,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,
	INCLUDES_CR_TRAILER,INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,
	SPF_HELO_NONE,SPF_PASS autolearn=unavailable autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id C1A67C6377A
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:15:35 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 9EA4E61208
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:15:35 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229908AbhGUUe6 (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 16:34:58 -0400
Received: from mail-bn1nam07on2080.outbound.protection.outlook.com ([40.107.212.80]:48021
        "EHLO NAM02-BN1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S229764AbhGUUe4 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 16:34:56 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=lfAAaU6tunjNRlsUrevD+pNY32xEDnf1OZTw4RhP1mdayOcZEFiodKBy8ovAVuW0FgZ4jsC3GHsAA1XIprwoISqgomduoCM8oyfnKaMjm9GwrQnXC0p/Hb/EUimuHl/2MOnYD/RGXr0XmZYwJEb74hIU5sez2KQm/XbNu/gWc8sZ5gbonhGx9QC1syo33mf+PBdNSpJho+H566dyJveCdx1CQfJSio4boQL9AQU9H842vDpPCc64JfouRTW0bKk37unhhj97uj6M+UFHk6HmTz1YAyhhUNC5Il4crAvqBxOeOe+DbxQ0CdBA4by7k6A7o3u70Wu628aAjgpeuHbFhA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=f4upZfoqlA5nOOrM4qFtsexv2i01AUHSahH31s1e25k=;
 b=fPw9WvDUlWIHj0O3SyywdxHo62Qmrfv7bCWm1ehAhd07/OIEsKIuEsR0m+ryjtEP6eAt2J/H454bXeoY363wo4p99u6TI54NqpNqcQZb8zUW1f6MyXxw6/KXUM5rVQsrnETVGbNfvEMKBu/m1V8U8u8uRmiuZBBmBPl6KS944/3tGQ5Nf6e6/2ceCoOB9nHW/HU4HeTIZ8SX/TnwgYgFuDqek+dRx0ybkraCVB7N/wxPG7LBlEakziKPp8JoXPeE+CDV3vyy7sv+yHUhtl3p/E9EJtdqD6HLz0X2JjGna/RjQtBWyeF/I6HvZ5J6S0T3lbLS+b0rGyJxyCOUr2ybKg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=nvidia.com; dmarc=pass action=none header.from=nvidia.com;
 dkim=pass header.d=nvidia.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=Nvidia.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=f4upZfoqlA5nOOrM4qFtsexv2i01AUHSahH31s1e25k=;
 b=AJ8nnt2WmmrRnsNwHK0EexEbZd+IYteGZViSNeevzlcfQCESV8BcEiaR9BQT2TRgfwOGLglZeDQ5L98/ggMqTzeal+yee9QSGjRmbx4nDIIN9PYMifQ311/VWxOzT6yvojxrZXVCZmzvhKq8kSUWCv3GwIffleDR+EO7oHqs09S3BEFrALBaLahz8ZSbVSS07NelyWXrBCKAIunhlgJaUhFYVGMTQP82L5TH0iLMAtclk0BFpJlbSlkBKQk8TrONbE7Exk69PXlselFnygQjzVfHx9qX8j9OUu8L8Sn2GL+qplJOR3EbgpBIglZvnET1LTAtTRi/ZdPGUMuO56PkjQ==
Authentication-Results: intel.com; dkim=none (message not signed)
 header.d=none;intel.com; dmarc=none action=none header.from=nvidia.com;
Received: from MN2PR12MB3823.namprd12.prod.outlook.com (2603:10b6:208:168::26)
 by MN2PR12MB4376.namprd12.prod.outlook.com (2603:10b6:208:26c::16) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4352.24; Wed, 21 Jul
 2021 21:15:31 +0000
Received: from MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4]) by MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4%6]) with mapi id 15.20.4352.025; Wed, 21 Jul 2021
 21:15:31 +0000
From: Zi Yan <ziy@nvidia.com>
To: Huang Ying <ying.huang@intel.com>
Cc: Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Yang Shi <shy828301@gmail.com>,
        Greg Thelen <gthelen@google.com>,
        Michal Hocko <mhocko@suse.com>, Wei Xu <weixugc@google.com>,
        Oscar Salvador <osalvador@suse.de>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Keith Busch <kbusch@kernel.org>,
        Yang Shi <yang.shi@linux.alibaba.com>
Subject: Re: [PATCH -V11 6/9] mm/vmscan: add helper for querying ability to age anonymous pages
Date: Wed, 21 Jul 2021 17:15:25 -0400
X-Mailer: MailMate (1.14r5812)
Message-ID: <0D3C3C4C-C25A-484F-A486-0C2ED5737578@nvidia.com>
In-Reply-To: <20210721063926.3024591-6-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-6-ying.huang@intel.com>
Content-Type: multipart/signed;
 boundary="=_MailMate_DC768998-427D-4856-853D-8B884CC14133_=";
 micalg=pgp-sha512; protocol="application/pgp-signature"
X-ClientProxiedBy: BL1PR13CA0117.namprd13.prod.outlook.com
 (2603:10b6:208:2b9::32) To MN2PR12MB3823.namprd12.prod.outlook.com
 (2603:10b6:208:168::26)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from [10.2.55.80] (216.228.112.21) by BL1PR13CA0117.namprd13.prod.outlook.com (2603:10b6:208:2b9::32) with Microsoft SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4373.7 via Frontend Transport; Wed, 21 Jul 2021 21:15:28 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 45b97b3d-ff06-4543-219e-08d94c8cac10
X-MS-TrafficTypeDiagnostic: MN2PR12MB4376:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: <MN2PR12MB4376C476808777F6E3750F19C2E39@MN2PR12MB4376.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8882;
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 3hpQ3ocXzfj3b5ReQtT8C+oXm47IYLRP8s1SF03kPpJyZ6ZPv+JENsaN9JIVhd93z0LMNKyz0OVeY9ylZeK4C8n4jsTyYxfwyf2yDM/a8VwKf9BvczuF2SlnfZSuMcUUPdNHGNC8CTesF6dJvz4o4WxnSOJdrSMZAtqZ3AtEzgI5OslqRpL+I5A76xx9lKwtY78qP4DyWRLfj5e2YpqrcylsnrWB2NFypNvVRCZHT0cWVJ4QqllcJaCDyUv6v5oIIeM3FyitED0xc50KxlCxsnk4MJkBirWReyraT9mTkOWdT3c4H6ly8i2/36u1XVs0yWR0y4sdSybeCxfNUhQIQpnb+8fN0bCi7xxWrSlwD8yPNXN5/xaGzGkbAenp9nzN0GXbGmdvRa/gVHWSoOc6tyHjeBgqzUP6PcKbRP/u9e9wNWm0x2PNp+Ry39/fe6YP4nXfrufk0yHHlRzefxsZHCdZdd/LSDq580KyQtRu/DPEjvOG2N9Ryz1YjSBJIVpeAfcJOhqRucDWeGFU/+nr7e5luNX0C44FSSe09zJpYEJ4BSU7If9YNUz9hTAlNaA5gbtph3DO/YcagX5Ao1E/hJgEUCQICwxWBp0WQnHfipnY6kGtD/KViV4gNeMoCp9IraATG+54S/1FKktt1Zv/d8vcAmPN9OsOSuzUDvAfa0L3/+mmPxBw79sV3JVx4PKQckAIVtn79p+3CRADty+InTO3QjLePVPEVSTwAEHorNBGlBy/mREGGSu6Ljz9E0U49Sbuy8NLLK13KfO2ys6aTAO0gMcg+R4TU3ObEdoML7W9zDrtsodShOJSiQZVEhca
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:MN2PR12MB3823.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(346002)(136003)(39860400002)(376002)(396003)(366004)(966005)(6486002)(2616005)(54906003)(6666004)(6916009)(8936002)(8676002)(21480400003)(36756003)(66556008)(66476007)(478600001)(66946007)(86362001)(83380400001)(16576012)(53546011)(38100700002)(7416002)(316002)(5660300002)(26005)(186003)(4326008)(2906002)(956004)(33964004)(33656002)(235185007)(45980500001)(72826004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?R3llMGc0ZlkzTUxEUU1sdDdaOFovWDduZER5VXlKSUNSa0I0bE9uaE4yT2My?=
 =?utf-8?B?bWsvTmZ0QkdDa0R3NU9qejdEbVhwY05kM2lVYTIwd0F1UHMzcEY1NXJ3aGVD?=
 =?utf-8?B?MnBrcThCcy9oTHk4ajh0clBBSVZSRjl1MlZTTEhPMEVYV2tNNkJyUHYwcmVo?=
 =?utf-8?B?ODdtTkFmUE1tc2tnS1FNMm1kNlhpSEVlOCt0Q2ZzTmEyK0F4UG1DeFN0Sncv?=
 =?utf-8?B?cTRsdmtKa0NzOW00NDBoVE9obngwaFRuRUFIRnFFa0NnZUQ1YmJEa3FkQ0Nq?=
 =?utf-8?B?OC8wWUgrYWpWYXZKYVJlNEVJUGhYd2JsRitSakkxMDdrb0FTUExIWnBLeTRU?=
 =?utf-8?B?S3p0VWFlU0pnZ29lVURUWW1zRVhLVXVwS3cwR1lUSGlxRUxITUpJWVVWRGJo?=
 =?utf-8?B?YUl2N205ZWFIbXZ0NS9DMy9wR29nbkNSdG5FWHgwRWxLMDlpeFFyeWc3SHlV?=
 =?utf-8?B?SWh1UkEvVithUmRQQ0IyRWRpMlRvT1ZuUFRneG45aXFNNFVDQVd4TUlnYXJv?=
 =?utf-8?B?M0lHU08rZHR4UmlrbVBNMzc5S1V2em5ZeWpvd0tSU3ROVFdPQXl6UzFLaVBo?=
 =?utf-8?B?dzRzaGIwSGhOMUhCeTFUK3h2akFDVmQ2c29pQmFiK25iQmtxZmhjQnZEUStw?=
 =?utf-8?B?dUZQVGVEcDZ5SVlKZzhnUDJvZ0lkSGFkME5mSzQ0S3JLeE5IZ1E5NHJwUFpx?=
 =?utf-8?B?clBOZi9pdDNUeTIwZnpJaHQvWDBuSkcySDJLbmpzbnA3OVhBYjF2ellUVm9P?=
 =?utf-8?B?SHdkd1hXNGVMYi9PZGhabGE1Q3NjSXVyWFJSOXFDd3E2SjBPSkVBWXQ5Mm43?=
 =?utf-8?B?UUNtTzR0OWVySnRnMmJ2MzYwdnp5S05wTGI4YXQ0aG9qRHpKZkIvempTaVdm?=
 =?utf-8?B?cGZuZnRPUUJkZlF3dTRvWWhXTDd2cFBnK3Z4SExxRVVneTlHQVpXYWl0WVlY?=
 =?utf-8?B?VVk5UllkUEhhWFpGT0dsQVh6UzRoVmwrbDRjbFFtN2w3ZlE0RUV2VGpxNGdL?=
 =?utf-8?B?R2x4djUwOHNBNkZuWmV5dDVicFlRRzFFdXpZYm0xRDNydjNGc21JUkpMQ0h1?=
 =?utf-8?B?dEhlQVBvZlZ0a1RhdGdTOTg2RjdjNFRtV3o3cXhKSWpBSnlNZi9CR0k4cUJZ?=
 =?utf-8?B?K1ZmcG01VkJDTUJENWYzcm0vNm5DMlo2dWpoNkJUVHg1WmxjU2luTDVhRm1E?=
 =?utf-8?B?RzNsQjZPeHROWVYrS000TTZyNXpYb2dUQXVKZXVzUnl6aUhVZUE3czJOWi9W?=
 =?utf-8?B?bVhTajN4QjZ3TzVTeEJGUnFzMWs0TmFwUEMyZG5lb0ZlVWdPcVMyWThKQUVF?=
 =?utf-8?B?QWNnUGFXQkQzUFJDSkVsaHRLRVAvSEcyOFUwREFnU04zMTdUYjB5RHJvQUIx?=
 =?utf-8?B?NGlub1o4TWtBbG1IajZCZzh4MDRNT0dySlNiZUw5ZmZVRFJ2aTJZelk2KzVu?=
 =?utf-8?B?NTNpWkJTQ1FPcElqOHNLaGdWWS9sTHE0K1VCdml0VnRreEhwcGZRcmE5dHNU?=
 =?utf-8?B?c0xaZU5tWWxjNmVvSEFGTVNrdjNvb0pNRkdXYjJIRWs4Z3cwOUJsdzdrZExv?=
 =?utf-8?B?UzlnMnNpYjlFWitmUk51bE82TVROZzZzaWk3N0tJNVQxMzBmTytyTlVpcmN1?=
 =?utf-8?B?cFJpRDcyWGxpNkc5dUY5KzlJRTh4YXMzT040ZkJRTWZGWEZEU21wVnRYSUxT?=
 =?utf-8?B?VUJ0M1J4eVU2VlFPZnlUNW9qTTIwSEhBdk9HSmcybzdKR05PTXNGRzA0SThD?=
 =?utf-8?Q?SDwzuZ8pM4RLgnTwbrNvn1rxAjGiDlRVo+aBULb?=
X-OriginatorOrg: Nvidia.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 45b97b3d-ff06-4543-219e-08d94c8cac10
X-MS-Exchange-CrossTenant-AuthSource: MN2PR12MB3823.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jul 2021 21:15:31.7125
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 43083d15-7273-40c1-b7db-39efd9ccc17a
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: XkoL8MalEhDWvEWQyclqiuggQpU1oQp7R+X7YyxOHEsjEHyI7Gg/RCHmf0g0WAAq
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB4376
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--=_MailMate_DC768998-427D-4856-853D-8B884CC14133_=
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

On 21 Jul 2021, at 2:39, Huang Ying wrote:

> From: Dave Hansen <dave.hansen@linux.intel.com>
>
> Anonymous pages are kept on their own LRU(s).  These lists could
> theoretically always be scanned and maintained.  But, without swap, the=
re
> is currently nothing the kernel can *do* with the results of a scanned,=

> sorted LRU for anonymous pages.
>
> A check for '!total_swap_pages' currently serves as a valid check as to=

> whether anonymous LRUs should be maintained.  However, another method w=
ill
> be added shortly: page demotion.
>
> Abstract out the 'total_swap_pages' checks into a helper, give it a
> logically significant name, and check for the possibility of page
> demotion.
>
> Link: https://lkml.kernel.org/r/20210715055145.195411-7-ying.huang@inte=
l.com
> Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
> Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
> Reviewed-by: Yang Shi <shy828301@gmail.com>
> Reviewed-by: Greg Thelen <gthelen@google.com>
> Cc: Michal Hocko <mhocko@suse.com>
> Cc: Wei Xu <weixugc@google.com>
> Cc: Oscar Salvador <osalvador@suse.de>
> Cc: Zi Yan <ziy@nvidia.com>
> Cc: David Rientjes <rientjes@google.com>
> Cc: Dan Williams <dan.j.williams@intel.com>
> Cc: David Hildenbrand <david@redhat.com>
> Cc: Keith Busch <kbusch@kernel.org>
> Cc: Yang Shi <yang.shi@linux.alibaba.com>
> Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
> ---
>  mm/vmscan.c | 20 ++++++++++++++++++--
>  1 file changed, 18 insertions(+), 2 deletions(-)
>

LGTM. Reviewed-by: Zi Yan <ziy@nvidia.com>

=E2=80=94
Best Regards,
Yan, Zi

--=_MailMate_DC768998-427D-4856-853D-8B884CC14133_=
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQJDBAEBCgAtFiEEh7yFAW3gwjwQ4C9anbJR82th+ooFAmD4jm0PHHppeUBudmlk
aWEuY29tAAoJEJ2yUfNrYfqKkmkQAIrbS8M+mdUtWz9H8bz/ciFdYY0c3wcYpbUy
MbIrUMy5v54ovyJSekDARCOlq9Db3CMCzkbRhunSG9jVT/1qFBMbY6g4mp1ZF39e
OSr0jkONfvMuRMz41acvAr+xaB1nqxQuLjYtzgQW9COIBAJrpSmeMkYacV8NvKqX
hcUaX+9In33xyNxd9QJUeAnn3MZswzsN1drMChZUg0vo70ow24R64o6OVbbdnixn
Z/d+JKVbb/pqbIg57N2BTX5IZK0acZlvyyw8U6ntN7EMLreLh0UdtuHZVzBd1w+m
gnReqZjrqIFqVFlD2HB+v51mFg00I/YlpeMGNfAepxzheYaeyfW00XACxrxcWRZW
94QWBU2L2C2SZLaJHC75s90dAC+fXxNxqYBRexjm9+8IsEreEdj0AwVaMDHr5XJt
CKKnfJ7YSXKlxlvUYBFyx21ljSXg8aDWZzDBbOyrjBBgNZhLl3uk+PZyTDBx/8jT
+1YpljPw7ndM0oj99rm4hKlOVMMr3JD0AciC06CLAmXEX8MCiCrfgOeNdzG+A/fx
h+1LKwAg2KAFTx97xYq52MKUvqNJ9qGqRa8Vvap6ufV4FEvGlB05lvSSwuF+AsAy
VWQLMa8QrJupZfKXjenzRwvdCuot7bgtZe9r/3DeEHPacKsIfpFLpiT9rH+TEgCb
PyGHYvWf
=oejz
-----END PGP SIGNATURE-----

--=_MailMate_DC768998-427D-4856-853D-8B884CC14133_=--

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-17.2 required=3.0 tests=BAYES_00,DKIMWL_WL_HIGH,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,
	INCLUDES_CR_TRAILER,INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,
	SPF_HELO_NONE,SPF_PASS autolearn=unavailable autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 18579C6377D
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:14:07 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id EBF7C61208
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:14:06 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229864AbhGUUd3 (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 16:33:29 -0400
Received: from mail-mw2nam10on2088.outbound.protection.outlook.com ([40.107.94.88]:22913
        "EHLO NAM10-MW2-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S229516AbhGUUd2 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 16:33:28 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=dI/M3UxfsfKDIRdJL9pR37YawzxL0MjreJNB+iEcpjFPWKgdsPQNY+ij/jKaVRQNYRr2SFPegVbeznkVFuFsy7dofMhD1pX6ww188HzQC23wkYxfLZu7WKnx2N15EanN5hhJ9JDp2sPTCyuis4E28DdlD+rsnqI/Wma6rwML6cTgu5GqGhGPAu7pGdoHYIz2LjhHsEr1V2jJaJ2SD/vkiyyLNr4fXSfIj2wX0mb2ZqmQShTUbYYlel4EuV05BgrFBSaJ1F+EE15zw1NfyajC6uHTIhlS/5wL1nk58m2GNAK5eKBJmPkc738nSuKTBnhyh1PL78BwYPMkyytQqiZURQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=BZF2OxVgK0bHKenW9Ki2OK19f7XRsvcDQPkiId3ZQCQ=;
 b=UVijVG2PhWs/cyVb8XLbeLRTvUCv9rXZZuDmmx2053ZQAlCZneKqxtBcYla7HECogeeyaCYu/bW2u1hf5alJDbw+rbZaS13j25RRSV6ot1YCqZK3IZtcLyBhc8UmQ9WRiY/4wzxH/Sq/CCZLeDq6fgse3Wot1BfG0TI1/ia1Q4DCgB13aqa6DS3BpSPVAk1ohmz9wqQrZggf6BCL5C0zXW8HCmEtMkp/Lb9hmxNIBlk1PiJwgSDKxIcCe6Ljbx2Vy/fSmexxcrmH6Ds+1GAPRz/mZldP2fAeH8r0FLQoPuGS4tF/Y1tyr8JNqjf6l2rjFqExJMSaRjcS2KSdWr3q4A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=nvidia.com; dmarc=pass action=none header.from=nvidia.com;
 dkim=pass header.d=nvidia.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=Nvidia.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=BZF2OxVgK0bHKenW9Ki2OK19f7XRsvcDQPkiId3ZQCQ=;
 b=A0cx9B4y/DaVHr/ERRtiXuKXdMKGTaxbGZTPfPMUuQzwImRb6GCQhKnCYyLdoA7PybB7bQ3PBeoGxxlL9CTN06kvhe8Ke+DdXkC0DKfBURe+uo2aKeYsj5g7KfzoLnI5IodeEDQ/C+UiWD10LGgsBZoxoqOuvxUoh1M20df7oeQEnNI9T0lGYe0Lc6cN5BDL2LmEjAJO5+ecwvNAeQHSTX7q6QTKYmWP8WjMs4QA/MhpUGZ1eM8S9MiYU/r7lVyOHx9SbAsEdOzwHruoh8CujdLJFafVsOfHPa5HafbcnCnMBXE4ic3PVbM58rk0rLZZKJUmCsWGJAIcM7tUm3R2oQ==
Authentication-Results: intel.com; dkim=none (message not signed)
 header.d=none;intel.com; dmarc=none action=none header.from=nvidia.com;
Received: from MN2PR12MB3823.namprd12.prod.outlook.com (2603:10b6:208:168::26)
 by MN2PR12MB4376.namprd12.prod.outlook.com (2603:10b6:208:26c::16) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4352.24; Wed, 21 Jul
 2021 21:14:02 +0000
Received: from MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4]) by MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4%6]) with mapi id 15.20.4352.025; Wed, 21 Jul 2021
 21:14:02 +0000
From: Zi Yan <ziy@nvidia.com>
To: Huang Ying <ying.huang@intel.com>
Cc: Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Yang Shi <shy828301@gmail.com>, Wei Xu <weixugc@google.com>,
        Michal Hocko <mhocko@suse.com>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Oscar Salvador <osalvador@suse.de>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>
Subject: Re: [PATCH -V11 5/9] mm/vmscan: add page demotion counter
Date: Wed, 21 Jul 2021 17:13:56 -0400
X-Mailer: MailMate (1.14r5812)
Message-ID: <6B46E3AD-1504-4F27-B4D7-10BB27479BE4@nvidia.com>
In-Reply-To: <20210721063926.3024591-5-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-5-ying.huang@intel.com>
Content-Type: multipart/signed;
 boundary="=_MailMate_B8B841A2-2B85-4DDE-84F3-4832B9BDBF41_=";
 micalg=pgp-sha512; protocol="application/pgp-signature"
X-ClientProxiedBy: MN2PR10CA0036.namprd10.prod.outlook.com
 (2603:10b6:208:120::49) To MN2PR12MB3823.namprd12.prod.outlook.com
 (2603:10b6:208:168::26)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from [10.2.55.80] (216.228.112.21) by MN2PR10CA0036.namprd10.prod.outlook.com (2603:10b6:208:120::49) with Microsoft SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4331.22 via Frontend Transport; Wed, 21 Jul 2021 21:13:59 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: e8d32ffd-1d9f-484b-06d9-08d94c8c76e9
X-MS-TrafficTypeDiagnostic: MN2PR12MB4376:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: <MN2PR12MB43763424AF1487089ED9CBDBC2E39@MN2PR12MB4376.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:5516;
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 2e+OfDdEenBohzyEEPO0cFB55cxRScB7cQBI/i8vFXZzNBhxgkDFRMTSxGmN7m+jQx87NAscoWHfBvvvscKxgKS0hZjbkWL+dSppi3k+H+HTQzWegOg3VbmWBiNLLijPk2KoYbc19FeAox3JTWIosErG3R4+Argy0vBz+HhlQ7F8MxpN7B/aQ7U5uO+XFimYZrR2x0N4JUB+CcZAcXjT13BQMhRIshu90B8vJatcFTeiDsGDR9CztXZLYRpSGKe4x5Cl/WNflG/stnWsDgqkuAcF0z970/OfTDQmS7QgDM4BEod4/Shzfs/fUEqqUcq+zP69gTgM5uaxlDIyjH4fjEtNX2i2KXEMnYuZkIbQ9n2jE5XhyXkURcaOvWqA03hFLM5rS4tPg463XCRanMFE5ss6ZMGqZqHd2gYN67mVgra6BWYNcV56L3mOyrAdUVEDekunZtu3zDCOtq9QLpyP3Tarl8d/frdgGS7PYj0g/nlYQc0poJKz+aJe7Ut1kRhwaKsaGV1wlRxEumhZVEbDX9KxhyIlpF1VArSXjbzPWUwR9CUqZl+HMRgynqdVjMrDXiuYE0zn5YoZrin+6sM091Lvz7i0pe/jnXWAu/FbtKPfYFHdtPIWa29AvyIf11PAE3viLBIX4wj3jcZOurOXGvgyxS3R6tXubcHM4LePIapu4G9yE3ZauriKbIbtoBLkvslOc5sHQxpc5GBj6cjrY4wGBY6pCQFj10G5JiAsf99sDj2RMF7hVJfGMy9RIWk23H6wcmEkvZ8v9jCgQuMMXzV8HIRSdvKifp7i0GK0q0o=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:MN2PR12MB3823.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(346002)(136003)(39860400002)(376002)(396003)(366004)(966005)(6486002)(2616005)(54906003)(6666004)(6916009)(8936002)(8676002)(21480400003)(36756003)(66556008)(66476007)(478600001)(66946007)(86362001)(83380400001)(16576012)(53546011)(38100700002)(7416002)(316002)(5660300002)(26005)(186003)(4326008)(2906002)(956004)(33964004)(33656002)(235185007)(45980500001)(72826004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?cEZTbWs2SzdrMUFJUnNJUUtXek9NQU1pM2grN3ZJV2V3d2EvUWs1Mll3Mi9t?=
 =?utf-8?B?RTRESG9JUHIxNzJaRFE0RVpMK3pwdHFmUUVlbEFQbDc5UmlaRDdUbUNjRXZN?=
 =?utf-8?B?YnFUTVJHYXVyM2drUFMraytic2F1U3Q1ZEtDWUxsUWVlYnFSY0FZRUxFazBC?=
 =?utf-8?B?QXYyUHlZa0krZ1lmR2ZMamEwU1RoQWEweDVuV1E3ZXYvZ1VLR1p2WXN2OVZu?=
 =?utf-8?B?STdQaVYxZW1FOEJ2YWU4TWgwejJqVjZmNUF0bDBiYmNONG1LRW54RWE0MXhx?=
 =?utf-8?B?N05qOC85OGdFbGdsTk1GY0dLN3lDVzMwSENFNFhXNG9iMnFwNWU5UXd3djR6?=
 =?utf-8?B?eWtFVjVUZVF2S1gwQVdqRTNGRkp0Q1NWOU1OaDh5ditLTzdvQWdHQXM5YkdV?=
 =?utf-8?B?VGxNaGZiLzZTcm9NYzdaSVFiZVJVc0VTMGNGZnN6eWRleEkwMW1zZGdKc0No?=
 =?utf-8?B?UUFKSTBNQlhmem5kblpiNERGamM0d2ZoWFIvK01GeGVOdkt0Rlp5VElxWlJW?=
 =?utf-8?B?WDhoRlNzOExtWDhsejZMaUFuU1dvSHpjOVJmWGZDQnVRWVNzZkRqWXBtZzJB?=
 =?utf-8?B?U2ZiempveFAvaGMxcE9FcTA3b3lMT1ByYXVlak44eHN3R2JYNExpYm1Qcysr?=
 =?utf-8?B?Rm9ldHNoVCtDWTB0Z1Z3L29DTGEyeXNHS3J0UlU1cnFrSnpKa3JpQkpNOHZW?=
 =?utf-8?B?SlJuT2FUbzkvdkhmcWtBV2tuQVdvZEtjbFJRcmI1ZStPOUZZNGgxKzVFSlRj?=
 =?utf-8?B?K3ljUHZldUphRW8zQ2pQeXJBVFdIeDRpR3VMelNWaEExQ2xCaklzLzU0OEpE?=
 =?utf-8?B?T3dWWTkwS1VBQnlWQnY4b1YrNTQ4YXEyYkNLTHB4S0QwL0c4cDAwKzNhUWN0?=
 =?utf-8?B?TmVJQjFYU0JTSXVMdTFuRC9iSmdxdUNzTVVRWldEVlRCRENwZUJIT0ZJbU9I?=
 =?utf-8?B?NWVuNkRPZm83enZRbU5oM0lBSzFYeHFpQjA0VTZQajdlSkFaVnIrZFFYSHRj?=
 =?utf-8?B?UkdLblJKdWdmenFHU3lsZmhrS0V5LzJKVllidi9pOG5lT255UXlVdGgvaE02?=
 =?utf-8?B?TmFzL3pwa1NDazRLTWQ4cDEwRUg3UFdvYXhBY2hFcmdvcitTZ0FlWmwveEdo?=
 =?utf-8?B?ZkY0UmUzdHJaKzhKckxhVXgyaUtkRXR4NnVwLzZ2ZU4vY09YK0pRR1ZVTjJL?=
 =?utf-8?B?cm5XNGF6Z2liTXRzU2tNdHBUUWEwTW9RY2JuYWQyTnJoeW9tNUlIRTU3TDQz?=
 =?utf-8?B?MXVzYlF3L2l1YlhhUk4xQmEwZ2U1QTEyRWRwMUZ6TEF3bytuMnM2OCsxWmpm?=
 =?utf-8?B?TG8zd2V3UUZMMXNWWTVMUm5PWHR4cTJheG90aklON1FXRzdDS3FwOE53S2NV?=
 =?utf-8?B?ZUovVXkvUEdaOHozazlCUHh3TzNTYmRlOWZSSW5hV1htRm5pRHEyTGVyVFNw?=
 =?utf-8?B?MzZwMS9TcHJETEhLZVJLM3k0THFrOFVwN1hicW5NcTVMMGxZUDJSMkliSUNH?=
 =?utf-8?B?SjdRbDhYVTFZYlBtT01HZk45bVRzWWhYdU1tMUFyak1iYzl3bHlTUnJqZ0Ja?=
 =?utf-8?B?aEN1MW1hVkFQcTdSY2pBb1FwV1I5dk5GWVh4L3UyUjNxVHlqY0FkVWtlbmlF?=
 =?utf-8?B?SzFUWlZOZHhQZFAxUGQ3T2U4WjdDTUxqOGhXR2N6Q3gxWnVSbDQ2NndSWnRo?=
 =?utf-8?B?NEp3Z3pWb0tvWjhuRVFIY21XTFJtQ3NseHhDclUvV2wzRlNrdy9qR0Jvbktr?=
 =?utf-8?Q?lX2V+br0gdNFfUIwbmC1klLQsQu6edTUjLqYVRK?=
X-OriginatorOrg: Nvidia.com
X-MS-Exchange-CrossTenant-Network-Message-Id: e8d32ffd-1d9f-484b-06d9-08d94c8c76e9
X-MS-Exchange-CrossTenant-AuthSource: MN2PR12MB3823.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jul 2021 21:14:02.4970
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 43083d15-7273-40c1-b7db-39efd9ccc17a
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: TBY6rGRJBiZs3I748ipzVXJ4184Z5L9jM3E6Fcxx4/gjtI70I27qCcidjdO+He5H
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB4376
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--=_MailMate_B8B841A2-2B85-4DDE-84F3-4832B9BDBF41_=
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

On 21 Jul 2021, at 2:39, Huang Ying wrote:

> From: Yang Shi <yang.shi@linux.alibaba.com>
>
> Account the number of demoted pages.
>
> Add pgdemote_kswapd and pgdemote_direct VM counters showed in
> /proc/vmstat.
>
> [ daveh:
>    - __count_vm_events() a bit, and made them look at the THP
>      size directly rather than getting data from migrate_pages()
> ]
>
> Link: https://lkml.kernel.org/r/20210715055145.195411-6-ying.huang@inte=
l.com
> Signed-off-by: Yang Shi <yang.shi@linux.alibaba.com>
> Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
> Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
> Reviewed-by: Yang Shi <shy828301@gmail.com>
> Reviewed-by: Wei Xu <weixugc@google.com>
> Cc: Michal Hocko <mhocko@suse.com>
> Cc: Zi Yan <ziy@nvidia.com>
> Cc: David Rientjes <rientjes@google.com>
> Cc: Dan Williams <dan.j.williams@intel.com>
> Cc: David Hildenbrand <david@redhat.com>
> Cc: Oscar Salvador <osalvador@suse.de>
> Cc: Greg Thelen <gthelen@google.com>
> Cc: Keith Busch <kbusch@kernel.org>
> Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
> ---
>  include/linux/vm_event_item.h | 2 ++
>  mm/vmscan.c                   | 5 +++++
>  mm/vmstat.c                   | 2 ++
>  3 files changed, 9 insertions(+)
>

LGTM. Reviewed-by: Zi Yan <ziy@nvidia.com>


=E2=80=94
Best Regards,
Yan, Zi

--=_MailMate_B8B841A2-2B85-4DDE-84F3-4832B9BDBF41_=
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQJDBAEBCgAtFiEEh7yFAW3gwjwQ4C9anbJR82th+ooFAmD4jhQPHHppeUBudmlk
aWEuY29tAAoJEJ2yUfNrYfqKVM4QAIjMzfltkj+v72135tkjfcofPYCMG76Ay+7U
Esnjn4pDHqTGZimrmlUGyNyJo0PpsMJ8jolMXKjNuw9WwXZS91N7LAAxuWb6PyFD
02k+8zn4wFtMVoR9MudTb4gla/+3KwWyUmr5OXHVbWURDvjHMtIypQneZ4h8+tUr
Bkzw0dcgqTLPJKIIeLdKKXyo9mg6y9XRgfeYi4YRhQBBazNUJvD0V9jAVhHEXaMK
q5X3Iqao9ag79ZdAJQQIEhgE2fKpyZDerpzMy676IDn+pxt9HLtcWnxH+iwTlXDB
t+ySjAU0ONRXNaR/1wTsDyptYlVY7MJ9q8XVhHLvhJn6AMlA2HDEytvO0Dj3tUFx
Gi7JHFtmzP8BAbp3GR9bx5AyOvBtvZwMkivJi3vSES+P+Nol5O6/3WGlhFIGdeyY
FQSjqxWQx3imM2xsLwccqxSRlSmEeolXtC7PJgN9KdFqtKomrJfdSJiyV/ngeC+x
Sti6xO7GsNuyik2mOt2RIvJqLHq8vSfKVt0qBGt7BtNYKsBfiIKHDR5ahYOOLJ6/
S+Cq1D2LJ/S8ulh2drb7d8im/sYL7yULWUR68cfaQAOA0fo0m7mjd+ceArLUFncj
2GoahbcExr5RTcY5rLG6mDBzDetms7USrdNVVtHAZ5W4B4OS67GWatSFvrVM7CSd
+CX/WeB0
=8IB8
-----END PGP SIGNATURE-----

--=_MailMate_B8B841A2-2B85-4DDE-84F3-4832B9BDBF41_=--

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-17.2 required=3.0 tests=BAYES_00,DKIMWL_WL_HIGH,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,
	INCLUDES_CR_TRAILER,INCLUDES_PATCH,MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,
	SPF_HELO_NONE,SPF_PASS autolearn=unavailable autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 5B61AC6377A
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:11:31 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 3C89361222
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:11:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229961AbhGUUav (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 16:30:51 -0400
Received: from mail-dm6nam10on2060.outbound.protection.outlook.com ([40.107.93.60]:8837
        "EHLO NAM10-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S229545AbhGUUau (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 16:30:50 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=l5KN5lsTFW1vyJLDdLDjVPw77hoe5Z1T1gN236AsOE6Meur/XE9IbUGJVVcmeoJsmlED7NBd8HTnnaOnspDxOXANB0nkEuVR6di2W42vnJyJ06AMGqnhv3k25K2pheZzYgGeumh+IpbxF88y2VCwo1C6lxeZeYDlBRAUmNDErNZvNTo7738d5DFqwlbpWK4w/bT0z9nzUMbNeUVk6S2sOh53MMIBU0jAaYKU0eRzSX1ncYZalVI8oAuajtTmDcrzTQGBY6QRvraJqv2xcnaDqYvlHhwSXk+L1ZfjQMICg2Zi3fbSGdXjJkt0pH1gmbLbL8kqJKCMSR8pK3ZhBCiftQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zgvS183g+tNU3r00+MLjBQW8AUKus7oATLb2FpBcTS0=;
 b=UmGQxhyniosRUhzrQOZgyq0b5dTiJiHR8ES6h1kNupmsNI1ahGPrh77XsiDdtDJnOJXBJ30o0G1+iHHvR6GynaFlslzmf7waKYyZKusWNULKOzBe6MzBso/zYjw198MfiAA4rbWLHQ+6nqu7LTCXXy+7os52JGGyCyP7bWuOOgiYC/HCAooiM//tIFNnqO9+5V5JNXkbbnMSRUsDIQFVQqGJwgYP/m3LNVRPr3dkXX8+QpHgUsw0zr3p3QAeZAIoh/CHWD2cPzk9TJdstjp2aHTtiz7ZYTk4ZEa/c7aXHGtbboNnCZ/MtAdniJz9FD7MR8DYS5Z9iOJEhamY151HSg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=nvidia.com; dmarc=pass action=none header.from=nvidia.com;
 dkim=pass header.d=nvidia.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=Nvidia.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=zgvS183g+tNU3r00+MLjBQW8AUKus7oATLb2FpBcTS0=;
 b=QE6S9jd7oQf+C/yszvzJ6nC6EXmsqTgECefKPtW5kcRc6DTEZnTIuxYqK9c73iVqKzB+Swy7EfG4SmR/3uAgvMLadumPbTUN41M9WO6SejoPPAfAmouPtJEep7Knkn5lymK9gc78cirKdYErLSYn2le/2OiEVX6gTH10n9oHmsVG+ok+jECzKLlz6Qp9k5ePeOVdAmjXVE73XbjMupbJX0iB1BkOw1kbOl3UXueNAZ/BJ+69+KhqP0xicN/aP0du0Ha77ctgElwBe2n/DxGMF4XL0DLElx+GxTk1NgaxrdHcZ15O+fA+sRgpvyzKnJDZ+7DMPTzpMBmd2u56kAbA7Q==
Authentication-Results: intel.com; dkim=none (message not signed)
 header.d=none;intel.com; dmarc=none action=none header.from=nvidia.com;
Received: from MN2PR12MB3823.namprd12.prod.outlook.com (2603:10b6:208:168::26)
 by MN2PR12MB4423.namprd12.prod.outlook.com (2603:10b6:208:24f::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4352.24; Wed, 21 Jul
 2021 21:11:25 +0000
Received: from MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4]) by MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4%6]) with mapi id 15.20.4352.025; Wed, 21 Jul 2021
 21:11:25 +0000
From: Zi Yan <ziy@nvidia.com>
To: Huang Ying <ying.huang@intel.com>
Cc: Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Yang Shi <shy828301@gmail.com>, Wei Xu <weixugc@google.com>,
        Oscar Salvador <osalvador@suse.de>,
        Michal Hocko <mhocko@suse.com>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>
Subject: Re: [PATCH -V11 4/9] mm/migrate: demote pages during reclaim
Date: Wed, 21 Jul 2021 17:11:19 -0400
X-Mailer: MailMate (1.14r5812)
Message-ID: <CB92E029-2471-4B99-B80F-EE63B2D7135B@nvidia.com>
In-Reply-To: <20210721063926.3024591-4-ying.huang@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-4-ying.huang@intel.com>
Content-Type: multipart/signed;
 boundary="=_MailMate_0EE8932A-2694-4A6D-8000-5306977F2645_=";
 micalg=pgp-sha512; protocol="application/pgp-signature"
X-ClientProxiedBy: MN2PR22CA0029.namprd22.prod.outlook.com
 (2603:10b6:208:238::34) To MN2PR12MB3823.namprd12.prod.outlook.com
 (2603:10b6:208:168::26)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from [10.2.55.80] (216.228.112.21) by MN2PR22CA0029.namprd22.prod.outlook.com (2603:10b6:208:238::34) with Microsoft SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4331.21 via Frontend Transport; Wed, 21 Jul 2021 21:11:22 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: 9271e310-6c83-4cfd-f94d-08d94c8c194e
X-MS-TrafficTypeDiagnostic: MN2PR12MB4423:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: <MN2PR12MB44235D19EAC796798F4188A3C2E39@MN2PR12MB4423.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:7691;
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: xQ6ghXLq1wEBz3zoAr23QAYPNn12oxKFdFCngojLXnE0SvdcJ+nOgnsnJk31GyP4U37t4WtR1kHBVSOcwpNa0PizXO2MfbAPXHi+OlDLFrnpJs29rh9hef3NqUcazP72b/DzC9y410L5F/AfS2JHwwYc5ojzx5KrP0EoFvu9459BxwAApR1ZW376gh8OsM1CFddjHyzX8AG3DStxLom1Pc9B4cLME0gESBv/5OmtcVLSUV+yLpL3Wf9ZYYVISXdlx3u+xpLyqXQesOdsthHd2GbsGVBMUe84RMGHLLt1jFBMCzV9I7zekPmaz9q/BHVYpHZFHt2juqps2v7ReQKwMSE/Ku5PMHdGqfUrW15IteQuBL3gIi4JqJUDVXdc/t+pCNTsi5qgvGcgHnVL4gYyD7TOB4IBZ5twYtSlWUWrp/G8eET1fUrrybYCOiGphNIrD0DjgrI0TcSV7SwI1Nj96hIZRVir0t5Koz+IG37SMI4vlfRkkG2f+E5bF8IZ7/b43eoGOFv12SYfbXvV5XMB+jA94H9r3aLmaQPHHP5gh+7T8+q0TH7N+If30zvftzobucZpYGyxpcRJ1LdV+2mjNaa//TTwxrehf4Iyg8DcgYPtcXckCcEcmk6JWFN27Z3PbNN60P+/0CjWpVz+JAhu3lnxFtyQpjtEMTJxwDyvnVbBsy08vgwke7BWA9sruaKzSrVXb0tRgiQ72ae3co7MT63RGSk5s8W/mYuy4iH4jrJkIBGitGOpObbMXGqTnI9wGocoF/+2ihMFPzZzXBHhDXpyz8bABTYmYEXIvERZN5ahjoJP5AE2dfbgThsNTgEH
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:MN2PR12MB3823.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(346002)(39860400002)(136003)(366004)(376002)(396003)(966005)(6486002)(21480400003)(2616005)(54906003)(6666004)(6916009)(8676002)(8936002)(36756003)(66946007)(66556008)(66476007)(478600001)(86362001)(83380400001)(16576012)(53546011)(38100700002)(7416002)(316002)(5660300002)(26005)(186003)(4326008)(2906002)(956004)(33964004)(33656002)(235185007)(72826004)(45980500001);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?VXpzTmNsRVhPMG5iTHZPNnlBanZCU2NIRkdwb1NxditsdlB6ZURHZi9QSlpL?=
 =?utf-8?B?V2ZIVFpsWFhWVW5tVnBSY2NOOEI3bjhySFVzQ0pTaDI4YlZ4aThIQVN4Tk5B?=
 =?utf-8?B?ZmtaS0hmQlFSTGhybHgrYWd4MVZTbXA0MmNJdFZKSDl6Rlducnp4L2N0WW5v?=
 =?utf-8?B?cTN0ZzB4YUFCMmQzVVgySXBPOEFHL2cxVWRvbG9ReUNRSWhhU1ZGZUcxMjd5?=
 =?utf-8?B?MW5jRUR2MDVvTnMzRkZBeEphZERkZFRIOFh6NUtlckdPMXl3ZWtCbVptbVBB?=
 =?utf-8?B?RWtqeFlNb1YvYkFNWHB5ZWVnWXBPRHJhWnp4LzZRMUVSV2dLaHI3VXFmdEE2?=
 =?utf-8?B?TVBoQUhGeEw5aTlYeDFUTmdlTVdiemVRNGc2aTdzdG1pVithTGtmVUlhaFky?=
 =?utf-8?B?UjhkNlFrVmxPVEZJamJXRy9hSEIxcjY5M092ZmU1WU9Ia0F6Z3M5dDFrMjVQ?=
 =?utf-8?B?RTl2RUFyQ1FYbEFIVTFESGwwZWs1K29vVHNPZ1MwbzA5bE1jTnVwdmYrNHR5?=
 =?utf-8?B?KzNzZU4rM2s2b2tyTTl3QmlsdE5jM1BiMXc2cnhHemNXamloYVA2UFpIQjVZ?=
 =?utf-8?B?WmVFWCs5M0ZUUGYrb3lvS2pUSitMaUROeHdPUHU3NTBLS2RoZ1J0VmxQWVBR?=
 =?utf-8?B?SUcxbEw0YmJkb01JN1ZUWUE1U09LakkyQjRDZThTM1pna3QxcnZzekJObmhi?=
 =?utf-8?B?THcxVmVDQmhTZVNtbEUwVXZaSFZmbU5jS3FicXozcUFFU3VqR3d5TXk0c3Mw?=
 =?utf-8?B?SVhnNEFXeGQvUHdLVlE5bVpMK1BFZlMxanpmOE1QeE43MnQ5aWRSM1ozVmJQ?=
 =?utf-8?B?RGNzVU5jZk9McFViVFJMbkRCNXU0QXRLRzE1Qk5zM0hGMUl6T1E5UU5STFll?=
 =?utf-8?B?TWlCK3U4d09sUW82WGVrQ3ZKcUVLd1g4dDJ3aHVoTUhoRCtVOGFPZVdUVjMy?=
 =?utf-8?B?MFYya0FmWVg5ZjhGT25FcjNrSXRYNVBlZEhyWVBrYjBpVjhydVVkbWlSNXNN?=
 =?utf-8?B?L2M4bkUxU0xKMFhvU1p4YzdpSXZpcWtBTlc2dk52T3BNR2FxZ2h2OFV2UTh2?=
 =?utf-8?B?eC9HTGlFUFRTemtGblc3bXFRdzJubDBaVDNSU2tGR2tWRlgyNXh0dUtsVEUx?=
 =?utf-8?B?dEJsck53bnhOVDZqTmU1OXpvNjFFWXdQK0dzNlAzOGViMDBlSXhNUzRZOUht?=
 =?utf-8?B?UDY5VWJTZnErQUgyT0JmMkhkR0RTdTYvVUZuTitnOGJLMERBd250WjJrZFRi?=
 =?utf-8?B?TTUyQUpndDR1R2kxMlVkcTlxWkRkWnFZSnpabjZsMlJFbW9FSGp2NGNWVjlj?=
 =?utf-8?B?NkVxa1QzMTQ1RFQyS3RWNS9XSlA4NjQzYXJKMUMwUVNmdjRtQXVJT3JmeTFO?=
 =?utf-8?B?T05QS0E2bVFhQTZyTGV4V3NkUDFyN2NLeFJtUHo2K3FNUmJUVGNKbXRDSmxp?=
 =?utf-8?B?THVONjZ5Ykg3eGNHZFE0SjB4M0hOZzNFd2pVZGIwTlFxZUZ4ZDlqZzA2a3Nx?=
 =?utf-8?B?RUVUSzRLQnlKNDFLbFZpaDhCWCtzeFQ1UzY0V3NKbFZXODVLL1VaTG9KcDBP?=
 =?utf-8?B?dnA1VisyOEZ4UWRHcDZOOEk4UXBkVzA2VjB4Ly9TZWhxZE9tT2ZseFFoejVX?=
 =?utf-8?B?L0pyMnY5UjNGOWZQOG5iOFdESlc1VmJDUnBGdWtxR2NURmNPTmZEejVWd3o4?=
 =?utf-8?B?ZmtNcllxVUh4ZU4vRkhoeUpDaXV6YXdBZHpaYndreUlCR0JaK2hxdmM5akc0?=
 =?utf-8?Q?aYvb5e9a96EJxFaIUk9R61hzRBDfOUm+YXtB9mJ?=
X-OriginatorOrg: Nvidia.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 9271e310-6c83-4cfd-f94d-08d94c8c194e
X-MS-Exchange-CrossTenant-AuthSource: MN2PR12MB3823.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jul 2021 21:11:25.5043
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 43083d15-7273-40c1-b7db-39efd9ccc17a
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: nOjhygTD6jqqvaQFYGRbizhPKPyNjVkGhiLh5ColG7Q9+gexTF+V7J97MmiXTrvc
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB4423
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--=_MailMate_0EE8932A-2694-4A6D-8000-5306977F2645_=
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

On 21 Jul 2021, at 2:39, Huang Ying wrote:

> From: Dave Hansen <dave.hansen@linux.intel.com>
>
> This is mostly derived from a patch from Yang Shi:
>
> 	https://lore.kernel.org/linux-mm/1560468577-101178-10-git-send-email-y=
ang.shi@linux.alibaba.com/
>
> Add code to the reclaim path (shrink_page_list()) to "demote" data to
> another NUMA node instead of discarding the data.  This always avoids t=
he
> cost of I/O needed to read the page back in and sometimes avoids the
> writeout cost when the page is dirty.
>
> A second pass through shrink_page_list() will be made if any demotions
> fail.  This essentially falls back to normal reclaim behavior in the ca=
se
> that demotions fail.  Previous versions of this patch may have simply
> failed to reclaim pages which were eligible for demotion but were unabl=
e
> to be demoted in practice.
>
> For some cases, for example, MADV_PAGEOUT, the pages are always discard=
ed
> instead of demoted to follow the kernel API definition.  Because
> MADV_PAGEOUT is defined as freeing specified pages regardless in which
> tier they are.
>
> Note: This just adds the start of infrastructure for migration.  It is
> actually disabled next to the FIXME in migrate_demote_page_ok().
>
> Link: https://lkml.kernel.org/r/20210715055145.195411-5-ying.huang@inte=
l.com
> Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
> Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
> Reviewed-by: Yang Shi <shy828301@gmail.com>
> Reviewed-by: Wei Xu <weixugc@google.com>
> Reviewed-by: Oscar Salvador <osalvador@suse.de>
> Cc: Michal Hocko <mhocko@suse.com>
> Cc: Zi Yan <ziy@nvidia.com>
> Cc: David Rientjes <rientjes@google.com>
> Cc: Dan Williams <dan.j.williams@intel.com>
> Cc: David Hildenbrand <david@redhat.com>
> Cc: Greg Thelen <gthelen@google.com>
> Cc: Keith Busch <kbusch@kernel.org>
> Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
> ---
>  include/linux/migrate.h        |  9 ++++
>  include/trace/events/migrate.h |  3 +-
>  mm/vmscan.c                    | 85 ++++++++++++++++++++++++++++++++++=

>  3 files changed, 96 insertions(+), 1 deletion(-)
>

LGTM. Reviewed-by: Zi Yan <ziy@nvidia.com>

=E2=80=94
Best Regards,
Yan, Zi

--=_MailMate_0EE8932A-2694-4A6D-8000-5306977F2645_=
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQJDBAEBCgAtFiEEh7yFAW3gwjwQ4C9anbJR82th+ooFAmD4jXcPHHppeUBudmlk
aWEuY29tAAoJEJ2yUfNrYfqKN4sP/A3a75oibyf3dRoCp+FlADwxCH1emeQEtlEZ
azlMElLfQ6bZ17wPnYTefB4Q6hcM3xwyGcW812FFNNhWBiELg90AkS6emwpOQeY9
rgwo/20QJUyEhdT2sm3WklcLaoD+/2UwTxVB+Pb4xqY1tQnqtMuMX3SUuC6+CP3Z
VL1BuO/yDLQ4iXqdw9RDirU64S35N4fI10cOwhb5Uzs5+4q6OX7CIw0Z9X0XPwmZ
Bd195DEtTZ1Tofqlti0Xd9w71Dfhb9BlXVQtMDBXl0I+Mf4bqYlkF2C7FDLzw4A/
nA4mwcNq967inlVyi/KlfWWzpSMP7t1puj1kixXU+ZnNTKDIKDPyaoIdIWM/531h
PUz/KhrprenirdxUXePbjrHF5A9jzP98HCPf/QTVH8nwsIW8vtO9B9ltrK/IGKqH
JmWCL95/cXJQg4iRHdP+Wcp5haBaa1jol2gqA8WQrgDJXKeqCXbmqG6PXokU98pH
3U7Im5E/+VKWUWvx1Dbcvzgs7oMdiBzwCQQb2iusRv4ntQlriPvURrkGVz+VoPce
m5zzEYybLDP3bILoJ/zZUAYOtSmmeKiG9So0c6xciKZPh7wZw9j3o0sJ4D/pPkdZ
yd9vMt6Sbm9Auqw9sFFJENxPe+8zFfHLm8v8QsQrSWIPxF9d1bCsmBawTsw0na2E
4+3TrulJ
=KURz
-----END PGP SIGNATURE-----

--=_MailMate_0EE8932A-2694-4A6D-8000-5306977F2645_=--

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id C9675C433EF
	for <linux-kernel@archiver.kernel.org>; Fri, 25 Feb 2022 02:32:27 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236791AbiBYCc5 (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Thu, 24 Feb 2022 21:32:57 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:42044 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S230028AbiBYCcz (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 24 Feb 2022 21:32:55 -0500
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 8068D18887A
        for <linux-kernel@vger.kernel.org>; Thu, 24 Feb 2022 18:32:24 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1645756344; x=1677292344;
  h=from:to:cc:subject:references:date:in-reply-to:
   message-id:mime-version;
  bh=Te4PHcJ/B1DO1cDp06aZcLXva0MLz3mhGNrCcZ9Dsz0=;
  b=PJBlVr7vINRFPddenXJ3mjTg0bm2YooVqP58uH5s8AOI9C6dR0I4ppBq
   xFyZRftht6tpW56/+wCaUTPGkcJNErJiRZijxyC7+aFjeurpsNPBsx5c6
   2niwDlElVtCyrDbeARXf5Y2qqygVeKH8yHC9GiHtXhsz01Au4ybyQE5LR
   9T4/R6kt/vGKbUDXy2dDvz3eZ0xBXOkZTE04day/L4zTxr+DmkUvnXmsZ
   nJc/tCuvii1Kn4U4wWckC4F4811YxDie5JsPqvbWATTg5xFdsFnQhQjyy
   +HSdFYWRTRkHiiHgYotyGYwbHGCpMs5sLemWi3Pz9VZkqbJM/u0D2xc5s
   Q==;
X-IronPort-AV: E=McAfee;i="6200,9189,10268"; a="277035410"
X-IronPort-AV: E=Sophos;i="5.90,134,1643702400"; 
   d="scan'208";a="277035410"
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
  by fmsmga101.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 24 Feb 2022 18:32:24 -0800
X-IronPort-AV: E=Sophos;i="5.90,134,1643702400"; 
   d="scan'208";a="628702227"
Received: from yhuang6-desk2.sh.intel.com (HELO yhuang6-desk2.ccr.corp.intel.com) ([10.239.13.11])
  by fmsmga003-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 24 Feb 2022 18:32:21 -0800
From: "Huang, Ying" <ying.huang@intel.com>
To: Abhishek Goel <huntbag@linux.vnet.ibm.com>
Cc: Dave Hansen <dave.hansen@intel.com>,
        Dave Hansen <dave.hansen@linux.intel.com>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org, Zi Yan <ziy@nvidia.com>,
        David Hildenbrand <david@redhat.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Andrew Morton <akpm@linux-foundation.org>
Subject: Re: [PATCH -V11 2/9] mm/migrate: update node demotion order on
 hotplug events
References: <20210721063926.3024591-1-ying.huang@intel.com>
        <20210721063926.3024591-2-ying.huang@intel.com>
        <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
        <f5edb9dc-8b25-47c2-9905-09e88e41861b@intel.com>
        <4e8067e1-0574-c9d2-9d6c-d676d32071bd@linux.vnet.ibm.com>
Date: Fri, 25 Feb 2022 10:32:20 +0800
In-Reply-To: <4e8067e1-0574-c9d2-9d6c-d676d32071bd@linux.vnet.ibm.com>
        (Abhishek Goel's message of "Fri, 25 Feb 2022 05:07:15 +0530")
Message-ID: <87pmnb3ccr.fsf@yhuang6-desk2.ccr.corp.intel.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/27.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=ascii
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi, Abhishek,

Abhishek Goel <huntbag@linux.vnet.ibm.com> writes:

> On 24/02/22 05:35, Dave Hansen wrote:
>> On 2/23/22 15:02, Abhishek Goel wrote:
>>> If needed, I will provide experiment results and traces that were used
>>> to conclude this.
>> It would be great if you can provide some more info.  Even just a CPU
>> time profile would be helpful.
>
> Average total time taken for SMT=8 to SMT=1 in v5.14 : 20s
>
> Average total time taken for SMT=8 to SMT=1 in v5.15 : 36s
>
> (Observed in system with 150+ CPUs )

We have run into a memory hotplug regression before.  Let's check
whether the problem is similar.  Can you try the below debug patch?

Best Regards,
Huang, Ying

----------------------------8<------------------------------------------
>From 500c0b53436b7a697ed5d77241abbc0d5d3cfc07 Mon Sep 17 00:00:00 2001
From: Huang Ying <ying.huang@intel.com>
Date: Wed, 29 Sep 2021 10:57:19 +0800
Subject: [PATCH] mm/migrate: Debug CPU hotplug regression

Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
---
 mm/migrate.c | 20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/mm/migrate.c b/mm/migrate.c
index c7da064b4781..c4805f15e616 100644
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@ -3261,15 +3261,17 @@ static int __meminit migrate_on_reclaim_callback(struct notifier_block *self,
  * The ordering is also currently dependent on which nodes have
  * CPUs.  That means we need CPU on/offline notification too.
  */
-static int migration_online_cpu(unsigned int cpu)
+static int migration_cpu_hotplug(unsigned int cpu)
 {
-	set_migration_target_nodes();
-	return 0;
-}
+	static int nr_cpu_node_saved;
+	int nr_cpu_node;
+
+	nr_cpu_node = num_node_state(N_CPU);
+	if (nr_cpu_node != nr_cpu_node_saved) {
+		set_migration_target_nodes();
+		nr_cpu_node_saved = nr_cpu_node;
+	}
 
-static int migration_offline_cpu(unsigned int cpu)
-{
-	set_migration_target_nodes();
 	return 0;
 }
 
@@ -3283,7 +3285,7 @@ static int __init migrate_on_reclaim_init(void)
 	WARN_ON(!node_demotion);
 
 	ret = cpuhp_setup_state_nocalls(CPUHP_MM_DEMOTION_DEAD, "mm/demotion:offline",
-					NULL, migration_offline_cpu);
+					NULL, migration_cpu_hotplug);
 	/*
 	 * In the unlikely case that this fails, the automatic
 	 * migration targets may become suboptimal for nodes
@@ -3292,7 +3294,7 @@ static int __init migrate_on_reclaim_init(void)
 	 */
 	WARN_ON(ret < 0);
 	ret = cpuhp_setup_state(CPUHP_AP_MM_DEMOTION_ONLINE, "mm/demotion:online",
-				migration_online_cpu, NULL);
+				migration_cpu_hotplug, NULL);
 	WARN_ON(ret < 0);
 
 	hotplug_memory_notifier(migrate_on_reclaim_callback, 100);
-- 
2.30.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id E3AD2C433F5
	for <linux-kernel@archiver.kernel.org>; Fri, 25 Feb 2022 00:49:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236166AbiBYAuY (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Thu, 24 Feb 2022 19:50:24 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:38628 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S235626AbiBYAuS (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 24 Feb 2022 19:50:18 -0500
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 65E7B2556CE
        for <linux-kernel@vger.kernel.org>; Thu, 24 Feb 2022 16:49:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1645750188; x=1677286188;
  h=message-id:date:mime-version:to:cc:references:from:
   subject:in-reply-to:content-transfer-encoding;
  bh=EgGx5qIAw7Tb4rEPAO2/54qSHMC2QYlZA6qYHpBBk3k=;
  b=e2JYhnOhiPDcNHDigfycZN8n7kNekkgvnLObf2BZ1CKEDdXqNAWA+Z3o
   4VX1ng/FvgblEs2rqsCCEAdIzLRN7jMlAWNScB9ovifBev120/i3ZP7mc
   HdOwndPdxi01aMTWBZwKmt982LMZhDJCaGQDrS62hruD4DSKMj/G34uxn
   zctXNVGFRfO5b5n3frd4StaDxDsiUTolX0HE6HM08dDzSA60oobCK4mXp
   bakK4/2T1dTVjmPwdu3bTmSKVkVuR+0VX9BXijC79W+P3o8C/ab+O2ALY
   5zdi4koo8qYDw5GKGE/8ahvKmkmd5lhdIJs9GEQkdngSwDDmP9dxwP8vK
   A==;
X-IronPort-AV: E=McAfee;i="6200,9189,10268"; a="252307394"
X-IronPort-AV: E=Sophos;i="5.90,134,1643702400"; 
   d="scan'208";a="252307394"
Received: from orsmga004.jf.intel.com ([10.7.209.38])
  by orsmga103.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 24 Feb 2022 16:49:48 -0800
X-IronPort-AV: E=Sophos;i="5.90,134,1643702400"; 
   d="scan'208";a="639938510"
Received: from hthen-mobl2.amr.corp.intel.com (HELO [10.209.48.194]) ([10.209.48.194])
  by orsmga004-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 24 Feb 2022 16:49:47 -0800
Message-ID: <4d3c777e-20bd-b1f2-12ba-6af9d08cca45@intel.com>
Date: Thu, 24 Feb 2022 16:49:43 -0800
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.5.0
Content-Language: en-US
To: Abhishek Goel <huntbag@linux.vnet.ibm.com>,
        Dave Hansen <dave.hansen@linux.intel.com>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Zi Yan <ziy@nvidia.com>, David Hildenbrand <david@redhat.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Huang Ying <ying.huang@intel.com>,
        Andrew Morton <akpm@linux-foundation.org>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-2-ying.huang@intel.com>
 <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
 <f5edb9dc-8b25-47c2-9905-09e88e41861b@intel.com>
 <4e8067e1-0574-c9d2-9d6c-d676d32071bd@linux.vnet.ibm.com>
From: Dave Hansen <dave.hansen@intel.com>
Subject: Re: [PATCH -V11 2/9] mm/migrate: update node demotion order on
 hotplug events
In-Reply-To: <4e8067e1-0574-c9d2-9d6c-d676d32071bd@linux.vnet.ibm.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 2/24/22 15:37, Abhishek Goel wrote:
> 
> On 24/02/22 05:35, Dave Hansen wrote:
>> On 2/23/22 15:02, Abhishek Goel wrote:
>>> If needed, I will provide experiment results and traces that were used
>>> to conclude this.
>> It would be great if you can provide some more info.  Even just a CPU
>> time profile would be helpful.
> 
> Average total time taken for SMT=8 to SMT=1 in v5.14 : 20s
> 
> Average total time taken for SMT=8 to SMT=1 in v5.15 : 36s
> 
> (Observed in system with 150+ CPUs )

I was kinda thinking of:

	perf record / perf report

output.  Not wall clock time.  We need to know what the kernel is doing
during those extra 16 seconds.


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 8D8FAC433F5
	for <linux-kernel@archiver.kernel.org>; Thu, 24 Feb 2022 23:37:37 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S235222AbiBXXiG (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Thu, 24 Feb 2022 18:38:06 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:38094 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S233679AbiBXXiD (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Thu, 24 Feb 2022 18:38:03 -0500
Received: from mx0a-001b2d01.pphosted.com (mx0a-001b2d01.pphosted.com [148.163.156.1])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id ED90A1688D5
        for <linux-kernel@vger.kernel.org>; Thu, 24 Feb 2022 15:37:31 -0800 (PST)
Received: from pps.filterd (m0098399.ppops.net [127.0.0.1])
        by mx0a-001b2d01.pphosted.com (8.16.1.2/8.16.1.2) with SMTP id 21OKrf6M014174;
        Thu, 24 Feb 2022 23:37:25 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ibm.com; h=message-id : date :
 mime-version : subject : to : cc : references : from : in-reply-to :
 content-type : content-transfer-encoding; s=pp1;
 bh=+4vthZ7Pmyfi2hSy5nAEFgWUJnl6DLwx6sQ3Stcr49w=;
 b=HKOvMJEf60QJCefIfB8i87ih5GMgdVLndZ5kSI4Y76tELxXFt9uwN6AgXIfoWfUuCIC0
 L7mRSZxBYarqNBft9lZHfCh4rdodCFyElCjRziuGDUthswx7UR2ZA1U5GaWFxwzriQKQ
 51sfPGL1tRHrrDrA5jQTpv9513aClb1QyplWdvf6pbPw0iqKJaYX+zg/RTEntslbAIKy
 8xjEx5lBI+5Vid9BK+PMlxiB/VSMI8gzVIpyfRtRuAZ1Q4ulXi+VFabf7VYridQ/K0UG
 NOSzl2POxjzpimY7SHHD17qkMnLGhMNcE+N4Hvw6uravuWI9+jPq+VWORLA9R0dnAtSx Xg== 
Received: from pps.reinject (localhost [127.0.0.1])
        by mx0a-001b2d01.pphosted.com with ESMTP id 3edw3ce2yb-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
        Thu, 24 Feb 2022 23:37:25 +0000
Received: from m0098399.ppops.net (m0098399.ppops.net [127.0.0.1])
        by pps.reinject (8.16.0.43/8.16.0.43) with SMTP id 21ONPoMi030642;
        Thu, 24 Feb 2022 23:37:25 GMT
Received: from ppma02fra.de.ibm.com (47.49.7a9f.ip4.static.sl-reverse.com [159.122.73.71])
        by mx0a-001b2d01.pphosted.com with ESMTP id 3edw3ce2xm-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
        Thu, 24 Feb 2022 23:37:24 +0000
Received: from pps.filterd (ppma02fra.de.ibm.com [127.0.0.1])
        by ppma02fra.de.ibm.com (8.16.1.2/8.16.1.2) with SMTP id 21ONRBfs005272;
        Thu, 24 Feb 2022 23:37:22 GMT
Received: from b06cxnps4076.portsmouth.uk.ibm.com (d06relay13.portsmouth.uk.ibm.com [9.149.109.198])
        by ppma02fra.de.ibm.com with ESMTP id 3ear69k0vp-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
        Thu, 24 Feb 2022 23:37:22 +0000
Received: from d06av21.portsmouth.uk.ibm.com (d06av21.portsmouth.uk.ibm.com [9.149.105.232])
        by b06cxnps4076.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id 21ONbKT018678088
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Thu, 24 Feb 2022 23:37:20 GMT
Received: from d06av21.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id 11A855204E;
        Thu, 24 Feb 2022 23:37:20 +0000 (GMT)
Received: from [9.43.82.21] (unknown [9.43.82.21])
        by d06av21.portsmouth.uk.ibm.com (Postfix) with ESMTP id E563F5204F;
        Thu, 24 Feb 2022 23:37:16 +0000 (GMT)
Message-ID: <4e8067e1-0574-c9d2-9d6c-d676d32071bd@linux.vnet.ibm.com>
Date: Fri, 25 Feb 2022 05:07:15 +0530
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.5.0
Subject: Re: [PATCH -V11 2/9] mm/migrate: update node demotion order on
 hotplug events
Content-Language: en-US
To: Dave Hansen <dave.hansen@intel.com>,
        Dave Hansen <dave.hansen@linux.intel.com>
Cc: linux-mm@kvack.org, linux-kernel@vger.kernel.org,
        Zi Yan <ziy@nvidia.com>, David Hildenbrand <david@redhat.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Huang Ying <ying.huang@intel.com>,
        Andrew Morton <akpm@linux-foundation.org>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-2-ying.huang@intel.com>
 <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
 <f5edb9dc-8b25-47c2-9905-09e88e41861b@intel.com>
From: Abhishek Goel <huntbag@linux.vnet.ibm.com>
In-Reply-To: <f5edb9dc-8b25-47c2-9905-09e88e41861b@intel.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-TM-AS-GCONF: 00
X-Proofpoint-ORIG-GUID: 9hzKxExDbYTpXwNE4mN7A5wsFDJgCAMJ
X-Proofpoint-GUID: I3XXsI_SUImIYOZW-Ys2InNS1YMVbHjL
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.205,Aquarius:18.0.816,Hydra:6.0.425,FMLib:17.11.64.514
 definitions=2022-02-24_06,2022-02-24_01,2022-02-23_01
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0 suspectscore=0 clxscore=1011
 priorityscore=1501 lowpriorityscore=0 malwarescore=0 adultscore=0
 phishscore=0 impostorscore=0 spamscore=0 mlxscore=0 bulkscore=0
 mlxlogscore=999 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.12.0-2201110000 definitions=main-2202240129
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org


On 24/02/22 05:35, Dave Hansen wrote:
> On 2/23/22 15:02, Abhishek Goel wrote:
>> If needed, I will provide experiment results and traces that were used
>> to conclude this.
> It would be great if you can provide some more info.  Even just a CPU
> time profile would be helpful.

Average total time taken for SMT=8 to SMT=1 in v5.14 : 20s

Average total time taken for SMT=8 to SMT=1 in v5.15 : 36s

(Observed in system with 150+ CPUs )

>
> It would also be great to understand more about what "hotplug on power
> systems" actually means.  Is this a synthetic benchmark, or are actual
> end-users running into this issue?  Are entire nodes of CPUs going
> offline?  Or is this just doing an offline/online of CPU 22 in a 100-CPU
> NUMA node?
No, this is not a synthetic benchmark. This can be recreated with
entire nodes of CPUs going offline. And the online/offline operations
have been performed by simple scripts. The time observed can also be
verified (for individual CPU or the entire system) by observing CPU-
Hotplug trace which provide consistent result as observed by using
the scripts.

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-2.8 required=3.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FORGED_FROMDOMAIN,FREEMAIL_FROM,
	HEADER_FROM_DIFFERENT_DOMAINS,MAILING_LIST_MULTI,SPF_HELO_NONE,SPF_PASS
	autolearn=no autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 6BD24C6377B
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 22:04:12 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 5325960FF3
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 22:04:12 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229861AbhGUVXe (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 17:23:34 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:48364 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229608AbhGUVXd (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 17:23:33 -0400
Received: from mail-ej1-x631.google.com (mail-ej1-x631.google.com [IPv6:2a00:1450:4864:20::631])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 6AEE3C061575
        for <linux-kernel@vger.kernel.org>; Wed, 21 Jul 2021 15:04:09 -0700 (PDT)
Received: by mail-ej1-x631.google.com with SMTP id dt7so5412004ejc.12
        for <linux-kernel@vger.kernel.org>; Wed, 21 Jul 2021 15:04:09 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=nX5aqOHY9HgaYebkuFtX4Rr9OCAl7jIPuc9xY87G2ms=;
        b=i8jZLH7QWGH392+y6KKCsDXWau5mWKnuU5S2rFJptlP3f2uiYpDZach9xzawO5no+z
         BE7w5ih0UKHzsNQsvzxorhf6GyjSfcDz1Ivn4BbzD9HK18JbL5wA2VCrYuE7cFPy6FY/
         JtEsGmSABTrZosYpH2ek9J+Fw2DkR8578PgmYzxVuvj5zrhjbKUo33qf+WYA78sGO/hq
         efK4B2WYgckHT1QNDHhfiCBQjKCgrhu1O8mvpoxyjUXnKNcK0HqGQWl430pPU82fKT2z
         Y3Zf6BoFKYCvaFj050inSFGLmhYeXsUbSHic2UweI6LwZBSieqt4RLC2bTSOv9/fQQEL
         QBWw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=nX5aqOHY9HgaYebkuFtX4Rr9OCAl7jIPuc9xY87G2ms=;
        b=nXjxXCY3KgZKWAY9HMg/M31oOWL1z5eyGfUriiP5UhqdNM2RKGnwUHBnXT6S2o+s1C
         mAaq/2BZesMduWlYj7Id2VyG4moCHAaJyBPoaNea/6vLWVD2gPq7kzn3vaVFSezxqJRT
         WSwb9bQEo8MK6Lm+GgbxgTdIW3gSjd9UvzvqOD9ylCJHv8L8mj5ahpcfHFuLfDDXJokr
         1+3jTuORfUKEcI+oYn4Gf30CksN6RC8NlyortCfC9hqrJYprawnwU85hrfZW59s791t3
         dWzhzdiSXyNo3lIAraS+BlxaN7X2Oqc5owQnAOussZWQNR0+kDugp6VpjfJpyR2eIWMM
         5ADQ==
X-Gm-Message-State: AOAM531be3jXAr2+CO8yWwRE1QGswMavBSxT0aLtas2PC7Zb9KApW8UH
        td7Y4Wj6NBmZaeC9/B/gucuvGTDdWjQvqXgbb7A=
X-Google-Smtp-Source: ABdhPJyiuD5aAfpuE/L9yRsGvic6uzV/QC+cEizXXgEKW/OiEhhpdW3X7cgmWFigm6hlZd/49aS8uKtMpPoxKJRU9fE=
X-Received: by 2002:a17:906:1f82:: with SMTP id t2mr16091424ejr.499.1626905047927;
 Wed, 21 Jul 2021 15:04:07 -0700 (PDT)
MIME-Version: 1.0
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-8-ying.huang@intel.com> <43A1CB83-6127-427F-94AF-40CE1B283BE1@nvidia.com>
 <59a92898-4a8a-05d3-5f75-1f8defb6feda@intel.com>
In-Reply-To: <59a92898-4a8a-05d3-5f75-1f8defb6feda@intel.com>
From: Yang Shi <shy828301@gmail.com>
Date: Wed, 21 Jul 2021 15:03:56 -0700
Message-ID: <CAHbLzkoBUCNqD1DVhsToCe457v=rBQCm2=4Ezyjb7-6wuNr+LQ@mail.gmail.com>
Subject: Re: [PATCH -V11 8/9] mm/vmscan: never demote for memcg reclaim
To: Dave Hansen <dave.hansen@intel.com>
Cc: Zi Yan <ziy@nvidia.com>, Huang Ying <ying.huang@intel.com>,
        Andrew Morton <akpm@linux-foundation.org>,
        Linux MM <linux-mm@kvack.org>,
        Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Michal Hocko <mhocko@suse.com>, Wei Xu <weixugc@google.com>,
        Oscar Salvador <osalvador@suse.de>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>
Content-Type: text/plain; charset="UTF-8"
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Wed, Jul 21, 2021 at 2:58 PM Dave Hansen <dave.hansen@intel.com> wrote:
>
> On 7/21/21 2:38 PM, Zi Yan wrote:
> > On 21 Jul 2021, at 2:39, Huang Ying wrote:
> >> From: Dave Hansen <dave.hansen@linux.intel.com>
> >>
> >> Global reclaim aims to reduce the amount of memory used on a
> >> given node or set of nodes.  Migrating pages to another node
> >> serves this purpose.
> >>
> >> memcg reclaim is different.  Its goal is to reduce the total
> >> memory consumption of the entire memcg, across all nodes.
> >> Migration does not assist memcg reclaim because it just moves
> >> page contents between nodes rather than actually reducing memory
> >> consumption.
> ...
> > Should this be folded into Patch 4 when can_demote() is
> > introduced?
>
> I guess it could be.  But, it's logically separate since it has its
> own justification which is rather discrete.
>
> I think it's best to keep it separate.

Yes, I agree.

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.2 required=3.0 tests=BAYES_00,DKIMWL_WL_HIGH,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,HEADER_FROM_DIFFERENT_DOMAINS,
	MAILING_LIST_MULTI,MSGID_FROM_MTA_HEADER,SPF_HELO_NONE,SPF_PASS autolearn=no
	autolearn_force=no version=3.4.0
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 34D7FC6377C
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:59:36 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.kernel.org (Postfix) with ESMTP id 1B1D860FF2
	for <linux-kernel@archiver.kernel.org>; Wed, 21 Jul 2021 21:59:36 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S230081AbhGUVS6 (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Wed, 21 Jul 2021 17:18:58 -0400
Received: from mail-dm6nam12on2083.outbound.protection.outlook.com ([40.107.243.83]:37952
        "EHLO NAM12-DM6-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S229660AbhGUVS5 (ORCPT <rfc822;linux-kernel@vger.kernel.org>);
        Wed, 21 Jul 2021 17:18:57 -0400
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=ZcxAW+PqtqE0l7lU7LGZmVg2w2gFHmVLBUmyUoEVcYocsrIS90J+qFtYV8gsXjRdCykU5o8ju4Ckh2El02oTXYl01s+2mcKJkT1DcooLfFgvbPypzZeggVfB32rRPHl5pmEb6x2+v2l55OoVAGDThtccI40Ux8s8MHbRYxOLag/bk7Fr8wyAnWV9e3vCYrU2QM5b0+77ZgN8OlOzZMHHulKnWVYHIf9lV7B7q+8Lc6cdVP9H7XTR5vStQJcVvtd9POYMauNEmnheJPYq8mltAS4pbrdjtSHRCM3UJm6s+L205FKBVuB3jupNm/ujbDZF9L9agA1wnJQbIk0xBq6HOA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=j4ix9oElFPeWdoIhoGLKDXmjqX8n/a26sSdxSwlafkM=;
 b=oeuOcwLdftheHp2XXJUM9yR98LdRzIQC2b57zzBGFP2k+3CE6sfdQNPueVoNn8VKfmANP6DmXdyludBaBwbXkAMQzE7C1/rJUzlaCcHy3Frtv/80jC89J7IG1eEJNuWuvA99GnNbzaGZ/p5jQXcKNMv24vauGGZfTc+udozwnqi6DadQIuinIXkyAcaSGh5L3z0LwvTVyhGse/eeL7zrOPgn55tGDEfE6GPgv+UDdDehtnL95SB1zCC90xxpYmXhpM8XMwRxxpFS3zn8Q67TDeU5NbmyK3ToJlTDOHQF9TV8B8BBzsWHmKbK0SNhJtych3eVGXC2acIgRwLpvjnkbQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=nvidia.com; dmarc=pass action=none header.from=nvidia.com;
 dkim=pass header.d=nvidia.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=Nvidia.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=j4ix9oElFPeWdoIhoGLKDXmjqX8n/a26sSdxSwlafkM=;
 b=D9HomfB3YXvixeHuVL9CpTTrmMxhpBUYdEDkmnahlpDmW5miIAxxPvoz9+/KHoO/rweS8uQc+/0OaC8UShL25WbSfTY+NzGwP+MctMhw+MWYm0oe2fyeziNBDfJ98y4sXEDm1rCoV+OIflPPNF1aCBxI8XN6dadHUwHLBki/u44tB5CgbXdbhHdP+YjEj6PXsFnydy8PdbYZMskTunKOYAeRw01RwtB+XXoJfgDNjuDyV/1Qc6Yp/8ieMyt1KpBD+DLLXxgb3nyMO4zVP/yAmZ4BKdBuRFQAoaL5bYqvklvmBocpZRiyLbLkORKR+SpdOQAtdgI6lm6KcI7dIhOJ8w==
Authentication-Results: intel.com; dkim=none (message not signed)
 header.d=none;intel.com; dmarc=none action=none header.from=nvidia.com;
Received: from MN2PR12MB3823.namprd12.prod.outlook.com (2603:10b6:208:168::26)
 by MN2PR12MB4472.namprd12.prod.outlook.com (2603:10b6:208:267::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4331.23; Wed, 21 Jul
 2021 21:59:32 +0000
Received: from MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4]) by MN2PR12MB3823.namprd12.prod.outlook.com
 ([fe80::dcee:535c:30e:95f4%6]) with mapi id 15.20.4352.025; Wed, 21 Jul 2021
 21:59:32 +0000
From: Zi Yan <ziy@nvidia.com>
To: Dave Hansen <dave.hansen@intel.com>
Cc: Huang Ying <ying.huang@intel.com>,
        Andrew Morton <akpm@linux-foundation.org>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org,
        Dave Hansen <dave.hansen@linux.intel.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Yang Shi <shy828301@gmail.com>, Michal Hocko <mhocko@suse.com>,
        Wei Xu <weixugc@google.com>,
        Oscar Salvador <osalvador@suse.de>,
        David Rientjes <rientjes@google.com>,
        Dan Williams <dan.j.williams@intel.com>,
        David Hildenbrand <david@redhat.com>,
        Greg Thelen <gthelen@google.com>,
        Keith Busch <kbusch@kernel.org>
Subject: Re: [PATCH -V11 8/9] mm/vmscan: never demote for memcg reclaim
Date: Wed, 21 Jul 2021 17:59:26 -0400
X-Mailer: MailMate (1.14r5812)
Message-ID: <7EAEE493-E29A-4175-BB1A-7E18C282A776@nvidia.com>
In-Reply-To: <59a92898-4a8a-05d3-5f75-1f8defb6feda@intel.com>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-8-ying.huang@intel.com>
 <43A1CB83-6127-427F-94AF-40CE1B283BE1@nvidia.com>
 <59a92898-4a8a-05d3-5f75-1f8defb6feda@intel.com>
Content-Type: multipart/signed;
 boundary="=_MailMate_885EA7C4-8FE2-4049-88BF-9C555BBA1D68_=";
 micalg=pgp-sha512; protocol="application/pgp-signature"
X-ClientProxiedBy: MN2PR13CA0029.namprd13.prod.outlook.com
 (2603:10b6:208:160::42) To MN2PR12MB3823.namprd12.prod.outlook.com
 (2603:10b6:208:168::26)
MIME-Version: 1.0
X-MS-Exchange-MessageSentRepresentingType: 1
Received: from [10.2.55.80] (216.228.112.21) by MN2PR13CA0029.namprd13.prod.outlook.com (2603:10b6:208:160::42) with Microsoft SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.4373.7 via Frontend Transport; Wed, 21 Jul 2021 21:59:29 +0000
X-MS-PublicTrafficType: Email
X-MS-Office365-Filtering-Correlation-Id: dda48520-51cd-4f83-3b17-08d94c92d20d
X-MS-TrafficTypeDiagnostic: MN2PR12MB4472:
X-MS-Exchange-Transport-Forked: True
X-Microsoft-Antispam-PRVS: <MN2PR12MB44726414E88C9FCBE439BE86C2E39@MN2PR12MB4472.namprd12.prod.outlook.com>
X-MS-Oob-TLC-OOBClassifiers: OLM:8882;
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: +oKac3mBb6ah/fGtNM24QMDJtY1Q22/n6y/T6BmV7sRPxRKpY+jbD/H8JhhxWoYWkwEB9z2GgEzFz8KchkAZDsdOwNG90+jz3pw9dXODpSFsSqIPKc6iqaUCPgxaVLBuZnO9EtGPsjE2DVYnqvHoj6dlL8mTgKf7KSgm/0Jz9tgSZkEVfO+zHBMN+UUCHVA9m+HibEhK2gtsVDiBj+afwoc9hcQQu8f3lG1WQO6BYrT73j3TA/cNshhGPpXT5KCweJ4recERa5+Yh56ghKGV46HjvKZp7xJXaqv0bDEkqhEcuGthp+xBluwzMisaSjb8MyLIcfsW5cuMxWaGwFjtS9yh5R3QFZyQpEjOIdfDQNdFOtInQ8OBt72IqmjXxMZTVcNQYEj00AVjslilUe6EpFjr0eFVCg8TGCjykIWMXa1o2RIDkw4UKpEoEMPF4znA9ouwPazvlhdXJpoHj2rPZO/MDQ/t7Ruz+iFxFrjDRPwY06kIROep79aTfWsynO08nyV1k+5i4yQvcJmkSvEBAmozETR4BkF1ioGbAZg5zrFyDpLNPIF7is77cM/CxHR/fOzlonF01fg6quYtDKVWxpkjrN0lz3qrthmPUTxqOfMI/DUIhtEQ0rXUaZUPUzGmIcaWIakvW5XwJK1FUNYWV97lb+ejI3N5y8HLGSiWxgXsGbBYrNoW90dadwS3VuM7CyuFJpL7U3gQ14kHZhNjreEFC8m9C77bgB6AR+o2b9w=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:MN2PR12MB3823.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(4636009)(346002)(396003)(366004)(39860400002)(136003)(376002)(235185007)(66476007)(5660300002)(7416002)(33656002)(26005)(478600001)(6486002)(33964004)(66946007)(4326008)(38100700002)(186003)(6916009)(2906002)(8676002)(956004)(86362001)(53546011)(36756003)(2616005)(66556008)(54906003)(6666004)(8936002)(316002)(16576012)(21480400003)(45980500001)(72826004);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?c3NyYkt1b0tVNkdjNHM3Q25TOW1DVGlaSVhkUTNRT0Z4RW1QR2V0WUtjZ1FX?=
 =?utf-8?B?T2p3NFcrRU95N21rckMyS2F6U3BwU0hTaVlWVURVVGRtcU00VDdhcVlHcjQ3?=
 =?utf-8?B?cTFPYWg3dkg0Um9ubXQyZUZuT3ZIUVZVVzVoSTJYYVJreGdOeElvSTdTNTdi?=
 =?utf-8?B?KzYxWlo2dTEzZVRRVmtadUdqSFdZcFM2bFNvVlFwR3JtRUVjeFFBWEFBSkd3?=
 =?utf-8?B?alZZN0YwN0tyVU5pNW9BRFVrWXRoVTllbmpWOHR5MXRVSFZBbXFVVVJxZURz?=
 =?utf-8?B?aURMd3hNTHVIWjZYTWJRZWYrWFZEUVR2Q1M5d2orSkNqd2N5TWowdVlFQW1O?=
 =?utf-8?B?RW5RZzJjNGlXcjNRTEp2b0twRVVuN1V3ampIZ0czbEJHOGI4MzFrM2NpT1Jm?=
 =?utf-8?B?dDlJWnZ4UTJ3dG11eWxudCs5bEJkS1FKMHEzcUJqdDBhT2RnbzZDNWRBclNR?=
 =?utf-8?B?Y1cyVzdzck1uV3pHYlpEOFpVQjVWVWFpZGNJRDRqUVhiRDlpRTYyZEQwNlFY?=
 =?utf-8?B?TUo3OVlOSmtMZVRRYnRiY3FlcmRQek1GZU05T2JmYUhpbk9CaWp4V0Z6Zjds?=
 =?utf-8?B?ZU01dUdVVVRCLy92VXJ4VVF1T2RzZjdta3l6VEZERGV5R1MzUEd6cFhKbUtu?=
 =?utf-8?B?R2p2dElZTUVaT0xVYko2emMyREZoVU5vMnZOODIrZUZvamwyYUppZ0sweDNW?=
 =?utf-8?B?M1lxelgyRE1SVVlCaWxzc0ZhYTgzdzQ5bDE3TGpybjZrWG9MM1c0WXZVczdl?=
 =?utf-8?B?akhodzY3aUIzSHVwSEI1VGhGUndaM00rcDRlbDJ2RDVETFl2TG9uVTF6WFVC?=
 =?utf-8?B?M1NERFdid2JadXNUWFZWTVlsLytobDlvUXpIYWMvWXpqMEtNa1IwbFl2Z2pD?=
 =?utf-8?B?QlpFWDdUTVBIU3U5VmVvOGlVeWJSUkJ1Ymh3Mzc3S2V6UkdHS3FZS2MvT3JF?=
 =?utf-8?B?RjYxYWlSQzRzY0poclRzb0oxOFo5WXoxNVR6NjM4dmVUeUNEUzF4UDZZWndE?=
 =?utf-8?B?Q3dtRmRvR29VSXkweWVEUFNHZndTUEUrYStXRVRpNVQrblpEa1dBNDZXUjBS?=
 =?utf-8?B?WkpsdkZVVDVBUDZXODc3a040TTRTajZ2N2t6NVhFSS83MjhJNlVidTVqUVFI?=
 =?utf-8?B?UEI0U3V1ZGdUK1E0Wk95eXQzeG91M3RtOWF0R0pZUkhoWEhOejBzSDhjaGRC?=
 =?utf-8?B?K2FYRmhkdVVkcnc4L093bGs3KzJFTHdXWkN3UWhiS3hpUnZjUzVaNVVUSHVR?=
 =?utf-8?B?eFFrZW9yaWxTc0J3L3NBcTJHKzZyUEZsZEtsS3dGMDNzWkxRK0lIckwxUzN2?=
 =?utf-8?B?dnlBMDRxQU00K0ZJbEpRSkhnaXJOU3JQUExJWWpTWWREeEsrUXVGY1lGYkJG?=
 =?utf-8?B?Q3A3ZlFNWElvR3ZOQStJU3pjOWw1YlM4ZlRXUnBFOGhQckVzUHFwT3loZ2ZT?=
 =?utf-8?B?MEdrd3A4SVd4QWorOXZJYUxxaFlycW4wNCtUL0Q3OWxHMjI5dHRqVm9kZE91?=
 =?utf-8?B?YmxCTi85c3NUdVM2dzV6M2NsTWJ0RHBMbEkrdG8wQzVDTVoxOXZrSlY2S2ZS?=
 =?utf-8?B?QTNMdjZmMXBlb1QxeC9mMUsxM2FEMVhweEVtOS9HVHRZL2xIVzNaYjZuWnkx?=
 =?utf-8?B?SkJOc2J2WjlYUjNvL29FaG83L2pKR29uSFord2NKN1ZVK0h5RzNtSTNuK3VB?=
 =?utf-8?B?Q25kbk9rT05tTWhaaEtZdWJ5NWtoOVk3UDh2RmROVnhsZlNyOFY5bUU0bUs1?=
 =?utf-8?Q?b33TC4U66UHC6baibdAVzOJXzB8FZ2GkAphMEMe?=
X-OriginatorOrg: Nvidia.com
X-MS-Exchange-CrossTenant-Network-Message-Id: dda48520-51cd-4f83-3b17-08d94c92d20d
X-MS-Exchange-CrossTenant-AuthSource: MN2PR12MB3823.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jul 2021 21:59:32.3883
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 43083d15-7273-40c1-b7db-39efd9ccc17a
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: trw98/jpPKCOmfRnKxOzNjq8lqi4fIcieGhDRVJReOcMHW0YLmwsiGXdZpGec6Us
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB4472
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

--=_MailMate_885EA7C4-8FE2-4049-88BF-9C555BBA1D68_=
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

On 21 Jul 2021, at 17:58, Dave Hansen wrote:

> On 7/21/21 2:38 PM, Zi Yan wrote:
>> On 21 Jul 2021, at 2:39, Huang Ying wrote:
>>> From: Dave Hansen <dave.hansen@linux.intel.com>
>>>
>>> Global reclaim aims to reduce the amount of memory used on a
>>> given node or set of nodes.  Migrating pages to another node
>>> serves this purpose.
>>>
>>> memcg reclaim is different.  Its goal is to reduce the total
>>> memory consumption of the entire memcg, across all nodes.
>>> Migration does not assist memcg reclaim because it just moves
>>> page contents between nodes rather than actually reducing memory
>>> consumption.
> ...
>> Should this be folded into Patch 4 when can_demote() is
>> introduced?
>
> I guess it could be.  But, it's logically separate since it has its
> own justification which is rather discrete.
>
> I think it's best to keep it separate.

Sure. I am OK with it.

=E2=80=94
Best Regards,
Yan, Zi

--=_MailMate_885EA7C4-8FE2-4049-88BF-9C555BBA1D68_=
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQJDBAEBCgAtFiEEh7yFAW3gwjwQ4C9anbJR82th+ooFAmD4mL4PHHppeUBudmlk
aWEuY29tAAoJEJ2yUfNrYfqKBOQQAJZeAsGxD5mvxqGH2ZQWs2qBylzF9+X6M2TC
ym86xEPtqTJj/EFk2xPm7CFjSk4PoxKyjOTOwj7x9gfUqCA/yPAFF6pmhi/3HiIG
wzdrmzWdtzBjNY0hW9WbDSKBB0G6yKvTNKXZn9NumsnFy3WDAm8DRpoGngu+NL7f
d/acU/oY/odAvcrtI72gXvkojTGC/QQ0xI1bLipDV3OcVKWf0ECQLnQiDnMT1/0G
GVRH7sjY3dmuZ73J8ezagc+gPoW1yzoDaKeNi4l56YeDt5+Qm2ckYt2WEu5+E1Gz
pNupJZ0ikkmbtBCYXbbWUTcWh0vjnnHPC/VsvVVsE1ohlKUTmhfNISVmnqCTVkGx
HJ+Ram5heyfRgiNqxi9KDCkfj/lHYs+6KlEZYF1DzfSzJa6kIf+zMMfHCYZNezsp
Dm9CUVx5JjO53bDdIQSe+tX+bba/Qdd6fIwbqCC0A2F4sdMEQ7GKLoyjjf3iLw1A
e7En3h3ca1dGrwPruYGM6CjQK7nKZfldXYuEJbbFNNO9CQFXWjdg2FAlgV0bzfwq
hGABCJFwScFQMN6eG84wLJcrH7P97yK5LaxnRF9b3WKVbi9SRso9R9n8AVaFKyfk
8nSZJxD+pRLYG5Vl1WZ9vh/PJG6+3FY9auzt1SiQTvOKBzJvEwMvV8oILJLPMwxB
XX91qmgB
=hu+M
-----END PGP SIGNATURE-----

--=_MailMate_885EA7C4-8FE2-4049-88BF-9C555BBA1D68_=--

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 66109C433EF
	for <linux-kernel@archiver.kernel.org>; Tue,  8 Mar 2022 17:07:43 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1346585AbiCHRIh (ORCPT
        <rfc822;linux-kernel@archiver.kernel.org>);
        Tue, 8 Mar 2022 12:08:37 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34686 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S230093AbiCHRIa (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 8 Mar 2022 12:08:30 -0500
Received: from mga02.intel.com (mga02.intel.com [134.134.136.20])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 25508BC81
        for <linux-kernel@vger.kernel.org>; Tue,  8 Mar 2022 09:07:34 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1646759254; x=1678295254;
  h=message-id:date:mime-version:subject:to:cc:references:
   from:in-reply-to:content-transfer-encoding;
  bh=rbzyGGxkDdg5MrfDGdFxARpZaSodeNWFg/OZHJmkfrw=;
  b=AcWJA2gAnz2tlstm7dJTNF3qJbaLdhwFx8g3beXHTsIEGPEkYaauDv+C
   3ABtYZUGMJURvjEV/SArZvzg5vV/6i/8KHPtnCuSA77lD/Ztsx6RATuJb
   vBeq/7rqfn3TgWbmX2jA777SoO3LcRAnly7tNlGmKNTiAXlIyc/jwBqRC
   FHtoIghDgdSxLEgdE8VR7dvM+DZU1sLAxkwwYgIx/sylrKmS7kajGT42c
   VVuJrfBge1pfbszHfF0WxZ0VxY83OShPEIwqQxDVdxpprPJyudxCV1TRL
   0jBn/mmZATvFy6DfBQr3rjz2pkEK1pheovUuJAyqhe7JMj/LFp/EL8r8X
   A==;
X-IronPort-AV: E=McAfee;i="6200,9189,10280"; a="242184069"
X-IronPort-AV: E=Sophos;i="5.90,165,1643702400"; 
   d="scan'208";a="242184069"
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
  by orsmga101.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 08 Mar 2022 09:07:30 -0800
X-IronPort-AV: E=Sophos;i="5.90,165,1643702400"; 
   d="scan'208";a="632297352"
Received: from ralphala-mobl.amr.corp.intel.com (HELO [10.209.117.92]) ([10.209.117.92])
  by fmsmga003-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 08 Mar 2022 09:07:24 -0800
Message-ID: <86383ac9-e5f2-1a2e-dd19-02e39714a3fd@intel.com>
Date: Tue, 8 Mar 2022 09:07:20 -0800
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.5.0
Subject: Re: [PATCH -V11 2/9] mm/migrate: update node demotion order on
 hotplug events
Content-Language: en-US
To: Oscar Salvador <osalvador@suse.de>,
        "Huang, Ying" <ying.huang@intel.com>
Cc: Abhishek Goel <huntbag@linux.vnet.ibm.com>,
        Dave Hansen <dave.hansen@linux.intel.com>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org, Zi Yan <ziy@nvidia.com>,
        David Hildenbrand <david@redhat.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Andrew Morton <akpm@linux-foundation.org>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-2-ying.huang@intel.com>
 <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
 <f5edb9dc-8b25-47c2-9905-09e88e41861b@intel.com>
 <4e8067e1-0574-c9d2-9d6c-d676d32071bd@linux.vnet.ibm.com>
 <87pmnb3ccr.fsf@yhuang6-desk2.ccr.corp.intel.com>
 <YicvnkVODh5qbxTC@localhost.localdomain>
From: Dave Hansen <dave.hansen@intel.com>
In-Reply-To: <YicvnkVODh5qbxTC@localhost.localdomain>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On 3/8/22 02:27, Oscar Salvador wrote:
> @@ -2043,7 +2044,12 @@ static void __init init_cpu_node_state(void)
>  static int vmstat_cpu_online(unsigned int cpu)
>  {
>  	refresh_zone_stat_thresholds();
> -	node_set_state(cpu_to_node(cpu), N_CPU);
> +
> +	if (!node_state(cpu_to_node(cpu), N_CPU)) {
> +		node_set_state(cpu_to_node(cpu), N_CPU);
> +		set_migration_target_nodes();
> +	}
> +
>  	return 0;
>  }
> 
> @@ -2066,6 +2072,8 @@ static int vmstat_cpu_dead(unsigned int cpu)
>  		return 0;
> 
>  	node_clear_state(node, N_CPU);
> +	set_migration_target_nodes();
> +
>  	return 0;
>  }

Yeah, those callbacks do look like they're reinventing the wheel.  This
is a much more direct way of doing it.

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 4C293C433F5
	for <linux-kernel@archiver.kernel.org>; Tue,  8 Mar 2022 10:27:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1345819AbiCHK2q (ORCPT
        <rfc822;linux-kernel@archiver.kernel.org>);
        Tue, 8 Mar 2022 05:28:46 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:36854 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1345660AbiCHK2m (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 8 Mar 2022 05:28:42 -0500
Received: from smtp-out1.suse.de (smtp-out1.suse.de [195.135.220.28])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 59243634E
        for <linux-kernel@vger.kernel.org>; Tue,  8 Mar 2022 02:27:45 -0800 (PST)
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
        (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
         key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
        (No client certificate requested)
        by smtp-out1.suse.de (Postfix) with ESMTPS id 763A7210E9;
        Tue,  8 Mar 2022 10:27:44 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
        t=1646735264; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=N73gu50O85bYZ1Q0djNPPNKpF0IxOh/oir1CnV0OAZI=;
        b=wVqXgQCHNjsMMqYfWNZ8FNPqelZPjYRI6TDqOP3FZ+6WAilyLsjSdRbGw5bJv9P73sSomR
        03JR26sz9mXaF4ICdVC3H8hQVmpBf478P6AengGarHoeoHKWOXCBf9G7c7VTaELtWuOkeR
        1Y3N5yCyNA80qlArE551HnnbD6Iw6kQ=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
        s=susede2_ed25519; t=1646735264;
        h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=N73gu50O85bYZ1Q0djNPPNKpF0IxOh/oir1CnV0OAZI=;
        b=llsd9OIWA9yatRxOCyldL5u6WrQZg6CQN5MfDz/iv23GCywCJpJX1zlmiUyo4BuGd2YnVv
        1vVZAXi3AcqSBvAQ==
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
        (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
         key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
        (No client certificate requested)
        by imap2.suse-dmz.suse.de (Postfix) with ESMTPS id C15E213C84;
        Tue,  8 Mar 2022 10:27:43 +0000 (UTC)
Received: from dovecot-director2.suse.de ([192.168.254.65])
        by imap2.suse-dmz.suse.de with ESMTPSA
        id ZhblK58vJ2KzRQAAMHmgww
        (envelope-from <osalvador@suse.de>); Tue, 08 Mar 2022 10:27:43 +0000
Date: Tue, 8 Mar 2022 11:27:42 +0100
From: Oscar Salvador <osalvador@suse.de>
To: "Huang, Ying" <ying.huang@intel.com>
Cc: Abhishek Goel <huntbag@linux.vnet.ibm.com>,
        Dave Hansen <dave.hansen@intel.com>,
        Dave Hansen <dave.hansen@linux.intel.com>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org, Zi Yan <ziy@nvidia.com>,
        David Hildenbrand <david@redhat.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Andrew Morton <akpm@linux-foundation.org>
Subject: Re: [PATCH -V11 2/9] mm/migrate: update node demotion order on
 hotplug events
Message-ID: <YicvnkVODh5qbxTC@localhost.localdomain>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-2-ying.huang@intel.com>
 <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
 <f5edb9dc-8b25-47c2-9905-09e88e41861b@intel.com>
 <4e8067e1-0574-c9d2-9d6c-d676d32071bd@linux.vnet.ibm.com>
 <87pmnb3ccr.fsf@yhuang6-desk2.ccr.corp.intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <87pmnb3ccr.fsf@yhuang6-desk2.ccr.corp.intel.com>
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Fri, Feb 25, 2022 at 10:32:20AM +0800, Huang, Ying wrote:
> -static int migration_online_cpu(unsigned int cpu)
> +static int migration_cpu_hotplug(unsigned int cpu)
>  {
> -	set_migration_target_nodes();
> -	return 0;
> -}
> +	static int nr_cpu_node_saved;
> +	int nr_cpu_node;
> +
> +	nr_cpu_node = num_node_state(N_CPU);
> +	if (nr_cpu_node != nr_cpu_node_saved) {
> +		set_migration_target_nodes();
> +		nr_cpu_node_saved = nr_cpu_node;
> +	}
>  
> -static int migration_offline_cpu(unsigned int cpu)
> -{
> -	set_migration_target_nodes();
>  	return 0;
>  }

These callbacks feel like re-inveting the wheel.
We do already have two functions that get called during cpu
online/offline, and that sets/clears N_CPU on the node properly.
And that is exactly what we want, so what about the following (only
compile-tested):

diff --git a/include/linux/migrate.h b/include/linux/migrate.h
index db96e10eb8da..031af2bb71dc 100644
--- a/include/linux/migrate.h
+++ b/include/linux/migrate.h
@@ -48,6 +48,7 @@ int folio_migrate_mapping(struct address_space *mapping,
 		struct folio *newfolio, struct folio *folio, int extra_count);

 extern bool numa_demotion_enabled;
+extern void set_migration_target_nodes(void);
 #else

 static inline void putback_movable_pages(struct list_head *l) {}
diff --git a/mm/migrate.c b/mm/migrate.c
index c7da064b4781..7847e4de01d7 100644
--- a/mm/migrate.c
+++ b/mm/migrate.c
@@ -3190,7 +3190,7 @@ static void __set_migration_target_nodes(void)
 /*
  * For callers that do not hold get_online_mems() already.
  */
-static void set_migration_target_nodes(void)
+void set_migration_target_nodes(void)
 {
 	get_online_mems();
 	__set_migration_target_nodes();
@@ -3254,47 +3254,13 @@ static int __meminit migrate_on_reclaim_callback(struct notifier_block *self,
 	return notifier_from_errno(0);
 }

-/*
- * React to hotplug events that might affect the migration targets
- * like events that online or offline NUMA nodes.
- *
- * The ordering is also currently dependent on which nodes have
- * CPUs.  That means we need CPU on/offline notification too.
- */
-static int migration_online_cpu(unsigned int cpu)
-{
-	set_migration_target_nodes();
-	return 0;
-}
-
-static int migration_offline_cpu(unsigned int cpu)
-{
-	set_migration_target_nodes();
-	return 0;
-}
-
 static int __init migrate_on_reclaim_init(void)
 {
-	int ret;
-
 	node_demotion = kmalloc_array(nr_node_ids,
 				      sizeof(struct demotion_nodes),
 				      GFP_KERNEL);
 	WARN_ON(!node_demotion);

-	ret = cpuhp_setup_state_nocalls(CPUHP_MM_DEMOTION_DEAD, "mm/demotion:offline",
-					NULL, migration_offline_cpu);
-	/*
-	 * In the unlikely case that this fails, the automatic
-	 * migration targets may become suboptimal for nodes
-	 * where N_CPU changes.  With such a small impact in a
-	 * rare case, do not bother trying to do anything special.
-	 */
-	WARN_ON(ret < 0);
-	ret = cpuhp_setup_state(CPUHP_AP_MM_DEMOTION_ONLINE, "mm/demotion:online",
-				migration_online_cpu, NULL);
-	WARN_ON(ret < 0);
-
 	hotplug_memory_notifier(migrate_on_reclaim_callback, 100);
 	return 0;
 }
diff --git a/mm/vmstat.c b/mm/vmstat.c
index 4057372745d0..0529a83c8f89 100644
--- a/mm/vmstat.c
+++ b/mm/vmstat.c
@@ -28,6 +28,7 @@
 #include <linux/mm_inline.h>
 #include <linux/page_ext.h>
 #include <linux/page_owner.h>
+#include <linux/migrate.h>

 #include "internal.h"

@@ -2043,7 +2044,12 @@ static void __init init_cpu_node_state(void)
 static int vmstat_cpu_online(unsigned int cpu)
 {
 	refresh_zone_stat_thresholds();
-	node_set_state(cpu_to_node(cpu), N_CPU);
+
+	if (!node_state(cpu_to_node(cpu), N_CPU)) {
+		node_set_state(cpu_to_node(cpu), N_CPU);
+		set_migration_target_nodes();
+	}
+
 	return 0;
 }

@@ -2066,6 +2072,8 @@ static int vmstat_cpu_dead(unsigned int cpu)
 		return 0;

 	node_clear_state(node, N_CPU);
+	set_migration_target_nodes();
+
 	return 0;
 }

I think this is just easier and meets exactly the goal.

We could go even further and move the work left in
migrate_on_reclaim_init() to init_mm_internals().
(I __think__ we should be fine because there is no dependency
there, e.g: notifier being set up somewhere later after
init_mm_internals() has been called).

-- 
Oscar Salvador
SUSE Labs

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id AD98FC433EF
	for <linux-kernel@archiver.kernel.org>; Fri, 25 Feb 2022 20:36:13 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236624AbiBYUgo (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Fri, 25 Feb 2022 15:36:44 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:38506 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231500AbiBYUgn (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Fri, 25 Feb 2022 15:36:43 -0500
Received: from mx0a-001b2d01.pphosted.com (mx0a-001b2d01.pphosted.com [148.163.156.1])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id F15351EE9DD
        for <linux-kernel@vger.kernel.org>; Fri, 25 Feb 2022 12:36:10 -0800 (PST)
Received: from pps.filterd (m0098393.ppops.net [127.0.0.1])
        by mx0a-001b2d01.pphosted.com (8.16.1.2/8.16.1.2) with SMTP id 21PKJ0BD017463;
        Fri, 25 Feb 2022 20:35:58 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=ibm.com; h=message-id : date :
 mime-version : subject : to : cc : references : from : in-reply-to :
 content-type : content-transfer-encoding; s=pp1;
 bh=uVzX/eVA1NelZfBS+BCYGv1ZHJU38dHvAGP6eJ3nWEs=;
 b=N20hb+tjwwYWojpTzqFjWZmEi6KHKlTYMNiJlFyzvQ2uJJVWoFUOFHElkUA/X8ClUpI/
 QLSnKeZbjkMO44dOxEfsvuol1/DqmmumHfm35SUad+VFVbhl+qTP40tK5a4EXj842bJe
 PSR6PTuauO4NhbEiGFdYnLYOUFYC6jYARWgDcZtVwJF1aSDJc4LyLFuia3xvdEiuJMHy
 2ALTCqGoMJSnJ+akJkyt5LJ7nAvgXWd0JbenCrUrGBSfkpE9iXBa9ORdoPL7ohI7UpMp
 j1GfARlrWSbvnDL2Du0UrKWp3ewwCD5eUYAD5rIwQitkZYk1+qFyNjimxxn4LJgW/PuS EA== 
Received: from pps.reinject (localhost [127.0.0.1])
        by mx0a-001b2d01.pphosted.com with ESMTP id 3ef61hra54-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
        Fri, 25 Feb 2022 20:35:58 +0000
Received: from m0098393.ppops.net (m0098393.ppops.net [127.0.0.1])
        by pps.reinject (8.16.0.43/8.16.0.43) with SMTP id 21PKLU7S029033;
        Fri, 25 Feb 2022 20:35:57 GMT
Received: from ppma05fra.de.ibm.com (6c.4a.5195.ip4.static.sl-reverse.com [149.81.74.108])
        by mx0a-001b2d01.pphosted.com with ESMTP id 3ef61hra4e-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
        Fri, 25 Feb 2022 20:35:57 +0000
Received: from pps.filterd (ppma05fra.de.ibm.com [127.0.0.1])
        by ppma05fra.de.ibm.com (8.16.1.2/8.16.1.2) with SMTP id 21PKCefT027148;
        Fri, 25 Feb 2022 20:35:55 GMT
Received: from b06avi18626390.portsmouth.uk.ibm.com (b06avi18626390.portsmouth.uk.ibm.com [9.149.26.192])
        by ppma05fra.de.ibm.com with ESMTP id 3ear6a0883-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
        Fri, 25 Feb 2022 20:35:55 +0000
Received: from d06av24.portsmouth.uk.ibm.com (mk.ibm.com [9.149.105.60])
        by b06avi18626390.portsmouth.uk.ibm.com (8.14.9/8.14.9/NCO v10.0) with ESMTP id 21PKP8ub48890308
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=OK);
        Fri, 25 Feb 2022 20:25:08 GMT
Received: from d06av24.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id BEDFC4203F;
        Fri, 25 Feb 2022 20:35:52 +0000 (GMT)
Received: from d06av24.portsmouth.uk.ibm.com (unknown [127.0.0.1])
        by IMSVA (Postfix) with ESMTP id DA4EB42041;
        Fri, 25 Feb 2022 20:35:47 +0000 (GMT)
Received: from [9.43.40.69] (unknown [9.43.40.69])
        by d06av24.portsmouth.uk.ibm.com (Postfix) with ESMTP;
        Fri, 25 Feb 2022 20:35:47 +0000 (GMT)
Message-ID: <6afdded7-ae70-2412-4f15-f7951164049a@linux.vnet.ibm.com>
Date: Sat, 26 Feb 2022 02:05:45 +0530
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101
 Thunderbird/91.5.0
Subject: Re: [PATCH -V11 2/9] mm/migrate: update node demotion order on
 hotplug events
Content-Language: en-US
To: "Huang, Ying" <ying.huang@intel.com>
Cc: Dave Hansen <dave.hansen@intel.com>,
        Dave Hansen <dave.hansen@linux.intel.com>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org, Zi Yan <ziy@nvidia.com>,
        David Hildenbrand <david@redhat.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Andrew Morton <akpm@linux-foundation.org>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-2-ying.huang@intel.com>
 <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
 <f5edb9dc-8b25-47c2-9905-09e88e41861b@intel.com>
 <4e8067e1-0574-c9d2-9d6c-d676d32071bd@linux.vnet.ibm.com>
 <87pmnb3ccr.fsf@yhuang6-desk2.ccr.corp.intel.com>
From: Abhishek Goel <huntbag@linux.vnet.ibm.com>
In-Reply-To: <87pmnb3ccr.fsf@yhuang6-desk2.ccr.corp.intel.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-TM-AS-GCONF: 00
X-Proofpoint-ORIG-GUID: rQxVtaJvGYAmCTp2bNdB7lFAXR9yQ60a
X-Proofpoint-GUID: f0xropnJ3hh22I6olJopur4iGQCCvUti
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.205,Aquarius:18.0.816,Hydra:6.0.425,FMLib:17.11.64.514
 definitions=2022-02-25_10,2022-02-25_01,2022-02-23_01
X-Proofpoint-Spam-Details: rule=outbound_notspam policy=outbound score=0 clxscore=1015
 lowpriorityscore=0 mlxscore=0 bulkscore=0 spamscore=0 impostorscore=0
 suspectscore=0 adultscore=0 mlxlogscore=999 malwarescore=0
 priorityscore=1501 phishscore=0 classifier=spam adjust=0 reason=mlx
 scancount=1 engine=8.12.0-2201110000 definitions=main-2202250112
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Hi Huang,

On 25/02/22 08:02, Huang, Ying wrote:
>
> We have run into a memory hotplug regression before.  Let's check
> whether the problem is similar.  Can you try the below debug patch?
>
> Best Regards,
> Huang, Ying
>
> ----------------------------8<------------------------------------------
>  From 500c0b53436b7a697ed5d77241abbc0d5d3cfc07 Mon Sep 17 00:00:00 2001
> From: Huang Ying <ying.huang@intel.com>
> Date: Wed, 29 Sep 2021 10:57:19 +0800
> Subject: [PATCH] mm/migrate: Debug CPU hotplug regression
>
> Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
> ---
>   mm/migrate.c | 20 +++++++++++---------
>   1 file changed, 11 insertions(+), 9 deletions(-)
>
> diff --git a/mm/migrate.c b/mm/migrate.c
> index c7da064b4781..c4805f15e616 100644
> --- a/mm/migrate.c
> +++ b/mm/migrate.c
> @@ -3261,15 +3261,17 @@ static int __meminit migrate_on_reclaim_callback(struct notifier_block *self,
>    * The ordering is also currently dependent on which nodes have
>    * CPUs.  That means we need CPU on/offline notification too.
>    */
> -static int migration_online_cpu(unsigned int cpu)
> +static int migration_cpu_hotplug(unsigned int cpu)
>   {
> -	set_migration_target_nodes();
> -	return 0;
> -}
> +	static int nr_cpu_node_saved;
> +	int nr_cpu_node;
> +
> +	nr_cpu_node = num_node_state(N_CPU);
> +	if (nr_cpu_node != nr_cpu_node_saved) {
> +		set_migration_target_nodes();
> +		nr_cpu_node_saved = nr_cpu_node;
> +	}
>
> -static int migration_offline_cpu(unsigned int cpu)
> -{
> -	set_migration_target_nodes();
>   	return 0;
>   }
>
> @@ -3283,7 +3285,7 @@ static int __init migrate_on_reclaim_init(void)
>   	WARN_ON(!node_demotion);
>
>   	ret = cpuhp_setup_state_nocalls(CPUHP_MM_DEMOTION_DEAD, "mm/demotion:offline",
> -					NULL, migration_offline_cpu);
> +					NULL, migration_cpu_hotplug);
>   	/*
>   	 * In the unlikely case that this fails, the automatic
>   	 * migration targets may become suboptimal for nodes
> @@ -3292,7 +3294,7 @@ static int __init migrate_on_reclaim_init(void)
>   	 */
>   	WARN_ON(ret < 0);
>   	ret = cpuhp_setup_state(CPUHP_AP_MM_DEMOTION_ONLINE, "mm/demotion:online",
> -				migration_online_cpu, NULL);
> +				migration_cpu_hotplug, NULL);
>   	WARN_ON(ret < 0);
>
>   	hotplug_memory_notifier(migrate_on_reclaim_callback, 100);
This works. Applied this on 5.15 kernel and don't see any regression
compared to 5.14 kernel.
So, Have you posted this patch yet? Or any plans on inclusion of any
similar patch?



From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 25D62C433F5
	for <linux-kernel@archiver.kernel.org>; Wed,  9 Mar 2022 01:08:47 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231126AbiCIBJl (ORCPT <rfc822;linux-kernel@archiver.kernel.org>);
        Tue, 8 Mar 2022 20:09:41 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:49534 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S230519AbiCIBJd (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 8 Mar 2022 20:09:33 -0500
Received: from mga03.intel.com (mga03.intel.com [134.134.136.65])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 44F0214CC87
        for <linux-kernel@vger.kernel.org>; Tue,  8 Mar 2022 16:51:55 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1646787115; x=1678323115;
  h=from:to:cc:subject:references:date:in-reply-to:
   message-id:mime-version;
  bh=rTewoYY5iGutquVo0W7aUnC1d1O9Xf62XUlk7Bo0QUQ=;
  b=GYVAVapQiDYTUgv/rnTsr7PnNCcG9BAhC6/xMJ3F82g0X87L+Iweofc7
   zr5j9jsWGahnayF85wKx1QLanKCUbl1B6dTRSeu7lS2LLQ8vJnLXOhCl0
   sCU/o5dX4A9Mcdf+3whjnDYkbgvvVotB4Z/CA3BQf9w6Fmg5aM4j3GCu4
   u7j+meckmwi0QoZZYJEs8vvm58mMVYm4p8pCaZy9Mo4/ToycG2M7d3KeI
   3yNnqhgisTrIYN/hWSEllZTrnJIhS9bk7A07yoA7Ei93bHodVjZs2g2Yn
   jC2ibZPnim4AD1wruuxeUNZwEjP0UQZJYo8U9emqgfvw6T6XTLk+zSIKL
   w==;
X-IronPort-AV: E=McAfee;i="6200,9189,10280"; a="254790602"
X-IronPort-AV: E=Sophos;i="5.90,165,1643702400"; 
   d="scan'208";a="254790602"
Received: from orsmga007.jf.intel.com ([10.7.209.58])
  by orsmga103.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 08 Mar 2022 16:29:44 -0800
X-IronPort-AV: E=Sophos;i="5.90,165,1643702400"; 
   d="scan'208";a="537793799"
Received: from yhuang6-desk2.sh.intel.com (HELO yhuang6-desk2.ccr.corp.intel.com) ([10.239.13.94])
  by orsmga007-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 08 Mar 2022 16:29:42 -0800
From: "Huang, Ying" <ying.huang@intel.com>
To: Oscar Salvador <osalvador@suse.de>
Cc: Dave Hansen <dave.hansen@intel.com>,
        Abhishek Goel <huntbag@linux.vnet.ibm.com>,
        Dave Hansen <dave.hansen@linux.intel.com>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org, Zi Yan <ziy@nvidia.com>,
        David Hildenbrand <david@redhat.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Andrew Morton <akpm@linux-foundation.org>
Subject: Re: [PATCH -V11 2/9] mm/migrate: update node demotion order on
 hotplug events
References: <20210721063926.3024591-1-ying.huang@intel.com>
        <20210721063926.3024591-2-ying.huang@intel.com>
        <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
        <f5edb9dc-8b25-47c2-9905-09e88e41861b@intel.com>
        <4e8067e1-0574-c9d2-9d6c-d676d32071bd@linux.vnet.ibm.com>
        <87pmnb3ccr.fsf@yhuang6-desk2.ccr.corp.intel.com>
        <YicvnkVODh5qbxTC@localhost.localdomain>
        <86383ac9-e5f2-1a2e-dd19-02e39714a3fd@intel.com>
        <Yiem+4YbComC0EGC@localhost.localdomain>
Date: Wed, 09 Mar 2022 08:29:40 +0800
In-Reply-To: <Yiem+4YbComC0EGC@localhost.localdomain> (Oscar Salvador's
        message of "Tue, 8 Mar 2022 19:56:59 +0100")
Message-ID: <87k0d4ge8b.fsf@yhuang6-desk2.ccr.corp.intel.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/27.1 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=ascii
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

Oscar Salvador <osalvador@suse.de> writes:

> On Tue, Mar 08, 2022 at 09:07:20AM -0800, Dave Hansen wrote:
>> On 3/8/22 02:27, Oscar Salvador wrote:
>> > @@ -2043,7 +2044,12 @@ static void __init init_cpu_node_state(void)
>> >  static int vmstat_cpu_online(unsigned int cpu)
>> >  {
>> >  	refresh_zone_stat_thresholds();
>> > -	node_set_state(cpu_to_node(cpu), N_CPU);
>> > +
>> > +	if (!node_state(cpu_to_node(cpu), N_CPU)) {
>> > +		node_set_state(cpu_to_node(cpu), N_CPU);
>> > +		set_migration_target_nodes();
>> > +	}
>> > +
>> >  	return 0;
>> >  }
>> > 
>> > @@ -2066,6 +2072,8 @@ static int vmstat_cpu_dead(unsigned int cpu)
>> >  		return 0;
>> > 
>> >  	node_clear_state(node, N_CPU);
>> > +	set_migration_target_nodes();
>> > +
>> >  	return 0;
>> >  }
>> 
>> Yeah, those callbacks do look like they're reinventing the wheel.  This
>> is a much more direct way of doing it.
>
> Then let me play a bit more with it and I can cook a patch unless
> someone feels strong against it.

This looks good to me, Thanks!

Best Regards,
Huang, Ying

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-kernel-owner@kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id A2248C433F5
	for <linux-kernel@archiver.kernel.org>; Tue,  8 Mar 2022 18:57:16 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1348849AbiCHS6L (ORCPT
        <rfc822;linux-kernel@archiver.kernel.org>);
        Tue, 8 Mar 2022 13:58:11 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:33892 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1349876AbiCHS6A (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Tue, 8 Mar 2022 13:58:00 -0500
Received: from smtp-out1.suse.de (smtp-out1.suse.de [195.135.220.28])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 03D6254186
        for <linux-kernel@vger.kernel.org>; Tue,  8 Mar 2022 10:57:02 -0800 (PST)
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
        (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
         key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
        (No client certificate requested)
        by smtp-out1.suse.de (Postfix) with ESMTPS id 8C626210ED;
        Tue,  8 Mar 2022 18:57:01 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
        t=1646765821; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=0IfmFdPIHuTa75Qa/8oUKNFdCQJv+DchlDBS9H5YG4g=;
        b=pBCnBqihs3rV/BlNOD7j+ZB76sI0/mQiVbUmo4Y1slWqqutSwmU941y0E92p9zs+axP5MA
        1N+zo8cVSDUtuT93RJnEu+h5Hmd0aAGCGkKl6TrGsQOB6p/W2jTzLxUYBv25M8pARnacJd
        U5L/w/1zP7/0J8LuxVlGQrIxaxK01qo=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
        s=susede2_ed25519; t=1646765821;
        h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=0IfmFdPIHuTa75Qa/8oUKNFdCQJv+DchlDBS9H5YG4g=;
        b=MmAU06sDhhgGSHT7iox+uiNH8sbWBaWDyuuLKEmA5kKxjoS95T5mEkPL9CF5+KuDjuqh5g
        wV4kmO6vJWq0qEBw==
Received: from imap2.suse-dmz.suse.de (imap2.suse-dmz.suse.de [192.168.254.74])
        (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
         key-exchange X25519 server-signature ECDSA (P-521) server-digest SHA512)
        (No client certificate requested)
        by imap2.suse-dmz.suse.de (Postfix) with ESMTPS id C7F7313CE9;
        Tue,  8 Mar 2022 18:57:00 +0000 (UTC)
Received: from dovecot-director2.suse.de ([192.168.254.65])
        by imap2.suse-dmz.suse.de with ESMTPSA
        id yIJwLfymJ2IBRAAAMHmgww
        (envelope-from <osalvador@suse.de>); Tue, 08 Mar 2022 18:57:00 +0000
Date: Tue, 8 Mar 2022 19:56:59 +0100
From: Oscar Salvador <osalvador@suse.de>
To: Dave Hansen <dave.hansen@intel.com>
Cc: "Huang, Ying" <ying.huang@intel.com>,
        Abhishek Goel <huntbag@linux.vnet.ibm.com>,
        Dave Hansen <dave.hansen@linux.intel.com>, linux-mm@kvack.org,
        linux-kernel@vger.kernel.org, Zi Yan <ziy@nvidia.com>,
        David Hildenbrand <david@redhat.com>,
        Yang Shi <yang.shi@linux.alibaba.com>,
        Andrew Morton <akpm@linux-foundation.org>
Subject: Re: [PATCH -V11 2/9] mm/migrate: update node demotion order on
 hotplug events
Message-ID: <Yiem+4YbComC0EGC@localhost.localdomain>
References: <20210721063926.3024591-1-ying.huang@intel.com>
 <20210721063926.3024591-2-ying.huang@intel.com>
 <eb438ddd-2919-73d4-bd9f-b7eecdd9577a@linux.vnet.ibm.com>
 <f5edb9dc-8b25-47c2-9905-09e88e41861b@intel.com>
 <4e8067e1-0574-c9d2-9d6c-d676d32071bd@linux.vnet.ibm.com>
 <87pmnb3ccr.fsf@yhuang6-desk2.ccr.corp.intel.com>
 <YicvnkVODh5qbxTC@localhost.localdomain>
 <86383ac9-e5f2-1a2e-dd19-02e39714a3fd@intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <86383ac9-e5f2-1a2e-dd19-02e39714a3fd@intel.com>
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Tue, Mar 08, 2022 at 09:07:20AM -0800, Dave Hansen wrote:
> On 3/8/22 02:27, Oscar Salvador wrote:
> > @@ -2043,7 +2044,12 @@ static void __init init_cpu_node_state(void)
> >  static int vmstat_cpu_online(unsigned int cpu)
> >  {
> >  	refresh_zone_stat_thresholds();
> > -	node_set_state(cpu_to_node(cpu), N_CPU);
> > +
> > +	if (!node_state(cpu_to_node(cpu), N_CPU)) {
> > +		node_set_state(cpu_to_node(cpu), N_CPU);
> > +		set_migration_target_nodes();
> > +	}
> > +
> >  	return 0;
> >  }
> > 
> > @@ -2066,6 +2072,8 @@ static int vmstat_cpu_dead(unsigned int cpu)
> >  		return 0;
> > 
> >  	node_clear_state(node, N_CPU);
> > +	set_migration_target_nodes();
> > +
> >  	return 0;
> >  }
> 
> Yeah, those callbacks do look like they're reinventing the wheel.  This
> is a much more direct way of doing it.

Then let me play a bit more with it and I can cook a patch unless
someone feels strong against it.

Thanks

-- 
Oscar Salvador
SUSE Labs

