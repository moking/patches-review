From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pg1-f174.google.com (mail-pg1-f174.google.com [209.85.215.174])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 044E2208A5;
	Thu, 25 Jul 2024 18:49:20 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.215.174
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1721933362; cv=none; b=tPxPeZ8mTR2Irb5/PmQ1eAofYxHcpmsJFFhHMIl/xMHLazXlUhKGogyYzn7zRxMI1VYqDTSNtpXCoCAeMe4w6sMMfwAxUd8VC6Fbzb3vQqCW1GGGhhVU2fISnTYLg4FPoYEGIxNvuYNcXkmnIp4Oj0JUQM+e6NhihBFaGRSRjxU=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1721933362; c=relaxed/simple;
	bh=+rmmGS5oHsDNMWeejvogZRoRVwq8gR6v9sH9TpIppAA=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=ZFWbqbQhKTJOxflut5Hby6u0ItmSd6Vm8fuL4e2fkL8nT0I2VsvSNRjnixUs8ii83ulIkoOWw9UYgrRFkLrdzVEVcfpRkjbkNNxd/ZQWqP3j8Jckf/nN0Xdi71u/kTxeeJsRz6uJptitbUz/fv77ju9snUYnhvC8BVd5bUSOqBY=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=hl7qx6jm; arc=none smtp.client-ip=209.85.215.174
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="hl7qx6jm"
Received: by mail-pg1-f174.google.com with SMTP id 41be03b00d2f7-76cb5b6b3e4so135924a12.1;
        Thu, 25 Jul 2024 11:49:20 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1721933360; x=1722538160; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=kLMhi2la1wBRAHdZ5p14tEpxbAYMvWdkbqdovBVCSb0=;
        b=hl7qx6jmlmyV15+Ugh9JCYbRMu6eZ39xcGbT6O2VGvJfHdC6w6bqq9y8J5nKm+ZmsF
         kDWMUWPIPyMfBZ8PsHTAm8aK/IzXjrnN+bYYZdA+asfo6jtk6OVdRgdEa13l9wM/vwAQ
         x00v7PZ+DDeGZ4xx6Q4BzlmuO1/9oViIigDxlIVrWIQ2mpeH5miI2fG0AG+Gb76Zue2Z
         6WWcmXgmS47cNz3JEATzfPbWn9KRZDVEF+McQ300m3Lh5iOBchMfdxHL38bk0VRyI4qW
         DXiFAkv6E2qyRfQNvZw41JOV6cNPT0wN+bQjiDgPUdf940r9iEati1AhqOI++aLkebUg
         2KnQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1721933360; x=1722538160;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=kLMhi2la1wBRAHdZ5p14tEpxbAYMvWdkbqdovBVCSb0=;
        b=F4D+KK4a+vEYIvRb7CWPc/R8SyFWNzpvvLgMb7RRHLBl8EusVLDpwDVet/KjtAYYQy
         iT5FfOQ0Dd7stxJScEDsWHUzIBGjKpi3hAGZz4L0raf/pp7tNcLBrjqMcMlLGLd0upEc
         SC6T8DtKb/dWXdFnxzHgfud9r7MH7SiS5foSPCiLzezaYnxyHMhNMuKxJ4iwOFarEPBE
         CTAme2kBKazQ1TqKMulzFFPb/6q9mCHKjH/BxJ3YZLvM0+299v+JW95Thj1AfFZTP5hR
         Xfnbe6xaErMWv3vfq/vMfQ2vU1pP3cH4qofzL0E3KQ8eYKmEySHJ9y9AJQUtfIHzrK36
         aLLg==
X-Forwarded-Encrypted: i=1; AJvYcCWJA8JzKQnaCcsqBkmOEcnJGznDV5tJPbFq2Maht1+/j7vS+zCXsxynbxKt85hnPJ/37CDlI0v1fG0n/z2t1RMZtHg41ptD+3+kNw5R0DyvH3HjPBkzE1LAXv5hraFmtkFYHyGdPW1U
X-Gm-Message-State: AOJu0Yx4iJhOIKI9Nq+inmFHc3FjgEJnZgo0UANiB+PWAamLoVmZKCsZ
	1ACvf/8AsJBi2rD9ACkqLG0CvntHdBAoIP0Zh0tgehgc/Y3Y3Xc6
X-Google-Smtp-Source: AGHT+IGJAP1u76GfzLh0MpQasqe8sRnqmxNSnxx+PWnh6mIWWQnWmrCcFQNqvKxPxWM0b4/9sxxbqw==
X-Received: by 2002:a05:6a20:8417:b0:1c0:f677:e98f with SMTP id adf61e73a8af0-1c47b41924bmr3306690637.46.1721933360171;
        Thu, 25 Jul 2024 11:49:20 -0700 (PDT)
Received: from debian ([2601:646:8f03:9fee:6814:8c88:4aee:e03])
        by smtp.gmail.com with ESMTPSA id d2e1a72fcca58-70ead6e3d69sm1438587b3a.27.2024.07.25.11.49.18
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Thu, 25 Jul 2024 11:49:19 -0700 (PDT)
From: fan <nifan.cxl@gmail.com>
X-Google-Original-From: fan <fan@debian>
Date: Thu, 25 Jul 2024 11:49:01 -0700
To: Terry Bowman <terry.bowman@amd.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
	dave.jiang@intel.com, alison.schofield@intel.com,
	ming4.li@intel.com, vishal.l.verma@intel.com,
	jim.harris@samsung.com, ilpo.jarvinen@linux.intel.com,
	ardb@kernel.org, sathyanarayanan.kuppuswamy@linux.intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
	a.manzanares@samsung.com
Subject: Re: [RFC PATCH 0/9] Add RAS support for CXL root ports, CXL
 downstream switch ports, and CXL upstream switch ports
Message-ID: <ZqKeHWsZtDb1RKfh@debian>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>

On Mon, Jun 17, 2024 at 03:04:02PM -0500, Terry Bowman wrote:
> This patchset provides RAS logging for CXL root ports, CXL downstream
> switch ports, and CXL upstream switch ports. This includes changes to
> use a portdrv notifier chain to communicate CXL AER/RAS errors to a
> cxl_pci callback.
> 
> The first 3 patches prepare for and add an atomic notifier chain to the
> portdrv driver. The portdrv's notifier chain reports the port device's
> AER internal errors to the registered callback(s). The preparation changes
> include a portdrv update to call the uncorrectable handler for PCIe root
> ports and PCIe downstream switch ports. Also, the AER correctable error
> (CE) status is made available to the AER CE handler.
> 
> The next 4 patches are in preparation for adding an atomic notification
> callback in the cxl_pci driver. This is for receiving AER internal error
> events from the portdrv notifier chain. Preparation includes adding RAS
> register block mapping, adding trace functions for logging, and
> refactoring cxl_pci RAS functions for reuse.
> 
> The final 2 patches enable the AER internal error interrupts.
> 
> Testing RAS CE/UCE:
>   QEMU was used for testing CXL root port, CXL downstream switch port, and
>   CXL upstream switch port. The aer-inject tool was used to inject AER and
>   a test patch was used to set the AER CIE/UIE and RAS CE/UCE status during
>   testing. Testing passed with no issues.

Hi Terry,

Could you share a little more about the qemu test setup?
>From what I see, it seems currently qemu can only inject error to
type3 devices, is that true? Or how to do that for port devices?
Do we need a hack there?

Also, is the aer-inject tool you mentioned the one currently in the kernel
or something else?
https://elixir.bootlin.com/linux/v6.10-rc6/source/drivers/pci/pcie/aer_inject.c

Thanks,
Fan


>  
>   An AMD platform with the AMD RAS error injection tool was used for
>   testing CXL root port injection. Testing passed with no issues.
> 
>   TODO - regression test CXL1.1 RCH handling.
> 
> Solutions Considered (1-4):
>   Below are solutions that were considered. Solution #4 is
>   implemented in this patchset. 
> 
>   1.) Reassigning portdrv error handler for CXL port devices
>   
>   This solution was based on reassigning the portdrv's CE/UCE err_handler
>   to be CXL cxl_pci driver functions.
>   
>   I started with this solution and once the flow was working I realized
>   the endpoint removal would have to be addressed as well. While this
>   could be resolved it does highlight the odd coupling and dependency
>   between the CXL port devices error handling with cxl_pci endpoint's
>   handlers. Also, the err_handler re-assignment at runtime required
>   ignoring the 'const' definition. I don't believe this should be
>   considered as a possible solution.
>   
>   2.) Update the AER driver to call cxl_pci driver's error handler before
>   calling pci_aer_handle_error()
> 
>   This is similar to the existing RCH port error approach in aer.c.
>   In this solution the AER driver searches for a downstream CXL endpoint
>   to 'handle' detected CXL port protocol errors.
> 
>   This is a good solution to consider if the one presented in this patchset
>   is not acceptable. I was initially reluctant to this approach because it
>   adds more CXL coupling to the AER driver. But, I think this solution
>   would technically work. I believe Ming was working towards this
>   solution.
> 
>   3.) Refactor portdrv
>   The portdrv refactoring solution is to change the portdrv service drivers
>   into PCIe auxiliary drivers. With this change the facility drivers can be
>   associated with a PCIe driver instead fixed bound to the portdrv driver.
> 
>   In this case the CXL port functionality would be added either as a CXL
>   auxiliary driver or as a CXL specific port driver
>   (PCI_CLASS_BRIDGE_PCI_NORMAL).
> 
>   This solution has challenges in the interrupt allocation by separate
>   auxiliary drivers and in binding of a specific driver. Binding is
>   currently based on PCIe class and would require extending the binding
>   logic to support multiple drivers for the same class.
> 
>   Jonathan Cameron is working towards this solution by initially solving
>   for the PMU service driver.[1] It is using the auxiliary bus to associate
>   what were service drivers with the portdrv driver. Using a CXL auxiliary
>   for handling CXL port RAS errors would result in RAS logic called from
>   the cxl_pci and CXL auxiliary drivers. This may need a library driver.
> 
>   4.) Using a portdrv notifier chain/callback for CIE/UIE
>   (Implemented in this patchset)
> 
>   This solution uses a portdrv atomic chain notifier and a cxl_pci
>   callback to handle and log CXL port RAS errors.
>   
>   I chose this after trying solution#1 above. I see a couple advantages to
>   this solution are:
>   - Is general port implementation for CIE/UIE specific handling mentioned
>   in the PCIe spec.[2]
>   - Notifier is used in RAS MCE driver as an existing example.
>   - Does not introduce further CXL dependencies into the AER driver.
>   - The notifier chain provides registration/unregistration and
>   synchronization.
> 
>   A disadvantage of this approach is coupling still exists between the CXL
>   port's driver (portdrv) and the cxl_pci driver. The CXL port device's RAS
>   is handled by a notifier callback in the cxl_pci endpoint driver.
> 
>   Most of the patches in this patchset could be reused to work with
>   solution#3 or solution#2. The atomic notifier could be dropped and
>   instead use an auxiliary device or AER driver awareness. The other
>   changes in this patchset could possibly be reused.
> 
>   [1] Kernel.org -
>   https://lore.kernel.org/all/f4b23710-059a-51b7-9d27-b62e8b358b54@linux.intel.com
>   [2] PCI6.0 - 6.2.10 Internal errors
> 
>  drivers/cxl/core/core.h    |   4 +
>  drivers/cxl/core/pci.c     | 153 ++++++++++++++++++++++++++++++++-----
>  drivers/cxl/core/port.c    |   6 +-
>  drivers/cxl/core/trace.h   |  34 +++++++++
>  drivers/cxl/cxl.h          |  10 +++
>  drivers/cxl/cxlpci.h       |   2 +
>  drivers/cxl/mem.c          |  32 +++++++-
>  drivers/cxl/pci.c          |  19 ++++-
>  drivers/pci/pcie/aer.c     |  10 ++-
>  drivers/pci/pcie/err.c     |  20 +++++
>  drivers/pci/pcie/portdrv.c |  32 ++++++++
>  drivers/pci/pcie/portdrv.h |   2 +
>  include/linux/aer.h        |   6 ++
>  13 files changed, 303 insertions(+), 27 deletions(-)
> 
> 
> base-commit: ca3d4767c8054447ac2a58356080e299a59e05b8
> -- 
> 2.34.1
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.7])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B9BC94644C;
	Fri, 21 Jun 2024 19:04:54 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=192.198.163.7
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718996696; cv=fail; b=X2TI4kHhGgpaXdxtQH+qIb8nvMDr5pdcxVmsUqck1baS0CQAYQC4rF+Pe1EAcUTYShj1HG2iKc35Mt/kKCogqJzmL6/jkeuVSnC8AITOdRvAzvJCCioamob2Pogf5I6TGoTTT1oow9d/MXz1puDP+UvztzC6slbZzZkD7931sts=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718996696; c=relaxed/simple;
	bh=Q9K4qxGSl2IF8T2pEdRkt5tuqJK0CRqsSn4uxwE9nqU=;
	h=Date:From:To:Subject:Message-ID:References:Content-Type:
	 Content-Disposition:In-Reply-To:MIME-Version; b=X0NpDW4Ri/hnuH6FJPdAw5leB79Vh/hYwsjHVuwQ2ytDTGHJ7EvyFqmsjXCa6tshDiukbS5GxRkVgSUm63ZVeLPK0aowNdvMLiC6bL/oZw4SjsG521DB/ERiiJ1WyLlyDfyllQZnYjXgdZ2dN/3oKybGhfWB+LqgaTSJlfcSBD0=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=QDD6CAei; arc=fail smtp.client-ip=192.198.163.7
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="QDD6CAei"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1718996694; x=1750532694;
  h=date:from:to:subject:message-id:references:in-reply-to:
   mime-version;
  bh=Q9K4qxGSl2IF8T2pEdRkt5tuqJK0CRqsSn4uxwE9nqU=;
  b=QDD6CAeirTHgdp6Hhme/yyMZY+5DIm73eyjcG/b7MmWXUYyqRWqOIFG7
   CKbp1MQXdj+91VNCQTRva1nzyxqyqmjDPpMdV29+IIyTDq8A224MGUQ/a
   UXiDcoDk0uy1tcMq6wuYMhk3FaaMeEHnYyDsxvJl71SOTrRz/Xln8DcDA
   X5HDVSuVy+6gCMkcjIOT4SJ+3yL3sl8vbiD70nsHP4CzIZjOFP7ATEnT+
   mwxmtNuatgqmATCNzhB4FHzDrwrWv5XNwV7rSKpNgkUhQOamN3RcfRuSf
   RtTyIMnMqXK1PQcQ0T2HlzKILXpzkQmdh10sUBsc5VQuLJ5DMtS/oiCtz
   Q==;
X-CSE-ConnectionGUID: 2//bObpbRrGogZ+Z+Aj2jA==
X-CSE-MsgGUID: NwA8xkknS02Hk0SU7w22rQ==
X-IronPort-AV: E=McAfee;i="6700,10204,11110"; a="41450031"
X-IronPort-AV: E=Sophos;i="6.08,255,1712646000"; 
   d="scan'208";a="41450031"
Received: from orviesa006.jf.intel.com ([10.64.159.146])
  by fmvoesa101.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 21 Jun 2024 12:04:53 -0700
X-CSE-ConnectionGUID: fX3oUf6IQIevRYkHNI2f3w==
X-CSE-MsgGUID: 5Vq4NvLPTvqPlGVlocSQEQ==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.08,255,1712646000"; 
   d="scan'208";a="43120739"
Received: from orsmsx601.amr.corp.intel.com ([10.22.229.14])
  by orviesa006.jf.intel.com with ESMTP/TLS/AES256-GCM-SHA384; 21 Jun 2024 12:04:53 -0700
Received: from orsmsx611.amr.corp.intel.com (10.22.229.24) by
 ORSMSX601.amr.corp.intel.com (10.22.229.14) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Fri, 21 Jun 2024 12:04:53 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX611.amr.corp.intel.com (10.22.229.24) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Fri, 21 Jun 2024 12:04:52 -0700
Received: from ORSEDG602.ED.cps.intel.com (10.7.248.7) by
 orsmsx610.amr.corp.intel.com (10.22.229.23) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39 via Frontend Transport; Fri, 21 Jun 2024 12:04:52 -0700
Received: from NAM10-BN7-obe.outbound.protection.outlook.com (104.47.70.41) by
 edgegateway.intel.com (134.134.137.103) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.39; Fri, 21 Jun 2024 12:04:52 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=i2FpXspXhz1p3hKEIjUibQ6oguh/AulrS5kOkOsXCVi/jQiAa95MxAix1VAFGh62nmdm1UHvhjxh00kTgNQvurRV+pEXmnOOOJ9k4ehsmEXIBT67cfOjG1EozaL/OOCuAKBsjxiWaQu0HWiQodc5MM6WiOHeeZlz5yBYkU0PEvt8ZDWoNdHQFsn+KShObR3wfBO3C7EvQ+8poq/JUHD3GlvZ+tKjjgAlC1VzxW8RKeNoiX4JvaaVs9/x3IAE8XqQoyoRBx7SF5+Sb7pmuZUD+YCFg/oY+GK9TM64CFo9Uj9+VUPs3EEPCF9qEBAcmo9xkB4T84zyCLEYHDv4JVhAIw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=kwu3/atNsnvQxgePF7aTnn1mp9PO5/A3MtWeSxaXZTU=;
 b=c2PhY8p7XSQXqdDl9s8VZvFga1HSKJpXmjQhARFime4u5vWUGFWMoV0ugcRjVvd3JPweGnyVwgeZFzQdigc1iJrgUJ+n1SZbMERs+RYjypv+2ZopoPWlSO7CkLu6uCGmLaGpUWocktpHniRzutNmK93fH+1lzZYZsBczMahBWn8ZJ3p+61k2hYEWgVlK5sXxtCIhiD7xnl72mlhmBK15DYw6IX1+em/4cx4fX6xgJSAMs43GY9FNBz36x0UZyIqq3qVieFdh2ZoKx4ydtb306K0ck0mMbfGLQAJgfM0LGZUVY0pdO4BvLQkidd5Qa0sLg8rWWTMis1qY9rKuJbG9zA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by CY8PR11MB7847.namprd11.prod.outlook.com (2603:10b6:930:7c::5) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.21; Fri, 21 Jun
 2024 19:04:49 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8%6]) with mapi id 15.20.7633.021; Fri, 21 Jun 2024
 19:04:49 +0000
Date: Fri, 21 Jun 2024 12:04:46 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Terry Bowman <terry.bowman@amd.com>, <dan.j.williams@intel.com>,
	<ira.weiny@intel.com>, <dave@stgolabs.net>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 0/9] Add RAS support for CXL root ports, CXL
 downstream switch ports, and CXL upstream switch ports
Message-ID: <6675cece52eaf_57ac294ea@dwillia2-xfh.jf.intel.com.notmuch>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>
X-ClientProxiedBy: MW4P222CA0019.NAMP222.PROD.OUTLOOK.COM
 (2603:10b6:303:114::24) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|CY8PR11MB7847:EE_
X-MS-Office365-Filtering-Correlation-Id: 75046ac3-5109-42e7-ae9d-08dc92250613
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|366013|7416011|376011|1800799021|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?buPvdB734wO0iUKlvJjqufzXQV/6NOz3XimaMH4YQ3yvFtIc/30XJ+EAvAHm?=
 =?us-ascii?Q?JsqQHOAIqyw7kIFWPKqwTdAGxFZWuTRd3ia3tK+xooPc0OQg+oJB8Nt3l+lF?=
 =?us-ascii?Q?PBt8GYqpfL+973hEXgdQ03z4SzHP+PO3nTKkAHdHgjWT77QDFROMGlNZq/Wj?=
 =?us-ascii?Q?5sKTzPeyWqnwIdMYDJdVuYK2bDzF34HowBG3GMJt6mstqih1GvroQlLE4ye8?=
 =?us-ascii?Q?9PRypMPNLiHZ4XTMiI5leH6+AR5ngS/UYJpie4dd0Zhn3I77Eyo29XZe7+g8?=
 =?us-ascii?Q?2iJOGFweFPUMMlGx2bXtWBWNgpIT6v5g9rvipD6q6EPszx2TNuv0Oj7Ctvfz?=
 =?us-ascii?Q?B9zyjqFJjsOHuLZ4xYnYnTfa5SG6lqfVELcitpdlqnwxKa+LhpbmvWzLehgm?=
 =?us-ascii?Q?emJOXxZiHe3xgrTTMLP9FFqhFPg8SITkcZYYeaFC6IQRPFIaN/WroDCdfIEK?=
 =?us-ascii?Q?m1fg3rtnqiZa/RiyO4F3PO/rE7i6O+bkuazrtfxAkBlRQtXHd5hQJOTJx/g7?=
 =?us-ascii?Q?6p1uHunQUig29Ld6nNEIkyiRtA+hlh7de2p6zo1Ym+I9UVe6NC4r8dqcR6kC?=
 =?us-ascii?Q?CrTpsrCK2KVgq4BwveMiT4L5sPVU6mWrx/3Pt1Y/xLJXnVMkKTv+ALqhsEWU?=
 =?us-ascii?Q?faJrwfp1NSTfis5r61dZebZ1Fz4+BlWDCR44q3TIrryHfcYjSuGyOMGI358A?=
 =?us-ascii?Q?U9DfwpP8bTNT8L5f48IPcWRhiyRltW7lr1wq77Z7zaFcpEK8x3Ekrlbr/tpG?=
 =?us-ascii?Q?MxyJeMQCPdRCxu7YPmHZoeec3p/rxqAX+uC+cuZpKcBEYI/RlOrf8fBhDbrO?=
 =?us-ascii?Q?w9pPBcQLHjRLHBKh0zbW5xTUWEWW2vOP2pNkGeAWkBq4uf03iBYLF/LzAhaf?=
 =?us-ascii?Q?c0JCtxrV94L7rMKyqIHa2Z6XydNbTvXX2TDID9s/wKiTKQZQNGpe6xQ1ujN7?=
 =?us-ascii?Q?0l/sCQxLfg61xIrIMKr9Eb9lm7BGPHEnL4VhVBKia3yOVfKi/lVlQO7pGlBk?=
 =?us-ascii?Q?BbwHwqk/XLVzyx8ROKMI/xZMwe4RcZRDkb++KfUGkp+7nEFzUbwI5tDSwCs2?=
 =?us-ascii?Q?MU7i96pYvpr4LUzZa1K1EnZwlZdhZabFOY8lzs1Q2C8U7Fmi/Uowrw2/Zv/Q?=
 =?us-ascii?Q?QXy2kgRDJfdNKlVnlz0oQg35TJuWBCYZ6L1gWVWf14Lo8Ty7xxeOjgc9jQpL?=
 =?us-ascii?Q?phRgKj6scmmOnhVMyraDyH7ofaF6I6bILZgBgw14gIeKYs1sB11PzrEmDyRe?=
 =?us-ascii?Q?0d0DmtpMGqsnuixOXFcPjRg9Hgad6MHeNSYdlf7ek63SxlIiQf56uYE7By8G?=
 =?us-ascii?Q?2ulYbOkBYxh0D/Pw1fHN5h9TlGK2qIO8fqbDSeWd70uxBs6aKpi+1bAXYc3g?=
 =?us-ascii?Q?tpxsns0=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(366013)(7416011)(376011)(1800799021)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?sl8EA60F6WV2IjUY8NwaD09BDT9+JGluxTM1VuB5BR1LD4b/+Zhu5ZQdvnVY?=
 =?us-ascii?Q?OsdcnssBBmw76xmiWlR0GUJ/M/D2k46oorobuYMZ/vhjQELlBQf3vcXxBq2+?=
 =?us-ascii?Q?TeIHnWWF4LIBrJ5f9aIIdmSWa1qNtDFF7dHt79INXPl89H0bqAWZhBTRcPqO?=
 =?us-ascii?Q?I9IjeCV+QBtpmksb7Hf9yOna6ZMWqDRpD0376IAiWP96Ij7mQeG20cnJ7TXX?=
 =?us-ascii?Q?NdxNAACd/VLpRJYI7v6JV6C2NAR1e5vPwk4E9opZE5scCh0V1V6ZpVNVqUHI?=
 =?us-ascii?Q?wqGwMScjh8EL+L4gRL97/ur1/5+Q3jPDCenZ5oA6BDEByB+uFdmCxXl8OyKT?=
 =?us-ascii?Q?hvMDxqV/Yl1UmXkygkpSS6wpvjvUA1veXgtrmrUoD07/qMHP1qHLErYniH9s?=
 =?us-ascii?Q?ZuYIa82cEqBrmYGd+lS+x2Spg6aPCY+hid0kWCx9TRXW3zrBdOhBbFTJ5Fgt?=
 =?us-ascii?Q?1b11sTI4hjGacOcgo7L+E99BXBDziVTyoE+xQLFDNyz9QVRz/T5TiIcyjxq3?=
 =?us-ascii?Q?7PC7qpJjne2KWiIXcbnMb1LadrFPqRKx1XhoP6PHUJf9dGc2wn8/Drc9AB4H?=
 =?us-ascii?Q?L42DF8M+UFNeYeLYNikv6zkg0fSGe0z/CjFZFC8PsAL2vDcEasYgKusZGFTF?=
 =?us-ascii?Q?2tOCn+6+iqgkSpkSlPjqaGHrXu3idVkIiMd4ZV0GCOaecOYl+3hSLg1f0qxS?=
 =?us-ascii?Q?+mHUOSLen6U1NuybXk4ZnDVhC2MjS7in4yxlzSa4IHdV93K+WXTAd5IrLF3g?=
 =?us-ascii?Q?MzMqx5C76sgsOKFOika0NAyhFymVlR4dVjuF4phLETeouR+1cw9Ayd+0WAK+?=
 =?us-ascii?Q?kh+T9jcIRVxGobbdbG8nLibpbk0Ns2VyJejtBt+LlC16DYYMv564IERHTn7R?=
 =?us-ascii?Q?ZBRTRi/+JgjDM0HDmDGYPrCsm2ooMmh0Oor+XlqZewm4gWEXMakNEjKmBzCT?=
 =?us-ascii?Q?SnXsa7Onr7WGsEJedmvvu/2mIzkNHOcM2bW85Y/rGLYMfCdIIfiegYlKJPb1?=
 =?us-ascii?Q?BYMKlDdK9hhhJxdREjOK5/elJ5nFPu55kWX1CT13hZO+WcjzA+ZeUWZfog3w?=
 =?us-ascii?Q?m+oSKk4JFaW0edUulQI8T7mdHcMLwYIx5YwsXEk9l/7/zeGV23ZmEcYOQepa?=
 =?us-ascii?Q?+hc8lq+j++8YqWzIcJRJ5QZYOrl3G6+k4llx0EmbNnV3EP8xikHZo060e8xv?=
 =?us-ascii?Q?t5g7NKwhdg6nimYS1QEOaR4Tn98SIe86U2s8dui9S1V31jWfqAATze5SYQLY?=
 =?us-ascii?Q?SOCbTWck1UpUBM8NWQy/DrLfjjAcscI72A8aNtaUS9/bq3xRhNP0Mc2EhPVP?=
 =?us-ascii?Q?2Ola2orNeaTx6emkyWZhNU1XurD3d3ggFnYE9hTxuKKB1u4ZBthMnUxO32zY?=
 =?us-ascii?Q?GgATlPApPHqpIvneElVxVuB7WIXXS0knr/FMYXQcEY4e3aAfOpt8G5dOtUw0?=
 =?us-ascii?Q?JP9oswtWlNfNFWFaSKzrm5ct/E8OthA/9/XkN/waHyUdeGEM9iQuzsJTJ8Vq?=
 =?us-ascii?Q?T7x1um/o+Sq/K3oxsgcxZH0aYDAVtiwkNJ2UYI50y0JFr+afdK09e//RKdgm?=
 =?us-ascii?Q?6bQySiTZI92G1K7AQ51xPKf8M71+PTekcY8t7VPgCXdP6YA7Iy47G+Nkq/DF?=
 =?us-ascii?Q?bw=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 75046ac3-5109-42e7-ae9d-08dc92250613
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jun 2024 19:04:49.4665
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: RPop3vV6kuvFRHMPmx8NpShg7m8q/5iIURfWOwTlJvlZjrjmA7Bt0NSdmEVR7NNmFDC7jnpSfJf2qdflNiSKPvTSWAE3ArqVvPG6qetYB5Y=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY8PR11MB7847
X-OriginatorOrg: intel.com

Terry Bowman wrote:
> This patchset provides RAS logging for CXL root ports, CXL downstream
> switch ports, and CXL upstream switch ports. This includes changes to
> use a portdrv notifier chain to communicate CXL AER/RAS errors to a
> cxl_pci callback.
> 
> The first 3 patches prepare for and add an atomic notifier chain to the
> portdrv driver. The portdrv's notifier chain reports the port device's
> AER internal errors to the registered callback(s). The preparation changes
> include a portdrv update to call the uncorrectable handler for PCIe root
> ports and PCIe downstream switch ports. Also, the AER correctable error
> (CE) status is made available to the AER CE handler.
> 
> The next 4 patches are in preparation for adding an atomic notification
> callback in the cxl_pci driver. This is for receiving AER internal error
> events from the portdrv notifier chain. Preparation includes adding RAS
> register block mapping, adding trace functions for logging, and
> refactoring cxl_pci RAS functions for reuse.
> 
> The final 2 patches enable the AER internal error interrupts.
[..] 
> 
> Solutions Considered (1-4):
>   Below are solutions that were considered. Solution #4 is
>   implemented in this patchset. 
[..]
>  2.) Update the AER driver to call cxl_pci driver's error handler before
>  calling pci_aer_handle_error()
>
>  This is similar to the existing RCH port error approach in aer.c.
>  In this solution the AER driver searches for a downstream CXL endpoint
>  to 'handle' detected CXL port protocol errors.
>
>  This is a good solution to consider if the one presented in this patchset
>  is not acceptable. I was initially reluctant to this approach because it
>  adds more CXL coupling to the AER driver. But, I think this solution
>  would technically work. I believe Ming was working towards this
>  solution.

I feel like the coupling is warranted because these things *are* PCIe
and CXL ports, but it means solving the interrupt distribution problem.

>   3.) Refactor portdrv
>   The portdrv refactoring solution is to change the portdrv service drivers
>   into PCIe auxiliary drivers. With this change the facility drivers can be
>   associated with a PCIe driver instead fixed bound to the portdrv driver.
> 
>   In this case the CXL port functionality would be added either as a CXL
>   auxiliary driver or as a CXL specific port driver
>   (PCI_CLASS_BRIDGE_PCI_NORMAL).
> 
>   This solution has challenges in the interrupt allocation by separate
>   auxiliary drivers and in binding of a specific driver. Binding is
>   currently based on PCIe class and would require extending the binding
>   logic to support multiple drivers for the same class.
> 
>   Jonathan Cameron is working towards this solution by initially solving
>   for the PMU service driver.[1] It is using the auxiliary bus to associate
>   what were service drivers with the portdrv driver. Using a CXL auxiliary
>   for handling CXL port RAS errors would result in RAS logic called from
>   the cxl_pci and CXL auxiliary drivers. This may need a library driver.

I don't think auxiliary bus is a fundamental step forward from pcie
portdrv, it's just a s/pcie_port_bus_type/auxiliary_bus_type/ rename,
but with all the same problems around how to distribute interrupt
services to different interested parties.

So I think notifiers are interesting from the perspective of a software
hack to enable interrupt distribution. However, given that dynamic MSI-X
support is within reach I am interested in exploring that path and
mandating that archs that want to handle CXL protocol errors natively
need to enable dynamic MSI-X. Otherwise, those platforms should disclaim
native protocol error handling support via CXL _OSC.

In other words, I expect native dynamic MSI-X support is more
maintainable in the sense of keeping all the code in one notification
domain.

>   4.) Using a portdrv notifier chain/callback for CIE/UIE
>   (Implemented in this patchset)
> 
>   This solution uses a portdrv atomic chain notifier and a cxl_pci
>   callback to handle and log CXL port RAS errors.

Oh, I will need to look that the cxl_pci tie in for this, I was
expecting cxl_pci only gets involved in the RCH case because the port
and the endpoint are one in the same object. in the VH case I would only
expect cxl_pci to get involved for its own observed protocol errors, not
those reported upstream from that endpoint.

>   I chose this after trying solution#1 above. I see a couple advantages to
>   this solution are:
>   - Is general port implementation for CIE/UIE specific handling mentioned
>   in the PCIe spec.[2]
>   - Notifier is used in RAS MCE driver as an existing example.
>   - Does not introduce further CXL dependencies into the AER driver.
>   - The notifier chain provides registration/unregistration and
>   synchronization.
> 
>   A disadvantage of this approach is coupling still exists between the CXL
>   port's driver (portdrv) and the cxl_pci driver. The CXL port device's RAS
>   is handled by a notifier callback in the cxl_pci endpoint driver.
> 
>   Most of the patches in this patchset could be reused to work with
>   solution#3 or solution#2. The atomic notifier could be dropped and
>   instead use an auxiliary device or AER driver awareness. The other
>   changes in this patchset could possibly be reused.

I appreciate the discussion of tradeoffs, thanks Terry!

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (mail-dm6nam12on2068.outbound.protection.outlook.com [40.107.243.68])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 7216018FDCD;
	Mon, 17 Jun 2024 20:06:07 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.243.68
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718654768; cv=fail; b=CmT6V+Eww3U6mVxR9jOhvYtd1kfamd7HeupXPOoBxUII1PwSur1bXe+NK7YPLKENM8RR8ePOfU1KzJHishslQ0ZOoK0WGtQ6/QfXLvX60qVVUh9QcuncBLDJIURwm3FTlH+2phtbjJBDZ8RvX0PqZcjquov3NRNlnxdjbQ7wy7w=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718654768; c=relaxed/simple;
	bh=6FdwMlb9PTpqhBN7ZRCboi+YKCb8NjmX/vTY2UROd78=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=I6lVR6rdVSn+j2S9LWMpOTIqhOlF/PppbE9zaz5QDOjJm0/DA5m7BZ4sMnMStema2hngx3dLXhLtlwZ92wp5CZJCCyTd3xHqnibMa6cAJzf4XJBSvp9Yk1HNd6COJoPH2J0yYOIgrcfihD/G4czPHRqdxcR1+s3IbKdf6vqnZVE=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=MmUlPfVX; arc=fail smtp.client-ip=40.107.243.68
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="MmUlPfVX"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Rh/TLs5wBTBPqKVjhnE6fjJOr5iCu8I+O/7CIarXvtJTH+9prQqdj2HR7o9bUNNaqd1gGcGUQbenBlQiNKcm9tiXRP/8O92IdrtL8aDzK2cDfzvNxXMRZzJUKA3NBwiBEXzkV3R7vuNLB0uKMVQ3m17ZlYGf0qB8wbcwt3eUbqkJgEyFuBr/OcbhxzTj7MgtLae9DYjdLEdlJU7MK/5nw5mjjwpaBpMo0FMAoZEf0no22N39d6aHauEMHQnBGpO1eqJJ/usYWiRfPHhn8Cv2zbdehEfocwAlut9LtTClhMHRGVU3CJ4rv9qhVoiTy5hDUBshFJTqhbmCsdD8zraKlQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=tfjI9rw9dxmXO1fk15wQcsHTJ74Ow2Vwn+HbohIAklY=;
 b=EC5hGO2YhpCb3mJPvvoqcXgiiBkZzwNchIf/QosP9tRvXWtTbrbHgPfubjrPoGuQKbGpvm/ZKzvlioC2u6E/PDGHyYjp81XvSZ/q1ENXic4PgRsTdSX/lNSzDUS9Tv+5jGhYT56LtCnKRWbALKVDZgxYFB7Oq4Im3zayR3MIioL7F70HmR3PiIulahMc0wATb55BUpfTP6YUg3q2YtBPK2e2LOcROurmNhgoSjldswpdYM/hRYedZCANbd6154uf7memi3OuEdjxmt4sTSXqbYA/HcuFb+/3Mf8LfZWu+TLg//C5Mm/osHU5vfLOIod27OVwZAnSaNPd6IIqz8dxRg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=tfjI9rw9dxmXO1fk15wQcsHTJ74Ow2Vwn+HbohIAklY=;
 b=MmUlPfVXINzfmp6SBmii9RZLgJoxMtsVzR5VIX6fJWJKu9nGGw+8YfqGOgCW0rZXFeSuSX65GzTBZNMq+EOGW1dxSQeF/DLrAqc1I6DmUaSncjdB2IjBkfmrzB96Ag/I0sMaOMNrvpCFgdxcDP7umx9tHGsX+7cbAiH1EeZ4LVE=
Received: from BYAPR05CA0039.namprd05.prod.outlook.com (2603:10b6:a03:74::16)
 by DS0PR12MB8453.namprd12.prod.outlook.com (2603:10b6:8:157::16) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.31; Mon, 17 Jun
 2024 20:06:04 +0000
Received: from CO1PEPF000066ED.namprd05.prod.outlook.com
 (2603:10b6:a03:74:cafe::8d) by BYAPR05CA0039.outlook.office365.com
 (2603:10b6:a03:74::16) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.31 via Frontend
 Transport; Mon, 17 Jun 2024 20:06:04 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000066ED.mail.protection.outlook.com (10.167.249.10) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.7677.15 via Frontend Transport; Mon, 17 Jun 2024 20:06:04 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 17 Jun
 2024 15:06:03 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <terry.bowman@amd.com>,
	<Yazen.Ghannam@amd.com>, <Robert.Richter@amd.com>
Subject: [RFC PATCH 9/9] cxl/pci: Enable interrupts for CXL PCIe ports' AER internal errors
Date: Mon, 17 Jun 2024 15:04:11 -0500
Message-ID: <20240617200411.1426554-10-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000066ED:EE_|DS0PR12MB8453:EE_
X-MS-Office365-Filtering-Correlation-Id: bf1ae36e-3097-488e-9f0f-08dc8f08eadc
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|7416011|376011|36860700010|1800799021|82310400023|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?U8iCPKh2nNwoqVLMzpirLYCl+Q+TeRDT5HURUMePdoG3wj4hIWWfVQyJTZEb?=
 =?us-ascii?Q?z6Ae/uRzj/V6ItMv9TfCJY1ZaW/wHHrrXsllpcQ19bJWYTAJQ/qx62xrPsho?=
 =?us-ascii?Q?sA0iMXvQ49nzb49iW/kOga6XRT+fYSW/E9S/NZtsTxBjI+id9pEyHBKhYRXo?=
 =?us-ascii?Q?m5NN/ZlHTrGN9lmmvKZPysTReImFH+tjzPAmhRmUOTlzFmbW2gtsESXxZhiV?=
 =?us-ascii?Q?r3pA5tBQWCeVfW+1BjajgNASIiV+7dG4RSPxz8fgAe8TlqiK+TfSM7RaULUU?=
 =?us-ascii?Q?SnuuU5u5yPrc3QAB0LngeeX7W9SIWvfoJzbpQJqkZUSJXW8AuyD89Q6Zla+3?=
 =?us-ascii?Q?aDptiLo5DsyG0iPdLO+RYHheCNUWaOo1Y9Dl0hFVQYnJJ0RAzqMxOzAol+jx?=
 =?us-ascii?Q?dSJP8Tu7H79qTIJcXanjD4ov1MO1uuYfhBuy/a22yeVLP12mtey5gPhH9oOM?=
 =?us-ascii?Q?sNZJxjEZ2Ly8uqKjkEA+rQInX1eaxi5umlsibf1MvNVFQBUMB0Ga/jNIs7mO?=
 =?us-ascii?Q?kgGHVBdLlGZKrMbFMn6RGQDfDT6OW5/SCdLgi/vymOTgvW6r+xR3BXBx5iZz?=
 =?us-ascii?Q?TzEoL0ed0Q67fpaWezk/aV2cTwdQELRBVioD6DGzJ0HVOgU4mOjAzJRnFrtq?=
 =?us-ascii?Q?7qlezsKfCH6BLdbK7PrZ5vm61unCKArcOp8MDaxiFwBVhAwHR2cp1giz0fuZ?=
 =?us-ascii?Q?dmMqy9PInrKLfLWRfaflLyKG6dc65EiENmAG8JzpoqRQzHrz4L8tz1OXKmup?=
 =?us-ascii?Q?kSZCzNQas4QBswv61QllHL5KSJ85/+jNjwTG2IakU7nt+RGk65sQSEro1C1t?=
 =?us-ascii?Q?DzaBapaIdds3G92UiOlSVjB4dGCaykwP7phP3gUH6IlbManN4ij+WcnwYMlZ?=
 =?us-ascii?Q?ZFdDI2oANX0Wycc7Na28tTGZBDDUTJkqjhq1nOFcoiKBuKhqyyr8LsXt8Ec5?=
 =?us-ascii?Q?oKrpUjecMPjqO1ayfj60fFZ4zFewsyS0OtDtAlTxI7vzSLWPtMWSDGfUjhy3?=
 =?us-ascii?Q?6KKVZ7pdlqRp33GNn/5JAHFzLHIfA3CA3yp4pkWzC6Up87VJ9tpqyOJVdchx?=
 =?us-ascii?Q?p6cJ8UPbE189pKspO35kHZlaQzI3Swdqa6mMBqoocI1ObDaXLFLiqDjj8oU0?=
 =?us-ascii?Q?X+hiVtXlEd2WfDLfXHDKl0GIfCv9O09GqPoweLwKifDEOVPHxsCQn/qn2zCC?=
 =?us-ascii?Q?7gCMy9yDruKjbyPcjvPvB0dxk+LdReCN1ZIXmZNffXTO7AgwyijUvjL2KTyz?=
 =?us-ascii?Q?ZUGsoik/TU6LBF/F0qRbkhyEfdW2rDhRjfhVAR06CwkSe7UeBy0pNQQJEH+b?=
 =?us-ascii?Q?hSKt07DI7POYJLmaqlkEvhC0Vx3AMnU9Sb3+X9k/69ReDarWA3s0j6x8pIes?=
 =?us-ascii?Q?0dqTnutvqgLtfdhO4+/vDgUQVyIVPWJM6sb3JyYlmYk4S7EwwINXvJ6elrB5?=
 =?us-ascii?Q?4qdh23dJjus=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230037)(7416011)(376011)(36860700010)(1800799021)(82310400023)(921017);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Jun 2024 20:06:04.0886
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: bf1ae36e-3097-488e-9f0f-08dc8f08eadc
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000066ED.namprd05.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS0PR12MB8453

CXL RAS errors are reported through AER interrupts using the AER status:
correctbale internal errors (CIE) and AER uncorrectable internal errors
(UIE).[1] But, the AER CIE/UIE are disabled by default preventing
notification of CXL RAS errors.[2]

Enable CXL PCIe port RAS notification by unmasking the ports' AER CIE
and UIE errors.

[1] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and Upstream
             Switch Ports
[2] PCI6.0 - 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h),
             7.8.4.6 Correctable Error Mask Register (Offset 14h)

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/pci.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index e630eccb733d..73637d39df0a 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -861,6 +861,12 @@ void cxl_setup_parent_uport(struct device *host, struct cxl_port *port)
 	struct device *uport_dev = port->uport_dev;
 
 	cxl_port_map_regs(uport_dev, map, regs);
+
+	if (dev_is_pci(uport_dev)) {
+		struct pci_dev *pdev = to_pci_dev(uport_dev);
+
+		pci_aer_unmask_internal_errors(pdev);
+	}
 }
 EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_uport, CXL);
 
@@ -878,6 +884,12 @@ void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport)
 
 	if (dport->rch)
 		cxl_disable_rch_root_ints(dport);
+
+	if (dev_is_pci(dport_dev)) {
+		struct pci_dev *pdev = to_pci_dev(dport_dev);
+
+		pci_aer_unmask_internal_errors(pdev);
+	}
 }
 EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_dport, CXL);
 
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-MW2-obe.outbound.protection.outlook.com (mail-mw2nam10on2045.outbound.protection.outlook.com [40.107.94.45])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 8E21518FDCD;
	Mon, 17 Jun 2024 20:05:56 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.94.45
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718654758; cv=fail; b=Tu9LkcP+JnGhKVavJsk8chBOTN5XLhpvyXrlqcMYT69A+SCkhWRmDBthNGVQaZWwcxZPXMkqa5icXZAqfrBEbxPcovexoI89tnpd7J4JZzJga6Nm+Z9qqG7A0oycwqK/980depeMpjVy+SRFhYcEYJF51UmWWfGQsTNlT5cujYo=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718654758; c=relaxed/simple;
	bh=m2+M7Uq08F7HibZgF5W8wxOp5E1Evv8hjSsaJ7FLKlk=;
	h=From:To:CC:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=STsU/R52ky1s8Lp8xAo0TMLGzvp2Q66o1GMLLdmYnvYg6hHJ2KI1XIzt7b5pSYURacx2hQFUmDmOk8JScB18a9PEpZ5H1klVTSG7myHGop2cyDaokFAyhLoqx1QAxalH5iSigzabRDwKccobGPE0Bna+E3X2b+rpUFQYSI6/RnU=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=osNUnLv2; arc=fail smtp.client-ip=40.107.94.45
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="osNUnLv2"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=KBS7bAxeYHjWN+6W9HeY41r16L/oX2cYqmmYNqJraTtMlwm/glKGTfP0wHEsuaAMEowHmuVRhNxtMikg9ZyvoDG1yEPnIzOy7RYIyXEBHU5gopXBNehgNyBdrJnFhcrmX3VGew6KFaSFg+5wF8hrWruQdaa8dicmWni62zS/RO/C/hcbCcAcqnMxaAtXA83xNdetaCMPigOg8E0yN3XCrDYuBSQZPdqhq7TOt7xBVJ9V6wlBKy2DeGVHyt+rJhTKn2eBf8pCdKiDyEOo+VcQeMLtAh+mv2bYC/SgoZEBFsE+foH4t9TEEUSED828IkD1/2BD5WR9l9hw3n94sm4bng==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=RRQup9KGzBjZ10NoITfMp0a+Us+E7VpZ8nL1w13Kflw=;
 b=AAR1X5W2bjapKEEmjFO10EtBOl09e0ZvSILR55f5naxMivPtKHeJwaK3hK848OLBez6qQM/bNwv3bdFBG4kk0IdhpYwl4Cy10xX3+wF6DgZHr2HoA0GzUa+r4Y8gIrviVXRTxWbl5hVXh4w8s4fjuS2eOA+JstEE7I8JlUVt8G6jLHT2VmTvgBmZKZPwCbFCOI91o/R4fb5WnaZYpz3ZvjgzR3dBbz1o2SaFMmSxzx4hrpOsYBm+yk3Vg+OjvgtfSXtYtwQ3GJVVbouusn94zjtaAuB2osQFtp9e/jcd/BHFBlzua1wHJfPI3wNIdrS73M8O90hQqoRZKemtQWRjZA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=RRQup9KGzBjZ10NoITfMp0a+Us+E7VpZ8nL1w13Kflw=;
 b=osNUnLv2kNhLDx9eAlAJxaJ+sIIct5mfJqzjd7JBXWzOF+rHDlm3J3i7DlJu6JBARzvVz98X9G9/8u7nx9oNGaBlsbmyiUInQXr/DxNx5HaT8ryppPuyYZqdEPBkU+cFy0BKaVoGkzhFLKU8CjJf+gFu/X4bjPWio34LMDsgZAs=
Received: from SJ0PR05CA0074.namprd05.prod.outlook.com (2603:10b6:a03:332::19)
 by SA3PR12MB7878.namprd12.prod.outlook.com (2603:10b6:806:31e::10) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30; Mon, 17 Jun
 2024 20:05:53 +0000
Received: from CO1PEPF000066ED.namprd05.prod.outlook.com
 (2603:10b6:a03:332:cafe::a8) by SJ0PR05CA0074.outlook.office365.com
 (2603:10b6:a03:332::19) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30 via Frontend
 Transport; Mon, 17 Jun 2024 20:05:53 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000066ED.mail.protection.outlook.com (10.167.249.10) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.7677.15 via Frontend Transport; Mon, 17 Jun 2024 20:05:53 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 17 Jun
 2024 15:05:52 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <terry.bowman@amd.com>,
	<Yazen.Ghannam@amd.com>, <Robert.Richter@amd.com>
CC: Bjorn Helgaas <bhelgaas@google.com>, <linux-pci@vger.kernel.org>
Subject: [RFC PATCH 8/9] PCI/AER: Export pci_aer_unmask_internal_errors()
Date: Mon, 17 Jun 2024 15:04:10 -0500
Message-ID: <20240617200411.1426554-9-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000066ED:EE_|SA3PR12MB7878:EE_
X-MS-Office365-Filtering-Correlation-Id: 3fb1fedb-f156-4aca-6fc1-08dc8f08e47b
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|36860700010|376011|7416011|1800799021|82310400023|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?OOaGlpVEo2NB2sHV/PUp8BhSUYlYHFI3i9RvhG/mipjYHrpQUeCpZttkoxYb?=
 =?us-ascii?Q?ttZSPIIk9eTouGxMcPuE1BaANfSmwzlEfCcL2GDMM3AGeLIinLFsaedm0LMY?=
 =?us-ascii?Q?aCVx2kZLTFfwRG396RM3xvGxSgVRn2V2owgheuf2Kxw7kSbeC4oPLOCTju/I?=
 =?us-ascii?Q?5GZK5IBC4RBp4hV9yXRzZT8SE3KCy9c6UW7t72D2xa92Ii9oxPMDDWjKbdq7?=
 =?us-ascii?Q?hDjyLxIpMaPYiKfB0kRv/sLiMASPoYWHzz2Ww9qoREocaAE5b9HSp39pd8tn?=
 =?us-ascii?Q?on6ERpY5PpqH7pYbbi8VqiugQ7HEHpvVjsjjgu0Hvjg+QAq0lZhYDz7FL+/L?=
 =?us-ascii?Q?bi4WdKyCHO807vDUuBxIYYBQfCZMvmL+WRKB2ilVVpNsIo/wSrFHz5v/5/TB?=
 =?us-ascii?Q?ecDPU9uGJl2pr6mLCjRsRBghbKy2kASWb/9+plI+rGwWkI6yGL6julQQbkI7?=
 =?us-ascii?Q?e9MTAAs8eYetX0c9cc64KCo5YA9RH3alJyXBNFAD3qn8zzncA5MDDuT0Ptd9?=
 =?us-ascii?Q?U/ecMiV4jEf5Nq6erYG66v5549hj69zvHhAlPH5dNwD2acnx2i9sBig/jD+s?=
 =?us-ascii?Q?HI1TDBkk8GNIKC5Mv6hYJS8d27l4P+UmiUFio/fDAwxHwxGRFdT5jBQFA6yR?=
 =?us-ascii?Q?2uSn0Dn+CNPUSix6R2RGnh4Q14vthiBTUi+zvbw5Pd0/Rs3eU3KMkg7WVVfd?=
 =?us-ascii?Q?I6mhw6T5H0yMLy8xlYW4qoc65Wcvzk76M1FwvcsF1HhzNpv3moBfvjhXEI2n?=
 =?us-ascii?Q?sQlwOOp0QpfLgGd+mI+P8GpS2/+omCY1gQYTDI/sF7J4W1BMH99KHHr7Xi0J?=
 =?us-ascii?Q?KB5m4pnxziJCuKjcdp75alfKwRXvnFQXwDd0JQH3dxtJucdn4bBwxIoRoZVX?=
 =?us-ascii?Q?v8w0oXN8G4MlwoxIMFihiIKwHM3rFqZEqenOXu8O4uZry3wTQXjTEwdOE0yI?=
 =?us-ascii?Q?r+aLYLhIw+zb8odxGL7hqZmtuvHVh/cML2wTDEl1HOpxbpI7J/9oQyzafz0c?=
 =?us-ascii?Q?FQk22cSSzl62JFk9gGTGo6CeWk9P7AUMF8IGRfJT5V3ZQodo/XG+9E5+rEC1?=
 =?us-ascii?Q?rQXOh07TLnQ3KuHvHFJVscguoKeNPSHXel3uukYkPWjEkO8qv6P7fSO6w4BU?=
 =?us-ascii?Q?ZzOz6EivzBLAOwsDm2vAbWW4H6/DVjvTeyer/9mK0r46wqh1DPjiWT2rEEu5?=
 =?us-ascii?Q?aNHTknoJJVIYYol0Li7oUrSKLOBFDw7axlHLO8nZXbKIB7GOkEInctuAm08z?=
 =?us-ascii?Q?LbC+0jeEYBVS8ZojoyhpbW+1HshmMZZgX4ExzaeGypP5GDV7mFr/drG2KLtG?=
 =?us-ascii?Q?n1th1IetOGzuzwUjHAhE7lj1vA7T/4YUdE7atE1BAQeXvTjjIWCKGhiPx5HG?=
 =?us-ascii?Q?kSUBwKD/kjKFbm+G/GRuZCwrv30tU/2NmZ05JFI1PM0xMAhauEMjADe06AHM?=
 =?us-ascii?Q?63/vm732PtU=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230037)(36860700010)(376011)(7416011)(1800799021)(82310400023)(921017);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Jun 2024 20:05:53.3854
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 3fb1fedb-f156-4aca-6fc1-08dc8f08e47b
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000066ED.namprd05.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA3PR12MB7878

AER correctable internal errors (CIE) and AER uncorrectable internal
errors (UIE) are disabled through the AER mask register by default.[1]

CXL PCIe ports use the CIE/UIE to report RAS errors and as a result
need CIE/UIE enabled.[2]

Change pci_aer_unmask_internal_errors() function to be exported for
the CXL driver and other drivers to use.

[1] PCI6.0 - 7.8.4.3 Uncorrectable
[2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and Upstream
             Switch Ports

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Cc: Bjorn Helgaas <bhelgaas@google.com>
Cc: linux-pci@vger.kernel.org
---
 drivers/pci/pcie/aer.c | 3 ++-
 include/linux/aer.h    | 6 ++++++
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
index 4dc03cb9aff0..d7a1982f0c50 100644
--- a/drivers/pci/pcie/aer.c
+++ b/drivers/pci/pcie/aer.c
@@ -951,7 +951,7 @@ static bool find_source_device(struct pci_dev *parent,
  * Note: AER must be enabled and supported by the device which must be
  * checked in advance, e.g. with pcie_aer_is_native().
  */
-static void pci_aer_unmask_internal_errors(struct pci_dev *dev)
+void pci_aer_unmask_internal_errors(struct pci_dev *dev)
 {
 	int aer = dev->aer_cap;
 	u32 mask;
@@ -964,6 +964,7 @@ static void pci_aer_unmask_internal_errors(struct pci_dev *dev)
 	mask &= ~PCI_ERR_COR_INTERNAL;
 	pci_write_config_dword(dev, aer + PCI_ERR_COR_MASK, mask);
 }
+EXPORT_SYMBOL_GPL(pci_aer_unmask_internal_errors);
 
 static bool is_cxl_mem_dev(struct pci_dev *dev)
 {
diff --git a/include/linux/aer.h b/include/linux/aer.h
index 4b97f38f3fcf..a4fd25ea0280 100644
--- a/include/linux/aer.h
+++ b/include/linux/aer.h
@@ -50,6 +50,12 @@ static inline int pci_aer_clear_nonfatal_status(struct pci_dev *dev)
 static inline int pcie_aer_is_native(struct pci_dev *dev) { return 0; }
 #endif
 
+#ifdef CONFIG_PCIEAER_CXL
+void pci_aer_unmask_internal_errors(struct pci_dev *dev);
+#else
+static inline void pci_aer_unmask_internal_errors(struct pci_dev *dev) { }
+#endif
+
 void pci_print_aer(struct pci_dev *dev, int aer_severity,
 		    struct aer_capability_regs *aer);
 int cper_severity_to_aer(int cper_severity);
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (mail-dm6nam12on2056.outbound.protection.outlook.com [40.107.243.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B4A3C1990AB;
	Mon, 17 Jun 2024 20:05:46 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.243.56
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718654748; cv=fail; b=aKBFkEbUN0sQ0WdUzu1zxVZt2+CF7VsNfGn9NqzuMkKnbPRk+0oVos79eLAxMKuzCornxKrGPB0CMvxmHlHbMXnFA4N83+gI9naLUE08Oc29Wnss6ImcyCGSBnPStgdXdQI9pDJV55Yl/WjGjNx2lubEqXPmml60DyAaEKzGTME=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718654748; c=relaxed/simple;
	bh=AQznya0ccgoWLuT4eXFlv4qzKbvV87kJv4Achwny0Vg=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=EfB6o4sI/nXzoFlMfSHkSEazkmIFVVdJM4NEMAPlNDtZj2nyY0bOux/gCOmEWqr9QX3z3rqYC5wn3kvJOkCcdFDG1ZkkAcGaQdkN5+bETsYTsBgBY5sph0rNR4TkzIbESs1wffc6nVnNZbU4syueHyfPQouBT77n7oQN14k7GDg=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=iu7CfVu5; arc=fail smtp.client-ip=40.107.243.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="iu7CfVu5"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=fQ0aeVh9KMCmJuInjI+7ctRakgIAtAY9rVx0LlcTIle63fCjm1VvJ8XSj+rVakGfcc46NdMDc5ZCsofCfC644zbBDxCqWznlS6IcTLT+mcx1hRB7Ph1ls1pGBt9b5O2rNLY5k+LzQZDlJHU/mxHG5kXOG5X7HEo/A1jt76isw4UbYwjqv+SDaQEXTkqf7JlNGGW/s5OFr6Yx6p0de+EXTpTOObM4+7Dk+VbuTgqP1qcFQ07ni2C+2J0FR+HMyTONcSKl9/zF0+mSBLSJu6OpLMiAJAe7HW9UKGKbEAEf9IC9G0MtMmIzFJRQbUi5xQiBkBlKMsHM16SjJjQXuLf5+A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=8HvJ/jRE1dq/SEfTEIhVL/EFl9NGIKorrAXaRQWcz0I=;
 b=Jb4NmccgKQZ6DstWxkeWF1dGLFqBycM1iTiZH1papRifDegVVZaDPkB77WxNM/65MxEwq033h+j3h6S6pYauDpE/uAnnYqAl/mIW7nZS9v4AN5e5u0Qcs8sNFKIhGjzr95TSpS9Y6sbttfcuzSnvz128ON55ZTl3Z4+lUyKGWIc6HEwrF9nurAF1J5OEmg/jn0SaFb7YZEJ/EQUAoAVal3VbLngozKFaR5ohb4JhpCFsNzKDkc1RArWnWRhxDCuRmIwBTz/ZKJ/rwmGCrm3COz6JKkR70yyWtP3Y3Of4O8o0jkaW7Yq5T5EDv1aFjCNbDXrbPf9LicGhgjcxpTfimw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=8HvJ/jRE1dq/SEfTEIhVL/EFl9NGIKorrAXaRQWcz0I=;
 b=iu7CfVu5ag8wCGeeNmEB0ble4T3mnuHTGzv7IeW/4To2Am6iZLRaycqjr0zauSYOQsMQ0IXGBT5vJUUl1PWguuYSZCZZYsnw3RhSPxpzP0FDqnTiuTdxHXoAv3O4KCFAIvilPeS2t5pUltqyECBuoEvM0vz6kDlJUgMoocV0YWo=
Received: from SJ0PR05CA0068.namprd05.prod.outlook.com (2603:10b6:a03:332::13)
 by IA1PR12MB6234.namprd12.prod.outlook.com (2603:10b6:208:3e6::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30; Mon, 17 Jun
 2024 20:05:43 +0000
Received: from CO1PEPF000066ED.namprd05.prod.outlook.com
 (2603:10b6:a03:332:cafe::2f) by SJ0PR05CA0068.outlook.office365.com
 (2603:10b6:a03:332::13) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.26 via Frontend
 Transport; Mon, 17 Jun 2024 20:05:42 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000066ED.mail.protection.outlook.com (10.167.249.10) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.7677.15 via Frontend Transport; Mon, 17 Jun 2024 20:05:41 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 17 Jun
 2024 15:05:40 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <terry.bowman@amd.com>,
	<Yazen.Ghannam@amd.com>, <Robert.Richter@amd.com>
Subject: [RFC PATCH 7/9] cxl/pci: Add atomic notifier callback for CXL PCIe port AER internal errors
Date: Mon, 17 Jun 2024 15:04:09 -0500
Message-ID: <20240617200411.1426554-8-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000066ED:EE_|IA1PR12MB6234:EE_
X-MS-Office365-Filtering-Correlation-Id: 4e47d74f-2619-452a-e377-08dc8f08dd9b
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|36860700010|7416011|376011|82310400023|1800799021|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?0SfnFi0MNvlF6WXy6A4u+nGNnCQsKzo7LSRINx/eD8geWVycy1MTsaaoJyyB?=
 =?us-ascii?Q?kCnAx41xFipe5fYlY9fzKVzNOXkigL62chO5ctkqZt4WQKal2+D9NHKeGviC?=
 =?us-ascii?Q?qxnDx99U+1Tl/saRFaEhP3CBEtUd587tnQcl463zC7+V3+isKxnyrd2ZmqcX?=
 =?us-ascii?Q?nbtRRmjw/p69ABtWpDaG+BTpDXXlbDbAorCVNHJMbL/lfgNxxvlCpMVAiyGi?=
 =?us-ascii?Q?vseNKjTHz6Ijsfv0/wCP0W9x6MUPI8+iAlVSXzNXEQJ16nlyQ0Pberv9ZzE0?=
 =?us-ascii?Q?ZvMl+f+7If3JihexWZ79i8zK94AXKofVFRsWEP+E/G2ch/qh8QAOlLh1mGrs?=
 =?us-ascii?Q?YPbOopmt2Kkwq1R+JURu/bfkuyq9WhkWV2ugrBgW6kZHB2MfjtQG8aBtcOTF?=
 =?us-ascii?Q?vpElUOQh9yEnwbQIo7pM0NkwMRo8IYJYa1s9jXZjjH+IBgBD3yy4Ks/i81Se?=
 =?us-ascii?Q?bmlWswl8jOyRbJ8hhrSdrNARI6aJipIpydImZb4uzKMaHIGhE6kytBZTDDko?=
 =?us-ascii?Q?nUrigUo6cug7NSvun/8//t2odCELVOmhaAhhTNaWlg/aadjePfK9MQ0Tg4e+?=
 =?us-ascii?Q?BfYbzVRWiNeR+ZEJxVq2zhK+dyw1IX9atcxNv6E6V9OH3QfxjxaBY2eNTiPE?=
 =?us-ascii?Q?xbjTVcLhjhW7TmOtoJUxjXM7LMfjJ+JMz+t0jysvjaC7I0NXpMxTwjLuD6a1?=
 =?us-ascii?Q?BbfEpwU65YNeabwqbPDgTrlZxs/Vf713D4mcdFAifOKHoZ1cisD0Ef5g5d9M?=
 =?us-ascii?Q?AgY59T6Q2k8FTJ4r8wLrr/tSXH8/5tvmn5GjCXpFMXH8pesdZzQ+ft0Zgw0U?=
 =?us-ascii?Q?m5QOCr3n1uXAUyw6qlrsr1ILLF9GpIEA2jUJUa2ZTTh3bFRCLTvO5KMXXP5l?=
 =?us-ascii?Q?XXI4QtWMeyLG586iwZGIgs2rPQjLiygyxkN9/FjxNDGETVIvmqMhnv2l1T5i?=
 =?us-ascii?Q?nh3tKGayXrn5jOaxwnlNcHSA0VbGZQMZhTB778al3BlaOIHlKmxdCqYqZItI?=
 =?us-ascii?Q?dQiJtFrdHnrzGKVrCLr0Kq22n4XoTlbqwiEbZ20kEIDaPgBeuHUeficyYd3z?=
 =?us-ascii?Q?oEICoi7HqkGFMR3yGjpOS8esPCeLrCZjC6KiV7me689oRdJO3J2sHmhTF1aH?=
 =?us-ascii?Q?CDGQ8a1zG74NpAXlDuCDgyKZbkG1riei4S5Sg4ofvW7+/NDJqE/wk6VeO9UJ?=
 =?us-ascii?Q?mLRIl0veAM8jnqpY9UqW16zA8FUm8xAHSu/BwKialeR3MzQ34AQkvfFwJL0e?=
 =?us-ascii?Q?p+PHbVyG1Y43rL2vH/6p2TGKGEGHowusIvVO0VZs1aHtnDbU1uVXHsFoxj94?=
 =?us-ascii?Q?ba7N8rmq3Yca5ZdF7JCJiTXQvuOnAFFO1IdR2hSfqz87GrcSv3XBCMnlvZQ1?=
 =?us-ascii?Q?9uB7WgXwFmh5A3R6+JlSFFj++EGrD74iGmrwdzZSVPtR4npVJyefob5WFYpw?=
 =?us-ascii?Q?Zq39SskO9EI=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230037)(36860700010)(7416011)(376011)(82310400023)(1800799021)(921017);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Jun 2024 20:05:41.8229
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 4e47d74f-2619-452a-e377-08dc8f08dd9b
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000066ED.namprd05.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA1PR12MB6234

CXL root ports, CXL downstream switch ports, and CXL upstream switch
ports are bound to the PCIe port bus driver, portdrv. portdrv provides
an atomic notifier chain for reporting PCIe port device AER
correctable internal errors (CIE) and AER uncorrectable internal
errors (UIE).

CXL PCIe port devices use AER CIE/UIE to report CXL RAS.[1]

Add a cxl_pci atomic notification callback for handling the portdrv's
AER UIE/CIE notifications.

Register the atomic notification callback in the cxl_pci module's
load. Unregister the callback in the cxl_pci driver's unload.

Implement the callback to check if the device parameter is a valid
CXL PCIe port. If it is valid then make the notification callback call
__cxl_handle_cor_ras() or __cxl_handle_ras() depending on the AER
type.

[1] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
             Upstream Switch Ports

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/core.h |  4 ++
 drivers/cxl/core/pci.c  | 97 ++++++++++++++++++++++++++++++++++++++---
 drivers/cxl/core/port.c |  6 +--
 drivers/cxl/cxl.h       |  5 +++
 drivers/cxl/cxlpci.h    |  2 +
 drivers/cxl/pci.c       | 19 +++++++-
 6 files changed, 123 insertions(+), 10 deletions(-)

diff --git a/drivers/cxl/core/core.h b/drivers/cxl/core/core.h
index bc5a95665aa0..69bef1db6ee0 100644
--- a/drivers/cxl/core/core.h
+++ b/drivers/cxl/core/core.h
@@ -94,4 +94,8 @@ int cxl_update_hmat_access_coordinates(int nid, struct cxl_region *cxlr,
 				       enum access_coordinate_class access);
 bool cxl_need_node_perf_attrs_update(int nid);
 
+struct cxl_dport *find_dport(struct cxl_port *port, int id);
+struct cxl_port *find_cxl_port(struct device *dport_dev,
+			       struct cxl_dport **dport);
+
 #endif /* __CXL_CORE_H__ */
diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index 59a317ab84bb..e630eccb733d 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -689,7 +689,6 @@ EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
 static void __cxl_handle_cor_ras(struct device *dev,
 				 void __iomem *ras_base)
 {
-	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
 	void __iomem *addr;
 	u32 status;
 
@@ -698,10 +697,17 @@ static void __cxl_handle_cor_ras(struct device *dev,
 
 	addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
 	status = readl(addr);
-	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
-		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
+
+	if (!(status & CXL_RAS_CORRECTABLE_STATUS_MASK))
+		return;
+
+	writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
+	if (is_cxl_memdev(dev)) {
+		struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
+
 		trace_cxl_aer_correctable_error(cxlmd, status);
-	}
+	} else if (dev_is_pci(dev))
+		trace_cxl_port_aer_correctable_error(dev, status);
 }
 
 static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
@@ -733,7 +739,6 @@ static void header_log_copy(void __iomem *ras_base, u32 *log)
 static bool __cxl_handle_ras(struct device *dev,
 			     void __iomem *ras_base)
 {
-	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
 	u32 hl[CXL_HEADERLOG_SIZE_U32];
 	void __iomem *addr;
 	u32 status;
@@ -759,7 +764,13 @@ static bool __cxl_handle_ras(struct device *dev,
 	}
 
 	header_log_copy(ras_base, hl);
-	trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
+	if (is_cxl_memdev(dev)) {
+		struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
+
+		trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
+	} else if (dev_is_pci(dev))
+		trace_cxl_port_aer_uncorrectable_error(dev, status);
+
 	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
 
 	return true;
@@ -882,6 +893,80 @@ static bool cxl_handle_rdport_ras(struct cxl_dev_state *cxlds,
 	return __cxl_handle_ras(&cxlds->cxlmd->dev, dport->regs.ras);
 }
 
+static int match_uport(struct device *dev, void *data)
+{
+	struct device *uport_dev = (struct device *)data;
+	struct cxl_port *port;
+
+	if (!is_cxl_port(dev))
+		return 0;
+
+	port = to_cxl_port(dev);
+
+	return (port->uport_dev == uport_dev);
+}
+
+static struct cxl_port *pci_to_cxl_uport(struct pci_dev *pdev)
+{
+	struct cxl_dport *dport;
+	struct device *port_dev;
+	struct cxl_port *port;
+
+	port = find_cxl_port(pdev->dev.parent, &dport);
+	if (!port)
+		return NULL;
+	put_device(&port->dev);
+
+	port_dev = device_find_child(&port->dev, &pdev->dev, match_uport);
+	if (!port_dev)
+		return NULL;
+	put_device(port_dev);
+
+	port = to_cxl_port(port_dev);
+
+	return port;
+}
+
+static void __iomem *cxl_pci_port_ras(struct pci_dev *pdev)
+{
+	void __iomem *ras_base = NULL;
+
+	if ((pci_pcie_type(pdev) == PCI_EXP_TYPE_ROOT_PORT) ||
+	    (pci_pcie_type(pdev) == PCI_EXP_TYPE_DOWNSTREAM)) {
+		struct cxl_dport *dport;
+
+		find_cxl_port(&pdev->dev, &dport);
+		ras_base = dport ? dport->regs.ras : NULL;
+	} else if (pci_pcie_type(pdev) == PCI_EXP_TYPE_UPSTREAM) {
+		struct cxl_port *port = pci_to_cxl_uport(pdev);
+
+		ras_base = port ? port->regs.ras : NULL;
+	}
+
+	return ras_base;
+}
+
+int port_internal_err_cb(struct notifier_block *unused,
+			 unsigned long event, void *ptr)
+{
+	struct pci_dev *pdev = (struct pci_dev *)ptr;
+	void __iomem *ras_base;
+
+	if (!pdev)
+		return 0;
+
+	if (event == AER_CORRECTABLE) {
+		ras_base = cxl_pci_port_ras(pdev);
+		__cxl_handle_cor_ras(&pdev->dev, ras_base);
+	} else if ((event == AER_FATAL) || (event == AER_NONFATAL)) {
+		ras_base = cxl_pci_port_ras(pdev);
+		__cxl_handle_ras(&pdev->dev, ras_base);
+	}
+
+	return 0;
+}
+EXPORT_SYMBOL_NS_GPL(port_internal_err_cb, CXL);
+
 /*
  * Copy the AER capability registers using 32 bit read accesses.
  * This is necessary because RCRB AER capability is MMIO mapped. Clear the
diff --git a/drivers/cxl/core/port.c b/drivers/cxl/core/port.c
index 887ed6e358fb..d0f95c965ab4 100644
--- a/drivers/cxl/core/port.c
+++ b/drivers/cxl/core/port.c
@@ -1027,7 +1027,7 @@ void put_cxl_root(struct cxl_root *cxl_root)
 }
 EXPORT_SYMBOL_NS_GPL(put_cxl_root, CXL);
 
-static struct cxl_dport *find_dport(struct cxl_port *port, int id)
+struct cxl_dport *find_dport(struct cxl_port *port, int id)
 {
 	struct cxl_dport *dport;
 	unsigned long index;
@@ -1336,8 +1336,8 @@ static struct cxl_port *__find_cxl_port(struct cxl_find_port_ctx *ctx)
 	return NULL;
 }
 
-static struct cxl_port *find_cxl_port(struct device *dport_dev,
-				      struct cxl_dport **dport)
+struct cxl_port *find_cxl_port(struct device *dport_dev,
+			       struct cxl_dport **dport)
 {
 	struct cxl_find_port_ctx ctx = {
 		.dport_dev = dport_dev,
diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
index 7cee678fdb75..04725344393b 100644
--- a/drivers/cxl/cxl.h
+++ b/drivers/cxl/cxl.h
@@ -11,6 +11,7 @@
 #include <linux/log2.h>
 #include <linux/node.h>
 #include <linux/io.h>
+#include "../pci/pcie/portdrv.h"
 
 /**
  * DOC: cxl objects
@@ -760,11 +761,15 @@ struct cxl_dport *devm_cxl_add_rch_dport(struct cxl_port *port,
 #ifdef CONFIG_PCIEAER_CXL
 void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport);
 void cxl_setup_parent_uport(struct device *host, struct cxl_port *port);
+int port_internal_err_cb(struct notifier_block *unused,
+			 unsigned long event, void *ptr);
 #else
 static inline void cxl_setup_parent_dport(struct device *host,
 					  struct cxl_dport *dport) { }
 static inline void cxl_setup_parent_uport(struct device *host,
 					  struct cxl_port *port) { }
+static inline int port_internal_err_cb(struct notifier_block *unused,
+				unsigned long event, void *ptr) { return 0; }
 #endif
 
 struct cxl_decoder *to_cxl_decoder(struct device *dev);
diff --git a/drivers/cxl/cxlpci.h b/drivers/cxl/cxlpci.h
index 93992a1c8eec..6044955e1c48 100644
--- a/drivers/cxl/cxlpci.h
+++ b/drivers/cxl/cxlpci.h
@@ -130,4 +130,6 @@ void read_cdat_data(struct cxl_port *port);
 void cxl_cor_error_detected(struct pci_dev *pdev);
 pci_ers_result_t cxl_error_detected(struct pci_dev *pdev,
 				    pci_channel_state_t state);
+int port_err_nb_cb(struct notifier_block *unused,
+		   unsigned long event, void *ptr);
 #endif /* __CXL_PCI_H__ */
diff --git a/drivers/cxl/pci.c b/drivers/cxl/pci.c
index 2ff361e756d6..f4183c5aea38 100644
--- a/drivers/cxl/pci.c
+++ b/drivers/cxl/pci.c
@@ -926,6 +926,10 @@ static int cxl_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
 	return rc;
 }
 
+struct notifier_block port_internal_err_nb = {
+	.notifier_call = port_internal_err_cb,
+};
+
 static const struct pci_device_id cxl_mem_pci_tbl[] = {
 	/* PCI class code for CXL.mem Type-3 Devices */
 	{ PCI_DEVICE_CLASS((PCI_CLASS_MEMORY_CXL << 8 | CXL_MEMORY_PROGIF), ~0)},
@@ -974,6 +978,19 @@ static struct pci_driver cxl_pci_driver = {
 	},
 };
 
-module_pci_driver(cxl_pci_driver);
+static int __init cxl_pci_init(void)
+{
+	atomic_notifier_chain_register(&portdrv_aer_internal_err_chain, &port_internal_err_nb);
+	return pci_register_driver(&cxl_pci_driver);
+}
+module_init(cxl_pci_init);
+
+static void __exit cxl_pci_exit(void)
+{
+	atomic_notifier_chain_unregister(&portdrv_aer_internal_err_chain, &port_internal_err_nb);
+	pci_unregister_driver(&cxl_pci_driver);
+}
+module_exit(cxl_pci_exit);
+
 MODULE_LICENSE("GPL v2");
 MODULE_IMPORT_NS(CXL);
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-BN1-obe.outbound.protection.outlook.com (mail-bn1nam02on2072.outbound.protection.outlook.com [40.107.212.72])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 2F5C51991B4;
	Mon, 17 Jun 2024 20:05:40 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.212.72
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718654741; cv=fail; b=R/XFJW9J42gb8g4x2KQNEllG6X+vttRePEkRxp3RrwLniO98DRcIiAqyXgwhJEQhYR+m9QNLPvdVVhBiqHL6NNOxAN+Tt82b8N7ZIVJ6lZB5g8ibiIHWbwPX+mDVyeXiRMWaRoBy6JtnVd9vEvrMZ+bRZPtZMX+hYtETjD9BXH0=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718654741; c=relaxed/simple;
	bh=YhwI4ehx/hIFI3OEBGt82LbwNZCVpIwpbCBc8WMcFuI=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=Kd7rqaNFLFg+aymEEi3tqHUQYhPTElH7fvg+ZvhEoPsJQgqzWO3fzClN8WLTEMBWwHc4m7LcW30TGTru/saQQ5/KHnCl5AqsOuAMiStUCzK/dmASgFnttJM5myPOeMRB3960VpVRgLoJXyTnmdqb4VGd1iHGFdYQqy6hsLbOeSU=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=G5qqNolS; arc=fail smtp.client-ip=40.107.212.72
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="G5qqNolS"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=mwnrNTqig2ZQm8yO9YF/cGMevVKe+tzzireNMB72CsmnQvCKcZ92sl1yKmHcZWvleDEUspsOGY5PaNuwqojNvyasupazosMVE4pcc30bveF8gJ4+2ZrAssqaQW0DK4y4G7ju7A2sGH6S/eSqcweq/76cN1T5slU73Eq93lLRrof9HmlkDhgaETB+/f428RFIyuFS9Qbl+c06zy+0It6j/cowxJlBXhzDW1sKZcMW9lCBsgp0pBJ5UsArd2CxegAUPRpNl8KzMXg2PbvwjPTVvPMW++0O3zySnsn/j6DN4P1j2+833+0SWmptNYEqMiCKoyMfR3LLmaldXG/odqwmBA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=shfodHw6jfZM88Zzznv+XtjFFw271NPr29HmNje4DcM=;
 b=VW59GajNtlW4H0pB7agVXxcqzVq6EBFXpE5fXxC22Q0N16/UbuFQzhm569HUgKhbdDOiJWSYRqlCz5xXzhDG+4rbesurfe/MxSrhSYW4O3jdUgzW+/YfCwQBR5gC/IEKcG9UUvtdFzbgb0gQ9dFBK7FsWu2vWZfGl2iwNoPVWV39m552qm+YYoC9l86y6DK6RFYomMK/EM35Jimzit2bPL33X5SDaVsdn2WHLZrO/Gu3K7mjvORpzsiI9ZJrgHURyZkmiLwQ/eEmYgBIZPuyAIi3olcpbY08Xqz5mn1SgyORfcmc81mYaqVkloxckHSydq7IA94R4gX7XmpSQYD/4g==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=shfodHw6jfZM88Zzznv+XtjFFw271NPr29HmNje4DcM=;
 b=G5qqNolSeJm7qIjeDlOd1dwO7ca9i8yY9pbDFcy067n0f4LleBqmoUKN1rpxyTuHEbHMdoT14/fG2rFuEsICZ465o4n8Qx+btdSBsfy6ZaYqj9KS9ryzT1QtTckiga6SSuYwYk4UOQhgtqt2OnCXaG3E0w012ZhHm5YL3fmg/fE=
Received: from BYAPR03CA0015.namprd03.prod.outlook.com (2603:10b6:a02:a8::28)
 by CH3PR12MB9316.namprd12.prod.outlook.com (2603:10b6:610:1ce::21) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30; Mon, 17 Jun
 2024 20:05:32 +0000
Received: from CO1PEPF000066EC.namprd05.prod.outlook.com
 (2603:10b6:a02:a8:cafe::59) by BYAPR03CA0015.outlook.office365.com
 (2603:10b6:a02:a8::28) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.31 via Frontend
 Transport; Mon, 17 Jun 2024 20:05:31 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000066EC.mail.protection.outlook.com (10.167.249.8) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.7677.15 via Frontend Transport; Mon, 17 Jun 2024 20:05:31 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 17 Jun
 2024 15:05:29 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <terry.bowman@amd.com>,
	<Yazen.Ghannam@amd.com>, <Robert.Richter@amd.com>
Subject: [RFC PATCH 6/9] cxl/pci: Add trace logging for CXL PCIe port RAS errors
Date: Mon, 17 Jun 2024 15:04:08 -0500
Message-ID: <20240617200411.1426554-7-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000066EC:EE_|CH3PR12MB9316:EE_
X-MS-Office365-Filtering-Correlation-Id: dffeb003-480b-4610-1455-08dc8f08d750
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|36860700010|376011|7416011|82310400023|1800799021|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?r2UYczTk3XNFDdBNxSyg55ALPKe+LISxe74koy9CCUcX7KudDPQ4I+zYeGti?=
 =?us-ascii?Q?xRL+wBMiJ8ms0VutyBd7VzeW2yRKIsMV8kUIc1NptN+Z9iCB0ccFjjFOrM44?=
 =?us-ascii?Q?DjS48wRbBeI4ESKbVPoZ6n+KTzlwZbbot+6tA3Y9r2/SVmkVagJvdvqNpbma?=
 =?us-ascii?Q?kp8dedEnxAwLycspppMQdVWEjswitfDXwVK/G4BXMEZ7RzwsoriZ+n4ulC/4?=
 =?us-ascii?Q?p9lOr2swDqHDJmob8e//Lm2xZ5i2/oV/U9HaR7/GUps2yfyt+Yqgl2E3XsGa?=
 =?us-ascii?Q?q07XJCsZb5X2o2PB5jTsZKXlc3WAoA6auA7Nvn0l8asSEiXWcbprppuEuGKR?=
 =?us-ascii?Q?6JQrPa06mXrRTMl09kstVsKXCEubXR7qp2zBbDDYpXBN716r0CWExUqaeyor?=
 =?us-ascii?Q?wOYU6GYVBUUR4jQ6T7jHTC7hnXAJJipej06v+T7OH8432P2lpB+EM7fc2IpU?=
 =?us-ascii?Q?H5ue3DBgMRBg0DL0aHV1c/jAZe3MDMJicTJvzxrV0GyH8G2BHoSYRDIeiSEN?=
 =?us-ascii?Q?vUwSW+BpzxopjRS9S+XLZkYKibZrO3wg0O6syQfDX68bfsKarGHDP7tc84Yx?=
 =?us-ascii?Q?Qgb7RHxF7zs9C7HkqSniLoMODdTvNUp2Qx+YH6USgmnIX2us4V6qLbBmfV/9?=
 =?us-ascii?Q?uqFaXCFn3+fnRXX8IBofNjVzcgKMyPVL1W/xNi+MwiBzuMGavtA/5iml01jc?=
 =?us-ascii?Q?5SLdwFXafJbAjueEHTUDd6hBnvNB7S6BsASUoEffhLa/n99lajTSzDSslX48?=
 =?us-ascii?Q?3OboGWiQ+6dxnMyb6JG+4C0McS8wLBH7xFOg2myrY2HrAk85KrRDlqjbagKu?=
 =?us-ascii?Q?QFJsACTNq42GRAprVw8bm/4VfrRTLqaITahI1blevlcmCGPSEwc4Ih1Cpeoc?=
 =?us-ascii?Q?1mVA5wuc1m3isEpY0dhMZUyOyDB8BWoKjvKfvpH3rqlRTxqgFz2XXddDsBsU?=
 =?us-ascii?Q?/MsGTCdyY+k2s2jTVPHezySlO6r3oWWf2ft9Z8zsUps3m/wDps+ttL8U4emg?=
 =?us-ascii?Q?WvetfINic59cyKluIDQ33kUEllC6ESlv4YbI69JL6fcp5QLj+gzZbP0Sgcob?=
 =?us-ascii?Q?DrCx5aCcJcuNl2h98gHbqfZdJHvxZUI7xL3PgQPR1tvdabqLXwj67hZ0ONfa?=
 =?us-ascii?Q?BUYyeuAuHO9zKwx24sjn2JpE54/blD9CwKDFDIFSRlJIaSkg0UebiINwhfkY?=
 =?us-ascii?Q?adit+aoKAEFlXKjQ1FUAzhu5VtrNZzXdQexeMKnfHYbz9lIgtpuDZVfjxUJP?=
 =?us-ascii?Q?cVV29DfmpKcP/2cnZ5CIiOyxKlIHrSVb9p2tFDTxtLz5toV60/kGWe44q7VZ?=
 =?us-ascii?Q?Dh6hQmwkmJrsSmJ7Mf0ECW8+YZPN2xlUH34oLU3RBoy+rftvXbgJTnwCBrre?=
 =?us-ascii?Q?3SRCKur16xanKwU0WCjrPIQH0Z2f9sTZx7Zbvg2pRBmvDp/lhbqcm0S3r0Qp?=
 =?us-ascii?Q?Gb5kmQa0wz4=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230037)(36860700010)(376011)(7416011)(82310400023)(1800799021)(921017);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Jun 2024 20:05:31.3065
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: dffeb003-480b-4610-1455-08dc8f08d750
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000066EC.namprd05.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CH3PR12MB9316

The cxl_pci driver uses kernel trace functions to log RAS errors for
endpoints and RCH downstream ports. The same is needed for CXL root ports,
CXL downstream switch ports, and CXL upstream switch ports.

Add RAS correctable and RAS uncorrectable trace logging functions for
CXL PCIE ports.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/trace.h | 34 ++++++++++++++++++++++++++++++++++
 1 file changed, 34 insertions(+)

diff --git a/drivers/cxl/core/trace.h b/drivers/cxl/core/trace.h
index e5f13260fc52..5cfd9952d88a 100644
--- a/drivers/cxl/core/trace.h
+++ b/drivers/cxl/core/trace.h
@@ -48,6 +48,23 @@
 	{ CXL_RAS_UC_IDE_RX_ERR, "IDE Rx Error" }			  \
 )
 
+TRACE_EVENT(cxl_port_aer_uncorrectable_error,
+	TP_PROTO(struct device *dev, u32 status),
+	TP_ARGS(dev, status),
+	TP_STRUCT__entry(
+		__string(devname, dev_name(dev))
+		__field(u32, status)
+	),
+	TP_fast_assign(
+		__assign_str(devname, dev_name(dev));
+		__entry->status = status;
+	),
+	TP_printk("device=%s status='%s'",
+		  __get_str(devname),
+		  show_uc_errs(__entry->status)
+	)
+);
+
 TRACE_EVENT(cxl_aer_uncorrectable_error,
 	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status, u32 fe, u32 *hl),
 	TP_ARGS(cxlmd, status, fe, hl),
@@ -96,6 +113,23 @@ TRACE_EVENT(cxl_aer_uncorrectable_error,
 	{ CXL_RAS_CE_PHYS_LAYER_ERR, "Received Error From Physical Layer" }	\
 )
 
+TRACE_EVENT(cxl_port_aer_correctable_error,
+	TP_PROTO(struct device *dev, u32 status),
+	TP_ARGS(dev, status),
+	TP_STRUCT__entry(
+		__string(devname, dev_name(dev))
+		__field(u32, status)
+	),
+	TP_fast_assign(
+		__assign_str(devname, dev_name(dev));
+		__entry->status = status;
+	),
+	TP_printk("device=%s status='%s'",
+		  __get_str(devname),
+		  show_ce_errs(__entry->status)
+	)
+);
+
 TRACE_EVENT(cxl_aer_correctable_error,
 	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status),
 	TP_ARGS(cxlmd, status),
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (mail-bn8nam12on2076.outbound.protection.outlook.com [40.107.237.76])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 6FC01E542;
	Mon, 17 Jun 2024 20:05:24 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.237.76
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718654726; cv=fail; b=V7fvOXUiWxNDLJQB01bWGFWDbAMNOqFwK74a2mM0UJ1IFo2Vgha8nV9k1NVfUQKeLIUY3wLQyN1LcGmV2kYz3tCQwmNrCICzyNkwrvIJ0oan6QndqhLlaspQhz+kfaNVeqgvRbBuMjIwhJTNn7sDc6JdgGAjqews4sfKpaVWhbM=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718654726; c=relaxed/simple;
	bh=CyIysawuifkYpDi6xy6GdfbMN7O++SqYG6o5mN44n6o=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=uEa6MlUaznO44ZNLjIWPPwCCjJ/YUwgPn9d2YMM8WHmlhPOTsSi/Hit1MP6fzah0OzhV5xKZbYpEH3gmpAGcAF3UPgPFUjvhRaeqqivf4UqyItmsfBzAt5LyHPyvEChOv5vOFvw6N/44Agw6OS7SHmCokelWG15jnRjMs2OFxO0=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=klCr5T+Z; arc=fail smtp.client-ip=40.107.237.76
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="klCr5T+Z"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=WqcM6spnx2UOvuKzfvPFeRGrJgxD0imo3ktsyd9FYTd1kQYw7Qz+48hvWKm1S5PCkCSVnMOGi6lsujPb/Wm4t3GcycoYQ2WEN/VTg1MMmDfC1asGuPfkPxl/EoEYD0Fbor5PBQ7PHHqD8veZHNA7rx7m915vt5EnG7JH14SjuuAVHgrZcfh27EWon9lyExFS6JLuV+lvXk75SqyJlE99s1SSJKhhoa2fRRGzfuEEmUDC5jJb5tpQLWeRLhhM2+/1KSI5HbsMqETVXDYJONPIu4QzHwypxzfE0YVAiPREl4l2z45htaxwmlxt/680yVJ1/Qqojnj/CCxyndvztv5u+g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=xBXM8oohfM7lGqcdJlam74a7SPVH+VPxP7kMXhf228I=;
 b=Sl+pYCwOr+o+Qb6PQVb0Ymxl0RB7OBavzorOZ+VJXCMtK601Evwh43HnuD+KVhQ4U/aAWGMrpl7fIUdS3jm5dw0znltCJWmhCqAOSiTlfbsEX+KhzUyP1VNuVbtTfe9/QZoKy2U+4LiBzC7IArGsihtyAtP/LmVEMxxpV5AsxZQ4/QVHe33HKj+BR8B5j9jSobgSMh4roaEzAp1uzFA/tBPT4lJQbDjJvh98J59OLHb6VVv/4mDvoVgFbF+X/hNjAR+a/5QGXqM0aWmWl+/t82VBf3Q63NdJg9PVBITcaXY7Y/AG8CBh5EOydPRZyiiU55X0e3S4KbVkM0Ubq9+SWQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=xBXM8oohfM7lGqcdJlam74a7SPVH+VPxP7kMXhf228I=;
 b=klCr5T+ZniXYRXsTCmzKTIjPQSE/beB5FyK6smzCMO4qwqMXVwbni+eXuZpQdnQictszg8h8gRe5oaf1dy+AS/vDXSElCXZgqY8fPi33xJuodBT/XKoftBliV/S51afQAFX5sP9jDsWSGZdencD+gAjJ3g87OUsd+Ug0XNyHiFY=
Received: from BYAPR04CA0030.namprd04.prod.outlook.com (2603:10b6:a03:40::43)
 by MN0PR12MB5787.namprd12.prod.outlook.com (2603:10b6:208:376::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30; Mon, 17 Jun
 2024 20:05:21 +0000
Received: from CO1PEPF000066E6.namprd05.prod.outlook.com
 (2603:10b6:a03:40:cafe::50) by BYAPR04CA0030.outlook.office365.com
 (2603:10b6:a03:40::43) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.31 via Frontend
 Transport; Mon, 17 Jun 2024 20:05:21 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000066E6.mail.protection.outlook.com (10.167.249.4) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.7677.15 via Frontend Transport; Mon, 17 Jun 2024 20:05:21 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 17 Jun
 2024 15:05:18 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <terry.bowman@amd.com>,
	<Yazen.Ghannam@amd.com>, <Robert.Richter@amd.com>
Subject: [RFC PATCH 5/9] cxl/pci: Update RAS handler interfaces to support CXL PCIe ports
Date: Mon, 17 Jun 2024 15:04:07 -0500
Message-ID: <20240617200411.1426554-6-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000066E6:EE_|MN0PR12MB5787:EE_
X-MS-Office365-Filtering-Correlation-Id: 01df0e58-23b7-416e-29ce-08dc8f08d144
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|36860700010|7416011|376011|82310400023|1800799021|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?IbKvEtC0pHNxShxFgcp3D//9P+WLxElhL2kqLrbWw45q83PlbOl0cVir48O2?=
 =?us-ascii?Q?YDppasMV1+eNBIv0pQedjL8uCYpZHfcEF491vRMLp3jYWr5c8HgEdJcvipTq?=
 =?us-ascii?Q?BVz+JYVQGV/j1gY6pjuVXKjVUXJzb6xSmkH0SWh10OU3gyWPkmfVKISisZyw?=
 =?us-ascii?Q?cY7z48Ttqm8pOD6azLK0WPHen4mlPURV0Ku+wBZQndROAVOma2rLaDAoBtGk?=
 =?us-ascii?Q?lq0masF6Z/Md6KR0GMEtA5aW6c7EVkuq5zMiDkuAt81jbihmoWeOz9NIgs7Y?=
 =?us-ascii?Q?9X4VB5cr5o2/KQ65SpRIrkVAgASnYs8OILslo/BHiHLv1efo+OK0FCSApE+3?=
 =?us-ascii?Q?fzoMVrUaS7hX1AvQFb5jxXiGI+/LsZeJPwoFbq55VcTQTYToxzEnBMsbpBT0?=
 =?us-ascii?Q?swU/SsMR45QuU2F5xW0a5oIdRy+u6YfPE+7EkacozAKbzg5QZFJks4eRlEzz?=
 =?us-ascii?Q?DO9Q4UVUFvta3JWcfzoIPsHHi5woQhnORFXOfWAt4UEHOUun/cI+K/lrqMDU?=
 =?us-ascii?Q?siriVozfMuC6Nnh4HkGBZ5l8xDdEyjBC+AYyYrZcTjRuYx1RaDlVpiaFWyjW?=
 =?us-ascii?Q?o12T1hMDk0S3x3iOdo9454XxWkWjR8DvH6akhwyzgRFmC9KDdMUnPUqMIMKA?=
 =?us-ascii?Q?H+Ox3Dv32RRz282mZJv9AGb3eBhfyWBbyb6YU5l5beyBiMi5XxEU9L56y8Y2?=
 =?us-ascii?Q?qEysY5GEdR4ealSp4L+DskAkw9XxrMwQm7Ky92d7K43Qisydo2HNcFCK0Bq1?=
 =?us-ascii?Q?XacGupbajm/on16JZ0RyWShVuFBjIc1eyAfNIn31/AWjmEq7jNhf9hYHQQPf?=
 =?us-ascii?Q?cqsDl4NhlWV2DFRE46BRq0egAoQaym9I15G3TUV6dHp4kZ6gwfma1iYVB6BB?=
 =?us-ascii?Q?s/DYjBSw7bZD0QD4lYUYILPX910XOut7+qR/r8Z1o3m0hxF1iAeb0QHXHyNw?=
 =?us-ascii?Q?duxuPqAIZ8rUc5+xgjADXHG6x9LN/fFAS7mFwOJFHL97qf3REknl6vZOhuMf?=
 =?us-ascii?Q?N8O66m34gchF8njP6RjGlTwqkjB57Ex6tFzHMblpC3FRsD9mo5qXRPMPjGgx?=
 =?us-ascii?Q?e2AXgG6DqAPXkSvTMJH84zIMCEX9Sjchpb4Ecgc8hXItK43tGaAlmxpOTk8O?=
 =?us-ascii?Q?csVl/XV43Xo23yYjQBkwM1canS4leKo32Ap3H4IHumqap/M5xYT/dc/c+d0+?=
 =?us-ascii?Q?qsd4+IZr9tSniAxmrWMDLhRWLKQ2KlPZdZrcjoDwDyf/tTsemb4X/WmSwy0O?=
 =?us-ascii?Q?OUynMg2JwHA4B5nZcFMT4NB0dPG95z+5roNemdMwGdONMMwkp+N1GJszFGPA?=
 =?us-ascii?Q?HSce5SSv0tVldIqTpO5fKIoQQ/n6ZxeLkrUmh/pKlbfVdXv6rkkOiPNjsm/x?=
 =?us-ascii?Q?fAP4HAYCeW30imYjP0zT8zFO2D0hv9BJn1WCXxy9ffqWhnnjUkm8U0cyUXVJ?=
 =?us-ascii?Q?D8kYvPkMJlQ=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230037)(36860700010)(7416011)(376011)(82310400023)(1800799021)(921017);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Jun 2024 20:05:21.1464
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 01df0e58-23b7-416e-29ce-08dc8f08d144
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000066E6.namprd05.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN0PR12MB5787

CXL RAS error handling includes support for endpoints and RCH downstream
ports. The same support is missing for CXL root ports, CXL downstream
switch ports, and CXL upstream switch ports. This patch is in preparation
for adding CXL ports' RAS handling.

The cxl_pci driver's RAS support functions use the 'struct cxl_dev_state'
type parameter that is not available in CXL port devices. The same CXL
RAS capability structure is required for most CXL components/devices
and should have common handling where possible.[1]

Update __cxl_handle_cor_ras() and __cxl_handle_ras() to use 'struct
device' instead of 'struct cxl_dev_state'. Add function call to translate
device to CXL device state where needed.

[1] CXL3.1 - 8.2.4 CXL.cache and CXL.mem Registers

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/pci.c | 20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index e6c91b3dfccf..59a317ab84bb 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -686,9 +686,10 @@ void read_cdat_data(struct cxl_port *port)
 }
 EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
 
-static void __cxl_handle_cor_ras(struct cxl_dev_state *cxlds,
+static void __cxl_handle_cor_ras(struct device *dev,
 				 void __iomem *ras_base)
 {
+	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
 	void __iomem *addr;
 	u32 status;
 
@@ -699,13 +700,13 @@ static void __cxl_handle_cor_ras(struct cxl_dev_state *cxlds,
 	status = readl(addr);
 	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
 		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
-		trace_cxl_aer_correctable_error(cxlds->cxlmd, status);
+		trace_cxl_aer_correctable_error(cxlmd, status);
 	}
 }
 
 static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
 {
-	return __cxl_handle_cor_ras(cxlds, cxlds->regs.ras);
+	return __cxl_handle_cor_ras(&cxlds->cxlmd->dev, cxlds->regs.ras);
 }
 
 /* CXL spec rev3.0 8.2.4.16.1 */
@@ -729,9 +730,10 @@ static void header_log_copy(void __iomem *ras_base, u32 *log)
  * Log the state of the RAS status registers and prepare them to log the
  * next error status. Return 1 if reset needed.
  */
-static bool __cxl_handle_ras(struct cxl_dev_state *cxlds,
-				  void __iomem *ras_base)
+static bool __cxl_handle_ras(struct device *dev,
+			     void __iomem *ras_base)
 {
+	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
 	u32 hl[CXL_HEADERLOG_SIZE_U32];
 	void __iomem *addr;
 	u32 status;
@@ -757,7 +759,7 @@ static bool __cxl_handle_ras(struct cxl_dev_state *cxlds,
 	}
 
 	header_log_copy(ras_base, hl);
-	trace_cxl_aer_uncorrectable_error(cxlds->cxlmd, status, fe, hl);
+	trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
 	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
 
 	return true;
@@ -765,7 +767,7 @@ static bool __cxl_handle_ras(struct cxl_dev_state *cxlds,
 
 static bool cxl_handle_endpoint_ras(struct cxl_dev_state *cxlds)
 {
-	return __cxl_handle_ras(cxlds, cxlds->regs.ras);
+	return __cxl_handle_ras(&cxlds->cxlmd->dev, cxlds->regs.ras);
 }
 
 #ifdef CONFIG_PCIEAER_CXL
@@ -871,13 +873,13 @@ EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_dport, CXL);
 static void cxl_handle_rdport_cor_ras(struct cxl_dev_state *cxlds,
 					  struct cxl_dport *dport)
 {
-	return __cxl_handle_cor_ras(cxlds, dport->regs.ras);
+	return __cxl_handle_cor_ras(&cxlds->cxlmd->dev, dport->regs.ras);
 }
 
 static bool cxl_handle_rdport_ras(struct cxl_dev_state *cxlds,
 				       struct cxl_dport *dport)
 {
-	return __cxl_handle_ras(cxlds, dport->regs.ras);
+	return __cxl_handle_ras(&cxlds->cxlmd->dev, dport->regs.ras);
 }
 
 /*
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-DM6-obe.outbound.protection.outlook.com (mail-dm6nam10on2072.outbound.protection.outlook.com [40.107.93.72])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 694251990A1;
	Mon, 17 Jun 2024 20:05:15 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.93.72
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718654717; cv=fail; b=Qes0/PvdyyoS6KMqOISLLZrCJ1qrdnTx/Jz3id5kO1bNBd7jWQvZF6hwpg7PDu87mjWEwZ9zj5IuZM0O1ypDRY4pCFymAwRkmPDK5YumMtbAdevHSs2/967NrGMIOD27X5e0uWvUhNXyuMfKQEst+dzAK9IBTUCNIZcRbN81oeA=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718654717; c=relaxed/simple;
	bh=vpAjLN0Q2W03GmpM1WSixDUGVhbjHYnHoYotzOBU4bs=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=plwpYNuAtS19IvDdyitknAzXLiMFkomsF7wbsTfWtsTgY3Sql9hAS+W2kVpgR6oAtUiQz3HpqC6nUp/q0oU0si9Mc5wRqJh5g+pUjqU4Ay3/jbIjqhisCb1ydxl1f8gFS8jHYji6CxiXvwFdYFU0Aq7TQR2qA1psViP/sYPkeuE=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=uFac7V+N; arc=fail smtp.client-ip=40.107.93.72
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="uFac7V+N"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=RUVV+4MhU/Tk13iyQQb7LSk6eOyGMmonSswYE03x8cn/17DESgKvoALVIiiQrTcYvmLMgouXp7BXzOJuYi+d6NmMjfh17BTmNcqvmnTZ9p40Zd2BgK8vOKxgUtBt9LaRKB450jYmC9OapXWsG2kGOr6zIE4pvIY1z+l+jLHqz4jH2GZmvzxqPaHWA4XmUKZxGr45XcjtSCuzTfAqBVgZT0KD0C3RgeQJRzGbP8JXdt8Gsjl5STcvtyN/2m8x1L9zIvSfZjXLq7Iv4WTJin3qLsnJnbzM31fkcTwsr9ggAomW+sfhDZWcvv4plwmj+I6F0HpMgEy0dapLT9uZbGmovw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=pVtoOEcp5KRdOrLEHoxVb2q71bT6xZkcV470l7qosps=;
 b=U0i7pM1S482V1ebEt/EFlSm556dusv3bYxE20MdzUF7D4qMbLd3rXyqZfTLItJ/IEX2HTHZ9TJvHI8CLcU4iM/9E7TgoYpqN0loZOfPlyMPmkI11UjDoODNhynAKGFhl2cU4nbN+YkbEmx0jCeI/j+dSYGkMSAFBWIKH8i108tr+jgxsq2tIsisMuvjCI0ksRzJ0qFc6zq+eQnO0HMiXTw9UIrO1L8jLBGwihIQtwQrS4lGFKmQhzygLrdgqV8dloMIBlROQ8Mrfzue04GocgeAJzeWqPmAypafVYMAiREFZ7QKBqPk35ZFkce0E3bgR113GsVyO+TUftSy3guf32w==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=pVtoOEcp5KRdOrLEHoxVb2q71bT6xZkcV470l7qosps=;
 b=uFac7V+N+x+WLQyWjhrvMHhwTMhu5xrx6eRLj8L49fGWkQYOg7X7BddpzHvh2DPqqTb4J3zoVlYUwLm545GDUaVkbge6x6Ygy/5zFfWDzpOFWlRII93rebg0Ga3rFkP+1aHzSSZE8i7zViJFIPQcCKimn+Fc9TTnZ6OINkz07A4=
Received: from BYAPR04CA0019.namprd04.prod.outlook.com (2603:10b6:a03:40::32)
 by PH7PR12MB7796.namprd12.prod.outlook.com (2603:10b6:510:275::19) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30; Mon, 17 Jun
 2024 20:05:11 +0000
Received: from CO1PEPF000066E6.namprd05.prod.outlook.com
 (2603:10b6:a03:40:cafe::55) by BYAPR04CA0019.outlook.office365.com
 (2603:10b6:a03:40::32) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30 via Frontend
 Transport; Mon, 17 Jun 2024 20:05:11 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000066E6.mail.protection.outlook.com (10.167.249.4) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.7677.15 via Frontend Transport; Mon, 17 Jun 2024 20:05:10 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 17 Jun
 2024 15:05:07 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <terry.bowman@amd.com>,
	<Yazen.Ghannam@amd.com>, <Robert.Richter@amd.com>
Subject: [RFC PATCH 4/9] cxl/pci: Map CXL PCIe ports' RAS registers
Date: Mon, 17 Jun 2024 15:04:06 -0500
Message-ID: <20240617200411.1426554-5-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000066E6:EE_|PH7PR12MB7796:EE_
X-MS-Office365-Filtering-Correlation-Id: 59206555-cac9-4393-9a4c-08dc8f08caff
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|36860700010|376011|7416011|82310400023|1800799021|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?zHyIAmcRJdst9+yZQ9ZEZGxHcWtbE7ZCHvWQqkvmExFvitvJ6YmpKXRVUfJ9?=
 =?us-ascii?Q?tGryRUU9zVIdDyuIIk1XzlPC+k/rCHhTnEhhAijQZkBebqifXbm1EY1kfHqO?=
 =?us-ascii?Q?Gyr5ww1wz2kEw+Zb4Xac3fd8VwlN9vv4iVAEXnUmvy3eEBHelRAfhzrNxMZ9?=
 =?us-ascii?Q?KTjzwEhO0pDdZ+To18vR55P9SNbY5adUCbvPPwWjAsVgdWMCTXcxZM5zxrHL?=
 =?us-ascii?Q?mD3LuXtpRK/1V7Ntw5LDPEA8z96KsPGLszAcpAXx+PnNgtQpDb+dD0bzYcVH?=
 =?us-ascii?Q?SUwXx+IyONbQeEWX/2nAIpRjfbatVFTeF3zBSmWeGtFpHoJMGDa4YW6aS7Vi?=
 =?us-ascii?Q?+1d3vwIufHyPYJwYuHjVDTxMuKLJesnnqr57E9mLVT3sxEWKr0EMaCXCs6e1?=
 =?us-ascii?Q?9HUzao5UdnKYycFgHZEiP8Ghgzx4jJTTN1dkgUhp87HAH1IqgMbSzqJfTFlr?=
 =?us-ascii?Q?wGNnG3a1KFoW4Hq6me/e1wcMnU0J5lb6rTqzdiwugsYtcT3vyS4Tzlbb4v+M?=
 =?us-ascii?Q?HEhyVSWYYQTCOAvm6pIxopxcHfmKVTCqvLez7MYJKA0dI1CPO/2J64uIZllc?=
 =?us-ascii?Q?AYxZInVcKJf47dmqJW/dt5zQ7AYkzPFyZkBUGftHiIFZLEGL1ZCVUkfQkgou?=
 =?us-ascii?Q?N8otPPrplsvV2Yomw/6ayNon+PYhed/jXT/0lkoFZ3T5HufNnB4C1SFs+nQj?=
 =?us-ascii?Q?DAj0nvfNsPKzkUjrkaAbfD+gsCYFzm1lz3DlGRrzJcqnKIl8dV9F0rr5V4sP?=
 =?us-ascii?Q?RKhQ4EsEJuzkgMpNvN1OdiQfaI3poPhwCq5DYKKunCQrvgZzC2ROFaR4+spB?=
 =?us-ascii?Q?rQzANwF7Ux2fMuVvL7Rt0jUg7gbMTIBOoclWAKt0fIvdUFvDKKOzphEXJ/y+?=
 =?us-ascii?Q?jva/rnnWt2kxK29oF2KfqI3bkRBX1WlSA7OllRjqF5rQITSHl5ozxz7rlcb7?=
 =?us-ascii?Q?Z3BXkViN/ydllFIxdC2HjXlYhXyt5xSKezc7iQ/SQOLDHdNKywaXIy1efdTT?=
 =?us-ascii?Q?wBFTxvLb1LAlAJOGRv3k2tkrFpa9Ms04wdhHnro73u72xd+7aFIniPabcmEY?=
 =?us-ascii?Q?Qecc1NUPiOUgvWFHFkMFoT9Fwf4EjTE5rnbzyKFTe6IY/CyMyPVYLt6VQBzr?=
 =?us-ascii?Q?747A6rIQdgZfMfiZDPT6gGFGMZUR+LEatiN1TnNsN+nRbn/oc2clHsnqo4bd?=
 =?us-ascii?Q?gHpMVE8di7/uJ+9NJ34QulZs0zdGXXY6op7canm1qcCGdIWbSQyAZb43vw3t?=
 =?us-ascii?Q?CJXnpkykv3lTRDRkteAUWkVgDycH6LgustRZ8rJp/QvowDDm2BvEU7zOUGGP?=
 =?us-ascii?Q?ZOY6uPJ/HQC3oPEwVEICq0i0HEYFeGQplWweIOsQd+Tm9dtPXuEXiIseileA?=
 =?us-ascii?Q?o7e0JZiB8NxjW4TuaNKK+VeIkxRDzt43c48gCiVkCs0+ekX7VA95wwz1Cuh9?=
 =?us-ascii?Q?i+9G1YbvRfg=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230037)(36860700010)(376011)(7416011)(82310400023)(1800799021)(921017);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Jun 2024 20:05:10.6620
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 59206555-cac9-4393-9a4c-08dc8f08caff
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000066E6.namprd05.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH7PR12MB7796

RAS registers are not currently mapped for CXL root ports, CXL downstream
switch ports, and CXL upstream switch ports. Update the driver to map the
ports' RAS registers in preparation for RAS logging and handling to be
added in the future.

Add a 'struct cxl_regs' variable to 'struct cxl_port'. This will be used
to store a pointer to the upstream port's mapped RAS registers.

Invoke the RAS mapping logic from the CXL memory device probe routine
after the endpoint is added. This ensures the ports have completed
training and the RAS registers are present in CXL.cachemem.

Refactor the cxl_dport_map_regs() function to support mapping the CXL
PCIe ports. Also, check for previously mapped registers in the topology
including CXL switch. Endpoints under a CXL switch share a CXL root port
and will be iterated for each endpoint. Only map once.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/pci.c | 30 +++++++++++++++++++++++++-----
 drivers/cxl/cxl.h      |  5 +++++
 drivers/cxl/mem.c      | 32 ++++++++++++++++++++++++++++++--
 3 files changed, 60 insertions(+), 7 deletions(-)

diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index 0df09bd79408..e6c91b3dfccf 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -787,16 +787,26 @@ static void cxl_dport_map_rch_aer(struct cxl_dport *dport)
 	dport->regs.dport_aer = dport_aer;
 }
 
-static void cxl_dport_map_regs(struct cxl_dport *dport)
+static void cxl_port_map_regs(struct device *dev,
+			      struct cxl_register_map *map,
+			      struct cxl_regs *regs)
 {
-	struct cxl_register_map *map = &dport->reg_map;
-	struct device *dev = dport->dport_dev;
-
 	if (!map->component_map.ras.valid)
 		dev_dbg(dev, "RAS registers not found\n");
-	else if (cxl_map_component_regs(map, &dport->regs.component,
+	else if (regs->ras)
+		dev_dbg(dev, "RAS registers already initialized\n");
+	else if (cxl_map_component_regs(map, &regs->component,
 					BIT(CXL_CM_CAP_CAP_ID_RAS)))
 		dev_dbg(dev, "Failed to map RAS capability.\n");
+}
+
+static void cxl_dport_map_regs(struct cxl_dport *dport)
+{
+	struct cxl_register_map *map = &dport->reg_map;
+	struct cxl_regs *regs = &dport->regs;
+	struct device *dev = dport->dport_dev;
+
+	cxl_port_map_regs(dev, map, regs);
 
 	if (dport->rch)
 		cxl_dport_map_rch_aer(dport);
@@ -831,6 +841,16 @@ static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
 	}
 }
 
+void cxl_setup_parent_uport(struct device *host, struct cxl_port *port)
+{
+	struct cxl_register_map *map = &port->reg_map;
+	struct cxl_regs *regs = &port->regs;
+	struct device *uport_dev = port->uport_dev;
+
+	cxl_port_map_regs(uport_dev, map, regs);
+}
+EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_uport, CXL);
+
 void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport)
 {
 	struct device *dport_dev = dport->dport_dev;
diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
index 036d17db68e0..7cee678fdb75 100644
--- a/drivers/cxl/cxl.h
+++ b/drivers/cxl/cxl.h
@@ -587,6 +587,7 @@ struct cxl_dax_region {
  * @parent_dport: dport that points to this port in the parent
  * @decoder_ida: allocator for decoder ids
  * @reg_map: component and ras register mapping parameters
+ * @regs: mapped component registers
  * @nr_dports: number of entries in @dports
  * @hdm_end: track last allocated HDM decoder instance for allocation ordering
  * @commit_end: cursor to track highest committed decoder for commit ordering
@@ -607,6 +608,7 @@ struct cxl_port {
 	struct cxl_dport *parent_dport;
 	struct ida decoder_ida;
 	struct cxl_register_map reg_map;
+	struct cxl_regs regs;
 	int nr_dports;
 	int hdm_end;
 	int commit_end;
@@ -757,9 +759,12 @@ struct cxl_dport *devm_cxl_add_rch_dport(struct cxl_port *port,
 
 #ifdef CONFIG_PCIEAER_CXL
 void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport);
+void cxl_setup_parent_uport(struct device *host, struct cxl_port *port);
 #else
 static inline void cxl_setup_parent_dport(struct device *host,
 					  struct cxl_dport *dport) { }
+static inline void cxl_setup_parent_uport(struct device *host,
+					  struct cxl_port *port) { }
 #endif
 
 struct cxl_decoder *to_cxl_decoder(struct device *dev);
diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
index 0c79d9ce877c..51a4641fc9a6 100644
--- a/drivers/cxl/mem.c
+++ b/drivers/cxl/mem.c
@@ -45,10 +45,39 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
 	return 0;
 }
 
+static bool cxl_dev_is_pci_type(struct device *dev, u32 pcie_type)
+{
+	struct pci_dev *pdev;
+
+	if (!dev_is_pci(dev))
+		return false;
+
+	pdev = to_pci_dev(dev);
+	if (pci_pcie_type(pdev) != pcie_type)
+		return false;
+
+	return pci_find_dvsec_capability(pdev, PCI_DVSEC_VENDOR_ID_CXL,
+					 CXL_DVSEC_REG_LOCATOR);
+}
+
+static void cxl_setup_ep_parent_ports(struct cxl_ep *ep, struct device *host)
+{
+	struct cxl_dport *dport = ep->dport;
+
+	if (cxl_dev_is_pci_type(dport->dport_dev, PCI_EXP_TYPE_DOWNSTREAM) ||
+	    cxl_dev_is_pci_type(dport->dport_dev, PCI_EXP_TYPE_ROOT_PORT))
+		cxl_setup_parent_dport(host, ep->dport);
+
+	if (cxl_dev_is_pci_type(dport->port->uport_dev, PCI_EXP_TYPE_UPSTREAM))
+		cxl_setup_parent_uport(host, ep->dport->port);
+}
+
 static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
 				 struct cxl_dport *parent_dport)
 {
 	struct cxl_port *parent_port = parent_dport->port;
+	struct cxl_dev_state *cxlds = cxlmd->cxlds;
+	struct pci_dev *pdev = to_pci_dev(cxlds->dev);
 	struct cxl_port *endpoint, *iter, *down;
 	int rc;
 
@@ -62,6 +91,7 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
 
 		ep = cxl_ep_load(iter, cxlmd);
 		ep->next = down;
+		cxl_setup_ep_parent_ports(ep, &pdev->dev);
 	}
 
 	/* Note: endpoint port component registers are derived from @cxlds */
@@ -157,8 +187,6 @@ static int cxl_mem_probe(struct device *dev)
 	else
 		endpoint_parent = &parent_port->dev;
 
-	cxl_setup_parent_dport(dev, dport);
-
 	device_lock(endpoint_parent);
 	if (!endpoint_parent->driver) {
 		dev_err(dev, "CXL port topology %s not enabled\n",
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-BN1-obe.outbound.protection.outlook.com (mail-bn1nam02on2041.outbound.protection.outlook.com [40.107.212.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id DD76718F2DD;
	Mon, 17 Jun 2024 20:05:08 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.212.41
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718654710; cv=fail; b=KQEZqOVMEEa8jCbi4kMIws1rwUEqEgrMHL365VFkFEYRF1MBgwGKMJ4grLGmVbf2GUVYymC0sKQJvKDRpf+AJMsbPbejO5pRefcqd1wC8TQOdmaz5W6ibw/NuIFTvDtyMP953/Hi6xGb9zRXr0GrSuW6mwGHFVR7MBT3hY7bm20=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718654710; c=relaxed/simple;
	bh=bGWHOWnYdZzpBnr1Ho0/KSj4cSY2AxW0AZjSa8HiLzI=;
	h=From:To:CC:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=OQxfSbPOdqV5LzbFnMjcCtFPvb4AZ9J06qjZuACUK1CZahjHu0Xtf0+asl+YJzapmEAcw9k9F3uy4CQ4sgqU+kgcYT//Cg2MTELA+PC+AgmW8Xtm1s8ItcT9u/4ywQIWUlT9uMUmi8f1PY55A6dARHuJuo1rdsxsvzL+817YYt4=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=4wFUsUeP; arc=fail smtp.client-ip=40.107.212.41
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="4wFUsUeP"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=CYi0YiiHkv3zCdAWXahIjWdsBCbm1K5b3U446CuY5OmwIPl3/IUeazr16/ZSkcR3P947Hfv8GlPXJLulBFM6DYRnmLtVB2yVrCs3Q4aGOvrk2lJG8meHiM/BwOWrBbY7an5aNjnY/SvR7NzKKV+lTcG3DBYKBNMWYTbAqPD1v467WUIonkjTvCuswxxMirlAx+m7fY6sN63BwIVUa/BJmIZx+BTvzQNIwQPtEoHQsgz+DKapeCOl/EsPqTDQjZpzlQp1SAWCj4kxszIQJ4tGDUXYrcL6vFfG8+Z4R+xn35MX5qg33Ob/YRSvmDiFVdaiy/q/LHWs66zr/rov9cQlTA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=Xh49tAef+SQQ7oq6oMN+78JJGbyZNM8nnh0QiqIgiMs=;
 b=UN4IrlvJ8VNtu0379SJacnmhJzQBXiV1Rq1CHiSS3ee86KprkNSveE+H6nsawsTlec7BoNvinkBpNg9DuVJhqlEix566BtTNJCbVvxfivwFVv0KnRDv7mcUuoKvpUED0CQYtcS8IdvXSIQb5m9qbIGO4TaUP4hn2iz0rXb32FL6PrG4GwiXZGPaWsZ4QwgZiecKu3F7UTkmNrURrB9f38mjnMtlvs75+0oCDfV51RnltXVEt+f894hiQPF5eQaq1nrbv1LCj5P2YRqamBpk6m2V/gNvUYZ/DnX4Z+gIU9TsGldaE/e/RPQ2xOMILQOvuI2J7KiT3dcP4J1OUDZTR+Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Xh49tAef+SQQ7oq6oMN+78JJGbyZNM8nnh0QiqIgiMs=;
 b=4wFUsUePTWr6D8TCIrtXC3tkx66R/ZrfOWff52SLloAkXl4d3PdgS2JmvnPVx/T2c9p8q2IOGYOjbEL3O9sKvN6pIiw0HpEWd6wVH6RXu8B293nJNtv3gs158ZREFin3BawWCy36enKNJZ/tIasMsLPNMXohGZmjS73JYji8y/E=
Received: from MW4PR03CA0104.namprd03.prod.outlook.com (2603:10b6:303:b7::19)
 by DS0PR12MB8294.namprd12.prod.outlook.com (2603:10b6:8:f4::16) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30; Mon, 17 Jun
 2024 20:04:59 +0000
Received: from CO1PEPF000066E8.namprd05.prod.outlook.com
 (2603:10b6:303:b7:cafe::23) by MW4PR03CA0104.outlook.office365.com
 (2603:10b6:303:b7::19) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30 via Frontend
 Transport; Mon, 17 Jun 2024 20:04:59 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000066E8.mail.protection.outlook.com (10.167.249.6) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.7677.15 via Frontend Transport; Mon, 17 Jun 2024 20:04:58 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 17 Jun
 2024 15:04:56 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <terry.bowman@amd.com>,
	<Yazen.Ghannam@amd.com>, <Robert.Richter@amd.com>
CC: Bjorn Helgaas <bhelgaas@google.com>, <linux-pci@vger.kernel.org>
Subject: [RFC PATCH 3/9] PCI/portdrv: Update portdrv with an atomic notifier for reporting AER internal errors
Date: Mon, 17 Jun 2024 15:04:05 -0500
Message-ID: <20240617200411.1426554-4-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000066E8:EE_|DS0PR12MB8294:EE_
X-MS-Office365-Filtering-Correlation-Id: a44170a4-087f-413c-cbfa-08dc8f08c380
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|376011|7416011|82310400023|36860700010|1800799021|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?oYjPdXbLzUKiFcskX3EkWEhXU+QEBOBXmy3M3SINpgwxQOC3nclBJUtJQuBE?=
 =?us-ascii?Q?j5TVpRQPXc32SSlDPGjJLQmgtJWOZVQmOwEgBaohg1NAYMwA9JJJUCBlIxGK?=
 =?us-ascii?Q?rbWFB8B1ZoL0x/JTQQQ/SWb/7Q2cpWEzu1QiXMO4Q4Dl9L02vQ5bQRw/kwyc?=
 =?us-ascii?Q?Ltwh3W6vgrnanKE5r9rReIzRBnkf5eD3pzRoiCTkXJ3sQPknU4S2zYSnJjLb?=
 =?us-ascii?Q?8iQY0k6IeCGD6dxDl3a7znicXrRcUiEfLmodK5d11e27fQSnKYhiSoUijVU7?=
 =?us-ascii?Q?4c2xfJ8s7zyh5y44LTV0GenTv5TPDBTIsjS/pHKqJM0nYJwavXEZOWJS88xA?=
 =?us-ascii?Q?0SzBW6qDBVdtfzcmOJbpi6tdT702hG2Nvs0aGlzk6iUHSvB3glkBUpvvOvM+?=
 =?us-ascii?Q?ZbvRTjy4oL1Upn+g3RHvdAzvAkBdmYATA2sXVdBb+6/v0Uh8uTQMAf4nXroM?=
 =?us-ascii?Q?UtMkmy35Ma1NSqAtDmA79ksedHZyhz69MWGeF4EZupgUANNpuJgylAPnaprs?=
 =?us-ascii?Q?eVu8g70W5OrZxaBPorbKiinrfXfySHC7B/LJ/n7R+N2K2nkb2nU+IqjRmmRi?=
 =?us-ascii?Q?coiqN7y78ZEFXTXeLqFgyZlxeHAMyddzfwH54OkIsnT4wuHxxlDNpbeMJSmG?=
 =?us-ascii?Q?Ph6Imua29EXqdc58klOKBb2DrjM7ae/1w3M9hWV2flqIDJu5+1yoU0cS/+3E?=
 =?us-ascii?Q?+1rgKWZi7dFeTSR0c2hpC2uY4A+JbvDW+WqCZqSmtNiHivwjvASFv/PKDiO6?=
 =?us-ascii?Q?pYH0uX5qIRB34Wrqry6j38QS53jU0+yEQrW2BJBiR5RSMVZY9bknMnsgQF6w?=
 =?us-ascii?Q?9pC06rsUG1PbuWGNWswHIvIrxt1pH013Trnfkgz+4Xxr32JO/bBP3S3d9hnJ?=
 =?us-ascii?Q?kSwUcTLatGpXySEF6I9dLNLmDT6WFNUV1dVx92OF3Hq+4d+mSfv1Cwgkq37r?=
 =?us-ascii?Q?R3UEtfkWbShwHDW8nMvNi3LAZXFMRXwvfTvNcQFLA/Kvt6nHdDyBCVpm6xa+?=
 =?us-ascii?Q?ovrGr8Jyjh5VRI6leE8QWq0NvipBHshIGdwj/4nuKwVfUq1MZ5MqGi2JX1Cc?=
 =?us-ascii?Q?UoDtB3D2J5kfg+VacMtDwJ3NjKk817pbkWFc0KqYO3ex+9K802kSiNB+xvi7?=
 =?us-ascii?Q?U089hK1gxNSvDcTzXPSse9bQn5fUdYnD2OHuFAen7xMUkHD4MaLVjDc5H4V8?=
 =?us-ascii?Q?G0y6VxMp7l2ybfFBRbkWIn72zzT+qX6w7hR2cNnFJWQFUg7tYFHipvTcX+jQ?=
 =?us-ascii?Q?oKRsv9/qdT7a5xZ1Jp4mAdkRCA439DweaUa55HFvtPYEVg0I9PRaRRfBoEWE?=
 =?us-ascii?Q?AboHHagvpMAvH3SodyfiLJVhewNnRSt+7hCjFO3uG3rSHePxG+nqlnLdzNEa?=
 =?us-ascii?Q?qSPolxqWUgtM/7Y3RFEs3k7mnZdO8zx4ziYtM9N9YSmcE7PeCHORbY8jhPdO?=
 =?us-ascii?Q?IU9Ex0diF/o=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230037)(376011)(7416011)(82310400023)(36860700010)(1800799021)(921017);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Jun 2024 20:04:58.0713
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: a44170a4-087f-413c-cbfa-08dc8f08c380
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000066E8.namprd05.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS0PR12MB8294

PCIe port devices are bound to portdrv, the PCIe port bus driver. portdrv
does not implement an AER correctable handler (CE) but does implement the
AER uncorrectable error (UCE). The UCE handler is fairly straightforward
in that it only checks for frozen error state and returns the next step
for recovery accordingly.

As a result, port devices relying on AER correctable internal errors (CIE)
and AER uncorrectable internal errors (UIE) will not be handled. Note,
the PCIe spec indicates AER CIE/UIE can be used to report implementation
specific errors.[1]

CXL root ports, CXL downstream switch ports, and CXL upstream switch ports
are examples of devices using the AER CIE/UIE for implementation specific
purposes. These CXL ports use the AER interrupt and AER CIE/UIE status to
report CXL RAS errors.[2]

Add an atomic notifier to portdrv's CE/UCE handlers. Use the atomic
notifier to report CIE/UIE errors to the registered functions. This will
require adding a CE handler and updating the existing UCE handler.

For the UCE handler, the CXL spec states UIE errors should return need
reset: "The only method of recovering from an Uncorrectable Internal Error
is reset or hardware replacement."[1]

[1] PCI6.0 - 6.2.10 Internal Errors
[2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
             Upstream Switch Ports

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Cc: Bjorn Helgaas <bhelgaas@google.com>
Cc: linux-pci@vger.kernel.org
---
 drivers/pci/pcie/portdrv.c | 32 ++++++++++++++++++++++++++++++++
 drivers/pci/pcie/portdrv.h |  2 ++
 2 files changed, 34 insertions(+)

diff --git a/drivers/pci/pcie/portdrv.c b/drivers/pci/pcie/portdrv.c
index 14a4b89a3b83..86d80e0e9606 100644
--- a/drivers/pci/pcie/portdrv.c
+++ b/drivers/pci/pcie/portdrv.c
@@ -37,6 +37,9 @@ struct portdrv_service_data {
 	u32 service;
 };
 
+ATOMIC_NOTIFIER_HEAD(portdrv_aer_internal_err_chain);
+EXPORT_SYMBOL_GPL(portdrv_aer_internal_err_chain);
+
 /**
  * release_pcie_device - free PCI Express port service device structure
  * @dev: Port service device to release
@@ -745,11 +748,39 @@ static void pcie_portdrv_shutdown(struct pci_dev *dev)
 static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *dev,
 					pci_channel_state_t error)
 {
+	if (dev->aer_cap) {
+		u32 status;
+
+		pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_UNCOR_STATUS,
+				      &status);
+
+		if (status & PCI_ERR_UNC_INTN) {
+			atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
+						   AER_FATAL, (void *)dev);
+			return PCI_ERS_RESULT_NEED_RESET;
+		}
+	}
+
 	if (error == pci_channel_io_frozen)
 		return PCI_ERS_RESULT_NEED_RESET;
 	return PCI_ERS_RESULT_CAN_RECOVER;
 }
 
+static void pcie_portdrv_cor_error_detected(struct pci_dev *dev)
+{
+	u32 status;
+
+	if (!dev->aer_cap)
+		return;
+
+	pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_COR_STATUS,
+			      &status);
+
+	if (status & PCI_ERR_COR_INTERNAL)
+		atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
+					   AER_CORRECTABLE, (void *)dev);
+}
+
 static pci_ers_result_t pcie_portdrv_slot_reset(struct pci_dev *dev)
 {
 	size_t off = offsetof(struct pcie_port_service_driver, slot_reset);
@@ -780,6 +811,7 @@ static const struct pci_device_id port_pci_ids[] = {
 
 static const struct pci_error_handlers pcie_portdrv_err_handler = {
 	.error_detected = pcie_portdrv_error_detected,
+	.cor_error_detected = pcie_portdrv_cor_error_detected,
 	.slot_reset = pcie_portdrv_slot_reset,
 	.mmio_enabled = pcie_portdrv_mmio_enabled,
 };
diff --git a/drivers/pci/pcie/portdrv.h b/drivers/pci/pcie/portdrv.h
index 12c89ea0313b..8a39197f0203 100644
--- a/drivers/pci/pcie/portdrv.h
+++ b/drivers/pci/pcie/portdrv.h
@@ -121,4 +121,6 @@ static inline void pcie_pme_interrupt_enable(struct pci_dev *dev, bool en) {}
 #endif /* !CONFIG_PCIE_PME */
 
 struct device *pcie_port_find_device(struct pci_dev *dev, u32 service);
+
+extern struct atomic_notifier_head portdrv_aer_internal_err_chain;
 #endif /* _PORTDRV_H_ */
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-BN8-obe.outbound.protection.outlook.com (mail-bn8nam11on2042.outbound.protection.outlook.com [40.107.236.42])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 6F9BE18F2DD;
	Mon, 17 Jun 2024 20:04:55 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.236.42
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718654698; cv=fail; b=IgM5TctwvPex0KmFJXp61y2vgW26AWeiFjIfpu4zbozGpEFieGzFjcWZgCLDICh2ATrmFPtG1lSovfdTM46ycU0eyWkC06I75eqmP6Tna03XryXej9VIny2kPqH/QhVBluVKoGJM9rasyUxZ1VAzzLRuuX41Ti4AxxOsebcbptE=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718654698; c=relaxed/simple;
	bh=I8YbldKXiWn3t7cWyoVjtC8qAgtObcRa6GNqAbqkigU=;
	h=From:To:CC:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=FGH+mqHFd5W/T26BrRUoRixbqzFA1Hhs/crZSNPl+P7dQ8htPinaM8hHgCy26flmkwyPtPJiLWdNL2VaAB3kOxopt19cvMfBGgLWlWWVk6rCp1xzAHtiJ7wP7Coi/H7m3KbQhatn1uGwKOpOTO4SOKAzrm8/pOWescS1S/et3wo=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=0E4gTj28; arc=fail smtp.client-ip=40.107.236.42
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="0E4gTj28"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=kdHzhDwX9JjzvRCfPPwKASHLHHnJaJll5jUVYTy0186W65yhAMlUdkmZwLNPnUm6nsn4f+EaCj85zRbyHtKX1acmCS9MBRmxb8S08Mgxry337sUmeTtMrNFY/qnDwfMgTgRj0B/wSsIowbE+v6956FcnWOtxGDRsuqfKB35bTyS6ccyyrHFGcQ9GKwPCRf6OSPltpF7tqHUfaTYklVkga4/7Vm/ZmKp/hAU8XQOSZwIjE2M0UUghhQ1jpiQHgp1bFfX+wiGxmiQeQgzZ/LwHsNKLu2PVMuD4r1U9qzq4W7XkwSCYoAWxFgmYHjjXea2NLdIcSzvdFfeNz83FgY4f/A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=fMRJJqWCuuwDTeuS9t112XMcqjKsFD0n0c+Z5H69HRk=;
 b=oBVH8SfGvbFnWc0Z18tV/VLK/fkJerzeWyM6iwT6YR3dLUxtcqTz+wD+Qz88R6kZH6SMMubLQ354J5Dmtj8vpQ6OItWNXV24s3WSP500TXVrB1ucfOb/9VXhO55N+xTYfiOd4vxpeeBYOYjIe092EodEZVdNq81Xng/tVli/fFLG/weSoTfCJARi2jH8MhcONygF81zLbFWMWGKNzkO4WZJN7faEN90yMJWqDIn9BBfPr+OunbRlcGnrQ4n1mBLfhNPR0oX0ehtMH32VCpbBsqRIkixAB/sh4k2+TZT7isOqefG8y+41PDOTM4p24L9SHTCviLyCnEJzlHLnOZT/QA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=fMRJJqWCuuwDTeuS9t112XMcqjKsFD0n0c+Z5H69HRk=;
 b=0E4gTj28KMUTwGXAov1VZvfzuqSiakzVjWK17za3/R4GJud46CA9E5deQO2UXzCaWFWB4djwlhI1EaWc+1dVnu3V5/cqLBtHKK0Tv9/bRGgv3SluG/gjxuygLT3+Dk8gunBWZ2/kC/ZnybBoZw0kx3gDn4jYwtdMBQgwXXK73RI=
Received: from BYAPR04CA0029.namprd04.prod.outlook.com (2603:10b6:a03:40::42)
 by MW4PR12MB6949.namprd12.prod.outlook.com (2603:10b6:303:208::19) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.31; Mon, 17 Jun
 2024 20:04:50 +0000
Received: from CO1PEPF000066E6.namprd05.prod.outlook.com
 (2603:10b6:a03:40:cafe::85) by BYAPR04CA0029.outlook.office365.com
 (2603:10b6:a03:40::42) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.31 via Frontend
 Transport; Mon, 17 Jun 2024 20:04:50 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000066E6.mail.protection.outlook.com (10.167.249.4) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.7677.15 via Frontend Transport; Mon, 17 Jun 2024 20:04:50 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 17 Jun
 2024 15:04:45 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <terry.bowman@amd.com>,
	<Yazen.Ghannam@amd.com>, <Robert.Richter@amd.com>
CC: Bjorn Helgaas <bhelgaas@google.com>, <linux-pci@vger.kernel.org>
Subject: [RFC PATCH 2/9] PCI/AER: Call AER CE handler before clearing AER CE status register
Date: Mon, 17 Jun 2024 15:04:04 -0500
Message-ID: <20240617200411.1426554-3-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000066E6:EE_|MW4PR12MB6949:EE_
X-MS-Office365-Filtering-Correlation-Id: eefab12b-fdee-46f4-7899-08dc8f08beb4
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|36860700010|376011|7416011|1800799021|82310400023|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?rLfLrvpUkQ1LPlFMrydcq6bAEdhRwrm8FZVITc63Uo3eqzQcHDnU++AHtMDY?=
 =?us-ascii?Q?bKMz5lqfuimZQThzc/cUU+hQtVYDPH5d8P7S70aGadhOEmkLA2miDkCFx3DC?=
 =?us-ascii?Q?Rc8BP5/dD2xKTJJ0e1GfERDh/nFtW4AJc4F6M3GkeKKfOZM6yiincQ9rylVA?=
 =?us-ascii?Q?Ugt47WvNYxhevJkS9C3i3qSPMHg/GZlMR/gqGy8EtRcHVZlTGrtxXbZLHJb9?=
 =?us-ascii?Q?bWE2qvIykM2NGmgmX/whFY1pW2mVZsetC0TmSpwnLT59K+v3ROr+bTEgOJoP?=
 =?us-ascii?Q?NcVR150f5ijcLFTi6AEZX6UCJ9bQB+8S5x7l+QXJegfedpUBm4yiJMymz5um?=
 =?us-ascii?Q?I4LlBhUZy+2Td7PSDlLkzPudazBYKvoegofTg0yJI1+z0BOxGyoqXtt/RJVj?=
 =?us-ascii?Q?xysV6XGss5TG87cmCvphA6Z0nkC6n3/bQQ8OSkegsWpe4ZAEnJpWeuMSoTJL?=
 =?us-ascii?Q?pZWiPaVggY2172uMyl7RbK3qVd5Gqb/Bn0s8mrGfXGrnVlPp8OKIXzknVpu7?=
 =?us-ascii?Q?u8qlbK8+wDAgMM1MBzUNt83tbC5j5EfSdjvTb43rh944BCJgQh7+Os4buVzb?=
 =?us-ascii?Q?rQ8n2J1jChPfJiCJwGtz88E5i5VhOCpz9wiQmWAOPeYKNmhwyF6xeAfuNNuL?=
 =?us-ascii?Q?D0yBtxhmAi8wJdYTseCWFf5GoF7odCKUdKj7EEzrWlX3Kcc9Zg1erF5Schtc?=
 =?us-ascii?Q?f5V3kHvENzVo+vB6k249cf99TzhO07y4maywvz9a1HrAXcmlTKhY3iJnVN6M?=
 =?us-ascii?Q?fld8UA4UrQeVoZAl2iJWqmK6B6LxA9EpexKCPm3vHXkgIt8VQ89qlUiCxgEw?=
 =?us-ascii?Q?3le0VxmUJuQXexRsngi/SU7kMD4oLe7nGy69myQloG9WcjYZ/qFFAz2rnLX7?=
 =?us-ascii?Q?oksRyx2TEBM+zabN0AMBKLmCqIn2LZeZnEe3AVw8hOZIK3OUEginKVDV0u8A?=
 =?us-ascii?Q?NcQdWbqH4m3F0ENv1nMeLCvm/gQvQgzqfFbcvMWxnHBHIuITIISDrl5IMn8Q?=
 =?us-ascii?Q?0unMiq1/Sn3wY5lzIEG13CNm0yM3mEq7vYq/Ce8lsDYChUCdi0fDxCzar4fw?=
 =?us-ascii?Q?wpURbOhdxM/v4PO7h4h7EYxSU6bZk20BrO3yzdNNFxR8nbDKFGcBD2cpIJJe?=
 =?us-ascii?Q?jmGpchVl2e2ebJayPWOChLLJbpBShFpeti8bvARW0Uyco9n7J9LJ+Qrds/7G?=
 =?us-ascii?Q?nKraQDQfYirw7vOPZKGSSqGGSYLt3S6HuOYZQ8hCtsKtHp2LkHQtkq+NIQHV?=
 =?us-ascii?Q?PbHkusrjo/zafCZMDtE6aM6x7m+6FnchiiVFrARaehS4I5+FsRmH4yHANnv7?=
 =?us-ascii?Q?ipt89xj7+OUtKEE6OxLS6qnKLyJaSugzGhat9gzJCJyGMhBUq5OiQ2feq35h?=
 =?us-ascii?Q?tJwXmxRHYst4Kq+zhn69I5g0VywfGdbsxm424Vp07c9k6qw3rusUWJRmvEm8?=
 =?us-ascii?Q?EZH/H14S2sg=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230037)(36860700010)(376011)(7416011)(1800799021)(82310400023)(921017);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Jun 2024 20:04:50.0057
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: eefab12b-fdee-46f4-7899-08dc8f08beb4
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000066E6.namprd05.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MW4PR12MB6949

The AER service driver clears the AER correctable error (CE) status before
calling the correctable error handler. This results in the error's status
not correctly reflected if read from the CE handler.

The AER CE status is needed by the portdrv's CE handler. The portdrv's
CE handler is intended to only call the registered notifier callbacks
if the CE error status has correctable internal error (CIE) set.

This is not a problem for AER uncorrrectbale errors (UCE). The UCE status
is still present in the AER capability and available for reading, if
needed, when the UCE handler is called.

Change the order of clearing the CE status and calling the CE handler.
Make it to call the CE handler first and then clear the CE status
after returning.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Cc: Bjorn Helgaas <bhelgaas@google.com>
Cc: linux-pci@vger.kernel.org
---
 drivers/pci/pcie/aer.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
index ac6293c24976..4dc03cb9aff0 100644
--- a/drivers/pci/pcie/aer.c
+++ b/drivers/pci/pcie/aer.c
@@ -1094,9 +1094,6 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
 		 * Correctable error does not need software intervention.
 		 * No need to go through error recovery process.
 		 */
-		if (aer)
-			pci_write_config_dword(dev, aer + PCI_ERR_COR_STATUS,
-					info->status);
 		if (pcie_aer_is_native(dev)) {
 			struct pci_driver *pdrv = dev->driver;
 
@@ -1105,6 +1102,10 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
 				pdrv->err_handler->cor_error_detected(dev);
 			pcie_clear_device_status(dev);
 		}
+		if (aer)
+			pci_write_config_dword(dev, aer + PCI_ERR_COR_STATUS,
+					info->status);
+
 	} else if (info->severity == AER_NONFATAL)
 		pcie_do_recovery(dev, pci_channel_io_normal, aer_root_reset);
 	else if (info->severity == AER_FATAL)
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-BN7-obe.outbound.protection.outlook.com (mail-bn7nam10on2077.outbound.protection.outlook.com [40.107.92.77])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9DE1EE542;
	Mon, 17 Jun 2024 20:04:39 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.92.77
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718654681; cv=fail; b=FExAF3cMRij72Z+/CoQ2NgcQz/cQ8AzDmRqyg5rqbqp+FxHqz5CnJgLMwI1jOM1UlYHmVgrXqssAB/irdPyiHl/1Z/j+t9PbB4KssTAiGEKoCdK4YHxehhKZ/2Nn40/w8y8ySsD2qJt6SukGlo0DVYshvo+rwJbFvJ9va5142MM=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718654681; c=relaxed/simple;
	bh=iIiWo71BMYN6t41ECHNmO95zl1J+plKfADdgKrkqbuM=;
	h=From:To:CC:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=gpGCtPDOZW9iP/dym/ROaF9go8Pix+nB/BMqFBPUCFQ4b00cpmcxxa5PKUD7Qraho0qI2PeSY/EsqvClscSclNM/LdzBbgk1sc/F2QxmmKHbplfVwJ76on15pbuwFcLK9LGMfPJ0suhBpZt5KX3oh9nA7pMZjx1QnzwyOpJRHnw=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=d+4hLdFp; arc=fail smtp.client-ip=40.107.92.77
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="d+4hLdFp"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=nOhHJqwMb96627X8NvtgHGqBETDBZXsBbO6wOvCDaIiER5kzdDPmTs0DF6fmf6/h5G8HQJ4IY1agFbhzyvLPX7WOgXU1ngNPLB7chlv3Fht1R+Sq4B6eTpSFvVgTgGEvPsu4aTCsvdXnxWj36DBjs63C+x+boAKmX/xvGN3xquFX9adh3f6loQdHgZBn9mKRZ/UIs9+en9lvsPh0Nt9nP6epXE7ngsLj4RYh92BrV4570lO4ZduObObU2+CcFjE8NXlYWyXwQCoC+QVQaTs19rTYq1LtLg6O0OHIL6ozTe49TkhM3b5br1SE/5EactitH0JEVu5YOLymAxw0r3wj7w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=l7tuKWOBSNUKoTf6tuLn8VCStoGfSAplcLpQhO77+xE=;
 b=A6CAPtmCz3/WgNYe/fPU0G4UQabrYa9rgnJNrA9AKiMRt0fYP7fR4MWLxprvsebby/c16GgZx7kaTA3DljsXuy+0zeMO/s+01/cEh+UsgDo1eZ0oH6qjotWF0X2bQwAp7ATdl/h1Y1wG015sbPNHRDBch7TC6NjtjQ/m5UuMmzZmgR3KBp3Hyvbg2PI3GdGLTCDRfoWpqRe33A/rErPGY4XKSpO3DSigOYQ2gVpdday3gOVesO20wT0N676wXgvayyV4iVXnp4l7jj5QUm9aKTvBXxVzlIByN4sEyQAXMfi8YpTJg+AwK3Hb9TI8oNlqUYXKQJYAfRrhAviJpSzY5Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=l7tuKWOBSNUKoTf6tuLn8VCStoGfSAplcLpQhO77+xE=;
 b=d+4hLdFpZpRa3vEUPtNqjrmMhWOFS7ImTJffyE/zcLWnDIB9AlkLra4Lod/EWboTvraJ5Ox2iTfbYwjFiwo5rEyoF1KghpkDZsNQ/rYOLIQiZ+Z2GAFtAtxIez7acwL2634/bCl/uoNwZKtpq8IdMCr/057lzRZ99LHSvqMfUxM=
Received: from SJ0PR03CA0001.namprd03.prod.outlook.com (2603:10b6:a03:33a::6)
 by DS0PR12MB7771.namprd12.prod.outlook.com (2603:10b6:8:138::6) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30; Mon, 17 Jun
 2024 20:04:36 +0000
Received: from CO1PEPF000044F3.namprd05.prod.outlook.com
 (2603:10b6:a03:33a:cafe::aa) by SJ0PR03CA0001.outlook.office365.com
 (2603:10b6:a03:33a::6) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30 via Frontend
 Transport; Mon, 17 Jun 2024 20:04:36 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044F3.mail.protection.outlook.com (10.167.241.73) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.7677.15 via Frontend Transport; Mon, 17 Jun 2024 20:04:35 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 17 Jun
 2024 15:04:34 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <terry.bowman@amd.com>,
	<Yazen.Ghannam@amd.com>, <Robert.Richter@amd.com>
CC: Bjorn Helgaas <bhelgaas@google.com>, <linux-pci@vger.kernel.org>
Subject: [RFC PATCH 1/9] PCI/AER: Update AER driver to call root port and downstream port UCE handlers
Date: Mon, 17 Jun 2024 15:04:03 -0500
Message-ID: <20240617200411.1426554-2-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20240617200411.1426554-1-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044F3:EE_|DS0PR12MB7771:EE_
X-MS-Office365-Filtering-Correlation-Id: e58444e7-03bc-45b9-5c50-08dc8f08b63a
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|376011|7416011|36860700010|1800799021|82310400023|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?iD7a1SFXbbi2gOuYIOFa8M/2RtMT0ZA2kuz2Qo5SnypwJZ8/SeCtucrZU02o?=
 =?us-ascii?Q?twHs057ziJLqLqevlYrCdW40mlvCFaxOEBTSAk7ScW8IPM7f66dtvPsHkhdE?=
 =?us-ascii?Q?nQ6/YFXV7tXgLwbr/Z7S1nOF582w3o/PEGY20GsBaHjQUrVmd8H94cyaclbL?=
 =?us-ascii?Q?gbdSMa3aP2lBMqkTx9vkKmRV5hpf/bmbLii+dCSZiD+q68pa+KWbNU8UHTgD?=
 =?us-ascii?Q?bPy0NucOSGLl8zygA/Ao1FVSmT7a37NpHudwXF7NeFDd5GYNXfVWnAm/PDSC?=
 =?us-ascii?Q?GynsEf0jCwGRAHpGUOzAqYzjkP/dCShK2ygxdKksHOri2QpWJEkdo3w8yJIZ?=
 =?us-ascii?Q?Rj5KEOD2dDzKpyUtcPBuKrZNWSMgV3dJKnyuzMpMsppYi8rjL7fD3comybDz?=
 =?us-ascii?Q?ecC3Idp9jvL6E9VtmI0KMxoA9vpOMCCIYz9Zbb0J2KVfpJnJSJ5crmTkV5x9?=
 =?us-ascii?Q?nMReVh4l8OZn0izMwHqUyJ6AYfMkdvLiaalld9/p47SUidWgXhWsMlFYzKCM?=
 =?us-ascii?Q?0uGNJ67PYxbiR2GFDg0U751OSGerRSJXLcQ9qUzlrKZvgirk0JhJ9nsxuQe5?=
 =?us-ascii?Q?cXhP595JCPHRcfD32D4ecFp24Xs4QRQvaUZ3wqX3AM03nrBNDQ7VgfLpcLje?=
 =?us-ascii?Q?AnArWkx/SSSzbzuEf6FmcPmWWOo+NdGEH5R0mnYq7k02JMYyZqch32WH7oJr?=
 =?us-ascii?Q?380qgO4wQcA593PUWfywyZ783uSaD0CL4BR6oRl3CCAft/ZVaIu5Kl8cuKen?=
 =?us-ascii?Q?9HuGLIjvGG6P9lJVBA0EevJj7v0eUcLQIvzVB5DT4wt5om399jTyV7upkud7?=
 =?us-ascii?Q?0E9bztB5kQ5SoO0WRY697pNwd+Z+wAdbbuVN4iZucpO/FCsetG8/YfF6HOxx?=
 =?us-ascii?Q?/QIJpUQuohjguxvRMXvRDgvYgAziGoGuMPzK1xD5NF5lcLh0cVktYRwMEFjg?=
 =?us-ascii?Q?Q1mrzSPKg5ErSamesw1pkfNJ9ghWsAE2/5TFXLqyynqLPam+//dL12oOaDSa?=
 =?us-ascii?Q?04x1V8YMM90FHH+sUps3th5z+9tweTocmfNUk3Oay+ZUFUTEBoSLsj5AYZmA?=
 =?us-ascii?Q?AlQTU56w57w/1nDkz3z7GmxZ1NSkwHOCgf7o5bQU0Tn1AW9PDzz6DKZpP2Fl?=
 =?us-ascii?Q?HJbQwEI0qi93uMELyEJlPZYHHgms0lpwLIVpRrhWZQb+XpDWVzPSdwbZI4bU?=
 =?us-ascii?Q?+iKz032F7pW6xA9BSbz4lDXMWu9M10N5N/t6/BJpMmBDzF9Ffk8ru1XxyiYl?=
 =?us-ascii?Q?zSmIssmOCV593QjudLASMhwcpImZ7EPodmuaCqrSZ2CPS3q52sAL4yy0MaUJ?=
 =?us-ascii?Q?jCVIHR+EE4XEc5S2IeMRp4y/h+E/rF3yXfpszv2mXLEuJ3OYX6CTwrAmka+w?=
 =?us-ascii?Q?OZOhPiKRyimH1hKlg5mOE2w0un0rtPWoZy+6dXFrHF8kCfU1uKvpVNIzfUhF?=
 =?us-ascii?Q?2TixJoRnKno=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230037)(376011)(7416011)(36860700010)(1800799021)(82310400023)(921017);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Jun 2024 20:04:35.7993
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: e58444e7-03bc-45b9-5c50-08dc8f08b63a
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044F3.namprd05.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS0PR12MB7771

The AER service driver does not currently call a handler for AER
uncorrectable errors (UCE) detected in root ports or downstream
ports. This is not needed in most cases because common PCIe port
functionality is handled by portdrv service drivers.

CXL root ports include CXL specific RAS registers that need logging
before starting do_recovery() in the UCE case.

Update the AER service driver to call the UCE handler for root ports
and downstream ports. These PCIe port devices are bound to the portdrv
driver that includes a CE and UCE handler to be called.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Cc: Bjorn Helgaas <bhelgaas@google.com>
Cc: linux-pci@vger.kernel.org
---
 drivers/pci/pcie/err.c | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
index 705893b5f7b0..a4db474b2be5 100644
--- a/drivers/pci/pcie/err.c
+++ b/drivers/pci/pcie/err.c
@@ -203,6 +203,26 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
 	pci_ers_result_t status = PCI_ERS_RESULT_CAN_RECOVER;
 	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
 
+	/*
+	 * PCIe ports may include functionality beyond the standard
+	 * extended port capabilities. This may present a need to log and
+	 * handle errors not addressed in this driver. Examples are CXL
+	 * root ports and CXL downstream switch ports using AER UIE to
+	 * indicate CXL UCE RAS protocol errors.
+	 */
+	if (type == PCI_EXP_TYPE_ROOT_PORT ||
+	    type == PCI_EXP_TYPE_DOWNSTREAM) {
+		struct pci_driver *pdrv = dev->driver;
+
+		if (pdrv && pdrv->err_handler &&
+		    pdrv->err_handler->error_detected) {
+			const struct pci_error_handlers *err_handler;
+
+			err_handler = pdrv->err_handler;
+			status = err_handler->error_detected(dev, state);
+		}
+	}
+
 	/*
 	 * If the error was detected by a Root Port, Downstream Port, RCEC,
 	 * or RCiEP, recovery runs on the device itself.  For Ports, that
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-BN7-obe.outbound.protection.outlook.com (mail-bn7nam10on2064.outbound.protection.outlook.com [40.107.92.64])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 70294E542;
	Mon, 17 Jun 2024 20:04:30 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.92.64
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718654672; cv=fail; b=cUq8K3cKVUcR2ceeZhb2udrsaV9tDeY3r3YDaJ/oyx/3OByah29St8BIb4pBgBsRoEun7rCsHA8I1Nq8+86/rpyEvo0v8Ib/VjpRIXEWsXMKcfyBfSPlabX/tHvF0rRoeQX5sUFfv5hJtYMH4YUGXI9Evh4QxybB4vmI8qiYJkI=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718654672; c=relaxed/simple;
	bh=XQb46Ix0gGSQX2LzYyDfH1Fs5Su7QEPauicT/EEbws8=;
	h=From:To:Subject:Date:Message-ID:MIME-Version:Content-Type; b=JTwFFWQtcp8RowdwFBptDcEJa/13AQ79VAKdOwOVHFOEbZyv1aBrcK+u7+dkwqS6aYvC3enmTw75V233uVK4QL5WiznyIJ51y7S6KZtvb0HzENqp5giQYWnmxPI42QWYSf+HC27XnC4GdvjUyaCeK0j4aSn60JnryOTair8UWrw=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=NL3iuQVd; arc=fail smtp.client-ip=40.107.92.64
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="NL3iuQVd"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=bTx9AOSJXOgjGIDsYfOq3p362vT/DjOg31KOegaH6ayPEoOUySQlAw1RsdKO8Ppl9/D0mlvl7igPbnQwVgfMXwFNj6TSX3QEpZTV0KLroYeeE4S0bqxsf5467BTnHv30PWopEHGBb9jD0JV+4uGUqyBvPawNdpeX2+WgJ+1vpBW+vsWs9IaUIjgVPCPzAKUtPnYGYm561WifmRH9hX3BVkKTWxEGjAONuF+PCG7mt88oyg7oCnDK819e9Ojskwafq0TgAM1KpEIwK8lOBZp2frtowhH/5oizkPIPCkFbXCTqDaMsH2mPOqdbdj3+lmkaqQ0widAtpiJGKsGf/v2qTQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=cUSvfOMDeXE3IfIsty1uipApshKFeTCggpkkRuuM7Yc=;
 b=B+Dv9LEw94vhbzXVbvjefoQ4u9m8lKuO0qoOKoQJEo+8lxR7dujajFlnu3+YY3E96rvld55/XeKtCAmQCrUIRDekJGQBQzRCvt5bZ6sbnNnAUrTL4gLSY+22tx52Kyg1yGiyKrdHO/W0UAM315zU2BteTM7MXyrkh+u4/vS2TxHZMWsEX+D1WHFUSsuJJs0zyIOwfWz3rKaEm4RwkoRb70DrnOi3VCtzo1cjgRuYV9SwgSOMdGG+QsKFHQOwjUVDWlNgGTKGsBF85bwiFEX3BsURJto4n/MWClWrpG4jOhKZDXzTDRYr6qdhrE8T1OYHL9GTGym5CqZsHp8egAZiEQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=cUSvfOMDeXE3IfIsty1uipApshKFeTCggpkkRuuM7Yc=;
 b=NL3iuQVdInrgFukRZKqTBOVXm2rl2escrw6krzIBPG0QhX39C7YXGzO70yV1LnuaJPAwvmN+pWGgIfl+1hi8XCV4dGPF+3r/LL/dRok36g7VH4m7qbZxlxXBiuKp9fr7fHedI6Yn8CpUoIEy3jl9lyevguV/KHwhB3o3JtjOMFQ=
Received: from SJ0PR03CA0088.namprd03.prod.outlook.com (2603:10b6:a03:331::33)
 by MN2PR12MB4063.namprd12.prod.outlook.com (2603:10b6:208:1dc::8) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30; Mon, 17 Jun
 2024 20:04:25 +0000
Received: from CO1PEPF000044F5.namprd05.prod.outlook.com
 (2603:10b6:a03:331:cafe::c2) by SJ0PR03CA0088.outlook.office365.com
 (2603:10b6:a03:331::33) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30 via Frontend
 Transport; Mon, 17 Jun 2024 20:04:25 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044F5.mail.protection.outlook.com (10.167.241.75) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.7677.15 via Frontend Transport; Mon, 17 Jun 2024 20:04:24 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Mon, 17 Jun
 2024 15:04:23 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <terry.bowman@amd.com>,
	<Yazen.Ghannam@amd.com>, <Robert.Richter@amd.com>
Subject: [RFC PATCH 0/9] Add RAS support for CXL root ports, CXL downstream switch ports, and CXL upstream switch ports
Date: Mon, 17 Jun 2024 15:04:02 -0500
Message-ID: <20240617200411.1426554-1-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044F5:EE_|MN2PR12MB4063:EE_
X-MS-Office365-Filtering-Correlation-Id: f45d355d-05cb-4df6-9734-08dc8f08afb1
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|36860700010|376011|7416011|82310400023|1800799021|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?GvTv9XudbpTeSJ8JDWGAaRs63XqOYQGD+nLiFPdCdPJf/Py38h2VzY9MbSqN?=
 =?us-ascii?Q?acstaix3j71GJgMlApZzRnC7RnPVGSgTdtG7NIC5jGnxbzs8uqGa42eVUsZ8?=
 =?us-ascii?Q?K3oGMENZdvM1JQSjk30ubj+51csOLlqEC/epUNWHH3RcZ1MGDhzDcl0hY7dp?=
 =?us-ascii?Q?zkLf67JgfRH1qESrHElWxDa+jog9WO2gA3gkNGiGjTopSq8Q+qfXHHgakbpd?=
 =?us-ascii?Q?oW4C2VhCra/Bb2xfBw3RDEY4zlVIgkOU9Zjsl7isQzTE3ngsbo0erqFFx9+A?=
 =?us-ascii?Q?6e9UELyi6jtFMnWKoQpLwGQLC0L+wWYlJMwJ9A3hKmeJWWkaY/pGHnbYrIGt?=
 =?us-ascii?Q?ifi3MNjv+Epg/AMEmNghZKXb2jMOj4Gk6NyfLUJvRCM41+bLcvdBiLPfdpTx?=
 =?us-ascii?Q?yOMRRdbFkSUdmcHt2W8An5eqkDX26pjcldMHeNuPnShj8N66PfjahHF2lTtB?=
 =?us-ascii?Q?MN/5vt4OVfL0Y9fjSyGlIlj+9Wf70X55HSHXP3gs//6KBqLI9kwQSeOo9+y4?=
 =?us-ascii?Q?Rx15SEKsyC1CSi04oo6gAvixcC9HpbZd1rzFuHBQPaQUw5Vcr2bgMhkZy87O?=
 =?us-ascii?Q?bFpyKvFAQUO/oVxevDhG+d0bEC7Gt2S+6AJyjr0lM3G7tQDGwjqYY3fGIHEL?=
 =?us-ascii?Q?+rGNd2nIaFq8dEWkYcoA8TQU3pS1+f2Fp2PcVyU89Qs/vqMpQ/kFysl0PxRG?=
 =?us-ascii?Q?D/TXG+WwXWsWVWzznrsmRcVJMrIfrh61ySUK92hi2sFaPQUgeN8wBAz3kOK3?=
 =?us-ascii?Q?kxvi6mHLL34j7oO1ATbCG+W6THpwbrFBjn6ZSC4LV6Q9N2qgTqvdVSGyplYy?=
 =?us-ascii?Q?NUWIE1NZj0kegCf/1bN/Y6nMUgSiuKEBCmFkwx2iS6V2P217BlIBuSC18+/n?=
 =?us-ascii?Q?2PbXm/twcjfLX1263pS9LgMq8gplRfIYSDVYnmkXA0np/bXbSoDdEblwEWmf?=
 =?us-ascii?Q?KW8OutN8+0utc4bezp1VcWdSPhtKFAop3/XwPIl02UZOZT2XGOTrdjFu3rQb?=
 =?us-ascii?Q?pFs11lyh0egEP/zseoRx/KJLs7Uyxl5okVY7+xKwn4q7P3WQaLvniLpnU6CX?=
 =?us-ascii?Q?GfljanTV+gwsj4gGNf0pJXD1WNi0Jy9cQLHqQECzzZ6Wo7EvEiY/tq92abQD?=
 =?us-ascii?Q?6ke3CsPlojtDP4IY4BwCg2yWkQLmga/kaxRxoH4nTdwvO2IMy9g2kZ/PlpYn?=
 =?us-ascii?Q?cwuzSXSHDqhQuLr61DzcD0/1h55g4tjksZKgiX314DQ/mY170iuGwiDE7EDh?=
 =?us-ascii?Q?Mawp5UvTmthA2y35UVJB5sKhnZOqQy24s1ClihrOQ5UtMsfGi7Lgqk6OZkm5?=
 =?us-ascii?Q?LOtw7nLbexXjAgYzlJ2n/PJVtZDw4J3hxVi9rapvBXiSRoXp/GWhWStNHRv8?=
 =?us-ascii?Q?g809uDUOmXOotMQ088FpHym1aq4k?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230037)(36860700010)(376011)(7416011)(82310400023)(1800799021)(921017);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 17 Jun 2024 20:04:24.8367
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: f45d355d-05cb-4df6-9734-08dc8f08afb1
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044F5.namprd05.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB4063

This patchset provides RAS logging for CXL root ports, CXL downstream
switch ports, and CXL upstream switch ports. This includes changes to
use a portdrv notifier chain to communicate CXL AER/RAS errors to a
cxl_pci callback.

The first 3 patches prepare for and add an atomic notifier chain to the
portdrv driver. The portdrv's notifier chain reports the port device's
AER internal errors to the registered callback(s). The preparation changes
include a portdrv update to call the uncorrectable handler for PCIe root
ports and PCIe downstream switch ports. Also, the AER correctable error
(CE) status is made available to the AER CE handler.

The next 4 patches are in preparation for adding an atomic notification
callback in the cxl_pci driver. This is for receiving AER internal error
events from the portdrv notifier chain. Preparation includes adding RAS
register block mapping, adding trace functions for logging, and
refactoring cxl_pci RAS functions for reuse.

The final 2 patches enable the AER internal error interrupts.

Testing RAS CE/UCE:
  QEMU was used for testing CXL root port, CXL downstream switch port, and
  CXL upstream switch port. The aer-inject tool was used to inject AER and
  a test patch was used to set the AER CIE/UIE and RAS CE/UCE status during
  testing. Testing passed with no issues.
 
  An AMD platform with the AMD RAS error injection tool was used for
  testing CXL root port injection. Testing passed with no issues.

  TODO - regression test CXL1.1 RCH handling.

Solutions Considered (1-4):
  Below are solutions that were considered. Solution #4 is
  implemented in this patchset. 

  1.) Reassigning portdrv error handler for CXL port devices
  
  This solution was based on reassigning the portdrv's CE/UCE err_handler
  to be CXL cxl_pci driver functions.
  
  I started with this solution and once the flow was working I realized
  the endpoint removal would have to be addressed as well. While this
  could be resolved it does highlight the odd coupling and dependency
  between the CXL port devices error handling with cxl_pci endpoint's
  handlers. Also, the err_handler re-assignment at runtime required
  ignoring the 'const' definition. I don't believe this should be
  considered as a possible solution.
  
  2.) Update the AER driver to call cxl_pci driver's error handler before
  calling pci_aer_handle_error()

  This is similar to the existing RCH port error approach in aer.c.
  In this solution the AER driver searches for a downstream CXL endpoint
  to 'handle' detected CXL port protocol errors.

  This is a good solution to consider if the one presented in this patchset
  is not acceptable. I was initially reluctant to this approach because it
  adds more CXL coupling to the AER driver. But, I think this solution
  would technically work. I believe Ming was working towards this
  solution.

  3.) Refactor portdrv
  The portdrv refactoring solution is to change the portdrv service drivers
  into PCIe auxiliary drivers. With this change the facility drivers can be
  associated with a PCIe driver instead fixed bound to the portdrv driver.

  In this case the CXL port functionality would be added either as a CXL
  auxiliary driver or as a CXL specific port driver
  (PCI_CLASS_BRIDGE_PCI_NORMAL).

  This solution has challenges in the interrupt allocation by separate
  auxiliary drivers and in binding of a specific driver. Binding is
  currently based on PCIe class and would require extending the binding
  logic to support multiple drivers for the same class.

  Jonathan Cameron is working towards this solution by initially solving
  for the PMU service driver.[1] It is using the auxiliary bus to associate
  what were service drivers with the portdrv driver. Using a CXL auxiliary
  for handling CXL port RAS errors would result in RAS logic called from
  the cxl_pci and CXL auxiliary drivers. This may need a library driver.

  4.) Using a portdrv notifier chain/callback for CIE/UIE
  (Implemented in this patchset)

  This solution uses a portdrv atomic chain notifier and a cxl_pci
  callback to handle and log CXL port RAS errors.
  
  I chose this after trying solution#1 above. I see a couple advantages to
  this solution are:
  - Is general port implementation for CIE/UIE specific handling mentioned
  in the PCIe spec.[2]
  - Notifier is used in RAS MCE driver as an existing example.
  - Does not introduce further CXL dependencies into the AER driver.
  - The notifier chain provides registration/unregistration and
  synchronization.

  A disadvantage of this approach is coupling still exists between the CXL
  port's driver (portdrv) and the cxl_pci driver. The CXL port device's RAS
  is handled by a notifier callback in the cxl_pci endpoint driver.

  Most of the patches in this patchset could be reused to work with
  solution#3 or solution#2. The atomic notifier could be dropped and
  instead use an auxiliary device or AER driver awareness. The other
  changes in this patchset could possibly be reused.

  [1] Kernel.org -
  https://lore.kernel.org/all/f4b23710-059a-51b7-9d27-b62e8b358b54@linux.intel.com
  [2] PCI6.0 - 6.2.10 Internal errors

 drivers/cxl/core/core.h    |   4 +
 drivers/cxl/core/pci.c     | 153 ++++++++++++++++++++++++++++++++-----
 drivers/cxl/core/port.c    |   6 +-
 drivers/cxl/core/trace.h   |  34 +++++++++
 drivers/cxl/cxl.h          |  10 +++
 drivers/cxl/cxlpci.h       |   2 +
 drivers/cxl/mem.c          |  32 +++++++-
 drivers/cxl/pci.c          |  19 ++++-
 drivers/pci/pcie/aer.c     |  10 ++-
 drivers/pci/pcie/err.c     |  20 +++++
 drivers/pci/pcie/portdrv.c |  32 ++++++++
 drivers/pci/pcie/portdrv.h |   2 +
 include/linux/aer.h        |   6 ++
 13 files changed, 303 insertions(+), 27 deletions(-)


base-commit: ca3d4767c8054447ac2a58356080e299a59e05b8
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-yb1-f178.google.com (mail-yb1-f178.google.com [209.85.219.178])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B5A3B18A934;
	Mon, 19 Aug 2024 18:18:14 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.219.178
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1724091496; cv=none; b=PQ8anTaulJk9kmBlcsrLJQZZlG9ItXE5GsoEnpuRix8ZmJZ2mWRbdrpANiwL9EBmwue4sPJc1wVCjTsFAC/Sl9NF3j+h9GKJ8p832su7RYTEI9TSAU3RAgTYt3YCmUySFCD/Qv2kz4JIs81sh9Hf5csfWGCyF62tc3q7tbCQpxs=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1724091496; c=relaxed/simple;
	bh=EWOZyibOW+wIExVAMS5SDctag1MIP4HuSTQODw8wl2I=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=bCeIX45Tw1n+7qlWHK5rPMYZ0dveWBvz5HnRSB1ulNQyHr03GtiiBB3dPwggEVnFZZLSXrHW6ndQm247tDDlCQGolVQnClLbkW3tWGcx4CznZqVML0/D143B6lA8nD6Wx6hLi1jNmrrNUQkMpzv/PxpIblJ30kq6HemaeZImw9U=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=gY2OFHCa; arc=none smtp.client-ip=209.85.219.178
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="gY2OFHCa"
Received: by mail-yb1-f178.google.com with SMTP id 3f1490d57ef6-e116ec43a4aso4905302276.0;
        Mon, 19 Aug 2024 11:18:14 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1724091494; x=1724696294; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=AGaYa1Q8KPOcvDV/p8Nmwra1mvJ7inGUNSlMYUWHzO0=;
        b=gY2OFHCa98zEQCazwHoe3bldrsLC1RByHg6wTPJ9ENQlBa/635Ah7SJ17Ga/neeE1M
         VH3SeaFJXRst8KxrTDwsG6lTdDyF2hf6iHsS6xAt3ukMITtovBRAfxF2JJ6FJ4s0BLiP
         bvY6OWWbWN0rUofN5YxQa7VB0jVARRrjEnYeWhtSZEiPCfS5DcMau/QDVe0xq4fVuRtl
         oB4uvBjtNqILo/9Ib3xSw3VKds7GMBU6Zg2dj8bepmujkGrCKurAHcRbB68RMFQBboAX
         hj+gYAV5yMhEYBXBKTN+iTIg4Sa12xrLKPGMA+WZ+kihE/BFSBOtiDWkpvrXLZRckqnk
         MlZQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1724091494; x=1724696294;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=AGaYa1Q8KPOcvDV/p8Nmwra1mvJ7inGUNSlMYUWHzO0=;
        b=JAhmpHHN6RnYYQQn2p05on/5xfKAfx3kUD2KiYvp67nyBUKU++mZ2UnatJKAQ6NE4s
         ZrJSyXKIIT6unBSQq2BMFPCau1KSmH3ouM6VNk3PfD8apCAgwdShWltx5UoaGXPTtvgb
         O9Mff8CIPIj+k3R9zwpX9jvn+JvWYJlazJNADZGcRqWKtwePZv8DAg2Oc5TCyNo6gvju
         /Rp685/8xq5Unwz+reV9d8Rs6UlJ4FYufsCnFjCpZzKDiz913tDCbdjWj3gS5uN0Rj9B
         EpVTdGlDX3KerdkBhgCFMyk0uOs41JvoWMosdrlAwafIDmfRSdm1Adif8618t4a5w+Bw
         VVLg==
X-Forwarded-Encrypted: i=1; AJvYcCXoa/6BAEXDqjYvLSeKSPET1PQOmZAnjZK1f4yHOjPoFGBHZd9GzoJWNxpkuA++ZS1aHI40HbM4XiHs/w6z55px8UtMxw/zTT5gUS6P54wlKJLt9Y0ibTp1UcGThcO52yH93nkkUiKe
X-Gm-Message-State: AOJu0YzA0+mhPw3EZLbTxlo10grNTiRPFz2CJLnIdl7lJBzrJnhShHtp
	QNAM2c+f35JTrBfyBg0EYVdLPumLnQ+PWmcsodCQ/npOjaPlbhhr
X-Google-Smtp-Source: AGHT+IFTQcrX/ZqxE31X+8Bo8Q8GGk4HsqH57l96fLkavexRAW5f2wDZWpd956d6VC05s+DphvKhMw==
X-Received: by 2002:a05:690c:17:b0:698:bde0:a2dd with SMTP id 00721157ae682-6b1b70c4806mr148329977b3.7.1724091493684;
        Mon, 19 Aug 2024 11:18:13 -0700 (PDT)
Received: from fan ([50.205.20.42])
        by smtp.gmail.com with ESMTPSA id 00721157ae682-6af9cd7a548sm16670207b3.87.2024.08.19.11.18.11
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 19 Aug 2024 11:18:13 -0700 (PDT)
From: Fan Ni <nifan.cxl@gmail.com>
X-Google-Original-From: Fan Ni <fan.ni@samsung.com>
Date: Mon, 19 Aug 2024 11:17:54 -0700
To: Terry Bowman <Terry.Bowman@amd.com>
Cc: fan <nifan.cxl@gmail.com>, dan.j.williams@intel.com,
	ira.weiny@intel.com, dave@stgolabs.net, dave.jiang@intel.com,
	alison.schofield@intel.com, ming4.li@intel.com,
	vishal.l.verma@intel.com, jim.harris@samsung.com,
	ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
	sathyanarayanan.kuppuswamy@linux.intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
	a.manzanares@samsung.com
Subject: Re: [RFC PATCH 0/9] Add RAS support for CXL root ports, CXL
 downstream switch ports, and CXL upstream switch ports
Message-ID: <ZsOMUi_dMhakCkit@fan>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <ZqKeHWsZtDb1RKfh@debian>
 <6db43744-1d92-482a-852f-8d43efa55b74@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <6db43744-1d92-482a-852f-8d43efa55b74@amd.com>

On Mon, Aug 19, 2024 at 11:21:01AM -0500, Terry Bowman wrote:
> Hi Fan
> 
> On 7/25/24 13:49, fan wrote:
> > On Mon, Jun 17, 2024 at 03:04:02PM -0500, Terry Bowman wrote:
> >> This patchset provides RAS logging for CXL root ports, CXL downstream
> >> switch ports, and CXL upstream switch ports. This includes changes to
> >> use a portdrv notifier chain to communicate CXL AER/RAS errors to a
> >> cxl_pci callback.
> >>
> >> The first 3 patches prepare for and add an atomic notifier chain to the
> >> portdrv driver. The portdrv's notifier chain reports the port device's
> >> AER internal errors to the registered callback(s). The preparation changes
> >> include a portdrv update to call the uncorrectable handler for PCIe root
> >> ports and PCIe downstream switch ports. Also, the AER correctable error
> >> (CE) status is made available to the AER CE handler.
> >>
> >> The next 4 patches are in preparation for adding an atomic notification
> >> callback in the cxl_pci driver. This is for receiving AER internal error
> >> events from the portdrv notifier chain. Preparation includes adding RAS
> >> register block mapping, adding trace functions for logging, and
> >> refactoring cxl_pci RAS functions for reuse.
> >>
> >> The final 2 patches enable the AER internal error interrupts.
> >>
> >> Testing RAS CE/UCE:
> >>   QEMU was used for testing CXL root port, CXL downstream switch port, and
> >>   CXL upstream switch port. The aer-inject tool was used to inject AER and
> >>   a test patch was used to set the AER CIE/UIE and RAS CE/UCE status during
> >>   testing. Testing passed with no issues.
> > 
> > Hi Terry,
> > 
> > Could you share a little more about the qemu test setup?
> > From what I see, it seems currently qemu can only inject error to
> > type3 devices, is that true? Or how to do that for port devices?
> > Do we need a hack there?
> > 
> > Also, is the aer-inject tool you mentioned the one currently in the kernel
> > or something else?
> > https://elixir.bootlin.com/linux/v6.10-rc6/source/drivers/pci/pcie/aer_inject.c
> > 
> > Thanks,
> > Fan
> > 
> Sorry for the late response.
> 
> I used AMD RAS injection for testing HW root ports.
> 
> I used QEMU and the legacy aer-inject userspace tool to test switch ports (USP/DSP).[1] 
> I added a couple test patches to set the AER UIE/CIE because the tool doesn't support 
> injecting UIE or CIE bits. I used a test patch for assigning the RAS status as well.
> 
> Regards,
> Terry
> 
> [1] - https://git.kernel.org/pub/scm/linux/kernel/git/gong.chen/aer-inject.git/about/
> 

Hi Terry,
Thanks for the reply. I was able to do aer error inject through the aer
inject kernel module and the user space tool. 
Trying to exercise the code in this patchset.

Fan

> > 
> >>  
> >>   An AMD platform with the AMD RAS error injection tool was used for
> >>   testing CXL root port injection. Testing passed with no issues.
> >>
> >>   TODO - regression test CXL1.1 RCH handling.
> >>
> >> Solutions Considered (1-4):
> >>   Below are solutions that were considered. Solution #4 is
> >>   implemented in this patchset. 
> >>
> >>   1.) Reassigning portdrv error handler for CXL port devices
> >>   
> >>   This solution was based on reassigning the portdrv's CE/UCE err_handler
> >>   to be CXL cxl_pci driver functions.
> >>   
> >>   I started with this solution and once the flow was working I realized
> >>   the endpoint removal would have to be addressed as well. While this
> >>   could be resolved it does highlight the odd coupling and dependency
> >>   between the CXL port devices error handling with cxl_pci endpoint's
> >>   handlers. Also, the err_handler re-assignment at runtime required
> >>   ignoring the 'const' definition. I don't believe this should be
> >>   considered as a possible solution.
> >>   
> >>   2.) Update the AER driver to call cxl_pci driver's error handler before
> >>   calling pci_aer_handle_error()
> >>
> >>   This is similar to the existing RCH port error approach in aer.c.
> >>   In this solution the AER driver searches for a downstream CXL endpoint
> >>   to 'handle' detected CXL port protocol errors.
> >>
> >>   This is a good solution to consider if the one presented in this patchset
> >>   is not acceptable. I was initially reluctant to this approach because it
> >>   adds more CXL coupling to the AER driver. But, I think this solution
> >>   would technically work. I believe Ming was working towards this
> >>   solution.
> >>
> >>   3.) Refactor portdrv
> >>   The portdrv refactoring solution is to change the portdrv service drivers
> >>   into PCIe auxiliary drivers. With this change the facility drivers can be
> >>   associated with a PCIe driver instead fixed bound to the portdrv driver.
> >>
> >>   In this case the CXL port functionality would be added either as a CXL
> >>   auxiliary driver or as a CXL specific port driver
> >>   (PCI_CLASS_BRIDGE_PCI_NORMAL).
> >>
> >>   This solution has challenges in the interrupt allocation by separate
> >>   auxiliary drivers and in binding of a specific driver. Binding is
> >>   currently based on PCIe class and would require extending the binding
> >>   logic to support multiple drivers for the same class.
> >>
> >>   Jonathan Cameron is working towards this solution by initially solving
> >>   for the PMU service driver.[1] It is using the auxiliary bus to associate
> >>   what were service drivers with the portdrv driver. Using a CXL auxiliary
> >>   for handling CXL port RAS errors would result in RAS logic called from
> >>   the cxl_pci and CXL auxiliary drivers. This may need a library driver.
> >>
> >>   4.) Using a portdrv notifier chain/callback for CIE/UIE
> >>   (Implemented in this patchset)
> >>
> >>   This solution uses a portdrv atomic chain notifier and a cxl_pci
> >>   callback to handle and log CXL port RAS errors.
> >>   
> >>   I chose this after trying solution#1 above. I see a couple advantages to
> >>   this solution are:
> >>   - Is general port implementation for CIE/UIE specific handling mentioned
> >>   in the PCIe spec.[2]
> >>   - Notifier is used in RAS MCE driver as an existing example.
> >>   - Does not introduce further CXL dependencies into the AER driver.
> >>   - The notifier chain provides registration/unregistration and
> >>   synchronization.
> >>
> >>   A disadvantage of this approach is coupling still exists between the CXL
> >>   port's driver (portdrv) and the cxl_pci driver. The CXL port device's RAS
> >>   is handled by a notifier callback in the cxl_pci endpoint driver.
> >>
> >>   Most of the patches in this patchset could be reused to work with
> >>   solution#3 or solution#2. The atomic notifier could be dropped and
> >>   instead use an auxiliary device or AER driver awareness. The other
> >>   changes in this patchset could possibly be reused.
> >>
> >>   [1] Kernel.org -
> >>   https://lore.kernel.org/all/f4b23710-059a-51b7-9d27-b62e8b358b54@linux.intel.com
> >>   [2] PCI6.0 - 6.2.10 Internal errors
> >>
> >>  drivers/cxl/core/core.h    |   4 +
> >>  drivers/cxl/core/pci.c     | 153 ++++++++++++++++++++++++++++++++-----
> >>  drivers/cxl/core/port.c    |   6 +-
> >>  drivers/cxl/core/trace.h   |  34 +++++++++
> >>  drivers/cxl/cxl.h          |  10 +++
> >>  drivers/cxl/cxlpci.h       |   2 +
> >>  drivers/cxl/mem.c          |  32 +++++++-
> >>  drivers/cxl/pci.c          |  19 ++++-
> >>  drivers/pci/pcie/aer.c     |  10 ++-
> >>  drivers/pci/pcie/err.c     |  20 +++++
> >>  drivers/pci/pcie/portdrv.c |  32 ++++++++
> >>  drivers/pci/pcie/portdrv.h |   2 +
> >>  include/linux/aer.h        |   6 ++
> >>  13 files changed, 303 insertions(+), 27 deletions(-)
> >>
> >>
> >> base-commit: ca3d4767c8054447ac2a58356080e299a59e05b8
> >> -- 
> >> 2.34.1
> >>

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (mail-mw2nam12on2084.outbound.protection.outlook.com [40.107.244.84])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 2F95A3BBF2;
	Mon, 19 Aug 2024 16:21:07 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.244.84
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1724084469; cv=fail; b=b+4E1gwBALtfsIRdlxwnmMEjAzANBsu6BLaL4RZ0ZhIgQC5CNgpdVDRZuu3PawJKgRbB+WeznAWxVFVLQwLk9mvYfpoUGq3nQ6n/vJ7MMCTdeeKGH6jV4HlMtXGirMdYsTtbugF+V87QncIGdgnbyRF0RdxMgfpmRANWcua4kjo=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1724084469; c=relaxed/simple;
	bh=gwstuTVE88c4sAthhiX70K4e4FbPK3kXOBmxeu6gM3A=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=NxNiWk+D+bMagZy81ZN/ssINUUFd0zbJkaBMNqCfVdTWU99/9Gt+jmFQdYaq/6G/VA8LyKHVl2s0PZSd8E80s1Q+uVpeNoeqaDIbT+UpLQo+2m6CxSeqWlWY7mfldNNe+/LfPHpTmYmjIEDo5PAtyuGXEcuH9OAmaQTWhRstzZU=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=khgeEKYT; arc=fail smtp.client-ip=40.107.244.84
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="khgeEKYT"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=GNlT/08PIPu0JcxY2LRJ3+bDNbjKy6wQdrBnyyQUpnCU4tTVzR2v3FvaklCbqwZcpcpu0Kh/r1ytcwJ3VE7a4oGTJdPseH9zmMPiJBfAGIxnVYfrl6Xu2SUNeViqhjcDWi1Ek02J+675oiQQfnrZno+lDwMWobMIQ/Z1i5ls15Hs0a+GyyxeqZjFJlSbzm179HI+u20wHzLeG+r6bz+f3VxIvE7VqtZ3q478edrrjo6lebtmRH4QvZNU+wljPkeaLL8EjEOvmBbM8Ua6bBYFcR4T1IUB0j5dQLYQ3vC54DN3bwbWz1qg55QsTgc8XmKzGUd1WBUSj7xv220/fnCT4Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=x8t8Ri28x4x/GQUXUJT9NQtO8Ldiv6skN9ZqWOGPtJs=;
 b=FFBLFWoUqMVq0K19PCwYSzGA209ScOk3FbsncpnDDDKzqQInp7T93+wBWvRTfHW3fE9g0ySg+DV2zcWiDp/azzZY8k287+PpoMNh3ANi5tMQEOFyFbSIWZGix6mlqPyJgSJayZ4fCeUOHyKU7Izxo6VYtbLF893iuwSicEQSQ0aRv6Cgyg7Ra1rWs08nVT6QhxALGyu7p+zNIQGhdVQuQ04HZn0EfmJ3Fnaj6fPCoKsKtzjqGfcXxW54NRcwQaxONsf8VBSPGSzdxH6la6UKL5SRJf8TbjQcugeqcXgFW50d+SiohM2osam6tE96i3/QF5ILEo5u7k0Pw3dr2JPW7Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=x8t8Ri28x4x/GQUXUJT9NQtO8Ldiv6skN9ZqWOGPtJs=;
 b=khgeEKYTFOFEwmg41Bit9TW3YwbS2vCTUmuuirCzkGUvK7fNT4N3CLco6hTgM36BMA1coRKePTfFq9DTPHcWz8eVuqN4rlU1skJ+EIs2Wx9RfW9nHXs4ssPFJ3Iykdg07ekPedWf0u5Enm2E+BHVY1vPrykuCmKFj6FGaGAMszA=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 DS7PR12MB5982.namprd12.prod.outlook.com (2603:10b6:8:7d::12) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.7875.21; Mon, 19 Aug 2024 16:21:04 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%7]) with mapi id 15.20.7875.018; Mon, 19 Aug 2024
 16:21:04 +0000
Message-ID: <6db43744-1d92-482a-852f-8d43efa55b74@amd.com>
Date: Mon, 19 Aug 2024 11:21:01 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 0/9] Add RAS support for CXL root ports, CXL
 downstream switch ports, and CXL upstream switch ports
To: fan <nifan.cxl@gmail.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, ming4.li@intel.com,
 vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
 a.manzanares@samsung.com
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <ZqKeHWsZtDb1RKfh@debian>
Content-Language: en-US
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <ZqKeHWsZtDb1RKfh@debian>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: BYAPR11CA0075.namprd11.prod.outlook.com
 (2603:10b6:a03:f4::16) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|DS7PR12MB5982:EE_
X-MS-Office365-Filtering-Correlation-Id: cf007f3d-b6af-465f-62d3-08dcc06aec77
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|366016|1800799024|376014|7416014;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?ZmwrdnpGOGdzcmJINXZIWkVDOVRlbytyRHg4anlieHBIdkFJS25zSFlxbnpN?=
 =?utf-8?B?RHZxZXAzZG1kSHd1V3JHallaZXVDNk1BeHhLc01vMUJ6U0w1SUlmYzhsM0Fs?=
 =?utf-8?B?NXh3TE5lTEdmYzB5YkNWZGI2eVhPYkg5YUZ3QTducGM3VE9EMThTYmxHQkVy?=
 =?utf-8?B?b0ZQbUdRTU1adWkzZkJOV2tMQStMeWFLVFlEVzVDcTkrVE5QSWcwUUwwTTRh?=
 =?utf-8?B?UW9LZjBTdENPUHdSbVQvU1ZBMHcvNTdrSzNMY3RoYkpHbHZKVk9tY203Y0VB?=
 =?utf-8?B?bENtUWkwVElDWnJzakRvanBxTXd2eEJCWlg5MDZoU0tDU3VIbkJzdGxocmVx?=
 =?utf-8?B?NDVGQ21aYmpMVlpFdnZRWnArUzRtSEVlSU5Rc1NFVy8wVDRSRmlkazZ2eXdv?=
 =?utf-8?B?UmFOT3N4SkVDQ0ZvUlUyZnBtZ3NaQnRoVmJWMWtSMElqcE8xOExzaldqNjEx?=
 =?utf-8?B?M0ZTSE5iTFlzdFVBUWh1cXBKM3dXcVN5bjZhZFFqRjJFVzVmaDNVYkprL1Z1?=
 =?utf-8?B?cmpsTEIvb2g4ZDRLd3JwUzJuNGFRU2w1VFRxLzZBeXk0K3JoZUFPSUJOanEx?=
 =?utf-8?B?VXhIL0NYcGNRRnFiMlZuL1dwTVB5T2g0cXFOQzZmYWFiODduc0wzL2ZXd0Zi?=
 =?utf-8?B?UEUrU3ZUTGZ0SjdZaGhEZ2lYZXpUL0ZDcDc5VU1vQW14N0JQS1graTMrUjlo?=
 =?utf-8?B?SVZFOFpGS0RzaGw1UGhvTWdSM1E5THdpVFNkbHNtVWxJa3VVVm1KTjZPYUJB?=
 =?utf-8?B?bXpodEkzYlN4U2pWQytaQkxCM3dGM280cjZTT0kwNllXY0JtRGkrVndPUzl4?=
 =?utf-8?B?ZlgzUTZWbE9jQSs1RHVlSDJkcEUvWG9nRHpTVXVUZVN3UmZoZU16eDR3enRT?=
 =?utf-8?B?eFBYTDd2VEpVQ1MyVDZESFVoZ3lwc0loajhtdnlteFkxYmVvbXJPS2NMcVVD?=
 =?utf-8?B?ZEpML2RoQnFkaEk0YS9HZFdCM05QR0R2OUIweHhPWWx4OXZEN0VLbnArRlFM?=
 =?utf-8?B?NnhIU3hvam9NeGYwazdDeEdzazl2d3VLSkM1YkpKWDY3U0NkK1lhanhWeTdx?=
 =?utf-8?B?ZEtpTTF2RUpWNEV1WXJDU1M2SGxvNGk1ODVTdmRkazFUUm5qL3l0TlE3VHlP?=
 =?utf-8?B?SmFxQ3VBdU91QVUyUDFaOFRycm50Ylo4WGZJdURWSWNQUUNxeEkyMHE3em9P?=
 =?utf-8?B?a0JJUzR0Q2swelVMSDZtNUJIb3FmTElGT0N0ajVzMmlxVmdNMTlwYi9PTlYr?=
 =?utf-8?B?YlA1TXBLWU0yNWFrMC9XcGpIRnhtOUp4Wm9KUUhYci9ZeXU2eUEyUi8xMm9F?=
 =?utf-8?B?Rzh0QWpvMklRdXlHQXVBcGJPNE1GdEY3RDJXWEVPSTVtUFR6bU94c21SbVNR?=
 =?utf-8?B?YnZsQmxDUHoxV1g5T0puTVpXMGJOdDFHaGs0RDNKZ3lseXdndTlrZzEyN3Qw?=
 =?utf-8?B?NDk5ZjYwNks0WjRwSHp1WXl2OEZ0RzY1Q1JPM1ducUhJUjhIM24vVWNNU0dO?=
 =?utf-8?B?RG5UY1JxbDYvZEdYaUZXWUhwV0t1OEs0OU4rMko4anU1R2N0OTgvVEV3MThP?=
 =?utf-8?B?T2xFVHRnSnVKZ1RDb3dIL0JtRXpwdnVqMGtSeDB0dmdXUW5HQURBRjhiaHRN?=
 =?utf-8?B?R0JlTE9WUGJFNWlJRy9iOEFrUHIyWE9rN2NnOFUzeUdGdFUrU25tNUp3WklE?=
 =?utf-8?B?Y3B4U0MyM2pXVk1RMHpTYzdycW80eFRUcHljanRBdnh5Z1pJd2dpaVBkK1lT?=
 =?utf-8?Q?w2m8gUVHV/lMvkWUok=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(366016)(1800799024)(376014)(7416014);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?QzJsaHR2SXFuSlFZZ3V2eVJjSzJveTYzZk1hbjkvUE40c1BzNXgwbGZ3ZFB5?=
 =?utf-8?B?QUFoM0FSK1o4Z0NSSzIvbTlITmIyNUxnVHhvUVZZYm54SjNzRVQ0Nml3S1BE?=
 =?utf-8?B?NnhVdGMrVnQyNG1CWjNFQ0RkVHVMVWcrc0FJZ05PZlV0VmhJYlZodHk3TldZ?=
 =?utf-8?B?a0hoRVNLY0g3VStscjdkZjNualFDY29ZZ3owK0lLSDU1WU5vQjdvUkxNVEFa?=
 =?utf-8?B?Yk5mN1RScGQ5YzhXelhkeHhWR1ZPcWJGdkV1MHpvTnNwVWppMEtGdUx6Q1JT?=
 =?utf-8?B?MTVkM0hrQW1nS1lkelB0Wi9zWkhlQ0hOM3VkL1hUZ3lGZGdIYkpMVmk1bUY3?=
 =?utf-8?B?Uk1pMy85OVNWbllhTkFMVmRRSU55TTIzYVBBdFNseGRrY0dYOTJHWHJwdGdS?=
 =?utf-8?B?TWNPUkt5QjFkakQwc2lBanJRaDA1c2c3YURHeWhpUHQzKzB0YXJjVDRhZjAy?=
 =?utf-8?B?V1dRbHRVWStqeDZxWGNOYzFRMkVLZnB5R2F0M0ozODJYSSt5cEZzalQ0Y21G?=
 =?utf-8?B?SW1nSW1qeVFleTF1STNRUVhNL09YOGRSb2srM05uUHZGYmlZak83WE50TzM0?=
 =?utf-8?B?ZmFsVkhPS29PdkNyYnRpRG9FWEdIMFFlNjRoZkFVaEUvZWpLb1h3dG5pdE5B?=
 =?utf-8?B?YURGN0hoSnQ5TTNxcjdDK3V6bXFmV0NVNzZLRDJLdHNJL1ZLYmlicGl5Sjk3?=
 =?utf-8?B?Y1haakdpUWVMT1VaVEl4Um96NnN0YTN0Y0pUWG5CWjJHTUh2QnJIVGpoVWsw?=
 =?utf-8?B?bEw2cTExUkdkZG5SdTR4SUcwN2VpNlo0VDRleGR5b2wzcFpsSFdWYjNjT0V0?=
 =?utf-8?B?SGhJdG1TSFZGcTRnd29yS2t2cGJyQVFwSG56UXZYTG5jVTBXZG9zRk1GNzhw?=
 =?utf-8?B?WCt0VTIzT0FtVnM3ckdJeGNJN2syUHRBZlJqbVJpREM3Zmd4ZWtFTGpYSFd3?=
 =?utf-8?B?RjhrdUxWRWNYWnpkMmdUZm5vVS94cGpMMWpqaEhpVWp3N0hCWi9xZU5MY2N0?=
 =?utf-8?B?OHFleFp5QzVQMEJITW1VdlhuM2FMclF2NWJyVGRISU9iR0pPNXp4MnB0aENh?=
 =?utf-8?B?RTFpQ3h5enBmNlExU0dQQTJSc3V4R1NoSDBQc1VyZFI1S29oa3RUWFBoVGll?=
 =?utf-8?B?QWtnZ1lPSzN5UC95bjF6V0F3Y1dLWVNWaWxEbGZJNFNpSjd6ekFiMk9iM1Q2?=
 =?utf-8?B?QXhXMTN1TXY0R0Nma3RUNy9SY2RrNGFrSVQxM0lZb0lZd0UxNnNsU21aRHRs?=
 =?utf-8?B?WjFEcy9uOGY0ejBNVGorWFRwWmJrS3d5ajVrWkZEZDZ1bHdDZ3ROamFVT0I0?=
 =?utf-8?B?Yk9DTjdGczlRU0NSdTlDU09qRUMrR0dsN3MwTWl5TEU2bFlXTVpFYVlMRFFr?=
 =?utf-8?B?OVFQQ0ZlMGhMeWs0YVpxTENpR0orcHdMd1JmeGdqekV6S05rSFdHemV0RUg3?=
 =?utf-8?B?WlpCWVF5L3crczVwa0JXUnd5QXhlTXA1d2NRVzBJcUF1d1h2TTVxd003WDhy?=
 =?utf-8?B?ZU94OVhiWjY4SitadzZLMjBnOE1DeEQ0dTllcDZOT3dmbE5NSjVHRC9LOWJq?=
 =?utf-8?B?eEFhR3U4YTBlOUVsY1lieUlhRDJiY3dNeTlRSUs4VzFzUUhjUWZMUjJ4R0VJ?=
 =?utf-8?B?VU14WThYbFVhWkJaREpjYkUwc1d3SGZGZ1VmL2NMQ3AzTm5JL3ZVeE8vQVFK?=
 =?utf-8?B?UjVUL0MvdXFyZXBQbkFtWTNyc2JjcjN4VTZ6L04rakM0RWdCb2NzbDY2ZHkr?=
 =?utf-8?B?Ukhkb3BGSmkzeEdGSGR4R0g4Nmpxdzl1T2xOOU5ENVhQZDUzRFU0enUwNnY1?=
 =?utf-8?B?SnpnQ3RGaUl6MDRUdFpVeHVHdWRhVkhjVkI5RlFVRWwvRkI4TmlZMHBvUzJk?=
 =?utf-8?B?WTlOZEF1OGQ5T1c0TkhHTERxdkE1aExGRkczeVp1U0tkM1NTbnRUY2VvK2xJ?=
 =?utf-8?B?UVVQVGxZZCs2dVhiMnFYZHlFdVNlenAzd2g0TWNOVkQ3b21jejVKZEhhN3dN?=
 =?utf-8?B?ZE1aNHFrNzJFYkFOQy9EWHdBYXhydkNCR00zM2lzM2N0Z3E0VDZPTE55UExz?=
 =?utf-8?B?djJjdHNnY3hkM0JDUmtlNW94OFFLN1VMcUxnKzNCSzMwS3RnM2pIaTJWNW5H?=
 =?utf-8?Q?PuIyXOpML+gsAGh1LzMzMcxIw?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: cf007f3d-b6af-465f-62d3-08dcc06aec77
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 19 Aug 2024 16:21:04.7651
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: S3w4p/QhmXr2QORZkpjtLUWiHLicDoUH2Wraw0McTqKiXWYS2GqAwzEQRHZoCHD1hpBvzljb1M+ZTsfZpAHtFQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS7PR12MB5982

Hi Fan

On 7/25/24 13:49, fan wrote:
> On Mon, Jun 17, 2024 at 03:04:02PM -0500, Terry Bowman wrote:
>> This patchset provides RAS logging for CXL root ports, CXL downstream
>> switch ports, and CXL upstream switch ports. This includes changes to
>> use a portdrv notifier chain to communicate CXL AER/RAS errors to a
>> cxl_pci callback.
>>
>> The first 3 patches prepare for and add an atomic notifier chain to the
>> portdrv driver. The portdrv's notifier chain reports the port device's
>> AER internal errors to the registered callback(s). The preparation changes
>> include a portdrv update to call the uncorrectable handler for PCIe root
>> ports and PCIe downstream switch ports. Also, the AER correctable error
>> (CE) status is made available to the AER CE handler.
>>
>> The next 4 patches are in preparation for adding an atomic notification
>> callback in the cxl_pci driver. This is for receiving AER internal error
>> events from the portdrv notifier chain. Preparation includes adding RAS
>> register block mapping, adding trace functions for logging, and
>> refactoring cxl_pci RAS functions for reuse.
>>
>> The final 2 patches enable the AER internal error interrupts.
>>
>> Testing RAS CE/UCE:
>>   QEMU was used for testing CXL root port, CXL downstream switch port, and
>>   CXL upstream switch port. The aer-inject tool was used to inject AER and
>>   a test patch was used to set the AER CIE/UIE and RAS CE/UCE status during
>>   testing. Testing passed with no issues.
> 
> Hi Terry,
> 
> Could you share a little more about the qemu test setup?
> From what I see, it seems currently qemu can only inject error to
> type3 devices, is that true? Or how to do that for port devices?
> Do we need a hack there?
> 
> Also, is the aer-inject tool you mentioned the one currently in the kernel
> or something else?
> https://elixir.bootlin.com/linux/v6.10-rc6/source/drivers/pci/pcie/aer_inject.c
> 
> Thanks,
> Fan
> 
Sorry for the late response.

I used AMD RAS injection for testing HW root ports.

I used QEMU and the legacy aer-inject userspace tool to test switch ports (USP/DSP).[1] 
I added a couple test patches to set the AER UIE/CIE because the tool doesn't support 
injecting UIE or CIE bits. I used a test patch for assigning the RAS status as well.

Regards,
Terry

[1] - https://git.kernel.org/pub/scm/linux/kernel/git/gong.chen/aer-inject.git/about/

> 
>>  
>>   An AMD platform with the AMD RAS error injection tool was used for
>>   testing CXL root port injection. Testing passed with no issues.
>>
>>   TODO - regression test CXL1.1 RCH handling.
>>
>> Solutions Considered (1-4):
>>   Below are solutions that were considered. Solution #4 is
>>   implemented in this patchset. 
>>
>>   1.) Reassigning portdrv error handler for CXL port devices
>>   
>>   This solution was based on reassigning the portdrv's CE/UCE err_handler
>>   to be CXL cxl_pci driver functions.
>>   
>>   I started with this solution and once the flow was working I realized
>>   the endpoint removal would have to be addressed as well. While this
>>   could be resolved it does highlight the odd coupling and dependency
>>   between the CXL port devices error handling with cxl_pci endpoint's
>>   handlers. Also, the err_handler re-assignment at runtime required
>>   ignoring the 'const' definition. I don't believe this should be
>>   considered as a possible solution.
>>   
>>   2.) Update the AER driver to call cxl_pci driver's error handler before
>>   calling pci_aer_handle_error()
>>
>>   This is similar to the existing RCH port error approach in aer.c.
>>   In this solution the AER driver searches for a downstream CXL endpoint
>>   to 'handle' detected CXL port protocol errors.
>>
>>   This is a good solution to consider if the one presented in this patchset
>>   is not acceptable. I was initially reluctant to this approach because it
>>   adds more CXL coupling to the AER driver. But, I think this solution
>>   would technically work. I believe Ming was working towards this
>>   solution.
>>
>>   3.) Refactor portdrv
>>   The portdrv refactoring solution is to change the portdrv service drivers
>>   into PCIe auxiliary drivers. With this change the facility drivers can be
>>   associated with a PCIe driver instead fixed bound to the portdrv driver.
>>
>>   In this case the CXL port functionality would be added either as a CXL
>>   auxiliary driver or as a CXL specific port driver
>>   (PCI_CLASS_BRIDGE_PCI_NORMAL).
>>
>>   This solution has challenges in the interrupt allocation by separate
>>   auxiliary drivers and in binding of a specific driver. Binding is
>>   currently based on PCIe class and would require extending the binding
>>   logic to support multiple drivers for the same class.
>>
>>   Jonathan Cameron is working towards this solution by initially solving
>>   for the PMU service driver.[1] It is using the auxiliary bus to associate
>>   what were service drivers with the portdrv driver. Using a CXL auxiliary
>>   for handling CXL port RAS errors would result in RAS logic called from
>>   the cxl_pci and CXL auxiliary drivers. This may need a library driver.
>>
>>   4.) Using a portdrv notifier chain/callback for CIE/UIE
>>   (Implemented in this patchset)
>>
>>   This solution uses a portdrv atomic chain notifier and a cxl_pci
>>   callback to handle and log CXL port RAS errors.
>>   
>>   I chose this after trying solution#1 above. I see a couple advantages to
>>   this solution are:
>>   - Is general port implementation for CIE/UIE specific handling mentioned
>>   in the PCIe spec.[2]
>>   - Notifier is used in RAS MCE driver as an existing example.
>>   - Does not introduce further CXL dependencies into the AER driver.
>>   - The notifier chain provides registration/unregistration and
>>   synchronization.
>>
>>   A disadvantage of this approach is coupling still exists between the CXL
>>   port's driver (portdrv) and the cxl_pci driver. The CXL port device's RAS
>>   is handled by a notifier callback in the cxl_pci endpoint driver.
>>
>>   Most of the patches in this patchset could be reused to work with
>>   solution#3 or solution#2. The atomic notifier could be dropped and
>>   instead use an auxiliary device or AER driver awareness. The other
>>   changes in this patchset could possibly be reused.
>>
>>   [1] Kernel.org -
>>   https://lore.kernel.org/all/f4b23710-059a-51b7-9d27-b62e8b358b54@linux.intel.com
>>   [2] PCI6.0 - 6.2.10 Internal errors
>>
>>  drivers/cxl/core/core.h    |   4 +
>>  drivers/cxl/core/pci.c     | 153 ++++++++++++++++++++++++++++++++-----
>>  drivers/cxl/core/port.c    |   6 +-
>>  drivers/cxl/core/trace.h   |  34 +++++++++
>>  drivers/cxl/cxl.h          |  10 +++
>>  drivers/cxl/cxlpci.h       |   2 +
>>  drivers/cxl/mem.c          |  32 +++++++-
>>  drivers/cxl/pci.c          |  19 ++++-
>>  drivers/pci/pcie/aer.c     |  10 ++-
>>  drivers/pci/pcie/err.c     |  20 +++++
>>  drivers/pci/pcie/portdrv.c |  32 ++++++++
>>  drivers/pci/pcie/portdrv.h |   2 +
>>  include/linux/aer.h        |   6 ++
>>  13 files changed, 303 insertions(+), 27 deletions(-)
>>
>>
>> base-commit: ca3d4767c8054447ac2a58356080e299a59e05b8
>> -- 
>> 2.34.1
>>

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-yb1-f173.google.com (mail-yb1-f173.google.com [209.85.219.173])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4F99D22318;
	Mon, 15 Jul 2024 17:52:43 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.219.173
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1721065964; cv=none; b=De5t0VxAeEzPOVDBJMLn7gwNSOwVZF8cRuIW5sac16vgCPc4XXpjSwAE4VGS3u1J7lmkd+5cCqGqYnGxixpIKvemESy/SXSiUlNj21iRrTu/TwIC1hePiTRh6IP8thkSpqSO7xDaHf07SbSLsenY5xIjlzwIiBQxJa1QLx6Os6U=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1721065964; c=relaxed/simple;
	bh=Aj6nh5mGAl+teHdD050cfcGPMAEinYG2c8dUe3wwZ/Q=;
	h=Message-ID:From:Date:To:Cc:Subject:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=J42lfVZPhl+v5QCWTrPsxNMRqhsSygcsKGtdTx7aekb5L3qDN8L7La5lTy47InS1YdwzuRtuWZFFezuV/A/RSFq1JQ2pKGC4FlsUbUSUeccZFkS14zmb/qPotpwrYM/LckcnKeSMYWTNwq2t/X6UbdTLKqg+w2tMdzXW1A5ie2s=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=iQF3kN89; arc=none smtp.client-ip=209.85.219.173
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="iQF3kN89"
Received: by mail-yb1-f173.google.com with SMTP id 3f1490d57ef6-e036d1ce4f7so3601613276.0;
        Mon, 15 Jul 2024 10:52:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1721065962; x=1721670762; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:subject:cc
         :to:date:from:message-id:from:to:cc:subject:date:message-id:reply-to;
        bh=iKR/ODC5NWkjfKlAhKkUtVQjminwT/CBUyLSJA+//MI=;
        b=iQF3kN89ZdM4BMZqQ0vZFLRgB04MOqkP0XifZ1IbhMNI2X/ef+mKAV34Klw8SoUO4B
         Jy2wx93aduawaVbqOG1cBgnWgQBHKvwkDWRSLhUHJc2+P8NhvXkOKjkqAwWDnB1jLNJK
         RxrogGwHOGBhitI4tTHuMIiw//k8YTrWZydGnKRioGgmYXPHL5Pu9QAxAyXWugKlA+Tp
         MiQ97rVlBy9YMZPpnJY0laz/M0ulBvaTnFS+JeZEva4bmYFzj5gndFVdo0tp88I+4ppX
         GCQUXQMIYiDn1YEXS+ZOIuumwjP2YafgrLT/PEzY+X4irlHOz+mJ3T6tsXDMZw8dYsdr
         hD5A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1721065962; x=1721670762;
        h=in-reply-to:content-disposition:mime-version:references:subject:cc
         :to:date:from:message-id:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=iKR/ODC5NWkjfKlAhKkUtVQjminwT/CBUyLSJA+//MI=;
        b=mrFX7RCGYu401iJRyYr6wR/MZuSZxsDiliSdQc+H3qB5NJ1mprGZl99XhK8DBj+Ypc
         t4D2moKx/+RjhpaYtgAcy4XZebtvbZfuqkdtot/1IWRjGaIPKY6mrRHMphmSh6I4Op7N
         /eUoGpAgfWUo6F/vvqNITZISM9o97ia9VCAU9nZxvrTapFtAJ3bLerdfPhdvB01ce5Zr
         DvjrY8ax7jDC0eEcykLoSrZkaCeYy6s7Uar85bSce3b9cHuZK/A4awi8JhmxEeS1cXT9
         hlVbqJiXs7Rgj5PREB9zk/gOYUTjyJWjZifzsDXSDPX07HLnCDqFxYQ1NILuSW4gyQfa
         tmjw==
X-Forwarded-Encrypted: i=1; AJvYcCXG3H+aoo0/LfqAYVORzcWobNQ1eUbyj3jUpm64YJqN0zuc6eCcePzsOvBuNhk/lGgM1YT5PIH4qslHXr/DiaYkbsS21FGqqd9NKH2CtrjWLhfF2QozwE7F2xfwTWFZHaKDB92fO3pm
X-Gm-Message-State: AOJu0YyaWdKVFabw0NBb4KiUcH663QUHT1McLtPdSLqWcjicenJIJQS4
	INpPiKkCYR2XaYqetN1Le9ppLe50ojpcAkMhVGM+34AjujVIsA7M
X-Google-Smtp-Source: AGHT+IGxaJl8NKgJ/K8f0rzvjF1kPYVZnnnSxHse3dQIG1/xpw7+Uff4gsI6SioFX/QU4LDqYnGomw==
X-Received: by 2002:a05:6902:e08:b0:e03:5e56:9827 with SMTP id 3f1490d57ef6-e05d272d00emr815016276.27.1721065962284;
        Mon, 15 Jul 2024 10:52:42 -0700 (PDT)
Received: from gpd. ([50.205.20.42])
        by smtp.gmail.com with ESMTPSA id 3f1490d57ef6-e05a4617285sm934658276.24.2024.07.15.10.52.40
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 15 Jul 2024 10:52:42 -0700 (PDT)
Message-ID: <669561ea.050a0220.948fd.3f0d@mx.google.com>
X-Google-Original-Message-ID: <ZpVhae8OtL6qwQ1m@gpd.>
From: nifan.cxl@gmail.com
X-Google-Original-From: fan@gpd.
Date: Mon, 15 Jul 2024 10:50:33 -0700
To: Terry Bowman <terry.bowman@amd.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
	dave.jiang@intel.com, alison.schofield@intel.com,
	ming4.li@intel.com, vishal.l.verma@intel.com,
	jim.harris@samsung.com, ilpo.jarvinen@linux.intel.com,
	ardb@kernel.org, sathyanarayanan.kuppuswamy@linux.intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	Yazen.Ghannam@amd.com, Robert.Richter@amd.com
Subject: Re: [RFC PATCH 5/9] cxl/pci: Update RAS handler interfaces to
 support CXL PCIe ports
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-6-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20240617200411.1426554-6-terry.bowman@amd.com>

On Mon, Jun 17, 2024 at 03:04:07PM -0500, Terry Bowman wrote:
> CXL RAS error handling includes support for endpoints and RCH downstream
> ports. The same support is missing for CXL root ports, CXL downstream
> switch ports, and CXL upstream switch ports. This patch is in preparation
> for adding CXL ports' RAS handling.
> 
> The cxl_pci driver's RAS support functions use the 'struct cxl_dev_state'
> type parameter that is not available in CXL port devices. The same CXL
> RAS capability structure is required for most CXL components/devices
> and should have common handling where possible.[1]
> 
> Update __cxl_handle_cor_ras() and __cxl_handle_ras() to use 'struct
> device' instead of 'struct cxl_dev_state'. Add function call to translate
> device to CXL device state where needed.
> 
> [1] CXL3.1 - 8.2.4 CXL.cache and CXL.mem Registers
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---
>  drivers/cxl/core/pci.c | 20 +++++++++++---------
>  1 file changed, 11 insertions(+), 9 deletions(-)
> 
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index e6c91b3dfccf..59a317ab84bb 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -686,9 +686,10 @@ void read_cdat_data(struct cxl_port *port)
>  }
>  EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
>  
> -static void __cxl_handle_cor_ras(struct cxl_dev_state *cxlds,
> +static void __cxl_handle_cor_ras(struct device *dev,
>  				 void __iomem *ras_base)
>  {
> +	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>  	void __iomem *addr;
>  	u32 status;
>  
> @@ -699,13 +700,13 @@ static void __cxl_handle_cor_ras(struct cxl_dev_state *cxlds,
>  	status = readl(addr);
>  	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
>  		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
> -		trace_cxl_aer_correctable_error(cxlds->cxlmd, status);
> +		trace_cxl_aer_correctable_error(cxlmd, status);
>  	}
>  }
>  
>  static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
>  {
> -	return __cxl_handle_cor_ras(cxlds, cxlds->regs.ras);
> +	return __cxl_handle_cor_ras(&cxlds->cxlmd->dev, cxlds->regs.ras);
>  }
>  
>  /* CXL spec rev3.0 8.2.4.16.1 */
> @@ -729,9 +730,10 @@ static void header_log_copy(void __iomem *ras_base, u32 *log)
>   * Log the state of the RAS status registers and prepare them to log the
>   * next error status. Return 1 if reset needed.
>   */
> -static bool __cxl_handle_ras(struct cxl_dev_state *cxlds,
> -				  void __iomem *ras_base)
> +static bool __cxl_handle_ras(struct device *dev,
> +			     void __iomem *ras_base)
>  {
> +	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>  	u32 hl[CXL_HEADERLOG_SIZE_U32];
>  	void __iomem *addr;
>  	u32 status;
> @@ -757,7 +759,7 @@ static bool __cxl_handle_ras(struct cxl_dev_state *cxlds,
>  	}
>  
>  	header_log_copy(ras_base, hl);
> -	trace_cxl_aer_uncorrectable_error(cxlds->cxlmd, status, fe, hl);
> +	trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
>  	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
>  
>  	return true;
> @@ -765,7 +767,7 @@ static bool __cxl_handle_ras(struct cxl_dev_state *cxlds,
>  
>  static bool cxl_handle_endpoint_ras(struct cxl_dev_state *cxlds)
>  {
> -	return __cxl_handle_ras(cxlds, cxlds->regs.ras);
> +	return __cxl_handle_ras(&cxlds->cxlmd->dev, cxlds->regs.ras);
>  }
>  
>  #ifdef CONFIG_PCIEAER_CXL
> @@ -871,13 +873,13 @@ EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_dport, CXL);
>  static void cxl_handle_rdport_cor_ras(struct cxl_dev_state *cxlds,
>  					  struct cxl_dport *dport)
>  {
> -	return __cxl_handle_cor_ras(cxlds, dport->regs.ras);
> +	return __cxl_handle_cor_ras(&cxlds->cxlmd->dev, dport->regs.ras);
>  }
>  
>  static bool cxl_handle_rdport_ras(struct cxl_dev_state *cxlds,
>  				       struct cxl_dport *dport)
>  {
> -	return __cxl_handle_ras(cxlds, dport->regs.ras);
> +	return __cxl_handle_ras(&cxlds->cxlmd->dev, dport->regs.ras);
>  }
>  
>  /*
> -- 
> 2.34.1
> 

Looks good to me.

Fan

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 6635B3AC0C;
	Wed, 10 Jul 2024 21:47:47 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1720648067; cv=none; b=J5a+qkL0i/GjYOl6ZOt7Gl7I3GyiKofjxMo7MgzqE+O9NuM0upvDho/wJ2y4TEJfmcD5/7Y1dQZy56TKKptKYV0xzn0Ui9RwglFcb7kHZSaX7NiAxT2GdszMXYZvOReerZfL7KkBwtNLS1nZfItrqUGgiyXSDq+bdbgwFzaz9pM=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1720648067; c=relaxed/simple;
	bh=au1e9V8nUaNL/Ed0ZbAhZWTGUGGE9KSPfdbAOqBBOP0=;
	h=Date:From:To:Cc:Subject:Message-ID:MIME-Version:Content-Type:
	 Content-Disposition:In-Reply-To; b=T1+dldNU+XG2LP8Xl4u2RA603/vP7p4Up2qsQEXeV3UXGuS9UuysNGfSacSh9YM8XPbtKaOt5jarvuGNKp1pIooFxx+VBIiHj5s3Rj0xc3Iim1X8DVO9JBWEkCXo3JpI0UAXNuvVBKOfol6oPrmdqOQ9YP5rTJNxLLsEsu+ZfDE=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=Nw8A58bA; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="Nw8A58bA"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id A27BDC32781;
	Wed, 10 Jul 2024 21:47:46 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1720648066;
	bh=au1e9V8nUaNL/Ed0ZbAhZWTGUGGE9KSPfdbAOqBBOP0=;
	h=Date:From:To:Cc:Subject:In-Reply-To:From;
	b=Nw8A58bAK2dTgAU4pJEwe1yoc1ZCAGiMNNPbhsg6m3tkzXAx+NUcu5wCyWnJxJNwV
	 v0VeaAK98uAzI+shc5onVvgjLiiJfZJnN5bAt4iIwWta8Y/+cJjtzfWcuFD/KumF8Z
	 yZCASSTZ4d08ZcblhTNHWd1ccEWqTmRuSyDRWF0MVMTTEIPc82Tdq7jNnaVQEdZT4L
	 U/AIjq9O5LHIilaIV0FIM5f8LcLLdKyTjH568QCxtYS6wTYN/MrMHrWR/XNOD6traa
	 ajM6jGVpNE/qS84l3SfP5YxM7fQR5hScKiAxPQyv3XfrDtCQE9rAvJprzb+TH/GPon
	 8ZQallWXxpEgQ==
Date: Wed, 10 Jul 2024 16:47:44 -0500
From: Bjorn Helgaas <helgaas@kernel.org>
To: Terry Bowman <terry.bowman@amd.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
	dave.jiang@intel.com, alison.schofield@intel.com,
	ming4.li@intel.com, vishal.l.verma@intel.com,
	jim.harris@samsung.com, ilpo.jarvinen@linux.intel.com,
	ardb@kernel.org, sathyanarayanan.kuppuswamy@linux.intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
	Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
Subject: Re: [RFC PATCH 8/9] PCI/AER: Export pci_aer_unmask_internal_errors()
Message-ID: <20240710214744.GA261828@bhelgaas>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20240617200411.1426554-9-terry.bowman@amd.com>

On Mon, Jun 17, 2024 at 03:04:10PM -0500, Terry Bowman wrote:
> AER correctable internal errors (CIE) and AER uncorrectable internal
> errors (UIE) are disabled through the AER mask register by default.[1]

Nit: "Correctable Errors" and "Uncorrectable Errors" are generic PCIe
concepts that exist independent of AER, so I wouldn't prefix them with
AER.  The AER mask registers control *reporting* of errors, but of
course they don't disable the errors themselves.

> CXL PCIe ports use the CIE/UIE to report RAS errors and as a result
> need CIE/UIE enabled.[2]
> 
> Change pci_aer_unmask_internal_errors() function to be exported for
> the CXL driver and other drivers to use.
> 
> [1] PCI6.0 - 7.8.4.3 Uncorrectable

s/PCI6.0 .../PCIe r6.0, sec 7.8.4.3/ since there is a conventional PCI
spec as well.

> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and Upstream
>              Switch Ports
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linux-pci@vger.kernel.org
> ---
>  drivers/pci/pcie/aer.c | 3 ++-
>  include/linux/aer.h    | 6 ++++++
>  2 files changed, 8 insertions(+), 1 deletion(-)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 4dc03cb9aff0..d7a1982f0c50 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -951,7 +951,7 @@ static bool find_source_device(struct pci_dev *parent,
>   * Note: AER must be enabled and supported by the device which must be
>   * checked in advance, e.g. with pcie_aer_is_native().
>   */
> -static void pci_aer_unmask_internal_errors(struct pci_dev *dev)
> +void pci_aer_unmask_internal_errors(struct pci_dev *dev)
>  {
>  	int aer = dev->aer_cap;
>  	u32 mask;
> @@ -964,6 +964,7 @@ static void pci_aer_unmask_internal_errors(struct pci_dev *dev)
>  	mask &= ~PCI_ERR_COR_INTERNAL;
>  	pci_write_config_dword(dev, aer + PCI_ERR_COR_MASK, mask);
>  }
> +EXPORT_SYMBOL_GPL(pci_aer_unmask_internal_errors);
>  
>  static bool is_cxl_mem_dev(struct pci_dev *dev)
>  {
> diff --git a/include/linux/aer.h b/include/linux/aer.h
> index 4b97f38f3fcf..a4fd25ea0280 100644
> --- a/include/linux/aer.h
> +++ b/include/linux/aer.h
> @@ -50,6 +50,12 @@ static inline int pci_aer_clear_nonfatal_status(struct pci_dev *dev)
>  static inline int pcie_aer_is_native(struct pci_dev *dev) { return 0; }
>  #endif
>  
> +#ifdef CONFIG_PCIEAER_CXL
> +void pci_aer_unmask_internal_errors(struct pci_dev *dev);
> +#else
> +static inline void pci_aer_unmask_internal_errors(struct pci_dev *dev) { }
> +#endif

I don't like the idea of exporting a generic PCI interface that only
does something when CONFIG_PCIEAER_CXL is enabled.  If there's ever a
non-CXL caller, it will be confused.

Bjorn

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM04-BN8-obe.outbound.protection.outlook.com (mail-bn8nam04on2057.outbound.protection.outlook.com [40.107.100.57])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 047AF185E46;
	Wed, 26 Jun 2024 13:51:43 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.100.57
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719409906; cv=fail; b=OFAddAM8PQPY+R5fy6M0oGxYsBuV121XNlkD4lSjegxaQLY9nNSoyLb+o86AYC0JZDka/ut7C285fR8QBeaEVUWfqeLGazyeNRMQlEo7eaZhynShBPWCkbTClJf8C+9CnCGg0TrncObSy8B+77jaHKu2kgZ8KLQr90sfFsVhNao=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719409906; c=relaxed/simple;
	bh=ZZ1K2yT8+Lf5DszfUlUjNVMe4SwcvBfkkluj3Mx8OOk=;
	h=Message-ID:Date:Subject:To:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=A0/AQpeEANViaUdCj5/MZo2wEZIgFw/MWXswojI96CvLtX7FsqCggpk4lzHZCdj0GZhWreof9Tz8reYShL0O7x5Z0uaThpkO97s5mte6VKC/3mgU2F4Wadokm5EUleVWzBz/8IDN/CmrUqniE054NljYgjRiDjW7Atg/BgOXYoU=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=nfflrSi1; arc=fail smtp.client-ip=40.107.100.57
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="nfflrSi1"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=bQFNWZlHEMSdcym/4594S4Zq1Utnryk0KmfbJxPCZI/CoXkBXGQzEpmN9jI2VDC5UOoqrKWYNo1k1ukV4rIK9PwVvb3Vp+goJZxDuegd0oLilT/GZ6xqK0A1QygGOzkbwBHh8RDU4zIe6vVV/3B83uTXr6mXT4EpQ24NlBQwHPL5EH3voaMEfD5nWZ77XgBX9LZUQn3EWtR3t6hRaonWulBMYSPc5+MUq+b6i7VzF13pMIAW61zEUW/5whbjrbCekix+fMV0NkK84jF5OVjNbo+ezmPUE/LseccGF/dUN7Fg9Pa2Bmp/jDhpYdQinNVQhqUe3lcy9DSVDXtL8Z6w2A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=tARQfs62cb1Byvjj1+otsc8R/OMbdd746LjEjrOhVHM=;
 b=NJ0egM+cLRYSJs/LJR7wA7ItroApGqke9quyL4oSu8UyUGZRcKnP7zfAUvns8e5Y582tg1eA41MJj8MaFcvctj/P8rYkbYAKEBro72g+B0sW2DJL0XJSztrXCNJiYD43W7ozN7ZeyfSuwuVQbLyqB9f5prOLOuDjMC0yr9Lo1Bw+WF+t6Y7jHbd/EHbV1OaGE6C44zH1wFTGH1ku/zK19sl5VfSRUbw4GT9FqD/Mch9uwT0Po/2d1OpndEGwaLg5b46AJNOXk8KfQ5X/pDNV0ezlaZyXeOWljl4Ymq6aP5XOSBIaLX7vrb4lgvfSBw4daDS0HkD2HVwSC02/QmXCrQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=tARQfs62cb1Byvjj1+otsc8R/OMbdd746LjEjrOhVHM=;
 b=nfflrSi1XbSCfFpD1Z/mCPiLyuli5/UzFTniJ52N9Exp2HLTcz7sbMioCFPhVshmTp0WWz6HissuPTTMmL6v9Eo0tukgZFEI7LLkAXOd0FdKtxex0G9Iuittiyruliso5Hf+0iLu7I4wowXLFb6aAnV3iO+5RRJVnvOezjTRkTY=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 MW3PR12MB4425.namprd12.prod.outlook.com (2603:10b6:303:5e::21) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.7698.32; Wed, 26 Jun 2024 13:51:38 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%7]) with mapi id 15.20.7698.025; Wed, 26 Jun 2024
 13:51:38 +0000
Message-ID: <cb1972a6-2bd5-4500-bd1a-518533be8191@amd.com>
Date: Wed, 26 Jun 2024 08:51:35 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 7/9] cxl/pci: Add atomic notifier callback for CXL
 PCIe port AER internal errors
Content-Language: en-US
To: "Li, Ming4" <ming4.li@intel.com>,
 "Williams, Dan J" <dan.j.williams@intel.com>,
 "Weiny, Ira" <ira.weiny@intel.com>, "dave@stgolabs.net" <dave@stgolabs.net>,
 "Jiang, Dave" <dave.jiang@intel.com>,
 "Schofield, Alison" <Alison.Schofield@intel.com>,
 "Verma, Vishal L" <vishal.l.verma@intel.com>,
 "jim.harris@samsung.com" <jim.harris@samsung.com>,
 "ilpo.jarvinen@linux.intel.com" <ilpo.jarvinen@linux.intel.com>,
 "ardb@kernel.org" <ardb@kernel.org>,
 "sathyanarayanan.kuppuswamy@linux.intel.com"
 <sathyanarayanan.kuppuswamy@linux.intel.com>,
 "linux-cxl@vger.kernel.org" <linux-cxl@vger.kernel.org>,
 "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
 "Yazen.Ghannam@amd.com" <Yazen.Ghannam@amd.com>,
 "Robert.Richter@amd.com" <Robert.Richter@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-8-terry.bowman@amd.com>
 <45270079-6aa2-4530-8649-87bd5765d74b@intel.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <45270079-6aa2-4530-8649-87bd5765d74b@intel.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-ClientProxiedBy: SN7PR04CA0165.namprd04.prod.outlook.com
 (2603:10b6:806:125::20) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|MW3PR12MB4425:EE_
X-MS-Office365-Filtering-Correlation-Id: 104d7227-a7e2-4852-6eb4-08dc95e71983
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230038|376012|1800799022|7416012|366014|921018;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?L2Y5RHdEZFUzWEVwQzY5OG51aWl0aW13azdwYnEzZml2VGo3TzBQZVZlVzQ0?=
 =?utf-8?B?QVJRcmsvaFczcnA3cUE3cldEQm1MZEJLSFRLOGlWcFBGbkk1YTM3eklsVVFm?=
 =?utf-8?B?aVVOVEYyL2FyRUp5UzJNYXIvTFZvYW9hMEx0QkNHT0YrWU9vSkMvNm11ZWEy?=
 =?utf-8?B?UXlxcE1rYVNXaFc2dVd5NVdRMUU1VW9MdXUzWU44ZkdqejMxYXozbkNocGxz?=
 =?utf-8?B?KzhwNjBSUW1JdU5WcDNwWVgvc3dGNVpoQXdvWEh2WTV2WGpRN1hDelhUM3py?=
 =?utf-8?B?WTgwZzU2SnIvd3ZOUXBqRGtWbkJHUUtLQVRPVUE3NHhpcHRacmpQS2V5TE45?=
 =?utf-8?B?YXQrRlR3QWpHZTlrcXBLRW1FT0NWdGVvMzI2ZytUbmRKL0xJVXpHVXBFZGFU?=
 =?utf-8?B?T0RFYW1EcDAzVDhQdkdDQ01TVzJGN2Z3WklxczB2V1o1THhPQ25vRU9FcUxm?=
 =?utf-8?B?RC95NHpjN3R6dmVvQkJOQVY4cEUrbzlNNktYYVdqNlB0OC96Zk1lb2p2WVpZ?=
 =?utf-8?B?RnpCeUNETjJrZXZlY2lGaFJlZEhieGpwRXh0MkpDOS92ZWZqdnF1cUc3aVJp?=
 =?utf-8?B?c0FYUUZyMEhXVnRJcGNHeDJrSW1SVk1xb2x0UVMzTHMyR21kRU1yVEhGWVpq?=
 =?utf-8?B?aWYxcU9nbkUxbUpQTXptYzJmWkpxNzhqSjZzdW42VGNWemVQdllUaDFMbk9x?=
 =?utf-8?B?WkRSMDlrS3ozY3pNV1h4a1hqa3lSTVF6Q1VjYS9GdXRYNDJEc0FZSWpsd09I?=
 =?utf-8?B?czBUQlEvN1ZJcnlPRUZsWnlHL3BibUUrLzN3ckdpaUpvc28zWHd6TWZzYSt1?=
 =?utf-8?B?ZUNrZWZaSVpaL1lVcXRIUHNDeThSTEZBVnpoNWI3NUxXR2xuQ2E2aXkwbSt2?=
 =?utf-8?B?SWZQYjd1NHB0KzZvM0RVVEdhKzZ0ZDYvbkNQOHpVZnhBcFFBM05lbGlhZjFj?=
 =?utf-8?B?d003aWFQQlJUeDVnZ2pHaHo3Vm9uZ2l6U0NIRjIzZXRXNTNhR2dqQjBQRlN4?=
 =?utf-8?B?QTV0ZEo2RjV6c3YvcE1oNTlvbHRRYkdGTHhLSno5OFRpMkZhTlVlVFFCMWxk?=
 =?utf-8?B?R3ZBMGlRd2Z1NEJBUHM1djVrc3F0UE5sM3FKN3IzOXErWFg4d3luWk55cU9y?=
 =?utf-8?B?cGRUWmxJY1RNSmUvbFdXeHVNRGhnT1h0OG1jU0pZYXNGN01UdlRTMWFyTzYy?=
 =?utf-8?B?NUUxWHBsTnZWU281Z2MrUUhDUlYya1l6YnptWkM4K1p0LzE1UVl4VjUwcUwy?=
 =?utf-8?B?bWhaRjFSbWdmZXJiNVYyZWx1dUY3NnRaaldKRDNGbkNoL2xOTnR3dHNUbWo2?=
 =?utf-8?B?RnEzbnVGYWJnSE9jM0hubzhiNEJNTkVMdGU2Y0RtYmNwcTMvUVBzZDdzL2RR?=
 =?utf-8?B?YnNYNitCeU9ZUGkwWEFVYjN6L1RXeWJtVlQyang1WnNaMmg5RDZtNGdwLyts?=
 =?utf-8?B?SXdodlNYNHFIMFRVZ3JNUDhLRjlsMkVyR0lBS3FLUGFRREpnNzA5SmZRVmtK?=
 =?utf-8?B?a1NzclYzYVoxOFB5cWhteW5NUExZRTVNVjRhSkdPMTgyTGZZdHp3dEN2aHkz?=
 =?utf-8?B?Slh3cXpvZW8wSnhIcXNRVXBSUkNIRHRHV0hPbVlzeTNVNnRiOGNybCt0OUY1?=
 =?utf-8?B?ZFFzczhpZzRhZXg1d0d6R01SY3c1S1RjYkpPbUsrM1d2eThCZXNVQVRFNTdD?=
 =?utf-8?B?elJDNSt4Z040NU5wWUhZcCtqTDh6andTakhiWTE2RlRtb1RyRjVYK2VIMXRP?=
 =?utf-8?B?YXNGN091dTR1WTM4ZHhPRzZPR0NENk9GS1R2cmhySXdoUHQ5RFhmYmxFUjVq?=
 =?utf-8?B?YW1Ra3Z2eGdNVDhjUG1YTFBZSnFPWjQzNnJBelpwSDdjVXNqQ0tFYmN0d1B3?=
 =?utf-8?Q?o1sUWeeVaa7gO?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230038)(376012)(1800799022)(7416012)(366014)(921018);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?dG5OTkhyanNuY1RTTldDK2FCWHlHZnJwcHEwYmZOSFFneHB0WkIwZVVXMzE1?=
 =?utf-8?B?NUcvbU9lcDU4RlFxckVmVlQ0MmQyb2twM0VtMUYxUWRZR25uMHJIbWhKUEJP?=
 =?utf-8?B?Z2pYUTVFNmhSVUJkWE1XWkgvRTlKYTlIOUxVaUlPOStpSmo3YkNQZlY5U2pZ?=
 =?utf-8?B?ZkNzcEpTOVNTc3U5dmZhcWsyRTlKMit3UzFWRUdEbnhrUG5HRFdXWXdOMHRm?=
 =?utf-8?B?RUlaUldGVXBxV05oblZDVThmZUVWeGFwYm5WWHk3QUZuK0RlNnVlREU2Q2JE?=
 =?utf-8?B?MWQreWJzTzgvT2dFdW5rWjVDVDJwaU42YkpkRWFBRWZuRTVkSjdackdSV0F3?=
 =?utf-8?B?VWNkVWJ1K2VCczRhOGtSZnRta3B5Rlg4anhZcnhNalVTdjk1UzlQTWNqMm5u?=
 =?utf-8?B?aGw3aGlZZSt5Nk9lWmdQd1pZNXgvNFJqcEMxRmVPYW1CZjJvRUZkYlI5ZVhS?=
 =?utf-8?B?amROYThFOFRDNkJFYlp3ZlE3ekk4QXhjU3g4UGlDdU5lMDdBOGpKMFZjdG1J?=
 =?utf-8?B?bEVJSVhrdE9yVGQ3M0o2ejJ5MTMrQThaeW54VlVaWk8wYnpUeElwYXcrOVZ6?=
 =?utf-8?B?WXZtWmtLTEhZOUZOaGdlREEwUTRUbHJGQnd2WFlXdXM5MGlKaDZBc0JMN1RZ?=
 =?utf-8?B?NXNLV0E1OURjajNJQjk2dkc1a3ZGTTU2S29MWUQzZHFtNE1LMzJJd2Z6MnZI?=
 =?utf-8?B?dmVqZUxJc1RhTW5mdm9GVDE5UTQwSCsxdnR4bUhhOE1UMWhyZzYwZWE1bEgz?=
 =?utf-8?B?WnJSWThCdnYvSzBpa25FTHh2ZEtUZ0FMdkpZeCs5VTNBbUg0bk1DVmRiM01j?=
 =?utf-8?B?c0VxQUUvN25iNCtVMm10Q0pwRUpOVnhzWXh4TTd2VjZIY2tWMVpxUkFwV2w4?=
 =?utf-8?B?dHQwQ2RJM05Pcm9KSGxyMEYrVVJ2eW9HSUx6T1NWT2FlQWlYNDlIYzltOGto?=
 =?utf-8?B?VlJPeHc3eVRadms5KzJJSmFaZkxzVUw0dThXUFYwM3NhVDlSZ1NPb2dRQjBN?=
 =?utf-8?B?MnhaQkc3L0YxamxQZG84bnZMVURKUTJjR2NvNzE3ZVJYZXBlRFRhSFI4RU9H?=
 =?utf-8?B?SFRDZFpNZ29YVkFQVmJDNXpIa1RyTzFVSThLRC9STnZKbEg1aXFsbFdVZ0th?=
 =?utf-8?B?V2dudlUvMEZGdGNKeGRUYWJaSGNjR0hnWHRoMlNKWlNrWmd0TElqcThJbnp3?=
 =?utf-8?B?ZmwrNDV5TFZCTFg3Y3UxWmJEbGV1UEp3VlJKYlVxNk9XV0pSSTRtVERtdkxM?=
 =?utf-8?B?RWlVTW4xRWZKNHZDdFQyeVgxQTlnUVNEcE9rNzNKQUl4cVFBbE92SXgzL0Iy?=
 =?utf-8?B?eml0dER1a08zRjI0akRJK3hSWmRFdSt2bnYrZFdEcTJ1WDYvOVRqc1pFNVhF?=
 =?utf-8?B?aFBIUzlHeWZlOXVaWjQxaDQvN0JPQUttcUxid3V0M0xyVWwrWkt1a0VlVGRv?=
 =?utf-8?B?dStGYU54R2RUYTAxTmJBcGRSWTJiS2MvcmxnR3diaisrOVhKN1NpR3lDWG96?=
 =?utf-8?B?TWwwZFJaVXM5OGhNek5NbnFBc3l1dzNPU2NGNHVIemU4QmNOSzlkYVhiUmgr?=
 =?utf-8?B?TTVON1dKaXQ3aEZodUFhdnVqalBzSnlkMXp5SzVwRld0M3JLV0FYcUNGQ2RL?=
 =?utf-8?B?OFpSbmNnYy9hcmEwalI1ekVaNDkwNEl0L2N1U3pHMlE1WUE2bUdKZHVDYU5I?=
 =?utf-8?B?aTNWTzUxTGpXTWhBbXoza2JwUjYzc0RKN0VUcHBoVlFWZGFRS3k5allTc3R3?=
 =?utf-8?B?L3d0VTRzSEF0Mmh4cllRSnVvRHFMTXpwNHlja1hsRnhjNktVK1NZTmtpS3g2?=
 =?utf-8?B?MjJLY2NTd2p2VUFJMUxrSTZPazYxZ0FIT2ZNaVB0M0dvN0Z3bVFQdXJyeVcx?=
 =?utf-8?B?dWxhaC9YdlJ0RnBQV3dFS2M2dm11dHJ6UXNiNWhXbmFQOTk5NGs0eXFDanUy?=
 =?utf-8?B?M0pjbi9UZmRtZENDQ2U4cHVHU2dxNHRPelJuR2JqSUZUcExZWGdSUngzUFEv?=
 =?utf-8?B?Z08raTlBNmU4cHFMSEVCZ0xCUXhVUitpeDhwS3ZubTRJM1hLUkwwWjR2QjVn?=
 =?utf-8?B?USthM3M3K3NvTnlLRjZlbGFZdGN1WFpzUDYyWDN1TlRIRlpHN3UyZHUvei9E?=
 =?utf-8?Q?DiXXqYdE8gIPTQUA5B+0LoESL?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 104d7227-a7e2-4852-6eb4-08dc95e71983
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 26 Jun 2024 13:51:37.9087
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: bo8uZSv0bkqIOYpVhB+smIXSeanI9THVXJvKmIEv+fj8Ftv7AIC6kF4QfD6Inl1MzcEQSQItyI15zsjz8xruFQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MW3PR12MB4425



On 6/26/24 01:22, Li, Ming4 wrote:
> On 6/18/2024 4:04 AM, Terry Bowman wrote:
>> CXL root ports, CXL downstream switch ports, and CXL upstream switch
>> ports are bound to the PCIe port bus driver, portdrv. portdrv provides
>> an atomic notifier chain for reporting PCIe port device AER
>> correctable internal errors (CIE) and AER uncorrectable internal
>> errors (UIE).
>>
>> CXL PCIe port devices use AER CIE/UIE to report CXL RAS.[1]
>>
>> Add a cxl_pci atomic notification callback for handling the portdrv's
>> AER UIE/CIE notifications.
>>
>> Register the atomic notification callback in the cxl_pci module's
>> load. Unregister the callback in the cxl_pci driver's unload.
>>
>> Implement the callback to check if the device parameter is a valid
>> CXL PCIe port. If it is valid then make the notification callback call
>> __cxl_handle_cor_ras() or __cxl_handle_ras() depending on the AER
>> type.
>>
>> [1] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>>              Upstream Switch Ports
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> ---
>>  drivers/cxl/core/core.h |  4 ++
>>  drivers/cxl/core/pci.c  | 97 ++++++++++++++++++++++++++++++++++++++---
>>  drivers/cxl/core/port.c |  6 +--
>>  drivers/cxl/cxl.h       |  5 +++
>>  drivers/cxl/cxlpci.h    |  2 +
>>  drivers/cxl/pci.c       | 19 +++++++-
>>  6 files changed, 123 insertions(+), 10 deletions(-)
>>
>> diff --git a/drivers/cxl/core/core.h b/drivers/cxl/core/core.h
>> index bc5a95665aa0..69bef1db6ee0 100644
>> --- a/drivers/cxl/core/core.h
>> +++ b/drivers/cxl/core/core.h
>> @@ -94,4 +94,8 @@ int cxl_update_hmat_access_coordinates(int nid, struct cxl_region *cxlr,
>>  				       enum access_coordinate_class access);
>>  bool cxl_need_node_perf_attrs_update(int nid);
>>  
>> +struct cxl_dport *find_dport(struct cxl_port *port, int id);
>> +struct cxl_port *find_cxl_port(struct device *dport_dev,
>> +			       struct cxl_dport **dport);
>> +
>>  #endif /* __CXL_CORE_H__ */
>> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
>> index 59a317ab84bb..e630eccb733d 100644
>> --- a/drivers/cxl/core/pci.c
>> +++ b/drivers/cxl/core/pci.c
>> @@ -689,7 +689,6 @@ EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
>>  static void __cxl_handle_cor_ras(struct device *dev,
>>  				 void __iomem *ras_base)
>>  {
>> -	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>>  	void __iomem *addr;
>>  	u32 status;
>>  
>> @@ -698,10 +697,17 @@ static void __cxl_handle_cor_ras(struct device *dev,
>>  
>>  	addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
>>  	status = readl(addr);
>> -	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
>> -		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
>> +
>> +	if (!(status & CXL_RAS_CORRECTABLE_STATUS_MASK))
>> +		return;
>> +
>> +	writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
>> +	if (is_cxl_memdev(dev)) {
>> +		struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>> +
>>  		trace_cxl_aer_correctable_error(cxlmd, status);
>> -	}
>> +	} else if (dev_is_pci(dev))
>> +		trace_cxl_port_aer_correctable_error(dev, status);
>>  }
>>  
>>  static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
>> @@ -733,7 +739,6 @@ static void header_log_copy(void __iomem *ras_base, u32 *log)
>>  static bool __cxl_handle_ras(struct device *dev,
>>  			     void __iomem *ras_base)
>>  {
>> -	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>>  	u32 hl[CXL_HEADERLOG_SIZE_U32];
>>  	void __iomem *addr;
>>  	u32 status;
>> @@ -759,7 +764,13 @@ static bool __cxl_handle_ras(struct device *dev,
>>  	}
>>  
>>  	header_log_copy(ras_base, hl);
>> -	trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
>> +	if (is_cxl_memdev(dev)) {
>> +		struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>> +
>> +		trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
>> +	} else if (dev_is_pci(dev))
>> +		trace_cxl_port_aer_uncorrectable_error(dev, status);
>> +
>>  	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
>>  
>>  	return true;
>> @@ -882,6 +893,80 @@ static bool cxl_handle_rdport_ras(struct cxl_dev_state *cxlds,
>>  	return __cxl_handle_ras(&cxlds->cxlmd->dev, dport->regs.ras);
>>  }
>>  
>> +static int match_uport(struct device *dev, void *data)
>> +{
>> +	struct device *uport_dev = (struct device *)data;
>> +	struct cxl_port *port;
>> +
>> +	if (!is_cxl_port(dev))
>> +		return 0;
>> +
>> +	port = to_cxl_port(dev);
>> +
>> +	return (port->uport_dev == uport_dev);
>> +}
>> +
>> +static struct cxl_port *pci_to_cxl_uport(struct pci_dev *pdev)
>> +{
>> +	struct cxl_dport *dport;
>> +	struct device *port_dev;
>> +	struct cxl_port *port;
>> +
>> +	port = find_cxl_port(pdev->dev.parent, &dport);
>> +	if (!port)
>> +		return NULL;
>> +	put_device(&port->dev);
>> +
>> +	port_dev = device_find_child(&port->dev, &pdev->dev, match_uport);
>> +	if (!port_dev)
>> +		return NULL;
> 
>  seems like just a bus_find_device(&cxl_bus_type, NULL, &pdev->dev, match_uport) can replace these find_cxl_port() and device_find_child().
> 
> 

That would be a good improvement/optimization. I'll look into making that change.

>> +	put_device(port_dev);
>> +
>> +	port = to_cxl_port(port_dev);
>> +
>> +	return port;
>> +}
>> +
>> +static void __iomem *cxl_pci_port_ras(struct pci_dev *pdev)
>> +{
>> +	void __iomem *ras_base = NULL;
>> +
>> +	if ((pci_pcie_type(pdev) == PCI_EXP_TYPE_ROOT_PORT) ||
>> +	    (pci_pcie_type(pdev) == PCI_EXP_TYPE_DOWNSTREAM)) {
>> +		struct cxl_dport *dport;
>> +
>> +		find_cxl_port(&pdev->dev, &dport);
>> +		ras_base = dport ? dport->regs.ras : NULL;
> 
> Need put_device(&port->dev) after find_cxl_port(), use scope-based resource management __free() here should be better.
> 
> 

Thanks.

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-MW2-obe.outbound.protection.outlook.com (mail-mw2nam10on2066.outbound.protection.outlook.com [40.107.94.66])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id EBA911850A6;
	Wed, 26 Jun 2024 13:40:05 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.94.66
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719409207; cv=fail; b=JrLNj3pnsGzbkWO+gJb9asHHJsdAzSryYcCoI8dLq7jEVNpfs0xQPG9k2fWwKDmvbx8ZiFI7jlFXUK2W4ks3L3RHiIH7001MceKPhS4ncGCHvzTD7gPh7uhc7z1USzU0MXF6LH1VyvbC29gIcZ9AJQoABD5LDDzHiTD3A9of1So=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719409207; c=relaxed/simple;
	bh=M4HB0t0wYauoC/jZ31op0mwDO67GMXmPulNVCbLFBzM=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=SFz4iioRDUUD386l50I9DEURIH0cBwUvTenzOg8l9/v6vDNBGoFZib6bckVY0fCCP/1UmfnaNWD4zvvybg9Z+Oa2wT8YPpPSmbz96MUkVuqzpFPC53OwlSCOfzHmp+EY3SwstEQJLjW1kwLardj9Qu2x2V2Gs6EWQZCOowtwi9U=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=f4GghCfb; arc=fail smtp.client-ip=40.107.94.66
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="f4GghCfb"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=lA32gIrT51JYQelzz/ds4vPi21d0s8VsHuwZwDjqmaNEreFmlPOAz5I2iSN304FMl9bKBVXGj5afY2Mze4U2x6WM8ivu8lYDKqa+V3xd5pSEMScCEwmb8CEt/qce7okOUFuHu+gP3Z49/dod0H5QBnihXMt0a54gh5q/WYF/+WrsU9IxceMSRZAStw+z8iThRp7Ye1Rx7gLdpKpH6mvcR5zb3IBMjjVQgdve0bVq+TjkKfgtPPcML64SfORRTdnb/dCcMVrXR5CjGB2ALvptvQVR0jCmg6gtnpxOPaM/vSDWkRCLWbIw/h9I6d7bvJ1JXgbXSyXWFLcFhqGqZontDA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=fLAtXGFxVtCXZRPlXF5DGkimhz4+JqUBDQf2dY26IRo=;
 b=bZexS1TpCFEBIKYh1g/6nLTH+Pl+8AdUDpu52ZDZKoi9iQgkqImdN3+RL8WcuzPkgEFQTiGL3bWkYKKjp4WO+j0gucCl3Mgzq/yMTbBpsIIm8kQQuohGgV0bLSeGCnf5H8L0qC+e+fxjPOGetDgYGhiB7KGValvRZuzS9H08Z8V0eooQhFG+mFIlqkVvyVdjEkG8hK6EKS+yrQLL3w02VAad2qwp4wukiZTOwY7nXGhqrfEoeTvSrH98NrBmAmBVlF1lAht30JDUItW1EElKiG8ikqsSB3QM5qysmVhxZ+YJpXwRp+SG5VEDFITYQurj+h+zHW3KpLSdkwAk0KLtEA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=fLAtXGFxVtCXZRPlXF5DGkimhz4+JqUBDQf2dY26IRo=;
 b=f4GghCfbkPYo+Lwz+9mp2QlFeaJn21JmkOmTGQzWzWKzsXAijAaHwyKF1Tsw29ntlfK8BswuDJeiBG7VkuSVQdDSPjmuStMpKOmwoxobfEVnpjIdnOi/rdVVoui6SJzp0+Q/R82z6eepstDJ6an+rx8wSCKmauCttemG57+1hJk=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 PH7PR12MB7378.namprd12.prod.outlook.com (2603:10b6:510:20d::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.30; Wed, 26 Jun
 2024 13:40:02 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%7]) with mapi id 15.20.7698.025; Wed, 26 Jun 2024
 13:40:02 +0000
Message-ID: <89bf0d37-5b13-4527-b9de-a2773e0259f4@amd.com>
Date: Wed, 26 Jun 2024 08:39:59 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 3/9] PCI/portdrv: Update portdrv with an atomic
 notifier for reporting AER internal errors
Content-Language: en-US
To: "Li, Ming4" <ming4.li@intel.com>,
 "Williams, Dan J" <dan.j.williams@intel.com>,
 "Weiny, Ira" <ira.weiny@intel.com>, "dave@stgolabs.net" <dave@stgolabs.net>,
 "Jiang, Dave" <dave.jiang@intel.com>,
 "Schofield, Alison" <Alison.Schofield@intel.com>,
 "Verma, Vishal L" <vishal.l.verma@intel.com>,
 "jim.harris@samsung.com" <jim.harris@samsung.com>,
 "ilpo.jarvinen@linux.intel.com" <ilpo.jarvinen@linux.intel.com>,
 "ardb@kernel.org" <ardb@kernel.org>,
 "sathyanarayanan.kuppuswamy@linux.intel.com"
 <sathyanarayanan.kuppuswamy@linux.intel.com>,
 "linux-cxl@vger.kernel.org" <linux-cxl@vger.kernel.org>,
 "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
 "Yazen.Ghannam@amd.com" <Yazen.Ghannam@amd.com>,
 "Robert.Richter@amd.com" <Robert.Richter@amd.com>
Cc: Bjorn Helgaas <bhelgaas@google.com>,
 "linux-pci@vger.kernel.org" <linux-pci@vger.kernel.org>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-4-terry.bowman@amd.com>
 <6b1bf5ab-0005-4c88-99ec-92edca828f44@intel.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <6b1bf5ab-0005-4c88-99ec-92edca828f44@intel.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SN7PR04CA0201.namprd04.prod.outlook.com
 (2603:10b6:806:126::26) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|PH7PR12MB7378:EE_
X-MS-Office365-Filtering-Correlation-Id: df3efb0a-c28d-4f34-325e-08dc95e57af3
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230038|366014|376012|7416012|1800799022|921018;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?bm1BZGJvRlV2QjJYZlNFVXloYnlhUGN3MXpkYVJOT0ZHajlGK0lsejNuTDcz?=
 =?utf-8?B?Q3JjcXEwS0xQTjJFVGhVMk40OHpTZ0k4cmd3eEFrR3R2YmxGbDNZaDJ5YWcz?=
 =?utf-8?B?NE9DVytXQjJURmx0bU8zL3hId0xqK1RBRlZkQkZxMXZIa0NMREZUVHVzck9Y?=
 =?utf-8?B?dXdiYzdiVHV4ZStOM2Z3OVVTWWQ3Y204cjFEQmgxNEV5bzlFQitkU2hGZkFu?=
 =?utf-8?B?Q1FYU253VTYxQTlQbE9Hd09CVW9rcTJwUFViamg2MlByZzNGRUYvVTk2V1NU?=
 =?utf-8?B?WWFuNWhnaUtqOUhlNm5oWHRuVGkyL2VyQjNwQ1BxTEd2Ny8wZThEVEk4ZzV5?=
 =?utf-8?B?V2VrNTJCV2owbUJmRFJUTmJMYVhpVTFZNTBBVDlsbjNHZE5GMzh4eGZjcjBP?=
 =?utf-8?B?ZjFPRXhKMmc5bTM5Tlh1a1FaQ3NNd2VWZlFnNm9QcXZjdURWYWpqUDY3b2FG?=
 =?utf-8?B?UHZZNzFFZmx0VjFxUC9MRHErUXJQY29OdE1VRGpPNUhESk13SXR6S3ZxenF1?=
 =?utf-8?B?b2sxYUJTVmJ5SlY3djZySzJsMXplSGVrck9zTjNHUWFjRTU4UnFqUFZpSXZN?=
 =?utf-8?B?cEppS0V6T3g2c1lRVUpjaVVULzNkcER3SXdaRUtqcnNuUVZyMmtadXp0QlIz?=
 =?utf-8?B?YUVGNEd3OHBDTTZxUXAwVGtJUDliMlFSaG9vVW1OZlVIZldtNnpwYkYwVlpt?=
 =?utf-8?B?MENkZlQ2QnJIQU9va215alhSQmgrZGIxZ2tzakxOU1pqSnlNU2RmU2sxeGM3?=
 =?utf-8?B?TWxmaVdXUllzbTlsVE8zRHdMTUIzc3pVQkFzcWFmSDRWdS9JVHMzUTl2b09G?=
 =?utf-8?B?cFdvcmNVam81NDliUVdKU3EyZUdzaGswdHJMZTlkbStheVNvb0pQM3k0c2VF?=
 =?utf-8?B?dkkzUk84MHBVM1c5eW9ZMm1SSGdGa0tJaHhydGtPL29JaW85d25kYmdxZmN3?=
 =?utf-8?B?SGcvc2R2c3lsN1hKdUZDdjZRbGpBWjlUbEpWZi9SYnJ5ZUdYMU1SU09hVytT?=
 =?utf-8?B?akdIclE0Qm1FMWdGSGQ4a1V5WmNnSlovM0FrQnN2ZmF4TWc4ZElwL0NHSEtE?=
 =?utf-8?B?dGxNeUZBRERtWXZVT1BsdEhxOFZlS0g4azdVOVlEQVNlTm1xZFJVWFdkN1Rw?=
 =?utf-8?B?bHE3UktKYkNQSzU5KzRHYkVKVTBSM2U5ZUpWMnQzOVp4dWxVSkZHQlJybjl2?=
 =?utf-8?B?Y2FDYjJIZmNwa1FpQlBJTGI5RW8zUUFkRWRnTEREcUx1V1h1aEJzVUc2RnZW?=
 =?utf-8?B?MHFBYS9RNGxWSHkyN0hBOXpwM1gxeDBaK09VdjkvK2M0amh6MHpNVXVFblQ5?=
 =?utf-8?B?NlI4RVhSNitGVGJMc3VWbXFQL0xEU3o0Z1lHTldkcDkrYTdPQXNkMXlNRjhn?=
 =?utf-8?B?QVJlSG1FUmp3UUpIbkpzUTlVMmw1OUxTRGNKbFpBQS9Bck54SVFoR3h3ejR0?=
 =?utf-8?B?VEE2MnQ0VnpGelEzTUZub2tFai84UDVoMWJDWCs5Tjd6T2VOWHQ5NDlVWmpG?=
 =?utf-8?B?WW4ycEdZUU9mN1dIb1J6K2ptWmE1REtYcmVMS2RxVXpYM2J1RVJnamZYSGtq?=
 =?utf-8?B?WStzZEhxYzFSck5uQ0pnSmtEbWR4b085Mi9UckM2WVg0RXlGUFZnYVB0UHgv?=
 =?utf-8?B?UW0xaldHK1h4L0R2YjFrY0wyNVQ0OVZReFR1T1RLdTFZeDhmeHI3a2F1S2Mr?=
 =?utf-8?B?NmZmTk9ERnJyT2JCNUg5eFNzT1g2THdlaFBhMzJ4NTUxWXBYWlVDeUgrL2U1?=
 =?utf-8?B?RXJ2WkdBWGRtVnFFaTgxeGZpRllVY3l2WXk2NVdid0I4N053NUE2U09adTVR?=
 =?utf-8?B?dEh5V2wrZ2lSb3NyOFlZSEUyVDNMRXZwRS8rRUt6eDBKcXhoL2lEZXdCNXBT?=
 =?utf-8?Q?uWE4tr2bS82B1?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230038)(366014)(376012)(7416012)(1800799022)(921018);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?L1AyVnUyU3FMbENSa2dzTTFPdGRteERueEh3b3VWTXJWZ2ZwSjJSaU43V1Jy?=
 =?utf-8?B?aEFRZVNSMUdaRXpWWjVsekR4cDhDZXVSWmpvV2xpWGdnU29pTFFIbi92MVFr?=
 =?utf-8?B?L3B6Y1lEb0ltYzNIbHlGSHlBRFg0b3R4TWUyb0lLN0dSVGhsQjh0M2JHYzl4?=
 =?utf-8?B?M21IYjdWbVZUb1FGV0FvOEJhbUlMVGFmZW52bVh4RDhsMFVFc05TcERQVEdZ?=
 =?utf-8?B?WkYzOVNXc3JtWEhkUXJ4dVVmRmJRdXcydCt6OE9OMVU1YVpBVHYyWTRtOWhV?=
 =?utf-8?B?S09UaUtnWmxDTjRGZGN1MmQzY1VKS0xmU0tFcWtvUTVNb2kvZmhGWkorOXJ5?=
 =?utf-8?B?U3pKWkFFS2lERFo3NXhQN3JLYk5qRU5OYi9JYkMxWCtKWHZnZGhlVDBUUDFU?=
 =?utf-8?B?Z1VkaXk2OXF5c0ZtVzVST1lseVV2dmwrOTgvZTgrd0JvSC80aml3ZzBtNUxB?=
 =?utf-8?B?UWM0ZWtLK0J1UzNkNnJ2WEVLOXNWVWppZ2ZleTFRQWZhRXh6bTVIWW50STlm?=
 =?utf-8?B?Qmx2QmJDUjZpbnhkekRBWHgzM1BvWXIxb1NwSkJ2UEhDanJIVmFCbnhEYzhH?=
 =?utf-8?B?VjZMWm85Q3FjakVpT1duSTRuY0V1OGY5WW9SalYvS2F2WE9MdEx1OUdYdm9m?=
 =?utf-8?B?QzByQW5rMC9sWW9lcHJ1S2VjVThHS1BscE1RSElwM1h6S1RlempJQ1lJeGw4?=
 =?utf-8?B?MkdERTlZNG1IZ0twa2dkZlpaeDZYcVVXU2xMVkdRUURTM0NhRm9xTkNNR1JX?=
 =?utf-8?B?YVhQU0w1dEJGOHE2OEJHWHhyTUdIanUrR2FQMWhGRFRqTDBxdU9CNG41NSts?=
 =?utf-8?B?SUkrd2hlditYQzJFb0ZJZFNMRE5vSnpCRmxPcURFU0FoaDF5MkNjeTdyZm9u?=
 =?utf-8?B?Z0wyUktqZXA2alh2Z2NDTUhwV1VqOGFlbG84NVJhWjJJd2pqbUdWNmplNldM?=
 =?utf-8?B?ekh1d2dVVExZM0NpZEhLMXV0RlI4UnVzMExZaWZQdUJyUWlxeXRRZWlFcXRr?=
 =?utf-8?B?Z0xRamhuQ2g2bVlyN1dwOERFdEVWSWltZDI4L0ZubXVGd2txK0RGWFpUcG9Z?=
 =?utf-8?B?SzRKdUpadlpINTMvalRaRFAzdVlaU0swNk1EaXdqYUsyQ3ZsaEV4YzEvRWJG?=
 =?utf-8?B?U3FJN0dUWlRRNmU4bXR5ZHFVblZYRGN1YkNCaHhqZXovVk04NW14RDZiVHQ4?=
 =?utf-8?B?cnJKQm9PUUJNNWtxOXk0cGlMaDVaa0FCSEcyR0M0VEo3ekVpeDhBMEtEWC9U?=
 =?utf-8?B?UVppbm1Odld6b0Q1Z0hnNlRFSC9aMzJBb2kwVWllNUJlWmErM01pT2t3VTRX?=
 =?utf-8?B?TFdoTjZlb3ZMdXRvSFJMaDJZTU56UUtVSnQ0QlY4cG44MGVQYWY5bXRGbWtV?=
 =?utf-8?B?VmxVdlQzWWUzWlRaWVBwVWJLaDhFdmFIVTkrU2dXQkVBWWI4WlBQam9BcG82?=
 =?utf-8?B?ZGlZVG9Ta3JtT1JvTEtIVDBDd1F5OUNIbWdFMmk1Q0Z5ZlhOVUdVMXEzUzVR?=
 =?utf-8?B?VkVkbm1ZcjRSVE1TRFp1ZEFRTDNuVHBMUUl3eGw3WEIxS3I3MGJBbnBVdVlY?=
 =?utf-8?B?UFFya1JMRDRqTnJBNzZoR1BMeEY4bzdyemxNTEFoTlVERFNQcjFObm05NlR2?=
 =?utf-8?B?Wks1aXlEN1M3YW9vNnlyTExDdDlpRERIRmVkRUhvaFNJVit3UVcwRUhEeXdt?=
 =?utf-8?B?d3Q3ODVTWit1L2VEM0RpWFhmSUQ2WCtvR3BQV25HNDhBQW0rWXdvRUg4RGZU?=
 =?utf-8?B?c2hYd3cyREcyRERwRkF5VDVDdmFlZ0ZCK1dxc25YMnozWWhJbUpzUkV2RGJi?=
 =?utf-8?B?YlZxWVZlc3FaRUUzV293cmlTcVFpL0dtYWZ4U2J3cllvaGRiSUMvUzVRbmY3?=
 =?utf-8?B?bzRJNzVxQlhqSmNxbjVNTFRsbFlISjRQcmlaVTRPZHgwakNJbVV5NlpzK0F2?=
 =?utf-8?B?THhvQnVtOWF3b2M2NDZQRUZHNEkwemw2UllLdnRON0hPNEJtZEhRL2pLckIy?=
 =?utf-8?B?eG1pVlBGTU0wN3lxTVpDaWRUT2V1TUpOS21jTGFRcS9tdHVOM05oRjA5UG1l?=
 =?utf-8?B?Y2YvZnpsUmdlcTBaaUNSVkZGVm1OODZpOGZ5Qlk2Q1JWQWgwQ1dXTHBrazNE?=
 =?utf-8?Q?jbUz91HzDA26WJiK1qgj9hr9y?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: df3efb0a-c28d-4f34-325e-08dc95e57af3
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 26 Jun 2024 13:40:02.3943
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: dH67sAKGs2oiHPB31gHBuChnF9haDtIFoFf0r255U78gq0qySd8VLP0JcDEEbCMEWzl/1kVZSzSnrC9DVniHkw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH7PR12MB7378



On 6/25/24 21:54, Li, Ming4 wrote:
> On 6/18/2024 4:04 AM, Terry Bowman wrote:
>> PCIe port devices are bound to portdrv, the PCIe port bus driver. portdrv
>> does not implement an AER correctable handler (CE) but does implement the
>> AER uncorrectable error (UCE). The UCE handler is fairly straightforward
>> in that it only checks for frozen error state and returns the next step
>> for recovery accordingly.
>>
>> As a result, port devices relying on AER correctable internal errors (CIE)
>> and AER uncorrectable internal errors (UIE) will not be handled. Note,
>> the PCIe spec indicates AER CIE/UIE can be used to report implementation
>> specific errors.[1]
>>
>> CXL root ports, CXL downstream switch ports, and CXL upstream switch ports
>> are examples of devices using the AER CIE/UIE for implementation specific
>> purposes. These CXL ports use the AER interrupt and AER CIE/UIE status to
>> report CXL RAS errors.[2]
>>
>> Add an atomic notifier to portdrv's CE/UCE handlers. Use the atomic
>> notifier to report CIE/UIE errors to the registered functions. This will
>> require adding a CE handler and updating the existing UCE handler.
>>
>> For the UCE handler, the CXL spec states UIE errors should return need
>> reset: "The only method of recovering from an Uncorrectable Internal Error
>> is reset or hardware replacement."[1]
>>
>> [1] PCI6.0 - 6.2.10 Internal Errors
>> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>>              Upstream Switch Ports
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>> Cc: linux-pci@vger.kernel.org
>> ---
>>  drivers/pci/pcie/portdrv.c | 32 ++++++++++++++++++++++++++++++++
>>  drivers/pci/pcie/portdrv.h |  2 ++
>>  2 files changed, 34 insertions(+)
>>
>> diff --git a/drivers/pci/pcie/portdrv.c b/drivers/pci/pcie/portdrv.c
>> index 14a4b89a3b83..86d80e0e9606 100644
>> --- a/drivers/pci/pcie/portdrv.c
>> +++ b/drivers/pci/pcie/portdrv.c
>> @@ -37,6 +37,9 @@ struct portdrv_service_data {
>>  	u32 service;
>>  };
>>  
>> +ATOMIC_NOTIFIER_HEAD(portdrv_aer_internal_err_chain);
>> +EXPORT_SYMBOL_GPL(portdrv_aer_internal_err_chain);
>> +
>>  /**
>>   * release_pcie_device - free PCI Express port service device structure
>>   * @dev: Port service device to release
>> @@ -745,11 +748,39 @@ static void pcie_portdrv_shutdown(struct pci_dev *dev)
>>  static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *dev,
>>  					pci_channel_state_t error)
>>  {
>> +	if (dev->aer_cap) {
>> +		u32 status;
>> +
>> +		pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_UNCOR_STATUS,
>> +				      &status);
>> +
>> +		if (status & PCI_ERR_UNC_INTN) {
>> +			atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
>> +						   AER_FATAL, (void *)dev);
>> +			return PCI_ERS_RESULT_NEED_RESET;
>> +		}
>> +	}
>> +
>>  	if (error == pci_channel_io_frozen)
>>  		return PCI_ERS_RESULT_NEED_RESET;
>>  	return PCI_ERS_RESULT_CAN_RECOVER;
>>  }
>>  
>> +static void pcie_portdrv_cor_error_detected(struct pci_dev *dev)
>> +{
>> +	u32 status;
>> +
>> +	if (!dev->aer_cap)
>> +		return;
> 
> Seems like that dev->aer_cap checking is not needed for cor_error_detected, aer_get_device_error_info() already checked it and won't call handle_error_source() if device has not AER capability. But I am curious why pci_aer_handle_error() checks dev->aer_cap again after aer_get_device_error_info().
> 

Hi Ming,

I agree this check should be removed. 

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.15])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 7F5F9E542;
	Wed, 26 Jun 2024 06:23:13 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=192.198.163.15
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719382995; cv=fail; b=gvPUZJWO+RbFn61XMQ4jw6IayKVwR3HdBY68xmTHXX5vNNhPhJMkwI229FT/936psMY2I2lgVMjiNbadhwnjuNAYgDkIFr59XVE6NGPAds6a+2369ZJDnoiZYyQ92UITO8rLQLfqnCkewNuYv1aF5422Gy4KNsmSxv7o3gcxqSY=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719382995; c=relaxed/simple;
	bh=VoO5Mlw8tNeit5GNF6bcIf90joDu2K12tcIdYDY3h9E=;
	h=Message-ID:Date:Subject:To:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=CzjtK8cpT8RuNXTId7b1LN6wjwlH42Ghc3OhKI58/COdGgoeMPIvv/pm9/jXyevSXrkistA7DJ5HIf69KIzTuQQ3/K/Ka+lJkfD1s7XVw8H55226ZplncOWR0gUh/WVKcnzANDXmWNYfXZpMJBtRlU68jaoMYo2VpNRBIHcz7X8=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=EjkAKln/; arc=fail smtp.client-ip=192.198.163.15
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="EjkAKln/"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1719382993; x=1750918993;
  h=message-id:date:subject:to:references:from:in-reply-to:
   content-transfer-encoding:mime-version;
  bh=VoO5Mlw8tNeit5GNF6bcIf90joDu2K12tcIdYDY3h9E=;
  b=EjkAKln/tn+VU/l2z9a5LeE3vS8O4MaMWRdCp5er99K6W1AkkmShfWjP
   TjyYTeZlMFv9iWRGW8LcQJNgu0w84swItnt7ybsYFgRqvQg+0CWcJaqXZ
   GfZtUrOgKBbxHInC7qxPKwXyi0WvCEu+ljC6VekOxsaSLhXbaJZp5zjJR
   005DhJzt5gvE27OkKh89WAQPRVE4EX+ISBjyvyKz095DxHeTYyZoNmjjG
   jy2deV33PTUO9uZuV8wSEi1S1oK1kXAF8n60WAt1lDGIMseWNtHj+kpuI
   GG9UaoeHW891rg7fpKgE3gckvIW3Y/k/E99w61HfTjudciAACB1NXURtq
   A==;
X-CSE-ConnectionGUID: u4ow8+69QimJ6OplzV2BtA==
X-CSE-MsgGUID: 2/FzZBR/TXeQHz9iB2RpRQ==
X-IronPort-AV: E=McAfee;i="6700,10204,11114"; a="16582371"
X-IronPort-AV: E=Sophos;i="6.08,266,1712646000"; 
   d="scan'208";a="16582371"
Received: from orviesa008.jf.intel.com ([10.64.159.148])
  by fmvoesa109.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 25 Jun 2024 23:23:10 -0700
X-CSE-ConnectionGUID: UMRpt6bBSVGh93AhaLrfWw==
X-CSE-MsgGUID: nPG1HtkSQBiO4SmvycGhxQ==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.08,266,1712646000"; 
   d="scan'208";a="44605832"
Received: from fmsmsx603.amr.corp.intel.com ([10.18.126.83])
  by orviesa008.jf.intel.com with ESMTP/TLS/AES256-GCM-SHA384; 25 Jun 2024 23:23:08 -0700
Received: from fmsmsx612.amr.corp.intel.com (10.18.126.92) by
 fmsmsx603.amr.corp.intel.com (10.18.126.83) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Tue, 25 Jun 2024 23:23:07 -0700
Received: from fmsedg602.ED.cps.intel.com (10.1.192.136) by
 fmsmsx612.amr.corp.intel.com (10.18.126.92) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39 via Frontend Transport; Tue, 25 Jun 2024 23:23:07 -0700
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (104.47.55.176)
 by edgegateway.intel.com (192.55.55.71) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.39; Tue, 25 Jun 2024 23:23:07 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=WN6eTIuiGXX7kC6sbsEl/01tHCJpPcgICVoRwARbtYiEDfzXg+fEiwjKYZNl+KBo3LFxbYx7qA4RiDNLiHxiy/3Mo/DQJx4l7+fQRvsDUDt10waOjyGrUiPrLXxNVpAjifsXnTCLcrScr+loGWeuaHpe2ICrfYl0emcE8cTccq66XiTPpxVQ6OKZ8AtfR3wGZvYSVL7FrF29UapFjWVgPamL8hqWRafYKQD7meeFxCUBCKyJbZHbp8uu/rmWWEAaenW8+C9V3lsiWVCVzxDbPxwxqhrd10fbr66+r8ATJoBQUNPc7lZk5Xwbb/H914LIF9qvak+Kh5cjqIKzuw41cw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=JjNiXulQ3P51mc6oZ6cJyOhSa9aVKl8fz0ke38EalSM=;
 b=mY+nFBsa4ZGrfQz9GGH6bEorC+GWcZ6GC7/2cqXVEDDrZ6rhSpXSmcU2KPICG40b1fz2U05IIytM6iCBkfaOTUyEcRngh78nEaeGvNCuxWqy/tTbyalVmCskoIMI2qL+81dzdKzPSXfZQrkL9z9rLgOPnZIxoQP6vqtO2lyY7VPSFhEezLgVegcRcgTY177KD/uZpdYDUzbVR8/HuQ9qzeFXG6HjLl9GlwIwyHmzcS1gP7Kfzz6y9AjRB0Wb/t4sOj0IujMGlW9DHyHtEfo97CcCJyyi4r1LKdTKQEEjhmyfBJXpSOGvmHhA5fFFlHFEgG1eVNlLb/Krm6eJF2HX+Q==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from IA1PR11MB7200.namprd11.prod.outlook.com (2603:10b6:208:42f::11)
 by DS0PR11MB8070.namprd11.prod.outlook.com (2603:10b6:8:12d::7) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.29; Wed, 26 Jun
 2024 06:22:59 +0000
Received: from IA1PR11MB7200.namprd11.prod.outlook.com
 ([fe80::8f47:b4ca:ec7f:d2c0]) by IA1PR11MB7200.namprd11.prod.outlook.com
 ([fe80::8f47:b4ca:ec7f:d2c0%5]) with mapi id 15.20.7698.025; Wed, 26 Jun 2024
 06:22:59 +0000
Message-ID: <45270079-6aa2-4530-8649-87bd5765d74b@intel.com>
Date: Wed, 26 Jun 2024 14:22:48 +0800
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 7/9] cxl/pci: Add atomic notifier callback for CXL
 PCIe port AER internal errors
To: Terry Bowman <terry.bowman@amd.com>, "Williams, Dan J"
	<dan.j.williams@intel.com>, "Weiny, Ira" <ira.weiny@intel.com>,
	"dave@stgolabs.net" <dave@stgolabs.net>, "Jiang, Dave"
	<dave.jiang@intel.com>, "Schofield, Alison" <Alison.Schofield@intel.com>,
	"Verma, Vishal L" <vishal.l.verma@intel.com>, "jim.harris@samsung.com"
	<jim.harris@samsung.com>, "ilpo.jarvinen@linux.intel.com"
	<ilpo.jarvinen@linux.intel.com>, "ardb@kernel.org" <ardb@kernel.org>,
	"sathyanarayanan.kuppuswamy@linux.intel.com"
	<sathyanarayanan.kuppuswamy@linux.intel.com>, "linux-cxl@vger.kernel.org"
	<linux-cxl@vger.kernel.org>, "linux-kernel@vger.kernel.org"
	<linux-kernel@vger.kernel.org>, "Yazen.Ghannam@amd.com"
	<Yazen.Ghannam@amd.com>, "Robert.Richter@amd.com" <Robert.Richter@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-8-terry.bowman@amd.com>
Content-Language: en-US
From: "Li, Ming4" <ming4.li@intel.com>
In-Reply-To: <20240617200411.1426554-8-terry.bowman@amd.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 8bit
X-ClientProxiedBy: SI2P153CA0022.APCP153.PROD.OUTLOOK.COM (2603:1096:4:190::8)
 To IA1PR11MB7200.namprd11.prod.outlook.com (2603:10b6:208:42f::11)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: IA1PR11MB7200:EE_|DS0PR11MB8070:EE_
X-MS-Office365-Filtering-Correlation-Id: 3dfa6429-5c3b-4723-1ec2-08dc95a86d03
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230038|7416012|376012|1800799022|366014|921018;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?MTZMQlRra1gxZTZsYkFGVFpUMWI0TXpKY295a2hESFdSeHBwemRaQ1lVa2xi?=
 =?utf-8?B?a3gyRGJOV3k4OGdwN3JEUEYramRBaTZUYWR4NStEU2RIVmlrVzB5ZVk5OXh2?=
 =?utf-8?B?NDZQZlZzNnVvME9pV1JhZjVNaDJ3b2M2akM0VllXY0IzN2V3K1VyVEplM1Fu?=
 =?utf-8?B?dXJXMkJKVDBBTmJtYVNQQXdSTk4yd3FrK2pJNW0yT1NZMHNEeXhZMWxwV0Y3?=
 =?utf-8?B?Y1ZWUldQNG9YUC80Nml2cmRnckNsNlFxRjB1eDJPSGxRNDRNWU1VMTdhNDZF?=
 =?utf-8?B?aENqNzQ1THVHQUl2STNNZk1yNjBuaUR1Y0ozRHI2THdoV3hoNUZmY1RoeHR5?=
 =?utf-8?B?UDdUYm5rMUovTWVwMjFQWjJ4QUI2VFVWSi84SzltM2VHU1k0MXpoUUV0TU5R?=
 =?utf-8?B?SFgxRktiRk9zT0gvTlFjL0hITEltRFRIaEwyV0RLbUNGTWVmQ3FKRnc0UXp6?=
 =?utf-8?B?NGxkbXdjVzZMVm9zNDV0bXhZUGtreVBkTytTd1VhV2Fkby9CR2lCcFphcDBE?=
 =?utf-8?B?dGhRdHFJWEgwWEJkSjUzS0taeUYwU0h6WTR3NEZ3MnNjR2FIOTdZemVxbnNl?=
 =?utf-8?B?TEJDVGhqWU1ZY3M3b0FWTGJ4ZE5qeUR1czUwWXI2eW04RTN0aFBkTWxrc04v?=
 =?utf-8?B?OXErTFpmdjNEL0N1RWFpQ2tkT2xmRlM5VGFxdDVUM0t0WXB2Z3krcEZ0M2FG?=
 =?utf-8?B?UzhZSmtxeTdjTUJXUklUWk1US0lNR0lCbHJML3FVT3JqcXlVdWV1ZWZ2TEpS?=
 =?utf-8?B?YjMvOWJiZDVVMk1UQ1FZOWhlaHlMMlBVZDAwMFJoQW12eFVHZWk3OXRtSWt5?=
 =?utf-8?B?aTFwMFdmNWdyRm5WMk4vT254V1kzeDU5QzJlWG1zTjNDV3U1VTNqdFg1ODZR?=
 =?utf-8?B?ZG5xdnNEeVFlbldYcHJwbGpxSGJ6aU1SbE5pMVJJc25ieENQTUgvekptek9N?=
 =?utf-8?B?NEI3dkhoRFdlUEJFdjJLMDhkaVpFVFpUV1lxSlRqak51S2UxTWhSci9aeXNG?=
 =?utf-8?B?ZXY2eFh1bkpGVG50dytnQmtwc0EvNDJFODdKL2dmdVNDRy82bkErcC9MVFBx?=
 =?utf-8?B?clRQSmFoMXJPemY3SEp3SkcvdktUbys0VzVwbEZ2TEZZV2ROalhoeXpPZldx?=
 =?utf-8?B?MkVRME8vV2k3TnZKMXVYNWVScVZ0OTh1ZDl6d3oxV2d2emNYRkFjM3ZSdnpZ?=
 =?utf-8?B?V283L2xnRzU2ZHlPTGZkOFlMbmJOZmlKUDlTUWduUysvZnJhb0VXbzZzd3Rz?=
 =?utf-8?B?QXFRczE5WWZVU1VUWWt1eU9QL0R3NlY3TlpGZzQxdS9UZjZxcXo5TjFDekVl?=
 =?utf-8?B?WmJXcnp2aUJBS3cyeHNVVWRPMzcyMUlHVGJNRGRIVnJreGF1b2xwazlkMG1v?=
 =?utf-8?B?dk9BdW1lNHJjLy9XRzF2bHdyd2QxNDltVFNqbUlDNm8vTXRJZkpwdHZoUkgy?=
 =?utf-8?B?SnNkdGVMTnNsdm5NM2xkeWtDd3E5RDBPZ1FXZmVFcHVvcGVmWmlSOEM3bWRk?=
 =?utf-8?B?c2ZlMC9oRVAvelBBRzQ1SGIrRzJnWFBmc1FIb1VlaWxsYjVqNXYxdGJQeG9P?=
 =?utf-8?B?K3BNRGhMYk4vKzJOU2NaN2pWVGRCNXFDNjFoc09zOVZGeFU2ODhXd0Flc2JQ?=
 =?utf-8?B?bHg4bSsrVDNnWDV1eENRQ21MQ1hkclo5bHFUYTJtaTUzcDBOVTNwT3NBd21F?=
 =?utf-8?B?VjNEYUwxQzdLeU5ScUI0OThyMExCSzhORm1ZUmFKQkNMOThhYnA4VzgwK01v?=
 =?utf-8?B?SXZFbklEY3RjQVVoMUs5L2sxVmFXOG8zQUtPaWtXWi9zcHRWd215eFVIY2VU?=
 =?utf-8?Q?OywAaXxJrfYjqziFoVWQqKc4UxFgphk0hoIO8=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:IA1PR11MB7200.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230038)(7416012)(376012)(1800799022)(366014)(921018);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?SXV0TzlMejZYeUJuVVJJWWNvVlBCbkJrRmxtTE9sMVI4ampnV0liaWtjWDJ3?=
 =?utf-8?B?bVBSQ09rd2RVc2VWbjRoOEFLcW9rblZhcEorK0hFY0UwQVdNQ25yRmtvQ3pZ?=
 =?utf-8?B?andpQ2p4WEx2c0NGVFFiaC8ydEtFbmtxaVF0TjB1cDBFR3pqcXdsSE95RTY0?=
 =?utf-8?B?VjhuR2UrcnFKeWFNTFpnckNXLzhHTkhRbFRyV0MyWFo1ajFjSU9mZk5GbEdW?=
 =?utf-8?B?b0JnWDZTb0ZkR1JCOUtTK1RPZWRtdmhtdWJsNHFaZUJMMnU1Z0RiMmdYK0s1?=
 =?utf-8?B?ZHp6ZUhBaTZ4UEx6TlpPRUM5Yi9Gc1grS2lqbjdvZ3BKWlhHWXBOc1FZRWsw?=
 =?utf-8?B?TjFRdXltOTcwNzVkUmtJWDBYZmhyUmRpOEIyTXNOTUlwM3A0OTR2cFo4eFV2?=
 =?utf-8?B?Y1ZtL2JKa0FFdXQ2cUdUdXAxTDZQbzlBZHBnZUpxWnBWWmJFZU9aOWNOSWx5?=
 =?utf-8?B?NWNNamNsVUliekJEdVJTOTRzczVkM210alBxM05PcEtZZkdueDBDN2VVRGYr?=
 =?utf-8?B?K0k2TjNTU2VSTFhBM0J5anBIRzJrNWlBZFloOUNXNkhtNXlOY1B5MWpLT2lY?=
 =?utf-8?B?MjN1Q1FZclJKUjJqek5OblR6Wm4xV0tjRE95STRIcE5QdkRnT2d1MXNyZEF6?=
 =?utf-8?B?czBwYkc2NlVEdmRNUnBwZmVhOFZMZC82dWw1RkdMcjlYZ0IrOGVZTU56ZTJ2?=
 =?utf-8?B?cW8vMnNBdStRZTQyTHhEU05SbkxaNDljU205OERPa3ZwUTUvR3lMY01yRURJ?=
 =?utf-8?B?dmpLSFZwQU9PZnVDajVmZnNYaXBmYURrNEtjYnBPYnV3d0phd2ZQS2k0cUZy?=
 =?utf-8?B?QXFwY09HWmlwZCt0VjhZWlFPOHQyUHBjQkVEeHZHM0JsZlZObTU4N3pPU3RN?=
 =?utf-8?B?Z3pTU0ZBZHVhYWh6c0k1UWVmR0llajN3UCtwbnVIODFjUk5jeVk2R2xUOTNR?=
 =?utf-8?B?cUhyNWZmQm16bnpzOVdJQWhDd2pLRGZsY2lzMjEzM0YrT2xJd3l2ZTZoTHcx?=
 =?utf-8?B?QUphQ2hhMTFVcjhjSURxV2NER2JNTlY0K0ZjSEVyOEJSaTlpTlAybU81ZWcw?=
 =?utf-8?B?UU9EbHBGN0paOVRnNmNTazJkdDdNN05LaGRqZFlwcTNNajY3WlJRdlhlT3BW?=
 =?utf-8?B?RUNkdFpBaUg1UHFsLytONWNWTE5wOHFtTDlHUHRpUkIxMGZuekhwQXY2ODQz?=
 =?utf-8?B?U0EwaWk3V0tPVWJVNWhaeFVSTFY0a2ZaUG1UZ2Y1M3ZoaE82QUNZUE1PT3h6?=
 =?utf-8?B?Sm40YTQ1VGd4RzZObnFxSjhvQk5TU1FmTlpLR2JtcC9HZTFBdkRXV25SRmpQ?=
 =?utf-8?B?V0ZwdmZqcXZ3T1lQbklKMTNtMnl4M0tDL09aUjhwSmVFaHZkN3RjM04wVDl1?=
 =?utf-8?B?TEl3QWhKV3hraVV0cTh2d0VwZ05DUXNVTzdHa3h0MkdodlUwRGlUKzF4RE1V?=
 =?utf-8?B?OTYwdVBmUStvRWtseGg1YTgzdXg3RVZvZ2hxMW04TVBUV2pQU2tnSi93ZmdP?=
 =?utf-8?B?Mmh4anVCMTBKbjdUQmxtMmxSSnpUU1crOWtncEcvQ0tMZitLWjFvUXVJaGgw?=
 =?utf-8?B?RVM0clh3bG5ySmVTSnluTnlpQXVEalM0b1dkWmpSL0NGMWYzdHBPeUo5OFU2?=
 =?utf-8?B?M3BRQ2lqSHhTNUV4UHlYMDJKYmFIMTZTdGpGSTNuTldhZ2NuRm5kLy8zMHFu?=
 =?utf-8?B?MEw1L1o5dEdoWGI5SmlTdWhJcXdWSXJDc05UZzlWaXlHVFdPb1k0Z0NudnB3?=
 =?utf-8?B?cGNyY2FwbHR6Ukhmd0IrQy9OZGpQWW1aNFRlS3RFQWMrQTU4NWNWS3hrc3gw?=
 =?utf-8?B?R3V1S2tSL3VTdDVPQjZyVmpPV3JJNEpzbXdMYm52a0tPRlI3WW4ydkpZWjRC?=
 =?utf-8?B?M2RhYlVpVmdZc2h4YkIvTkJ4OU1FYlFveldsZFk3WUZCRjBvM1FmcUVkWXBw?=
 =?utf-8?B?eDFTT01welNyb09WQ3RCS29FU3pySzVibnAwL2d3Z2kwRmM2TE9iM1YyRzY5?=
 =?utf-8?B?ZmFQOHJId0QwcGtXRHE5cU5KYktBUTZGcmZmaUt3QlhMQU1TQkVTS1A2QnNo?=
 =?utf-8?B?azAyNyt5RmttMlN2ZVZqVUJGMHRpOGhBdzJRUko5MVlQUytNTnN3RDlJWlpt?=
 =?utf-8?Q?fNv5dXyZZurC9gmzBsinWs26H?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 3dfa6429-5c3b-4723-1ec2-08dc95a86d03
X-MS-Exchange-CrossTenant-AuthSource: IA1PR11MB7200.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 26 Jun 2024 06:22:59.9061
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: SJy+wno6pIfYyggluflA/FPfSb9AOK1YOD/1jxdBkKKvT8FP/FCJU66e3jC+3AIh0GCDlx+kOli32bPugOd6sg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS0PR11MB8070
X-OriginatorOrg: intel.com

On 6/18/2024 4:04 AM, Terry Bowman wrote:
> CXL root ports, CXL downstream switch ports, and CXL upstream switch
> ports are bound to the PCIe port bus driver, portdrv. portdrv provides
> an atomic notifier chain for reporting PCIe port device AER
> correctable internal errors (CIE) and AER uncorrectable internal
> errors (UIE).
>
> CXL PCIe port devices use AER CIE/UIE to report CXL RAS.[1]
>
> Add a cxl_pci atomic notification callback for handling the portdrv's
> AER UIE/CIE notifications.
>
> Register the atomic notification callback in the cxl_pci module's
> load. Unregister the callback in the cxl_pci driver's unload.
>
> Implement the callback to check if the device parameter is a valid
> CXL PCIe port. If it is valid then make the notification callback call
> __cxl_handle_cor_ras() or __cxl_handle_ras() depending on the AER
> type.
>
> [1] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>              Upstream Switch Ports
>
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---
>  drivers/cxl/core/core.h |  4 ++
>  drivers/cxl/core/pci.c  | 97 ++++++++++++++++++++++++++++++++++++++---
>  drivers/cxl/core/port.c |  6 +--
>  drivers/cxl/cxl.h       |  5 +++
>  drivers/cxl/cxlpci.h    |  2 +
>  drivers/cxl/pci.c       | 19 +++++++-
>  6 files changed, 123 insertions(+), 10 deletions(-)
>
> diff --git a/drivers/cxl/core/core.h b/drivers/cxl/core/core.h
> index bc5a95665aa0..69bef1db6ee0 100644
> --- a/drivers/cxl/core/core.h
> +++ b/drivers/cxl/core/core.h
> @@ -94,4 +94,8 @@ int cxl_update_hmat_access_coordinates(int nid, struct cxl_region *cxlr,
>  				       enum access_coordinate_class access);
>  bool cxl_need_node_perf_attrs_update(int nid);
>  
> +struct cxl_dport *find_dport(struct cxl_port *port, int id);
> +struct cxl_port *find_cxl_port(struct device *dport_dev,
> +			       struct cxl_dport **dport);
> +
>  #endif /* __CXL_CORE_H__ */
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index 59a317ab84bb..e630eccb733d 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -689,7 +689,6 @@ EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
>  static void __cxl_handle_cor_ras(struct device *dev,
>  				 void __iomem *ras_base)
>  {
> -	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>  	void __iomem *addr;
>  	u32 status;
>  
> @@ -698,10 +697,17 @@ static void __cxl_handle_cor_ras(struct device *dev,
>  
>  	addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
>  	status = readl(addr);
> -	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
> -		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
> +
> +	if (!(status & CXL_RAS_CORRECTABLE_STATUS_MASK))
> +		return;
> +
> +	writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
> +	if (is_cxl_memdev(dev)) {
> +		struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
> +
>  		trace_cxl_aer_correctable_error(cxlmd, status);
> -	}
> +	} else if (dev_is_pci(dev))
> +		trace_cxl_port_aer_correctable_error(dev, status);
>  }
>  
>  static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
> @@ -733,7 +739,6 @@ static void header_log_copy(void __iomem *ras_base, u32 *log)
>  static bool __cxl_handle_ras(struct device *dev,
>  			     void __iomem *ras_base)
>  {
> -	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>  	u32 hl[CXL_HEADERLOG_SIZE_U32];
>  	void __iomem *addr;
>  	u32 status;
> @@ -759,7 +764,13 @@ static bool __cxl_handle_ras(struct device *dev,
>  	}
>  
>  	header_log_copy(ras_base, hl);
> -	trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
> +	if (is_cxl_memdev(dev)) {
> +		struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
> +
> +		trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
> +	} else if (dev_is_pci(dev))
> +		trace_cxl_port_aer_uncorrectable_error(dev, status);
> +
>  	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
>  
>  	return true;
> @@ -882,6 +893,80 @@ static bool cxl_handle_rdport_ras(struct cxl_dev_state *cxlds,
>  	return __cxl_handle_ras(&cxlds->cxlmd->dev, dport->regs.ras);
>  }
>  
> +static int match_uport(struct device *dev, void *data)
> +{
> +	struct device *uport_dev = (struct device *)data;
> +	struct cxl_port *port;
> +
> +	if (!is_cxl_port(dev))
> +		return 0;
> +
> +	port = to_cxl_port(dev);
> +
> +	return (port->uport_dev == uport_dev);
> +}
> +
> +static struct cxl_port *pci_to_cxl_uport(struct pci_dev *pdev)
> +{
> +	struct cxl_dport *dport;
> +	struct device *port_dev;
> +	struct cxl_port *port;
> +
> +	port = find_cxl_port(pdev->dev.parent, &dport);
> +	if (!port)
> +		return NULL;
> +	put_device(&port->dev);
> +
> +	port_dev = device_find_child(&port->dev, &pdev->dev, match_uport);
> +	if (!port_dev)
> +		return NULL;

 seems like just a bus_find_device(&cxl_bus_type, NULL, &pdev->dev, match_uport) can replace these find_cxl_port() and device_find_child().


> +	put_device(port_dev);
> +
> +	port = to_cxl_port(port_dev);
> +
> +	return port;
> +}
> +
> +static void __iomem *cxl_pci_port_ras(struct pci_dev *pdev)
> +{
> +	void __iomem *ras_base = NULL;
> +
> +	if ((pci_pcie_type(pdev) == PCI_EXP_TYPE_ROOT_PORT) ||
> +	    (pci_pcie_type(pdev) == PCI_EXP_TYPE_DOWNSTREAM)) {
> +		struct cxl_dport *dport;
> +
> +		find_cxl_port(&pdev->dev, &dport);
> +		ras_base = dport ? dport->regs.ras : NULL;

Need put_device(&port->dev) after find_cxl_port(), use scope-based resource management __free() here should be better.


> +	} else if (pci_pcie_type(pdev) == PCI_EXP_TYPE_UPSTREAM) {
> +		struct cxl_port *port = pci_to_cxl_uport(pdev);
> +
> +		ras_base = port ? port->regs.ras : NULL;
> +	}
> +
> +	return ras_base;
> +}
> +
> +int port_internal_err_cb(struct notifier_block *unused,
> +			 unsigned long event, void *ptr)
> +{
> +	struct pci_dev *pdev = (struct pci_dev *)ptr;
> +	void __iomem *ras_base;
> +
> +	if (!pdev)
> +		return 0;
> +
> +	if (event == AER_CORRECTABLE) {
> +		ras_base = cxl_pci_port_ras(pdev);
> +		__cxl_handle_cor_ras(&pdev->dev, ras_base);
> +	} else if ((event == AER_FATAL) || (event == AER_NONFATAL)) {
> +		ras_base = cxl_pci_port_ras(pdev);
> +		__cxl_handle_ras(&pdev->dev, ras_base);
> +	}
> +
> +	return 0;
> +}
> +EXPORT_SYMBOL_NS_GPL(port_internal_err_cb, CXL);
> +
>  /*
>   * Copy the AER capability registers using 32 bit read accesses.
>   * This is necessary because RCRB AER capability is MMIO mapped. Clear the
> diff --git a/drivers/cxl/core/port.c b/drivers/cxl/core/port.c
> index 887ed6e358fb..d0f95c965ab4 100644
> --- a/drivers/cxl/core/port.c
> +++ b/drivers/cxl/core/port.c
> @@ -1027,7 +1027,7 @@ void put_cxl_root(struct cxl_root *cxl_root)
>  }
>  EXPORT_SYMBOL_NS_GPL(put_cxl_root, CXL);
>  
> -static struct cxl_dport *find_dport(struct cxl_port *port, int id)
> +struct cxl_dport *find_dport(struct cxl_port *port, int id)
>  {
>  	struct cxl_dport *dport;
>  	unsigned long index;
> @@ -1336,8 +1336,8 @@ static struct cxl_port *__find_cxl_port(struct cxl_find_port_ctx *ctx)
>  	return NULL;
>  }
>  
> -static struct cxl_port *find_cxl_port(struct device *dport_dev,
> -				      struct cxl_dport **dport)
> +struct cxl_port *find_cxl_port(struct device *dport_dev,
> +			       struct cxl_dport **dport)
>  {
>  	struct cxl_find_port_ctx ctx = {
>  		.dport_dev = dport_dev,
> diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
> index 7cee678fdb75..04725344393b 100644
> --- a/drivers/cxl/cxl.h
> +++ b/drivers/cxl/cxl.h
> @@ -11,6 +11,7 @@
>  #include <linux/log2.h>
>  #include <linux/node.h>
>  #include <linux/io.h>
> +#include "../pci/pcie/portdrv.h"
>  
>  /**
>   * DOC: cxl objects
> @@ -760,11 +761,15 @@ struct cxl_dport *devm_cxl_add_rch_dport(struct cxl_port *port,
>  #ifdef CONFIG_PCIEAER_CXL
>  void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport);
>  void cxl_setup_parent_uport(struct device *host, struct cxl_port *port);
> +int port_internal_err_cb(struct notifier_block *unused,
> +			 unsigned long event, void *ptr);
>  #else
>  static inline void cxl_setup_parent_dport(struct device *host,
>  					  struct cxl_dport *dport) { }
>  static inline void cxl_setup_parent_uport(struct device *host,
>  					  struct cxl_port *port) { }
> +static inline int port_internal_err_cb(struct notifier_block *unused,
> +				unsigned long event, void *ptr) { return 0; }
>  #endif
>  
>  struct cxl_decoder *to_cxl_decoder(struct device *dev);
> diff --git a/drivers/cxl/cxlpci.h b/drivers/cxl/cxlpci.h
> index 93992a1c8eec..6044955e1c48 100644
> --- a/drivers/cxl/cxlpci.h
> +++ b/drivers/cxl/cxlpci.h
> @@ -130,4 +130,6 @@ void read_cdat_data(struct cxl_port *port);
>  void cxl_cor_error_detected(struct pci_dev *pdev);
>  pci_ers_result_t cxl_error_detected(struct pci_dev *pdev,
>  				    pci_channel_state_t state);
> +int port_err_nb_cb(struct notifier_block *unused,
> +		   unsigned long event, void *ptr);
>  #endif /* __CXL_PCI_H__ */
> diff --git a/drivers/cxl/pci.c b/drivers/cxl/pci.c
> index 2ff361e756d6..f4183c5aea38 100644
> --- a/drivers/cxl/pci.c
> +++ b/drivers/cxl/pci.c
> @@ -926,6 +926,10 @@ static int cxl_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
>  	return rc;
>  }
>  
> +struct notifier_block port_internal_err_nb = {
> +	.notifier_call = port_internal_err_cb,
> +};
> +
>  static const struct pci_device_id cxl_mem_pci_tbl[] = {
>  	/* PCI class code for CXL.mem Type-3 Devices */
>  	{ PCI_DEVICE_CLASS((PCI_CLASS_MEMORY_CXL << 8 | CXL_MEMORY_PROGIF), ~0)},
> @@ -974,6 +978,19 @@ static struct pci_driver cxl_pci_driver = {
>  	},
>  };
>  
> -module_pci_driver(cxl_pci_driver);
> +static int __init cxl_pci_init(void)
> +{
> +	atomic_notifier_chain_register(&portdrv_aer_internal_err_chain, &port_internal_err_nb);
> +	return pci_register_driver(&cxl_pci_driver);
> +}
> +module_init(cxl_pci_init);
> +
> +static void __exit cxl_pci_exit(void)
> +{
> +	atomic_notifier_chain_unregister(&portdrv_aer_internal_err_chain, &port_internal_err_nb);
> +	pci_unregister_driver(&cxl_pci_driver);
> +}
> +module_exit(cxl_pci_exit);
> +
>  MODULE_LICENSE("GPL v2");
>  MODULE_IMPORT_NS(CXL);



From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.13])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 7C43761FE8;
	Wed, 26 Jun 2024 03:40:10 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=198.175.65.13
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719373212; cv=fail; b=S/drDrBAW8NfVaMDbtWSRDHNDF6wn6hDVMmjEXSvALiunc+6bjAiyCLNleFrb5K7nSPR6k8ficHcOIfR5LV9fk781fzdu+sIU68NpEM4bfWsNcQPjtzcqBO35HKz2L36BJqLq0tq9RNavV6VmASk5h+gLFSiEPns4Wp9dENkuvU=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719373212; c=relaxed/simple;
	bh=QOzH+oXaave9Rl6d2LVmF72PxzLGcJ0Z4VU5WszvWKk=;
	h=Message-ID:Date:Subject:To:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=fibCwveP/Mb0VNHfqlsl+47M3+NlhkBeDogfhZ8NUU0wciKvUM0qny8O853IMSLm30y4OG9DPNR4cGF79Ceh43qQYWKHBc0ZeydbUntKFqU1VY17RYbwc7ozfYkJVIzykTDpwkit+X6Tw8AxWviIgItE+qg22GdGlvvP7I2Terc=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=eqCUX2qq; arc=fail smtp.client-ip=198.175.65.13
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="eqCUX2qq"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1719373210; x=1750909210;
  h=message-id:date:subject:to:references:from:in-reply-to:
   content-transfer-encoding:mime-version;
  bh=QOzH+oXaave9Rl6d2LVmF72PxzLGcJ0Z4VU5WszvWKk=;
  b=eqCUX2qqun5WyEOghQ0jJ+tsaxEq0a/1z7A+UuelJUa8zgof4Sdv6/em
   2K4hWb0opAPEdEgfDrhFoU1yHOGpR2YtaKTtw/fbZdDmCEyGnGp7KvzUb
   WTeCsR1QBsBX5bZoIuap26LEs8BKmsc21m0PVsomIq2Rh+5og6lJWduLr
   O0MR0S7TF4Dlp31GY2zeC3dU6sbL+PNOl5Bj+CK+hdfoYCmH0pbQFgBpw
   bzCPao+8TmJIk8GqNDx0oIa07CucnVEGvtpdwaJJj27y5pA3BrdoTnjXs
   iycm17XB+8gq1QfeluzgxCXhfdAKXBwrhPalosC1xSo0HDriRulXy0+hu
   g==;
X-CSE-ConnectionGUID: gfdBpA11Sp6tKWocOXq+tA==
X-CSE-MsgGUID: Pk7FxpeMQpyFHpBg/Cp0CQ==
X-IronPort-AV: E=McAfee;i="6700,10204,11114"; a="27566608"
X-IronPort-AV: E=Sophos;i="6.08,265,1712646000"; 
   d="scan'208";a="27566608"
Received: from orviesa005.jf.intel.com ([10.64.159.145])
  by orvoesa105.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 25 Jun 2024 20:40:10 -0700
X-CSE-ConnectionGUID: r7spYZW1R0u3Bfrg4SQhqA==
X-CSE-MsgGUID: 2rHmMF0vTfavYwJ5Hr9gag==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.08,265,1712646000"; 
   d="scan'208";a="48840315"
Received: from fmsmsx601.amr.corp.intel.com ([10.18.126.81])
  by orviesa005.jf.intel.com with ESMTP/TLS/AES256-GCM-SHA384; 25 Jun 2024 20:40:10 -0700
Received: from fmsmsx610.amr.corp.intel.com (10.18.126.90) by
 fmsmsx601.amr.corp.intel.com (10.18.126.81) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Tue, 25 Jun 2024 20:40:09 -0700
Received: from fmsedg602.ED.cps.intel.com (10.1.192.136) by
 fmsmsx610.amr.corp.intel.com (10.18.126.90) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39 via Frontend Transport; Tue, 25 Jun 2024 20:40:09 -0700
Received: from NAM04-BN8-obe.outbound.protection.outlook.com (104.47.74.46) by
 edgegateway.intel.com (192.55.55.71) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.39; Tue, 25 Jun 2024 20:40:08 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=GWhN8nm0PV/QkjJrfM5WbqnNy1u/9AD10emTKeVaEA0Y6kCRkbvuORtzR8R0cSGTY+VjlrG7FfySu30eoR+I9A149TOscAB5q/EKWqlTq7GV2FFOJY3HXpvuz68lY5mTTefuyAL6N8RMss2Iu5Ff+NsXH/SUW/SkPo4+FbZmyDEwtgaVXEHiAgKi4Zs33vXU7wfMNWaJhtY1opoyEy6FdoJ1XQ3m2UpRNJiZhynCPir9IX5ytO//JLuS+gKo+TKV5YVpIsMpZZXPdW5c2mN2gUogqhcM4YJxgn1OseMnOcU1dwkC19SWL6xa57au8VIQAabgzmdx2Unr7Bn6vx6jlw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=pEh5DDth6junIFWN8aaI9diy8R1MPWDcxdmXIEOw18Q=;
 b=f/Nud7y8bH0STDzetReP+8QpkjW+QFyY6HrdeM96e1stb6tHJ8ufR+Kl+zhTwlFnc/IbCyjCdoP28a0714Lu10JnGG1Gd08BjEBPmRY5wV+4o8X6vmMqgkVhym9Lgl+WKxcnbflwwfTFX2raGtYxmzxZGVEiMYWMrqctTSmjmfN1+xu7pk1Fof6atpt3zzNQFPCubjX1xEWxelBnyt0XvFeVEgsc64x+bl/eDQmkmHVdlvir5kz6KbdsWA39z7N0zxwxC9cXQQkApEsFZkbsqXLOVzxSlgR4Yd6TexDOoMBkZg9IyxhfYlK4X/VcsHWagWm/45a0zSm3kVLlaCAkcA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from IA1PR11MB7200.namprd11.prod.outlook.com (2603:10b6:208:42f::11)
 by SN7PR11MB7019.namprd11.prod.outlook.com (2603:10b6:806:2ae::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.28; Wed, 26 Jun
 2024 03:40:01 +0000
Received: from IA1PR11MB7200.namprd11.prod.outlook.com
 ([fe80::8f47:b4ca:ec7f:d2c0]) by IA1PR11MB7200.namprd11.prod.outlook.com
 ([fe80::8f47:b4ca:ec7f:d2c0%5]) with mapi id 15.20.7698.025; Wed, 26 Jun 2024
 03:40:01 +0000
Message-ID: <21b9e2a5-2449-42dc-9209-4ea1c055d9a2@intel.com>
Date: Wed, 26 Jun 2024 11:39:50 +0800
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 4/9] cxl/pci: Map CXL PCIe ports' RAS registers
To: Terry Bowman <terry.bowman@amd.com>, "Williams, Dan J"
	<dan.j.williams@intel.com>, "Weiny, Ira" <ira.weiny@intel.com>,
	"dave@stgolabs.net" <dave@stgolabs.net>, "Jiang, Dave"
	<dave.jiang@intel.com>, "Schofield, Alison" <Alison.Schofield@intel.com>,
	"Verma, Vishal L" <vishal.l.verma@intel.com>, "jim.harris@samsung.com"
	<jim.harris@samsung.com>, "ilpo.jarvinen@linux.intel.com"
	<ilpo.jarvinen@linux.intel.com>, "ardb@kernel.org" <ardb@kernel.org>,
	"sathyanarayanan.kuppuswamy@linux.intel.com"
	<sathyanarayanan.kuppuswamy@linux.intel.com>, "linux-cxl@vger.kernel.org"
	<linux-cxl@vger.kernel.org>, "linux-kernel@vger.kernel.org"
	<linux-kernel@vger.kernel.org>, "Yazen.Ghannam@amd.com"
	<Yazen.Ghannam@amd.com>, "Robert.Richter@amd.com" <Robert.Richter@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-5-terry.bowman@amd.com>
Content-Language: en-US
From: "Li, Ming4" <ming4.li@intel.com>
In-Reply-To: <20240617200411.1426554-5-terry.bowman@amd.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SI2PR01CA0023.apcprd01.prod.exchangelabs.com
 (2603:1096:4:192::17) To IA1PR11MB7200.namprd11.prod.outlook.com
 (2603:10b6:208:42f::11)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: IA1PR11MB7200:EE_|SN7PR11MB7019:EE_
X-MS-Office365-Filtering-Correlation-Id: acc1368d-41de-4092-06ee-08dc9591a8ad
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230038|1800799022|366014|7416012|376012|921018;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?dzQ5NXAzRkM0VUt4MmxvK1p2Z21IWkViNWxPb21kNDB0WEt5eXpKTm50VzEv?=
 =?utf-8?B?MVI1VXI4c1R5Y0Nka1cxRXRYaUVSVjloVDdVSkNlV2xBb3lIbG9URmRtcEFq?=
 =?utf-8?B?WWF5K1lBSjVmMG9jeDdjUXozMlpUMm9nRnZ5SHhCb2hrYld4SE1QcHBjcWw5?=
 =?utf-8?B?WnVaQnUwL2Q4NlJ3MWMzQ3pSWTM2N0plR3FwYWVobTlVemdFa3hRVTFUL3VI?=
 =?utf-8?B?OU5TcmJQWEhRNVNPR3E1UlV3bjUzbStXQTYrbmIwNlBrUzhia0o1TTlhOUNy?=
 =?utf-8?B?Wk1LV3ErdElPbDlIRXBSeUorbWg5cXdwaXlvQzNZajVwbnM1YlVyaFN3ZlR1?=
 =?utf-8?B?SXVDRHRCOUhpN2xsNzF5QWxuejhweGZEeUdFT3ltNmFnQ3g1U3FLZ1FEdXh3?=
 =?utf-8?B?ck5LWjlSbTRWVFhGYUk2MUhaMzV6OWh4QWRjeGtIakYrOTQwN2pwZ00xbXZV?=
 =?utf-8?B?QjN3TnpSNDVDNlUwV0lDUC9oWTBCdGgrQTM0WWlVTFVFYlBVb285M25Eb0pJ?=
 =?utf-8?B?cndPa1lZaW1VejVjOTlFTWRWV3VZODBQc05Ybm53S2YzNXFEU2FmYktHWEg2?=
 =?utf-8?B?Vm9tR012L2pEV3RmdTVaWEpKbzdweTBVc1dtMTdoMDdiUC9UYUEvekVZYUNY?=
 =?utf-8?B?NTBGb1dkYWJSYWVVU1NnNlFHOWUvNU5ra1pCbXd5VUNWUnJsb2xTdkcxcnU4?=
 =?utf-8?B?bzk0YWdYWnFNdllHaFdvQXA1a0Y2enZ4clYzNXZVVDlPeXBXYXp2cHNzUEFI?=
 =?utf-8?B?MXFXa3FSTWhyNjZ3ZXlpQlVIVFpueVp0UXJlQXg4aElLd2c3YllaOGcvS3Zi?=
 =?utf-8?B?THV0ZWdvcHlhV2hGcDJkd09ZbEc1U1FHZWsyRWhmQjZ4T2Q4NGhJM1ZaR1hU?=
 =?utf-8?B?ekpPNG95aEVkdC9RRjMwY1RXcEMxN2h3UTdTVmMydjdwR0h1V0NnSkhIL2xZ?=
 =?utf-8?B?bVZDUXpLWUxuZFBKTU9yRmdMYXlpME56TkQ4emhyZ3YreGErd3M0VjR3SW94?=
 =?utf-8?B?dnMvcXA4NldIT2luRWcwcjFTVnVBcHJ4bmdSN0wyUmh4YUYvMlBJY2Vyeno3?=
 =?utf-8?B?dFBNd2ZkaVhCbkJiQ0ZBN2JTT1NxcjJJc0FaVW5Mc21TQzE5aFM0OWRLaHd5?=
 =?utf-8?B?K2FRQ3BvZURrNjFFVm1xNTE1RGkxYzNZMk0rQi9nZ1RDUVFiZGpVMVN0OUVw?=
 =?utf-8?B?ZmZCN0ZtdFpBM3RWNGFNeHlTT3h4a0JlQ0FJMWFHRThXNTcraWIyUDhVOHA4?=
 =?utf-8?B?anpGRXZVcnlTaEhxbVlpbk5veVBPSFR0cGdER2ZRaXhDYkFOb2k5aGNOZjE5?=
 =?utf-8?B?ek4vZStlSmpiZ0FwVXAwU0NUcEY2SGtmVkZVYnVYOVpyTVlMMVZvS0lENC9l?=
 =?utf-8?B?dUI1SGd2YldrTm43TTQ4WjF3ZmNYYktva3ZxTWZQU0MzWlhGSFpWaWpKVXNn?=
 =?utf-8?B?YS9NWmdldXo5MDFTcXU3enR0WDRUaHBJYW1JekZsQnFMbWl3Wlk0T1IzQURm?=
 =?utf-8?B?dEVvaUpyUjJqdWhBa3c0cHgzdXVZZlF6bHg3UmQ4WWwrUHZYTklLeEJieWpn?=
 =?utf-8?B?cy81M2owMTVMd0g2UkowNkNVdkhGNW5FRDllT2lpa21kTTdwazZIRnZHNlJn?=
 =?utf-8?B?akZIMFZLYmhJMDZ1c0YxRkpveXlCdGh6bkFqZVVncmIrWmtlSzRPUHZYRkhQ?=
 =?utf-8?B?eGx6RnBTZ3NOSnJNRTgwMHlQWG5IdlJ0cWlWTUptanJ5clJZWFFrT2E5YTll?=
 =?utf-8?B?NzNsTEVweVBHYWlrZjVBbG9ZcEY0UTNncE5nbmdKNm1mZEt0cnRFaC8rOXBj?=
 =?utf-8?Q?MtZm1PsZvK7dIXIzbCJK7hEDxG/6tR5y8bK0M=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:IA1PR11MB7200.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230038)(1800799022)(366014)(7416012)(376012)(921018);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?SzdQTXlnZEhJcFhKZUJJZjBNQmIzOG01bjFxdW5hdTBKZVRIWFJxaHFLeVBi?=
 =?utf-8?B?Z09IY0ZVUnIwQXNqWGo4MVJYUE5TT0lQN0NYT1JkdWxqdS9zTDh1N21UMkhp?=
 =?utf-8?B?eGE5cUlJTHA4TDZjeWQ1YkUrSzRRZjRZa3FWUWJFR3Bzb0N3QldIWEIwYmJL?=
 =?utf-8?B?V1RXaE4vbUFXdGM3RHY4cDFRczhaRGo0WGZWZUlYOEZnbXFLS3Z5eEZUWVNh?=
 =?utf-8?B?UUYzbjBsbWs0ZXBQVEUvNFRLZnlkZXJoTHJwNDlIc0ErcUdiSE1uS29kT3FL?=
 =?utf-8?B?b0E1U3ZVaGRGcS9WNkl0Qzh3b05abTh1b3ZBc0E5NTdGaU1KUnBDdjc5aExy?=
 =?utf-8?B?NWFiV1JGbHhJaHlSKzlKeVBha0ovVTFwZ3BUMVZlcFdsRVpsQ0NHVzZWL0FX?=
 =?utf-8?B?dnNBL0N5bjI5aXRvYS9NUysyWFhxOU1BN2lsLy9BeFMzRmdiY0Z5ZUlBUnd4?=
 =?utf-8?B?RWpzMzA0d3pUT0dCTncrOHVDSEsrcnQvVGhIVit6VUVCY3BXK2JLTDN6VHdG?=
 =?utf-8?B?ZFYrRnQxM0hhUHZYeWdnZTdqcWhNWUNUbm0wU242YU55L2Q5L0sreW1STGhr?=
 =?utf-8?B?QjMvWndxRU5WNUloS2JaZFdMTkZ4dEE5OWt5ajB5OHBoaW5uM0ZyMFp5Uk9z?=
 =?utf-8?B?VnQ4akpadUF6MXNJQWtQK3JhaVA0MEFoMXFtY1A1RUdYU2pQczgwN04rTStN?=
 =?utf-8?B?b1I1NHRzQnV2R1YxaDhFWTYvTVBGV1gwY2hURytOL3hCdXAybnpnZ21teHkr?=
 =?utf-8?B?WjdENlpLTlNYNGlPQ1NKRVdqa0NSS3lQb2JzZjVUTXRqeitWL1ZQUndqWmpO?=
 =?utf-8?B?MDc5OTVLc0VZR2tQb1Axb3NucSttVkQvSm9SdTUvdnh0LzZESWVUUzVGOVVZ?=
 =?utf-8?B?OG5iVVUzZkRldXh1L0hrUHFWeFJZY1RvV01CR01GQ2lmd0lCRW14OWdweXVD?=
 =?utf-8?B?Z0wvWjBqeHg2NkE4eWVVcUExeTFIZnRvclNUdFFhMGRnRFZtckNuTEZDeG82?=
 =?utf-8?B?dy9rcEUyeU5xNG9naUMzSzVNei81dmpVWmY1ZmR1aHV1ODI3Mi95OGJ3dnBu?=
 =?utf-8?B?OGFPd0duc0dRVjkxNWxkRmhSVE50aTU4b2k5TmE1a1VtTWFibm8zQWFpb1lX?=
 =?utf-8?B?OTExZGlPSHhUTi9ZQTlFRzNTYkZVTlZwZi95OXlidlZIaG9Pa0hpUjlBa2Ev?=
 =?utf-8?B?emE5QUhCNkhJV056VnFZbnVtTU1BTE9peU9VV0VoSTdnRmg5VGtNdktabmF2?=
 =?utf-8?B?QlB3RnhMT3Z4d21FSTBPSkg0Qk1hRjFWS1diZThFZ2RZMGtlT001ZWVTQ0d3?=
 =?utf-8?B?TW5PNmVnSUNBdW9SY0FPcVM2aEJUOVRzaFh2MlZDWTRoTDNoL3JUZVdDK2hT?=
 =?utf-8?B?S0pRbjFxdmx3MWNaTG9BdFZKK2V4ZlpHY244MGRoSUt4bFJta0hxM3orQzQr?=
 =?utf-8?B?aFdYcFBxN1lpdUdZNE0wWDgyRXp4MktRdC9VTm4zRXVjOEo1V3NxV29JOTJB?=
 =?utf-8?B?SWR2bHZ3bktjVmJWWVJacW1TVjJTbFNsSXE1Q3lJaU4xOHJQLytqNzNyREhT?=
 =?utf-8?B?K3FtcWR4RmtUMC8zN0wzRTFFMXIxYm9CNXdUdWNNOUFGdktWdFVjdlpGazU2?=
 =?utf-8?B?Yjc3ajRBWFZYV0FiRVdtQ1V2eWdBR1praGV2cU1ZeERlZWgwVHozbHpDbDU1?=
 =?utf-8?B?ZnVNeWZKOVE0MndBZmRrWC93UkxIZGxOTGFmYnpwUjN4L0RaZ3FUdW1TNTBP?=
 =?utf-8?B?eTRta0RmQ2FHZmxxMUZSNk96SHdXa1ZNVEFjR1VXd3ZPZXdmNTZ2QUVPeHJx?=
 =?utf-8?B?RTljUkVPY1N4ZnEwSEdEaUdhMGpjaFZlQjFYWVpRV2RydmhMcjE5WkVuUHVY?=
 =?utf-8?B?aDg5YzdPOEJXLyt6MTJLcEZEb0pMWitrVmkxTzlUNnIvRTFXeXFlR2ZueDRw?=
 =?utf-8?B?enNvTi85bGRveUszaU1mb0RaYTJ6V1J5ZlkxcUJueW12Y0w4R0RvUjBpcHo1?=
 =?utf-8?B?aXRUZFZsTXJZemxKTTJ2NUJoeEdwOHZGd3BzaVFJRWk0RTVNMFc3WGYyc3di?=
 =?utf-8?B?R3liSEhKM3FuckVXYXVvTTBpcjNTM0k1Y2RoSGdkeE5iTm5JaklSVnI2SEFo?=
 =?utf-8?Q?1RTSY/sgzKTZr6RSByuEVaBH+?=
X-MS-Exchange-CrossTenant-Network-Message-Id: acc1368d-41de-4092-06ee-08dc9591a8ad
X-MS-Exchange-CrossTenant-AuthSource: IA1PR11MB7200.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 26 Jun 2024 03:40:01.5828
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: AO6/vM8XLRITicg1DFKWSPIDrsg/u+AX467aWuhWAqLYhIayNpa6qMMe8q6dDNIWO04eQ51EPjvmKhdOl1IfkQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN7PR11MB7019
X-OriginatorOrg: intel.com

On 6/18/2024 4:04 AM, Terry Bowman wrote:
> RAS registers are not currently mapped for CXL root ports, CXL downstream
> switch ports, and CXL upstream switch ports. Update the driver to map the
> ports' RAS registers in preparation for RAS logging and handling to be
> added in the future.
>
> Add a 'struct cxl_regs' variable to 'struct cxl_port'. This will be used
> to store a pointer to the upstream port's mapped RAS registers.
>
> Invoke the RAS mapping logic from the CXL memory device probe routine
> after the endpoint is added. This ensures the ports have completed
> training and the RAS registers are present in CXL.cachemem.
>
> Refactor the cxl_dport_map_regs() function to support mapping the CXL
> PCIe ports. Also, check for previously mapped registers in the topology
> including CXL switch. Endpoints under a CXL switch share a CXL root port
> and will be iterated for each endpoint. Only map once.
>
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---
>  drivers/cxl/core/pci.c | 30 +++++++++++++++++++++++++-----
>  drivers/cxl/cxl.h      |  5 +++++
>  drivers/cxl/mem.c      | 32 ++++++++++++++++++++++++++++++--
>  3 files changed, 60 insertions(+), 7 deletions(-)
>
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index 0df09bd79408..e6c91b3dfccf 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -787,16 +787,26 @@ static void cxl_dport_map_rch_aer(struct cxl_dport *dport)
>  	dport->regs.dport_aer = dport_aer;
>  }
>  
> -static void cxl_dport_map_regs(struct cxl_dport *dport)
> +static void cxl_port_map_regs(struct device *dev,
> +			      struct cxl_register_map *map,
> +			      struct cxl_regs *regs)
>  {
> -	struct cxl_register_map *map = &dport->reg_map;
> -	struct device *dev = dport->dport_dev;
> -
>  	if (!map->component_map.ras.valid)
>  		dev_dbg(dev, "RAS registers not found\n");
> -	else if (cxl_map_component_regs(map, &dport->regs.component,
> +	else if (regs->ras)
> +		dev_dbg(dev, "RAS registers already initialized\n");
> +	else if (cxl_map_component_regs(map, &regs->component,
>  					BIT(CXL_CM_CAP_CAP_ID_RAS)))
>  		dev_dbg(dev, "Failed to map RAS capability.\n");
> +}
> +
> +static void cxl_dport_map_regs(struct cxl_dport *dport)
> +{
> +	struct cxl_register_map *map = &dport->reg_map;
> +	struct cxl_regs *regs = &dport->regs;
> +	struct device *dev = dport->dport_dev;
> +
> +	cxl_port_map_regs(dev, map, regs);
>  
>  	if (dport->rch)
>  		cxl_dport_map_rch_aer(dport);
> @@ -831,6 +841,16 @@ static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
>  	}
>  }
>  
> +void cxl_setup_parent_uport(struct device *host, struct cxl_port *port)
> +{
> +	struct cxl_register_map *map = &port->reg_map;
> +	struct cxl_regs *regs = &port->regs;
> +	struct device *uport_dev = port->uport_dev;
> +
> +	cxl_port_map_regs(uport_dev, map, regs);
> +}
> +EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_uport, CXL);
> +
>  void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport)
>  {
>  	struct device *dport_dev = dport->dport_dev;
> diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
> index 036d17db68e0..7cee678fdb75 100644
> --- a/drivers/cxl/cxl.h
> +++ b/drivers/cxl/cxl.h
> @@ -587,6 +587,7 @@ struct cxl_dax_region {
>   * @parent_dport: dport that points to this port in the parent
>   * @decoder_ida: allocator for decoder ids
>   * @reg_map: component and ras register mapping parameters
> + * @regs: mapped component registers
>   * @nr_dports: number of entries in @dports
>   * @hdm_end: track last allocated HDM decoder instance for allocation ordering
>   * @commit_end: cursor to track highest committed decoder for commit ordering
> @@ -607,6 +608,7 @@ struct cxl_port {
>  	struct cxl_dport *parent_dport;
>  	struct ida decoder_ida;
>  	struct cxl_register_map reg_map;
> +	struct cxl_regs regs;
>  	int nr_dports;
>  	int hdm_end;
>  	int commit_end;
> @@ -757,9 +759,12 @@ struct cxl_dport *devm_cxl_add_rch_dport(struct cxl_port *port,
>  
>  #ifdef CONFIG_PCIEAER_CXL
>  void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport);
> +void cxl_setup_parent_uport(struct device *host, struct cxl_port *port);
>  #else
>  static inline void cxl_setup_parent_dport(struct device *host,
>  					  struct cxl_dport *dport) { }
> +static inline void cxl_setup_parent_uport(struct device *host,
> +					  struct cxl_port *port) { }
>  #endif
>  
>  struct cxl_decoder *to_cxl_decoder(struct device *dev);
> diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
> index 0c79d9ce877c..51a4641fc9a6 100644
> --- a/drivers/cxl/mem.c
> +++ b/drivers/cxl/mem.c
> @@ -45,10 +45,39 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
>  	return 0;
>  }
>  
> +static bool cxl_dev_is_pci_type(struct device *dev, u32 pcie_type)
> +{
> +	struct pci_dev *pdev;
> +
> +	if (!dev_is_pci(dev))
> +		return false;
> +
> +	pdev = to_pci_dev(dev);
> +	if (pci_pcie_type(pdev) != pcie_type)
> +		return false;
> +
> +	return pci_find_dvsec_capability(pdev, PCI_DVSEC_VENDOR_ID_CXL,
> +					 CXL_DVSEC_REG_LOCATOR);
> +}
> +
> +static void cxl_setup_ep_parent_ports(struct cxl_ep *ep, struct device *host)
> +{
> +	struct cxl_dport *dport = ep->dport;
> +
> +	if (cxl_dev_is_pci_type(dport->dport_dev, PCI_EXP_TYPE_DOWNSTREAM) ||
> +	    cxl_dev_is_pci_type(dport->dport_dev, PCI_EXP_TYPE_ROOT_PORT))
> +		cxl_setup_parent_dport(host, ep->dport);
you reuse cxl_setup_parent_dport() for root ports in this case, and I noticed that cxl_setup_parent_dport() will update dport->reg_map.host. So the host of dport's reg_map is the first cxl device trying to map the registers on the dport, the mapping of registers will be released during the device removal, but the mapping should still be available for other devices/switches under the root port after the device removal.
> +
> +	if (cxl_dev_is_pci_type(dport->port->uport_dev, PCI_EXP_TYPE_UPSTREAM))
> +		cxl_setup_parent_uport(host, ep->dport->port);
> +}
> +
>  static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
>  				 struct cxl_dport *parent_dport)
>  {
>  	struct cxl_port *parent_port = parent_dport->port;
> +	struct cxl_dev_state *cxlds = cxlmd->cxlds;
> +	struct pci_dev *pdev = to_pci_dev(cxlds->dev);
>  	struct cxl_port *endpoint, *iter, *down;
>  	int rc;
>  
> @@ -62,6 +91,7 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
>  
>  		ep = cxl_ep_load(iter, cxlmd);
>  		ep->next = down;
> +		cxl_setup_ep_parent_ports(ep, &pdev->dev);
>  	}
>  
>  	/* Note: endpoint port component registers are derived from @cxlds */
> @@ -157,8 +187,6 @@ static int cxl_mem_probe(struct device *dev)
>  	else
>  		endpoint_parent = &parent_port->dev;
>  
> -	cxl_setup_parent_dport(dev, dport);
> -
>  	device_lock(endpoint_parent);
>  	if (!endpoint_parent->driver) {
>  		dev_err(dev, "CXL port topology %s not enabled\n",



From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.17])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4A47845C07;
	Wed, 26 Jun 2024 02:55:17 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=192.198.163.17
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719370519; cv=fail; b=UNQiytZQqJ+XCaNMKNXzTKckJuZevSEzwllwl3VaIVflJ36p9ylPczDHxReDU5wgfj94bgQLrWGKNB0vZPuqG3kJ2p/7hOhKlfTJKRpjXs1OG76KJ+CeZvdxcAPWMkZ/SviBGJRV4nylCZ7ABoNF9tUeHfllNIyH+pKc7LjodE8=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719370519; c=relaxed/simple;
	bh=my6fKU7nAfLObte0ofaPvGx+8Gw5Q/XXu7EzTg4xeN4=;
	h=Message-ID:Date:Subject:To:CC:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=sAZHFH3NXlp4wQN0DL5EzU19V2Ha+OsoNWBCgd2MDxU4tn+H+NvHDH+I/8WbhKTFSH/SFdzOacSxIQPKRn48/aFtwhTp2EunhjZ1Ij6sQitJVBN1EVcOeYiNVC7zRwM2GCQKLW+g7q8jiI6/LT05cSHapyDjy7HuWxZwKMz3w8U=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=DI7gg5Eg; arc=fail smtp.client-ip=192.198.163.17
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="DI7gg5Eg"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1719370517; x=1750906517;
  h=message-id:date:subject:to:cc:references:from:
   in-reply-to:content-transfer-encoding:mime-version;
  bh=my6fKU7nAfLObte0ofaPvGx+8Gw5Q/XXu7EzTg4xeN4=;
  b=DI7gg5EgJPfFkBKZxrtZCzaeEdCb5JYchYLDYD08XyLw4H8OMFOd8OBF
   Pg5iiEt+0YIZOPkTjARpQuBPScPD8n2asMolgyG/PiUy/KXqJ1+V9jLH1
   Is0If4IQHiZjWIjhiU2neZidTiVgEvAOb8/VymwBYx5lKFLF+47ytjVrV
   EAM+4ZCiQq2caDzEVcFKSgKTnJi6DuPNtto2Z/pJtEdKIIR07Ht6C8Wqb
   XUlg6e940nL0geVaDeRjHVf64Q5vrRjPvrwaeXINQ9IWUNMjet+5peqE1
   GfuDAfIwVpfZJjgslRJQx8XbYEGYr8F3j9zJ/04DHMQXfrrT3gLTvbKsp
   Q==;
X-CSE-ConnectionGUID: 1l2WbralQ7W3SUuvzAkAlg==
X-CSE-MsgGUID: w1N27818QXeTsvcBwNQLBw==
X-IronPort-AV: E=McAfee;i="6700,10204,11114"; a="16298424"
X-IronPort-AV: E=Sophos;i="6.08,265,1712646000"; 
   d="scan'208";a="16298424"
Received: from fmviesa004.fm.intel.com ([10.60.135.144])
  by fmvoesa111.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 25 Jun 2024 19:55:17 -0700
X-CSE-ConnectionGUID: eeCJu4PeSXCoXOowblrT3w==
X-CSE-MsgGUID: yElSg5U3S3KT0ZyA+IqJRg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.08,265,1712646000"; 
   d="scan'208";a="48431794"
Received: from fmsmsx601.amr.corp.intel.com ([10.18.126.81])
  by fmviesa004.fm.intel.com with ESMTP/TLS/AES256-GCM-SHA384; 25 Jun 2024 19:55:16 -0700
Received: from fmsmsx611.amr.corp.intel.com (10.18.126.91) by
 fmsmsx601.amr.corp.intel.com (10.18.126.81) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Tue, 25 Jun 2024 19:55:16 -0700
Received: from fmsmsx610.amr.corp.intel.com (10.18.126.90) by
 fmsmsx611.amr.corp.intel.com (10.18.126.91) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Tue, 25 Jun 2024 19:55:15 -0700
Received: from FMSEDG603.ED.cps.intel.com (10.1.192.133) by
 fmsmsx610.amr.corp.intel.com (10.18.126.90) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39 via Frontend Transport; Tue, 25 Jun 2024 19:55:15 -0700
Received: from NAM10-DM6-obe.outbound.protection.outlook.com (104.47.58.100)
 by edgegateway.intel.com (192.55.55.68) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.39; Tue, 25 Jun 2024 19:55:15 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=b75q34WbGncLrCuTmxPazdv+2lVTW5ckxzARED3NlYojFV9qImcMC/D9vCa9fTlOkV8Q56b5s5CJZvaC2HNHpXu1183xzszDk0ANa9ah2ZdmNxPXvD8KEokxWFX7AuUZH2gmfBlMkUd87fi+2UdvJvde+vQLopVM1CLLtpnMdt/5Fp31iG2rfJVYGDexFEmU/G7LEm1sSDbR6oicwXFBbvzn02zHrxCMhkqhGrcIPSQd2e0oqMX91LBdbBz0tkiqEv4lpaqyT/akGRyY2eutHvPc8GAvBvN3hta/DF4J3ucK2dcyXeEJHEPR+Feyr4kNIZ0XDJ6UTc+0noukgQdDjQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=L8fcWnv2+PGH6Dk/oQYRJKeerN6aVOY8w91u20yG3Tw=;
 b=gwVDgPaXPo2qYC0Z4ogg2uOeaeRSOQKFppaoNAO+jaC34f8KNW3l4kkqjYv9k1aGybgG0ToJ2x9Iup24/224Wc1esXmdQRO/ifHP/r78GmLbO7oFXb3Ag/qCytrOK48OFnPsh0WqnbxdRDC/JYebqH2KpV4TbZpahYI/J3VJhWCFoGIUlGOCY50vNLXNhYntOHaNKL260rJ2bxb+4KXDCG/Dfh7gqziYCpb8ag7zS7LMJoPxQ6CI6+uagyh9pJTMxN72zMnqV22sZYprt3txwqH4r+qHYF8+A3PkDg0t67KmMoL1xpJ2/1aAmCI35yfGqi3N5h9NSysLLAwBn9uT0g==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from IA1PR11MB7200.namprd11.prod.outlook.com (2603:10b6:208:42f::11)
 by SA1PR11MB5777.namprd11.prod.outlook.com (2603:10b6:806:23d::16) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.32; Wed, 26 Jun
 2024 02:55:08 +0000
Received: from IA1PR11MB7200.namprd11.prod.outlook.com
 ([fe80::8f47:b4ca:ec7f:d2c0]) by IA1PR11MB7200.namprd11.prod.outlook.com
 ([fe80::8f47:b4ca:ec7f:d2c0%5]) with mapi id 15.20.7698.025; Wed, 26 Jun 2024
 02:55:08 +0000
Message-ID: <6b1bf5ab-0005-4c88-99ec-92edca828f44@intel.com>
Date: Wed, 26 Jun 2024 10:54:55 +0800
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 3/9] PCI/portdrv: Update portdrv with an atomic
 notifier for reporting AER internal errors
To: Terry Bowman <terry.bowman@amd.com>, "Williams, Dan J"
	<dan.j.williams@intel.com>, "Weiny, Ira" <ira.weiny@intel.com>,
	"dave@stgolabs.net" <dave@stgolabs.net>, "Jiang, Dave"
	<dave.jiang@intel.com>, "Schofield, Alison" <Alison.Schofield@intel.com>,
	"Verma, Vishal L" <vishal.l.verma@intel.com>, "jim.harris@samsung.com"
	<jim.harris@samsung.com>, "ilpo.jarvinen@linux.intel.com"
	<ilpo.jarvinen@linux.intel.com>, "ardb@kernel.org" <ardb@kernel.org>,
	"sathyanarayanan.kuppuswamy@linux.intel.com"
	<sathyanarayanan.kuppuswamy@linux.intel.com>, "linux-cxl@vger.kernel.org"
	<linux-cxl@vger.kernel.org>, "linux-kernel@vger.kernel.org"
	<linux-kernel@vger.kernel.org>, "Yazen.Ghannam@amd.com"
	<Yazen.Ghannam@amd.com>, "Robert.Richter@amd.com" <Robert.Richter@amd.com>
CC: Bjorn Helgaas <bhelgaas@google.com>, "linux-pci@vger.kernel.org"
	<linux-pci@vger.kernel.org>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-4-terry.bowman@amd.com>
Content-Language: en-US
From: "Li, Ming4" <ming4.li@intel.com>
In-Reply-To: <20240617200411.1426554-4-terry.bowman@amd.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SI2PR01CA0008.apcprd01.prod.exchangelabs.com
 (2603:1096:4:191::10) To IA1PR11MB7200.namprd11.prod.outlook.com
 (2603:10b6:208:42f::11)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: IA1PR11MB7200:EE_|SA1PR11MB5777:EE_
X-MS-Office365-Filtering-Correlation-Id: cdc13560-b629-43bd-3d5e-08dc958b6333
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230038|1800799022|366014|7416012|376012|921018;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?VG43VitVSzFCMmNtV05Xb1hiclp0YTdVSTRNUG9URjdUeVcwUkFSdmNNdzJo?=
 =?utf-8?B?REUxNEp1UjNOMlAzTmwwT1JKYUpLNnhxMEl5NTBmQnd5RmRmUU5uSDZ2M2Vm?=
 =?utf-8?B?eTg5VE1hbXJoc3V0Y0Y3M09KT2k3bjdYOVZBRGhZSVordU16bU5jUEN3Z2Zp?=
 =?utf-8?B?VE1ZMU5NcUF5KzBsYWFERnVKc01mOUZjL1J5d0FISzdsZU51d1B4Z1V5cFkv?=
 =?utf-8?B?ell0bFQvYjJpOGdRKzY4bGFGWElkaUJDcW44WmdlcWdsOUYrWHBlTUVGd25P?=
 =?utf-8?B?cExteGxtU0RhMjltVUNTaTRwNlJ1WG1YbzlnODJabkFxMkxERWRDVUtHTHNE?=
 =?utf-8?B?Nlh4UFRwWlJjWlRlMkttdVBSVlA4TmhmSTVuRUYvV0tBeW9GbmwwMmxCMUg1?=
 =?utf-8?B?M05sUDU5T3RsL3E2bkVYcFIzQTVGcnF2dkxlZC9yWWpUUHBOWVVGSzAyT2tS?=
 =?utf-8?B?TGxOL2JwMjRUYWh5ZGcyU1dZRHd1UFlYekRtQ3pEN1VpQklWZEc2STJ5VDhn?=
 =?utf-8?B?ano0RE9WR3lEU1VOR2ZDTEIrUHJQMDlGMWtheTBNK1FZOXRTdk51eWFaOTJt?=
 =?utf-8?B?VGEvNXJ1cWdMMXdTeHhudXV2aC9OUUpWaWhTcU1wWFRGMUIxd0lNWmVmNkxu?=
 =?utf-8?B?aDZ6VjFWenIrMkczU1BVMDRNNWtZTVg2YW1RbTl2eWtPelgzcG9NUnU0enhr?=
 =?utf-8?B?bDI4ekZ0R0JYNlV6S09kbklzaHpyOGt5MHdMcVJldzdFSSsrSE9ocFY4Z1RM?=
 =?utf-8?B?Lzd1SG9ndndUaVQ3MUY4R0NUNEJqM3h0R0dlSnNzdTErVHBMV3dHbXRKOHJn?=
 =?utf-8?B?TXNEQUJ3dmhUMGx0L01RWUFwMDRYZlVBSXlOZUs1djZteTNkUVcxdDlVZjFT?=
 =?utf-8?B?bXNzemRZUkJsTS9QK01pQ3phSG94bTAxZ29Vbk9FamVlMlNMeDA2aTdhSVp4?=
 =?utf-8?B?WURnNHRZdkk5MEw0L2YvblNPdmR5THBUcXJELzJUTlBZcVhhbXVLYmN1OVhq?=
 =?utf-8?B?N1dlWVh1RUZFY2FoTUNKbzhna0p3MHh4dVBaVE0vT0Jtd1hTWVZEQ1REUUJm?=
 =?utf-8?B?bGxxWUFvREFVRnN0UUp6YXVvZVFsMm8wWXRXb2FxNDFYMHIySnhrdk9GeHlN?=
 =?utf-8?B?RWNNKzVuVGpZbG04bHpHQzU3SlMwWllkSGQ0bXJmMVRKeHBnelhuNi9mU2xQ?=
 =?utf-8?B?dlp3Q0dPQWdxRTdQZkpmNTI0RVFlV3c3Q3ZodzJyZFo2cDMxRzRlakRuL0ZG?=
 =?utf-8?B?QXdqNEpid2NkQ2o0TjQyNE8wRE50QVpIY1VSUVhjUWM3d3ZIWmgvRG9uWklM?=
 =?utf-8?B?OFIya1pIZUxkRUxDTS9UeEVzMjdnbERBNkZSckdrTGVWbFlWSngybXJGVWNW?=
 =?utf-8?B?UmYrcUxzRHhTVW9QVjZoc0VIQ0lqZVo4bkFSUjZJbVBZMWhJODBGZjE2MFlE?=
 =?utf-8?B?ekU5dFZaS1VDZHFxdGFJR2EyL1Flc2F4cXdFaUN3UzYrbkFrTXk5enNuNnB4?=
 =?utf-8?B?SGZtd3FtNGQ4NERvNnhza2pHOGVKVEY2M1hGUXozaHFUVGtvL2dQb0NkYWNL?=
 =?utf-8?B?NFdFMktZdmZleXZ4bjRIcFVhRzd3Wm5NaEdZenF5TExZRHNsWFNrNGlKV2I2?=
 =?utf-8?B?UlR6dDhCaENNZThZSm5vOGdYd3d3Zk9qNng3d3htNWJROWZVQXoxME95ZmRl?=
 =?utf-8?B?UDQxQ0J6WDJuMThJaHRDME84T0JtcGM3VzZRZUcrZy9GNFExUUtWMHVDc3h2?=
 =?utf-8?B?MmpuRGRWZHBtanNmZVFwN1pBZGNZdFQyM2NzaTRpWlFIWEo0RitNQW1OMVFO?=
 =?utf-8?B?UHBOakVrQ2tTZXd3VUZMd1JDMU5MNTUrdUJ0QmwxeGZBSG54WTZ3c0JFeTRL?=
 =?utf-8?Q?AMfJg82/lxXcI?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:IA1PR11MB7200.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230038)(1800799022)(366014)(7416012)(376012)(921018);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?aVBmTXZMQjREOXRDRU5rN3hhRG9ybGFuSDlTRXFJVlBKNmE2bmpZYTRZRVc3?=
 =?utf-8?B?MmhtekJLcHZSQlFCZFk5MHZVZzFXdGlFZmlwWGF6dDN0RGM4Z0VxUysyQUx0?=
 =?utf-8?B?WXFzR21ybUxXK3VsQkt4VVBHekNBUldCMEIzY3pMMHIvN3ZYM28xYUlsOTlZ?=
 =?utf-8?B?WGFGb1BFd2RITFBEdFNRcEN5RnNFVmNRVjRVV1dwdHg3OW90RGk3cldLVlVB?=
 =?utf-8?B?VHJqTkZES1UwSlIxZ0s5aDdFeVJwdGV4eU9aanpST2VVOXAwWHVPN2pXUjJS?=
 =?utf-8?B?Y1ZzRENkcDJQem0rLzlrbDBlRE9QcEwya0FYQzB1Vm44SjVpeGx1UEdDOHlB?=
 =?utf-8?B?YmRNWDNMLzZpWjdEV3V5a3liUElWNW45NksxRnJ3dGhrNyt3TVFyVU5Ib0xU?=
 =?utf-8?B?TitmV3k0YTRvb0xRUGJhQ2Fnd2doa1Y4eVZYZTdaNFdWb1lqbnQ3M2ozRVBt?=
 =?utf-8?B?ZnQvZkYzRUtrcE5QR1FGenpocWNGSFVlTjBpcXlYVXJwUHY5TEQrWlplT1Ir?=
 =?utf-8?B?MWhDNUlTYWpYcFBzVlZTNTJGY3RWd0hlUkV6Y3Y4anluSWpqbXZoOUdmTmVx?=
 =?utf-8?B?VUJJR2dQdFgyYmFLcjlyUmFQd1Z1dGpnd3JDdGlGL1BQT1ljZVEwUmtVTDBP?=
 =?utf-8?B?YzhwdFVEQVl3UlM0WDNzZEJ0VFM4bFp1eFlHOHplV3d6TS85WkNnUGdSOFJz?=
 =?utf-8?B?SGRwVE1SVWozMTZqTFR1VjdHcU9sdWpzNHJFZlVNTUI3THpUY0xYL3A0ZTRt?=
 =?utf-8?B?cWNoOXd3azVDMjRIZWxXZWoxU0dtL0htbitHdWNUYVB3eTF6dVRrVDI4VlZv?=
 =?utf-8?B?bXhSdEdkazBNajZlcUw5VlZNT0J2d3p0ZDZMTDY0VnoyOTRVUjhBMG9DKzdE?=
 =?utf-8?B?S2xwUXlyVG5SaHU0R041UU5yUis1UkNvb1duV2NlNXdjcHJzZ2MyTXlRU3RC?=
 =?utf-8?B?cTIxcWcwU0ZFMEZoWWI3eFpCZ0ZSN1dPSjFGZEJmMTNkSm4rVjZQb25PRTdC?=
 =?utf-8?B?Tk9IMTVyWkhsV1VXM2hlbHlvQ3kwRzhvWVFuS29ueXlWeGdFL0hobUNsUkdN?=
 =?utf-8?B?Ym5kZU8wTWJPa3dVL1F0OE5memlaUU5NSEtpQk9nOTN1aFRvQVUrS3E2b3BI?=
 =?utf-8?B?aHhxSFBFeFJCWllHZTQ3aWFiL1BYeElVb2RyOHp5c3ZQRzF5U05yRVpCSnZr?=
 =?utf-8?B?SnpocWZrUVlZdzg5NlNabWNJUE9STy9mQlgrc1hlWnBrd2xzQUN3Zk1sNHRR?=
 =?utf-8?B?Y3kxMnkxbm1GODg1VHVtbmphTzJtYlp0OVZGNnpzZCt6V2puNVVGdEhIZHlt?=
 =?utf-8?B?Tk9QeU5tMHNOeTA0ZkZUMkdHMHRTakNZNjEyQVFIYWlRS2UzVkVqbXlWRUxj?=
 =?utf-8?B?ZzIxb3ZkVGlCRDhncGUzTkFXc3ltaEdCaDg0MXpOb2dLemNCTVlxVzlWK2xl?=
 =?utf-8?B?VmZBbXRHYzFhVExOTVo0cHlZS01IS3pObHJWMmFwbFFvUXBsQnRyKzI1cnBF?=
 =?utf-8?B?WjZ5Q3dFQWNzZmtUbWRVTHpiL2pVVXJPRjdVMG92SGZ6YU1MTTJPWGk2RUw0?=
 =?utf-8?B?cFJUd09HcXZuSzJxc2RyWEprNHoxY1ZwQ1dDcWhOaTJFYm9SMGdyUkxYeWZ6?=
 =?utf-8?B?SjdPcnhISFRudGJmVEpXbysxbDRYYzRwdFkwRlBpWkg2Q0Zob1V0QnNmUWJ2?=
 =?utf-8?B?Ni9JUlZIK1FUalVUUEtmVVhXOEFoRjRzS1h4NjBuNHc4REJJUi9vUmlGN0Vx?=
 =?utf-8?B?cVNmdmlrOVdoeUpjcS9oVnA4eFFISHRHTkl6TW5JNmt1S3RsSyt5U1Z2cFdw?=
 =?utf-8?B?U2FWTGtZM3VleXI3SndiejlKZ2tST0NlSllncnFXSForT1ovM0ZUUmwvVjcx?=
 =?utf-8?B?RXVaSUhxVm5ENlhtdFd1SUxiYWVzMlRkRk5rYjhDVWlZV0ZKclFsVXpwK0E4?=
 =?utf-8?B?bWZmellKSDJrREZ0VnFtUWVLbC9WczJydk5xZm5SOG55T2wxZnE3YXp6UFJ1?=
 =?utf-8?B?STdFOC9WNnF3cm1SamNzOE5JcjJ1TzAvaGx5UERyQmlTNnk0NG9KOVhGRHBy?=
 =?utf-8?B?R2w3NEtDeHR0M2lsSUMxaGZjdkdMejQrcWlWVVU5OEJIMDhaaG5iem9WMFlK?=
 =?utf-8?Q?SpZvl5KLZhIrF+D32ax2B1G3a?=
X-MS-Exchange-CrossTenant-Network-Message-Id: cdc13560-b629-43bd-3d5e-08dc958b6333
X-MS-Exchange-CrossTenant-AuthSource: IA1PR11MB7200.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 26 Jun 2024 02:55:08.0520
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 8l0HQiwWVEuAdRWzWJPoLywjuO2n0qdYRfDBB3JNKBDvrCppnOJBCTNQI71Ta/v8epmPCaDYHWaUvylAKYmqGA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA1PR11MB5777
X-OriginatorOrg: intel.com

On 6/18/2024 4:04 AM, Terry Bowman wrote:
> PCIe port devices are bound to portdrv, the PCIe port bus driver. portdrv
> does not implement an AER correctable handler (CE) but does implement the
> AER uncorrectable error (UCE). The UCE handler is fairly straightforward
> in that it only checks for frozen error state and returns the next step
> for recovery accordingly.
>
> As a result, port devices relying on AER correctable internal errors (CIE)
> and AER uncorrectable internal errors (UIE) will not be handled. Note,
> the PCIe spec indicates AER CIE/UIE can be used to report implementation
> specific errors.[1]
>
> CXL root ports, CXL downstream switch ports, and CXL upstream switch ports
> are examples of devices using the AER CIE/UIE for implementation specific
> purposes. These CXL ports use the AER interrupt and AER CIE/UIE status to
> report CXL RAS errors.[2]
>
> Add an atomic notifier to portdrv's CE/UCE handlers. Use the atomic
> notifier to report CIE/UIE errors to the registered functions. This will
> require adding a CE handler and updating the existing UCE handler.
>
> For the UCE handler, the CXL spec states UIE errors should return need
> reset: "The only method of recovering from an Uncorrectable Internal Error
> is reset or hardware replacement."[1]
>
> [1] PCI6.0 - 6.2.10 Internal Errors
> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>              Upstream Switch Ports
>
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linux-pci@vger.kernel.org
> ---
>  drivers/pci/pcie/portdrv.c | 32 ++++++++++++++++++++++++++++++++
>  drivers/pci/pcie/portdrv.h |  2 ++
>  2 files changed, 34 insertions(+)
>
> diff --git a/drivers/pci/pcie/portdrv.c b/drivers/pci/pcie/portdrv.c
> index 14a4b89a3b83..86d80e0e9606 100644
> --- a/drivers/pci/pcie/portdrv.c
> +++ b/drivers/pci/pcie/portdrv.c
> @@ -37,6 +37,9 @@ struct portdrv_service_data {
>  	u32 service;
>  };
>  
> +ATOMIC_NOTIFIER_HEAD(portdrv_aer_internal_err_chain);
> +EXPORT_SYMBOL_GPL(portdrv_aer_internal_err_chain);
> +
>  /**
>   * release_pcie_device - free PCI Express port service device structure
>   * @dev: Port service device to release
> @@ -745,11 +748,39 @@ static void pcie_portdrv_shutdown(struct pci_dev *dev)
>  static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *dev,
>  					pci_channel_state_t error)
>  {
> +	if (dev->aer_cap) {
> +		u32 status;
> +
> +		pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_UNCOR_STATUS,
> +				      &status);
> +
> +		if (status & PCI_ERR_UNC_INTN) {
> +			atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
> +						   AER_FATAL, (void *)dev);
> +			return PCI_ERS_RESULT_NEED_RESET;
> +		}
> +	}
> +
>  	if (error == pci_channel_io_frozen)
>  		return PCI_ERS_RESULT_NEED_RESET;
>  	return PCI_ERS_RESULT_CAN_RECOVER;
>  }
>  
> +static void pcie_portdrv_cor_error_detected(struct pci_dev *dev)
> +{
> +	u32 status;
> +
> +	if (!dev->aer_cap)
> +		return;

Seems like that dev->aer_cap checking is not needed for cor_error_detected, aer_get_device_error_info() already checked it and won't call handle_error_source() if device has not AER capability. But I am curious why pci_aer_handle_error() checks dev->aer_cap again after aer_get_device_error_info().

> +
> +	pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_COR_STATUS,
> +			      &status);
> +
> +	if (status & PCI_ERR_COR_INTERNAL)
> +		atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
> +					   AER_CORRECTABLE, (void *)dev);
> +}
> +
>  static pci_ers_result_t pcie_portdrv_slot_reset(struct pci_dev *dev)
>  {
>  	size_t off = offsetof(struct pcie_port_service_driver, slot_reset);
> @@ -780,6 +811,7 @@ static const struct pci_device_id port_pci_ids[] = {
>  
>  static const struct pci_error_handlers pcie_portdrv_err_handler = {
>  	.error_detected = pcie_portdrv_error_detected,
> +	.cor_error_detected = pcie_portdrv_cor_error_detected,
>  	.slot_reset = pcie_portdrv_slot_reset,
>  	.mmio_enabled = pcie_portdrv_mmio_enabled,
>  };
> diff --git a/drivers/pci/pcie/portdrv.h b/drivers/pci/pcie/portdrv.h
> index 12c89ea0313b..8a39197f0203 100644
> --- a/drivers/pci/pcie/portdrv.h
> +++ b/drivers/pci/pcie/portdrv.h
> @@ -121,4 +121,6 @@ static inline void pcie_pme_interrupt_enable(struct pci_dev *dev, bool en) {}
>  #endif /* !CONFIG_PCIE_PME */
>  
>  struct device *pcie_port_find_device(struct pci_dev *dev, u32 service);
> +
> +extern struct atomic_notifier_head portdrv_aer_internal_err_chain;
>  #endif /* _PORTDRV_H_ */



From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.12])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9B19E1BC2A;
	Mon, 24 Jun 2024 20:51:07 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=198.175.65.12
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719262269; cv=fail; b=OQUrWsrtlkXlu2ICASHg/U1kw/kuRORaRvp07ulivFTIThfTRpAHDJ62zXu1IgqD4Q6Nypt69ftRMiz4EHOSf0jyZFC8WcQtmsdlAr16Kdmi8GDrHl/ZgE3z6jpgXLteix0nd0IwXjwKj9fZJi4pJlixXAEGlSZ4Et02ROrRZ/I=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719262269; c=relaxed/simple;
	bh=1RVy7WC4aVUEY8OVlLuFDASOX9C3Q1o2TrzOKkZsejE=;
	h=Date:From:To:Subject:Message-ID:References:Content-Type:
	 Content-Disposition:In-Reply-To:MIME-Version; b=o/Y5nFwiMF91bp6t+2egIrd+5Ob3P8CIcix3HmO4+0PxLSA1QEHp1z1tBig1AZXnF3XUEN3nx4YKDWMbXtZkftOZotqLDjHKvdy39Y+iwOff1aim8K5kXQ9spu15Ar53Msx+QSQB3oslQCExZ+nA+Ad0aSJ1qhojkXwVdNJoPfQ=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=Aoh/Lf14; arc=fail smtp.client-ip=198.175.65.12
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="Aoh/Lf14"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1719262267; x=1750798267;
  h=date:from:to:subject:message-id:references:in-reply-to:
   mime-version;
  bh=1RVy7WC4aVUEY8OVlLuFDASOX9C3Q1o2TrzOKkZsejE=;
  b=Aoh/Lf143oG4fsEpJqgAoXmlelMcOgyW5OAMV8HvjZ0ACD9wOIrzxk3K
   4tFOx1bf2Rfl0p7trTFqFq3sGLkcH/7ob66F7uiSDPXFVrVXRC/Jqv+yw
   SoBW7aZe6qBwhfcgNxyZ9/KR/q17lsYZX6j/cC+Y6chrCNJIBjIqFl1W4
   QVg0SisaZMDG012hx+x7hxBbHRT+AVR80lNyCCUMExj4wH8rAjKCKLT/u
   Z6Qw9YfxFS0k4j53w6GwfE5JG+17d/6A+4qf84kkBvIf+nzuUkMkzuf1U
   wRkJB3F5Tw7jgSSfhmC7dGhUGWTxxxwxl/NV0aa1RT6cxp4UTWzvxr7SD
   A==;
X-CSE-ConnectionGUID: JT4Jin0dSimu0WDEioQWng==
X-CSE-MsgGUID: wB/qZ1tXQACRHGQl+vgd3Q==
X-IronPort-AV: E=McAfee;i="6700,10204,11113"; a="27664881"
X-IronPort-AV: E=Sophos;i="6.08,262,1712646000"; 
   d="scan'208";a="27664881"
Received: from fmviesa006.fm.intel.com ([10.60.135.146])
  by orvoesa104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 24 Jun 2024 13:51:06 -0700
X-CSE-ConnectionGUID: uyVbtAhPRL+nweXrjfh5DQ==
X-CSE-MsgGUID: gM3SohPRSrO1EZphsfbAkw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.08,262,1712646000"; 
   d="scan'208";a="43228178"
Received: from orsmsx603.amr.corp.intel.com ([10.22.229.16])
  by fmviesa006.fm.intel.com with ESMTP/TLS/AES256-GCM-SHA384; 24 Jun 2024 13:51:06 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX603.amr.corp.intel.com (10.22.229.16) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Mon, 24 Jun 2024 13:51:05 -0700
Received: from ORSEDG601.ED.cps.intel.com (10.7.248.6) by
 orsmsx610.amr.corp.intel.com (10.22.229.23) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39 via Frontend Transport; Mon, 24 Jun 2024 13:51:05 -0700
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (104.47.66.47) by
 edgegateway.intel.com (134.134.137.102) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.39; Mon, 24 Jun 2024 13:51:05 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=lVgoAZTYqm0CJSSgaF4zQzRBUG4D3ne0t2uk50P7kQu+jpDFjwqb7dup2KztEZz1B5iBavSHo217WUU66RtpR+aQyFZb/83W/dCszvBxhnYqg+6OSITQuAmUACvIwZit9oS7IPjFp/b+nX7ytYnQJiZ/siXWHET2ZWF9HolkXZIpBnN3p+4Bc1xmkE6qlIYhWa4pDfVKrtqODw/cSUa+7z2npSu2wLQz+eTBOHz6WHbKWPm2ult4OUOrLakfi9yQniwQT04qcn/PXrzoQAuAa9huyIr5/i7+cKP3EIrc0QMJTPC1exJCwqKCUXMxVFeKjG48cR5YVpWAvR35JMtXDg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=NpB7dXwnz6lP5jVol28R/FNIrgseMQ3LZkVFhJY1Qp0=;
 b=f/F2rSP87cKgSRs2LD1PdupgTkOE8bZvsp5jhBZvf5BdaAe88GD93UVDsy19X0LVqKeOxmnZTVKSfMt4Iy35v8FHsy3NoK80HK7pV5UbMYc2LVQEJ8WMc3UoqhCROVJw6OgnDEHCYYWNKQwzLKAJThuPX02Zn+i6oYeoxF4gkW6sFvaDXR/mSmdIyBCk3LHg0McCI0/vOPSP67L94jWXieowH9v0VrWvSR9Xmr0N+z8OCzN2/FUpdtQcqqKjyhl+h/e3HByX9T+boc0ZumTO0fzRXxJUAJRtg+/HrP4PkmS57fxJdl+VQwZhMFgTW+7k7UMOUpA/2zQ3mHy9AdP4cQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by SA2PR11MB4796.namprd11.prod.outlook.com (2603:10b6:806:117::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.29; Mon, 24 Jun
 2024 20:51:03 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8%6]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 20:51:03 +0000
Date: Mon, 24 Jun 2024 13:51:00 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Terry Bowman <Terry.Bowman@amd.com>, Dan Williams
	<dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 0/9] Add RAS support for CXL root ports, CXL
 downstream switch ports, and CXL upstream switch ports
Message-ID: <6679dc345fd4c_5639294a5@dwillia2-xfh.jf.intel.com.notmuch>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <6675cece52eaf_57ac294ea@dwillia2-xfh.jf.intel.com.notmuch>
 <f4dffe22-b383-4118-bd3b-a3afb2df835e@amd.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <f4dffe22-b383-4118-bd3b-a3afb2df835e@amd.com>
X-ClientProxiedBy: MW4PR03CA0014.namprd03.prod.outlook.com
 (2603:10b6:303:8f::19) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|SA2PR11MB4796:EE_
X-MS-Office365-Filtering-Correlation-Id: 891cd948-99ba-4870-2b53-08dc948f5c95
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|366013|1800799021|376011|7416011|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?8Lnu66Lb5NEEkaFi6CTzcFcmwaF19nrQZJLFcK7a8XvxsNW3HYscYVuxNDtz?=
 =?us-ascii?Q?7b/5tOjPNxNZ+WbtivftGQUh9XS6lTjLWa5kcx38+efMDpKTLAM7Oh7L3ZtE?=
 =?us-ascii?Q?bG+BrXMqGWQsIz6z6U77TX+cXQvhJMZE729gPyV+jHAr+EKstoY0vtpScxpj?=
 =?us-ascii?Q?Vhe2dbvYTJ8LF8UgrDlf+4rjHKe0+ztR8nVepuCEGgmlNo3Z9ihnhikxPBzX?=
 =?us-ascii?Q?C3Lhg2m20FU8jXF59bzOoeOtMN6N6x/BHUymYlHrolqPuFt5Qautz1rQBjHz?=
 =?us-ascii?Q?gG0U7BAi5/I1afL0qzXLUAMk8Zt9HKGWM8RAUgX7UhY5ELlegtw6DY3gNAFB?=
 =?us-ascii?Q?bQvwPiIvcqDzu7ENwConXQFd8aFrzdev4NNtVRvdQAFkBo9ojnm3iUeHEwaV?=
 =?us-ascii?Q?iSBX8OMY7VUr3VNIH8AkNB82INwZ5otvsHBFlzR2t69iUkdO5aL0JaPFQKk/?=
 =?us-ascii?Q?SUPYroPs0V9HfrlkgBCn/RSHQfG9QxLLNCXjZjlQizsFvuGhrQYLGrAF6+7w?=
 =?us-ascii?Q?vujJdsnaO+sUxdWcYsPmA2v5tO10FIAfTxncI5IPSfm6YePnBL7cH/bGFO0E?=
 =?us-ascii?Q?mb6gPdXL0i+vWZNO5Tu59JUWZlk71UPK8g+N7lfRR1maX81FxlCtKnQ4iwKY?=
 =?us-ascii?Q?QbmJnAGGTYw0d9b7gxDKF65Wwl/GqjokHnRn6OzvC4mnHRSID6f8WCZVjULv?=
 =?us-ascii?Q?KjWmJdg27WLmh5CTjvXISFHTu0f4YScP87Xx/cnO3Zd1Cy9DhVIzm9ZTbZ0H?=
 =?us-ascii?Q?h5QyX3MXYGbEZEyyG7khCVIYI06XITD4OUPL14KCrnnbInrWwrwavoqlzSYu?=
 =?us-ascii?Q?ciJ4CvizvUL6qAbSI89qrWE/RbAoF+H0j4ODEvdcf56vcaoHPBlrTw0Z9D/8?=
 =?us-ascii?Q?8klyBKVt5AVTaxfD1fBXmtxPxiemSOIZiS9HgaP27WBfoInZnICgDFzfcBuD?=
 =?us-ascii?Q?dQjUKN2HKe1ktWkKktkqbtr8alxGwxZ9BYLB98NUuRBZVyMHB01PU53hYts3?=
 =?us-ascii?Q?VkaKrUXs8wwiI6uPtTiC/OtlT1OyZyOsFETwlLHFh1AHTo7VSMKUzZ2fjai6?=
 =?us-ascii?Q?ahK0Ez0s1g7eNV7f0RELAQRHojgmIHkJHe/k3xP2UPy8KiCCxMtYsjUnry0X?=
 =?us-ascii?Q?ftu8W9mYEj9bOpKP5/NzIztGmIvN411E2IAXIiZWqdb2yzpmoTvfqfZW69TH?=
 =?us-ascii?Q?0Hqi9E4AlSfgx8acmKs0pw2ywZFY1aXzygqF5jxaPI0jG8edIdO4PuOUN1d9?=
 =?us-ascii?Q?5NSZKEGw5Bn/eExqAmPuW0bDHxcg27wCpCQVPP8kdfo3qgtRq/UXt2EoDPXa?=
 =?us-ascii?Q?xLS7Pnhu1ytjrJw4wMkFpFMYa2763PaKU5W+gEhoFMDISJ5lPBBa1zpyQdGr?=
 =?us-ascii?Q?wmhDqIs=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(366013)(1800799021)(376011)(7416011)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?cAiy0696ynQIg+s9Hdbjn5Jzq2raJipz9as/c52EX6Slc6G3toWwGwVB+w9X?=
 =?us-ascii?Q?VSNV2TwsnO97SmsYwptc2tDiv8wuWNHjhXLIGWZkqFCQRfQlmACS7JCYIUCe?=
 =?us-ascii?Q?GRcHzu4dh7Y3U1rz1N7J9xJOUW5mDJQ7SpTjTMwon9X4JoRaiklgM6cy0gmT?=
 =?us-ascii?Q?c6oR6RCWL3SzFw/RSApDR+jLW7Do4WD1jB7/L4g+U3KqilsCH1lo48c/kJ61?=
 =?us-ascii?Q?JHp9zVsVmr9/2r23tmQX5CXpcCi3TOGOosP5EZQeXlsuZiGtHR66VjqCSW+U?=
 =?us-ascii?Q?YcNW5qfZb672CAsTw/Lfd29OtGmUgAc4thUfLXaRSphD8Yyi5zqX/ECZY0xN?=
 =?us-ascii?Q?zkCLhGKT2tW7ILGeyPVTaJxem6BPlfGEKrU/DNbTbHJ9DWQeK1qBM1+OFp3z?=
 =?us-ascii?Q?K7696GWM4GBZV6JW+ilh+1eLhboHYJLtklfJajWn+9lFSRaWJpAw0jnq9INF?=
 =?us-ascii?Q?Y3hIu+7zIKd2EsZqboEThsdIZyPcyaIgp3yrSZl8gEd7GW3AmK0gnqtfPfna?=
 =?us-ascii?Q?43nv3wnS//ljEc4Q8ZMKEqIi0KIOK4MJKzVukSBiRQOvyDPmwtKFi35QfsMw?=
 =?us-ascii?Q?dkPgtETBQNY9yMluuI0C5hhWlQ1gBZZHa6SzBU/XOHOGjNvaMUoRJlhsuaET?=
 =?us-ascii?Q?9UFS7ND2xeGjh+3hrdHxsu4UHo1tBSTwhbz3km661iSUHiHAitnTjm/Wchxm?=
 =?us-ascii?Q?fPHScxtEjNrki63wxCbdcxx5Gy85B3Qw1zj0idX/fXQO/3JmCydRGUs4rMeG?=
 =?us-ascii?Q?IkhIlaNMs/ABQxB6oy1WhhueYop/6h9IDApz9uZdI92Em6E30zOkObXaME3u?=
 =?us-ascii?Q?k8EQFpPklgRJqKXHznZu6R3ZKJhosDTvK6oezV8YMkNJYX6RHVFZHZfCEEqS?=
 =?us-ascii?Q?tB9yIJf+ScOZ8BZWZMQdgfHJyiRc91NvsBl2CEfihfiUOG8wm70VwemShvD6?=
 =?us-ascii?Q?QY0EJh8Pxr1x1Cit6otiGoxui8VlmTctYu+GEOrNQQbpBbF5t+hRoLqLUmfv?=
 =?us-ascii?Q?yBluVk+7VFWsswRhihvdEv+CulBfYXnl1l7fXrGxkSu1bEwXlN+ydnctRIYp?=
 =?us-ascii?Q?zKhxhfC66ZYeYpuTgj8DiEqtw6vTXsocI2ERxWvH8IwC09txN+3lLI4zaOgp?=
 =?us-ascii?Q?bLCPaxeLX33LIccUFWZpXACqNpu9akef/Vdby4ALVAlkckJQxgaF4g5jne7l?=
 =?us-ascii?Q?+8V/L3a7Rj5hy9UAWdPk4CzLrWDHnV3LsryHEO48mxuq9X9htnOpt0iJkysK?=
 =?us-ascii?Q?S0lTMSdN4X6rASWfqBUYbNN5RuA4XObr7iCZSvPVTLe+SNgmUho66RKRqVKi?=
 =?us-ascii?Q?AtQTKoz8MNmHUzG8CNsdXoB1frSqYRmNn3KFCbhTNsu1SsrT3TSBwoZ4wX1g?=
 =?us-ascii?Q?sme5f4y+q63dWzblgACUVExoV9ktx47wiqDpS2Ll5sWEZpuouwqo0CdfnlXS?=
 =?us-ascii?Q?pXfAZGDP7AqFYUJoCEeThRRhS4X88a7GEMc9YlHLP8zZb8d939+Z0glLCo7l?=
 =?us-ascii?Q?W6Qf6amyjQKx8jQdB2RQmvklFUIVkC7h7uatTYXIe5rgehw5lMCrt3hXmlTP?=
 =?us-ascii?Q?ocGffJ0NkZpkXcyJMHW63wrU+FWoU5BnBhIQIbxfH4qiCOOQ3vzYfSj6KdvX?=
 =?us-ascii?Q?rg=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 891cd948-99ba-4870-2b53-08dc948f5c95
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 20:51:03.5757
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: XOsupbD3DUdIiHx56LNtjbSNMzVbK0HsB+6+Ma+4hYb6pDiKH1KYnP4e1Ykl7iFBLITYxsYEtWud9rn/gSGvP42/M+MevTdp0NCYoDFZbPo=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA2PR11MB4796
X-OriginatorOrg: intel.com

Terry Bowman wrote:
> Hi Dan,
> 
> I added responses below.
> 
> On 6/21/24 14:04, Dan Williams wrote:
> > Terry Bowman wrote:
> >> This patchset provides RAS logging for CXL root ports, CXL downstream
> >> switch ports, and CXL upstream switch ports. This includes changes to
> >> use a portdrv notifier chain to communicate CXL AER/RAS errors to a
> >> cxl_pci callback.
> >>
> >> The first 3 patches prepare for and add an atomic notifier chain to the
> >> portdrv driver. The portdrv's notifier chain reports the port device's
> >> AER internal errors to the registered callback(s). The preparation changes
> >> include a portdrv update to call the uncorrectable handler for PCIe root
> >> ports and PCIe downstream switch ports. Also, the AER correctable error
> >> (CE) status is made available to the AER CE handler.
> >>
> >> The next 4 patches are in preparation for adding an atomic notification
> >> callback in the cxl_pci driver. This is for receiving AER internal error
> >> events from the portdrv notifier chain. Preparation includes adding RAS
> >> register block mapping, adding trace functions for logging, and
> >> refactoring cxl_pci RAS functions for reuse.
> >>
> >> The final 2 patches enable the AER internal error interrupts.
> > [..] 
> >>
> >> Solutions Considered (1-4):
> >>   Below are solutions that were considered. Solution #4 is
> >>   implemented in this patchset. 
> > [..]
> >>  2.) Update the AER driver to call cxl_pci driver's error handler before
> >>  calling pci_aer_handle_error()
> >>
> >>  This is similar to the existing RCH port error approach in aer.c.
> >>  In this solution the AER driver searches for a downstream CXL endpoint
> >>  to 'handle' detected CXL port protocol errors.
> >>
> >>  This is a good solution to consider if the one presented in this patchset
> >>  is not acceptable. I was initially reluctant to this approach because it
> >>  adds more CXL coupling to the AER driver. But, I think this solution
> >>  would technically work. I believe Ming was working towards this
> >>  solution.
> > 
> > I feel like the coupling is warranted because these things *are* PCIe
> > and CXL ports, but it means solving the interrupt distribution problem.
> > 
> 
> I understand the service driver interrupt issue but it is not clear how it 
> applies to the CXL port error handling. Can you help me understand how the 
> interrupt issue affects CXL port AER UIE/CIE handling in the AER driver.

Just the case of the AER MSI/-X vector being multiplexed with other CXL
functionality on the same device. If the CXL interrupt vector is to be
enabled later then it means MSI/-X vector enabling needs to be dynamic.

...but yeah, not a problem now as we are only talking about PCIe AER
events and not multiplexing yet. I.e. that problem can be solved later.

> 
> 
> >>   3.) Refactor portdrv
> >>   The portdrv refactoring solution is to change the portdrv service drivers
> >>   into PCIe auxiliary drivers. With this change the facility drivers can be
> >>   associated with a PCIe driver instead fixed bound to the portdrv driver.
> >>
> >>   In this case the CXL port functionality would be added either as a CXL
> >>   auxiliary driver or as a CXL specific port driver
> >>   (PCI_CLASS_BRIDGE_PCI_NORMAL).
> >>
> >>   This solution has challenges in the interrupt allocation by separate
> >>   auxiliary drivers and in binding of a specific driver. Binding is
> >>   currently based on PCIe class and would require extending the binding
> >>   logic to support multiple drivers for the same class.
> >>
> >>   Jonathan Cameron is working towards this solution by initially solving
> >>   for the PMU service driver.[1] It is using the auxiliary bus to associate
> >>   what were service drivers with the portdrv driver. Using a CXL auxiliary
> >>   for handling CXL port RAS errors would result in RAS logic called from
> >>   the cxl_pci and CXL auxiliary drivers. This may need a library driver.
> > 
> > I don't think auxiliary bus is a fundamental step forward from pcie
> > portdrv, it's just a s/pcie_port_bus_type/auxiliary_bus_type/ rename,
> > but with all the same problems around how to distribute interrupt
> > services to different interested parties.
> > 
> > So I think notifiers are interesting from the perspective of a software
> > hack to enable interrupt distribution. However, given that dynamic MSI-X
> > support is within reach I am interested in exploring that path and
> > mandating that archs that want to handle CXL protocol errors natively
> > need to enable dynamic MSI-X. Otherwise, those platforms should disclaim
> > native protocol error handling support via CXL _OSC.
> > 
> > In other words, I expect native dynamic MSI-X support is more
> > maintainable in the sense of keeping all the code in one notification
> > domain.
> > 
> >>   4.) Using a portdrv notifier chain/callback for CIE/UIE
> >>   (Implemented in this patchset)
> >>
> >>   This solution uses a portdrv atomic chain notifier and a cxl_pci
> >>   callback to handle and log CXL port RAS errors.
> > 
> > Oh, I will need to look that the cxl_pci tie in for this, I was
> > expecting cxl_pci only gets involved in the RCH case because the port
> > and the endpoint are one in the same object. in the VH case I would only
> > expect cxl_pci to get involved for its own observed protocol errors, not
> > those reported upstream from that endpoint.
> > 
> 
> The CXL port error handling needs a place to live with few options at the moment.
> Where do you want the CXL port error handlers to reside? 

I need to go understand exactly why cxl_pci is involved in this current
proposal, but I was thinking it is probably more natural for cxl_port to
have error handlers.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (mail-bn8nam12on2080.outbound.protection.outlook.com [40.107.237.80])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id DBF291A00FE;
	Mon, 24 Jun 2024 18:22:04 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.237.80
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719253326; cv=fail; b=ZY/cqKFtIKmepsR4XpNFOx/1KbTqw+mA9/WeyhSr0WPrDYCpipvWe/KehvOFT3H/F26yyYt3Uy+q54yNs+8aAeYU6Vdi9xE+flW2akm+OK30qsifYn4n33zPkF+VKiE8Lpey26fWFZsMY0IfclrraYwPQ/aWVObfxPSmmGjgVi8=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719253326; c=relaxed/simple;
	bh=dfva8uz+0f8UW3izRNiSuBZ7WBiqPOmldCmN9CVF1tU=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=FKyQ2IiRVLEKpLnvJZiW0dyYfid+Ho/rv7M0zBb94VJwqyDZ2I6iNWZiUofVRJMFlmlTJeVkUVKKqWMFEirobmilYe0fqDTWqxY5iGvQay7MeAsDZyk80eIbRDEV9O+h5tI9dsPimraLKgTfe9SQLutMK2AD6uAghi7AzcdFqQs=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=MAtFZlBI; arc=fail smtp.client-ip=40.107.237.80
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="MAtFZlBI"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=A420+JkOmECrDw4p6YCdsBi5n+noZgJj1rF5sNCu+hJei7tD+tZreVLFzan/RQowGt9O2nSgrAexZ54/83ylJougsZNzHeToGjlFHekUfJk1P1ei2UXLeMyQwNuqZ4h6sfdwgPBavmG9R9GoA7Zs+TwPq+7CmyZmMYjN/+VMryFRiAaDVTOT+vXQOTOUWiPcESZbNTSpo7mPEVRQZCNjIMk+nXMxJG31utvoiGlu9O1vQlVPK4LGHCjDRzl/2Oc5hBHTAf9cXBvMrgj4YhN2SoTzK8/WfWD4H5sqpkWZiXxtCHiUeGAXtsu+14X/Ktl31n7ZZzvzeS6j9xb1KaYguA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=6VfJDJVSQjlZLG042LOLIPBtB9llFPzfFyKmD4/T0gI=;
 b=nAqINEreKrqpuehKsDicmVianRH8xRTRPu+X5BXGX5jWXpyHnVtdKJ2kpov5CQYZCnoxVzu5jlVvug5iV5kRpVPwlLKbLcFRDeRZVeE8oGXALVn6wruW0sKmKZBKAM8hl8xWiOCz2n5nYJBmboVIX3278aUEFd/0vfiViwDGkARVnNJu12hhCGardY7f2H3YI73ojBdajCslARqeZ5X6xYs4c85l/o9nCZ2xY7RKCFvQofEEDQnITaqzycacbh7rxYcHNi4no5x9/Ng2sQprWh1V3B3EuQ7ZkIHDrkR52/VP93lj2sfzH5XkFSANw3ib496mtJOuEV/nZp0MRPZ4VQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=6VfJDJVSQjlZLG042LOLIPBtB9llFPzfFyKmD4/T0gI=;
 b=MAtFZlBIFMy/Hfde4hQB/xhmOSIkJkp6vWhO65EJ9D435xwZBg2+G64eVryB2vhR4nRlRGUlrYx5PNDfa8Dh+/XbSYBaKVhQBRW3fiUMb1GIIPAteD6SpPQfuY2vIncbml4cERh0URFEEtQybnB/7lw5igNYB2dsyyNdDezG2ag=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by CH3PR12MB8482.namprd12.prod.outlook.com (2603:10b6:610:15b::8) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.29; Mon, 24 Jun
 2024 18:22:02 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 18:22:02 +0000
Message-ID: <ce191d03-c228-4f1e-b96a-0388220bc586@amd.com>
Date: Mon, 24 Jun 2024 13:21:59 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 3/9] PCI/portdrv: Update portdrv with an atomic
 notifier for reporting AER internal errors
Content-Language: en-US
To: Dan Williams <dan.j.williams@intel.com>, ira.weiny@intel.com,
 dave@stgolabs.net, dave.jiang@intel.com, alison.schofield@intel.com,
 ming4.li@intel.com, vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com
Cc: Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-4-terry.bowman@amd.com>
 <6675d622447ac_57ac2942c@dwillia2-xfh.jf.intel.com.notmuch>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <6675d622447ac_57ac2942c@dwillia2-xfh.jf.intel.com.notmuch>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA1P222CA0105.NAMP222.PROD.OUTLOOK.COM
 (2603:10b6:806:3c5::13) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|CH3PR12MB8482:EE_
X-MS-Office365-Filtering-Correlation-Id: 76187b34-5797-430b-751f-08dc947a8b0e
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|376011|7416011|1800799021|366013|921017;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?VkZ4a1lUUTVvcXcvUUJzNU8vSDlUMHlBd1NZeGFHeFN3Z01XT0t2OHlJc3pJ?=
 =?utf-8?B?cU1UR1lmcUtqajdwdDZiUFl6cGxselNKNWlBQjFMSHRkMFBUTlRGMi9hTERa?=
 =?utf-8?B?d0xIUi9reVFGZ2N4SXBVUEU2TUVFL2NvTURqbXN4emc3bHlLaTNzYzdkNHE5?=
 =?utf-8?B?eDMyVUlXcCtvM2xIUk56bDVwT1FVZzVtRHlOd3pMeU4rd0Rrd1ovYUtTZHJM?=
 =?utf-8?B?Y3dKWWFzUFhGUllHVWdLUkhaVTRKend4VnVWTHA3cEhHSnJrUUxkK3A3WXEr?=
 =?utf-8?B?ZUFVdGYvUzE3MjRxT1pCemEyV0UzQ0c5TXJLTkZQeU5zVmdwWDJNTUdmUzM4?=
 =?utf-8?B?MTkwaDRpNXY1ekdaYVdlM2ZHVm5oWEl2cmdOeGZWemhvUkdYdlQzRlh0OE9q?=
 =?utf-8?B?RTVHOHZWUzN1cXBkbTB2eTRrQi91ZDRobXU1ZGMwd0ZiL21nZTQ3eE54dnEw?=
 =?utf-8?B?OThldkZTWHUwcVRFa0F2SDE1UmRNRXdJT3VYbGpMVDZ2dWQzRE9mTlFnbGJV?=
 =?utf-8?B?c2d0QXVQWGlxSmV6cEpwN21sOWxQUVVqRjNYQ2NhR2dNVlVad0lwa0luSmRF?=
 =?utf-8?B?TGJQcm91bndOYzdpNEt5SUNPYTlnWW5sK2owRXpOUkQ4Q2FTNXR0bkYrYUJ0?=
 =?utf-8?B?Z1ZVZ2Zreit6OEZjazBveGtiWkFzYSsxUGdHazFOZXV2d0w1UWUwYzZBYXV2?=
 =?utf-8?B?NS9YRFhzR3RUcHlLVHpYSWo3V2YrTExFK1R3cHpOR09jeGQwTXVMSnFabFhP?=
 =?utf-8?B?UUlQcDlxLzRNTEdNVDVBOS9haVlVY280SzZCU1BoMGlpZTN5VmpMK20zT1NG?=
 =?utf-8?B?NzZNMHFZZVZwMEMrS2VVVXVjbG5ONFlXWnFmY0NjZlhwbjErb1o1SlM5bHZT?=
 =?utf-8?B?T3IvUk90NUhwa2xKQ1g1bDlINE1NYzNiUjM1TWx2dHdDUEtaaEZZNjNlRFdh?=
 =?utf-8?B?ZS9HbDErU05XekpMM0lUMlRxeVBtOWp2VkMxUFZ5RnpocFVjQVFpVmNhbFRK?=
 =?utf-8?B?a2pDVXVBMDVhVTVmVEVZdVc2ZUk1bE02Q2xEOUd3MTFjRkJYTFdlOHBkdjYx?=
 =?utf-8?B?RnZuSWNIeUpick9HRkZhNkdrY2x2cThzV05ldDloYTl0alNlSEQ1TVI3MmVK?=
 =?utf-8?B?QW8zN0xOWVQ5bkRjQ1dEWG1EZnZCcHVNazJSeDQ1bElacHhYdzZ0Z0R3Z3V5?=
 =?utf-8?B?bnRqeE1UYU1uZ3J5VGtDL2JLTjZJUWFvYmRHMFp5UWxwVzFvQnVTQk1xMGZ4?=
 =?utf-8?B?dTB2L24rOVhyK0xKNDVjZk41UGlMMmtVR2FFcHFSdFpyVHhOdDJPclFhRFYv?=
 =?utf-8?B?VEhkM201dGxTWXJWdDJLbzZndU9yWjQwMEhVeUl5Z0Y4d2xlbytEMmo1N3RP?=
 =?utf-8?B?YVpmZTdwQ1hvU3ZOU2xDcEplVTBtbjZmb1RMUFdpaHY3YmMySndWUzcyWmoy?=
 =?utf-8?B?RGtITzV3MXY0emdWWEROVnJRVUlkc0c0OExGL25vVnBQdlJ2Tk5qZ2ZxZGlG?=
 =?utf-8?B?MUE4SWV3Y1lrb3Q4WFVBYU9pWDhqUFRoZ0RuaU0vZWErWW5kUHpsYW9BaWJw?=
 =?utf-8?B?TDNrM3ZRSnB0eTJub0M5VjhUcTJxaDU1ckdQU2Y1bUk5WjNIRVZVQkhpd2Nw?=
 =?utf-8?B?OVViTHZ0bFNSblFEeGNOSGhaODEza1p4WmpCZ0p3d1dPc21MMkpQelYwdFNS?=
 =?utf-8?B?TlBWb2xObGV2bGgwOHZCNU90ZXNRWUdZK1BIVnY5aEU1VWQ4V3l3YUg4ZXlw?=
 =?utf-8?B?WEM3OEo2M2t5TjBuNmN3NTgxeUhtVFdWUzFnVWhINndlSStTZXF3Vjk0aWxS?=
 =?utf-8?Q?EhUIKb5nP+Mp4M1T31Jiw8oBGgSIO5emb/H0I=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(376011)(7416011)(1800799021)(366013)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?UXU1YWdtTWVqYVo2Zk9Ldyt2RWo4cG81R1dyY1F1QVVsOE8wWFZYeDJLNm1j?=
 =?utf-8?B?NUIrb2ZUWTJlMEFoN0dwWlhwUkJ3elFDeHRjVUhRSWpNQmNDMEs1WnRYRU1u?=
 =?utf-8?B?RUNLK2N2NVhGMkZ2UTliRCtYNmxucUdKOXkyMFRhUWk5YURoK1pOcjhWWW03?=
 =?utf-8?B?NEhYVFlDNGlHL21qVnJCOVI2Z1ozeXdqNmhWMS9LZUI5VFh3VVVjeHRSVkFz?=
 =?utf-8?B?dnZNMmVqWHdPc3VwZUdkQWd5bGM0blA2TThYVmNyTWpsTkJ2ams2dndRZm84?=
 =?utf-8?B?bmVWWEFpTTFHZzNic1RiOVRBUVZzd3FFZ045NzY0cnY0THRCRUJvbStrdU5u?=
 =?utf-8?B?bDZpZlF2RkJ0Rm1NWFZFWE50L1U5NEdKWjBoYk9ha2FyTFB6QzQ3b2Fqckcy?=
 =?utf-8?B?RGJxZnp6WXZOdzR4TnVzMnFsUStHUjJrN1d0Yk85bmFFejUzRWZ4eXN6Znc1?=
 =?utf-8?B?K3V4MWdoWWRoKzNHdG5xemIzRy9kckVOaHdBeXZpRnZ4VlJiYm5sckFnRVRr?=
 =?utf-8?B?cXlJQVhlWVVxcnVETlpyYm1yZXJDY2dsVEZqQmc0MXVNQ3RsOGRwOXIxZmdG?=
 =?utf-8?B?V3RGNkxnMGtnTnFVL0FCKzhmY2Q0VmhYYjZEaDdPTEk1czY1OExEa0RrNk45?=
 =?utf-8?B?UjdNNWpLbDFUcHZ4eFBBajJ5KytuSkE2WjV1SEtYTWd6UUlDNDF4aDU2a1ow?=
 =?utf-8?B?YjErZ2FYY2VLR3kreE1ScjlSZDNnVnBGa1FLVkNmZWtjZ3dBQ2dWUUo2S2Er?=
 =?utf-8?B?bTdXc0pJMnB5N09YQTJTTHRwM1UxSm5LemZld294N2pwUUNEUituMjBTd0lx?=
 =?utf-8?B?Vyt0alB3K01idVZQSmZrQzFNczgwTUFrS2N3bHR0KzNMdGxvRUEvRnBSQms3?=
 =?utf-8?B?dWdkbTVIeTJHaS9aeFlkSDVmNUVod04rM0RSa2kvZEFRNWduR3VMS0k5SUpQ?=
 =?utf-8?B?VHZBYUZFYVJ6bjZ6azlNVkVsY2Q0ODRTc0NBUC9YaG80RElLOVdpNUR0Wm9M?=
 =?utf-8?B?S2dESFRLYjFsbmlpUjhWaDJxMlhTWTQ4S3lwOWhLUDhuMmwvSGlaNzJzWUxN?=
 =?utf-8?B?RnNJbWkrWUZvQUFEN3hudVFKMkNmeWo3b1puZ29NcXJLYnpjeWM5ZnM0NGR4?=
 =?utf-8?B?eUZDTGYrUFUzaSt3cHVyVFo0TUdWVVJaY2lkWHgwT1hwWHd4Zys5cG5DSEJu?=
 =?utf-8?B?UHBjRXNSczJPYk8yTCtEVXM4VGU0NEVIeGZzYVVrNnJLRjl1Q3U3amZDbW40?=
 =?utf-8?B?aU1jTWdyT3Z5aDR5MHRRNVVKK2FVU3FtdkxqcEUwN0lnZkEvWFJadUlheEhD?=
 =?utf-8?B?eVBFTWFxMmttQUluSXhiUkVHNnVOMlpUeVVRQW1kYXdjSlV6WWtCRXJHRSt2?=
 =?utf-8?B?aW1CWXFyQmhHL1A3Vmw5NWxEREpmQTNYS2E3dGlaWFBQeHlLUlNZeTNPdFRh?=
 =?utf-8?B?NlVNNGJyOEIza0ovUmlVTS84QnpWZm1PdEZkZVVNdERUcGtpUnZxejRNaXhF?=
 =?utf-8?B?SzFoeEgvTE9ZQVNKOVppNGJqNEtKUU8xWkI3eDNBYnpIRWh4cFNKdElIUHky?=
 =?utf-8?B?YlJCZHJYZjVtZHNpNTRCWnpHOGwvcFVQbXU2MEErRGlmeVV2dzFHSS9pTStk?=
 =?utf-8?B?dkd4VXVrQlJMZk92cXdwK0ZSRHc5YTEzQmpLMU84ZHNxWWFXeFIwZytuRFht?=
 =?utf-8?B?TTZnYUp4RmNReTQ1eWk1bG51b3ltckxUbm1DYnJSMEowNmdISzA4SEVEd3pz?=
 =?utf-8?B?OHJkT1ZyOFRsZVp0TW91WkR4bjlQN0c5RmN2Z3JqYkx0RTU5NWRJOEc4aWg3?=
 =?utf-8?B?TW1OSGcva2ZIRTlONTdRMlZNVGxJbW9hVGxPREhSOTJEbmFYdzhQQnZRMGVZ?=
 =?utf-8?B?cjFnSUlvS3JCV0h5V1p1Z2dTZS9URVZvcFVTTjFNWkREdHZzdDdhb3hLaDEx?=
 =?utf-8?B?MDJSQTB6V1AxMzJIaWZsY2pYUHowUWx6MnI4VnNVVXBaazZsbkFiUTJHbEJQ?=
 =?utf-8?B?ODU0RlNsVm0yZE9KRTJvMVUyUy9kamMyZkNPNXZSZldWM2F2MFJ2SlQ1RzNW?=
 =?utf-8?B?eEozeGtWQ3pld2FzaFJEaWMyWWs2Q2JrdzFPdWVHRm5NTDF3MVN2TzdJcnZS?=
 =?utf-8?Q?lo1BrdAjxMgkLwxwO2HpTBgL6?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 76187b34-5797-430b-751f-08dc947a8b0e
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 18:22:02.1143
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: z3M/tvIgxWa8YDd1dzJJ6zWVuM8CYZePy6nS0EKtwM+dnGTymsJBzTeqllcKGLreUBd2N3Yy3E3/EQQaRvNjAg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CH3PR12MB8482

Hi Dan,

I added responses inline below.

On 6/21/24 14:36, Dan Williams wrote:
> Terry Bowman wrote:
>> PCIe port devices are bound to portdrv, the PCIe port bus driver. portdrv
>> does not implement an AER correctable handler (CE) but does implement the
>> AER uncorrectable error (UCE). The UCE handler is fairly straightforward
>> in that it only checks for frozen error state and returns the next step
>> for recovery accordingly.
>>
>> As a result, port devices relying on AER correctable internal errors (CIE)
>> and AER uncorrectable internal errors (UIE) will not be handled. Note,
>> the PCIe spec indicates AER CIE/UIE can be used to report implementation
>> specific errors.[1]
>>
>> CXL root ports, CXL downstream switch ports, and CXL upstream switch ports
>> are examples of devices using the AER CIE/UIE for implementation specific
>> purposes. These CXL ports use the AER interrupt and AER CIE/UIE status to
>> report CXL RAS errors.[2]
>>
>> Add an atomic notifier to portdrv's CE/UCE handlers. Use the atomic
>> notifier to report CIE/UIE errors to the registered functions. This will
>> require adding a CE handler and updating the existing UCE handler.
>>
>> For the UCE handler, the CXL spec states UIE errors should return need
>> reset: "The only method of recovering from an Uncorrectable Internal Error
>> is reset or hardware replacement."[1]
>>
>> [1] PCI6.0 - 6.2.10 Internal Errors
>> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>>              Upstream Switch Ports
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>> Cc: linux-pci@vger.kernel.org
>> ---
>>  drivers/pci/pcie/portdrv.c | 32 ++++++++++++++++++++++++++++++++
>>  drivers/pci/pcie/portdrv.h |  2 ++
>>  2 files changed, 34 insertions(+)
>>
>> diff --git a/drivers/pci/pcie/portdrv.c b/drivers/pci/pcie/portdrv.c
>> index 14a4b89a3b83..86d80e0e9606 100644
>> --- a/drivers/pci/pcie/portdrv.c
>> +++ b/drivers/pci/pcie/portdrv.c
>> @@ -37,6 +37,9 @@ struct portdrv_service_data {
>>  	u32 service;
>>  };
>>  
>> +ATOMIC_NOTIFIER_HEAD(portdrv_aer_internal_err_chain);
>> +EXPORT_SYMBOL_GPL(portdrv_aer_internal_err_chain);
>> +
>>  /**
>>   * release_pcie_device - free PCI Express port service device structure
>>   * @dev: Port service device to release
>> @@ -745,11 +748,39 @@ static void pcie_portdrv_shutdown(struct pci_dev *dev)
>>  static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *dev,
>>  					pci_channel_state_t error)
>>  {
>> +	if (dev->aer_cap) {
>> +		u32 status;
>> +
>> +		pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_UNCOR_STATUS,
>> +				      &status);
>> +
>> +		if (status & PCI_ERR_UNC_INTN) {
>> +			atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
>> +						   AER_FATAL, (void *)dev);
>> +			return PCI_ERS_RESULT_NEED_RESET;
>> +		}
>> +	}
>> +
> 
> Oh, this is a finer grained  / lower-level location than I was
> expecting. I was expecting that the notifier was just conveying the port
> interrupt notification to a driver that knew how to take the next step.
> This pcie_portdrv_error_detected() is a notification that is already
> "downstream" of the AER notification.
> 

My intent was to implement the UIE/CIE "implementation specific" behavior as 
mentioned in the PCI spec. This included allowing port devices to be notified if 
needed. This plan is not ideal but works within the PCI portdrv situation
and before we can introduce a CXL specific portdriver.

> If PCIe does not care about CIE and UIE then don't make it care, but
> redirect the notifications to the CXL side that may care.
> 
> Leave the portdrv handlers PCIe native as much as possible.
> 
> Now, I have not thought through the full implications of that
> suggestion, but for now am reacting to this AER -> PCIe err_handler ->
> CXL notfier as potentially more awkward than AER -> CXL notifier. It's a
> separate error handling domain that the PCIe side likely does not want
> to worry about. PCIe side is only responsible for allowing CXL to
> register for the notifications beacuse the AER interrupt is shared.

Hmmm, this sounds like either option#2 or introducing a CXL portdrv service 
driver. 

Thanks for the reviews and please let me know which option you 
would like me to purse.

Regards,
Terry


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-BN8-obe.outbound.protection.outlook.com (mail-bn8nam11on2046.outbound.protection.outlook.com [40.107.236.46])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E9F318827;
	Mon, 24 Jun 2024 18:00:52 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.236.46
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719252054; cv=fail; b=l7W+LVUpjgMl0OeE2nKTdhUUwrmYxQPXzvJtECPvKo4m7ltO9Uj9eU2P9eYOmHncqTHtaMCMsa0IB+5NgXXrVyiTWcyhidf56YAH1zXm5fusgmyk5H2h3h2YzYvJ373sPFJJlD4wpBOXhaLeZfKNwiOLL0Cx+i4W4JbqW+yhW/g=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719252054; c=relaxed/simple;
	bh=atk9gTHDdO4XpWlh6K8SCw8spYRlY2bB35jdqToTLA4=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=Ao31CozMjsWW8phnC0xe4KOWyuuOpCfCEEr11IlsvAexWrMeLVbTDM5BrdsiQ0K0iXrRjX46NkpW5XR10Fvfd6cv+j6yvQg9W8+cyg1LC12BYRpEVMtJTQ0HUANgFxaV0iVvM7X7flbCkYM0Tq4QYS79FaEZbhbR/mecOAREh34=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=bquyTqnF; arc=fail smtp.client-ip=40.107.236.46
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="bquyTqnF"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=eaE8Y0CMefNmWXrTJgbfprMcjN5PuBfcZmdt1oPJodrenBP/N0jMiHio3Dmka1ui7/lMoM2WnRDaTG6FMs9wDaNGQg5wUJ0ST+LNxVZn/yzMyyww9TW7ssMnoDe+Z5f1P9nH6iv+ZqiijOoXtdlIP7THgk5V/ku03udYDO+XICm7e7iDF1ZP2985CRNOivM+cp7TVgfUDC4Yp3LMnGU/0JOEhucuF8OMYwF1pq4bOIL9dGKV3tvANZttZH8gmiFd2Mzkl9VOzpMCAJRNs1bXQPO2cJnH1QLHigYr5vMZwaT8vatOmaNCQ3Kb0CnYYD289UPRL9A7eIxUMjAsAHdUNA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=0i0SqlM4IX7PkJVXHedx/P9ssYQo04Z1R+wZzx215vA=;
 b=ll3o1SuZsT7WQBJUWPbd065wdIVDtWTMI3VAsveeaLPMINMB6xlF9cxZGdlb8jTJoU6CHXt9Oxp0Doi+ghy5ufEAz8HkHtNRykU2yupEb2JI6IDiV8I/O8Iflas8uY+iAh9efVMq75KCtXNDKKaRdFeBlcUd549UJxXR4YYRbC2gRLiplznMLgBRyVT7egyt2fuRAvuUYPh1zMM8dMi1fS68oAEjlF1YcmH5jBZ4tJaxdpbxuKhNTBNcgC9jzqTjWY/ql4nTl9oLWxVoVUVtfclooLUC6BycfFwCPjx62bKHm+nSiBwrhjFMloTGfOyoi2hkT4b7PpZ8jAkbQZTfFg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=0i0SqlM4IX7PkJVXHedx/P9ssYQo04Z1R+wZzx215vA=;
 b=bquyTqnFwNxt69FeTWqTvUJZa+JpGV0rULFlgH+PYz6hUnlTKeQFD7vSRWAS+zsaJVTvisZkD+OByFKjbRp7Ob6UdWMn4K7CcImmDcO66MFa6TlxJkmg/iwFt4PyetXbvjPjkSUEa4GtQpO5xh0Ed+unQ1/IOTFp2+IMJAwrH5c=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by DS0PR12MB7656.namprd12.prod.outlook.com (2603:10b6:8:11f::7) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.29; Mon, 24 Jun
 2024 18:00:44 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 18:00:44 +0000
Message-ID: <bbb5d224-1e09-4d54-82eb-6b53ae766d80@amd.com>
Date: Mon, 24 Jun 2024 13:00:41 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 2/9] PCI/AER: Call AER CE handler before clearing AER
 CE status register
Content-Language: en-US
To: Dan Williams <dan.j.williams@intel.com>, ira.weiny@intel.com,
 dave@stgolabs.net, dave.jiang@intel.com, alison.schofield@intel.com,
 ming4.li@intel.com, vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com
Cc: Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-3-terry.bowman@amd.com>
 <6675d34860e5e_57ac294a2@dwillia2-xfh.jf.intel.com.notmuch>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <6675d34860e5e_57ac294a2@dwillia2-xfh.jf.intel.com.notmuch>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SN6PR04CA0074.namprd04.prod.outlook.com
 (2603:10b6:805:f2::15) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|DS0PR12MB7656:EE_
X-MS-Office365-Filtering-Correlation-Id: b5f4c788-e5dc-4843-9c37-08dc9477912d
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|376011|7416011|1800799021|366013|921017;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?V0VsTXhkb3hHZmsvU1l0SWNucnpMbDZmYld3RUFEeU9zSmhJbDl4NUpWKzBz?=
 =?utf-8?B?VlpTN1ZBNS8vUW1OMVhjWVhIQ0xqUjJuSi8yRVBCMlovRE5tNWtwSU1yVkY0?=
 =?utf-8?B?TS9qNlF2SUJtN3RZY3YvTWtneEtpZUN4c211QWlvcmt4TkpZV2M0ZXRIRmRz?=
 =?utf-8?B?dGFiczdrVENGR1FUNHZPS3NFR1g5OVd2ZFNnbk51SkJ6TFBBU0tSSzFKT09T?=
 =?utf-8?B?SzFKTVRKN3RQRjU5SlF6bmxpSnBKYUE1amtCZGJ3aW9jaUhUdU1UazBkY1FM?=
 =?utf-8?B?T0hXZkpBcFp1NEd3NXU4dEVGMzZFTVZsL0prbEwwR1NJUHQvWHNib2grZUJr?=
 =?utf-8?B?Q1F6cVErMTN1anR1V3gzOTFESjZRdC9VNzdGdmRiNjVId2JzLzlYNEhURTI5?=
 =?utf-8?B?TkZiQjNMWEwwclo1dWM0SmNqNGF2MTR3bGtXUFF6NlZLUkM3Ri9MS2Z2YXlu?=
 =?utf-8?B?dUEzN2xwWTUwZVl6T1FYR3daRTJyN0R0Z2FFZEs0NERFNHhxNHJqNFhMVjlN?=
 =?utf-8?B?SXFqZkd3ay9kY3NkLzNmK285cVZsOGMwN2UwWWFQeHI0b3JSTXA3NlU1UEdD?=
 =?utf-8?B?RnZ5dVJLK3phRzRBVWt2QmFLdEJTdE9NRGVVeHAwU0d6YWEvSi93TWlaQmxu?=
 =?utf-8?B?UzQ5OTFqWkN0SFpuRUZUQTJobmw5dFBBVmE5eVVqNVpMdGZ4cDB0VnpyRkM5?=
 =?utf-8?B?akJNWW5md0dyOUp3QjJkMFFvOFBBeVJIYVJrRy9NajJvNmFPaEFSNk5nR0pw?=
 =?utf-8?B?UEF0WGlseFJRd0tRbFkrMWtUbVNUa2lrK3BBbTU1QVZjRnFzTTZtZ2Mvemo1?=
 =?utf-8?B?VEt1SmxzaVJSRXFKU1Y2QnVTNHFkSnhOZXFUWE5PT3gwallRZ1pwUHdvVzZ5?=
 =?utf-8?B?dS9hVDBrTU5xa1k5YjBGS1FJcFAyWlBKbU5Zdk40R1lseExuZ0E1U1dwTDRC?=
 =?utf-8?B?VkkvQ1VINndOa3ZScFJLRy9xN24rVkVPUWQ3YVZRanI4SzlvSzBvOFE1SllE?=
 =?utf-8?B?NXU3cWg2TWt5d3g0dGpkczRpb2wycVp3ZmZoVGJRMTFCajRZcG1yeXlWODVj?=
 =?utf-8?B?KzFLSjh3QUY5Wng5cGVqdnNQVjFuOGJpdys4MnlhQ1hndTZpelkxTW1wK3Mw?=
 =?utf-8?B?bkxlODBrWVYyRTltZnhUNi9lOUF2SkJoOHRyQVpjeVZib3RsRkhUcmVKSUsw?=
 =?utf-8?B?aDJxa2x4amJjOFozNmdoQ1dIZk83OWRmQ09pd0hCWmZkdjN3N05zZlg2c2Za?=
 =?utf-8?B?aXJrdUE5SFVQdTQrMDdDaENNei9rcmZ6MnRQaWMvVlJrNUtVMjEwVW5JaTZH?=
 =?utf-8?B?dERpVERJb0JpQWpBb0xyVHcxYVhpbGZEdEtvRS84TmVLalRvMnhOYUNWQ3Jw?=
 =?utf-8?B?Yk5rcXphRFBoVUM1NU5SMVk1NFllbEhiT3hWdCtVWlp3R0Fodjg3MW1UV3Fh?=
 =?utf-8?B?cmZlTzNKMXlQdTkxRGVTcU9WeDhsdWlzK2lQTFRveEY0MEZWK21TV1hoOXVy?=
 =?utf-8?B?QVpnSkc3SmxBaWxuVlExZklmdHc2NmxxVzJsak8wb2ZNY0p0aHMvQzBtSHg3?=
 =?utf-8?B?YmgzSUEyb0RKR0k3Tzd5RkdVd2lFUDZEZmMySllUMFA0MmJjcXEvZnpTK1Bu?=
 =?utf-8?B?ZFFOU0lvTURxVjhFSHZHOVM2TDI3ZlVNVFBQbHluMTlxSkVpd0x5TkpZSlFm?=
 =?utf-8?B?aStRRndQVHdKWmsyU3hEUjZ6WlpiNS9iZ1VjanovMTdZeXhtbU5Qc3pKKys2?=
 =?utf-8?B?bnltQTg2TndzOEI0NzFSNWcyRmNUbnMyWnpEaDJHeDY3a3dZRFBrQ1RKWkRF?=
 =?utf-8?Q?wCMsFqilC8kMae+LOAlGaVdqLP6LZREzoPlAc=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(376011)(7416011)(1800799021)(366013)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?RWREMkpGcHVRa3JCRXNYbmRua25KcFlqajV2aGxiL1Y0V2xJaXhkTnJxWjh1?=
 =?utf-8?B?L1BUUGszbnJieWw5R216NU9pWWM4TkVVbzF5UGY1Sy9Ba0tSM215UUZzL1M3?=
 =?utf-8?B?Q2dVT1psUmRtRk1YNUJSTHhlK0M3dFNaUnlpaUtYWStidzB6ZGxoTWxVZHFv?=
 =?utf-8?B?WjF6TEJERnl3N3Y3WkduZGlnVnBXOXFJOXp1dFZNZW95QURPc3ZwR0ovNzA0?=
 =?utf-8?B?USs1aU92clpQeFd6dUJMcjl6dHYxTTlKQW11MU9Dc3FRUWxKbWhpZ3lCelFW?=
 =?utf-8?B?eGdGN0Jsa29STVhQTDNhYkk3bVhiWVVsT1hrZjZ1MG4ybFVuY0FpU2F1UlpL?=
 =?utf-8?B?eDFibklpclNzeGlRVDlGaUNQb2hRem91d0tQWG94M3FaL3BManYvbTcvVjNs?=
 =?utf-8?B?STE4T0dZUUtXdStrZEEvVElqeGorV3FKK2RyaHkyOGR0VmlhWmFXMWdvVXk0?=
 =?utf-8?B?dXFOMGdJckw5NmVFQzZHK2p5VlVEVXpidkJXRnlyZEo4S2diM0xaS1RzbFBJ?=
 =?utf-8?B?TVcvN1N6aGV4TGFMVHI1QVF1REM4cEJuUENpdDExdkgrQ0RiS3VndkZUVjVW?=
 =?utf-8?B?RGpFUDV0OUNQVmZxZ0YzY3M1VWtDcFVocS8yNjI0ZnZhOWV4WFZUVldRSGI2?=
 =?utf-8?B?ZEgvTUUzU3ZDR05ncVdHUkdaS2xKQUJvVHhIZmd4enpsaXIvQ2NGaG5LS2M0?=
 =?utf-8?B?Z01OY09oVWtZUFA5Mnd6TWw1Y2xibGJnVE8zb1RSamdrT1JiN2t6bGVrUEE2?=
 =?utf-8?B?QnNqczRmZmVkUGk5Tzl0bmxHZ0Uya1F3ZnBlTFVmcHJ0M0c3WW9RVWQ1b0hG?=
 =?utf-8?B?Q3FQRm44TGhSakZqNnYrQXhuMW1KSmFCMnJQak1iL00yM1JPMnY2VTd6Y21m?=
 =?utf-8?B?SVhnQS9CQmh0WlpreUFxencxdkh3dUdGbEs3ajBlNzNKczhJVllDRVJjM2xu?=
 =?utf-8?B?WllYSHRiVUhQSmY2TnB0V2FMaStBSlNOWGdIZjVadkZ5MC9kWEdEVllucnpr?=
 =?utf-8?B?UWlobkJJU0Y0Q1pRc3hsdGdXV2M4ckt4QkVSc1VlclpJaXJKZEFGYUIxYnpm?=
 =?utf-8?B?UmFsREdSclRIWVVEVk9hbFlBaEQ4OGpUOU42K1c3cnlSd1JXVVFMUGI5Uld6?=
 =?utf-8?B?NDErdWtxZW9vby9LSENOazN4YXNnaStTVWthdkVDTS9PaitBd2pWZU82RkQv?=
 =?utf-8?B?T09lY2Q4YTFFMXc4dWJXS3hJWjRBZWtXelpaYXdWY0MwYURjMmdrR2F3QWth?=
 =?utf-8?B?TXRFNXFkeDNnRTQ1aUFCMmVtdUVWRE85dVZzZDRTNUNMaWxLSW9CcGxvanNH?=
 =?utf-8?B?dmdVaDkwR0xQSzVrSmx5bTRSNUNXWlE0cnluWXJXOXF2ZHRKNmlWZkwrTHRK?=
 =?utf-8?B?SjlHN0JyeXFmckNYeVNyb2NUSVBlTmJSRVA2a0t0c2ZNTWNwMHhweWFtTzY5?=
 =?utf-8?B?QnlVYVJ2K3FCR3BvOGczd2pkdmZSZzdiRERNb3UxZEFtWXBtT015b1l2YjMw?=
 =?utf-8?B?VStnSnNMTk1uNDFMaHpoMC9kMTR0ak96MWluZ0FFWW9ROXJiZW1FRGkxcTM1?=
 =?utf-8?B?QkxZdmZjTHVtUTRSWGgyd2lROXFYc21DcUJNTGN4d0pLOEVUb3IyNkpMWWlK?=
 =?utf-8?B?Y1BLdGdLUGszR2kveGp4aEtVMzhZZ0xmQUFVZ1J1MUFhQVhVVmoyS1RXKzR5?=
 =?utf-8?B?VUhPcHVZOXViaEh2R2cwbHNNZWttcEtRZWllbk1LTEw3UTZEVU1FNU12cXFP?=
 =?utf-8?B?K0QzeUV1RFFDRVVUeEs3MXVTNVd1dXhacEk3cnhXYTJZRTRnVHJENjhyMVh5?=
 =?utf-8?B?OEJkSHVnRXZtQ3JJanFUOEM3aVJMQjlXWndMb1JBTWJkbkMwd1hkOVJFQ01Q?=
 =?utf-8?B?Z0t6c3BBMm9MM0QwTXpSc3VpV1NxbkUvTjZyTHNsTHJHNnZ6V3h0WG5UL1Nq?=
 =?utf-8?B?OUJGUDY4RmN0SWZnWWtqNkZRZnNDcmo3dGd3dVRua09aK3V5NGh5UnROcldw?=
 =?utf-8?B?WUwzRHl3azN3NWxESVI1S3Y1TjdURDFLZnFuL0tTS0RsUmNlcHFneGtBWUpU?=
 =?utf-8?B?VXVMYkRhUTJSOGg3V1JGTFIyKzFJNU5OUTdSazYrY0wwbmJoK283S0F0TXlF?=
 =?utf-8?Q?7YHMj8+n3qOrki1y8L5EomxWE?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: b5f4c788-e5dc-4843-9c37-08dc9477912d
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 18:00:43.9355
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: AT8dwRV8qHdljzzVkOPm9wU8hBKK/eioVAfPr7KOw450ml9whLydItIC5SJqD/E/qWMf2hCy7Rg3aljOa9y6AA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS0PR12MB7656

Hi Dan, I added a response below.

On 6/21/24 14:23, Dan Williams wrote:
> Terry Bowman wrote:
>> The AER service driver clears the AER correctable error (CE) status before
>> calling the correctable error handler. This results in the error's status
>> not correctly reflected if read from the CE handler.
>>
>> The AER CE status is needed by the portdrv's CE handler. The portdrv's
>> CE handler is intended to only call the registered notifier callbacks
>> if the CE error status has correctable internal error (CIE) set.
> 
> Is this a fix or a prep patch? It reads like a "fix", but there are no
> notifiers to worry about today.
> 

I will add mention "in preparation for future patch".

>> This is not a problem for AER uncorrrectbale errors (UCE). The UCE status
>> is still present in the AER capability and available for reading, if
>> needed, when the UCE handler is called.
>>
>> Change the order of clearing the CE status and calling the CE handler.
>> Make it to call the CE handler first and then clear the CE status
>> after returning.
> 
> With the changelog clarified to indicate whether this has any impact on
> current behavior you can add:
> 
> Acked-by: Dan Williams <dan.j.williams@intel.com>

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-BN8-obe.outbound.protection.outlook.com (mail-bn8nam11on2089.outbound.protection.outlook.com [40.107.236.89])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B1AA519F48D;
	Mon, 24 Jun 2024 17:56:35 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.236.89
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719251797; cv=fail; b=i3AWih/G2AMeqYE8jwdVqgPqWkhOzR3+9H2uerX2wAkn1tokSjl1FxqRRyaYSnEGzEdQ0pXQzgfujxBtVYTGx+2RUqH1zMEaiGXbVgBgxUZjyqjvGIYjTqSchA2MxON2EjU1NXZVXufDnCep2oe9UsiIrEJn3lnDYpOck7SLylw=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719251797; c=relaxed/simple;
	bh=WBBeSxYXBXZy2Wqu5D6Pj8Gbstv7vS/UbFTg9ubyodo=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=NVOEMJHNX4Kzq2FY6j/b5rGf28HlfzEy/18zU6jKhg5UgPG9WCyvTYdCnWzTRqPzSc5Gem/hHuiOGo7tAfvpo/Tw6nuY+DsvDgl3YT4JcXoBJEUF7r8ysYgloYmTEcRrXkFs23J/w/VzPyuyb72ves8whVNbZAh0ZyochqSrNbE=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=rJBXvWJe; arc=fail smtp.client-ip=40.107.236.89
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="rJBXvWJe"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=C/5FENQcjDRSjloLSSLsJtNGa/VMnYq0o45KQSrQj3O0IATfm3rU5LfhXgWO5SzcFcA3CWNSV9hoacn6xBYM1jph+afC4pUrzmGyUZcBcq3d3byZz2JwWJN72vsiB8ir3stbRy2e6qu5jDsxQO/kThS6otj5IZyig588X2eRlWGYE5qA8q7K5j8u4vIDoE5GQMyG7Hrymdsp6aUdlcXQb/76tHQ93uOq2YLvouhjsz2lwaatSKstPdgKXBTLCl9hvCK0xNcQy3ccGDZfAoYwOLxkNILz+/YUm+am7XNhzvZjuOCT2UIlflc01M9P8s/LGlmTEecjQpnooRT5gfSf3w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=v44BJyW+uW3EIX0DLDPXcqLc3QyIINFcVrFXE5ycM8c=;
 b=Z2hb2OEK32GW15lJO0CivYM3aoX/IvXt1Rj/oNbm1h3hbTPg5HP3R8vp086McoZHSNFrjbx6VotWkosAIJxZMqddHSnUU2NRTpO57LU3fL2rDzBC9KVJ/1MBk7pfFrtmD1xkDIBqCOPz1uVpCqXH3dj/0sf+sCDyTeF0LUHPwxH5R6CFkLHUsPv7SYq8wEwqvlgB2Hm1nroEpocwaDE4dVyGqS3d9chWHJYlm/tau0uBXHG7A1trE3VWwjcfXRitg0Mp5xY5wNehpnUrBl2W6eI26Mz99ovYnl+R51qDp74VMVIz0jbp/xP5FF8xpFsaVaqIFnyTu5iePfCaqfcZZg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=v44BJyW+uW3EIX0DLDPXcqLc3QyIINFcVrFXE5ycM8c=;
 b=rJBXvWJeg/d7tk0FG5C2T87TqHTTw4F7yCDtExlghhQGaHNaExTIc22m7447FlRQDIaXvKRbdnyBHnWOYnFMHuwvPD9DK7zuWEOmyKtWjr5L4kFWB4t1+Ak2nYJxjnqByF+TFNMN3sKxzpYdTwxL579YuKlqxcmkCqCaFFL4uIs=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by MN0PR12MB5761.namprd12.prod.outlook.com (2603:10b6:208:374::6) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.30; Mon, 24 Jun
 2024 17:56:32 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 17:56:32 +0000
Message-ID: <ecc5fbd0-52e1-443f-8e5a-2546328319b2@amd.com>
Date: Mon, 24 Jun 2024 12:56:29 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 1/9] PCI/AER: Update AER driver to call root port and
 downstream port UCE handlers
Content-Language: en-US
To: Dan Williams <dan.j.williams@intel.com>, ira.weiny@intel.com,
 dave@stgolabs.net, dave.jiang@intel.com, alison.schofield@intel.com,
 ming4.li@intel.com, vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com
Cc: Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-2-terry.bowman@amd.com>
 <6675d1cc5d08_57ac294d5@dwillia2-xfh.jf.intel.com.notmuch>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <6675d1cc5d08_57ac294d5@dwillia2-xfh.jf.intel.com.notmuch>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA1PR05CA0013.namprd05.prod.outlook.com
 (2603:10b6:806:2d2::19) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|MN0PR12MB5761:EE_
X-MS-Office365-Filtering-Correlation-Id: 543b7e76-96fb-4370-905e-08dc9476fb0f
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|1800799021|366013|7416011|376011|921017;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?ZVJhbVZ2Vzh4V3RmdWlyME1YRHpjK2tyUjY0VEZQSnBXSVNja1FYYUxMbHcw?=
 =?utf-8?B?T1hhb2J6c3hNYjJpRzNsczVzdXBPVEhpemZqREFvVHdEc1ZzU2w4VkMxVjV0?=
 =?utf-8?B?NkVNZFpkUWgrUmNreWpSVzRXY0tPRFdZMmRPV1ZUTFA4bWxUUmNrc2RkcFFk?=
 =?utf-8?B?cG9GdUJtdkh0bUhaajBUeGp0WDNGQkJYeGp1ZjdXdDRDMVNVemlBV0tkdlJD?=
 =?utf-8?B?YjRSdDQ0YjFVdXR3UkZIK1dGbk5hbXlZV0RpaUYzMkpsdGdFRFZYZFJPNnk3?=
 =?utf-8?B?Und1MGtMd0kvOVdKNVpQejJPSjJmdHU4Z0lZOElTRmw4UHpPUFRTQlU4K0Ux?=
 =?utf-8?B?OC90cjdlNERJSHlsU2U2R0dZeExOd05aaVFmeFdMbTZhYkwvK3NvbWs1UFZy?=
 =?utf-8?B?NDZQRCt4Ync4ZHdzZ0pqbzFmU3hObG1PZEVKeU93Nk8xN0dDdWVmM0wxSnkz?=
 =?utf-8?B?aUliMFltSWl2a2ZVYUgyT3BQclJCQjhTQTE1RDRFSE1vWDBFbkxubm1RK2RU?=
 =?utf-8?B?MUhHOUhxYmNuOFRvYkpIVElTdnZ1L2JacjQvazJkc1JDTDEyMWUzbnRUNXZP?=
 =?utf-8?B?YmF1OFBKdWRzc1ZVcnl3S3FhMjkxekdaWnJxS3E5emJ0RkZVYi9OQW5kWWps?=
 =?utf-8?B?SUVRSUcveGQzVUF1UCtyY1p2RnZNNmVMWHRQRnIvRHdqb2I4L0d5MUNnSkZB?=
 =?utf-8?B?NHJhVjlWKzBDUEhHRmo4bm02Sk5Hclg4ZytQaEJ1Wi9VN1RWZDJYaFkyL0Ew?=
 =?utf-8?B?YmRoK0p5OTcycU0rWFBUOUl0RERwdmtzSnluMkRwV0hUSzFPK1BsZFBTaXRZ?=
 =?utf-8?B?RUw1VE1SUVR1VUdFVjlDWmhQdWVKT2RyOWxodkNVUm9xRFBHUzgxdTVKamdU?=
 =?utf-8?B?QzlEaDdXdkpySkpRZUFTWnhUZWNKQzBGSzYyTDdZeWNDSVp1dG1MNVlqdkdz?=
 =?utf-8?B?QytORWJrenkyMWNjNzc4N0syYTFyMWVKbTArM2ltaWZPMmdrTlMzaW9oWFRi?=
 =?utf-8?B?ZlZ3YWtlUmUrU2RmRHJVRmp4bXVCWFU4SmtnajVhZVpHcVVId2FqdUNpTWFR?=
 =?utf-8?B?RStXNkk4MzB1N2RyVGFhd1ltSTFBRFNqcGRMb0xkdmJReE54eTI1akFOWWo5?=
 =?utf-8?B?R1VBdDdtTGNhWUNTb0FXem5LM3hERjdqTjN3blJNUnVBWWZiOEJzU1RIYVRj?=
 =?utf-8?B?Tk5lUEtUajJIU2syc0VkbkdMUEd1Q2RkNlVCNi9nR0dqSkMwVW55NkhvYWhO?=
 =?utf-8?B?ZzBHTkdXR2dhTEh0anMyTVhsNFcvNExKdm1MRVJpRU1kMjY2QWliNHVWZHZk?=
 =?utf-8?B?T1ZpQWVNeHE0V2tvTmNuR0JnN2ZYOUQ1TWN4N0diSUdWdGt0Y2duWWtzaGdr?=
 =?utf-8?B?cW05bTZKUE82NXNzQzQvSm03TkYyS1A3V3VlVWZUMFFXdm83emNCbTdCNnRU?=
 =?utf-8?B?RFF3ZytQUVh5WlppQi94cm1ra3k5QlFLbktDM1M1TDk1bWxoUzltem4vNDRJ?=
 =?utf-8?B?ZVhxYWl3ajloMm1heEkwUUtFcU5DY1RiaVNTZDZJZndkWE9vSmZ3Rkw3aXA3?=
 =?utf-8?B?UW55eDk0TFJScHB4Z2tLUTRNZ1YzVzVtMEs0UzVUKzlOVE1DSC9ZUFNHcERR?=
 =?utf-8?B?WVRxNmNQSDVjSDgyYW9RbHZTcTNPMjAzb2lnbDlPVUcrWVJ3bHJEYjlKSXNr?=
 =?utf-8?B?SWl0NTlndWhhN293b0pnd2MrSHJtck5hN3BSWm1zMkZ6dWR2NzZDNmRhYjBS?=
 =?utf-8?B?ZG1aTzhxejdUUFRnNG93SnVrZWxsSURkWTBlTFdNMDVabHhSM2RsazM1Sy9N?=
 =?utf-8?Q?Mzh23Xe7ktaGHH6wgqDgoKxBOigvSFSOhTU/o=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(1800799021)(366013)(7416011)(376011)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?V1UwdTg0dkthbEJDM3hhTEtLMTFISjh1QTJQeGlGZTZhYmFmK2o3cUNVTXNk?=
 =?utf-8?B?SU1rTUc3clRIdmlQblFIY1B0SWFPK2M4SS95WWRqTFBZTDI4NnNtVFBYWUg1?=
 =?utf-8?B?Mm0zU1A5czQ5SkJJSTlqNm8vR2VsREV6OWFwSXVRalNDMGdQT2lkUTBpOTJi?=
 =?utf-8?B?di9wbTFRNTdOc3Nhb0VGSGljSXN1YlNsVldJQ0grVXdGQzlrem9JYTdhdDcy?=
 =?utf-8?B?cHZ5ckYrM0ljdlJQa1NIejVUcVF0NHFWR0h4WFYwRkVFRmJCK01DcWJUVjhQ?=
 =?utf-8?B?UXYycWNUWGlEVU0vbkN1QWxrT3dwb2VFb2ZIK2pnbzVGbUh6dEtYZnAyd2k2?=
 =?utf-8?B?dWs2WDZnM25VRUJiU0l3NXplcXZzc2JGcXFMcG9iaDdpN0w5Zy9ZaWtNOE95?=
 =?utf-8?B?RXdlclNreG1IdUcwZENPVGpMd3lDNGRsUVgvV3oydzRSVWhCbkE2ZFNTWHpT?=
 =?utf-8?B?dmhmTk9vbG5nTjlRUkhvUCs1ZERtaDYzUUdNRHpaVTBuMm52MWRVSjRGV2Zh?=
 =?utf-8?B?dkxqQmxKM1hOaitpU1MzZERXTkk5ak5HRzlYbkZxWXcwckloT3haR3V1c2hW?=
 =?utf-8?B?VzJsWFJVaHlBcU0zRmJVZ05FdHdDYVlUR0NMZEtRbjdaaXNGNmx0TCtPampI?=
 =?utf-8?B?eFQybUw0a1gxSHQ2Q0s4MXpWNHZkM1FVdEpJclNzYnJDcmltOXpxcDhzSW9V?=
 =?utf-8?B?MlFjMmdrZnRhMFZGNVluRmg0RkNSaVRzbkwxRWxzYzNUaVVLalBUcTRyVWhL?=
 =?utf-8?B?emdHc2xyK1FCbmRFSytTMUdXUENpZW5tTks1OXpzYlZZMnJTNXU3S2RrNk10?=
 =?utf-8?B?cEtnM1dGR28xTmZwY3NaNVdIM3pUT1FhclB4dTMxZno2Ulhjdm96OFUxVm93?=
 =?utf-8?B?eGVjUTRZM2NyWnhyQ2lLdHRzaUppLzJFaHlCN0JXTzhkd3BGN2t1ekQ1dzVT?=
 =?utf-8?B?ekZPWFh0YUVmUmE4U2VqaHN4R1VSc1VaZEkwbXNsRHhxK1E0RFo4MldzNjZ0?=
 =?utf-8?B?Z01JQkRwVUVLdHREbENmZVRzQVl6SXpyYUxrUldlajM1ejg5RzVFcHZTcHZv?=
 =?utf-8?B?N0E2aVFXRE44VFo4bjBPcHo3eExhT29VQkIvQXBJekMzUGg5NGVXOUoyYUpP?=
 =?utf-8?B?VDI1Y3NlNFJZY2Nid0FrVnhrTXFiRjFqenRZNkk2NVdGOTllVFBwY1RXRVpH?=
 =?utf-8?B?OGRwSUY0dkl1aWtpVDBsN3NVbWJJbjdHZ3dMcWFGWWFpUytIaURqQWNEM1F2?=
 =?utf-8?B?S1VrWDJlMVRlalRNem5wMmVPNmVLYWk3VW9pWGFsVHFXY1VJUnk1Rmk2NnVU?=
 =?utf-8?B?ZHo2VWNlOWxrTU5HRlQrKzlEN1ZsQXBjSUl0ai92U2d0eXpOU1hMZ3c2azQr?=
 =?utf-8?B?TklVUlltVXIzcEpvWDF4QUErckZlUllZY3hVaHplZUpvWHNqM2Z6aHkvVXpv?=
 =?utf-8?B?VjZ5YWRxT0l1ZmpENTBJanozRmIybWVCaFVsVHE0QnpldzdBQ3dnVmxLL05S?=
 =?utf-8?B?L0QraGtnZEFtR2lTY2h2dW9PWlBrUWp1MkhlRDVyK3FNRXg4cVFnQXpybVEy?=
 =?utf-8?B?R21pZHJVd1B0aEk2V2lIeVVGcG9TTG9tcDMydHNHY2tFZTJwNVkxb3E1bWQ0?=
 =?utf-8?B?OWZYeDNRNzZXZnRnQkRkZ1hGRjlaVWZ4MzhXdUxYQVlwYS9sc1NGMkdPRDFn?=
 =?utf-8?B?OGN2ZENpWjNJVCtrQmtZRWphRGlCL25xaUpkWlJqdU5GOXN5Skl2UDh3R0tU?=
 =?utf-8?B?SmlqcE5aQkEzQ1hYYUExaWd5bjRuVENSNG1kOC9CSy9Hb0R2aTZLelJEM3RU?=
 =?utf-8?B?SVArMmYwWXlQL0JHZFJEOUtvc3k0MWdRVUdOOVBaM1NnZno4K3FtTXNNN2FJ?=
 =?utf-8?B?eGF0Zmpya3V4T1ZHR0Q5TXJyZ3phelJadUhMOUI1MVRGV2x1bWhrZVdzN3hC?=
 =?utf-8?B?SXRuc29zL0JKUU9FWTBMSEc2bEZDT0dEcllKdkgyOWNlbElnMExSUzIxUkYr?=
 =?utf-8?B?UXRRQXpWeHJIeDVvWHQyZkdBWkFFdXdyZXdPV2hlQVZlZkZvTDAzZlBsQm8w?=
 =?utf-8?B?SGl2eVV6M0loRGs5M09mVjA0bVFtY05vSjA1WlRhdHNYTWRzNktIZ1hqazRy?=
 =?utf-8?Q?OR2HZxhJw1hLg3oeKtmrjYoWD?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 543b7e76-96fb-4370-905e-08dc9476fb0f
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 17:56:32.0745
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: q0OGKlTXZwCH173QO9gwy9TWQ29cYKKzL3nFcPDDpK97Bz8+PQKS4eOLQ3jVgQoTtiFTq6i89RQallwEWCSLfQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN0PR12MB5761

Hi Dan,

I added a response below.

On 6/21/24 14:17, Dan Williams wrote:
> Terry Bowman wrote:
>> The AER service driver does not currently call a handler for AER
>> uncorrectable errors (UCE) detected in root ports or downstream
>> ports. This is not needed in most cases because common PCIe port
>> functionality is handled by portdrv service drivers.
>>
>> CXL root ports include CXL specific RAS registers that need logging
>> before starting do_recovery() in the UCE case.
>>
>> Update the AER service driver to call the UCE handler for root ports
>> and downstream ports. These PCIe port devices are bound to the portdrv
>> driver that includes a CE and UCE handler to be called.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>> Cc: linux-pci@vger.kernel.org
>> ---
>>  drivers/pci/pcie/err.c | 20 ++++++++++++++++++++
>>  1 file changed, 20 insertions(+)
>>
>> diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
>> index 705893b5f7b0..a4db474b2be5 100644
>> --- a/drivers/pci/pcie/err.c
>> +++ b/drivers/pci/pcie/err.c
>> @@ -203,6 +203,26 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
>>  	pci_ers_result_t status = PCI_ERS_RESULT_CAN_RECOVER;
>>  	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
>>  
>> +	/*
>> +	 * PCIe ports may include functionality beyond the standard
>> +	 * extended port capabilities. This may present a need to log and
>> +	 * handle errors not addressed in this driver. Examples are CXL
>> +	 * root ports and CXL downstream switch ports using AER UIE to
>> +	 * indicate CXL UCE RAS protocol errors.
>> +	 */
>> +	if (type == PCI_EXP_TYPE_ROOT_PORT ||
>> +	    type == PCI_EXP_TYPE_DOWNSTREAM) {
>> +		struct pci_driver *pdrv = dev->driver;
>> +
>> +		if (pdrv && pdrv->err_handler &&
>> +		    pdrv->err_handler->error_detected) {
>> +			const struct pci_error_handlers *err_handler;
>> +
>> +			err_handler = pdrv->err_handler;
>> +			status = err_handler->error_detected(dev, state);
>> +		}
>> +	}
>> +
> 
> Would not a more appropriate place for this be pci_walk_bridge() where
> the ->subordinate == NULL and these type-check cases are unified?

It does. I can take a look at moving that.

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-MW2-obe.outbound.protection.outlook.com (mail-mw2nam10on2066.outbound.protection.outlook.com [40.107.94.66])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 89E1819B5BF;
	Mon, 24 Jun 2024 17:47:26 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.94.66
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719251249; cv=fail; b=YrcZztzBFZVXvTy4ycvUO+Zag/LiEu0WWrFkZr8W1q+20G4VIb8XVlftY3PdvUBk9co3oQA9sepTNryEic+NWMN2fVKVvZHusOGLO78bAqEnPbvuYzpLmaKCdyjTXhYHMIewvPQy2tMK2I9hRy3z2H+nqH6ZU+KqYxsccwPeB3g=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719251249; c=relaxed/simple;
	bh=W4h7teomfFqI9X69KNjzuanTHZ55Ee2OxGyuElDCCJY=;
	h=Message-ID:Date:Subject:To:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=Ge1MwxT1SY4BR/kSrItiPlvS7No5Zdwr2japOMgYF3kewLoIVyMm/HpQohSxuwrqv2fSZaybd87JSBDDNFtuqtYqI4NBcjz0jGzK8rG+HDKsqugJE+2IBjmF51EyQtXE9x318T5srTImHMD+T9/cZ3ZeGRqTCaSPuEuK+5g18hE=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=0OT3HwX4; arc=fail smtp.client-ip=40.107.94.66
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="0OT3HwX4"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=QtCJFGXSRTvqMQFEgscHK5hJxg10kpQGd3RTutXtnzNKUFFGcCFjx4e6q1B9nsLqNla6krWG2H/utc4qD0J3il99cz9r08B4B9kYDNibHiU0ClskzsebxUNa1lnzFHup8cxHpPpldBSGp6+YdngqzaugtHRyjiWk1Z6ddCUnCNZcUJ5nySdWy+6sYWD6nTpGW7coz9VQnemOIpzHC59dxW79HUAHsXkQKOWxOOKgzne71Hn2ojVbxu/j8bM0mA1/x2NZ1o/ns7JlORajdR4GkQGSoBBMhFWPcANkvHkIwas42EFPgmvs7VE+QVlf0hAl4f7hxIm4K8Q58W0lu3KDtw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=ZAp/FvTVjmGp8VC7aDGd0DfqhLy3h/nIU4kCd1y9jvk=;
 b=N4FL644oyszfXRueSs0jAuYjwLHmooSV3OTw3xNk06ztxIc43rzrPc6jxV/WJ+3D7Zf+u24MYtTAZnEMtqYzshl63t2xgGhpOKFbhV37DyBsdRbcaCtE0GeZNRYBBF8UFUcWYXB5Kr6pLVUDeiBjYzjFuEDKhrSBEXbB/yekgtYadkMMWR293PECglbJxySYfCEUvrqNg9OHZDPNHrngdQoZuyA8TtHkjEiZKVZNf6k16WyqqKuswOyVRKNC/kSNSzL4ovGAKMmnrnm+wC69/CS8bb3gFps5knAvKIZdKhi4wSbI3ymPjD7U2797L+Nx8/vG5rIxuGs8p4IdU83Z6A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=ZAp/FvTVjmGp8VC7aDGd0DfqhLy3h/nIU4kCd1y9jvk=;
 b=0OT3HwX4cwoUVcCISpZapbyuOww49tg+9UtL8W+u2mNsyAH89LX82AwOE1O2PUDY51a9K3ZLpaVRejIeW+DUIHzw8qW45y8xRg+8gW68m/yeUKwN5RNwEQb+FV3WRitoB+f3BZj0m0bzSjFaA65RAK3Cl/y95wyglUZw7WkGP6E=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by PH8PR12MB7255.namprd12.prod.outlook.com (2603:10b6:510:224::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.29; Mon, 24 Jun
 2024 17:47:22 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 17:47:17 +0000
Message-ID: <f4dffe22-b383-4118-bd3b-a3afb2df835e@amd.com>
Date: Mon, 24 Jun 2024 12:47:15 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 0/9] Add RAS support for CXL root ports, CXL
 downstream switch ports, and CXL upstream switch ports
Content-Language: en-US
To: Dan Williams <dan.j.williams@intel.com>, ira.weiny@intel.com,
 dave@stgolabs.net, dave.jiang@intel.com, alison.schofield@intel.com,
 ming4.li@intel.com, vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <6675cece52eaf_57ac294ea@dwillia2-xfh.jf.intel.com.notmuch>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <6675cece52eaf_57ac294ea@dwillia2-xfh.jf.intel.com.notmuch>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA0PR12CA0003.namprd12.prod.outlook.com
 (2603:10b6:806:6f::8) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|PH8PR12MB7255:EE_
X-MS-Office365-Filtering-Correlation-Id: 63209b86-6da2-4a5f-5f85-08dc9475b05b
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|7416011|376011|1800799021|366013|921017;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?dnI1K20vZVNvejI1eG5yL3NSNDBray81aFYrdGNCaDlncFk1d2JGVDFBSW43?=
 =?utf-8?B?cGhPYVRhYTMyUUZxWmIyVHRRc21pSXNoZ0poWTQzOUNpSXAzS3QxaFNOYkNB?=
 =?utf-8?B?Ri85TVFJRXA0dGlKTjkxNVFJVjAzUFNrRjJQZEhyOWt2RDhpR1BwRE14UDln?=
 =?utf-8?B?Wis5RjZ2Sm9Qa2RsbWgxM0JxL0lsaHQ4NzdFeHJFVXB1ZTlnZGdka2VDZk9u?=
 =?utf-8?B?SzFGTXV0TVBLV0JxZ2dLQTRpVHBlN3BXWmZBVjY4a0g0cmtjM3BINEZaOTFp?=
 =?utf-8?B?TEk5QlpJazFPQVFNRVVqS1dzL0RraW0vTk5ncFpWcjBRWVNMZ0cxbHBOQk5q?=
 =?utf-8?B?VU8veGVXRlUzVWdaZHRIVUNNWlAzQ3pKQUhORHlIc1B1QnZZdGhDK2RldEQw?=
 =?utf-8?B?ZTh4aVV1Y0RhUzNOSUdQbkUvd3BVVFo4WFpaNnVHRCsybUh5OWNsQkNJby9B?=
 =?utf-8?B?OWREZzJoallVS3oxV29LNVlKOGNVN0hMZEIzZXlXcU5nUXlPM2dxZmFETEhM?=
 =?utf-8?B?a3RNUk9PNlB3NXZ0RXZwaFpHQUdCT3FSTzdRU0RKNkN5OEp0d0RWTHE0Wk9W?=
 =?utf-8?B?bmlLdkQ3QTVseCtUcWxJMFdXcTlTSlRBUndQQ2hrYjBHTWlqT3U0cjhHWmQr?=
 =?utf-8?B?Sm1mOUYzZnV3YUZQVTdXb2N0MUs2RHRMUm9nYjVPcFhBaFFyV1h2Z1l1SjFh?=
 =?utf-8?B?Q0ZGMUJ5a25GQmVEUTdoT2QySFQySGRmMlJ2MmZmNThqS2F4bE5kVmlabFF2?=
 =?utf-8?B?MnVhSllYVjRQYTArZUFyNGRKeWlYTGdhb002Y0N3bFhlZDN6TXRqZWRzV2ZU?=
 =?utf-8?B?OUJieW1aV3Rob1kxaWd3L3VhSW1jMmlLT3N6RFlESWJuaFhTMVNNSm14U2dB?=
 =?utf-8?B?U1cyZHE0OHNyYjRvcFY1ak1uempKcmVEQW1NcnhRQ29XREhTSzhseEpDcDBh?=
 =?utf-8?B?bXlESEpEYVB0U0JjM2dHbUdQWGlXK2hoa3FOWDZWZkRMdUV5eFNUSVVhcWVW?=
 =?utf-8?B?N05YS3NrTDlkMmlsbzQzM0U1R1VSc21qcERjUHo1NS80eGx3UFdJRVIrL3Yx?=
 =?utf-8?B?aXpSdVpFTk0yR2JXVDdJZlJabTNQbGxzYlR0Tk9TYmtFYnhnN0JoZ21YZWpl?=
 =?utf-8?B?TE44NlM3YXplOVE0enVNT08xNFVXVzFXVzlVS2EvaXZMYTFqSkVZdmg1V0I0?=
 =?utf-8?B?UUtaU05YQ0pqN2ZkNHVqcVAxMXRyYitQTU1BTmNWd1NNMGRmMjUwTE9vQ2l5?=
 =?utf-8?B?SEc4azA3QURsZUN6YzUxVnFraUdhVUpocGJQakIwNE9obnhzQUg1YzhxQlV2?=
 =?utf-8?B?b0kvK3Y5Nm56QThOczRmSGttK1B3ZlJKTG1aY2xTY0FxSGtoYWxxZ3U2TUlY?=
 =?utf-8?B?aDJnV2R3SXIxbE5vT2IwM1lMREZUR2plVk8vc202cWhIaUFPVVNkWkVlTHQv?=
 =?utf-8?B?dDRLaWxmTnAyV25kV0pTUy9rSTZYcElsYlRwQmJyOUFHK1ZvdXRFZXhjRXZS?=
 =?utf-8?B?WDBWRUdQcFg0c3p6RFZaakplQW15dHZSbWo1QkNGMkVaRUFmUTVSWWpHYWVK?=
 =?utf-8?B?S3VCRTdrZmVsMENkUG1QaGlHb0ZzYzVabHRSSnhnUUU0NFN3bG9hWXczU2FE?=
 =?utf-8?B?TGpkSklHN2RRUlB4R3RIQmNvOTMxYVRpN1lvOTRWckw2VHFhTzZEcHRTZ2tL?=
 =?utf-8?B?M0Q1TEF5MUZBQmd6dFNFNm1JRDdpWDZuMWFKV0NkN2pMby9KbjJEMUFYYlNz?=
 =?utf-8?B?ejBnY2piSW5BL3ZEU0wxNjJSM2t2ZWNKNDhkYy9ZMEQ3MkJjYXBjQ1hwL0Fk?=
 =?utf-8?Q?52Kd3pLqYMrXoxfBYtuayevser8x97dAG63CE=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(7416011)(376011)(1800799021)(366013)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?MkZyL2JrdlZhZ3J1MGNrVDhGRnBHQ2Rka1dkYU81a1BQbythekZQdzk0WE5m?=
 =?utf-8?B?OG5nQjd1Tm51ME5jY0dMc3ZmTFBzRjlpL2tJNTN0dlR4RUxYcWJVQm52TkJu?=
 =?utf-8?B?OWVJeTRtUnhsbzVKU0NaSE5lTUNhUXBvS3B1bUVwZm83M1pMbHRReWpOa05k?=
 =?utf-8?B?QjVINnBiNmJJZmJyS3J3R29QSW1yVE1uZzhwamF6eXVSdGk5SnVZWWh2L043?=
 =?utf-8?B?ZXhNZUxLZWtPVC9zdUppeTNnbllETDZOUThxVWNBV2F2Z2ZvRzlmaHU5bjlF?=
 =?utf-8?B?ck4vS1REbmwyM3FyREI5MjYwaWV1Y1BqdjYxamZrRWNKd0pmWEFXOVlxTG85?=
 =?utf-8?B?VGkzN1p1ekNKM0RDeThEdEhnUkdTcjhDekczNFRWRzc5WlpIamJhK2RQU1dK?=
 =?utf-8?B?dHlDb1IrbktMam1aQmduM1hqUkpPeFFLblA5OHZJZlk3YkFKMnd5UXBvdXNw?=
 =?utf-8?B?T05PQ01la1JRZUplS1hFczBBcjBzNVcyZjZYKzdZYThBU2RHQkQzTFo3RGpJ?=
 =?utf-8?B?SWFIcWhsTzU0akNlZDJzNzlyTEU4cjdZeDU0cUpzOFZpZVZFV3hZdWhGN0Rw?=
 =?utf-8?B?QThnYVAwdkJwS1lqYlVpcGU2N0tnOGp0U0ZndHo5TnJVb0RFNm5EYlY3Vys2?=
 =?utf-8?B?UjQvTnhZZ254V1ZNaVhXQTd3RHZqT1FuN0VWY2FTTFJvR0Q5UVpwMGRCVCtK?=
 =?utf-8?B?Sy92VGd4UStQT2k2anJ2N1ROYWx6NW9ZNm42a3ZHbWpVNkl2aDVNb2crb2Rt?=
 =?utf-8?B?eUZweWdadTlhYU1MQW9tMWV5MlNkZktuSnJLNUgxTXRPL1VvOTJwQ3pkMDdH?=
 =?utf-8?B?b3ROck9VVXBBMmgzMFVVVzVscDNzQm9XWk1Kcm9SbHM0Z2tobVoyc3IzTGY2?=
 =?utf-8?B?bE9XV2IxYnNKWkdTVXNRTFFuUTYvRjRqdGZGZk5uRDArNlhmZFR6TWJTK05s?=
 =?utf-8?B?YnlVM011aTE4NTcveXJqK3EvaG5FaCt4YlRBVDE5TmEyMkFQVDkvVUtjaVpY?=
 =?utf-8?B?MTJ6by80OW1oQy9rMzVvU2lLNHRXZWg0aHVTeUN1RlFpQjZqZnhyUjZtcm4r?=
 =?utf-8?B?WlAvNHA0N1ZoUkZHajltdS9UTzlHTm9pSmpOL3hFcWFNTzRhcXJIWUI2RGgr?=
 =?utf-8?B?dEExQkpVeXJvVElQMmNmQ1EzZGNFNjFNZDBwcHRLN3VZY25RQVNnN1E3eGEx?=
 =?utf-8?B?N29RSHZmQlBlYjBZYU10RFJmMlkwUHB6My83bzFVYW1WaEFvNFg1NGhTUHpl?=
 =?utf-8?B?czJEd20yNC9yeFhNem01bU5oQUw2U2htY2lIMTdYdktad3ZzbUsxR2VKUDF2?=
 =?utf-8?B?Znd2RVdyd295MmtmUEhqQjhzN2ZNWElMNW1tT0kvWDFqSzdRSWZOSy9LR2ZP?=
 =?utf-8?B?WVRORXJZcm0wQnFENFZzL1J2WHNCR2pnejhtREI4SWo0MmtBcW5mSERkeUhM?=
 =?utf-8?B?cTByR2ZadlA0NmtNUmplK29nb1ltcWlvNzRtcVlZMXQyNm1ENzk3Zm9TRHFI?=
 =?utf-8?B?K044RVU2aE1LQWVwSXBwUU54V0wyNUVmTkNGYXJYM1BkdkFFSTNWSzV0Z0cz?=
 =?utf-8?B?eWhiOUNoTkxNWlpMU3lHamhYT1p3a1RkQlNBVXZ1YmpxcWQyRHlsN1dURE5V?=
 =?utf-8?B?NnVhWFVKRUdvVXAybTJEcFFCVHRGQStUejJqRG1RRjJTOVBUWmdZdnB4UVdL?=
 =?utf-8?B?U3pKN1NiZ1lxN3h6aTIxUXhQajM5ampTZGZuaSt3RXJvRFRodVRyWUNCSUlL?=
 =?utf-8?B?OUo0Y1Nib1JEYjNrV09yNGVIRW9BdytTREx0aSszeWNSZmVhUFFXSXZaTUFX?=
 =?utf-8?B?SGZKV0hJV3lFYnkxZW5zWFVDV0FJbkxOMnh0aWJ0c1ZtWHFYajY2dDYxN2pK?=
 =?utf-8?B?TjE4dFkwWnRsT0JGWC9kbnErSGJiRzFHMSttK2QxVllUang1Y3VZNTh0N1Vo?=
 =?utf-8?B?YW5oNnlhOFhQVHRubkRoS2ZwSWdSRXRua1FIU3F4d3VwQmM1Yk1US2UvT3pP?=
 =?utf-8?B?d0U1ZCtsTlBidmx4Yy9EVWhQZUtTMm01L1VCZ1JmL2EyQUxZTjQzbXZXMHg1?=
 =?utf-8?B?WWVLdlJBcDJLUWhBdEtNcDloRXJYZXQ0U0pCTWYwY1g3bHJFd3ZZSGpKblF3?=
 =?utf-8?Q?YjcO+Vj+zBa6OExK9jP/CLG4R?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 63209b86-6da2-4a5f-5f85-08dc9475b05b
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 17:47:17.2040
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: jsApvQJd7ktLytHZ4t2GGU4Is4zavxhrTNmlffFLmrDjNkklscuIrw6D9IlGo2VyoJxOT1FHRdnq2aBz37jGlQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH8PR12MB7255

Hi Dan,

I added responses below.

On 6/21/24 14:04, Dan Williams wrote:
> Terry Bowman wrote:
>> This patchset provides RAS logging for CXL root ports, CXL downstream
>> switch ports, and CXL upstream switch ports. This includes changes to
>> use a portdrv notifier chain to communicate CXL AER/RAS errors to a
>> cxl_pci callback.
>>
>> The first 3 patches prepare for and add an atomic notifier chain to the
>> portdrv driver. The portdrv's notifier chain reports the port device's
>> AER internal errors to the registered callback(s). The preparation changes
>> include a portdrv update to call the uncorrectable handler for PCIe root
>> ports and PCIe downstream switch ports. Also, the AER correctable error
>> (CE) status is made available to the AER CE handler.
>>
>> The next 4 patches are in preparation for adding an atomic notification
>> callback in the cxl_pci driver. This is for receiving AER internal error
>> events from the portdrv notifier chain. Preparation includes adding RAS
>> register block mapping, adding trace functions for logging, and
>> refactoring cxl_pci RAS functions for reuse.
>>
>> The final 2 patches enable the AER internal error interrupts.
> [..] 
>>
>> Solutions Considered (1-4):
>>   Below are solutions that were considered. Solution #4 is
>>   implemented in this patchset. 
> [..]
>>  2.) Update the AER driver to call cxl_pci driver's error handler before
>>  calling pci_aer_handle_error()
>>
>>  This is similar to the existing RCH port error approach in aer.c.
>>  In this solution the AER driver searches for a downstream CXL endpoint
>>  to 'handle' detected CXL port protocol errors.
>>
>>  This is a good solution to consider if the one presented in this patchset
>>  is not acceptable. I was initially reluctant to this approach because it
>>  adds more CXL coupling to the AER driver. But, I think this solution
>>  would technically work. I believe Ming was working towards this
>>  solution.
> 
> I feel like the coupling is warranted because these things *are* PCIe
> and CXL ports, but it means solving the interrupt distribution problem.
> 

I understand the service driver interrupt issue but it is not clear how it 
applies to the CXL port error handling. Can you help me understand how the 
interrupt issue affects CXL port AER UIE/CIE handling in the AER driver.


>>   3.) Refactor portdrv
>>   The portdrv refactoring solution is to change the portdrv service drivers
>>   into PCIe auxiliary drivers. With this change the facility drivers can be
>>   associated with a PCIe driver instead fixed bound to the portdrv driver.
>>
>>   In this case the CXL port functionality would be added either as a CXL
>>   auxiliary driver or as a CXL specific port driver
>>   (PCI_CLASS_BRIDGE_PCI_NORMAL).
>>
>>   This solution has challenges in the interrupt allocation by separate
>>   auxiliary drivers and in binding of a specific driver. Binding is
>>   currently based on PCIe class and would require extending the binding
>>   logic to support multiple drivers for the same class.
>>
>>   Jonathan Cameron is working towards this solution by initially solving
>>   for the PMU service driver.[1] It is using the auxiliary bus to associate
>>   what were service drivers with the portdrv driver. Using a CXL auxiliary
>>   for handling CXL port RAS errors would result in RAS logic called from
>>   the cxl_pci and CXL auxiliary drivers. This may need a library driver.
> 
> I don't think auxiliary bus is a fundamental step forward from pcie
> portdrv, it's just a s/pcie_port_bus_type/auxiliary_bus_type/ rename,
> but with all the same problems around how to distribute interrupt
> services to different interested parties.
> 
> So I think notifiers are interesting from the perspective of a software
> hack to enable interrupt distribution. However, given that dynamic MSI-X
> support is within reach I am interested in exploring that path and
> mandating that archs that want to handle CXL protocol errors natively
> need to enable dynamic MSI-X. Otherwise, those platforms should disclaim
> native protocol error handling support via CXL _OSC.
> 
> In other words, I expect native dynamic MSI-X support is more
> maintainable in the sense of keeping all the code in one notification
> domain.
> 
>>   4.) Using a portdrv notifier chain/callback for CIE/UIE
>>   (Implemented in this patchset)
>>
>>   This solution uses a portdrv atomic chain notifier and a cxl_pci
>>   callback to handle and log CXL port RAS errors.
> 
> Oh, I will need to look that the cxl_pci tie in for this, I was
> expecting cxl_pci only gets involved in the RCH case because the port
> and the endpoint are one in the same object. in the VH case I would only
> expect cxl_pci to get involved for its own observed protocol errors, not
> those reported upstream from that endpoint.
> 

The CXL port error handling needs a place to live with few options at the moment.
Where do you want the CXL port error handlers to reside? 

Regards,
Terry

>>   I chose this after trying solution#1 above. I see a couple advantages to
>>   this solution are:
>>   - Is general port implementation for CIE/UIE specific handling mentioned
>>   in the PCIe spec.[2]
>>   - Notifier is used in RAS MCE driver as an existing example.
>>   - Does not introduce further CXL dependencies into the AER driver.
>>   - The notifier chain provides registration/unregistration and
>>   synchronization.
>>
>>   A disadvantage of this approach is coupling still exists between the CXL
>>   port's driver (portdrv) and the cxl_pci driver. The CXL port device's RAS
>>   is handled by a notifier callback in the cxl_pci endpoint driver.
>>
>>   Most of the patches in this patchset could be reused to work with
>>   solution#3 or solution#2. The atomic notifier could be dropped and
>>   instead use an auxiliary device or AER driver awareness. The other
>>   changes in this patchset could possibly be reused.
> 
> I appreciate the discussion of tradeoffs, thanks Terry!

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-SN1-obe.outbound.protection.outlook.com (mail-sn1nam02on2079.outbound.protection.outlook.com [40.107.96.79])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id DFEF82F24;
	Mon, 24 Jun 2024 16:46:08 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.96.79
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719247570; cv=fail; b=gyBH4j7uqfVlCCEKNXRgmfoTRQmsFg5AJWvUXhS8xs1WO/iBN+deFNToPBBGmaWWG/T7wOSeN6y6EiEorO9W2mpGtDZKziXdMbjJLjZk6YMth2JUo2EH3ATd+qmQ8QCKLSIoT03Edg1vc7cnnFmP+tuVFgsfNzmMGj0/Q4Eoz1c=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719247570; c=relaxed/simple;
	bh=aQIwqFYYg5l2urOlBrsMadON72GWY51VO+JrzJRTWK4=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=ECcRyciyjAefu5mZmmLFP+SgPeZrVzMZPc/Sxbar2V/zxp1qmoz2CZOgSJo5w3+cKAgeViVHcPalQ0aTaMCuWJ2OPyZlf/Irwu0wjE3lkf4iWmAJDgoANWf7grVgUdfegTWBL5gp3p/pSHwUkRlMvTb/YPkld80KSl1+eBO4ArU=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=euxTCt6l; arc=fail smtp.client-ip=40.107.96.79
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="euxTCt6l"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=jPExMAAt0UUMyIxjcBlmONGWZFpYRHJsvNupU+ntzG9TezXgSd1vuUZhNMHzJg0sUoB00Rn8XRVKvi8quNbv+r5jPXOIYxsyv4xeuv76aIOgMlCUlAOHZNMCaHKaP8+XBcHQf4xmGckPQDAmjfS86z0i/IehNbURJG7GtfGD2PyuiaC0epwnSEMIvc3T7YkLLse6f4fuJnuZbZnHcOGvmua9QcAiU8XCqmwmwx14JcAHVxIaK8aKZ17itoriZKHJ1ACEVgd574UHmqSWVUKsrFHIUfIyKRlnO5iH0Hpgyk9fDNa4mQ9OM9JZ610w6fk3M/Wz9/Uail89d8bvXU0rpg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=ybkdyNblnIIXqfWPNTf9TncQ2FseTsErE8rt6WcvOgs=;
 b=WxvIv6/vKw0D+4nyX0wkpnhGpe5rQ4l1RjPU8QyiHZrgl0nZcbFLhvmsSLyWrvZlAFWcU07ukiqEhyr2Aq6DIkAvysVJp5fxg+MI3AbtJDmVmq/WmzWedBN0fmx2PiudW0x/lNdJiX8uNTS9Ysx+pLsGu+Aym0jJoKMuiSFO9MdYomepAXWujbvF/0KQEWR9yUlknTa8+s/4SDjWVZ4VHsacOL4XJ0fF6867EPEkFA4vIREDYN0VZ989Nb0Q3+UrXwm0TbWpdvTyqTpf3L5LTvR5RXiEOKUGEcgSxZ3fKGBNlDoq0FO5eEeP/kgSoJUZohnV1q8uX63CRDfwj636ow==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=ybkdyNblnIIXqfWPNTf9TncQ2FseTsErE8rt6WcvOgs=;
 b=euxTCt6l0mcr8A7pGlZcYroEZ/hj+BQwjbnjOIVR5rdh+gdNI6H7aQuPnULXw871w1BypbCttvl3+bmYxDYdsrG1dj88Y00vyEN/ftEZM1ZuTRFda7pEm+l9LxI0EOWZ59u+7emu7ooJ/k42nai+Sos9/hPD8O1UalrBE/jxO6I=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by LV3PR12MB9330.namprd12.prod.outlook.com (2603:10b6:408:217::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.29; Mon, 24 Jun
 2024 16:46:04 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 16:46:04 +0000
Message-ID: <c5c1a814-0706-462e-81b2-f8ce814bbe9a@amd.com>
Date: Mon, 24 Jun 2024 11:46:01 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 9/9] cxl/pci: Enable interrupts for CXL PCIe ports'
 AER internal errors
Content-Language: en-US
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, ming4.li@intel.com,
 vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-10-terry.bowman@amd.com>
 <20240620141514.00007c6d@Huawei.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20240620141514.00007c6d@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA1P222CA0035.NAMP222.PROD.OUTLOOK.COM
 (2603:10b6:806:2d0::10) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|LV3PR12MB9330:EE_
X-MS-Office365-Filtering-Correlation-Id: 3e79cb3e-1e7d-416e-4b12-08dc946d22fd
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|1800799021|366013|7416011|376011;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?WHdEZVZ4M3FyaXdORU5taUl4b2pYUUZLOUgyM0FobFkrYVl5YVlYeGE2b1ZH?=
 =?utf-8?B?bE01dWxSb3hGWVlidDFmRmZyUW9sM2tnR0lwcnp5TUN6SjQzQWJ4Q2FFUXdY?=
 =?utf-8?B?ZnVCRFIvWGJZb3lvc1doL2VPeS9aWk9zOEQ4Q1NGOVN6NzRzMzUxSERmNkpn?=
 =?utf-8?B?SjJCSFJCTkhUY1QvMG5JSjNrYUhsUUtZamNEd2lEVEZvUWpIRkVpNHVsWHkv?=
 =?utf-8?B?SWsxekcxdnlMSGZKVkQxTDNEcmEzNHJ0akdOODJRaGkvWWx5dlkzR0QvTklF?=
 =?utf-8?B?SVdqZWxPVFcrNHg2TThtQTFaaFlIUFpqeDNuUXNQQTVLRUs5UjRTZGVmZFB2?=
 =?utf-8?B?THQ0M0diU01DTE1GeGE1SkY0VVRWU2UwaSs0TU5LaDlwaUhNV2w2a0Z1eTNW?=
 =?utf-8?B?M2RLbiswcFdFN0MrVWE2RytIMW1OaVlqQWpaVEJpUW8vYmh6NExsOEp5S1ow?=
 =?utf-8?B?UlE4QnB3TU5KQTRyN1hVbUZXSmRnTHc4YzBXM0FmVmxwcXRlQUtMSXlFMVgw?=
 =?utf-8?B?ejJ5RnNzTjErY2xxQmlTeWM4K3ZBalgxWjFlRkcyMkJRNWpseTNCcm12T25U?=
 =?utf-8?B?WktUTmhUWDJqVUlaOTVJT0NRYnY1aXlwR2k1ZVNtM3Z6Q3NiQUt4M2pMNEFn?=
 =?utf-8?B?dFkwb2tKWHVFZlJDdEM2LytYOFBDUWprMnVPWUhhTGx0L3Bab1V1YmlxWGRP?=
 =?utf-8?B?UXpaTVNmcHcxK2tlK2JVbGZCZmcwWW9JYUtrbVl3N3pBVzJuQTdkRWk3ZUMy?=
 =?utf-8?B?Szc1UlcwNms0eDdKVjBUaGRlNis3ZVBhRWVkd2lwZi9PaHRkeDFvcU4wUi9t?=
 =?utf-8?B?ZStqU3FvZmpRWjA4VmNxbGlPMDl1YVhkekNuZis3ZEN3SzU3eW1xUlVZazZi?=
 =?utf-8?B?VlRDbWgrNFByY1BMTnpvcUZUWEJPM0d4UExsNzMwV2R2N3pFdHlJd1RrTXVy?=
 =?utf-8?B?c1hOMzFQUy80bGM5ZDY3VzBFWDVvUEw1KzAyYVBaYkNLZkpWTjV0NC9wVEFn?=
 =?utf-8?B?cnplK0FIQTRJMFlla2FzaXQxL0hGMHV6L1BQOEtYdGd0bXdBVGp4R2k4SDdu?=
 =?utf-8?B?Mzk4TjlPV2YxVnlXbUEwR1A0bUs2aTNSZ2VROWVRS2poV2hSTlM1V1Q0U2sx?=
 =?utf-8?B?eFFKVE4vTmZ3WnZKSXZPakF2dmlrMVlwT2Z6MWt0TFZIWFJMb2pXU0tyVHhI?=
 =?utf-8?B?T3ZiNk9OL21WSDdQZkZRdmVSUnQveUY2QlZVMzBLTkdBWWU3aEVmUFdJdUNL?=
 =?utf-8?B?Mmhvc29nQ3Qwek10b09QTFYvSncwVGZzVDdqc3M3ZXBwSStUN002Tm9GalNW?=
 =?utf-8?B?aFJjKzFzUHFwK2FCVy9yKytwbllHWGt4S3l6R3o3UEY3SWFPanhMM1VkYWpM?=
 =?utf-8?B?ZGJzN3N4M0NHQUZPaWZhUndZdUtSa1RWQW9XdG5MZHE1dEx2eks4RWprVWtm?=
 =?utf-8?B?QlpPekdHWm93aUVPa2JrVFBkbjRkRE1ScU9yTE1hUE1TUGc1dU83aUhHZ2M0?=
 =?utf-8?B?SW5zbjlUdndWRHNCREk0eVBrTE9Ody9KaDN3Tk1tV2xXYzFXbmxEQUJOWitU?=
 =?utf-8?B?WDMyTHBCcUIrQnNHWFU4WVVyT096Q0FYV0RJeUc5Tmd2endPVnJmdWVyWGEx?=
 =?utf-8?B?MFdGdDBybitJeXN2Wkh0NHA1VWVhc0llOUlEdVRuMmNyRUxwT3dNOWVlRTE1?=
 =?utf-8?B?cElJL3ZEMzM0eXBRYVNzdURENlhyamZMT1Y1Y0QwcXdzTzZCcjlYK24zNkNy?=
 =?utf-8?Q?qCsKiDnhDRfe0ADWjke1CBzw5cz3D82iRMVEq9G?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(1800799021)(366013)(7416011)(376011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?MWdzOUM4QTh0QW9Ya1FUTlBxQko2K3hHUXRJY1dBcnZxZXdTWUNFL0Z5THND?=
 =?utf-8?B?VWlmNEtTbnJqdXRsY0xmODN0WkxFQ1drbVlIRGRPSzNwYmFpRE0wdUdlTi9D?=
 =?utf-8?B?ZVBsTnk2NDlzckZPQlVSTkJybnpFM1Jwc08xcDhLY3FtSXJQaVhYYXFuMm85?=
 =?utf-8?B?WGVpcDRSNmwwM3J5ZlhhZ21NKytla3hJTGhXOGNvUjUzYW5DRDloZ2xpMkZi?=
 =?utf-8?B?M0E3blNYYUhnME04UHYzSm92bXNXTHZLcXFTb0gyMW1lamxMQllYM1ZvSHZ2?=
 =?utf-8?B?WEgyQ2p3blFYQlFRa3pQWFdmSDJBSnlvRWU5NGkzdmNTYllycHpka0JheVVW?=
 =?utf-8?B?TmNMTEFDNGI4WVZNWm1XRU5aZkd2VjFwTndtdkFuM05kWjBvQ0xrcTFRTUxT?=
 =?utf-8?B?ZW1id2pFaGVaM2pSMHlneFQ2NnRrbEVMcGhRcThrWU4yckRZUjVqNTUvcHVk?=
 =?utf-8?B?SDRkb1BtZkptQXJLL0F3N3FPdnV1YnhnT1pxNXdDRVFyTDNtclZORzJZc3FJ?=
 =?utf-8?B?NDNWRklzMmo2TDdkTXB6TXVQa1RoUnUyemFYWk52N3NXT20xK0tibzhGclJp?=
 =?utf-8?B?OEJ1VmVXemVTVGxqMVdwTFBCY2VLcDZqemZEVWdXSkxmM2RCZWdkNnh3eEcr?=
 =?utf-8?B?dERQSmkwM2djaVlqNmJKaTZyT1lvTW4vNk1UU2cxVDd0MXpnMlhKS2U3SkVz?=
 =?utf-8?B?NXdZUGpQd2d4NWJuNlQyNGhJVEdIVzk2UFhRODBrRzZYOVU1SmtTb3lvcEtT?=
 =?utf-8?B?aGxMS2RxQW12dmRlQnQ3SjE1N2RMbVh4ZVlNYnNXaUxvUXFoSHl1c0dOU1Rw?=
 =?utf-8?B?NC9tcFN5OU9ybk9uVFZwNldzVWRsemhzZUNzMktiaWtFWkNTeUFuUitYMitQ?=
 =?utf-8?B?RHhSVGJVMFU3SEVrUDBmelRUQjFwTXFLS3ZsVG1iZk05TVdCU1p2bTNpdkVB?=
 =?utf-8?B?b0RjWFU3VldNRENJanVmOHJKMTJicENIQjV0dStrOGZaYnVZVk9iaXo1dzJI?=
 =?utf-8?B?M25RZ1o3ZDJZQ3ZvempjdWZQZFQxOWpTWVJ4L1dhZnZCSG1sZkF1c1FoN2Q2?=
 =?utf-8?B?YlB5QWtnS2FYa2hnUTNhZTF6MlFxMTdqa283ZXh3MkhEN0V2enNxaTFGNlF6?=
 =?utf-8?B?K0FvQmVGU25HWTMwMTBaNFBOd2hrQW9JZFZKTzhGMUQ3eEEvMUFURU4wSU9F?=
 =?utf-8?B?QVUyWUFZbDVsNlB2R2s1Y0JxWHIzSjNQQWVRL1ROREFleTFZVFlkOVEwRXl0?=
 =?utf-8?B?dlFPRHUyaXBYODVzcE9nZEhleUpPNTRKVVpWSVVQL1hRa2t6VkZadzVIK2Rw?=
 =?utf-8?B?bkNZQXZobW9PWmt4NUdHTy81d283dGNrSVJqQU5JQVhtdUV1aERrMXFudFhK?=
 =?utf-8?B?Qk5vVUZ1RFdqNVJEL252VEVSb2I1a0ljajRhNnpNSDg4Qk1aR1JhRk1pN01k?=
 =?utf-8?B?R0FwSTNvSzBRUzQ3Y3JobmUwN2tXMlo5ald0THduWitLSkw1WTV0UWZpeHE3?=
 =?utf-8?B?RHNXQ2JTUUZKOEtWdFY3Wnlua1Bmbkw2ZXI4ZXc3ZGZvZVgyU1BvSlA0aVl6?=
 =?utf-8?B?MjVLTkFCbU9VTC9pcDZWMXZ4ZExad3NhZFV3WUhhbWZ0bjQ3TXV6NVhobzRB?=
 =?utf-8?B?L2FEMkVOajF3cEIyMDVYV0dZaHhod1JCWlJuaVZkcEpVR05DUzJmeHdLaE9T?=
 =?utf-8?B?MGZ0N0d3OHE4ZGJOK1dCZnZxTGtkeGZjeTNsSldiWDdMVlpPT2x6ekpsM05v?=
 =?utf-8?B?OG5ORzZ1NGJqR0s1VW5heHdjbm1GVCtiQTlLemtyY2lSUWh1WUI5M0FOSWlm?=
 =?utf-8?B?ZXJOUGNYMC9hd1lYTDV6U1UzancxaytxYmJoeDVIbTh5MGJOenBkdHB1eDEr?=
 =?utf-8?B?Rk5PbndvT1Q4Zy9idjRKQVJ4U3RFZ1RUa3Z4MkpiTTBwQjRJMXQxYlFieWVX?=
 =?utf-8?B?VjZuVkZkRmFuR2E0NFFkR1k0eEpQVDZOTUdYZFZrZjBIMCtPWHVubVA1WC9C?=
 =?utf-8?B?YnE0REZaRkQremQ5dkRDV2JiMnFUb0ZvcmZ4VXZkeWV3SWNWakxIYk92cXNw?=
 =?utf-8?B?V08rbHN5WEhBVUxKTVBEM0ZmTzc0a1Vmb1BETEZySHh4T0x3SkJ6enlibFZN?=
 =?utf-8?Q?hDjqHwqfItp8hh7WV5H5eD+2s?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 3e79cb3e-1e7d-416e-4b12-08dc946d22fd
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 16:46:04.0990
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: HyhU0NeK6vlYVoBya++Ggy/iRMxvUAO80zDoMQB4/4n0/B3B7nR0Maz/TLZsbOeJexPIfyU8++9VWaBQ2oG95Q==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: LV3PR12MB9330

Hi Jonathan,

I added responses inline below.

On 6/20/24 08:15, Jonathan Cameron wrote:
> On Mon, 17 Jun 2024 15:04:11 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
> 
>> CXL RAS errors are reported through AER interrupts using the AER status:
>> correctbale internal errors (CIE) and AER uncorrectable internal errors
> 
> correctable
> 

Thanks.

>> (UIE).[1] But, the AER CIE/UIE are disabled by default preventing
>> notification of CXL RAS errors.[2]
>>
>> Enable CXL PCIe port RAS notification by unmasking the ports' AER CIE
>> and UIE errors.
>>
>> [1] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and Upstream
>>              Switch Ports
>> [2] PCI6.0 - 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h),
>>              7.8.4.6 Correctable Error Mask Register (Offset 14h)
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> 
> I'm not sure doing this from a driver other than the one handling the
> errors makes sense.  It is doing a couple of RMW without any locking
> or guarantees that the driver bound to the PCI port might care about
> this changing.
> 

I think this could fit into the helper function mentioned in our earlier 
discussion. When the portdrv's notifier enabler is called it could also
enable the UIE/CIE.

> I'd like more info on why we don't just turn this on in general
> and hence avoid the need to control it from the 'wrong' place.
> 
> Jonathan
> 

I was trying to enable only where needed given the one case is not a 
pattern, yet. At this point it is only for CXL RCH downstream port 
and CXL VH ports (portdrv).

Would you like for the UIE/CIE unmask added to the AER driver init ?

> 
> 
>> ---
>>  drivers/cxl/core/pci.c | 12 ++++++++++++
>>  1 file changed, 12 insertions(+)
>>
>> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
>> index e630eccb733d..73637d39df0a 100644
>> --- a/drivers/cxl/core/pci.c
>> +++ b/drivers/cxl/core/pci.c
>> @@ -861,6 +861,12 @@ void cxl_setup_parent_uport(struct device *host, struct cxl_port *port)
>>  	struct device *uport_dev = port->uport_dev;
>>  
>>  	cxl_port_map_regs(uport_dev, map, regs);
>> +
>> +	if (dev_is_pci(uport_dev)) {
>> +		struct pci_dev *pdev = to_pci_dev(uport_dev);
>> +
>> +		pci_aer_unmask_internal_errors(pdev);
> 
> I'd skip the local variable for conciseness.
> 
>> +	}
>>  }
>>  EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_uport, CXL);
>>  
>> @@ -878,6 +884,12 @@ void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport)
>>  
>>  	if (dport->rch)
>>  		cxl_disable_rch_root_ints(dport);
>> +
>> +	if (dev_is_pci(dport_dev)) {
>> +		struct pci_dev *pdev = to_pci_dev(dport_dev);
>> +
>> +		pci_aer_unmask_internal_errors(pdev);
> 
> likewise.
> 

Got it.

Regards,
Terry

>> +	}
>>  }
>>  EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_dport, CXL);
>>  
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-BN7-obe.outbound.protection.outlook.com (mail-bn7nam10on2052.outbound.protection.outlook.com [40.107.92.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E003319DF61;
	Mon, 24 Jun 2024 16:22:20 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.92.52
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719246142; cv=fail; b=iy7qPoPakhCTjZtwVZcdAq++7yL25tEy12tLymOlE5UouS2FaCQgWdnfEZu5C1Rbvxd4pkegoRP3koLatpk/XvJD3ci/dOSAksnSmEZeQJeFrgIJmBUDZYdMW8ngAt4odh+sZbD9ePwbT4K7fyfRiqKyhLZ6Wnnckh/t7v/Wt2Y=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719246142; c=relaxed/simple;
	bh=OpUTy/sWZmTSXm3fxKBq5Wdz3m5upUvCphh1YVtDhWc=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=kDvotpUZPaT7AyWsA0HUtUgd1lJvFWQUXd60+5xcE/JchC46rxTVt+VApK8pmRL3Le/Fq1s5eJjfykeRYH5UDGpMKu35Xi27mUP/TU7GASmA3wRUTwdFzSoDceoSO6Q8dFWUdjMS8drjtyhzRa5XX98p0AtzLww3a73aPBXbGcU=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=yiJ7plHk; arc=fail smtp.client-ip=40.107.92.52
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="yiJ7plHk"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=HVqGlluhvqa0T+Z1UUiTEOIr/N/8clOmn0+GlzC/4fP+ADUc6PjjMl6XEndU/J45KVZOLoUOzz6HC3Ytckw11AGAopuWxK/nOdSq5WGGyeu5Sv7VVoWV9n2Dr4CtKotRfbaCdcJToiUvNvkxMTz18WxajXVQmn0sAJ2Nii7N5x4oKEDPX8k7u85I627U2pDH/hHgL/+9qQAUspA5+WamxyJ+pUfIMW3wSHV2GDbVeGSNBC/oJj60UYbibfXThk/8ibxQd8yl/gzgrE8IDEbhapf9psUvMolqvneHa2Wpc0TxvlOZfJxwj/z3c+UByUia7oob1imw8By9i1Hfuuy45g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=iHMe7rvPqpZIXMLxD+JVWGbNXfZ+GtmfB1UBAVZaVCk=;
 b=GsOfnbNitPMCC4X6OWNGc/YduZpDRaV7ka6+OBuVPPZTNlFECBU3Qt82LoJZnaMgwoAym3MfGKXI4pBLz7mD1ReUF+5Tda3aA2/rqYilGaPq1GJMTeeMWH9bNP6T6+OKUNri68fHM4H4PRhz2zHJ72SYmZ4h2RXH/DoKVsKyMSqJ9iEf9z6ddpIziCfGYgI5uZlQEFGy/Z2kzgHnz4oI8g7dlAeRL+sLX1oT16BIjq7Zt0E2nc1G+z3XKmq/geIVCKpbQ9Sa50Z/LqVTdTYKtRNzxYkCMqEHf4MvVHXWi6Fk+Pddg0bKiFWWgDovCPUKA/i5J18kl6dEk4VylTRQNQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=iHMe7rvPqpZIXMLxD+JVWGbNXfZ+GtmfB1UBAVZaVCk=;
 b=yiJ7plHkkPomCtH1/heO2/Rf4C4+ARjswiQjXQK93NRPw8/5rDCGmqjSfRyS2pUEax97pMjkpTYIjG80R61iVfJuc174D4KZbukHcuZYLLOAlWIJm8P8GkxDovzhUvkojL8G6KCQaX3X79pWR1+jPt+wiWpHpFch16V9MTu8BpQ=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by DM3PR12MB9351.namprd12.prod.outlook.com (2603:10b6:8:1ac::9) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.26; Mon, 24 Jun
 2024 16:22:15 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 16:22:15 +0000
Message-ID: <a9dfbb38-4108-47cf-8305-fa9b4eb9a87f@amd.com>
Date: Mon, 24 Jun 2024 11:22:11 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 8/9] PCI/AER: Export pci_aer_unmask_internal_errors()
Content-Language: en-US
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, ming4.li@intel.com,
 vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
 Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-9-terry.bowman@amd.com>
 <20240620141142.00005cf0@Huawei.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20240620141142.00005cf0@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SN7PR04CA0001.namprd04.prod.outlook.com
 (2603:10b6:806:f2::6) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|DM3PR12MB9351:EE_
X-MS-Office365-Filtering-Correlation-Id: 67df2569-dbfe-4bd8-d343-08dc9469cf5e
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|7416011|376011|366013|1800799021;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?Wkw0dHJsWGE0Y0dieDBhM3docVpvVUc4OTJaVGRxVXRTV1pBL1NCR2pKb2d6?=
 =?utf-8?B?UDZNZGZZZkRZd2dEM3BldUpwemlhUXkrWlh4WlpKUEFNVkRjNlJmVklqcGM4?=
 =?utf-8?B?bVlGajFVZG5JZTR6eUZ6THd1UlRQWHcxTWFzaWVLVHhZVzFWV0FrTzBpYVJx?=
 =?utf-8?B?RU5QRmVFUktIRkxjZFdMNVhLMmwvS2tkeHkzT2ZlNC9qcEY5VTloakkrN1BF?=
 =?utf-8?B?QUxQVUErcVJlUUlpaGpqS25lOHR2MGpad2RhaS9SMi9ZR3pvajBEVzNzajR3?=
 =?utf-8?B?ZW1KMklYRllFQ1gvR0RYU0YzZldYRWptbTM4TEhraG1GN1dYZHY0ZjZEd3E3?=
 =?utf-8?B?bC9YT2poQXBCWGxXamxUalV3WFlLV2tOWmJGT2EyazFKUXVXcDR2ajZ3d0Zt?=
 =?utf-8?B?bG4vQmxnZHJrelA0UnExSnRYdjF6TnNEM2FkeThKQkhTZ0YyNHVlaXFGaHM1?=
 =?utf-8?B?NGZTcFdTVDNmWHE5VHRsMmw0UDkvMHJ6MVY0cm96Z3lXTDFQTjZMY3hIcTgw?=
 =?utf-8?B?dDFzNXJ2U2ZzcDRBNERhVDU0cXYyWVd3ZWNmYkJiN3o5VHZqYWZMaDlvWnJY?=
 =?utf-8?B?Z2NZNzdCMjRQa1JTOXd2Qk9JY3d3U1ZiTTQvVGFKdmtRY2lQcFgwenRoK29S?=
 =?utf-8?B?WDVYL3F4TVRlTTluRVpBZWpzWUlqVWFYaHFWZWs2dHJqc3Q2UC9GeDhHajhR?=
 =?utf-8?B?MzFLU1lUQUJUQzlQc3pzQ2hoSWlFWnNEWHM3REpRMkhxaTRUcWtFWFF4RW5m?=
 =?utf-8?B?ZXhtUWdLZVJEN2pyR1prYy9maHFnWVNIaEtZSnJ6VVRDUGdvdFhSUk1SaDVy?=
 =?utf-8?B?QkdrNnJKYVJmZEtxNDRjMFZkS0daRXJza2lndGJzWUFBRlc3YVFidEVaRkM1?=
 =?utf-8?B?cVpXQ3FxQ0NKRk1rV01IbGtMWkxjYitHYXZQeTZIQmxoUGRTNUZxYUZUeElq?=
 =?utf-8?B?aXltdWxyNXVsNFp5elJjdTFTSHk0RXdsamNabDR0MnNPRnN0bnRNR3ZRQmlp?=
 =?utf-8?B?QmZXSHErdGlSbldmRzhZMWt1cDZBZk9xd2Rnb29va1lMSjhEbHI4UGh4bUFT?=
 =?utf-8?B?NG5RcjljVmlNM1ZtbjhaS1U5Q0gyZllNYzZLNzZBMWcvUkFCYXVwelVvSEFn?=
 =?utf-8?B?ZVA4Wk53TC9FQmJISlBGS05GalBQSGlrVXNYTVBGMlcxRFUvVW84bjlMUzZh?=
 =?utf-8?B?NjEreVhuaE1CdkFCaitpQzdHOWFLbnhQV3lYL3B4MFFsTDJ1YlY1RmFRRHd2?=
 =?utf-8?B?aVBnKzBOY1Yvb2RnZE9jbVFFcktpdWFRdmlGemxrRzJiV25rbVZwS05VaWE1?=
 =?utf-8?B?UDNZbEU0NVpEb20rczgwZ1VGOVh4VHZlSjVoNllxbnhkTE45NkJLK0s5MW5u?=
 =?utf-8?B?c3BndDl1NllYcnFOTWFUNXVSNGZRZllmZjg0dS90eVVXc1JRYmYreTF4Q2VQ?=
 =?utf-8?B?aGlrWkpDZEU2VXYwNFNnU1ZUT3FNdnkxL0V4OW1pTUhSUVdaOTNsVFFXcTBs?=
 =?utf-8?B?RE4vSUhpOGVtd0hyamJsekpIemlscC9KeGJqUUxlVFptY0l5T0FIazROak1F?=
 =?utf-8?B?S1B3TnRnYzdZeW1lVGpKRlNQQlI4akQwbUNrWDdwMGdrSmhXWlpKOXRuRXA1?=
 =?utf-8?B?TTJyN0Z3OEh5Z3ZNeTUvY01lSU5uWWVRaGNjQzhDY1QrNUFBb1BNTEdRQzBi?=
 =?utf-8?B?MktHS0pPeUN5ckRRSmlmSSt1bDVnc2o2TFQ5TEdCQmZzKzBBeStQYUg4ZFls?=
 =?utf-8?Q?H0wdvDJRquTgXcSEyFer4imYWiZfzcPPs06CNny?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(7416011)(376011)(366013)(1800799021);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?WFhxSHZuZXBCT21FUGhKbXlGM3VTMFFnOFVGRi9sMWhJMmhFc0dKVng3dVN4?=
 =?utf-8?B?M3lPWC9ySzg1dkFMc0xyclNuU1pEd3Vib0s4dHBYazNGRWxuV2x1WHM3eG1z?=
 =?utf-8?B?K0FhZjBOV3V5NTlQV20xaWlHRENZTk9aV1RRMGtobU4xeTF6R25hQ1R3Rnp2?=
 =?utf-8?B?b2tBVlY0REFRSzhOWGR2eDcydzgrNi9JSTJrTXBWMzZRb0R6TTFkU1dKNitM?=
 =?utf-8?B?RFF2R2ltYzNYQXlqcTgyK1YwL0kxY0FtY2NaeFp6YnpMb3FzU1g3UWV4R25j?=
 =?utf-8?B?K1c1MmhwcG85VEFqYmoyNXNRUEJ2MktSN0pVdXJKSFY4YTJhOElsWmljZnNq?=
 =?utf-8?B?U3JQYmxMQ2wwcDI1T0g0dlJ3RHBBcURZSk5WTkd1MWpYdG1SYTd3VWJienZu?=
 =?utf-8?B?eEkwYU9GRC9ud3dxZTg3U1dBZTFwc0lzaDNBenF3UUloZk5oaExSTC93SFJ6?=
 =?utf-8?B?bE4wdU4xdnR2TURySzJJNkxONDliVzZMbGxRbnZNeDF4ZjZhbHVscE9KOWl3?=
 =?utf-8?B?N1lIV1liaXJadEUyTnhmV0tJNzRydTYwRitORGFDRDNqbDhRS3BabU4raFZG?=
 =?utf-8?B?cWdvc2RuVmFGMkZkVFR0YXNTQ05QSDc1RytjR2hCRXhseDRrSzNUb1UxS2JX?=
 =?utf-8?B?M09XRkpRdXZocyt0bjNEeThIUzA4bXJkWFlSK1ZoWEVFRmZxcnVKT25hQ0N3?=
 =?utf-8?B?ZHEvRDNxVElpcGdDa1ZBNzlUbzdMSUwxZWhxZG4rd3kycXoyUTVtai9IL0g5?=
 =?utf-8?B?SUtXUDI2VFlhRVEvZ2tMc3o1U3RqZGlGYXJyK2xUaG1pNHlSVllZbktseG5G?=
 =?utf-8?B?WlJ3b2REQ2NqUDZsSllRS2ozYVJud1VSdFdDYWZUMjRhbkllQTVUbUljZmo1?=
 =?utf-8?B?RzNPVENPeWZTM3JEWWxCb3hWQk8za2h4WHliaGp6b2VWVVNZL0xMNFkyK2hE?=
 =?utf-8?B?Zk93TTlvdVkzcjVIaWlhdGVpSk5mdHhaNVMxRGJhaWpBZnJ1czBqRjU1R0JM?=
 =?utf-8?B?bkMwR281ZWxIMDBHaEVYdktQL0NPNG9NWHQ2TU1RMEhYUi9tcG55UkVNR0tM?=
 =?utf-8?B?VHA2R1I2d3hPWHFOY1RLWmNPOXduRm9Rck96cEpzK2k3VnhIYjB5TWdmbkNS?=
 =?utf-8?B?dXpYWmpxRlZzVWhjSTYxdGdobFY5ZWJnTERrQmk2dHNDeE5ZKzVPYzdxeDM1?=
 =?utf-8?B?OEdXbyt0dlg5WFhyZFJxV2kvT0ZzWldNR3M5T2RRN2xGMHBxKy93OXNXTUtI?=
 =?utf-8?B?VTh4RDRqOG5oT2huL1J4a3JCdHBFdzNPUkUzanVZZVRHcU9TeDB6a3ZsNWhN?=
 =?utf-8?B?b2ZNYlhFTVZpbTgxbFdXNE4rSEk5WGdSbEk5RUVCZ0Z5QnVkYnpvNTVrbUpt?=
 =?utf-8?B?dkpjS2poTzlMNjNQYkNqcDNMUmlhTHpDUXRIa0VCYllzalQzbGpwRVAzMVUr?=
 =?utf-8?B?elg3ay80MUhPQ05iOEk0dGZLUUh0YjVobi9aaFFCT2ZDbFo3ZmxLK2JTQlVM?=
 =?utf-8?B?M0Q5cS8zbG84ZWd6dnpRYVRSdmhMc2I1VEZqZkt1WUgrSks5L3lwRDd2ZW1v?=
 =?utf-8?B?elFydkh5SnpYWFZXazJCeHVSQzllamRNbzZ0NDZTMVJkOTFZeEJlNllieWdj?=
 =?utf-8?B?M2d6MGFoUXFDUWxJdExEejdXcDlyc3N6VUo3ektPUWJwVXYrVTdid2FDdWRB?=
 =?utf-8?B?cGQrMnFCZDloejJmK0N2ODcvaHUxZXBUNmxWR05UeHJjbFBsSnFCTXNEaUxW?=
 =?utf-8?B?akNYdEc4YVRWREdUc0hZcWNYcS9JSVd3ZjIxaGorL25pbk1kOG0xd2E5TUFI?=
 =?utf-8?B?dWNKSUdIUHQ3QjNnblgvZS93akgvc1JGaXZtTVNxSWpjSmloMlBvWDNOZ3di?=
 =?utf-8?B?UG9zKzF3ZVZEd3ZmYWs3bnJNNlJaSTZPbnlZdktFRkdmVzdGVXJjWTdtV1Ex?=
 =?utf-8?B?aVc1eXZ3KzRGdVdEajVoQll4alJTb2VuV0QrZFNnZkJVVXZUTzQrUWNNcDcv?=
 =?utf-8?B?aWRqWXJVaTBoYnNiOUd3VFErdlBWMFpYaEREVEREODlqYURKcjRwVnViR1E1?=
 =?utf-8?B?RDBvcDhhTVhJemloTGR5eVQvV0VCTnhUZTJQT1pqOU0rNDBBaXkvU2hVWXYv?=
 =?utf-8?Q?2G5+CCgdbpt7/olsaflmuFf7O?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 67df2569-dbfe-4bd8-d343-08dc9469cf5e
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 16:22:15.2561
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: W7E9IXvy9u37dFsYUIChNOx4wLZTopD2Sp46IMRVCJ7tzYtoic7sWFmN+SJnyqJdFVNQ2vyZDSiAVcnXt6fAFw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM3PR12MB9351

Hi Jonathan,

I added a response inline below.

On 6/20/24 08:11, Jonathan Cameron wrote:
> On Mon, 17 Jun 2024 15:04:10 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
> 
>> AER correctable internal errors (CIE) and AER uncorrectable internal
>> errors (UIE) are disabled through the AER mask register by default.[1]
>>
>> CXL PCIe ports use the CIE/UIE to report RAS errors and as a result
>> need CIE/UIE enabled.[2]
>>
>> Change pci_aer_unmask_internal_errors() function to be exported for
>> the CXL driver and other drivers to use.
> 
> I've perhaps forgotten the end conclusion, but I thought there was
> a request to just try enabling this in general and mask it out only
> for known broken devices?
> 
> Admittedly that's a more daring path, so maybe I hallucinated it!
> 

I remember there was discussion. A quick search for PCI_ERR_COR_INTERNAL and 
PCI_ERR_UNC_INTERNAL doesn't find any default enablement. 

Regards,
Terry 

>>
>> [1] PCI6.0 - 7.8.4.3 Uncorrectable
>> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and Upstream
>>              Switch Ports
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>> Cc: linux-pci@vger.kernel.org
>> ---
>>  drivers/pci/pcie/aer.c | 3 ++-
>>  include/linux/aer.h    | 6 ++++++
>>  2 files changed, 8 insertions(+), 1 deletion(-)
>>
>> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
>> index 4dc03cb9aff0..d7a1982f0c50 100644
>> --- a/drivers/pci/pcie/aer.c
>> +++ b/drivers/pci/pcie/aer.c
>> @@ -951,7 +951,7 @@ static bool find_source_device(struct pci_dev *parent,
>>   * Note: AER must be enabled and supported by the device which must be
>>   * checked in advance, e.g. with pcie_aer_is_native().
>>   */
>> -static void pci_aer_unmask_internal_errors(struct pci_dev *dev)
>> +void pci_aer_unmask_internal_errors(struct pci_dev *dev)
>>  {
>>  	int aer = dev->aer_cap;
>>  	u32 mask;
>> @@ -964,6 +964,7 @@ static void pci_aer_unmask_internal_errors(struct pci_dev *dev)
>>  	mask &= ~PCI_ERR_COR_INTERNAL;
>>  	pci_write_config_dword(dev, aer + PCI_ERR_COR_MASK, mask);
>>  }
>> +EXPORT_SYMBOL_GPL(pci_aer_unmask_internal_errors);
>>  
>>  static bool is_cxl_mem_dev(struct pci_dev *dev)
>>  {
>> diff --git a/include/linux/aer.h b/include/linux/aer.h
>> index 4b97f38f3fcf..a4fd25ea0280 100644
>> --- a/include/linux/aer.h
>> +++ b/include/linux/aer.h
>> @@ -50,6 +50,12 @@ static inline int pci_aer_clear_nonfatal_status(struct pci_dev *dev)
>>  static inline int pcie_aer_is_native(struct pci_dev *dev) { return 0; }
>>  #endif
>>  
>> +#ifdef CONFIG_PCIEAER_CXL
>> +void pci_aer_unmask_internal_errors(struct pci_dev *dev);
>> +#else
>> +static inline void pci_aer_unmask_internal_errors(struct pci_dev *dev) { }
>> +#endif
>> +
>>  void pci_print_aer(struct pci_dev *dev, int aer_severity,
>>  		    struct aer_capability_regs *aer);
>>  int cper_severity_to_aer(int cper_severity);
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (mail-bn8nam12on2086.outbound.protection.outlook.com [40.107.237.86])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9D7A019D8A4;
	Mon, 24 Jun 2024 16:09:50 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.237.86
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719245392; cv=fail; b=EkaEYzxfbyZQz8nxwHUoobhOZaHJF7UQ2DTWCGOvFHKsLl7ZUALidgsMrjESv9R+0Btc4cDL3v5LpIWzXfv+MAGBDUtGbkqBf5DkfmGSsmoRvPRGR16zo5pEX7MAH2vxOrPlClGB630PQWcVpVXyH81KpU2EMAkXejHmVK97opU=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719245392; c=relaxed/simple;
	bh=6Zjt1LykZU8+44WpPYqzWjBilo65Oui1pVRLjP4L+CY=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=nbP9HN7aPnr5F6gxCJ901PBibN49tz0uaQE7v4xS1XjbIUfp/rdbzACfwgGLP+PZFClzC3yMMpfFnqoE1lGcv/RXxBEdAec941psdVDnxi0BeMuc8Hy3blRYsXHg6b/eJ0OJHAb3fAN+mmFcKztqgDzf7pfQ+TqcGiWdTfQ7ViY=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=DKjfNXH+; arc=fail smtp.client-ip=40.107.237.86
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="DKjfNXH+"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=afttkFlrQU6T6KvxQGnmylttQ6lplLCPQpBCowd/Rli2XeF01ueXWOfwR4AzFWzw1P0XDoZ3h++5u81ZRH9FtPywH2IUiNCGgR+ru+X2lat+tDwRNiCmEOTh4WH2355RpjJlSdvB4Re/8kqlynnbq2a3J3uOqsZRtOTGyC1f5/tRfVUuUjph3IfpYx46XouVf67uFtkbb1oS9HRs3aGvbJU6725yajo7nrqf83vz15aSWq+b1YlH/32It1RwG5hnFx3NcKCALs/vex2cQJiFzLue0jHPR/aWfx1bPz5gm3ZxoEbBF8psuO4Z/y26GUCqeGvLWspvAwyYUfqOvqoJhg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=C6Yz2NOQmoCiJteGYUD3mL7Amt1+OyOHUxMehX5laqI=;
 b=e0i7v9cPLwyUFJ4QGtCS5pomcqOQ4Wr4/lomtZIHxaFQc3FTURg68o4+Mqj3xQnlEUJq6zxKSxL+e5lrSeoI+fv349bHO+EdJQ/AW5NBgDfUFXzRrLRAuxlVEhwPm4BoAZof1oC3/cASopgE9t47OqILr6Au8k8wGDE6hCaM98HY2p3IyY8qv86uSVqVa37ef8Y4Uip5acEWuT2Yl9jMIZrRZbvAjTFeFeJVtqC2jEiq3hecEWwddDFn5XpXKhnWEx8q3sD4UIC8VNIBsSn+eJLLuKNVxarWhRhU7/sJuY8Uv6b4yI6JdCwXKpg12s2ZQh4rY80nLJn4uH84HuGlhw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=C6Yz2NOQmoCiJteGYUD3mL7Amt1+OyOHUxMehX5laqI=;
 b=DKjfNXH+exxWNp7bSOG2R4AnVPz1uZfNKVH9QpsjTS5drhDQMISsUTLIqDfMTIysoN3jDhiUFSs62E6fFECUe9x03WRL9NvY7laU/y9ZCvTC0sZXlHyknQF0MQifFHu9WpqB4QYO7nw8r+GPOR1nqdpeS2Ag08VgdEYAlGyt44g=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by IA1PR12MB8309.namprd12.prod.outlook.com (2603:10b6:208:3fe::8) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.25; Mon, 24 Jun
 2024 16:09:46 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 16:09:44 +0000
Message-ID: <6b4b451c-935b-4ce6-ab64-c2e66311099a@amd.com>
Date: Mon, 24 Jun 2024 11:09:41 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 7/9] cxl/pci: Add atomic notifier callback for CXL
 PCIe port AER internal errors
Content-Language: en-US
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, ming4.li@intel.com,
 vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-8-terry.bowman@amd.com>
 <20240620140926.000029d2@Huawei.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20240620140926.000029d2@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA9PR13CA0007.namprd13.prod.outlook.com
 (2603:10b6:806:21::12) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|IA1PR12MB8309:EE_
X-MS-Office365-Filtering-Correlation-Id: 109c1aa4-03ce-46d0-2582-08dc94680f93
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|366013|7416011|376011|1800799021;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?NjN4dkpMTVRjVFU1M3FmdVRwVldwZGxGUG9TME9CaDUvZzY2MnFrdG5SYU54?=
 =?utf-8?B?MEVZa2o5dnBZdlErUTN6MGVacnNmTUpRa2pwUnRNK2tnL0x0SW5ZTTc3bzRP?=
 =?utf-8?B?Yk1LRTIxa2FpajFtV21yeCtKeDdpTkc1ZDhhRGV0MHgvVUgwMm1OVFpzZE4x?=
 =?utf-8?B?Q1U1dStVMmFOUHFCMHdoTzQvUEdJUGRuc0JLekVoMGhrREd5dGhiWGhOUlZs?=
 =?utf-8?B?QnZXd0wvYnYxWDUrYnVDa2txL1p6MWZ3Y0lvS0FEZ0s1Z2FEUHZ2Z1NOTUo1?=
 =?utf-8?B?ZUE0aDdDWkxlUHF1U2hJTG90cTlMWUU0S2JrbHV4RnJ3ZEFJV0NpVVVlSGNM?=
 =?utf-8?B?THl0dldwU1ByalJDWi9naUlWNW9ZcjZ5Ym9lRUxiY2NxK2hWNHExaEJjY3Rn?=
 =?utf-8?B?eWZHdUswdy93aUQxemdPSTQ0TnVvR2hEVFF0TkF1MnhaL3gxRFFITU9yUDBt?=
 =?utf-8?B?d0doNzFQQjZyNmFkWkRlaGY1Ly85dG5ETno4YUFNWUNzTHBjVlc4ZTVGVXIr?=
 =?utf-8?B?SGlMQXIwQXhTWGV3MC92S3NCZ1JPTVBzTE53RWtxckdtL3ptcE9pZHNMelA2?=
 =?utf-8?B?UmNRR2VibjhvMGNTS1I2UGRUS0JSamc0am1lUEVkNkpLdSszOFpBZG5CdUlH?=
 =?utf-8?B?NmJYUnN5b2RTREV2eWxHUU5kTGhwVlB5TkIrejZaZ2sraWdzVWUrK3N2Z21C?=
 =?utf-8?B?cEdsblA2K0RmSnBudEFnS2hYbWNwWk44MU9VUnUrSUp4OXB1RHN1TzAzYWEz?=
 =?utf-8?B?cUpMcCtNWTNZYXBUYXhrWFAzeWRLNGR0KzllWkVSR2Y4L1hrZDBJSXh2clJX?=
 =?utf-8?B?ckxVTHpoQjFtYVR3a255OWxjQ3NvVytGbTc0SWk3a0luWXM0eVNpUm5rTXpN?=
 =?utf-8?B?RFYxVnZvL3JmdlY3VTRNaUtuYkVVTEJwMjU1czR1aGdWMHNXbFBlQStXRGQ1?=
 =?utf-8?B?ZGIra0VlSSt3MWgvOGQwS1hsUFRDTDQxZkZyU1BkVFhpdlBiTVdqQXRTYVFO?=
 =?utf-8?B?SzBMbmVzcVNqbEk0c0FzSjV3a3l4WEZsTU5yeWorTXR5WGY0T2w5MjZrVWJv?=
 =?utf-8?B?N291d1IyNkZKSGVxcWRBSzE5UlF4UCtDbDllR3dwZjJoTXRGR243d0dvQXcr?=
 =?utf-8?B?TnlEbnZuYTVOcmlyVU9BeEUrbGpYVE5PNzhtWEZQRHVxNlNwa2hObGp1V2lj?=
 =?utf-8?B?azNaUlBkRG0rd2FsU1l2N25WeHlsMjZaaFMrRTBkOGliUS9pejR5Y0RZSS9T?=
 =?utf-8?B?Y2NqRTZJb0hLK3ZCWTlmR2oydDgySHpHVTlPdDZaTGxkdkRCV3N3ZmU1R3B6?=
 =?utf-8?B?dkp1cEJ2cG5hTlQ3a0Uvd0hkRXZzVE9BZ0V5NThiNzNoRTN1VVFaYXVJVDJV?=
 =?utf-8?B?L2o4aW80ZUhzT1ZvTWpoalNVZFN4bkdTMDlOMEl0ZjlsdDRYWkw1VmswKzc1?=
 =?utf-8?B?VCtNeUtlTGdyd0w0d1FES3QrcG81ekFCaXFxY3p5cnkrdjNiRm5FaGhDRm9U?=
 =?utf-8?B?NVMxdXhXVWl0V2NmQTk2WlZQcUxpQ0s0dW03UndiY2tFclJmVWlOeWxHZmoy?=
 =?utf-8?B?VlJ0UVRaZE9HdlZhWnRuWGhnR2RSejh6K0FRUStUVndieFBoNlFnL09lWFda?=
 =?utf-8?B?RzVDVU0rczR0ckJLSUNzMjBaUUdlb1ArclF4bHliMUIrRHBXTzI4QUthUnUx?=
 =?utf-8?B?T1VZazgwT0krazdqL0RvczVXOW9wK0dFOTI2cWszR1NyU2lPV2k4QnlHaXVl?=
 =?utf-8?Q?mSQrr/FIefOzniknDet4wBodyb2hRjst7QAMTpz?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(366013)(7416011)(376011)(1800799021);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?M2t3MmU5WC9iVW45QzA3RXdOemdjWUdEQTVqQ2JGRjNsL09yNjlidGJJRXJa?=
 =?utf-8?B?eUdNVWYvSmpudjV4dDlQdTNQU0QvbUZ5bDU0TXlGcWNmd080QXZxbFJZUlY0?=
 =?utf-8?B?NzR1RDh0N1FpQS9aVlNpZmR5R3ptZjdsaDFyUmh4eVlVam5wKzJ3N2JWb1Vx?=
 =?utf-8?B?ZXBMODJ2dy9ybC9jZmdaL3NFTlpEY1pUS1F5OU9rTlpnbnZsZzFkZWdmV2pW?=
 =?utf-8?B?SHBHblk1M3hMUVdhUGVoZFdUUVZMRGhXVEZsdTcrT3lGQXNSYWJhdzlQRVlO?=
 =?utf-8?B?WHlVaExLb3g2bXBEU0Vsc0ZLakZLb0lrdjlEcFBST3R4R2hlaU00bHFWSk5a?=
 =?utf-8?B?ZFZFVGhMRkRxZTUvMG9zUkdpYzkxRFo1UVpiUHhIeVNRRDU0dFNSRXB0K1Yr?=
 =?utf-8?B?VTRubXViODBuN09yVVhkSDhIOEpVTGtqQmFBSFVpYUFjMnBDcnA0ZENDTzdV?=
 =?utf-8?B?MEs4YTJRZDZVOW51TEZuWFBEZE0zeXRJL3VCY3RrOHI3UVk4VFNzSGcxbERR?=
 =?utf-8?B?TmhBL3Z1YlRlTzVycjd2K0FTY3dJTFlqRWdLazgzd3kxQlpIK2MxQkpLWVpn?=
 =?utf-8?B?RDFRRjhIbjNFQ0JMV0M4dzMzSmtXT2x5WExvWWlzZGRKOXZGQlFRL0tUVXJK?=
 =?utf-8?B?V3IzWS9NVktpbGpTY1pKNmx2TVd1RHQ5RityMTZIbVJyY3hEc2wzUkozNmx3?=
 =?utf-8?B?SjZvd3JhNTJwb1gzRXpkRFdwaUoyeXMvUXZ3V0tKeHhFU2N4ZzM3UEZxSmlC?=
 =?utf-8?B?NDFESFZHazUyNGhKSE0wS2krcVpYdHpiZHBoM28yV1oxU1gydnlVQ1hmR2Iz?=
 =?utf-8?B?VlZINWNhMXJxZU9SWXd6VWZUb2xLcXV4dDNlVHl2cjZBcitoU0tHcEhhc09N?=
 =?utf-8?B?ckFFM1kzWUN2OThZTWk3WlQyT1crU1NTSkN1SzB6b0NyVnFxc0lBS0lnOGpQ?=
 =?utf-8?B?cllsZXREWnpVaDc2MnRZVGVPQlh5RXllQ1orQWorL1l5dVYyRWozMDc1RlVF?=
 =?utf-8?B?cjZEVHZ5VTRYdXhPaUhRMDYrMFZSeGpPek1jSTRCOVFHZ2ZMdkxWbmpqQlZx?=
 =?utf-8?B?OEFkU3o5UGhySkg1dVVsa05ZckdxaWtOQXlDQVIxS2J1NHVCM21ScVhTOEVj?=
 =?utf-8?B?SEV5WjlqUGpDWWNKRVZ5NmRBWnlscktYTTRId0xyY2IrMERkSHhJZ2NmbVBY?=
 =?utf-8?B?UWlienRRa01tdUVGK0thOEU4elBQSmJQZDM4Q1BpQzhzbS9Zazl5dzNOM1Q5?=
 =?utf-8?B?bkJ1dGZwc291NDkzMk5GdlBScGJZVjF0Q3Eyek5CbnZiT0lkd2xvQ3NndmJm?=
 =?utf-8?B?SXFNY3V3SDBsSTRXenhMWkNSbTQzWlBJTmFtb0tOaUk4cGNjY2RQT2l2QWVV?=
 =?utf-8?B?bDJqdUN2N1VQMWVRVmg2RElIT1hOc2dSdDF5bWFiQ3k2ZGZKMnRjTzhSZHBz?=
 =?utf-8?B?YVpXZEFRY0ZSdWpyUWttTU9NY25GYjZzTU5tQXJKVlJSeVNvSFczM2FFbENM?=
 =?utf-8?B?ZVdHY2w0WDVkQ1V1OVlHYTRnemhUa0JFdHB1SWpKZXRUQmh1ZWt6SDczMjNS?=
 =?utf-8?B?ZVliWU5hNUY0SHVsS0hLMnFLUEkvQ25ud2lMYzJxZUtSN3NXdVJpK3pkSVZC?=
 =?utf-8?B?Q1AybXBZUnpUcFBzOHVzNjV4c3p3K2V6QnF0dHpDZS9nSlJYWU9wejVGWk9F?=
 =?utf-8?B?NmZaUDBVbTNNZlRmemlybi9tS05UMXJuTHZEUVhHY1F2WWQ0MVNoTTE4UTNk?=
 =?utf-8?B?ZnNCSmhnRnhRT05VcmpMZzRldmI4SVpLemQxSW9UQ2p3RDZhZmw0RWJWV2JH?=
 =?utf-8?B?eFo1Y0hweTZhR1U3RzVoelQ2OUZhQkJDYURxTE1NQ293S25xVGNCWDBEYm8r?=
 =?utf-8?B?cjFjbWhWWWlqMFRKdEdPSTloRXFjMDZGUEV4ajFEYTJ1NVB3N2tuRXhNOUhI?=
 =?utf-8?B?NUw3U3oxZ2xNR1g2aTdQMW1peWlZa21mcE8wTGlrK0Z5WnUvb0EzWktDc25F?=
 =?utf-8?B?VEwxWUJjRG5MalN1c1B4MWxrYUk3bmxhWjVSVSt4MGYyQUpycXNVNkVOdXox?=
 =?utf-8?B?b1lpTW80M3JLdWZvTnZSSGFvdnN3VGIvaFViYXhnUWN2MVUvMUlvbitGWTJT?=
 =?utf-8?Q?40LXaavcCYOOdiaq8YO5GwKvT?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 109c1aa4-03ce-46d0-2582-08dc94680f93
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 16:09:44.0774
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: SKex2p3QnwlQo3aGiPtBQfj4Beet6X+e1E75iKva4JXwbc48534TsvS74MEz8GohQQRFY0vdkm+lJKWaeZxsrw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA1PR12MB8309

Hi Jonathan,

I added repsonses inline below.

On 6/20/24 08:09, Jonathan Cameron wrote:
> On Mon, 17 Jun 2024 15:04:09 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
> 
>> CXL root ports, CXL downstream switch ports, and CXL upstream switch
>> ports are bound to the PCIe port bus driver, portdrv. portdrv provides
>> an atomic notifier chain for reporting PCIe port device AER
>> correctable internal errors (CIE) and AER uncorrectable internal
>> errors (UIE).
>>
>> CXL PCIe port devices use AER CIE/UIE to report CXL RAS.[1]
>>
>> Add a cxl_pci atomic notification callback for handling the portdrv's
>> AER UIE/CIE notifications.
>>
>> Register the atomic notification callback in the cxl_pci module's
>> load. Unregister the callback in the cxl_pci driver's unload.
>>
>> Implement the callback to check if the device parameter is a valid
>> CXL PCIe port. If it is valid then make the notification callback call
>> __cxl_handle_cor_ras() or __cxl_handle_ras() depending on the AER
>> type.
>>
>> [1] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>>              Upstream Switch Ports
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Hi Terry,
> 
> Some comments inline.  Mostly this comes down to earlier question of whether
> this notifier should be registered per device or globally. 
> I think I still prefer per device, but attaching the handler will be trickier
> and I'm guessing there may be some locking/lifetime issues doing that which
> are avoided by a global notifier.
> 
> Jonathan
> 

I agree on the per-device notifier.

>> ---
>>  drivers/cxl/core/core.h |  4 ++
>>  drivers/cxl/core/pci.c  | 97 ++++++++++++++++++++++++++++++++++++++---
>>  drivers/cxl/core/port.c |  6 +--
>>  drivers/cxl/cxl.h       |  5 +++
>>  drivers/cxl/cxlpci.h    |  2 +
>>  drivers/cxl/pci.c       | 19 +++++++-
>>  6 files changed, 123 insertions(+), 10 deletions(-)
>>
>> diff --git a/drivers/cxl/core/core.h b/drivers/cxl/core/core.h
>> index bc5a95665aa0..69bef1db6ee0 100644
>> --- a/drivers/cxl/core/core.h
>> +++ b/drivers/cxl/core/core.h
>> @@ -94,4 +94,8 @@ int cxl_update_hmat_access_coordinates(int nid, struct cxl_region *cxlr,
>>  				       enum access_coordinate_class access);
>>  bool cxl_need_node_perf_attrs_update(int nid);
>>  
>> +struct cxl_dport *find_dport(struct cxl_port *port, int id);
>> +struct cxl_port *find_cxl_port(struct device *dport_dev,
>> +			       struct cxl_dport **dport);
>> +
>>  #endif /* __CXL_CORE_H__ */
>> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
>> index 59a317ab84bb..e630eccb733d 100644
>> --- a/drivers/cxl/core/pci.c
>> +++ b/drivers/cxl/core/pci.c
>> @@ -689,7 +689,6 @@ EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
>>  static void __cxl_handle_cor_ras(struct device *dev,
>>  				 void __iomem *ras_base)
>>  {
>> -	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>>  	void __iomem *addr;
>>  	u32 status;
>>  
>> @@ -698,10 +697,17 @@ static void __cxl_handle_cor_ras(struct device *dev,
>>  
>>  	addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
>>  	status = readl(addr);
>> -	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
>> -		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
>> +
> 
> Blank line probably not wanted as we want to group the status
> check with the read (it's kind of an error check).
> 

Ok.

>> +	if (!(status & CXL_RAS_CORRECTABLE_STATUS_MASK))
>> +		return;
>> +
>> +	writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
>> +	if (is_cxl_memdev(dev)) {
>> +		struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>> +
>>  		trace_cxl_aer_correctable_error(cxlmd, status);
> As below - don't bother with local cxlmd variable.
> 

Ok.

>> -	}
>> +	} else if (dev_is_pci(dev))
>> +		trace_cxl_port_aer_correctable_error(dev, status);
>>  }
>>  
>>  static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
>> @@ -733,7 +739,6 @@ static void header_log_copy(void __iomem *ras_base, u32 *log)
>>  static bool __cxl_handle_ras(struct device *dev,
>>  			     void __iomem *ras_base)
>>  {
>> -	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>>  	u32 hl[CXL_HEADERLOG_SIZE_U32];
>>  	void __iomem *addr;
>>  	u32 status;
>> @@ -759,7 +764,13 @@ static bool __cxl_handle_ras(struct device *dev,
>>  	}
>>  
>>  	header_log_copy(ras_base, hl);
>> -	trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
>> +	if (is_cxl_memdev(dev)) {
>> +		struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
> Just use this inline.
> 		trace_cxl_aer_uncorrectable_error(to_cxl_memdev(dev),
> 						  status, fe, hl);
> 
>> +
>> +		trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
>> +	} else if (dev_is_pci(dev))
>> +		trace_cxl_port_aer_uncorrectable_error(dev, status);
> 
> As before, why no fe or hl?  I'm sure I'm missing some spec subtlty
> but a comment would help me and others avoid that.
> 

Adding the fe and hl on the list to be added. No, you're spot on. 

>> +
>>  	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
>>  
>>  	return true;
>> @@ -882,6 +893,80 @@ static bool cxl_handle_rdport_ras(struct cxl_dev_state *cxlds,
>>  	return __cxl_handle_ras(&cxlds->cxlmd->dev, dport->regs.ras);
>>  }
>>  
>> +static int match_uport(struct device *dev, void *data)
>> +{
>> +	struct device *uport_dev = (struct device *)data;
>> +	struct cxl_port *port;
>> +
>> +	if (!is_cxl_port(dev))
>> +		return 0;
>> +
>> +	port = to_cxl_port(dev);
>> +
>> +	return (port->uport_dev == uport_dev);
> () doesn't add much so I'd drop them.
> 
>> +}
>> +
>> +static struct cxl_port *pci_to_cxl_uport(struct pci_dev *pdev)
>> +{
>> +	struct cxl_dport *dport;
>> +	struct device *port_dev;
>> +	struct cxl_port *port;
>> +
>> +	port = find_cxl_port(pdev->dev.parent, &dport);
>> +	if (!port)
>> +		return NULL;
>> +	put_device(&port->dev);
> I'm confused on the lifetimes. Doesn't it make more sense
> to hold this until after you've stopped using it? So move the
> put after device_find_child(...)
> 

Ok.

>> +
>> +	port_dev = device_find_child(&port->dev, &pdev->dev, match_uport);
>> +	if (!port_dev)
>> +		return NULL;
>> +	put_device(port_dev);
>> +
>> +	port = to_cxl_port(port_dev);
>> +
>> +	return port;
> 
> 	return to_cxl_port(port_dev);
> 
>> +}
>> +
>> +static void __iomem *cxl_pci_port_ras(struct pci_dev *pdev)
>> +{
>> +	void __iomem *ras_base = NULL;
> Don't initialize and...

There is possibility the incorrect PCI type is passed and this is intended to
return NULL for these cases. Should ras_base not be preinitialized in 
that for the scenario?

>> +
>> +	if ((pci_pcie_type(pdev) == PCI_EXP_TYPE_ROOT_PORT) ||
>> +	    (pci_pcie_type(pdev) == PCI_EXP_TYPE_DOWNSTREAM)) {
>> +		struct cxl_dport *dport;
>> +
>> +		find_cxl_port(&pdev->dev, &dport);
>> +		ras_base = dport ? dport->regs.ras : NULL;
> 		if (dport)
> 			return dport->regs.ras;
>> +	} else if (pci_pcie_type(pdev) == PCI_EXP_TYPE_UPSTREAM) {
>> +		struct cxl_port *port = pci_to_cxl_uport(pdev);
>> +
>> +		ras_base = port ? port->regs.ras : NULL;
> 		if (port)
> 			return port->regs.ras;
>> +	}
> return NULL;
>> +
>> +	return ras_base;
>> +}
>> +
>> +int port_internal_err_cb(struct notifier_block *unused,
>> +			 unsigned long event, void *ptr)
>> +{
>> +	struct pci_dev *pdev = (struct pci_dev *)ptr;
> 
> I think you can use this notifier for other types of device in future?
> If it's going to be global definitely want to check here that we
> actually have a CXL port of some type.
> 
> It may be that via the various calls any non CXL device
> will result in a safe error. However that's not obvious, so an
> upfront check makes sense (or a per device notifier registration!)
> 

cxl_pci_port_ras() performs PCIe type check and sets RAS base to NULL if 
the type is not a port.

>> +	void __iomem *ras_base;
>> +
>> +	if (!pdev)
>> +		return 0;
>> +
>> +	if (event == AER_CORRECTABLE) {
>> +		ras_base = cxl_pci_port_ras(pdev);
>> +		__cxl_handle_cor_ras(&pdev->dev, ras_base);
> 
> as below - one line should be fine for this.
> 
>> +	} else if ((event == AER_FATAL) || (event == AER_NONFATAL)) {
>> +		ras_base = cxl_pci_port_ras(pdev);
>> +		__cxl_handle_ras(&pdev->dev, ras_base);
> 
> 		__cxl_handle_ras(&pdev->dev, cxl_pci_port_ras(pdev));
> 
>> +	}
>> +
>> +	return 0;
>> +}
>> +EXPORT_SYMBOL_NS_GPL(port_internal_err_cb, CXL);
>> +
>>  /*
>>   * Copy the AER capability registers using 32 bit read accesses.
>>   * This is necessary because RCRB AER capability is MMIO mapped. Clear the
>> diff --git a/drivers/cxl/core/port.c b/drivers/cxl/core/port.c
>> index 887ed6e358fb..d0f95c965ab4 100644
>> --- a/drivers/cxl/core/port.c
>> +++ b/drivers/cxl/core/port.c
>> @@ -1027,7 +1027,7 @@ void put_cxl_root(struct cxl_root *cxl_root)
>>  }
>>  EXPORT_SYMBOL_NS_GPL(put_cxl_root, CXL);
>>  
>> -static struct cxl_dport *find_dport(struct cxl_port *port, int id)
>> +struct cxl_dport *find_dport(struct cxl_port *port, int id)
>>  {
>>  	struct cxl_dport *dport;
>>  	unsigned long index;
>> @@ -1336,8 +1336,8 @@ static struct cxl_port *__find_cxl_port(struct cxl_find_port_ctx *ctx)
>>  	return NULL;
>>  }
>>  
>> -static struct cxl_port *find_cxl_port(struct device *dport_dev,
>> -				      struct cxl_dport **dport)
>> +struct cxl_port *find_cxl_port(struct device *dport_dev,
>> +			       struct cxl_dport **dport)
>>  {
>>  	struct cxl_find_port_ctx ctx = {
>>  		.dport_dev = dport_dev,
>> diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
>> index 7cee678fdb75..04725344393b 100644
>> --- a/drivers/cxl/cxl.h
>> +++ b/drivers/cxl/cxl.h
>> @@ -11,6 +11,7 @@
>>  #include <linux/log2.h>
>>  #include <linux/node.h>
>>  #include <linux/io.h>
>> +#include "../pci/pcie/portdrv.h"
> 
> Why add the include?  Maybe only needed in c files/
> 

Ok

>>  
>>  /**
>>   * DOC: cxl objects
>> @@ -760,11 +761,15 @@ struct cxl_dport *devm_cxl_add_rch_dport(struct cxl_port *port,
>>  #ifdef CONFIG_PCIEAER_CXL
>>  void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport);
>>  void cxl_setup_parent_uport(struct device *host, struct cxl_port *port);
>> +int port_internal_err_cb(struct notifier_block *unused,
>> +			 unsigned long event, void *ptr);
>>  #else
>>  static inline void cxl_setup_parent_dport(struct device *host,
>>  					  struct cxl_dport *dport) { }
>>  static inline void cxl_setup_parent_uport(struct device *host,
>>  					  struct cxl_port *port) { }
>> +static inline int port_internal_err_cb(struct notifier_block *unused,
>> +				unsigned long event, void *ptr) { return 0; }
>>  #endif
>>  
>>  struct cxl_decoder *to_cxl_decoder(struct device *dev);
>> diff --git a/drivers/cxl/cxlpci.h b/drivers/cxl/cxlpci.h
>> index 93992a1c8eec..6044955e1c48 100644
>> --- a/drivers/cxl/cxlpci.h
>> +++ b/drivers/cxl/cxlpci.h
>> @@ -130,4 +130,6 @@ void read_cdat_data(struct cxl_port *port);
>>  void cxl_cor_error_detected(struct pci_dev *pdev);
>>  pci_ers_result_t cxl_error_detected(struct pci_dev *pdev,
>>  				    pci_channel_state_t state);
>> +int port_err_nb_cb(struct notifier_block *unused,
>> +		   unsigned long event, void *ptr);
>>  #endif /* __CXL_PCI_H__ */
>> diff --git a/drivers/cxl/pci.c b/drivers/cxl/pci.c
>> index 2ff361e756d6..f4183c5aea38 100644
>> --- a/drivers/cxl/pci.c
>> +++ b/drivers/cxl/pci.c
>> @@ -926,6 +926,10 @@ static int cxl_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
>>  	return rc;
>>  }
>>  
>> +struct notifier_block port_internal_err_nb = {
>> +	.notifier_call = port_internal_err_cb,
>> +};
>> +
>>  static const struct pci_device_id cxl_mem_pci_tbl[] = {
>>  	/* PCI class code for CXL.mem Type-3 Devices */
>>  	{ PCI_DEVICE_CLASS((PCI_CLASS_MEMORY_CXL << 8 | CXL_MEMORY_PROGIF), ~0)},
>> @@ -974,6 +978,19 @@ static struct pci_driver cxl_pci_driver = {
>>  	},
>>  };
>>  
>> -module_pci_driver(cxl_pci_driver);
>> +static int __init cxl_pci_init(void)
>> +{
>> +	atomic_notifier_chain_register(&portdrv_aer_internal_err_chain, &port_internal_err_nb);
> 
> Long line that you can easily break.
> 
>> +	return pci_register_driver(&cxl_pci_driver);
>> +}
>> +module_init(cxl_pci_init);
>> +
>> +static void __exit cxl_pci_exit(void)
>> +{
>> +	atomic_notifier_chain_unregister(&portdrv_aer_internal_err_chain, &port_internal_err_nb);
> 
> Long line that you can easily break.
> 
>> +	pci_unregister_driver(&cxl_pci_driver);
>> +}
>> +module_exit(cxl_pci_exit);
>> +
>>  MODULE_LICENSE("GPL v2");
>>  MODULE_IMPORT_NS(CXL);
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-DM3-obe.outbound.protection.outlook.com (mail-dm3nam02on2080.outbound.protection.outlook.com [40.107.95.80])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 1399E1D53C;
	Mon, 24 Jun 2024 15:53:55 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.95.80
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719244437; cv=fail; b=aTWiPWEwJgWhEw8Xd53J+cTj5miMeGEGxNmE5CofmfOVqJogXfyGboUjw8QCSXqcNsTNMt3xOZn4svM6CTBofGTCP4OQnso4+UOxSKqnDRYzR9lyjwoYrgfZ+ZAgV0JNnwY6MsL8coLSx+u8rwpIW/nKM0sFxm83MAWAPvFFI0E=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719244437; c=relaxed/simple;
	bh=9YOsG73OstpEgpH/9Ma54NM4OdNckKK3yvjZBZOc2LQ=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=i8ole5HlTvgg8wn1fQdlqTpie5Itz/TM1P2+G+pE8loKTnUo73RTVHUaLvtspfDj5mmRVN+OGd+mVYoddkxl2jZ0t16VqyoVfchXws58e5H5fR4dUxhXqYLgPX1zK7/w+50LINkgXesnnhy2kbJaHPu37f8x7iHJZiSERwzcqTM=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=cWCXHnyC; arc=fail smtp.client-ip=40.107.95.80
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="cWCXHnyC"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=eL1ubTS+f/Srn6rXxzTL50VKnA9pqWABjWXGc04h9wmqgB5vNDodccQSixL9CDKJaoNgT3R70R/vmYv+D/Xfps6Cn5urF6pjsw+WyV7+PdrFeh/DPCe7rQCxSgLQgomBVtsp6ulwHzWgFzIXeXrTSfKat9eWMZYTqgfnvqXyNdLMetxyxK2N4lY20n2V/ZSY72YXNoNvrbMkheXGhIBtxVK6kAcaGAf8YCXEt/CT4loiP2tR3G+MIT8HRmldTLDdieFk2cAW3q6MlXJn7XUshNcHZErZP625S42xv6IszDYcPuEunxZ9kNQHOUOLIQDFd+O3O43Wo0894y/LjoUUGw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=xpRiwakasfPGAZ6wtzhJZsti36GP69Yf1VeRKJKbHJk=;
 b=WDNk09xHLtOwS1t2PH/U6yzRO13fJ3Nfx6fOcWpin2U0XqxPMfVPL9Nj1U8c1bumaWvYtmtL2v/Mp1n+3CRjqoym2KKd7Rhom7rThZ0+raqnpxpbPW0E719Wo78KxboZ4nQoSrrGPB+8X7AFb5FI3J0FN6yFcYP09lYAEvzcmqsHCSCFSfEQfL5S46WvsBhM6guMn26qDhm7T9ipKL/7h95QGNzQzvHIRfxBTwc9WRnhppCyUnHafuNGfhElj2LywY/tOAw+deCwkwrDKKt0IuYKNF78vYbeAOzF8QDXFLh0YUnz2LGdsjXwbzA56mZ43JRRmsdMq4ZD5A3hg9yCrQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=xpRiwakasfPGAZ6wtzhJZsti36GP69Yf1VeRKJKbHJk=;
 b=cWCXHnyC4u82w0qdKdaw4g7Pvdb545DMZDjp9bHSn7cMh/tnO48evAlhWbb3SSxgjGvFPbZ4ZqtO26VjExmKwRw0OMjPobXZu+ZQFJriGnEZhiwwu6P4npbnNoD7Jwq10LgNKms0MC74h1psrCK4mCD6S2btsCAyN0h+7vFqH60=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by PH7PR12MB5736.namprd12.prod.outlook.com (2603:10b6:510:1e3::19) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.28; Mon, 24 Jun
 2024 15:53:53 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 15:53:53 +0000
Message-ID: <550358f7-66d0-441c-abd9-f8edce9a5eb1@amd.com>
Date: Mon, 24 Jun 2024 10:53:51 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 6/9] cxl/pci: Add trace logging for CXL PCIe port RAS
 errors
Content-Language: en-US
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, ming4.li@intel.com,
 vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-7-terry.bowman@amd.com>
 <20240620135332.000053f5@Huawei.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20240620135332.000053f5@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA1P222CA0089.NAMP222.PROD.OUTLOOK.COM
 (2603:10b6:806:35e::19) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|PH7PR12MB5736:EE_
X-MS-Office365-Filtering-Correlation-Id: 1f4ae8e0-e056-4830-cbe0-08dc9465d8f3
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|366013|7416011|376011|1800799021;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?Q2dkQ3B0U2xCTTBlVmtkYW9FMk1wVVJzQy9YYzh0d3RMeG5hdEM4RU5ZYWxL?=
 =?utf-8?B?U3hjVXNZajNTbmswZStHcnhmeHF3b2RFZEIzckFBODRkRFJOZ1hUbCtUSmF4?=
 =?utf-8?B?bG1Jc1RHQUtXNmlRbEdIRmtPbmQ3YnVVMkxMdExCdFdCWFR0LzJIUjdkUTkw?=
 =?utf-8?B?bXdZdG1oMjFRVkdVZ2QzeG5ZNHhUZmZoT1lhdUN6RGJuSnFnRDc3aXpndFQ0?=
 =?utf-8?B?RWF4MUhQR3BDc0JqK2NOc0VUbDN5TTI0OWF2MVUzNEFGb2dlVGRCTEo1N3BT?=
 =?utf-8?B?S0hMR3Z3S3FyT2JqVHBHdVpxZ0xtWDdjOFZNS1JnRFNiVDVHaEdvdEMxNi9p?=
 =?utf-8?B?YUFmbGhjcys0YWVYendxYzFGb0dHTFNsSXNaaXlqaG8xVDRLZmtlcnZuVU01?=
 =?utf-8?B?NDA2c2VKSC9WUjRWK3c2dDJQNXZRd3k0NjRHNnNwNXBRUGR6TFZNWkJ4blJz?=
 =?utf-8?B?MC92ajRpaWlFL1dwVkRzZFRrK1FVd1B2bGtYR2Joay9zbndhZW1VcXloaTFo?=
 =?utf-8?B?ZHJ5dlZvV01YRDlBcDdMbzNpOHlZSWUybEp6b2N6bUw4b1drOFdwVk1UQUpU?=
 =?utf-8?B?SkMrOFZQcGxvTjRGTXFvemkrYWg3blg5cmxSRHVwUGRWblNRYmNmOFAyZHJy?=
 =?utf-8?B?WXp3bjdmN1ZGRFVmVDZPc3lvbERSTEoxckd4Y0dvWXBqZXNYQ1NiMG5ZbU5R?=
 =?utf-8?B?blFXMUM3NEpVYnNrdWtIZzltWEZkWHBsM2RVUXpabVZvclFFOWNGTzBDZVpm?=
 =?utf-8?B?ODVYZGN0bGJIQzJCWWc0ZDFQSUgrMkh3VStLUUs0aURFRHZWSlAwWExZSkRS?=
 =?utf-8?B?MkJHSlRIYWZyNEJ3NVdhVHdkcVVjamhQdE5wV0pkU0JCbndMMTg0SUUrem1U?=
 =?utf-8?B?c0d0Vk9Pd3hwN1dEeXVxOVluYXlJSDU5Z1RBN1Q2ME1kdEw4TVBRMUJpWDZU?=
 =?utf-8?B?OXpTbHN3VjdsVEs0dGZQZ3ZzN3F1ZlZDSmFvYmlOTUtGYmFYb0FsTENEQmhp?=
 =?utf-8?B?ZjZMVW9QNEVCNHhLY2wxN2pwaFA3bXR1Y1hYMG42YlAyd0hDNkVhWGRWNEc1?=
 =?utf-8?B?cHZpdVZMdUM4d1Q5Z3BocHQ4M1RiMHFGQzdBdFcyS0Nlb2pSV1pyVXJMelJH?=
 =?utf-8?B?N21BYWxtbWhaQVlqV2JPcjQ2bUJYdThKOTQvb0gvK1FhREtEZEZ2bkdJSWo2?=
 =?utf-8?B?b3pKTDh1UnFieDM4VTBoTlI4NUJZTXdVUWhPZXh4TEhDeG94eFI3NHJIVk01?=
 =?utf-8?B?alcxRWZ3RytjeDk4eGI0REEreGJkRDRySGZjNTY0SGJYVTZyZ1kxb2pJRG9r?=
 =?utf-8?B?c0ExbmxwVVBRK0lUNy9GTVVNdDM2bHNXT0c4MVFtOUh5Z2xrZWNvc3pZdnAv?=
 =?utf-8?B?VUJrMDNSaiszNzlRWndSRHZmTWFmM291ZGdyZkxYVHpOcFA4TmNDVTJ6OW5I?=
 =?utf-8?B?b1lEUFdEWkxRb3VSRDZhSHNjWjI0SnJhWDd0UWQ1NkFDOHc1aUJNS0xxbXZ5?=
 =?utf-8?B?S0VlVWw5UGlFU0pIN2hJbytieVNnWFl3UG9kQUh1aWhveUEyaVJzTGZNdy9t?=
 =?utf-8?B?dDlVYVR3WGhhRU9kdnRFa2piQjFGaGQrWUgzK0dRKzM1ZGxPVEJwQ0JJSmQz?=
 =?utf-8?B?QnhzczhZNC9GZTZIT29zN2txNmVmZjUzaHNvZWd4Nng1UncwU0VKNGtpSUxS?=
 =?utf-8?B?bHgvalQ4WlZ5RTJnZUViY1hSN25JZ0lEQWRBN0xLK0l4dFl3a25sNzg0QUt6?=
 =?utf-8?Q?mo7tYS6FJU3GJ9lSgGjVi7q4GMSFK07E6W4Uz5O?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(366013)(7416011)(376011)(1800799021);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?KzZ1cVVLcm0rU2ZZUnczMERldHVEbitrMnlEb3JNdUxQUDRrM2lacTNJT2NO?=
 =?utf-8?B?QTlJcU5VeHBtQXJlZ0JSWFNSN3AzdmZmV0wxS2xRaTA4UnNScUJOV0lLM0g0?=
 =?utf-8?B?em9TVHNvM3ZUbXJJMFlnQys3UDJKaFRkSHJYSEtQTHdFWTFqc1lCZmlsWWIy?=
 =?utf-8?B?NFB5Y2tUZVE2K1A3WXJvQ0RaSFVZSXhmdy9iL1BQODZ1OVUyb3poemVZNHgx?=
 =?utf-8?B?S3dCYk1wY0FUVEt4ZzlDMXZ6aGcrVzUvamlwZXJXV0ZYVVBUaSsrSVhoaDBQ?=
 =?utf-8?B?RGp2Ny9SYW1GSitoTEQrSFJlMkhiL3ZybElEdlR5cnlhT1FwcnIvTmhaZ3B5?=
 =?utf-8?B?YVVQaXM3MC93NnZSTjBpejN2dFZrR2JsR040TjFvL3hZUUFTaS9iMHJ2Tnc0?=
 =?utf-8?B?SGdWWjg5ODNiRWRBbW80dkhqYnU2ajhmbGZ0SldYVUJoejFraHliZUQzVXZE?=
 =?utf-8?B?ZjkrMG9teC9UVVk3YVV0UENWRGxPRlE3MXJyQWhKQnY3MUsxaW9VYm82S1Ba?=
 =?utf-8?B?a1doV0lYQ3c1Y2ZwaGJKRmZmTmkydlpYSERxNFQ1T1VRb3V6cFA3VUh6QkRv?=
 =?utf-8?B?R1J0Z1dPRzhuVFRYejBEV3oyVjVCU3k5N1FOQXlNZHY1cTZtK1B3OC9JZk84?=
 =?utf-8?B?cTRzWEt4RjM5NE54M1hFWmtCR2pDODhEWGZyYXBPS2ViY21aZmE4ZHRkOEsz?=
 =?utf-8?B?VWluK2hiaXBaN2NMSTJ0bVcwa2pydGZnQTZLT1BWb2J6WER3SU1qSlk5cW9j?=
 =?utf-8?B?Mk1PWGJQdGtnR3UxMk5VTWVRMVZoMUpxT1NPMVZYaEtJTkRxamV2TmF2ZTJy?=
 =?utf-8?B?RlI2a1pBZU9IMW56a3dNNU50c2VRbDZsaGdqOURxQllHZXpvQ1V1WDh2a0ZW?=
 =?utf-8?B?TTZyaU12R1A2N2F5QVpBSHhFbjVacmp5eHdwcXhBVzRnV3I2RlNRNWQ3VlhT?=
 =?utf-8?B?L1hCZ1Q5UEczR1FCSHpnYTR5clJ2eFFTSmtKU0xVSDQvRDRNL2psY1oyMHRi?=
 =?utf-8?B?UzNjck0yS3BIbVNLTzRuK3p3TS9jSlg4OHp1UzV3MTA0ZUFvSXVQb1FMdGFI?=
 =?utf-8?B?RUpJRmlRZXUxd0xRWnphYXh6c2xWQnpHOU1ZVi9xRXpZb1g1TWtvUFlLVnpo?=
 =?utf-8?B?T0lnNjZXcDZyN2pjclJJdno1NFVrcHVNYnNsK2U1dE10QTFDNUtiYVNCeGFo?=
 =?utf-8?B?UjlBK0x5RTVhL1dGVnFzcDROMTVZeDlyVDhMOUNLVlZLTmJmMFdrVHpjYUZY?=
 =?utf-8?B?cngzU21YTWpFZUdFSFhaN1JKUDV3bUp0cXBnc1dFZERrRVF2bklOZldHR2d6?=
 =?utf-8?B?dk9ZVVh4emxJMjN5bkd3eWdGMkFtRGxacFJDdklYY0FmUXRGVVc0TkV5b3ZW?=
 =?utf-8?B?dGJjSloyU0xRT3QwRzkwaXBkci9JekpKWWwwZEVSbTJXUHVPKzI0aTJ6ZXpV?=
 =?utf-8?B?RDRybEpHNGs4eHRKdlJTVnhrNXlKbThFN1NXNnJRSGdWcm1rTnZUeHJyUDJY?=
 =?utf-8?B?V2IrZkFtZnRNdnpzaVBsbkhlYjRBcktZUnVXTnVjMTlyWHcyRmpqQ2RkbEdO?=
 =?utf-8?B?WVlWUnpZU1NUZHc1OFdoSXZiUmJobUdmMDdLc1J1QWJCbUJrM01OWWhZeTFI?=
 =?utf-8?B?aEhtcG02bkRnL2srbHVEVzNybG1TQjhUbnRwdDZXc3l5ZXM2VjVGaUJITHlR?=
 =?utf-8?B?OHZub005Nlc4eUhpSHkzSE82TVE3RG00M3BnSDlWd05WdlBJUEZlZHNDNTU3?=
 =?utf-8?B?U29oQ0RLVFh1eis4M1BoQnUvUVpxWXRxbEN4TmZmU1ZKOHQwNnBTa1kxeVF0?=
 =?utf-8?B?QVp1bzVKQ09wemp1cTZBeUY4NE9qRjJ5NzdJLzYrZTF2NmxzUjYwM3AvSlN3?=
 =?utf-8?B?d200RkJWM0tHRElyYnkvSkI1dzkxSkgrbGIzUzdTRGRoVzZaM1VQanA2VWVI?=
 =?utf-8?B?TGZ2QWVWVVp4b0tvM0hUZ1M0Mmt2M2RPZVU0bmlSRSs3aXZYZEhtd3pSeUFQ?=
 =?utf-8?B?cEt3TjJlUG95ZVZ6NGplSlhvSFBhM1BJeTZKcG9YUDB6UHNwcW9aYUdkbzI3?=
 =?utf-8?B?TjlmSmUwaDFQbkorc0RiekRWTzYzeEUvYTV4M25QQmE4R1h6bXgxQnJUV1cx?=
 =?utf-8?Q?DsvLhBYdpH1L2YIZaUIeOWR4g?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 1f4ae8e0-e056-4830-cbe0-08dc9465d8f3
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 15:53:53.3652
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: B+wX+sTlWuMo6tkd8hlK7YfPI+/nHutB8NDatTJOmxE2t+PYq9/BznODif4FChuBz3A/g+hHNSr2G4AOw0ATng==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH7PR12MB5736

Hi Jonathan,

I added responses inline below.

On 6/20/24 07:53, Jonathan Cameron wrote:
> On Mon, 17 Jun 2024 15:04:08 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
> 
>> The cxl_pci driver uses kernel trace functions to log RAS errors for
>> endpoints and RCH downstream ports. The same is needed for CXL root ports,
>> CXL downstream switch ports, and CXL upstream switch ports.
>>
>> Add RAS correctable and RAS uncorrectable trace logging functions for
>> CXL PCIE ports.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> ---
>>  drivers/cxl/core/trace.h | 34 ++++++++++++++++++++++++++++++++++
>>  1 file changed, 34 insertions(+)
>>
>> diff --git a/drivers/cxl/core/trace.h b/drivers/cxl/core/trace.h
>> index e5f13260fc52..5cfd9952d88a 100644
>> --- a/drivers/cxl/core/trace.h
>> +++ b/drivers/cxl/core/trace.h
>> @@ -48,6 +48,23 @@
>>  	{ CXL_RAS_UC_IDE_RX_ERR, "IDE Rx Error" }			  \
>>  )
>>  
>> +TRACE_EVENT(cxl_port_aer_uncorrectable_error,
>> +	TP_PROTO(struct device *dev, u32 status),
> 
> By comparison with existing code, why no fe or header
> log?  Don't exist for ports for some reason?
> Serial number of the port might also be useful.
> 

The AER FE and header are the same for ports and the logging 
needs to be added here.

There is no serial number for the ports.

Regards,
Terry

>> +	TP_ARGS(dev, status),
>> +	TP_STRUCT__entry(
>> +		__string(devname, dev_name(dev))
>> +		__field(u32, status)
>> +	),
>> +	TP_fast_assign(
>> +		__assign_str(devname, dev_name(dev));
>> +		__entry->status = status;
>> +	),
>> +	TP_printk("device=%s status='%s'",
>> +		  __get_str(devname),
>> +		  show_uc_errs(__entry->status)
>> +	)
>> +);
>> +
>>  TRACE_EVENT(cxl_aer_uncorrectable_error,
>>  	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status, u32 fe, u32 *hl),
>>  	TP_ARGS(cxlmd, status, fe, hl),
>> @@ -96,6 +113,23 @@ TRACE_EVENT(cxl_aer_uncorrectable_error,
>>  	{ CXL_RAS_CE_PHYS_LAYER_ERR, "Received Error From Physical Layer" }	\
>>  )
>>  
>> +TRACE_EVENT(cxl_port_aer_correctable_error,
>> +	TP_PROTO(struct device *dev, u32 status),
>> +	TP_ARGS(dev, status),
>> +	TP_STRUCT__entry(
>> +		__string(devname, dev_name(dev))
>> +		__field(u32, status)
>> +	),
>> +	TP_fast_assign(
>> +		__assign_str(devname, dev_name(dev));
>> +		__entry->status = status;
>> +	),
>> +	TP_printk("device=%s status='%s'",
>> +		  __get_str(devname),
>> +		  show_ce_errs(__entry->status)
>> +	)
>> +);
>> +
>>  TRACE_EVENT(cxl_aer_correctable_error,
>>  	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status),
>>  	TP_ARGS(cxlmd, status),
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-DM3-obe.outbound.protection.outlook.com (mail-dm3nam02on2045.outbound.protection.outlook.com [40.107.95.45])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 485751D53C;
	Mon, 24 Jun 2024 15:51:27 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.95.45
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719244289; cv=fail; b=dPoK96Ro9rTc5K/fgaC+FyanCZfLG+Q+mBzP7GemB99OrfSAH1QCGOi5LIDL/2iGURa0kw2fcmmvIF02MELY0+jS5jxabm024rETotXGZPQ/VVswJvEmE5C536EHc0MX3qQ4dHLVKPUzq6c61Pvza/1TgPsOK8tpM9SivZIDYwg=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719244289; c=relaxed/simple;
	bh=CmbwPpurFDxdaJxxlYQthjY7RkWnO1Ixc4eOWU1LoAU=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=r4hZ7r4xXDnp+Wj6o8h/v+BDKXS2RtgKMH334GjZu4a90cfZtxd4zVDu3b1uzzIgy+PqWyBMT1Vp0b9nMjCYvQC3F/9j0GbweydQX/yp0lrJ9IYLqMWaE13iAZvuF80rbDRw0uAOBqizTrs/OeHPbv5auMIENm3gwtRLTmASEnc=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=pGBFnUSF; arc=fail smtp.client-ip=40.107.95.45
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="pGBFnUSF"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=NXUsVpcUpzl2Euc5eKbJoIWyQ101MwAzMspZWLKfgKAhadOuU9sfysMVGh5mUO3nD9gBFOwjRCHJgRWFVjdlrmZTqEaN6/guK1wB+vrI8tXB4mbmHH8r6syxid/hA0s8DZejOiiTtQxNiw+hvA/Jmx8TraZzETMXgkPv1k7HOUjiVx/gIkLkQsxWL69LAcynvZRzU59T2NvqNjtA8IWmEKGNId7IdS8qsR6QPbqKADrgH8jkmqdz+vHZZaGSnTzPKETCp9fI7PfUij/DmoS7+0PL9XrpZXOtXX/C+HJgYh8I1XHzTP5FjfFANqbUH+k4TZc/prkQinnnJnRB54c59Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=fohj8oxs07B3GUFQUGtigb2kQ/2TL57/WBk5cWS5Vxg=;
 b=atApWt0mcVm3lAV3HQbtDegp3crFToeLuOFaL9O049ogb5E1hfQNXPCYBuW6+G1XhpGSl9VSdSazDHzL0ZtTXEl4VndzSQQGa0H1oFICONpzNQyRg70l5dpeXSCHSqpoOAjmi/fmk6nSxkLlcV5ukNwCjqFeztqQX4UgcseaKNvnQ60zWom1X6gBqVw5RllSOuR68DsTrpDnTtJKeH3JjK05UKKsa5Z3w24CGIGLRL9toiSlhhjPJEV6P0NuxZ6BymZ9W1pr0RyVOLLWL30eQXmEXUKSECNl3sIwyndOr0fXkggimk0Ixp1edYmnXp9ppWAFuHnDWnS7ecFptyx6kA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=fohj8oxs07B3GUFQUGtigb2kQ/2TL57/WBk5cWS5Vxg=;
 b=pGBFnUSFO3FXHP2bDr6BLEYMDcBIDG5xPUhpeKc5lBlcVjGTIv3mA7mGn7fSRHFdYqn/xBJ9JysbEbDPrxnOrazr2dJsjDgdycc9y8SCewdD3OSe2eesDWY00rBQjFRkmoQJTwDBFo+CTyrpHLZYH1ESWDsSL5G24ImyHpHvczM=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by PH7PR12MB5736.namprd12.prod.outlook.com (2603:10b6:510:1e3::19) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.28; Mon, 24 Jun
 2024 15:51:23 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 15:51:23 +0000
Message-ID: <aba901a8-4d7d-4f2e-9656-7d6b6a1bc4d2@amd.com>
Date: Mon, 24 Jun 2024 10:51:21 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 4/9] cxl/pci: Map CXL PCIe ports' RAS registers
Content-Language: en-US
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, ming4.li@intel.com,
 vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-5-terry.bowman@amd.com>
 <20240620134626.00004dc4@Huawei.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20240620134626.00004dc4@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA0PR11CA0056.namprd11.prod.outlook.com
 (2603:10b6:806:d0::31) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|PH7PR12MB5736:EE_
X-MS-Office365-Filtering-Correlation-Id: 4a1230a5-8612-48f9-d0d6-08dc94657f9b
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|366013|7416011|376011|1800799021;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?VGwwcFlQU2VRck9lbVdkSWViamUvbDNsdzc0QjhLTGdsbFVqWHhVclJjczRV?=
 =?utf-8?B?TlNpS2ZyZ0c4ZEtuMisvQ29FcHZLVHhKc2VvbWJuL1VPaG1GQ2dYR3ZYQW9O?=
 =?utf-8?B?UkphVDBmbThqajFDMTZWdGdocm15djllSmEzZmxDNk9WSEY3aStuR3dJMEZj?=
 =?utf-8?B?MEFyYWJiY0tBVUVZVzhVU3FsZ0NhTVBBeEkyTEU1bmYxR0lkVXpVZktRTjdv?=
 =?utf-8?B?SzZNYWhoOHpWUnIwaWFTdWJnb2RzNmdqZEZ4Nlk2Ni85YTVGQlRMbEIyQ3Y3?=
 =?utf-8?B?cm5zODA5dVBCNlNSQTFJNXcvN1ZvWndkcEJYYTJGSDQxczRVWUI2eG5WU0tw?=
 =?utf-8?B?U0ZHZkxqOHREanFOR0lSY0wvbU8zQUlBeFR0SFp1dEJ1UXhIZ0lYZnFpMytN?=
 =?utf-8?B?OWNZbWx5Vk1sUnpMbHluVzBmN2d6UjNid3htZmJ2N0QyWXFjY0F6LzBwKzF2?=
 =?utf-8?B?VCtvNlJyWWRoK2tZRjlwMUJlSmNhYm1GUFZzSzkrS0FZK1ppVWFPS0tDcXhE?=
 =?utf-8?B?MVUzVTlYaFhGbWYwWWRKb2lFSTcvOGJ5MEhDZTN3R3U4a084elArY3pmMCsv?=
 =?utf-8?B?WG42Yzk0Y2xQV1NQc2pGbWpob3N2anExeVJEd0ZiRElENjNHVGRLM2hEb1JH?=
 =?utf-8?B?ZjFxSWlrZXZaUVZHWCtvYWNqSVM0QmlCdk5CbmNLL3BlU3BSdXVkQS9rZngw?=
 =?utf-8?B?L1hWdThlNEo5cndjNU5EdlpSWVRTV0FDaUtwNG5wczIrZFRrM2k3NGNQV3pl?=
 =?utf-8?B?eUxwMHNhY3NFNFRyR2owaWhiMlZ4L2hHcExKWG10UFFDcWt4MERZZ1BmNmtz?=
 =?utf-8?B?anhtUk1nUmljUGNyL2ZhRVBSbFY0S1dSbHQ2Tmp5Wk5nek1YM1BIZ3RLbEZ1?=
 =?utf-8?B?aGl3VG82ZUpxcy9LdGx6U2lGOHNtVDJrem1yeEhSQjkySXBFcDJWQll3bENW?=
 =?utf-8?B?QWVnOEEvU1BSVnZLeEk4YU9uMHNnZWM1V1ZsZG1IZ093K08xdURvdEN6OEx5?=
 =?utf-8?B?bUtqbE5EUWxBNU51QzBKVzEvTXhXbEJVUHYrV0dGZlZmQ1BqMWUxeXQxY1o2?=
 =?utf-8?B?dDJoeThRMTBjK2pqTy93OWJkZ01US1FhVm01b1JLbmpBRnN4WTkvcThMRlpT?=
 =?utf-8?B?V3BvTGJQQXBKUGtuUFdtTXdUS2N4WGEvR1B6V3poWFNSSUJueXJ6bnRaVzNX?=
 =?utf-8?B?QXlYOXE2aHpsTG9SYkdNTWxDTzB4aXpmU3ZHeDB6Vy9vWFBxdFI2eGVaRENC?=
 =?utf-8?B?VEdLQWFXL0ZlN0xQTmQ3cTVsc2hBckQ5c0haRmxNWlFzLzRTWHlPNlJtYklS?=
 =?utf-8?B?S3VkWVhQcW8vVlQ5c0JUVnI0a0FXZy9OOGhuVWU0ZzFQNzlvbEJpZWpFTmNx?=
 =?utf-8?B?Z2dXaXNnL3VOU21rYnBaOThGeE9TSFoxbTBhL3pMNnhCUy90Q2poUW1XVmJi?=
 =?utf-8?B?NE5mWkZRMm5PZWxkeWVuMmZ5bmk4NitPbUJ1cDhIYmpmTWFNMEdvZ3F4YzVC?=
 =?utf-8?B?K0I3TnEzRTJEYUp0TVlCNlJNbGhNYTZJMGtKdVJXZ2RVRVA1Mi9CYnY1Tk5l?=
 =?utf-8?B?UlNtWGxNQ2R4QVJpY1pRc012SStOME1GbGVHTkVIZkFyaVBkcitETUlrYUg2?=
 =?utf-8?B?VHFCZXBrOEgvMzBPc1BZT29pRmhkUWN0QW91NE9meVF3STRHYjVFVFFmL2hX?=
 =?utf-8?B?NG5renlwbnBYZU8rTU9IS2RqU0wwY1hQaTdZU2RZZWdvZzlJN0F5MW1xTFRZ?=
 =?utf-8?Q?6JzbB/8ubIQVFANXEvCK7zpq5wJmKTXHP+qTtQR?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(366013)(7416011)(376011)(1800799021);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?Y2cxUC9reTNHZGhVK1FyMmo2Q0ZjZ1k2VDJRcGx3Z1lVV09BVGN2bE9mVVlF?=
 =?utf-8?B?Z1ZvUEE2Mmc5UWZsR1V3ZUlPaDFtS3c5SFR5alFiVjNIVjFaRGZja3gxNVJ4?=
 =?utf-8?B?V242bW1kWlArU25ETnI0NXBpNEVnalFoNzR1N1VnY3NvNlpZUVdkR3NjbjZR?=
 =?utf-8?B?dGZKSlhodW1mTVQ1YlhtMlMxckQrby9MUzB2bVRHc2FyWGNmUzNGMWwvUkFj?=
 =?utf-8?B?NFNjNGR6bm4vQ3NUcVVTR09vMVAwMHVFK1BpRk9oTHJRWEkzVVN6Wm5JUzNx?=
 =?utf-8?B?bDRyZVBNeWxLYjNHb0FRekVSSVBjSWc1MlRncmd3ckhDSHV6dnlqYzJwTHhj?=
 =?utf-8?B?RndRL1hPb3ZWTWtOK0hQbnlWb3dWbnYwWkVHV1czeGFTelhpY1lGM213V29I?=
 =?utf-8?B?ZjllWHZaeGtlSjBzRDVlQllIMHlYb0gzcnlxcmlmQlVOcTdsamFRZ0pybzZI?=
 =?utf-8?B?YlZkVlUzam55NTFUMFpHWFhVdXpzMEVkZEYxSCtGbjRZaEFoTFA3V0E4N01p?=
 =?utf-8?B?dFczS1VhRWdSSEpnL3RIdUUvNnYzN1pEd3NNejNzWWpDNGpMU2htMXh5SHV4?=
 =?utf-8?B?eGc0cWhKK3lldnlWUmJ6UC9IZ1R2NTlOZFJ2d2hBT2pPU3JZUEFnaERVRjN2?=
 =?utf-8?B?Q3d5bVMyTndTTE1XMDNPS3BOYkNndnhKMnRIKzgzb2Q5WWJDem1jS2szaTRj?=
 =?utf-8?B?Ukxqc1pDNHFoSTRjK04yVjFtV2lRL1FkYmluSGFxV2J0RHNUa1lBU2FwMTJ1?=
 =?utf-8?B?NnVxb01iYS9ZRkRydlh5ZGo2MWd4TUZiZlhtUC9CNTRpRGRqYVd3cW84cGdC?=
 =?utf-8?B?N0hVbW43STY4VmFlRGk0bm0rMDkwTlFTNHZZRXhHM1lGMU4wQ2xmKzdDOFpm?=
 =?utf-8?B?a0QrSDkwS3k5dGFGZ0RjTmswZXFWWEZhN2ZrMXVSUEQ2eXV6V0VCaXVYM3BI?=
 =?utf-8?B?RDFMbXFUZERFOTBXWStSUFFYYTllRHRvT1BsWXFDWmw1dDhyVEFiT3N1VjE4?=
 =?utf-8?B?b2VWVmM5NzNyajgzeHdlcHRLeHRYR0RHM204RGZsUFZvRTJqUW9iYk5xaEp4?=
 =?utf-8?B?OEkwRXhBdy80UUJMMEF0ZG9DZ3RKUVUrUld5K1pwYjQwR2x0WG10cFdwWVhR?=
 =?utf-8?B?b3VwTjFWbW01UElJTHJvQ0Nkbk5NSklrWVZ6anZJejR5MlNFOTdEREJhTmo4?=
 =?utf-8?B?dUY3S3ZTbUJiOSswcE55c1RnV1pXa1ZzSGFFQ3ExeE5ERnZiQmZGTml3UElS?=
 =?utf-8?B?N085eGVtRmduOVFMLzREVkNFKzlXS3plZkkzdERzSTAyL2s2OHI1S2JYT3Z0?=
 =?utf-8?B?WmRZMXhMTytuakI2NFpiTmJWMjlKUkovQ0JzcnIwM3lPZVBBUEE2TlF0elRr?=
 =?utf-8?B?cExIL0p6RkUvYjJnMkFvdDRmSWREWHdmVU4zK254VlMvb0F4eWw3MGFLTHQw?=
 =?utf-8?B?a3BRWFRNTW5yZlM0TitvVG5nbWRsU3pSUkdabUsrZ2lrT2krVTN0S1VpNW5a?=
 =?utf-8?B?SW93MHpWK3lBZGtna040Q0hRYVkvMHkxVUg0cDZyMHQ0UUlxS2Zic2YvcTJE?=
 =?utf-8?B?WUxrS2d5bDNvN0Uwelk0TmVhYkdKMVlPUFViUzU3ZUZaMnlWT1ZJMVg0b2Zh?=
 =?utf-8?B?M2pnWFBWRUZuRE1xRCtsNDdWNFlmZkdaM1dxT2VIZzdESGNJeWFjNkNEQ0dV?=
 =?utf-8?B?VzFhcFk0VWRNWVdqZC9kRjExRktvc1pGaFRxSEZzbi9MNXp1VHRlM1JuNnEw?=
 =?utf-8?B?alhYYUxiUmlWeWF4NGpDQy9Vb0hzakZzRDgybUhQTkhFMk8zaGhsSzFFMmlG?=
 =?utf-8?B?Mm5NbjhvSHFVcGZNOVo3SURYam5pT2JYRnRBQ1QwRFdsMGF1b1hYWFVoU3FC?=
 =?utf-8?B?bXByUko3bmlrYitUckNHaXpTVGlJQzd2VFF5RXRYbGd4MFVtQXlOL1ZZb1JR?=
 =?utf-8?B?MFN6NVphd0tlaVVTZXlCUkpJZDZBN3E5Wk5IbkFoS2pOQTJsRnZkMWE1VkM1?=
 =?utf-8?B?M1Jra201RENuUWs2bUdpZCtNNTBUR3RidlA1anVFSzg5WW84N0gxM1h2dU4v?=
 =?utf-8?B?d0VVMFZwZTU2L2RaOVI1UjEvOUN3bHRZSXV4MWNraHlnQkVnbVRQbmV4OGhh?=
 =?utf-8?Q?BtQJNEyoHDgCPso+a2p2YwBmj?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 4a1230a5-8612-48f9-d0d6-08dc94657f9b
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 15:51:23.4535
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: KLlPm3DLb35fVLjqLgjKJrYeVkVjNANv8RO9THdPM8+vu4Ad2hcq8U4Q4BpHUa84ajlMcaJcNcoVvQ3feC++hQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH7PR12MB5736

Hi Jonathan,

I added responses inline below.

On 6/20/24 07:46, Jonathan Cameron wrote:
> On Mon, 17 Jun 2024 15:04:06 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
> 
>> RAS registers are not currently mapped for CXL root ports, CXL downstream
>> switch ports, and CXL upstream switch ports. Update the driver to map the
>> ports' RAS registers in preparation for RAS logging and handling to be
>> added in the future.
>>
>> Add a 'struct cxl_regs' variable to 'struct cxl_port'. This will be used
>> to store a pointer to the upstream port's mapped RAS registers.
>>
>> Invoke the RAS mapping logic from the CXL memory device probe routine
>> after the endpoint is added. This ensures the ports have completed
>> training and the RAS registers are present in CXL.cachemem.
>>
>> Refactor the cxl_dport_map_regs() function to support mapping the CXL
>> PCIe ports. Also, check for previously mapped registers in the topology
>> including CXL switch. Endpoints under a CXL switch share a CXL root port
>> and will be iterated for each endpoint. Only map once.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Hi Terry,
> 
> A few minor comments inline.
> 
> Thanks,
> 
> Jonathan
> 
>> ---
>>  drivers/cxl/core/pci.c | 30 +++++++++++++++++++++++++-----
>>  drivers/cxl/cxl.h      |  5 +++++
>>  drivers/cxl/mem.c      | 32 ++++++++++++++++++++++++++++++--
>>  3 files changed, 60 insertions(+), 7 deletions(-)
>>
>> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
>> index 0df09bd79408..e6c91b3dfccf 100644
>> --- a/drivers/cxl/core/pci.c
>> +++ b/drivers/cxl/core/pci.c
>> @@ -787,16 +787,26 @@ static void cxl_dport_map_rch_aer(struct cxl_dport *dport)
>>  	dport->regs.dport_aer = dport_aer;
>>  }
>>  
>> -static void cxl_dport_map_regs(struct cxl_dport *dport)
>> +static void cxl_port_map_regs(struct device *dev,
>> +			      struct cxl_register_map *map,
>> +			      struct cxl_regs *regs)
>>  {
>> -	struct cxl_register_map *map = &dport->reg_map;
>> -	struct device *dev = dport->dport_dev;
>> -
>>  	if (!map->component_map.ras.valid)
>>  		dev_dbg(dev, "RAS registers not found\n");
> 
> Maybe return here as nothing useful is going to occur after this any more.
> 

Ok

>> -	else if (cxl_map_component_regs(map, &dport->regs.component,
>> +	else if (regs->ras)
>> +		dev_dbg(dev, "RAS registers already initialized\n");
> 
> likewise, return if this condition happened.
> 
Ok

>> +	else if (cxl_map_component_regs(map, &regs->component,
>>  					BIT(CXL_CM_CAP_CAP_ID_RAS)))
>>  		dev_dbg(dev, "Failed to map RAS capability.\n");
>> +}
>> +
>> +static void cxl_dport_map_regs(struct cxl_dport *dport)
>> +{
>> +	struct cxl_register_map *map = &dport->reg_map;
>> +	struct cxl_regs *regs = &dport->regs;
>> +	struct device *dev = dport->dport_dev;
>> +
>> +	cxl_port_map_regs(dev, map, regs);
>>  
>>  	if (dport->rch)
>>  		cxl_dport_map_rch_aer(dport);
>> @@ -831,6 +841,16 @@ static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
>>  	}
>>  }
>>  
>> +void cxl_setup_parent_uport(struct device *host, struct cxl_port *port)
>> +{
>> +	struct cxl_register_map *map = &port->reg_map;
>> +	struct cxl_regs *regs = &port->regs;
>> +	struct device *uport_dev = port->uport_dev;
>> +
>> +	cxl_port_map_regs(uport_dev, map, regs);
> 
> Maybe it will be used later, but based on this patch alone.
> 	cxl_port_map_regs(port->uport_dev, &port->reg_map,
> 			  &port->regs);
>> is more compact and I don't think looses anything on readability front.
> 
> 
Good point.

>> +}
>> +EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_uport, CXL);
>> +
>>  void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport)
>>  {
>>  	struct device *dport_dev = dport->dport_dev;
>> diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
>> index 036d17db68e0..7cee678fdb75 100644
>> --- a/drivers/cxl/cxl.h
>> +++ b/drivers/cxl/cxl.h
>> @@ -587,6 +587,7 @@ struct cxl_dax_region {
>>   * @parent_dport: dport that points to this port in the parent
>>   * @decoder_ida: allocator for decoder ids
>>   * @reg_map: component and ras register mapping parameters
>> + * @regs: mapped component registers
>>   * @nr_dports: number of entries in @dports
>>   * @hdm_end: track last allocated HDM decoder instance for allocation ordering
>>   * @commit_end: cursor to track highest committed decoder for commit ordering
>> @@ -607,6 +608,7 @@ struct cxl_port {
>>  	struct cxl_dport *parent_dport;
>>  	struct ida decoder_ida;
>>  	struct cxl_register_map reg_map;
>> +	struct cxl_regs regs;
> 
> Does mapping the whole cxl_regs in make sense?
> At least currently we can't use the pmu regs in there from here
> for instance - the mess with interrupts means that has to bind
> via the port driver (for now anyway).
> Maybe struct cxl_component_regs is more appropriate here?
> 
> 
Only the RAS is mapped. But, as you point out this can be changed to 
be cxl_component_regs and it will be more precise in how it's used.

>>  	int nr_dports;
>>  	int hdm_end;
>>  	int commit_end;
>> @@ -757,9 +759,12 @@ struct cxl_dport *devm_cxl_add_rch_dport(struct cxl_port *port,
>>  
>>  #ifdef CONFIG_PCIEAER_CXL
>>  void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport);
>> +void cxl_setup_parent_uport(struct device *host, struct cxl_port *port);
>>  #else
>>  static inline void cxl_setup_parent_dport(struct device *host,
>>  					  struct cxl_dport *dport) { }
>> +static inline void cxl_setup_parent_uport(struct device *host,
>> +					  struct cxl_port *port) { }
>>  #endif
>>  
>>  struct cxl_decoder *to_cxl_decoder(struct device *dev);
>> diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
>> index 0c79d9ce877c..51a4641fc9a6 100644
>> --- a/drivers/cxl/mem.c
>> +++ b/drivers/cxl/mem.c
>> @@ -45,10 +45,39 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
>>  	return 0;
>>  }
>>  
>> +static bool cxl_dev_is_pci_type(struct device *dev, u32 pcie_type)
> Naming perhaps needs work to make it clear this is checking if
> it's a CXL device of that type.
> Also, seems like general functionality that belongs in core/pci.c or
> similar.

Any suggestions on what to use for the rename?

Regards,
Terry

> 
>> +{
>> +	struct pci_dev *pdev;
>> +
>> +	if (!dev_is_pci(dev))
>> +		return false;
>> +
>> +	pdev = to_pci_dev(dev);
>> +	if (pci_pcie_type(pdev) != pcie_type)
>> +		return false;
>> +
>> +	return pci_find_dvsec_capability(pdev, PCI_DVSEC_VENDOR_ID_CXL,
>> +					 CXL_DVSEC_REG_LOCATOR);
>> +}
>> +
>> +static void cxl_setup_ep_parent_ports(struct cxl_ep *ep, struct device *host)
>> +{
>> +	struct cxl_dport *dport = ep->dport;
>> +
>> +	if (cxl_dev_is_pci_type(dport->dport_dev, PCI_EXP_TYPE_DOWNSTREAM) ||
>> +	    cxl_dev_is_pci_type(dport->dport_dev, PCI_EXP_TYPE_ROOT_PORT))
>> +		cxl_setup_parent_dport(host, ep->dport);
>> +
>> +	if (cxl_dev_is_pci_type(dport->port->uport_dev, PCI_EXP_TYPE_UPSTREAM))
>> +		cxl_setup_parent_uport(host, ep->dport->port);
>> +}
>> +
>>  static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
>>  				 struct cxl_dport *parent_dport)
>>  {
>>  	struct cxl_port *parent_port = parent_dport->port;
>> +	struct cxl_dev_state *cxlds = cxlmd->cxlds;
>> +	struct pci_dev *pdev = to_pci_dev(cxlds->dev);
>>  	struct cxl_port *endpoint, *iter, *down;
>>  	int rc;
>>  
>> @@ -62,6 +91,7 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
>>  
>>  		ep = cxl_ep_load(iter, cxlmd);
>>  		ep->next = down;
>> +		cxl_setup_ep_parent_ports(ep, &pdev->dev);
>>  	}
>>  
>>  	/* Note: endpoint port component registers are derived from @cxlds */
>> @@ -157,8 +187,6 @@ static int cxl_mem_probe(struct device *dev)
>>  	else
>>  		endpoint_parent = &parent_port->dev;
>>  
>> -	cxl_setup_parent_dport(dev, dport);
>> -
>>  	device_lock(endpoint_parent);
>>  	if (!endpoint_parent->driver) {
>>  		dev_err(dev, "CXL port topology %s not enabled\n",
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-BN8-obe.outbound.protection.outlook.com (mail-bn8nam11on2046.outbound.protection.outlook.com [40.107.236.46])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 848541DFEA;
	Mon, 24 Jun 2024 15:22:55 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.236.46
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719242577; cv=fail; b=tYEaWsosyO2NtBSmsaxd29E4yVSR/oubAJLczGvMj8mj8L/bfR2cr35vzr3cH7F/Zo3n3b7auwQtKSorxHzos6W6ybuslSwf/WWqBbONxL7virr/KTood95Bg+wGxn9KbwoZwKeMspGflwJfeI09A7OwCvI1hn8DK1PPbDGJISI=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719242577; c=relaxed/simple;
	bh=BTNlOLJkw9YgeD9z/5u1sPt8SexFBx3Sxh7kVEFuIHY=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=gFFommu8VxcK576MksMKBWqtHh0rAaZ621EgwCaCGsqJm36qt3ZYD9qFO0YcwpKq6FH/LAH/o4QBbFRbCf9WVKYLonxBt75JW0ElsuFI/Uoz3m2RMwQ/CkDwECQPu7sQD8T4eO2zr8junZvS86lvYFYy0J52mzMz11kSiIbHMpk=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=aBAAH+9I; arc=fail smtp.client-ip=40.107.236.46
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="aBAAH+9I"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=APiMACboyJWXmZZSosMrzsmVbLhbcSWzVEzAQZS6suhOZg2WZ3PcRQGoXpb5uBc38qHpDvoIYSbKnAS8pttUcRejd0chSACZu6QY9B3W6TU378JPwFZkDmN4x7RrZ1vUK9aeRoCKQKmfMCrsJA/kLJ0KgDalrvWzZ5S59iN87vbitqhP2Umj8xvuFEHB5DmzeGdB0LDNGIP3I0VbIoR65XTcdQK3TIfeUxdQ6InfmEoa33GuILdxkwzeHUc2VNKzn7dBKEjMW578kDohb74Fy4rfTMsbilwVJuNBHHGG3id6gLJUdGb5oSNTKXLQMwjJLgqK4/n3qANrZZ8F+t+2fw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=b6E1T8Brlrb973radwGIqgDogrOQPYO4IuAf/TvnIO0=;
 b=IBH1hYAedHk43yJNuHOFx/vuMgnb6JmQhEDL+568IVsstpr2hjfQwSQdJj6WfMsASE0FfmmKe+FmKEboDPa/KtX+bLEdP/Es+OPFRyldf37Koe31w9AOoU/vOz2X/LXikqmNuzzgIL3RJJU6T4wWBgYSkk3waqvrynVxUttpTCz25ODDaH8CHfvHiUhhSM9lj/U82xZeayBguJGIyPsLCEV23mritxJQogWdwaxM4spxyFBGM3EQ/CnxWIxpELP/yNitzjF4k/N/viuwmyqlhpTThhRp2R6fYE76S2c41khy6/8GyLhcqxEguqemsxiM2w7N79oiFaiep3/W2tPalQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=b6E1T8Brlrb973radwGIqgDogrOQPYO4IuAf/TvnIO0=;
 b=aBAAH+9Iuo7xpO7XKvJ/90UShHgxqF2dMkAtQ3dnpwh6WaECMIzWS923jM10Ah+U8jzR9i17JqlgAJxcDljhDgfe5nxQUKWV9GW1y3c2niy8c//m2DqJ3o8cIcKtIE+JH7OZ9A1XP/62JXRMrPhqIh6Fcg3wpHoOvunbXhF4pCg=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by BY5PR12MB4033.namprd12.prod.outlook.com (2603:10b6:a03:213::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.29; Mon, 24 Jun
 2024 15:22:50 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 15:22:49 +0000
Message-ID: <9f748365-06f5-44f9-865a-d076b110bb33@amd.com>
Date: Mon, 24 Jun 2024 10:22:46 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 3/9] PCI/portdrv: Update portdrv with an atomic
 notifier for reporting AER internal errors
Content-Language: en-US
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, ming4.li@intel.com,
 vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
 Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-4-terry.bowman@amd.com>
 <20240620133027.000047e1@Huawei.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20240620133027.000047e1@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA1PR05CA0016.namprd05.prod.outlook.com
 (2603:10b6:806:2d2::25) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|BY5PR12MB4033:EE_
X-MS-Office365-Filtering-Correlation-Id: b1ccd1ae-2851-4652-8013-08dc946181cf
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|366013|376011|7416011|1800799021;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?TDNZMVJwczNOdjlOMnhVRmZ0MWMzRHp4bVYwMjBrMW1uOUpwZFh6WWVkKzFu?=
 =?utf-8?B?eVFLaHNaYmVSRTE4MWJ0TGtZLzlTMExwZlhkbkN4bjQ1VFJTUVQ3eFVYQjhj?=
 =?utf-8?B?U3RrSno2MjQ5TWdHQ095YXNmVmUxV0JmbGlsZ0Q0cUtNcW9aSmpQaTBwY2R1?=
 =?utf-8?B?a20wOVFMN2VEeGFockZRd0UrZ3pVM2hSTVcxV2pTSEpqY0YyOVFPekMrNnEz?=
 =?utf-8?B?VkNyVHNwYnFCenNjZjhPaUdEWHFOV2Y2bHpDVDZFUWh0OGRhdkVteHNIM0JD?=
 =?utf-8?B?aUQ0Qlo4bCs0RHdOczFQb0pxMUljODBHKzQrUDNxdjdOeEUyQ28xdVVFZFpx?=
 =?utf-8?B?WkFGN3k3STljMXpVY0xKb1BSL2RNRGpKRk1ldFVIQUNpN3MrVG9KYnBWK2FU?=
 =?utf-8?B?ejh0bm42enM2cGxHMmVqYURZL2JkSkVTZzM0eExhY3NXUit4NVJYNTYvbkNt?=
 =?utf-8?B?VWpWRHpYakREVERPazZOelg4RW5Ec04rVGIxcWN3K2Z4WWgxeWFqcjYrczB3?=
 =?utf-8?B?UCtiTkZaazdDbkJmTG92bzJXeFJZTjQ4cUUzK2JNdTVrTkdYSnVnS3BoUDM5?=
 =?utf-8?B?T0d2RVJiU1llMWpVREFYYUpCS1NPaHc2Um83Z0Fla05kU3lZMFJwUG85S2p4?=
 =?utf-8?B?OURsNWhrVE1UVGVpUDF2K2hTV2Q1NkxiMHZCMHdKSXJyUUFQenRScm9mSHhC?=
 =?utf-8?B?ZkUrNnlDdmQ5Zkt6MFRyNlg2Zk1KTllYNUpHSzZPTlNLYTQzdlVLSUJlOGhv?=
 =?utf-8?B?RCsrcXZORnJtSzNtS3Y3Y1huMU1ETXNTTmtzaDFZSkZHeEhITGw2UVE5bWtT?=
 =?utf-8?B?Rk9EaDZZSnBOYXU4WUo1ai8ybVd1eVMzaVM3UUN3VHlZRjBlNTRKUVZBS0VC?=
 =?utf-8?B?YVk4YklHMkxpVTc4OFFvZzY2bFp0aVA2S0NyOVVHbDJFT3RSQWN0TjZsSG1n?=
 =?utf-8?B?cXJNeXVMTmo3b1hkSXF1L0pIcXJkSHpEeml0ZGJzcWVjZkRhT0UxenhpOGZz?=
 =?utf-8?B?UFVyWWdCTzdrVzl6Y08xeGhlRGQ3cFBWSXFxSzZYY09takdWWUhYM2NvS3BR?=
 =?utf-8?B?VkxIWXZhcFlUSjRpVUFIOXF5RGRENTQwdTNmRTZzU3RUOHQvOWUzM0NiRFRw?=
 =?utf-8?B?Q1A1THFrcVE0WEJvS0hIbnkvS0pOU1U4MVJWTmtIN2NEMVRadm5HZG5XSlpv?=
 =?utf-8?B?THdJcjhuZFV6eW1ZWGtoM0E4RlBUWXduQlN2amMyWjRzMyswRjNKL3preWw4?=
 =?utf-8?B?eHY1R09rV2lWMmNzN2tlKytDL0c5RjR6OEVKeDVzRDk1eEFkdG15aVJsc0ox?=
 =?utf-8?B?bWdXNDVKaDhVVnBhREpzRDNUM3hHRzRjbFIxY21LZ2x6c2ZjNG9JZ0NoSExV?=
 =?utf-8?B?SzhobXZkSWM3c1lHNlpsQml5WWE1YVZYUzErcjQ2MVVlVzY4N3Z1N1BlbnNL?=
 =?utf-8?B?R2NjUllUMW4zWXFNcGlvL21ZTXkwZU1Rd3M1SDlNQU54QUN1LzFGNWhBSUgw?=
 =?utf-8?B?aTY2Q3NETVF1b0Q5cUJoMGV2b2VmRDFKQXNJbFRwSlJWYXZxZ2VjK3JyYWhq?=
 =?utf-8?B?UW9ja2p2K2wwNm10VlQycTR6R29wR05xd0czZ0lqdFl1LzlOMk16ZDFYZmRD?=
 =?utf-8?B?VXl1VTJIbGxkTFlMb3pORE5tNEFKSnplR1k3ek9MK1Z2NTBCTXpJZUxLeE51?=
 =?utf-8?B?cHFOeVBNa2hZSWlJQW04WjZxS0ZuSWg3aHI3WG5KNndPVUFDa3BISkNxdTE4?=
 =?utf-8?Q?G5GrmTHn3PXD4TZbXAXTZay8FEMJXHHIc5iytPK?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(366013)(376011)(7416011)(1800799021);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?WC9QbVQ3TFM2Q1d1dFlmN2djM214ZTdlNG9JYTY4MEpDRUc1UWdmYVp3RjhC?=
 =?utf-8?B?Q29HdEF5VVNEVnFnZmVFaE5Ka0ppSTdRVjZGT1NLeHdhZ1ZMcUllek1BUHlr?=
 =?utf-8?B?WUNLR3V3YXRQYjkwM1MzTk12bXhWNitZdHRkaHdubURiK1M2UjB5cmVrUGRl?=
 =?utf-8?B?MU5KTXlzdk80UlN5anZPTzY1SnNrUmpoOVpLbGFaQlRZN3U1STZCNHdVaDYy?=
 =?utf-8?B?ZXY0dFhjNlVaUDNmT25RMnBIN3VUT1htL1ZOS3RwVEpWT2dQMEpCbGpQY2k2?=
 =?utf-8?B?OWNzZjA3RjQxdkI4clUzc2dQSytONHhkaHpuTUZIdGFqYVhJQ21sbm9MUnRU?=
 =?utf-8?B?dXVvS0NDYUhPNDBCSURJeEpjeUV5cm5WNUh4SEFLM1laZGJpRjJhck85Y3ZE?=
 =?utf-8?B?d2RjdmtNc2lyeDBOL01tMmQ5TVJqd1hvYWxnaFFnTWEyaHI2U0hKcjVsNnJj?=
 =?utf-8?B?bkx4RXVMWDBycUhLOC9UdEpFaG9YMFA2R2RqVnBxUHNTM2JIY1pwNWZ0ZHps?=
 =?utf-8?B?WWE5WS9yTlJrMXI4VTRwR2c0a1hxTmdid3dYTW9HNTY4NzVQdlhmUGI3TDZz?=
 =?utf-8?B?YytVSHlXclZLYTdCSm5FS1BvYXg4VnR3ME9yY3Y2NDJJWTRzU2JWYjFqT2Jh?=
 =?utf-8?B?Y1FGS2VNRExUc0xkbW51Sk9UeVF6QnV4U1JlL1RLNjVwbTdyN0s2UXdvU0ZP?=
 =?utf-8?B?eEJUSVdpNGhUR0lHUHFadFJCOUxNN0JEUTc4QXluRkU2dExRejQwd0FjODdC?=
 =?utf-8?B?elViaCtOYTZmWGhnR1Y5NENDd2JaOWo0QittR2lob3FjVGw1a3ZEdERnZFdM?=
 =?utf-8?B?cDJKZWFwQWtDdjBoZjg4OGwwVFp6MlhqcTZCRWFYVi9ONDJhNXJpaExYRGQx?=
 =?utf-8?B?L0JXSkJjYTloaE5QM1g0OWd4MEJWWXNVN1NUT1RaTW53dkY3R2JsdXNPeEFJ?=
 =?utf-8?B?dEN4ZGJQU3hmamhIZVFaUlQrdFhqOFlXdTN0bDRIR1JsRGl5MVpEZkw3MGNQ?=
 =?utf-8?B?MnRHTEZDckxCcDBHbnhUZTM4M3dLaGdHbzE2cmt2b1hwNkVLVG5RUnREZ0Zv?=
 =?utf-8?B?c1pDMEFMUEozK3FmMzhjcGFOenJiVG1OK1o2dVVYNUZ3aGZSaGYvL0plUjMv?=
 =?utf-8?B?eHNHTGE1VUtubTdHKytyS2x4dndFUVE5MXc0VGZ0MlcvMDRDd290a3d4TldO?=
 =?utf-8?B?WS9KQmMzWmlXcEtSTytFc1BTTkVXUEJNNFF6OE5nVzBydkdadFVueUo2NTdY?=
 =?utf-8?B?R3J2cDhkL04yNWdIZVBaSEtIYU5jd3F5eWt1UDVmYTNxTTN1QUIzc0NyMFpL?=
 =?utf-8?B?VnA3T3ZLb3ZvNmVGQ0RGOXZRejlGTjZOYldCVHJFZUFqMEZQRnhoaTI5bFlY?=
 =?utf-8?B?UG9OTmpRY2hwejhhT0RyWGNVd2lKazVtOTB0V3gvRDFRKzhjRCtrVExyZWR4?=
 =?utf-8?B?TFZ4dVlVNlc3RGxncHBwT3pYWWt2MCt6TTU2aDlqclh6eFZsVkd2cUtKREd2?=
 =?utf-8?B?YXAzejhBRzRIaVk3cjhBdWx0ditLa2NNa3Y2VW9UMFBDNEl6cC91ZVhzUXF5?=
 =?utf-8?B?dFpzTVVGYUtnN2MxbHh5T0wwRW9hR2tabTAvWjRiMWhmekplaUlOcFM3TC9t?=
 =?utf-8?B?dmZjeWNQM1NhRi9lNE1wUzFxY2UwVVR1V1ZWOS9aL0tIRXF6ZDNjN3JoWjMr?=
 =?utf-8?B?TE9maFpaVEFPZE9EUGZxNkNUeHRwU2ZaeEVGSURraDU5Z21Eam53NkVpT2Fx?=
 =?utf-8?B?V1lRcE1Xd1k1OXZWc2RQdTVqVWU0KzZjbUl3RFdKemlZYmhNUWV0aFVETDdV?=
 =?utf-8?B?d1RMSXF2endGWDlVbnBJa1IrRkFSelpISnNRcW15N0pRKzVhOCtvcERleEdV?=
 =?utf-8?B?emZpZEF1QnNUdzdkVE8zcFNEL0ZzMEdoNlFPNzZvc0tORUlQdTB0MHQyblZH?=
 =?utf-8?B?Z1AzZlBmenhzZEJJS2Z5aWJYMk5yT2dvL3BBeFlmbEpTdGhNYU40R1FqcW1p?=
 =?utf-8?B?SkIyKzJ5UHZpSUtxQjdGSDZyUTNYRmRmNmM4SjJvQk0za2RtcGsvdDNmemFP?=
 =?utf-8?B?VE9CSndEZjlzLzVjMnFxUFVrVUp5QkkxQzY0YlRySU8raXp2KzYyY0dsZ1ZF?=
 =?utf-8?Q?KmgzucY801X3mrfbSutnlXnXe?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: b1ccd1ae-2851-4652-8013-08dc946181cf
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 15:22:49.1902
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: AjuFg6PCybshVUVUyt7mL6Imea07EkNAnrzVFCfgGK0W+IrRFstZUAQDvNCNj+9Wr79tzx4KIaDgqcRXiqktmw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: BY5PR12MB4033

Hi Jonathan,

I added responses inline below.

On 6/20/24 07:30, Jonathan Cameron wrote:
> On Mon, 17 Jun 2024 15:04:05 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
> 
>> PCIe port devices are bound to portdrv, the PCIe port bus driver. portdrv
>> does not implement an AER correctable handler (CE) but does implement the
>> AER uncorrectable error (UCE). The UCE handler is fairly straightforward
>> in that it only checks for frozen error state and returns the next step
>> for recovery accordingly.
>>
>> As a result, port devices relying on AER correctable internal errors (CIE)
>> and AER uncorrectable internal errors (UIE) will not be handled. Note,
>> the PCIe spec indicates AER CIE/UIE can be used to report implementation
>> specific errors.[1]
>>
>> CXL root ports, CXL downstream switch ports, and CXL upstream switch ports
>> are examples of devices using the AER CIE/UIE for implementation specific
>> purposes. These CXL ports use the AER interrupt and AER CIE/UIE status to
>> report CXL RAS errors.[2]
>>
>> Add an atomic notifier to portdrv's CE/UCE handlers. Use the atomic
>> notifier to report CIE/UIE errors to the registered functions. This will
>> require adding a CE handler and updating the existing UCE handler.
>>
>> For the UCE handler, the CXL spec states UIE errors should return need
>> reset: "The only method of recovering from an Uncorrectable Internal Error
>> is reset or hardware replacement."[1]
>>
>> [1] PCI6.0 - 6.2.10 Internal Errors
>> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>>              Upstream Switch Ports
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>> Cc: linux-pci@vger.kernel.org
>> ---
>>  drivers/pci/pcie/portdrv.c | 32 ++++++++++++++++++++++++++++++++
>>  drivers/pci/pcie/portdrv.h |  2 ++
>>  2 files changed, 34 insertions(+)
>>
>> diff --git a/drivers/pci/pcie/portdrv.c b/drivers/pci/pcie/portdrv.c
>> index 14a4b89a3b83..86d80e0e9606 100644
>> --- a/drivers/pci/pcie/portdrv.c
>> +++ b/drivers/pci/pcie/portdrv.c
>> @@ -37,6 +37,9 @@ struct portdrv_service_data {
>>  	u32 service;
>>  };
>>  
>> +ATOMIC_NOTIFIER_HEAD(portdrv_aer_internal_err_chain);
>> +EXPORT_SYMBOL_GPL(portdrv_aer_internal_err_chain);
> 
> Perhaps these should be per instance of the portdrv?
> I'd imagine we only want to register CXL ones on CXL ports etc
> and it's annoying to have to check at runtime for relevance
> of a particular notifier.
> 

This could be made per-instance by moving to the PCI/device drvdata. This 
would likely need a portdrv setup-init helper function to enable for a 
particular PCI device.

>> +
>>  /**
>>   * release_pcie_device - free PCI Express port service device structure
>>   * @dev: Port service device to release
>> @@ -745,11 +748,39 @@ static void pcie_portdrv_shutdown(struct pci_dev *dev)
>>  static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *dev,
>>  					pci_channel_state_t error)
>>  {
>> +	if (dev->aer_cap) {
>> +		u32 status;
>> +
>> +		pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_UNCOR_STATUS,
>> +				      &status);
>> +
>> +		if (status & PCI_ERR_UNC_INTN) {
>> +			atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
>> +						   AER_FATAL, (void *)dev);
> 
> Don't think the cast is needed as always fine to implicitly cast to and from
> void * in C.
> 

Ok.

>> +			return PCI_ERS_RESULT_NEED_RESET;
>> +		}
>> +	}
>> +
>>  	if (error == pci_channel_io_frozen)
>>  		return PCI_ERS_RESULT_NEED_RESET;
>>  	return PCI_ERS_RESULT_CAN_RECOVER;
>>  }
>>  
>> +static void pcie_portdrv_cor_error_detected(struct pci_dev *dev)
>> +{
>> +	u32 status;
>> +
>> +	if (!dev->aer_cap)
>> +		return;
>> +
>> +	pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_COR_STATUS,
>> +			      &status);
>> +
>> +	if (status & PCI_ERR_COR_INTERNAL)
>> +		atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
>> +					   AER_CORRECTABLE, (void *)dev);
> 
> No need for the cast.
> 

Ok

Regards,
Terry

>> +}
>> +
>>  static pci_ers_result_t pcie_portdrv_slot_reset(struct pci_dev *dev)
>>  {
>>  	size_t off = offsetof(struct pcie_port_service_driver, slot_reset);
>> @@ -780,6 +811,7 @@ static const struct pci_device_id port_pci_ids[] = {
>>  
>>  static const struct pci_error_handlers pcie_portdrv_err_handler = {
>>  	.error_detected = pcie_portdrv_error_detected,
>> +	.cor_error_detected = pcie_portdrv_cor_error_detected,
>>  	.slot_reset = pcie_portdrv_slot_reset,
>>  	.mmio_enabled = pcie_portdrv_mmio_enabled,
>>  };
>> diff --git a/drivers/pci/pcie/portdrv.h b/drivers/pci/pcie/portdrv.h
>> index 12c89ea0313b..8a39197f0203 100644
>> --- a/drivers/pci/pcie/portdrv.h
>> +++ b/drivers/pci/pcie/portdrv.h
>> @@ -121,4 +121,6 @@ static inline void pcie_pme_interrupt_enable(struct pci_dev *dev, bool en) {}
>>  #endif /* !CONFIG_PCIE_PME */
>>  
>>  struct device *pcie_port_find_device(struct pci_dev *dev, u32 service);
>> +
>> +extern struct atomic_notifier_head portdrv_aer_internal_err_chain;
>>  #endif /* _PORTDRV_H_ */
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-DM3-obe.outbound.protection.outlook.com (mail-dm3nam02on2075.outbound.protection.outlook.com [40.107.95.75])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 7F2A119B3FB;
	Mon, 24 Jun 2024 15:08:50 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.95.75
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719241732; cv=fail; b=HcuJ6aeDiMPnys7iiwtF+Gy/PfjMRUO6ltfhhWUJNA4A6KfpzmL0fYjiZQQ9pRn2JhCsHxXypsHvDsLs5uAhs2Q/+8idyFICTEZQfRzfBNrAX+BSAP591pJlm5ZF+4l26wMCi4DBKBFwiXNyG+eQPlFbqDKnMpnwaLt0Rs4t8SY=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719241732; c=relaxed/simple;
	bh=N4V7Ry8+2/8UoR9ARw2txcFt7sHlFPowpVrjrVCoBBg=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=QLUc3aebkUNEOlxDRuEXbudjL5fl0VtqzK0ouSwnqFBpLOSIEDJTyi9Dhr1qRvG2DvIGwCSZJS37pgRdA6OGPzhxfW1ecoUvn0whiJGWSMWBItyE0jrWZf3Nyr6R3wG5vd3yK8LO8BucFv4Sj35j3VM2DuDXGaKHv5nko/2ghY0=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=V+ZUhwS0; arc=fail smtp.client-ip=40.107.95.75
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="V+ZUhwS0"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=BVm5UVV0Aom2mp/j1K5wmfaHP7Oa5M3CjWEygCicu3ASWz++MNWLDVSNI+Hw8rsLsR6s97plMW4URYAadh3WWhGCi3Zq/OUxjYyFfJdz+6Ff+tFTNYutu2pCiT24Pprc3CsQkUEZLq+lOp2AAfh61jvOFrp06GBcvl/rwaRUFQbdfR2My2cw/7vtKJrEk7aV/G0pFGFy7G6Kbhdo1EOVKeDlL55KQOjFm18RS5tx1k5MSmwVjypdklUwHbI0D4aVbndCWwJXTGAyfpJrjla94YMTPb+hn0ClP7Lhf5chPEqbVcLumpuKKF0aNkkUoWZTjrzybjONnmWKNwKNuXnOpg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=2w43dsPLy469S81lnRZr2xbFgloHlGyXHn4jq4zuW0s=;
 b=fL85HXCTwFIxHTJUGRpLTugWou5iquh2upr2Bm7FmZH9c55QrzM1Q/IqdOfYk946AyAtvtslDOb053Za16uWVIMieGLneFBWQNOD+Dx4vVgTXdy2rOiKvg+7/gjLE9A6kFjsH8qQ0zgSuyfs16EyLUM3xziVkWJrEW5Kj78FSL22XuvYFPtXRz+CLDzOWiquszhxj/lH2V4pKV2MeQXQEmu/auOdoWCq5e7RTf3X+hvSJ6jWu3A9M0er7hcYe+oiu4O0vxjqDtnUE3M2imQcPmIc3Pt3WRddLNq33rTSNjdybIqcsgA2OJjcJNRBBT0gzsOIz/rZEjJFP2qQijJe5g==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=2w43dsPLy469S81lnRZr2xbFgloHlGyXHn4jq4zuW0s=;
 b=V+ZUhwS0caXc/nSC/1Un41SPvKhUBU6SCwu9tJgzLt/t+Y4xrsja0YtJlstqsN/28kW1+3lxNbnKT136Yf8PkswaRTe6C0CnH+8fAApkjUixDbR19MQSxX1qVm0zpjnsVXzJnC3g5Ok4778p4R3MMcqehGsGi+bfDPqxfG0qiW8=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by DS7PR12MB6143.namprd12.prod.outlook.com (2603:10b6:8:99::16) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.29; Mon, 24 Jun
 2024 15:08:47 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 15:08:47 +0000
Message-ID: <f5133b75-5d71-4426-8447-b0ed391c4709@amd.com>
Date: Mon, 24 Jun 2024 10:08:44 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 2/9] PCI/AER: Call AER CE handler before clearing AER
 CE status register
Content-Language: en-US
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, ming4.li@intel.com,
 vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
 Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-3-terry.bowman@amd.com>
 <20240620123104.000029cf@Huawei.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20240620123104.000029cf@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA0PR11CA0036.namprd11.prod.outlook.com
 (2603:10b6:806:d0::11) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|DS7PR12MB6143:EE_
X-MS-Office365-Filtering-Correlation-Id: 2a1c3f2a-c926-4b7c-f44b-08dc945f8bff
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|7416011|376011|1800799021|366013;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?L2lTcEJpN092Z3BBMy9RNzRvRUJONTVyQnlESEczdk1wc01EMVFUa0FmYmNN?=
 =?utf-8?B?Vkh4NmZPSEYva05qYjliQ3JYOFUxRmhvcytnQTZRTHd2dENuOFViZ1NMN1Rp?=
 =?utf-8?B?TnBpSFRpa2E2SVg4UHZiVFhrOFJvc1R0Z2xDTlNKQjAyR1lWRkI4Q3I5YW54?=
 =?utf-8?B?S0ZtN2JUZTlTOTBsZlhkbzRwTUVjUUFOMXIra0Vjb2lRWXVUa3NycFZuQ01B?=
 =?utf-8?B?Y25oaGlFNVl5dmRGUVZRWjhMb0g4eFVLdVNtVXJUY256N1NnVHVzTjhsZ0lV?=
 =?utf-8?B?MUNQQU95ZWcxOCtLMU9yaVRRd045VG5BclpHK3VONWh2Z3ZUYW94UGxsS01n?=
 =?utf-8?B?ekU2c0J6bXlMclJ2QWxIWnRvWkZTRk8rVzltNkY1akxVQWVteXhSSjRPZ1dq?=
 =?utf-8?B?aXZuT2QvR0dyVGJQUnA5Y3VLZGc0TWk5U0hqN2gzWldEQXg5V01PTmRBYkp6?=
 =?utf-8?B?MExpMDFQaG5nM2VxVVo0ZnlvOTU0anJFR2pFMVdQcDdwM2Jkb1FRemFiOWFC?=
 =?utf-8?B?RnhvTldrZm93MUFjWnVDZUx0N3ZWenU0T1FUUzJEaWovTk05bUxucXBjZ21C?=
 =?utf-8?B?Y3BQMmtZaXJMOFRjd0ZzY2ZvUVV5RCtiRk1ZY3VIZHhBQXprKzlOSnpOd29I?=
 =?utf-8?B?eGhNVjdYMHp6YzZrdklDZzAvV2hMekR6dm5UYnFDY1d5bEJWMFgzV1BUNWRI?=
 =?utf-8?B?VCttUStmV0Rxa0phaGFSV0VuNWRLMEM4QTdCWENwdU91WURnWlZjZDMvMjEw?=
 =?utf-8?B?MHFjd0E0a2FkT2FITmZ5QVAxWThGNlZraGJiaWhLdUhhVkFYdXltVnBkZXA0?=
 =?utf-8?B?VzZva2ZrcWRVUmNvRzRETDBxSmxiajM1WnBXOU0wV0NpQ1R2MGdqL1N3SDVL?=
 =?utf-8?B?cVVWb3lIZDdCeCtQdE1qSXZhbDl0aHMzMzFzblpKMVJRVWpGZjVzQmtxODdw?=
 =?utf-8?B?dFhVT3hBYjEwb1ZYQVVCWlIzQ1dnMDh1VGV1U1pINXhjSFVTMG9EZzdYZ2Q2?=
 =?utf-8?B?b0xIUWV5YS8yemprSkh0TVY4czFVR2Evdjg0ajZJaEljVzRNVlNCWWFxRHRR?=
 =?utf-8?B?aTlWRkNidnk3amZwTC83VVhEcXRoVkl2Z1lWME1Ta3B3SWgrNWlra1AzS0Nw?=
 =?utf-8?B?cysvL3JaRnl4TEw1VWJLTXZsVUhlKzZMYWNEUUh0WWpoWERrdFAyTGZSaGdn?=
 =?utf-8?B?WjVLUWFpZ2lEUmFyRTNrdlA2R2U4Zm9kZWVraE5PR3N6R2pYSXRydmNDcGNL?=
 =?utf-8?B?OG1HNlNqSWJVL1lvQXQrNFRwSytpV3dRL3VZaldHUmVENVRucTlNeldROXhw?=
 =?utf-8?B?ZXBQQ1NXTnFtSkttdHpOSDRkdDV6SnlvcjVOSnlCUUdUa2JFQ0Fhb0RuNUtC?=
 =?utf-8?B?TFJ6dmY5ZXdldDZoaXJ6Q3MvUkZFVGxycENPa3pOZXFYZmJxNk0yZ3ZYb3FS?=
 =?utf-8?B?VzJZdDFpZUkwcE5ndHFXNG91ZmxFNjMvUnJiblZTMUc4SzFuUkk0TFI4THM3?=
 =?utf-8?B?Qm41M3ZHUXNiaHBWR21zcWw3RUs5dVpaVUh1cTVuV3BZeThtM0pQMXI4eUp3?=
 =?utf-8?B?N0toNHQzd0ZUV1htY1c2QXk0cmF4WVBKdGJRU2pMOWlzbmV6RlNMcnJTVUtt?=
 =?utf-8?B?UTVqK1lzb3k4OE84eWJ2ZlY0MldQLzY1cjhaT01tNHZsZUtScElDSjh2ZVhk?=
 =?utf-8?B?ZHJpVGlaNjVlT2oydFZBb0JtaEtremgzcDIyWkRTWmw3em1MSHpzc0Q2OG1o?=
 =?utf-8?Q?VJWm0CpCoBlLRBGIYBKLmrUFoKTItDNqB0unjdA?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(7416011)(376011)(1800799021)(366013);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?MzRPZmlUM25TNVpCTGhmeVNwRXhHb3l1UTdUamFzRHptS3U1QzBPZUtkdVJ5?=
 =?utf-8?B?MFNHOGdUVytGLzZwVmR0Y054ZU52V0I5SkQ2d2hDcWdCWnl1WVpSUWxpWjMz?=
 =?utf-8?B?VittT1ZjK0NoYllId2FoOWpMQ3VrTFZiTWpGRERYY1dlNUVkNUVXbzU4N3B0?=
 =?utf-8?B?dEN6d1VZbEhNMmRVanlPZVE5YndqRCtxSWZ3SlhZcnBBWUlpekQ0WTQ0aVZO?=
 =?utf-8?B?bTRaZUFESk5BSHFwYXU2aXBqNTdLaTVxSDJIK09Fb2kxVWpubGlKWnViY1ZO?=
 =?utf-8?B?UzFiQktzVWoyT08vNFlxYVBqeHEyeXhQVGtYWk5pbzZ0UGpnNStXNUFTdFZv?=
 =?utf-8?B?Um52UFZxdDNEUW5rY3pzQ2R4T25nVzlrYU1pZFNxU29lcHc3K2lvSGh3bkly?=
 =?utf-8?B?SzJwMVlvSFM2MVA2VXVCZXluc3l6ZDA1Q0xwUmtCMEMwUFpWODd3UXBhcnJu?=
 =?utf-8?B?ZmZqdTJQK2RhVFVhZkNTc0xTeFhDQm1kVjJjV0hiUjl4ZENRZUVMMjAyTzBV?=
 =?utf-8?B?aFdLd1FhTzVzQkFwblVFN0hLYldWZy96Uno1TDlBenplZmhTVXhjdVJrVzhD?=
 =?utf-8?B?WjBaQVozazBCVUxRNmEvc1l0eEQxSUlacjhaNWZ3cjRiT3Ywb3ZVQ253dXln?=
 =?utf-8?B?K1pUOXZnZnpqVko4bEwrTFh6NlBRcmwyRHNLV1RpU21SWWF6eW5ZMklFczdI?=
 =?utf-8?B?TW9ZZ2QwWkpHU0dkcEFwZHRDb0ZONnIwZFB0S0dKdE5tWXBwQUg2dnVVZE5j?=
 =?utf-8?B?bVFCV1hEc2ovVlRPcWJYUjBCWURNdHZxWGZuREx1dmQ4bHJ4Um9WbzZYWUEz?=
 =?utf-8?B?RFVpVloyb2x4c2JWbHZLYiszeXhEL29jUll4WjBPYmtMN2cwa1NoQ01yb1ZY?=
 =?utf-8?B?dDRiT3QxRGpKa3hIdXZnT25tZUZtbDFpajJUREp4N1hFOC9qd3NIeUNOanB5?=
 =?utf-8?B?S2dxdS9RNU81VDI1UDVXZHVxc1N1a1BDRTBjaU9WTGlkaXI0SXVIT09ZczV1?=
 =?utf-8?B?WTk0OFpEWnk3Nm55TVdVbHFab01FY1BTdnN0Y3A0dW9vQkVaVVJTQ2RPb0tz?=
 =?utf-8?B?U0FQUVpROEt0L21qeTJiekgzWXBNQXJUNXo3aDZXZmtkZTFCWFZsdkpaNG1P?=
 =?utf-8?B?SFBWMzN5TWZnU0ovMXJzRzQ1ZFgzck1meElNaVBMNm0vQVNPS0haU2R2b3Ra?=
 =?utf-8?B?VzIwZnl1SjdNcHJ5SzJhV3o0Y2E2a0RLUU9OSkpUQitGdkZzSDFtUm1NZUF1?=
 =?utf-8?B?ZVdIY0tUOEhkMzhVZmgxU0hCTWppdDBuWkRvekdiYTRNNzlpaGNtY2RSYzZs?=
 =?utf-8?B?RFJ5Nld6TXVwWmJPYXlmS0ZxYzBzSnBMNVgrRmh5Mm1ZMEk2Q1VPeWI2L01a?=
 =?utf-8?B?Unh2V0VndVJ6aWswQ3FYMCtZcWFwK3FRZTREclR5RHNpaG9IMythNnZLMkdT?=
 =?utf-8?B?V0NZaGtTRWdEcWlIVE0zQXN0aVpYUExCZjRqaStrVENlNlFuQVExSU1LcFpw?=
 =?utf-8?B?TGRXakpxZDk5N2xzb0RyQXhMcXRkclY4SU1Db29NWEFyTC9WME5JWDVGL2Zs?=
 =?utf-8?B?SjJXait4Z2pYcmxYOFpycEg1eDNzTnAzWnZQZ3dXcis5cHRUNmFkWHJPVmNo?=
 =?utf-8?B?d0pZMm9yZktHWkZSS2ViRGlKdXI2OHpNR3N3TE5GZUdSSEI5VFZnMnlYczF0?=
 =?utf-8?B?TUZoNURlbnNHZlF4ZkdENG5KSlhKbTFvZ1h2K2RHVzYzYWozRjVkY2FSTGpC?=
 =?utf-8?B?TzdtR21TT0dvTzcvWEtkRUlYQTJjckRQTmFYOUZIWUpNRllBUVpDclVRWXJm?=
 =?utf-8?B?S2d1V1lDZWxhWWNRVkNHeXp0UUlpNG5uMjhVQWNTSGdkWDMxYmVLNENSQldD?=
 =?utf-8?B?ejRWM0RnNlAxbmtXdVRPQlk2OXQybGtORWVtYmZDbHRFWUJLNWYwWUErVmkv?=
 =?utf-8?B?Y3lzT1p3cEtzU09LTm5XemRScUtZNVQ1ZVozdVFuN0NCbzdhZWRBUFdqUXNU?=
 =?utf-8?B?QU01dkJQQjExMnNxenhlRWIvSzZXNklzUUtpU2NTakpsbEJDSm5JeDNiVURh?=
 =?utf-8?B?L0UwblhlcEV4azBuc21CN2RJNHFSSWpZRHB0dElOcVlNWFlldmpUVnk1eGY0?=
 =?utf-8?Q?PEGOFXxdkilHBMBiBQo9OVWeH?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 2a1c3f2a-c926-4b7c-f44b-08dc945f8bff
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 15:08:47.2875
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: /P02NIlPSiD8ERdbbXgFDiGQ8z60TDJseNjYnhDaQOxbXTjE9+E5zwUV77TKjD2tGjhB+MQR59G9QYfqgiKdBg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS7PR12MB6143



On 6/20/24 06:31, Jonathan Cameron wrote:
> On Mon, 17 Jun 2024 15:04:04 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
> 
>> The AER service driver clears the AER correctable error (CE) status before
>> calling the correctable error handler. This results in the error's status
>> not correctly reflected if read from the CE handler.
>>
>> The AER CE status is needed by the portdrv's CE handler. The portdrv's
>> CE handler is intended to only call the registered notifier callbacks
>> if the CE error status has correctable internal error (CIE) set.
>>
>> This is not a problem for AER uncorrrectbale errors (UCE). The UCE status
> 
> uncorrectable
> 

Thank you.

>> is still present in the AER capability and available for reading, if
>> needed, when the UCE handler is called.
> 
> I'm seeing the clear in the DPC path for UCE. For other cases is
> it a side effect of the reset?
> 

Depends on when its being read. I'm assuming this is after recovery in your case. 
And after recovery it will be zeroed.

Regards,
Terry

>>
>> Change the order of clearing the CE status and calling the CE handler.
>> Make it to call the CE handler first and then clear the CE status
>> after returning.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>> Cc: linux-pci@vger.kernel.org
> Seems reasonable, but many gremlins around the ordering in these
> flows, so I'm to particularly confident. With that in mind.
> Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huwei.com>
> 
>> ---
>>  drivers/pci/pcie/aer.c | 7 ++++---
>>  1 file changed, 4 insertions(+), 3 deletions(-)
>>
>> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
>> index ac6293c24976..4dc03cb9aff0 100644
>> --- a/drivers/pci/pcie/aer.c
>> +++ b/drivers/pci/pcie/aer.c
>> @@ -1094,9 +1094,6 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>>  		 * Correctable error does not need software intervention.
>>  		 * No need to go through error recovery process.
>>  		 */
>> -		if (aer)
>> -			pci_write_config_dword(dev, aer + PCI_ERR_COR_STATUS,
>> -					info->status);
>>  		if (pcie_aer_is_native(dev)) {
>>  			struct pci_driver *pdrv = dev->driver;
>>  
>> @@ -1105,6 +1102,10 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>>  				pdrv->err_handler->cor_error_detected(dev);
>>  			pcie_clear_device_status(dev);
>>  		}
>> +		if (aer)
>> +			pci_write_config_dword(dev, aer + PCI_ERR_COR_STATUS,
>> +					info->status);
>> +
>>  	} else if (info->severity == AER_NONFATAL)
>>  		pcie_do_recovery(dev, pci_channel_io_normal, aer_root_reset);
>>  	else if (info->severity == AER_FATAL)
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM04-MW2-obe.outbound.protection.outlook.com (mail-mw2nam04on2055.outbound.protection.outlook.com [40.107.101.55])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 1911219B3C4;
	Mon, 24 Jun 2024 14:58:09 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.101.55
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719241091; cv=fail; b=P7z5mdlF3+UCzqhi82Ja55iCrjNuOu/V6ygHEh7QMiQuAKTqAv1ql3nCTzNyPyA9gIusnFfKTAXq+x6LR96hI/e2PbwiLYTWk9UQdu1d8ZsubvEaNotNisCFe2Y3G3LSXzTmjssu1eMiR+hEJyJZlRQ5UkCxG+ZOx9WRZb7nbaU=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719241091; c=relaxed/simple;
	bh=sFNDdVgEKACp8cl0Eue2qEWyjU6rhc68y6C4BB3nqPQ=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=oxDtZ8zLson1tLBb8ypYE4HEzsPjPB+YzoSjTGt6e6MQg4j9VAnvNbX+wiEqg3BzQly9oydK7KAPPF/Pa/3TjB1yOBcjxrWWYPApDQAMiYedlianF6W9jXIgy3jBTWlU6hR240P1m7R4WrWrxNVFmFvPpBhCxq3xm+SafsAzMw4=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=4uAj0npH; arc=fail smtp.client-ip=40.107.101.55
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="4uAj0npH"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Tsb74Do05/vBuIzFhhpY9Vwfm3mI0BsjZBFWYb0ppCGVlgBDU+I+oOdNPT9losXLT8O6IVRE7UT0yLRKtswLOMPvojkLmmobmMGLu4pCQE7abf1XXPV01iV+pyk8WmssrzROtT/9W++TFnMpXFMskardCMRDR3/RK2qzSnyUfdjQsb3O9smjsJRWHLAG8KBqko/0L5hEKVBUEhr82xlSh9PmEnFiwX0z360l+nEjqaZTCVFZqWnSk6Eon8/zDQgafh4+ett9lFnJxVZxH5UVMaswxJCClTvlnFIQwJmbsDE6+5hJEWCsjNHojGQX7ySgXFt3pll1teBbj6H5p3Xipw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=d77xWLKFXAEoEuzbH3oRL/viJUml0HhZbOJIYy3sfXo=;
 b=Mi0LCl4cg5zYg/aqoMwrpHQJ3ILDGiXN/L1gIMSPxjCxWIXGixkRuuHXEfslUT4NPM1DM61h0DUJ7ozsFazWy3H5sUubCadh+UnKIyHCE/KCrC94dBZuull7oRdmYcf37HdT7TBQwd3EFVgG2kYM3vhTvGpnEQClwbr7ZJcsqgS6EYhn0sn282U/WLExwiChy9pna9SeVvClocFnSFVBRf5t+0Kn8MRXDpHdg2+Pd/Gvx7HPdpMirgAkcV/nZ3ONONkAXznFPtDtXbADhaP9FpfUS38YRZ1E/KFbxh7XGodBZZKqUQVn6gFZQYFQ3sUzPo8VcY7LfSyfBTuFgGoKyA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=d77xWLKFXAEoEuzbH3oRL/viJUml0HhZbOJIYy3sfXo=;
 b=4uAj0npH9yDrvBmtztbSWfY7J5PEmJPcJOQPiHKeimYXTe75fv+pbmgF3G0jJQ3B4AxMzc8mHjUG1CLceWUZZUCk0b/EFadW+Ozu+gq5FBL7sMde6oNALFztC0aMwblIoLU0uKZbrxQGe8KTEltxAZ6KpaFc3x+y/ki/L4/r+6s=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from BL3PR12MB6380.namprd12.prod.outlook.com (2603:10b6:208:38d::18)
 by MN0PR12MB5905.namprd12.prod.outlook.com (2603:10b6:208:379::15) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.29; Mon, 24 Jun
 2024 14:58:05 +0000
Received: from BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b]) by BL3PR12MB6380.namprd12.prod.outlook.com
 ([fe80::66cf:5409:24d1:532b%7]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 14:58:05 +0000
Message-ID: <49673ec5-b1dc-4544-935f-650cb9f3d112@amd.com>
Date: Mon, 24 Jun 2024 09:58:02 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 1/9] PCI/AER: Update AER driver to call root port and
 downstream port UCE handlers
Content-Language: en-US
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, ming4.li@intel.com,
 vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
 Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-2-terry.bowman@amd.com>
 <20240620122144.00000faa@Huawei.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <20240620122144.00000faa@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SN7PR18CA0008.namprd18.prod.outlook.com
 (2603:10b6:806:f3::32) To BL3PR12MB6380.namprd12.prod.outlook.com
 (2603:10b6:208:38d::18)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: BL3PR12MB6380:EE_|MN0PR12MB5905:EE_
X-MS-Office365-Filtering-Correlation-Id: 0a5d03e1-1665-493c-2711-08dc945e0d57
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|366013|7416011|376011|1800799021;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?WDh0eUhDc011MjU3S1FHaUxGNGhVRVZaTWFkRVM0Nng0VTVQVUV6RDlpRmdT?=
 =?utf-8?B?TzNjcWZQYjgrNTMzMHFwcVA5U0xZZThaTHNGTmVhWDRLRHphUG1YdnlXRjJk?=
 =?utf-8?B?a2pYNzUrOVhxWHM5bGpjdWlDWGZ5aTZmYUZQNGhmbGlMVXdDak1uanJhUmxH?=
 =?utf-8?B?SkErUlhOWUZGSXYwdWdHbTZZZ1NuRjdrbURGM0UzOElHVFNoUktlOWE5b0p0?=
 =?utf-8?B?QVAvNWI1OHlRMGVMT2NXaXhkT0xoKzZSMUJlTk85RFNRakUvNnUrUW5hYkp2?=
 =?utf-8?B?YkdVWmVITjhGME5lYnErNlgyN01XcGEvQlJVT0lxRFJyUENZclhvNzJDeTlh?=
 =?utf-8?B?aWY2N25CRkVDOEh6c3VlUXI0QzlPd3E2MHd2VVdtdGJtNkxwREFtT3RubkVY?=
 =?utf-8?B?UnFROUFlWWo0V3U1bFRGSEhuS01pRVgwL3oxVWg1aE1Fb3pRSUg0TnIvbGxj?=
 =?utf-8?B?NktPcUZtbGxNemVsRFhyS1FTRmJSdDAyV3pNS3NYSlMzRGlOVGJKM2tQd0o0?=
 =?utf-8?B?SmRscmRzaHZYUHR2cUcyaFJ2MEI2QktGK3VzazdjTW5IVnRqOGJkNS9PVmNi?=
 =?utf-8?B?RXJxWm1rMk13TEFlbFMxdGFVOXB3S3p5YndoUmpxZnRpZSsyTFRIeU9wcTdz?=
 =?utf-8?B?UlR3UFVNc0VIYkpGRnZwVE80RkRPczV3SVkxN0szUHJLRCtxM3I4YXlhNytV?=
 =?utf-8?B?WXZGWUhLTnJWVHZGTmRSZWRlcmZSSVo4bVFhK0RieFJvNkhlSlBLUTloTWlV?=
 =?utf-8?B?M3BUazYxc1dMTklxUlVTbnFDc3RFK0ppU1hzNkdCZldCbXNUZWc5OVZSNTJD?=
 =?utf-8?B?bUlhQytvTTQvdzJuR2h1OXcxT0hJRDE3cE9EWnZnM2NhS2hMeW5RdFI2Z1FO?=
 =?utf-8?B?RW1waHNPOHdtb25kUzhZdTVqTlkzYVdRcUxJVHRESHBpZ2hWUTN3d3gzRUJR?=
 =?utf-8?B?VzlxbjA4Z3loTDZqWEl2VkpON1RhSTlWSEJrdVlyREs1ZW1oWUJEWXp6T0wr?=
 =?utf-8?B?bXpsTDZsY1JBN3FnbDc4T3Rmanh6VDYrek9QVW9Sb3RhaTlsamM3amlRTTFG?=
 =?utf-8?B?Y1NSSE5xZ2tXbTMyVklVYWtaaHJndkpVMHhXbndCNW93anY2aHZWRkVpRUNa?=
 =?utf-8?B?NmVRdmg1NW1IWUlzZkViL2JoWFczOEhueFpOb0g1VDdYak84QWVvK09CZ09i?=
 =?utf-8?B?WlowcnhiajNNNDZ4Zk90ZEszbUhBbnBXaGZ6NzY3UHhxeEF1MnpneUw0ZHZr?=
 =?utf-8?B?aVVqV25saVBkVFlOMkc1emNDdSt2QlFJU0VFbE1SRExZWUlpazdhVk1relZp?=
 =?utf-8?B?MFdWOVdTVnN5YUdxOTluSkVIbDZqZVhYNnQ4MW85blRkWUU4RE9sa3VXbFhW?=
 =?utf-8?B?TThTSGhiNXV5cERsaUpsdHROb2w4eW51b3NyOVNQUUhIUSsxcTFnOGxnVDh6?=
 =?utf-8?B?V0dpc0lXL1FWSktoU3hFM0h2cDRwRlhCVjhLNTFBcmR4ci9BT0xzZzRjRUVQ?=
 =?utf-8?B?aFNoMGQ2RmFjY09jQzY0SmFoY2dObjdnZWpVUWo3ZG1vWXArZVFDWk1GR0VI?=
 =?utf-8?B?aVZJUFhUbkl5MjJXOCs5Ukg4bDZLVnJmTllMeGF3R09xNGc3VkErbFRxdi9O?=
 =?utf-8?B?TUl0OE1ZMytLZjA1akp6N21kdlc2bGV5TU9VQWI4bmo3eXRwYzFCanUvQ1Np?=
 =?utf-8?B?YWo3Z05IOWVUZkNvajJXWmVlSVFvb0ZUcVhZLzhlczNRZzkvMkgvaU9BaUFI?=
 =?utf-8?Q?k+rrUf4XMA5+HgCFIw8eRbdRBCLrLmWEzLq+HRv?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:BL3PR12MB6380.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(366013)(7416011)(376011)(1800799021);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?cXArR2ZXTEhFck9QWlJ1L1VrV2hUbDJGazJDNkVlU1RUMUpmMGl6YmZRQjlT?=
 =?utf-8?B?YjAyNFVvUEhrMXR1ejlKWko1TkpnbWVhN1lxeDJuN1g3WTExaGU3cVNSTjcr?=
 =?utf-8?B?dkErN3NhYVN0aHhwZksyVTcycW1VVUVML0R1UzR6NlliNjFRd04rUENVVDlI?=
 =?utf-8?B?d1dtWGJ2QlZydnhvYzhxZEQzK3pZZEVKd2FYdytobzRCQXlmckcvNUEwc0tx?=
 =?utf-8?B?M3RPMzF4ZXlzMlJVTFR3MEhyYzBta3MxeHQ0S3RUWS9pak1iSmpsUjZHLzJ1?=
 =?utf-8?B?VUZjcmRQWUpxYnhZUG4vMFRDTHo3S0FRaTZmRDJSWXNLNm5NQUxhV25xZURh?=
 =?utf-8?B?L3gxRlVQMEtlU1RoS3NrcGEvR3hWbm1lV1RwWW9UVWplZXZCV2JDT2NsSFAv?=
 =?utf-8?B?ay92RVRvVTB0SXVTUEdhVUpITW1lSXVQUWNMNlpaZ0NSRjM4V2RtZDE5OTF3?=
 =?utf-8?B?R2NwdVBrZGFwdlJKUTZtS0w0RG9ZeXJTbWNQQXdrZDZ1QURaMDE2OWc3cm9r?=
 =?utf-8?B?MHRDbnA4N0FFQjRyRCtpVzhnTWFaVDkzdlp3R3dPNm1XZnZrcThzbTBlU2Nw?=
 =?utf-8?B?TUhlZVdTUFR6Ti9tc3RlQUl2VUhzdllmUHNobTYvOHRlY2ZoNm4vakhmNDVM?=
 =?utf-8?B?T1FueER6WDNWbnVEUHAxN3VZV3RENHVZc2syeTlqeStuSUx3VDNLU1ZXNytJ?=
 =?utf-8?B?YXJJSHdibkhMazUzR2NSQnBpdnBhTWdCYitTcTJhK29VVEdxc3N6WVdydDI4?=
 =?utf-8?B?VXJDL2NPVVVzcW5VdDRCbUF2RlFXdWRPWGMrRDl5ellLNnE4ZUY0THI3dFJo?=
 =?utf-8?B?NzZTalpkSzZjRG0rYytHbzZkOUsva2RGdXB0eEo2YklNY2lEZjNwUTZyUTRS?=
 =?utf-8?B?TFRjTVNjb1h5Y3B2UWRCV0xnNndUaWZ2bjFIUkt1OHdYVFY4di9uRHZXaWJN?=
 =?utf-8?B?NXdJR3N5cmZKMnRsSndCMXdTNW1lSkNCN3FFWWxCVnV3MTJsNmcxWEFKeWt2?=
 =?utf-8?B?dHNmOGFWZ011SzhoUnBSdmZnWGJwVkNWSUg5U2t1d1VmMUF3Y3NkVDI0Rzlu?=
 =?utf-8?B?NElsVHcrT1d6V1FsNDJiUjJVL3hPdHdWakdBZzgxMDdBWFJKQVhDTm1JekVy?=
 =?utf-8?B?eHJidllOUDVSQ0c2SmdnTUxMeWtBVVlGUkdNTGZZdTFnTm9qdWVGbEhUMXhi?=
 =?utf-8?B?cy9LMUdOc3N5ZzJKTjdSR1dGR1NWUHRTelJsZXpJRklFa1ZNaUFvVXgyM2ZO?=
 =?utf-8?B?QWY0VFptaVUyNm43bVpIamMySWlIQ0Yydy9mZG55NEtQemZXRURINllvZ1JY?=
 =?utf-8?B?eTdxS20weFI0Q1BxeDVTQjFQZ0k1L2NGRlphY05NSlhSci9pYndLOC9Ldk5G?=
 =?utf-8?B?LzRmTnJmbnJGSGd5dFR0TTlzOTJHY1BPYVlqVTVjTGdpVitjWWlKVHlqRnhq?=
 =?utf-8?B?ay9qN0NRVms3QWJUQWxWYmg1aVNDUk80ZXRsNEhRQm80VWZMTXVQbEhnQ3Jo?=
 =?utf-8?B?MTZ3bHI3aHZFQ2VYekViZS8yNkl6bXJLRXNubmRld1J4NmZCVjNIc2ZVdWxR?=
 =?utf-8?B?M0V2QVloQVNvWkZkZ0pHZ3ZYeXlHa2ZHMTZ1THpRQ2tUdnhmV3dXeFlBWlBy?=
 =?utf-8?B?dGQ4eGIvOEx1WnVXQ1BpeWkrOGY4S0VQNUFoc2xsN0RtVGYvdUdhTDE2NzBD?=
 =?utf-8?B?MEtLNjk5dDNwdzRUTDBlcEY5aTFGZnhNN1BhWmRzcHJ3U1RBUkcvRXpFcWZk?=
 =?utf-8?B?a1pRSHpVMTc5R2pYMHFPSUF3WWZSUDZlVllzMDhzK09md091eHpmTHBsOUFB?=
 =?utf-8?B?SldRdXdsbjMyd3RvRmNDS2xIU1k2d2ZxM0w1QStWMG5EVllCV3hjK28rZUtj?=
 =?utf-8?B?QTBKRHNxUmxhd1FXZXhJcFVPTnQyVkhpZ2tJZ29qZlU5TURxN2Z5dk56UXlN?=
 =?utf-8?B?ckRyVGcyWUpGdm9vcytQaTdQSmh2MmhhZ245R25OdEVMaG9jZW45ZDFtZUVa?=
 =?utf-8?B?SVljbzF3bDErWndiNzZndU5QNk12TnpEYldvMjBMajIvTWtOc1pVVzFOWThI?=
 =?utf-8?B?L0x6MjV0STJFbXRBdVFFU3RLMlpKSDdJby95L2Vnbmcyc0ZybnhFU1lHQlBh?=
 =?utf-8?Q?ZxDXB8iykGTCABPS9K1D0jIhJ?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 0a5d03e1-1665-493c-2711-08dc945e0d57
X-MS-Exchange-CrossTenant-AuthSource: BL3PR12MB6380.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 14:58:05.3545
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: XgJ0naY+XGojXEWX5PGZ53t3u0scM8RKejkpKCAEKreD+Rcs8jL7sh4vCg/KnXVfFQV0a0PuHclWl99ICdNQnQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN0PR12MB5905

Hi Jonathan,
I added a response below.

On 6/20/24 06:21, Jonathan Cameron wrote:
> On Mon, 17 Jun 2024 15:04:03 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
> 
>> The AER service driver does not currently call a handler for AER
>> uncorrectable errors (UCE) detected in root ports or downstream
>> ports. This is not needed in most cases because common PCIe port
>> functionality is handled by portdrv service drivers.
>>
>> CXL root ports include CXL specific RAS registers that need logging
>> before starting do_recovery() in the UCE case.
>>
>> Update the AER service driver to call the UCE handler for root ports
>> and downstream ports. These PCIe port devices are bound to the portdrv
>> driver that includes a CE and UCE handler to be called.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>> Cc: linux-pci@vger.kernel.org
>> ---
>>  drivers/pci/pcie/err.c | 20 ++++++++++++++++++++
>>  1 file changed, 20 insertions(+)
>>
>> diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
>> index 705893b5f7b0..a4db474b2be5 100644
>> --- a/drivers/pci/pcie/err.c
>> +++ b/drivers/pci/pcie/err.c
>> @@ -203,6 +203,26 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
>>  	pci_ers_result_t status = PCI_ERS_RESULT_CAN_RECOVER;
>>  	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
>>  
>> +	/*
>> +	 * PCIe ports may include functionality beyond the standard
>> +	 * extended port capabilities. This may present a need to log and
>> +	 * handle errors not addressed in this driver. Examples are CXL
>> +	 * root ports and CXL downstream switch ports using AER UIE to
>> +	 * indicate CXL UCE RAS protocol errors.
>> +	 */
>> +	if (type == PCI_EXP_TYPE_ROOT_PORT ||
>> +	    type == PCI_EXP_TYPE_DOWNSTREAM) {
>> +		struct pci_driver *pdrv = dev->driver;
>> +
>> +		if (pdrv && pdrv->err_handler &&
>> +		    pdrv->err_handler->error_detected) {
>> +			const struct pci_error_handlers *err_handler;
>> +
>> +			err_handler = pdrv->err_handler;
>> +			status = err_handler->error_detected(dev, state);
> 
> This status is going to get overridden by one of the pci_walk_bridge()
> calls.  Should it be kept around and acted on, or dropped silently?
> (I'd guess no for silent!).
> 

It should be used later.

According to PCI spec "The only method of recovering from an Uncorrectable
Internal Error is reset or hardware replacement."

I need to make certain that carries through below.

Regards,
Terry

>> +		}
>> +	}
>> +
>>  	/*
>>  	 * If the error was detected by a Root Port, Downstream Port, RCEC,
>>  	 * or RCiEP, recovery runs on the device itself.  For Ports, that
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.14])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 1AEC884A32;
	Fri, 21 Jun 2024 19:36:14 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=198.175.65.14
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718998577; cv=fail; b=fr1Ib5cnpV6Pptg7ligP+lQA59wqn4bM/bE5w2bU3JJtMOY50p0x6U1F5DIii+wTHdPEEJm9VH/KS1ul8HjzMDRJvVxlUXyeTHFsny3F7KOWZM/nv3OCHbrwGd4aSxtwqIoPLJ2BDBaeCIYZ4OqVe5xsvZqwdJL7hMvedl6vovA=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718998577; c=relaxed/simple;
	bh=c76phu75WXDESZ17d1De8+vRRbCOSCXGKzMDQrDmsJM=;
	h=Date:From:To:CC:Subject:Message-ID:References:Content-Type:
	 Content-Disposition:In-Reply-To:MIME-Version; b=gV+SebN4GCXWBExz1EuBdZpLVO/6KJIIDaM7WLJ9QmF+WzWtko591WSYwClsEbeZJsEhNTN6yHHtiOFglQ+tpTljbEkTUbd8J0LBJT4lMS19j2oGi1p9CEc5ZGWgYJbt7UvZCTgdzxKpD5uL9RP+xa2F61loX3/Wa99TYFBKJ54=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=TUyuZFdn; arc=fail smtp.client-ip=198.175.65.14
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="TUyuZFdn"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1718998575; x=1750534575;
  h=date:from:to:cc:subject:message-id:references:
   in-reply-to:mime-version;
  bh=c76phu75WXDESZ17d1De8+vRRbCOSCXGKzMDQrDmsJM=;
  b=TUyuZFdnmnzDAtSicB/hciyRxNhtPcLIrYnPcE0IPYyMTil6cGgn2GsO
   NjKZdFGaKBQiFoxWyBouJk3WeoQOAbstXaBbLL89mBYr/CQ/ImL4iSq2m
   bIm4oWiszJpWkkjM+uI6H8xKQiC27WC9Psq94+lYb5DR0SStk4dD8GbOS
   CP37/L+pGPdAfoZcB9nPrUz6Wd4FQAnNHkSQOgPyf51np82Cdo7ZMQLlc
   vjUKwjCrBIPh5040z8+luQOZO9PmnIboM7RoqFcku3eUuEzirHlEFqcm5
   l5/UD4ykkO//+pR0tzzTtevy258lNZfAsQKCyZr376MgzdSf98P5u/tNC
   Q==;
X-CSE-ConnectionGUID: 0vuQRU4WRQ6s7URyfdIUPw==
X-CSE-MsgGUID: ksKWd7XtS+KXFvBhKP5Kqg==
X-IronPort-AV: E=McAfee;i="6700,10204,11110"; a="19858848"
X-IronPort-AV: E=Sophos;i="6.08,255,1712646000"; 
   d="scan'208";a="19858848"
Received: from fmviesa010.fm.intel.com ([10.60.135.150])
  by orvoesa106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 21 Jun 2024 12:36:14 -0700
X-CSE-ConnectionGUID: IWe1JlDfQSavXy6rPwM+ZQ==
X-CSE-MsgGUID: TGbDlCY0RBeq0viZQWreRA==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.08,255,1712646000"; 
   d="scan'208";a="42785015"
Received: from fmsmsx601.amr.corp.intel.com ([10.18.126.81])
  by fmviesa010.fm.intel.com with ESMTP/TLS/AES256-GCM-SHA384; 21 Jun 2024 12:36:14 -0700
Received: from fmsmsx612.amr.corp.intel.com (10.18.126.92) by
 fmsmsx601.amr.corp.intel.com (10.18.126.81) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Fri, 21 Jun 2024 12:36:13 -0700
Received: from fmsmsx610.amr.corp.intel.com (10.18.126.90) by
 fmsmsx612.amr.corp.intel.com (10.18.126.92) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Fri, 21 Jun 2024 12:36:13 -0700
Received: from fmsedg602.ED.cps.intel.com (10.1.192.136) by
 fmsmsx610.amr.corp.intel.com (10.18.126.90) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39 via Frontend Transport; Fri, 21 Jun 2024 12:36:13 -0700
Received: from NAM11-DM6-obe.outbound.protection.outlook.com (104.47.57.169)
 by edgegateway.intel.com (192.55.55.71) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.39; Fri, 21 Jun 2024 12:36:12 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=fo/o5mfSA41vbi+ymeLJSOEUs1wD5HAdQ+b49BQoMM4QH5EG0fVkaVY6kBZ9ROkzd/gbxtoKNnCys8LR0OET5zzHZyhzr1zN6NqV8rw8GLwRtkbvqYVxaPYJDlnrg6mfHYTpVl0Az3npo9SFZtCsw1xqAc3PbAfOy78ckTQ0oKsQN6oi2pWyQfn8nFR0xvr6GGIZhbLudmCPjF2TicLe+1cwbcL42GlVabW1S7rgD3t4cLmR1utsQfNq5CUrP3xy7XqAikGmz0KYcZ/wsSniPbfyhAUmb7bSOfTUuEMjogLfpOsY078mAL35SHZqBdpezGeVt2aE013axcUdCa2K+g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=wJgGxp5jB6tP6LZije2+Qdn5aKbG7ez4st53aXA+Znc=;
 b=dKnY/GVWHmZon9cBY6+BTssFLlGdtFea+T5qh6mUBWyd7SvMIO0Fzsw+RT75/d2Qtx2nQIpsEa1xexqrgyxKxR6duao1EYfv8houTehcQlvwySj5vz5Hdfs4wOcUtHB9Z4Hrk4KK6huCs/tA3yKajDSRp1JhXfUtqav1HssvUOGFdYozVHrdyClOk01t7YUZvW8xYRoBECFGUkIrR1szl7IT/B6qCit/LWUSOUdQwwgpiciPyc5IqUIA4puECrLtngqJrQwJW0Lq64DwMUkacTkGF2mfjMuqk+4ir7vgGshrxvXUC/pfcWHhR4Fy0Fs1UxsS9klEp0DWLzJ1M0alrg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by IA1PR11MB7386.namprd11.prod.outlook.com (2603:10b6:208:422::7) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.22; Fri, 21 Jun
 2024 19:36:05 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8%6]) with mapi id 15.20.7633.021; Fri, 21 Jun 2024
 19:36:05 +0000
Date: Fri, 21 Jun 2024 12:36:02 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Terry Bowman <terry.bowman@amd.com>, <dan.j.williams@intel.com>,
	<ira.weiny@intel.com>, <dave@stgolabs.net>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
CC: Bjorn Helgaas <bhelgaas@google.com>, <linux-pci@vger.kernel.org>
Subject: Re: [RFC PATCH 3/9] PCI/portdrv: Update portdrv with an atomic
 notifier for reporting AER internal errors
Message-ID: <6675d622447ac_57ac2942c@dwillia2-xfh.jf.intel.com.notmuch>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-4-terry.bowman@amd.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <20240617200411.1426554-4-terry.bowman@amd.com>
X-ClientProxiedBy: MW4PR04CA0330.namprd04.prod.outlook.com
 (2603:10b6:303:82::35) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|IA1PR11MB7386:EE_
X-MS-Office365-Filtering-Correlation-Id: dc1548f7-c893-453a-efbe-08dc92296469
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|366013|7416011|376011|1800799021|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?UTkp3Wvj2vgb7++ZgIlkZgg1ES0sVk4YoxwTtB6FcGf5q+nHEegakoMfoJuF?=
 =?us-ascii?Q?Hz8TQFNz9SgRWS7BCxz4OGhWVHWnRFuU9BsyVjQ0qtmhTSpAYjPdUX6frvr7?=
 =?us-ascii?Q?MVHe9x3dAj/+wYsixooEbLLHJHBDG7bCpaRvM2aiNWJd6Xo55JrYgjMIaWv5?=
 =?us-ascii?Q?rnIPJFeNBfU1MqkIjjGNglLYO66Y8uj4xRYyLT1tlU/DYBYQIGP0PTMCg0Pm?=
 =?us-ascii?Q?7k9d3B3LXiQu0rN1JY3YdRiGwy5U2o7o901gDJAKFxkAgV1fxc4HBOEoS/3f?=
 =?us-ascii?Q?lkP6/EuV/i+mMY7WYlxQIeVriNXp6brcG6zyZ59I5x3kY2u5W755GA+3OQi6?=
 =?us-ascii?Q?/ksfIiEBXepyGULlCwd35MEEG3ZJ7HTguzRaPy5/AYOKl4ATvYwYyaiUJGne?=
 =?us-ascii?Q?d5yB9bM75yRqLgLipwbKEHJcsg1P0miF2Je2DWInbRhpFeCYbxKDD1ZwlOYF?=
 =?us-ascii?Q?+Mjt8hMWNiFfLyNUCZPjSnhvpAhbiW1lmhyt3LiGXe6BJ7/gHz9J1QppU71V?=
 =?us-ascii?Q?XsnFwpK+c4Or6DcBEnNeapdPlXOCbS4lDVxg0OJMjifUkkUdxrrYu8IWp13d?=
 =?us-ascii?Q?1elIzkHs29LqSy6o59p0go13l55LmlY9gIx2qmY/3TsUnZm2HD1hQlgiC/EU?=
 =?us-ascii?Q?LHxLcbLrKe4OsHGytjHi7KB+5ZLEPoFjv96jISpcahQ4v5SlMIFofhAv/+2A?=
 =?us-ascii?Q?YNfR1kEXwbKk5MqO7Cq2+CPwd55v5BNIRnCZ9hFOCKRvR+PNy/KLdOBpbRUy?=
 =?us-ascii?Q?V83mUZc/jAm4Dmpx1YguCAC8fRU62jYrhady3MnPbGuhNmrozJxTvlB2n606?=
 =?us-ascii?Q?9Iy2jcH/X0B4/ofTIGE5Eur2v/ey9PZ7e06ky6ckCebhEwtIhnPUW/z9A+wx?=
 =?us-ascii?Q?pI7p/AQBenPPW+Nh7DKQUygYGeRhiaeLiZK+BBtqNDfTwVPhDN3aZz9XJjr9?=
 =?us-ascii?Q?vtgWI9TzOvWUI+ihRIZz0QjBQaM4JCDC41utV5LB/dd0Fa1ndnAqS3NJgyGa?=
 =?us-ascii?Q?Pufrb1Mhg7lIV1Wmy0ZDMrEGmkOeiT6MjylVOMfc7hcFcYL1Suq7cvhaZO/r?=
 =?us-ascii?Q?Ef3viCZN1quNx01TRj1H/UZkzMd7NxSZZEn6NuApzP2gkxTvaDjAwzwwdgPk?=
 =?us-ascii?Q?3/jjV2BeFx6MvOjojHoPyaPY79K5Poid1VZVkKNknYLS+RF7yzfSKcaQz28n?=
 =?us-ascii?Q?l+VwPW54igLpc//aBHhHk0SPtrieJMmlOkHbtyKj++i1DBl8pRCW/Jua5g2a?=
 =?us-ascii?Q?8fsSdX+KaD6MG/4mOyENk7uzfQxBAETlC60vJz7HhsEzeZlY6dMwuNuigmaN?=
 =?us-ascii?Q?gutFMHDxDZakTnqzFV/onM1WYflD/cGOZoYbo3r2fYTfasvPRPKN16RzDoHm?=
 =?us-ascii?Q?+vOps1w=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(366013)(7416011)(376011)(1800799021)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?q30FVYeUULFU1uBCeGp5vjajx4iGG3KWK3z6h3DZcqTpvU4oiJyxCnTw3zQ2?=
 =?us-ascii?Q?+DZCslybP/oMYfBlzoyzwPxHHxR5fIhyCH21B6mTkM+A68xOIH6V2YH+msyH?=
 =?us-ascii?Q?3mWTN9tXvchmXRc8G3h5HOKXEvTa2qRKZkWv7Huun0U3bv3hKqcONprlEJ2N?=
 =?us-ascii?Q?d4sgOpes0RHdj8H5Q6+sqFqt3hn8zJx2PMdNVOBdn3VlMtTdXErqKG2K1eNH?=
 =?us-ascii?Q?7Xt+1DemnFj4EA+l45cfV6eeLOsPML+mM5erlrW7sz0/0UdEZxpO5DxnfmYN?=
 =?us-ascii?Q?2jsPdUCARMT8JiYrc3XzDhHrDirZUrZd4UpxG4sS+iA5n9IVtLkLus4/MrAt?=
 =?us-ascii?Q?IQW7gwYc4VNWk0kL6XlKtywZksbCLD7GSoYZ2idYVAR/6RS5pcyb6/4cvw15?=
 =?us-ascii?Q?2+mUl5TXwwk9ncH7tP8bzI2+FocWZGsnCTKCmOBPt/67EwdxOqCwxS+b4xI4?=
 =?us-ascii?Q?xsB941AN9WUa0VZtfx/f71o4RxhWYKBkOwGWGLxUIjL0Ygbjjak13I+wFpxi?=
 =?us-ascii?Q?AoXXNxMWmloiSMoBmwgKosjohd8/KdJRM+J8C4Dzf/k2r93/iulwzIXkPeOL?=
 =?us-ascii?Q?4ozE3MPtOVggIjg2eXb0Y0FuRCxmSXPi1f1HsYCrhyOVvizfVDdIOxp7gn1x?=
 =?us-ascii?Q?4A+5+MKN+S0yxruPsNZOISGaDf9L6+ZP6+pvrXUkcvlDflGI7GPcqi8G38fs?=
 =?us-ascii?Q?eoXW1s7d3dwWLy4LnMJN/cx3Ly66nuh05ULAAlRqz+lOO8ltbrt2It4LWxE0?=
 =?us-ascii?Q?Os5UO9GgYgp5+MGihzPYfZSwv9T/Rs0FcPcMWQPUIBc0sYpitZSXJW41vTqB?=
 =?us-ascii?Q?y35JpfT7j/J+THyc3bKYQjHceHQt0n+wqJCVYeh0YyGrKyZPEN8aOE7LSyX6?=
 =?us-ascii?Q?H2OfLmkbb/7aomm+oCbTvU0jFirEFddH6AvXoSDiwgG+E9Mnjvl1YqkDfMiW?=
 =?us-ascii?Q?KA1cxHmC2EH+kI18mo6ZkDjj+bznE9ZE4w4Yift0v+ZsKN6e/yLF2Td93S8O?=
 =?us-ascii?Q?MenNyeFavxn6W7heTEXs9Hn+NInTyMpF5rCIkLpbRd1elZCdsywGdyh8u7VN?=
 =?us-ascii?Q?D8IL9NyxT4Hj3mEjE8H/I612jaE3z4UNsFuOUlQc773f1T8PFA+U+/UoHB+Q?=
 =?us-ascii?Q?pmg2t6U3CfKmH8A+min2JMMDSCWX1cXx0rWZViGgzzePgHhJnXpXLiERo3Qa?=
 =?us-ascii?Q?e159eo6t55qQAjMGLUefO9nf+qMeB/GG2t2ZXTlGzzOxfmltrL9lEQ2RfmQ2?=
 =?us-ascii?Q?44urLihaQ++fzuW03ekk4uGHgDZBqSWkHqxOu2s5x1xPX/DZzMQpVYXqDDv8?=
 =?us-ascii?Q?2HNlUP5WDGt9EVXQQkMft7EmO9KjncFigLAqGL6HumM4hGgo7siYf4uqf9xl?=
 =?us-ascii?Q?AlYHf8dbPdh+3BXtU/OOlbFo/KX2tE4af37ZEXkyPVW0ZujYDhvzjySqBoGq?=
 =?us-ascii?Q?PQ+F4+hNPOB4k81Z8/EdyNhnXKWwayD2qeJbrcEAEcQEfQ5L3U8soZNHgEke?=
 =?us-ascii?Q?7UM2vOPyEp2nF7TkV50Fwjb0lBY9R4YDEcQHNeRvR4wFV+exxVHgBjbupVse?=
 =?us-ascii?Q?Z21o+hX0TFCmhkcCof77fbE+UfdWl+Ut0SGxzLv5Oe7twcFPhxgTXzvWXzxp?=
 =?us-ascii?Q?Eg=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: dc1548f7-c893-453a-efbe-08dc92296469
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jun 2024 19:36:05.7208
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: Ze6wF55Pl5NdKtSM4Tl9Yx+TbZCVY/iOgdUSeu3Bx3zzCGrYAfPvIB0o7cB5Xp3Ki4cAmiVRZVqD8lTf0aebA7MXYKBoPrEAsdu4ez9j5sY=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA1PR11MB7386
X-OriginatorOrg: intel.com

Terry Bowman wrote:
> PCIe port devices are bound to portdrv, the PCIe port bus driver. portdrv
> does not implement an AER correctable handler (CE) but does implement the
> AER uncorrectable error (UCE). The UCE handler is fairly straightforward
> in that it only checks for frozen error state and returns the next step
> for recovery accordingly.
> 
> As a result, port devices relying on AER correctable internal errors (CIE)
> and AER uncorrectable internal errors (UIE) will not be handled. Note,
> the PCIe spec indicates AER CIE/UIE can be used to report implementation
> specific errors.[1]
> 
> CXL root ports, CXL downstream switch ports, and CXL upstream switch ports
> are examples of devices using the AER CIE/UIE for implementation specific
> purposes. These CXL ports use the AER interrupt and AER CIE/UIE status to
> report CXL RAS errors.[2]
> 
> Add an atomic notifier to portdrv's CE/UCE handlers. Use the atomic
> notifier to report CIE/UIE errors to the registered functions. This will
> require adding a CE handler and updating the existing UCE handler.
> 
> For the UCE handler, the CXL spec states UIE errors should return need
> reset: "The only method of recovering from an Uncorrectable Internal Error
> is reset or hardware replacement."[1]
> 
> [1] PCI6.0 - 6.2.10 Internal Errors
> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>              Upstream Switch Ports
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linux-pci@vger.kernel.org
> ---
>  drivers/pci/pcie/portdrv.c | 32 ++++++++++++++++++++++++++++++++
>  drivers/pci/pcie/portdrv.h |  2 ++
>  2 files changed, 34 insertions(+)
> 
> diff --git a/drivers/pci/pcie/portdrv.c b/drivers/pci/pcie/portdrv.c
> index 14a4b89a3b83..86d80e0e9606 100644
> --- a/drivers/pci/pcie/portdrv.c
> +++ b/drivers/pci/pcie/portdrv.c
> @@ -37,6 +37,9 @@ struct portdrv_service_data {
>  	u32 service;
>  };
>  
> +ATOMIC_NOTIFIER_HEAD(portdrv_aer_internal_err_chain);
> +EXPORT_SYMBOL_GPL(portdrv_aer_internal_err_chain);
> +
>  /**
>   * release_pcie_device - free PCI Express port service device structure
>   * @dev: Port service device to release
> @@ -745,11 +748,39 @@ static void pcie_portdrv_shutdown(struct pci_dev *dev)
>  static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *dev,
>  					pci_channel_state_t error)
>  {
> +	if (dev->aer_cap) {
> +		u32 status;
> +
> +		pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_UNCOR_STATUS,
> +				      &status);
> +
> +		if (status & PCI_ERR_UNC_INTN) {
> +			atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
> +						   AER_FATAL, (void *)dev);
> +			return PCI_ERS_RESULT_NEED_RESET;
> +		}
> +	}
> +

Oh, this is a finer grained  / lower-level location than I was
expecting. I was expecting that the notifier was just conveying the port
interrupt notification to a driver that knew how to take the next step.
This pcie_portdrv_error_detected() is a notification that is already
"downstream" of the AER notification.

If PCIe does not care about CIE and UIE then don't make it care, but
redirect the notifications to the CXL side that may care.

Leave the portdrv handlers PCIe native as much as possible.

Now, I have not thought through the full implications of that
suggestion, but for now am reacting to this AER -> PCIe err_handler ->
CXL notfier as potentially more awkward than AER -> CXL notifier. It's a
separate error handling domain that the PCIe side likely does not want
to worry about. PCIe side is only responsible for allowing CXL to
register for the notifications beacuse the AER interrupt is shared.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.15])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4F59F4644C;
	Fri, 21 Jun 2024 19:24:00 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=198.175.65.15
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718997841; cv=fail; b=r6ubV0hhKRKfm1Or6PrUpqjppAmiePWwKYDCwp60IfRbGhvwG8CG5zEoU4DhT3fHaqGGLVoSLxD1DssZdavloSwlflxA7ZY3KooZF2mn02XJAcbvfcGV9dgqP6nRDlQcOfSGOaah+hWJrO+AVIEmC4XajLRPr+0+WrbxDklXSLA=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718997841; c=relaxed/simple;
	bh=OogoxmR90tGvWAPnLqaHRigOfUriTSYM4Hdvslb6pwY=;
	h=Date:From:To:CC:Subject:Message-ID:References:Content-Type:
	 Content-Disposition:In-Reply-To:MIME-Version; b=VEk41EWebiFw1LTQ//MAUVvEf92kEq6sSAn3uxP9Y3evFWCYLnPqAw9LtBcfB+dIzCiQjNqYkMwkTIhyul1G4ufSNBL6/lpWji7NDmo+4T+37EoYOBckrKzkHgUsv+Js5dzSI3PMsvQH+Y7XNZwMKOJHHLAqJhXsFe6MqnPYOLE=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=dCuKbGLZ; arc=fail smtp.client-ip=198.175.65.15
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="dCuKbGLZ"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1718997840; x=1750533840;
  h=date:from:to:cc:subject:message-id:references:
   in-reply-to:mime-version;
  bh=OogoxmR90tGvWAPnLqaHRigOfUriTSYM4Hdvslb6pwY=;
  b=dCuKbGLZ6DwslgLgIl1PhvyPBqxTrGkXxGrVxgEahgwiqapOwKEMRhzb
   NqJk+TLtYGCEP69wAwirCiE1cIgWZABoVrLPRMoZdN/gb2NtWX5sv8PHR
   ga6wk0OD9SFjTWaRQp1C5PCkmbcuCqIkGo1qaC4kaM+jab64HVtUbApUw
   vHPlWgpfSifpj3Je2zqCtfGheY16rDtO91mRhF+GBJQghsI5e2Yqe5umS
   hcPQwlXTVijl4F0JDEXyYzPhlpGYoW0L8YDFFQ+JJrtO+tubvsEurrq1a
   kQbNt6R+Eaanztu/qOVbKlbdir0KzvS3+z0wOppR8pHbS8mqOggny0gYF
   A==;
X-CSE-ConnectionGUID: OS1QWzB4ThagyzW+hYNOdQ==
X-CSE-MsgGUID: ePnkNEOkQbyalH1ttG6U7w==
X-IronPort-AV: E=McAfee;i="6700,10204,11110"; a="19824713"
X-IronPort-AV: E=Sophos;i="6.08,255,1712646000"; 
   d="scan'208";a="19824713"
Received: from fmviesa008.fm.intel.com ([10.60.135.148])
  by orvoesa107.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 21 Jun 2024 12:24:00 -0700
X-CSE-ConnectionGUID: biON4d/sRnKBnl8XwR33JA==
X-CSE-MsgGUID: fD4we5ekS2mc+qx1GmVsxg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.08,255,1712646000"; 
   d="scan'208";a="42647253"
Received: from orsmsx601.amr.corp.intel.com ([10.22.229.14])
  by fmviesa008.fm.intel.com with ESMTP/TLS/AES256-GCM-SHA384; 21 Jun 2024 12:23:59 -0700
Received: from orsmsx611.amr.corp.intel.com (10.22.229.24) by
 ORSMSX601.amr.corp.intel.com (10.22.229.14) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Fri, 21 Jun 2024 12:23:58 -0700
Received: from ORSEDG602.ED.cps.intel.com (10.7.248.7) by
 orsmsx611.amr.corp.intel.com (10.22.229.24) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39 via Frontend Transport; Fri, 21 Jun 2024 12:23:58 -0700
Received: from NAM10-DM6-obe.outbound.protection.outlook.com (104.47.58.100)
 by edgegateway.intel.com (134.134.137.103) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.39; Fri, 21 Jun 2024 12:23:58 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=kSMfyrh2DoyUTaaMyN8zAczR+mxa9j+XZ+NFgCPTizD+VicpL+ibhREnrvMdnK4E0Rz1R9WWOmi1yN3lxOZl8SaZZOCxURRC8eRG+melFN/6CafR+DPFAXxbJqIlXtTo4iDmNndXWbj3G3H9LFL5mOZBIt8RAJeTg6raic5W8WAe7Fbq61Gvdf3zptU7U9N7arJNrcNVtjZ3WGquObyt56rD47169xD6YvAmW/46GDUwOQzwiwJhdSDeCafL85taGfy9ef1xXdt2POujpk8OCY4gdCUbtkeUwoixojSuw6SD9ksPpTJ/6DS1iqp+xO/4e/N6rswabKZHam4f0m1MZg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=qBFJdsQwCEeDXigv+iuyoACVbtd+AAg5UK2rAt3YyeI=;
 b=f/QyykMbbzAPBiT8inF3WeeMNsNoTdcQSrpLH08sQCUTG/abKo8O4stSAkTpMElFq/jpGOaFgNI/SOfPMSIhXrfcZOn5A7fHjQtqH1KeEoNroqcScqWv1axWKRJepDHMWm/76OoO906VFrrSUxdaQQDXUQwzaPcZLlHJG93yV+SqLtzSw0tMT2lfodY7ldF8EzJtdba/Qjt4vZoiVvbPFggMNhCLeKjuFwFEq7FXPuy8Q48EGd7wBOnkICx+dAMsmWR+QmqLxsScT+EPXA/38vCjh+Vt1pHgJ+9vHZ8ZO/o4pji7EKvLHgYVxtrgyxfCkJmKcjV0xAHASd6R1HstrQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by SA2PR11MB5097.namprd11.prod.outlook.com (2603:10b6:806:11a::24) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.22; Fri, 21 Jun
 2024 19:23:55 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8%6]) with mapi id 15.20.7633.021; Fri, 21 Jun 2024
 19:23:55 +0000
Date: Fri, 21 Jun 2024 12:23:52 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Terry Bowman <terry.bowman@amd.com>, <dan.j.williams@intel.com>,
	<ira.weiny@intel.com>, <dave@stgolabs.net>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
CC: Bjorn Helgaas <bhelgaas@google.com>, <linux-pci@vger.kernel.org>
Subject: Re: [RFC PATCH 2/9] PCI/AER: Call AER CE handler before clearing AER
 CE status register
Message-ID: <6675d34860e5e_57ac294a2@dwillia2-xfh.jf.intel.com.notmuch>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-3-terry.bowman@amd.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <20240617200411.1426554-3-terry.bowman@amd.com>
X-ClientProxiedBy: MW4P220CA0004.NAMP220.PROD.OUTLOOK.COM
 (2603:10b6:303:115::9) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|SA2PR11MB5097:EE_
X-MS-Office365-Filtering-Correlation-Id: 72085719-c7ef-4dce-5169-08dc9227b11c
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|376011|1800799021|366013|7416011|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?GJWplHnh/mM0Xj8al4mIbiiKTXYeiB143QKCj2FT4n4ZOJZfgxBTlQWcfPwx?=
 =?us-ascii?Q?qP5mpT9XpSEvmlbYUzZwDnhsxlGBG7noeWDC1IluJZYDJMtmYyNQc/p3BPbb?=
 =?us-ascii?Q?rEHt9c8vuEqk5Wi5ilCwzbzbTpNfNv69CjuYCy5qPlDwFwgDbeLdpVtQdPZX?=
 =?us-ascii?Q?3y8orln+RkXXGqO6AVImL3zsv/IPyo1mbZd6HftjR2S8zTUBLGSaHJahVqEc?=
 =?us-ascii?Q?ts7cJ4xJ9Jg5F8TfR6mzTxnye5LXeJ2YuRJTOaTvS+43AcEZPgOuxIMKneq1?=
 =?us-ascii?Q?Ezbdk9CfPVS7/Wm3/ggWTmomLUjZVNQ2scq7z4ALbRx7V34QioRapLcMx2qV?=
 =?us-ascii?Q?8aNYtXR74DHz15tZu5+q8xOI4jXeEHdCD7GiULycYdicWVxWsGsUvdCU7aC4?=
 =?us-ascii?Q?jNb0IdrMrgQyB3J+MuDZICfU/ADeIBV8kwKtUM3bWJrifarnukUE90XwQwpP?=
 =?us-ascii?Q?AbwS1w+4aFwgDpM1KuoE/PGiKiF9qcctS/+rHsiiCgC+l8T73o379SAWza+r?=
 =?us-ascii?Q?9DXLONOJX8fbUmC/8U4ZOruR7Cixn8eOU4ognyZ0tWMPNs2Qld7RQYf8O001?=
 =?us-ascii?Q?zNk5Z7BU5pZKy4b9a9zjBhjiL7hPQljK1aFDhsdQIz1ur7CpjqSW0lFKu+RJ?=
 =?us-ascii?Q?QwjGM+xFUnEdQCTRSvnVGByIqW9lgEeLR8Qj9Z8+tHUoyFqqggBzgEMwLgRO?=
 =?us-ascii?Q?un3rM7owCbmAMviGbk6jlZu2sjOLzKjRGIXvx6+ig58By3bmnMpL4NdMOFp7?=
 =?us-ascii?Q?kmWIKxAktIlFbKDF2+HYsmpiOvZsxLJqchw/cwKo/8E0gwo89pX2JYyYdvK4?=
 =?us-ascii?Q?5c8jrBH6jAsZ+ghXxsDUgMFjlmoIXZ+hkg5leO9k6c5XAeGHuVQ4vYJR2ifo?=
 =?us-ascii?Q?15dyhwH7WMjDb6K2WyFw0+bUQaNFvOieEm/Elf3NWsCsm02+GomohyAgEpEY?=
 =?us-ascii?Q?re01RhHM1KTGlVXpn7cyzFaVa9VgGSJRx4lTqrh8GlUdGZRqgBms7rhusJUB?=
 =?us-ascii?Q?zyLzq+ig4G3tx8PAQGBDWlqT7Ab2idsQ+NeybHh3gsIGgaogx7DATokyr44G?=
 =?us-ascii?Q?IPXtITr4GvNbiSAH7o91GuuS59KlMSYezz6zxx9K3KULUpDpoOABy3wdsjWr?=
 =?us-ascii?Q?RsvKdSY2ag1hK4Wx1cXsKWj2P12mXXIeG/V2mRh7eFU7HWMfCLV9aKeiH+2I?=
 =?us-ascii?Q?5nhCIEpfxnlgFtEAe+hUYMqIIn0B0imGqhGhuMiXArWa2h5WkjpQPVWRbWTZ?=
 =?us-ascii?Q?jK3saUlDH/H91z3OeaoLu0Kc9dR5QGx/VyemAwg5t6gTJaA84kU/F16OkdmO?=
 =?us-ascii?Q?ymorQmPPGc5E38V8PQAM4ycvXQTfo4Mtf+P7vbAWRKJcycXfhs19FbFNvizF?=
 =?us-ascii?Q?qZKoucU=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(376011)(1800799021)(366013)(7416011)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?BPgBhAb11/HIf9GW+2TFsuKqRXFkesCE5Xv/220RQRd2OssLAVJ0aXLrAG4f?=
 =?us-ascii?Q?DHLQxeXs/W+ml9blE2lJYBjIXJOfpcwUu+1MAKAUc16ZFj3ozhNrLRg/kVtO?=
 =?us-ascii?Q?XoAVYBFgrdVEzatcWn09yw9RBQFFoVxbYef4Kl8I9wXAiVggGGYjbWRRwiuM?=
 =?us-ascii?Q?8Ce4NLG4PtVwrF4CByemIbMrsxyZ5WsClhJ5f/NBKlhH/EFcKvjmlThCp9Se?=
 =?us-ascii?Q?1Gdbeakyj177XxjMBHjSZB+YOQnBqbuoAp0GKnkJt2UfMdEIZrs0lFwfqGvN?=
 =?us-ascii?Q?c1DjWywsss/RN8YrwsUfV5csUTgEyZ/iCEWtudTvkeKpvAM0RCYBU3C1YSx7?=
 =?us-ascii?Q?zJOk92QQI39OJwbTOkf3nHmpdZPcPlqeSwk82gjnQaiaBF7OEr9rq04TStnm?=
 =?us-ascii?Q?eZeg8XKHuKBy53k8vCWcBhtUe7cGhlr0cxQH2yj3glgZKpOIXnQgfsZ9c0KP?=
 =?us-ascii?Q?DXK89RWAqBD8iUap8WamrUWBlJmdC4TF0C8T+cD2p9T4IEwYPfwYsChQ4nrk?=
 =?us-ascii?Q?Afv5QEX/0Yi0cyhYLzDdelKnSIYtDkIEY7ySCWRC02fMqadCfU/eJSoC/jUx?=
 =?us-ascii?Q?7PmhykxDO/yFS/+G3MuLch+bPtwIyrHBXN3uLNhX/y8FwoSuvEJixLo5jRKg?=
 =?us-ascii?Q?5iLkHwVgycMa65I8LEhwvgdwVxUn1l3H5dqGLzQdad5J9//q4/mckxFqPBIz?=
 =?us-ascii?Q?mDH12y1xnSmD9d6hBqlEO5UgE/OkHlAluAHnTn5bRjlLngfMARUyp4Ly2ewu?=
 =?us-ascii?Q?cva5duHkg4Lss4PVoVDM98Da2B5QHKsyGdH6WLy5LBIVuyhaiy+5mLu736XS?=
 =?us-ascii?Q?sXCVtmImmKCph74ZfC8PYcPcYRQPQQnQ/AmSWkiW+b0qtVkuzk4XLojk4vdy?=
 =?us-ascii?Q?b9rum5gdyObRt1LtC6cy5V3xfj2z4sKhM7osJcF0xT9YTI5sBRrRA50ElXbO?=
 =?us-ascii?Q?J1ihGzGL5MuOJMzEVA9q1xSWYwHU3qNS6Xny6PaKuFww8mgr72coo5CgU6YU?=
 =?us-ascii?Q?wPkG3chPQnogJ2xLN0P/yGLfCfEkjQXx9JrpNZgjeyws0vXHjnP/wrWbheCs?=
 =?us-ascii?Q?QyqUyD5uU4Z+JjlEMo3M5qld0yGQbv9kh8GB8s0cFAho4dI66IsHD3qTr0b5?=
 =?us-ascii?Q?4OnpXfY93jiMIYLHBgs1z8ah5VqhHw9CNtW4QZuajopFG61kogghH9Pm2+XM?=
 =?us-ascii?Q?ysnilWZTAhmg0uCMaboZkZRu1RIpoCbLT9Z1LwKL/oY0y7kGtqvTqHFnCLmn?=
 =?us-ascii?Q?RsWRIo12Q7HgrLRRYwLlqSE5mSgz7/LCrZ0jKzE+7u+3HZsxvre/pEzdm2Em?=
 =?us-ascii?Q?1rDWTC6Q1RMaiJx720Ok73uSbPlDxMyGojMO8L/N0b0y2KsZlu0fNf7oK4Vz?=
 =?us-ascii?Q?xgSNvB73AG+2695lxF58xoXP16shxFHUMByf7qkzIx9MTGfLz8xdOdK7XIHN?=
 =?us-ascii?Q?yZR4JYgvHITRObepAzX80qTN1GreFBdlHe1PmQ1Yi8ys+N6azrcEKXhMjPbJ?=
 =?us-ascii?Q?UtfX8v2gbgmUbfv6rZLLNx0zay7mqPWZ+sP+upGjTuQfqy0oAZvvQdkjIuNa?=
 =?us-ascii?Q?eyXaEEzX9MP2g8keEG4iXk+VpWPDqqX0xDQs7O8JlcJPnoA9cRr4rFw8oPB5?=
 =?us-ascii?Q?Dw=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 72085719-c7ef-4dce-5169-08dc9227b11c
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jun 2024 19:23:55.4027
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: GWY9k/5UTdszc18iFTGejiLQijrRxxk0gMBxMTqRtGjDWp5HZiKw11OSABSDMa89UqmY9RoaYZ10F+903g2vG74dQVSHXHR2tJnM4hPMULg=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA2PR11MB5097
X-OriginatorOrg: intel.com

Terry Bowman wrote:
> The AER service driver clears the AER correctable error (CE) status before
> calling the correctable error handler. This results in the error's status
> not correctly reflected if read from the CE handler.
> 
> The AER CE status is needed by the portdrv's CE handler. The portdrv's
> CE handler is intended to only call the registered notifier callbacks
> if the CE error status has correctable internal error (CIE) set.

Is this a fix or a prep patch? It reads like a "fix", but there are no
notifiers to worry about today.

> This is not a problem for AER uncorrrectbale errors (UCE). The UCE status
> is still present in the AER capability and available for reading, if
> needed, when the UCE handler is called.
> 
> Change the order of clearing the CE status and calling the CE handler.
> Make it to call the CE handler first and then clear the CE status
> after returning.

With the changelog clarified to indicate whether this has any impact on
current behavior you can add:

Acked-by: Dan Williams <dan.j.williams@intel.com>

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.9])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id AC89D4644C;
	Fri, 21 Jun 2024 19:17:50 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=198.175.65.9
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718997472; cv=fail; b=VhqCLs4nC0C+o1myFHEx31j6zwSFXeuy1b5mZiS5LDll8d2St3RhBwz/ty/MgIdffglWGenr2RcBJwW3beeUECw0Vv5kEb5uQV2BwmAUvHsFZrihXnkg+tI21tD9R+ulW6dyoY6N9ZHcaaWx86Mxs06RqofQmATtY1mQlEGIokw=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718997472; c=relaxed/simple;
	bh=RY22QG5u1RtkT+UWbDUfl1Xt/vqPy8RNkFhSI+Pex6c=;
	h=Date:From:To:CC:Subject:Message-ID:References:Content-Type:
	 Content-Disposition:In-Reply-To:MIME-Version; b=l0xPFkRy3Ux+hTWG/5NcWrIG2UOC7cwwC4ZWFAc9MpdQsU3tsXevfgiStdW3lpvR8cHzX8LHEcGT308Y6FYIa5/EdrKZ+OMQDO467D/8YkgP35QvT4h0tVyfFMNwaIhY17QPWqAD0E8vJOCWBpcr1TfDrqkKJuH8o8IYnTkbgLA=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=fcx1f59A; arc=fail smtp.client-ip=198.175.65.9
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="fcx1f59A"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1718997471; x=1750533471;
  h=date:from:to:cc:subject:message-id:references:
   in-reply-to:mime-version;
  bh=RY22QG5u1RtkT+UWbDUfl1Xt/vqPy8RNkFhSI+Pex6c=;
  b=fcx1f59ATi+MSFumYSsXAiPUpqQQi0deKLIFX/GT23wi51gTCRVqvYFO
   QhiRRmHDOO+rRzBXNk8rNpcMNagqYrt8f6+PeLY6uAFDACbL8CyqdBzAj
   qhy1jBnWB1KlnnlLzOEoOUefpzC2LkN9kDGG4cICDnIUbsabeXGVfx7v7
   trCVgeYdrNdT2iWDNXNhVI7ZeTyMHEfkOP35AMRsFqBGVb4YIcuMc5MHz
   hVMpMIels86xkYWOfPb/C1SWnLD9uIfPP6yZhNsMC9YOMk2BcfmUuj+15
   kNUYi6Xn9I0vS4ZK1E/SkKA66cZwcXQO5FjcvL1mCuSz5ZSJpPJispcGR
   A==;
X-CSE-ConnectionGUID: x6xLJDs5TNq8t6SOMaMxyg==
X-CSE-MsgGUID: NY0Oaw6OTsemar0WBTRZvg==
X-IronPort-AV: E=McAfee;i="6700,10204,11110"; a="38565809"
X-IronPort-AV: E=Sophos;i="6.08,255,1712646000"; 
   d="scan'208";a="38565809"
Received: from fmviesa009.fm.intel.com ([10.60.135.149])
  by orvoesa101.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 21 Jun 2024 12:17:41 -0700
X-CSE-ConnectionGUID: K8G4Q4TCSQ2sdrBFevlgsQ==
X-CSE-MsgGUID: 5rg+R3kNTaeEUdLGmNFzTw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.08,255,1712646000"; 
   d="scan'208";a="42755582"
Received: from orsmsx602.amr.corp.intel.com ([10.22.229.15])
  by fmviesa009.fm.intel.com with ESMTP/TLS/AES256-GCM-SHA384; 21 Jun 2024 12:17:40 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX602.amr.corp.intel.com (10.22.229.15) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Fri, 21 Jun 2024 12:17:39 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX610.amr.corp.intel.com (10.22.229.23) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Fri, 21 Jun 2024 12:17:39 -0700
Received: from ORSEDG601.ED.cps.intel.com (10.7.248.6) by
 orsmsx610.amr.corp.intel.com (10.22.229.23) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39 via Frontend Transport; Fri, 21 Jun 2024 12:17:39 -0700
Received: from NAM11-CO1-obe.outbound.protection.outlook.com (104.47.56.169)
 by edgegateway.intel.com (134.134.137.102) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.39; Fri, 21 Jun 2024 12:17:39 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=JU53m8VycdnFyKDc+vtifkSS1S4XHsj4m1pqmjYtw+gD1DVjOhggfMwFAcE4txhkhgx4rq2vArfh1LxotUKD6+1kp7RjM3/qtAEloKatgS1ogQS3X/cAPXA3mfGdDRut8ObX8ty4OGARCo0qaswPQH9n+h75SQqhoKkP4NEQhrNeoRyE+cExHrPgfn3jJgkmCc3jqPw6bU98PxoSAptOi1Stu+T5JVK/1t7AOygB7Jcd6TxEo4YRFbN73GccpU90B709PhxJFEvXqIIMj3+U1qRA+FGQR2FNePR8ZmuPjr+OnPGy2silhONST8Zy6CO4Au+ibPz2lzP7tbmgg82bHQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=m286nHi/BH4GDT9FoqSEbvmTkYrRxwFwSkqBHeOyiPs=;
 b=E+IWvoeK/0p29ZPjzaxpUUKb50SpfVSB697g/iXbFdtI9iEOx2dZ6ei43uUk4LULmVfqCXuGUOMUGMxEaOHuVK/leTQSzhr4PV44xXkDe6UJexn+YNSirJQsvSiiXIjmp+uDaV5tmASQfCSI1L/fE4X9JQonKUkPy6moz5hqCtuESElzSH869RGlI6xc4C15QP6fILSaCVvJAQK/c/O4ARfz1B/1Yxb3IHkJp7rrW59KNdo4oJsQhMXTmUZTOmzFiVhgQt9nG3K3cGAU+c173LMq/fCCXwEzdJTj7at/HyiABea3MPunMkUT5gB4On2QsPw9YJDwrSt03z4MfyvwBw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by SA1PR11MB7062.namprd11.prod.outlook.com (2603:10b6:806:2b3::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7677.30; Fri, 21 Jun
 2024 19:17:35 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8%6]) with mapi id 15.20.7633.021; Fri, 21 Jun 2024
 19:17:35 +0000
Date: Fri, 21 Jun 2024 12:17:32 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Terry Bowman <terry.bowman@amd.com>, <dan.j.williams@intel.com>,
	<ira.weiny@intel.com>, <dave@stgolabs.net>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
CC: Bjorn Helgaas <bhelgaas@google.com>, <linux-pci@vger.kernel.org>
Subject: Re: [RFC PATCH 1/9] PCI/AER: Update AER driver to call root port and
 downstream port UCE handlers
Message-ID: <6675d1cc5d08_57ac294d5@dwillia2-xfh.jf.intel.com.notmuch>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-2-terry.bowman@amd.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <20240617200411.1426554-2-terry.bowman@amd.com>
X-ClientProxiedBy: MW4P223CA0021.NAMP223.PROD.OUTLOOK.COM
 (2603:10b6:303:80::26) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|SA1PR11MB7062:EE_
X-MS-Office365-Filtering-Correlation-Id: 105af392-0778-42e1-279a-08dc9226cec0
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|366013|7416011|376011|1800799021|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?cLm/tfPYvuhPLRjbNWkYV1PZmSX0rh/eq8ZjeR9CuDkN8rrVwby3XGXeIMQI?=
 =?us-ascii?Q?rQxbr0TkNgNJntfVMqYCRKLnAZER3yinu91eD+kZu+ZFrsHIpyvNkjSt4e1S?=
 =?us-ascii?Q?Ab+ekzleAVX2gBKpWpNjiIifNoAG06+GQfbL2k9hIGKQcIxAvPHf27eynq86?=
 =?us-ascii?Q?/QNfJKTjLzM+ubwTkvIJW9yXv5tH1m41un74fGxrtC165SsF33Jv5rmr75KD?=
 =?us-ascii?Q?Ser7HD+rFcZuHmw2YTMA1W2OpjXegZnj9WrvIRbhYuzZt5v5OowcSxu4cpXg?=
 =?us-ascii?Q?nSnNO26A2kC6qgXe42FQWwAbjAYR66/Zuzx/HIusgDrZ9ej3Tdtdv7KCLhyT?=
 =?us-ascii?Q?IEXkP1auFR6+CZFscpKT009eUo/V9kFbKuQ5vaXcBCZGDqc7vwRyXljw2Hx3?=
 =?us-ascii?Q?cYRbW7C6d6eYzNG9C5oFM2TZ5tLkrBAHxnOFzFcU3l4QrYmZz5BqXE8bak9R?=
 =?us-ascii?Q?AX4mHVt7Ouwh7ldlpF7d3KyccAPZAM4FxLNj2lMRfJBS6H575hMezFocWUVi?=
 =?us-ascii?Q?iUXoz/LYg4zVUuLDTbZNgtMRvVyvhCtLcJZTXM+AG7qYGrM6obpCCZsUHjrF?=
 =?us-ascii?Q?pPnzWJKGEPssK1amtA40MACUKFQ3nOMDFlOQU4pzWTXcqzdG+HMbruDQN3jd?=
 =?us-ascii?Q?jrMH+tpQsqK8uC0iGHB+AUSVyDkikqaTiuMdQPCCPgwr3koGug8A/hnDl3VR?=
 =?us-ascii?Q?FwDJT8FDkDszX2CNbX93GFBi+8YKQBk4ml0QC2HiP/gMqPyvjdYYe2CQgpC/?=
 =?us-ascii?Q?q3SC2rf0gav0eiy4MEstRY4o00DYPh22xoCj+OcbNysEI+ryYfFPg2Qogw2j?=
 =?us-ascii?Q?5O2NkfPC/5uksC9w8BoHE1Ib6SOomqCCz7bJhz/PB1cdsfXFXsowGrYiXPqv?=
 =?us-ascii?Q?7sxfd1Hxt0tWXPw0B3GLyMCi8CKiOxKbKFsx9F0tFZFF7ueMvDXbfuPM6tf8?=
 =?us-ascii?Q?Od9QaJo/7WNKN1jQ2dAtIq4Uob/M58KX2xFIGYT/6KNGC7kMN1GOVkH20cMA?=
 =?us-ascii?Q?pExN2QHl3MWSBHefb/HIL2+04qVO1h5Ik3HjNHoD4enwm+a3f8keOgQX0+gP?=
 =?us-ascii?Q?+lgfPxOHDvUxwY8X1eJxnR24nGP20uqbFVD2wr6OCz57tZk7ohgvfrfgIyeJ?=
 =?us-ascii?Q?XJmRtNT9FgWuqh+CXtfZlpUZOklPvGRk7M11JB6/493OSrpMf+bW1api01ag?=
 =?us-ascii?Q?Zm50Zt892j4QPYz49lHVkFoObuScxTyTDrC0bH+7eCgYKVqWFnBE8GjWZwoz?=
 =?us-ascii?Q?FakvkxSyGHt37LMBVhiskI5EGh4OANMkGMeSqvouxQeJj8pnBm1kU5pP87AE?=
 =?us-ascii?Q?QnYEquzv/RucRdAn3749Fwzbf2EenhOdVy6CcN9R5X7ZaXy1M3TfzM8UREaB?=
 =?us-ascii?Q?1+G37BQ=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(366013)(7416011)(376011)(1800799021)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?lCtMGiyweEL6Bpcbe2bUFGChXWPmT89Rrh6rLPchok84rtGq4Nc02uXN/RSw?=
 =?us-ascii?Q?cyh2xOk6Q5uoijlFDENkYrNtNv6SHC+xFssWxb0X3NEXd6mBdlq/H/Bf18UQ?=
 =?us-ascii?Q?IIiAYHcXTblaJCpTMtJLmOl0WYfEbI2szF8wDGd1elJKOc2g4wKWrcNxG2VW?=
 =?us-ascii?Q?mVBXRi4t/ChpF+0asmN1UrRNlzhG5yTmIIOp2W4Ifzfedk+0Ns5MCafb/MwP?=
 =?us-ascii?Q?TPI7Cure50URYy5oIRCCT4qlYbGKH7IEZkkYlrHqkNmWphmh/H9i+6xgkvmb?=
 =?us-ascii?Q?ln1rBrH/rOyI1koaBcfrzWNHWKH9HVjPK2KPpex7IjhkS27dQgTCZBtUWFvv?=
 =?us-ascii?Q?lRXkbcHL3gHBnNxVTUt47lH4HggvPxfi6VhoGk4YRJv6Ps8g+fjhqXTm+KEN?=
 =?us-ascii?Q?vohsKt3p9eUtdqGj9t26ligrUpi4JMHqjkp4wXKahpBMAthTpb0TnzxTGQCB?=
 =?us-ascii?Q?QvZa5kVdHRADhLqM2ILaZpbRGfqai1665gWfMW+ieZ9Y/xICo+2iNfbt16If?=
 =?us-ascii?Q?iR3GkZa5h2MmAsXZo5e7oCNkvd6734IZo2TWwVnTGAPPoakAdQtjckGXdhIA?=
 =?us-ascii?Q?XC/RzEVxVjLT7Tc9e2uGomv+Gpf55Z+QYks6G7rI987Ft2TSXo2QIA0+bv7h?=
 =?us-ascii?Q?twbnfzo7BPsHZOGncuMk08f6n4kM2ep+0fDnvJixjulvDtHN/vsq1FIah+2W?=
 =?us-ascii?Q?Z3Ch/B20P+vy3g4hxmGs2uUiOyTnEulLly9wyXKqpu8Gd9oT68uLg8ED7IKs?=
 =?us-ascii?Q?gagFDATqytZ2VnzeT8VOMCFla1btiTcXsSmAiH9QtpgmQ4OjBWtOq+mGP3EA?=
 =?us-ascii?Q?ZSDdv2798GPnHjRPTV8LJv5rkJK5EclGJ3TIjWwMZc7wRkSpipp0O+V/yOQv?=
 =?us-ascii?Q?TDn8oZCCi7YweOyKKxUIJ6EE2WFlkFDBpC5pglTOJwI8ETG+bLDYwDbj8C5M?=
 =?us-ascii?Q?e1IqIUyTY1yIIMl6TT+KzzcRpFTeb6V37Q7DHBEAcz33Vqnie+8o58g4MzMv?=
 =?us-ascii?Q?pHG5lkyMjc9jvKLSuAekjONA1m0mq0lNz0FeMBIpIyrP6UQmebsiSUJf9kxT?=
 =?us-ascii?Q?bUAq3nrteuEkDmounnb9yde0wMLJGE49rRQYJknBbNYrX7P6pwD2TWPNdfqc?=
 =?us-ascii?Q?cZmyfcuCTSdXP8hOOBB8ihZbochoWbW/EgAaeCzVLJnsKP3hGFBQ3GO7gfEJ?=
 =?us-ascii?Q?WFd9znC9sLdU2bqDRO3KLMF3DmrvBZNl9wWqTu5GSBxRqLnGr/FqYSYDCCz7?=
 =?us-ascii?Q?OQI4qkTa5kTLGdfu3wBTs0gkqB6GG8g5p43EWRe6azH5kwMm10fFRQZwJmCT?=
 =?us-ascii?Q?fo79B02hMkH+OPvQ/9Ks+KccGd1I6i79a/YeTXDic2RZ1fipMmZ55RytOy+M?=
 =?us-ascii?Q?6yb5WU76vhSYMLgndc78eDNu5Na2O+jUJPPC/YPIkSyBarW8xsVyQgcVhnpk?=
 =?us-ascii?Q?js8AQYgmRpeCMWUvhFrr2hVdBV7jW4UXoERrUpm7ryea2VDvkMTakjfz3mRL?=
 =?us-ascii?Q?S1nu0TVuN0Rq+RIpZZqOf7ua3CTWf0iAow1kbySrd3B53DvOO2sLlTX9JT5L?=
 =?us-ascii?Q?EPNCQlPfeRx0lkmXArl0D96BQvM8vZ2iziSsreLyCVix9Px/x5hI2D3iunka?=
 =?us-ascii?Q?Xg=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 105af392-0778-42e1-279a-08dc9226cec0
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 21 Jun 2024 19:17:35.6733
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: WwTrWv9fG8HU4HRYW/WftBqSwDSk5T2n0n3A1tdhR7LcaECTG3/ZiCgAjYDr3FAW1KTwaVZhP5Y2HZiXZXOBbM/hXOxIniBwLl0wc6tlLqM=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA1PR11MB7062
X-OriginatorOrg: intel.com

Terry Bowman wrote:
> The AER service driver does not currently call a handler for AER
> uncorrectable errors (UCE) detected in root ports or downstream
> ports. This is not needed in most cases because common PCIe port
> functionality is handled by portdrv service drivers.
> 
> CXL root ports include CXL specific RAS registers that need logging
> before starting do_recovery() in the UCE case.
> 
> Update the AER service driver to call the UCE handler for root ports
> and downstream ports. These PCIe port devices are bound to the portdrv
> driver that includes a CE and UCE handler to be called.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linux-pci@vger.kernel.org
> ---
>  drivers/pci/pcie/err.c | 20 ++++++++++++++++++++
>  1 file changed, 20 insertions(+)
> 
> diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
> index 705893b5f7b0..a4db474b2be5 100644
> --- a/drivers/pci/pcie/err.c
> +++ b/drivers/pci/pcie/err.c
> @@ -203,6 +203,26 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
>  	pci_ers_result_t status = PCI_ERS_RESULT_CAN_RECOVER;
>  	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
>  
> +	/*
> +	 * PCIe ports may include functionality beyond the standard
> +	 * extended port capabilities. This may present a need to log and
> +	 * handle errors not addressed in this driver. Examples are CXL
> +	 * root ports and CXL downstream switch ports using AER UIE to
> +	 * indicate CXL UCE RAS protocol errors.
> +	 */
> +	if (type == PCI_EXP_TYPE_ROOT_PORT ||
> +	    type == PCI_EXP_TYPE_DOWNSTREAM) {
> +		struct pci_driver *pdrv = dev->driver;
> +
> +		if (pdrv && pdrv->err_handler &&
> +		    pdrv->err_handler->error_detected) {
> +			const struct pci_error_handlers *err_handler;
> +
> +			err_handler = pdrv->err_handler;
> +			status = err_handler->error_detected(dev, state);
> +		}
> +	}
> +

Would not a more appropriate place for this be pci_walk_bridge() where
the ->subordinate == NULL and these type-check cases are unified?

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 875F31E493;
	Thu, 20 Jun 2024 13:15:18 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718889320; cv=none; b=fOf7zP8TvBcAajUNL512ZSxdTQ+LVEAtnlf+L6MD+8B/0l/UlH3I1Z2dl2yfJCvTeaphBBGT/dPkoYdokGTlLWlDS8g634i5G9IPj03yPM9mUgwsT7iEraCXHQCh8FcNi4mBpjCWLN5tzCASbhjnbcWwtu+fmHYTvDjms5a7q7U=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718889320; c=relaxed/simple;
	bh=j7cpECeosRQCrOQG3FbP8xjL5vadH9k2+3W4vtjY9rY=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=QBk73aglJyYdLDLCZ2kuixJU2AaIE6QWAkS1eWgfC46b5V2DS3h95Sa2DBZCYPjUZt1xvvUt1/hfET9DRVp26r5BRRmjASdE1QEIOQlFx4XdOaSsWAp1iTeUeQLBeJrfiXL4XrJvIQZQ5xEAGOpjnMRb5mqtvO0wPKKCuHZJL+8=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4W4gsy50Sqz6K9Dj;
	Thu, 20 Jun 2024 21:13:42 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id 001DF1400D9;
	Thu, 20 Jun 2024 21:15:16 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Thu, 20 Jun
 2024 14:15:15 +0100
Date: Thu, 20 Jun 2024 14:15:14 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 9/9] cxl/pci: Enable interrupts for CXL PCIe ports'
 AER internal errors
Message-ID: <20240620141514.00007c6d@Huawei.com>
In-Reply-To: <20240617200411.1426554-10-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-10-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100006.china.huawei.com (7.191.160.224) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 17 Jun 2024 15:04:11 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> CXL RAS errors are reported through AER interrupts using the AER status:
> correctbale internal errors (CIE) and AER uncorrectable internal errors

correctable

> (UIE).[1] But, the AER CIE/UIE are disabled by default preventing
> notification of CXL RAS errors.[2]
> 
> Enable CXL PCIe port RAS notification by unmasking the ports' AER CIE
> and UIE errors.
> 
> [1] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and Upstream
>              Switch Ports
> [2] PCI6.0 - 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h),
>              7.8.4.6 Correctable Error Mask Register (Offset 14h)
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>

I'm not sure doing this from a driver other than the one handling the
errors makes sense.  It is doing a couple of RMW without any locking
or guarantees that the driver bound to the PCI port might care about
this changing.

I'd like more info on why we don't just turn this on in general
and hence avoid the need to control it from the 'wrong' place.

Jonathan



> ---
>  drivers/cxl/core/pci.c | 12 ++++++++++++
>  1 file changed, 12 insertions(+)
> 
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index e630eccb733d..73637d39df0a 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -861,6 +861,12 @@ void cxl_setup_parent_uport(struct device *host, struct cxl_port *port)
>  	struct device *uport_dev = port->uport_dev;
>  
>  	cxl_port_map_regs(uport_dev, map, regs);
> +
> +	if (dev_is_pci(uport_dev)) {
> +		struct pci_dev *pdev = to_pci_dev(uport_dev);
> +
> +		pci_aer_unmask_internal_errors(pdev);

I'd skip the local variable for conciseness.

> +	}
>  }
>  EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_uport, CXL);
>  
> @@ -878,6 +884,12 @@ void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport)
>  
>  	if (dport->rch)
>  		cxl_disable_rch_root_ints(dport);
> +
> +	if (dev_is_pci(dport_dev)) {
> +		struct pci_dev *pdev = to_pci_dev(dport_dev);
> +
> +		pci_aer_unmask_internal_errors(pdev);

likewise.

> +	}
>  }
>  EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_dport, CXL);
>  


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 801A81ACE81;
	Thu, 20 Jun 2024 13:11:47 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718889109; cv=none; b=m0Bb3j5Aa9OT85ywEk4/pAqI91Fu+GHuCo2A9rzlXAXGKfUxIXF/IUtq/LEBKRll8cHqzaFGgTljMSY/FXCYqQItsffthKpYB4IB84zoa8MnGj6B5mIzWbp5oZpXFK+onO9RtQ45P7lMF+mcGBgib23WyF4OkMeVTuh1UP2t+B8=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718889109; c=relaxed/simple;
	bh=KquCfc0e5jrKrmjpwVd+GhjdiZ1fZXcuvxYZaZ8SeLg=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=NKtyq8Xo+wvo0BcT3tkhzmPF5G9bORA6WVUdMs1yLfCEpz/9eC+NXxhzAzFVvq7QcysQjKuDqK2q+mR/CgCioSXxuzifUx8xkoHYD3ePQPWvwvvtN/hTWEbRAVsYt3wwVf1i9cc18atqVbE7GmwnYGUimQ7gtAK1R7QXlRuXGP0=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4W4gnt4GWqz6K9TT;
	Thu, 20 Jun 2024 21:10:10 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id CA89C14058E;
	Thu, 20 Jun 2024 21:11:43 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Thu, 20 Jun
 2024 14:11:43 +0100
Date: Thu, 20 Jun 2024 14:11:42 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>, Bjorn Helgaas <bhelgaas@google.com>,
	<linux-pci@vger.kernel.org>
Subject: Re: [RFC PATCH 8/9] PCI/AER: Export
 pci_aer_unmask_internal_errors()
Message-ID: <20240620141142.00005cf0@Huawei.com>
In-Reply-To: <20240617200411.1426554-9-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-9-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100006.china.huawei.com (7.191.160.224) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 17 Jun 2024 15:04:10 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> AER correctable internal errors (CIE) and AER uncorrectable internal
> errors (UIE) are disabled through the AER mask register by default.[1]
> 
> CXL PCIe ports use the CIE/UIE to report RAS errors and as a result
> need CIE/UIE enabled.[2]
> 
> Change pci_aer_unmask_internal_errors() function to be exported for
> the CXL driver and other drivers to use.

I've perhaps forgotten the end conclusion, but I thought there was
a request to just try enabling this in general and mask it out only
for known broken devices?

Admittedly that's a more daring path, so maybe I hallucinated it!

> 
> [1] PCI6.0 - 7.8.4.3 Uncorrectable
> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and Upstream
>              Switch Ports
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linux-pci@vger.kernel.org
> ---
>  drivers/pci/pcie/aer.c | 3 ++-
>  include/linux/aer.h    | 6 ++++++
>  2 files changed, 8 insertions(+), 1 deletion(-)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 4dc03cb9aff0..d7a1982f0c50 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -951,7 +951,7 @@ static bool find_source_device(struct pci_dev *parent,
>   * Note: AER must be enabled and supported by the device which must be
>   * checked in advance, e.g. with pcie_aer_is_native().
>   */
> -static void pci_aer_unmask_internal_errors(struct pci_dev *dev)
> +void pci_aer_unmask_internal_errors(struct pci_dev *dev)
>  {
>  	int aer = dev->aer_cap;
>  	u32 mask;
> @@ -964,6 +964,7 @@ static void pci_aer_unmask_internal_errors(struct pci_dev *dev)
>  	mask &= ~PCI_ERR_COR_INTERNAL;
>  	pci_write_config_dword(dev, aer + PCI_ERR_COR_MASK, mask);
>  }
> +EXPORT_SYMBOL_GPL(pci_aer_unmask_internal_errors);
>  
>  static bool is_cxl_mem_dev(struct pci_dev *dev)
>  {
> diff --git a/include/linux/aer.h b/include/linux/aer.h
> index 4b97f38f3fcf..a4fd25ea0280 100644
> --- a/include/linux/aer.h
> +++ b/include/linux/aer.h
> @@ -50,6 +50,12 @@ static inline int pci_aer_clear_nonfatal_status(struct pci_dev *dev)
>  static inline int pcie_aer_is_native(struct pci_dev *dev) { return 0; }
>  #endif
>  
> +#ifdef CONFIG_PCIEAER_CXL
> +void pci_aer_unmask_internal_errors(struct pci_dev *dev);
> +#else
> +static inline void pci_aer_unmask_internal_errors(struct pci_dev *dev) { }
> +#endif
> +
>  void pci_print_aer(struct pci_dev *dev, int aer_severity,
>  		    struct aer_capability_regs *aer);
>  int cper_severity_to_aer(int cper_severity);


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 617BE1AC78C;
	Thu, 20 Jun 2024 13:09:31 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718888973; cv=none; b=Rk2IFmh+hpPyhxYC3aDDFbPEAIm2+FjubJGILfpiJIWwF+zEpYkH60zBwIY+tGdOp9iSPsIZBTvxAwPMIVRlqyxRLUkL1FbvLCyTiV0Pi28x/lvmGzC7IS/Pjtaj9wQ8HYi+lNA75By8iVP9pzovc2EH9cBJXQmvArA/OlDuNlo=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718888973; c=relaxed/simple;
	bh=d9Eu+SZ3bAdSXNa3pHJ49p3tp1YO7TgnuWMIowORRRI=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=qBZyEDMRhn8zKPbzDeMUCPdQPcUoT4W1DGYuwBkL1ANz+zfP7k138r4pksnjNvOTBa2MR/Dd38oMEQlZYZbVou8LRusDJWRS28x2qdB5SPpZOAQ/9a5goNFPJrAxPqlSzY42PICWfDqzxZ062qO5EsjcSo6FmWlvvBDBVYqCEN8=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4W4gn24lNHz6JBd6;
	Thu, 20 Jun 2024 21:09:26 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id 951FA140C9C;
	Thu, 20 Jun 2024 21:09:28 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Thu, 20 Jun
 2024 14:09:28 +0100
Date: Thu, 20 Jun 2024 14:09:26 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 7/9] cxl/pci: Add atomic notifier callback for CXL
 PCIe port AER internal errors
Message-ID: <20240620140926.000029d2@Huawei.com>
In-Reply-To: <20240617200411.1426554-8-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-8-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100006.china.huawei.com (7.191.160.224) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 17 Jun 2024 15:04:09 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> CXL root ports, CXL downstream switch ports, and CXL upstream switch
> ports are bound to the PCIe port bus driver, portdrv. portdrv provides
> an atomic notifier chain for reporting PCIe port device AER
> correctable internal errors (CIE) and AER uncorrectable internal
> errors (UIE).
> 
> CXL PCIe port devices use AER CIE/UIE to report CXL RAS.[1]
> 
> Add a cxl_pci atomic notification callback for handling the portdrv's
> AER UIE/CIE notifications.
> 
> Register the atomic notification callback in the cxl_pci module's
> load. Unregister the callback in the cxl_pci driver's unload.
> 
> Implement the callback to check if the device parameter is a valid
> CXL PCIe port. If it is valid then make the notification callback call
> __cxl_handle_cor_ras() or __cxl_handle_ras() depending on the AER
> type.
> 
> [1] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>              Upstream Switch Ports
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Hi Terry,

Some comments inline.  Mostly this comes down to earlier question of whether
this notifier should be registered per device or globally. 
I think I still prefer per device, but attaching the handler will be trickier
and I'm guessing there may be some locking/lifetime issues doing that which
are avoided by a global notifier.

Jonathan

> ---
>  drivers/cxl/core/core.h |  4 ++
>  drivers/cxl/core/pci.c  | 97 ++++++++++++++++++++++++++++++++++++++---
>  drivers/cxl/core/port.c |  6 +--
>  drivers/cxl/cxl.h       |  5 +++
>  drivers/cxl/cxlpci.h    |  2 +
>  drivers/cxl/pci.c       | 19 +++++++-
>  6 files changed, 123 insertions(+), 10 deletions(-)
> 
> diff --git a/drivers/cxl/core/core.h b/drivers/cxl/core/core.h
> index bc5a95665aa0..69bef1db6ee0 100644
> --- a/drivers/cxl/core/core.h
> +++ b/drivers/cxl/core/core.h
> @@ -94,4 +94,8 @@ int cxl_update_hmat_access_coordinates(int nid, struct cxl_region *cxlr,
>  				       enum access_coordinate_class access);
>  bool cxl_need_node_perf_attrs_update(int nid);
>  
> +struct cxl_dport *find_dport(struct cxl_port *port, int id);
> +struct cxl_port *find_cxl_port(struct device *dport_dev,
> +			       struct cxl_dport **dport);
> +
>  #endif /* __CXL_CORE_H__ */
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index 59a317ab84bb..e630eccb733d 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -689,7 +689,6 @@ EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
>  static void __cxl_handle_cor_ras(struct device *dev,
>  				 void __iomem *ras_base)
>  {
> -	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>  	void __iomem *addr;
>  	u32 status;
>  
> @@ -698,10 +697,17 @@ static void __cxl_handle_cor_ras(struct device *dev,
>  
>  	addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
>  	status = readl(addr);
> -	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
> -		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
> +

Blank line probably not wanted as we want to group the status
check with the read (it's kind of an error check).

> +	if (!(status & CXL_RAS_CORRECTABLE_STATUS_MASK))
> +		return;
> +
> +	writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
> +	if (is_cxl_memdev(dev)) {
> +		struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
> +
>  		trace_cxl_aer_correctable_error(cxlmd, status);
As below - don't bother with local cxlmd variable.

> -	}
> +	} else if (dev_is_pci(dev))
> +		trace_cxl_port_aer_correctable_error(dev, status);
>  }
>  
>  static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
> @@ -733,7 +739,6 @@ static void header_log_copy(void __iomem *ras_base, u32 *log)
>  static bool __cxl_handle_ras(struct device *dev,
>  			     void __iomem *ras_base)
>  {
> -	struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
>  	u32 hl[CXL_HEADERLOG_SIZE_U32];
>  	void __iomem *addr;
>  	u32 status;
> @@ -759,7 +764,13 @@ static bool __cxl_handle_ras(struct device *dev,
>  	}
>  
>  	header_log_copy(ras_base, hl);
> -	trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
> +	if (is_cxl_memdev(dev)) {
> +		struct cxl_memdev *cxlmd = to_cxl_memdev(dev);
Just use this inline.
		trace_cxl_aer_uncorrectable_error(to_cxl_memdev(dev),
						  status, fe, hl);

> +
> +		trace_cxl_aer_uncorrectable_error(cxlmd, status, fe, hl);
> +	} else if (dev_is_pci(dev))
> +		trace_cxl_port_aer_uncorrectable_error(dev, status);

As before, why no fe or hl?  I'm sure I'm missing some spec subtlty
but a comment would help me and others avoid that.

> +
>  	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
>  
>  	return true;
> @@ -882,6 +893,80 @@ static bool cxl_handle_rdport_ras(struct cxl_dev_state *cxlds,
>  	return __cxl_handle_ras(&cxlds->cxlmd->dev, dport->regs.ras);
>  }
>  
> +static int match_uport(struct device *dev, void *data)
> +{
> +	struct device *uport_dev = (struct device *)data;
> +	struct cxl_port *port;
> +
> +	if (!is_cxl_port(dev))
> +		return 0;
> +
> +	port = to_cxl_port(dev);
> +
> +	return (port->uport_dev == uport_dev);
() doesn't add much so I'd drop them.

> +}
> +
> +static struct cxl_port *pci_to_cxl_uport(struct pci_dev *pdev)
> +{
> +	struct cxl_dport *dport;
> +	struct device *port_dev;
> +	struct cxl_port *port;
> +
> +	port = find_cxl_port(pdev->dev.parent, &dport);
> +	if (!port)
> +		return NULL;
> +	put_device(&port->dev);
I'm confused on the lifetimes. Doesn't it make more sense
to hold this until after you've stopped using it? So move the
put after device_find_child(...)

> +
> +	port_dev = device_find_child(&port->dev, &pdev->dev, match_uport);
> +	if (!port_dev)
> +		return NULL;
> +	put_device(port_dev);
> +
> +	port = to_cxl_port(port_dev);
> +
> +	return port;

	return to_cxl_port(port_dev);

> +}
> +
> +static void __iomem *cxl_pci_port_ras(struct pci_dev *pdev)
> +{
> +	void __iomem *ras_base = NULL;
Don't initialize and...
> +
> +	if ((pci_pcie_type(pdev) == PCI_EXP_TYPE_ROOT_PORT) ||
> +	    (pci_pcie_type(pdev) == PCI_EXP_TYPE_DOWNSTREAM)) {
> +		struct cxl_dport *dport;
> +
> +		find_cxl_port(&pdev->dev, &dport);
> +		ras_base = dport ? dport->regs.ras : NULL;
		if (dport)
			return dport->regs.ras;
> +	} else if (pci_pcie_type(pdev) == PCI_EXP_TYPE_UPSTREAM) {
> +		struct cxl_port *port = pci_to_cxl_uport(pdev);
> +
> +		ras_base = port ? port->regs.ras : NULL;
		if (port)
			return port->regs.ras;
> +	}
return NULL;
> +
> +	return ras_base;
> +}
> +
> +int port_internal_err_cb(struct notifier_block *unused,
> +			 unsigned long event, void *ptr)
> +{
> +	struct pci_dev *pdev = (struct pci_dev *)ptr;

I think you can use this notifier for other types of device in future?
If it's going to be global definitely want to check here that we
actually have a CXL port of some type.

It may be that via the various calls any non CXL device
will result in a safe error. However that's not obvious, so an
upfront check makes sense (or a per device notifier registration!)

> +	void __iomem *ras_base;
> +
> +	if (!pdev)
> +		return 0;
> +
> +	if (event == AER_CORRECTABLE) {
> +		ras_base = cxl_pci_port_ras(pdev);
> +		__cxl_handle_cor_ras(&pdev->dev, ras_base);

as below - one line should be fine for this.

> +	} else if ((event == AER_FATAL) || (event == AER_NONFATAL)) {
> +		ras_base = cxl_pci_port_ras(pdev);
> +		__cxl_handle_ras(&pdev->dev, ras_base);

		__cxl_handle_ras(&pdev->dev, cxl_pci_port_ras(pdev));

> +	}
> +
> +	return 0;
> +}
> +EXPORT_SYMBOL_NS_GPL(port_internal_err_cb, CXL);
> +
>  /*
>   * Copy the AER capability registers using 32 bit read accesses.
>   * This is necessary because RCRB AER capability is MMIO mapped. Clear the
> diff --git a/drivers/cxl/core/port.c b/drivers/cxl/core/port.c
> index 887ed6e358fb..d0f95c965ab4 100644
> --- a/drivers/cxl/core/port.c
> +++ b/drivers/cxl/core/port.c
> @@ -1027,7 +1027,7 @@ void put_cxl_root(struct cxl_root *cxl_root)
>  }
>  EXPORT_SYMBOL_NS_GPL(put_cxl_root, CXL);
>  
> -static struct cxl_dport *find_dport(struct cxl_port *port, int id)
> +struct cxl_dport *find_dport(struct cxl_port *port, int id)
>  {
>  	struct cxl_dport *dport;
>  	unsigned long index;
> @@ -1336,8 +1336,8 @@ static struct cxl_port *__find_cxl_port(struct cxl_find_port_ctx *ctx)
>  	return NULL;
>  }
>  
> -static struct cxl_port *find_cxl_port(struct device *dport_dev,
> -				      struct cxl_dport **dport)
> +struct cxl_port *find_cxl_port(struct device *dport_dev,
> +			       struct cxl_dport **dport)
>  {
>  	struct cxl_find_port_ctx ctx = {
>  		.dport_dev = dport_dev,
> diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
> index 7cee678fdb75..04725344393b 100644
> --- a/drivers/cxl/cxl.h
> +++ b/drivers/cxl/cxl.h
> @@ -11,6 +11,7 @@
>  #include <linux/log2.h>
>  #include <linux/node.h>
>  #include <linux/io.h>
> +#include "../pci/pcie/portdrv.h"

Why add the include?  Maybe only needed in c files/

>  
>  /**
>   * DOC: cxl objects
> @@ -760,11 +761,15 @@ struct cxl_dport *devm_cxl_add_rch_dport(struct cxl_port *port,
>  #ifdef CONFIG_PCIEAER_CXL
>  void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport);
>  void cxl_setup_parent_uport(struct device *host, struct cxl_port *port);
> +int port_internal_err_cb(struct notifier_block *unused,
> +			 unsigned long event, void *ptr);
>  #else
>  static inline void cxl_setup_parent_dport(struct device *host,
>  					  struct cxl_dport *dport) { }
>  static inline void cxl_setup_parent_uport(struct device *host,
>  					  struct cxl_port *port) { }
> +static inline int port_internal_err_cb(struct notifier_block *unused,
> +				unsigned long event, void *ptr) { return 0; }
>  #endif
>  
>  struct cxl_decoder *to_cxl_decoder(struct device *dev);
> diff --git a/drivers/cxl/cxlpci.h b/drivers/cxl/cxlpci.h
> index 93992a1c8eec..6044955e1c48 100644
> --- a/drivers/cxl/cxlpci.h
> +++ b/drivers/cxl/cxlpci.h
> @@ -130,4 +130,6 @@ void read_cdat_data(struct cxl_port *port);
>  void cxl_cor_error_detected(struct pci_dev *pdev);
>  pci_ers_result_t cxl_error_detected(struct pci_dev *pdev,
>  				    pci_channel_state_t state);
> +int port_err_nb_cb(struct notifier_block *unused,
> +		   unsigned long event, void *ptr);
>  #endif /* __CXL_PCI_H__ */
> diff --git a/drivers/cxl/pci.c b/drivers/cxl/pci.c
> index 2ff361e756d6..f4183c5aea38 100644
> --- a/drivers/cxl/pci.c
> +++ b/drivers/cxl/pci.c
> @@ -926,6 +926,10 @@ static int cxl_pci_probe(struct pci_dev *pdev, const struct pci_device_id *id)
>  	return rc;
>  }
>  
> +struct notifier_block port_internal_err_nb = {
> +	.notifier_call = port_internal_err_cb,
> +};
> +
>  static const struct pci_device_id cxl_mem_pci_tbl[] = {
>  	/* PCI class code for CXL.mem Type-3 Devices */
>  	{ PCI_DEVICE_CLASS((PCI_CLASS_MEMORY_CXL << 8 | CXL_MEMORY_PROGIF), ~0)},
> @@ -974,6 +978,19 @@ static struct pci_driver cxl_pci_driver = {
>  	},
>  };
>  
> -module_pci_driver(cxl_pci_driver);
> +static int __init cxl_pci_init(void)
> +{
> +	atomic_notifier_chain_register(&portdrv_aer_internal_err_chain, &port_internal_err_nb);

Long line that you can easily break.

> +	return pci_register_driver(&cxl_pci_driver);
> +}
> +module_init(cxl_pci_init);
> +
> +static void __exit cxl_pci_exit(void)
> +{
> +	atomic_notifier_chain_unregister(&portdrv_aer_internal_err_chain, &port_internal_err_nb);

Long line that you can easily break.

> +	pci_unregister_driver(&cxl_pci_driver);
> +}
> +module_exit(cxl_pci_exit);
> +
>  MODULE_LICENSE("GPL v2");
>  MODULE_IMPORT_NS(CXL);


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id D5A2246BF;
	Thu, 20 Jun 2024 12:53:35 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718888017; cv=none; b=daKsPfjzpEJgNnKo61RsDAPVo7/v13/PRPKYoU+tEOC55iNk7QzwLKf7+q4I9mYyz/7l21ADi3YBrOwJGC+D0kXHK8E6QrOGxu8zrzENKRYTASQb44sq0Eu5d7mPB+8S8ugidhvh8zpN4AyYjfahNeJ7b+dT6e9FM6rdyv+uhRU=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718888017; c=relaxed/simple;
	bh=7nQ+7f4wihFoFdDBGTkKhLtrG9cRzMLnguTmYW3JZzc=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=qzWGb0p5mDe4kB1WlKXTYsOwZ9R6Y+1IohpNJBVca5RCLi0mgdKWtqcMHJ16l3apVpd3/kZ5lEp+babhnQY8NbSUPqutUZoMTXxOmqYnwuvC2QPdCbBXt+2B25phNJqNmGQA8WhpxQLx/zLXQvUIslbNLJ5bxZdauEycZg1sVF4=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4W4gQG25y8z6K6xx;
	Thu, 20 Jun 2024 20:53:10 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id 94C3A1402C6;
	Thu, 20 Jun 2024 20:53:33 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Thu, 20 Jun
 2024 13:53:32 +0100
Date: Thu, 20 Jun 2024 13:53:32 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 6/9] cxl/pci: Add trace logging for CXL PCIe port
 RAS errors
Message-ID: <20240620135332.000053f5@Huawei.com>
In-Reply-To: <20240617200411.1426554-7-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-7-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500005.china.huawei.com (7.191.163.240) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 17 Jun 2024 15:04:08 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> The cxl_pci driver uses kernel trace functions to log RAS errors for
> endpoints and RCH downstream ports. The same is needed for CXL root ports,
> CXL downstream switch ports, and CXL upstream switch ports.
> 
> Add RAS correctable and RAS uncorrectable trace logging functions for
> CXL PCIE ports.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---
>  drivers/cxl/core/trace.h | 34 ++++++++++++++++++++++++++++++++++
>  1 file changed, 34 insertions(+)
> 
> diff --git a/drivers/cxl/core/trace.h b/drivers/cxl/core/trace.h
> index e5f13260fc52..5cfd9952d88a 100644
> --- a/drivers/cxl/core/trace.h
> +++ b/drivers/cxl/core/trace.h
> @@ -48,6 +48,23 @@
>  	{ CXL_RAS_UC_IDE_RX_ERR, "IDE Rx Error" }			  \
>  )
>  
> +TRACE_EVENT(cxl_port_aer_uncorrectable_error,
> +	TP_PROTO(struct device *dev, u32 status),

By comparison with existing code, why no fe or header
log?  Don't exist for ports for some reason?
Serial number of the port might also be useful.

> +	TP_ARGS(dev, status),
> +	TP_STRUCT__entry(
> +		__string(devname, dev_name(dev))
> +		__field(u32, status)
> +	),
> +	TP_fast_assign(
> +		__assign_str(devname, dev_name(dev));
> +		__entry->status = status;
> +	),
> +	TP_printk("device=%s status='%s'",
> +		  __get_str(devname),
> +		  show_uc_errs(__entry->status)
> +	)
> +);
> +
>  TRACE_EVENT(cxl_aer_uncorrectable_error,
>  	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status, u32 fe, u32 *hl),
>  	TP_ARGS(cxlmd, status, fe, hl),
> @@ -96,6 +113,23 @@ TRACE_EVENT(cxl_aer_uncorrectable_error,
>  	{ CXL_RAS_CE_PHYS_LAYER_ERR, "Received Error From Physical Layer" }	\
>  )
>  
> +TRACE_EVENT(cxl_port_aer_correctable_error,
> +	TP_PROTO(struct device *dev, u32 status),
> +	TP_ARGS(dev, status),
> +	TP_STRUCT__entry(
> +		__string(devname, dev_name(dev))
> +		__field(u32, status)
> +	),
> +	TP_fast_assign(
> +		__assign_str(devname, dev_name(dev));
> +		__entry->status = status;
> +	),
> +	TP_printk("device=%s status='%s'",
> +		  __get_str(devname),
> +		  show_ce_errs(__entry->status)
> +	)
> +);
> +
>  TRACE_EVENT(cxl_aer_correctable_error,
>  	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status),
>  	TP_ARGS(cxlmd, status),


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B04B01AC245;
	Thu, 20 Jun 2024 12:49:21 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718887764; cv=none; b=QAsWsHTaZHROtRB+Pio+GyzkGTiWhc9fps6d8tIAyVtwgG9tmaBwafKUGMLa+ML970OIttl8A0H2pRsRpoyvbaxHfiS50r0gkipcUt6e78MHeyFDAP+WS+e1RGnfLcSAwMgRhBe8WShfuRlWCOYp8+pGMg+uth8+5ISJ4OCay8s=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718887764; c=relaxed/simple;
	bh=IUvgoDslhWC9mCuSL9+lF7PxGVGHedFsWIeSGTu3G+4=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=LUkUPotDjLYOxbXDGR5kbb9l4zjfOuyCwQCBI8PhzC/nsuKi4/gtkf1Z5HJAizgy3Gv1Lle35tb+EABYJPLpg+i7BIbVsCGE6Dw1OQUDpKnMwe50XxJJVwzvim99i88wKr3wUOkjskmwtL2owzhdvHB8+u/biiqluRk6frHnRs0=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4W4gKn0R76z6JBYy;
	Thu, 20 Jun 2024 20:49:17 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id EE00F140A34;
	Thu, 20 Jun 2024 20:49:18 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Thu, 20 Jun
 2024 13:49:18 +0100
Date: Thu, 20 Jun 2024 13:49:17 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 5/9] cxl/pci: Update RAS handler interfaces to
 support CXL PCIe ports
Message-ID: <20240620134917.000056dc@Huawei.com>
In-Reply-To: <20240617200411.1426554-6-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-6-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500005.china.huawei.com (7.191.163.240) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 17 Jun 2024 15:04:07 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> CXL RAS error handling includes support for endpoints and RCH downstream
> ports. The same support is missing for CXL root ports, CXL downstream
> switch ports, and CXL upstream switch ports. This patch is in preparation
> for adding CXL ports' RAS handling.
> 
> The cxl_pci driver's RAS support functions use the 'struct cxl_dev_state'
> type parameter that is not available in CXL port devices. The same CXL
> RAS capability structure is required for most CXL components/devices
> and should have common handling where possible.[1]
> 
> Update __cxl_handle_cor_ras() and __cxl_handle_ras() to use 'struct
> device' instead of 'struct cxl_dev_state'. Add function call to translate
> device to CXL device state where needed.
> 
> [1] CXL3.1 - 8.2.4 CXL.cache and CXL.mem Registers
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
I've not looked at how it's used yet as reading these in order,
but based on the explanation and code here looks good to me.

Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>




From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 884081ACE86;
	Thu, 20 Jun 2024 12:46:31 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718887594; cv=none; b=N4ut1vTZS0sD5krCu6s5ZfLznQzeXWoXmMkd+I0XZTe6NyKpiPlaX3Iwl4WUUXoAkDv6AEaI7jGy5PPLDaFeiG4oLNb/qpjDMbB1soBCWnQdm/ObTewljMw4fVk044vZSWasHappBb3UqF2XHntTlblaj7wJEvnUtj0e/m+y9UM=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718887594; c=relaxed/simple;
	bh=+jQD1f9qOvycTAIiPSa22+PdvGePiYEyHYTZHELciIE=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=mgM5KoouBltoH+DQW7coo0oRHRgvWpdVw+KxLuyJmgjsnRa1uAbPSCySo2CILzSvwvKOielsMbkb6zjVto5ZrD5j2JJ6L1HIrZbiueMlzdmNA3P1xw/jHiw7XUNB7fkvbW+mwmszIdeSUlGeSxuCAueCrUOIY5RZ6Oda8VqyHOs=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4W4gDl0yfQz6K9SJ;
	Thu, 20 Jun 2024 20:44:55 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id C8BAD14058E;
	Thu, 20 Jun 2024 20:46:28 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Thu, 20 Jun
 2024 13:46:28 +0100
Date: Thu, 20 Jun 2024 13:46:26 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 4/9] cxl/pci: Map CXL PCIe ports' RAS registers
Message-ID: <20240620134626.00004dc4@Huawei.com>
In-Reply-To: <20240617200411.1426554-5-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-5-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500005.china.huawei.com (7.191.163.240) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 17 Jun 2024 15:04:06 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> RAS registers are not currently mapped for CXL root ports, CXL downstream
> switch ports, and CXL upstream switch ports. Update the driver to map the
> ports' RAS registers in preparation for RAS logging and handling to be
> added in the future.
> 
> Add a 'struct cxl_regs' variable to 'struct cxl_port'. This will be used
> to store a pointer to the upstream port's mapped RAS registers.
> 
> Invoke the RAS mapping logic from the CXL memory device probe routine
> after the endpoint is added. This ensures the ports have completed
> training and the RAS registers are present in CXL.cachemem.
> 
> Refactor the cxl_dport_map_regs() function to support mapping the CXL
> PCIe ports. Also, check for previously mapped registers in the topology
> including CXL switch. Endpoints under a CXL switch share a CXL root port
> and will be iterated for each endpoint. Only map once.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Hi Terry,

A few minor comments inline.

Thanks,

Jonathan

> ---
>  drivers/cxl/core/pci.c | 30 +++++++++++++++++++++++++-----
>  drivers/cxl/cxl.h      |  5 +++++
>  drivers/cxl/mem.c      | 32 ++++++++++++++++++++++++++++++--
>  3 files changed, 60 insertions(+), 7 deletions(-)
> 
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index 0df09bd79408..e6c91b3dfccf 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -787,16 +787,26 @@ static void cxl_dport_map_rch_aer(struct cxl_dport *dport)
>  	dport->regs.dport_aer = dport_aer;
>  }
>  
> -static void cxl_dport_map_regs(struct cxl_dport *dport)
> +static void cxl_port_map_regs(struct device *dev,
> +			      struct cxl_register_map *map,
> +			      struct cxl_regs *regs)
>  {
> -	struct cxl_register_map *map = &dport->reg_map;
> -	struct device *dev = dport->dport_dev;
> -
>  	if (!map->component_map.ras.valid)
>  		dev_dbg(dev, "RAS registers not found\n");

Maybe return here as nothing useful is going to occur after this any more.

> -	else if (cxl_map_component_regs(map, &dport->regs.component,
> +	else if (regs->ras)
> +		dev_dbg(dev, "RAS registers already initialized\n");

likewise, return if this condition happened.

> +	else if (cxl_map_component_regs(map, &regs->component,
>  					BIT(CXL_CM_CAP_CAP_ID_RAS)))
>  		dev_dbg(dev, "Failed to map RAS capability.\n");
> +}
> +
> +static void cxl_dport_map_regs(struct cxl_dport *dport)
> +{
> +	struct cxl_register_map *map = &dport->reg_map;
> +	struct cxl_regs *regs = &dport->regs;
> +	struct device *dev = dport->dport_dev;
> +
> +	cxl_port_map_regs(dev, map, regs);
>  
>  	if (dport->rch)
>  		cxl_dport_map_rch_aer(dport);
> @@ -831,6 +841,16 @@ static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
>  	}
>  }
>  
> +void cxl_setup_parent_uport(struct device *host, struct cxl_port *port)
> +{
> +	struct cxl_register_map *map = &port->reg_map;
> +	struct cxl_regs *regs = &port->regs;
> +	struct device *uport_dev = port->uport_dev;
> +
> +	cxl_port_map_regs(uport_dev, map, regs);

Maybe it will be used later, but based on this patch alone.
	cxl_port_map_regs(port->uport_dev, &port->reg_map,
			  &port->regs);

is more compact and I don't think looses anything on readability front.


> +}
> +EXPORT_SYMBOL_NS_GPL(cxl_setup_parent_uport, CXL);
> +
>  void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport)
>  {
>  	struct device *dport_dev = dport->dport_dev;
> diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
> index 036d17db68e0..7cee678fdb75 100644
> --- a/drivers/cxl/cxl.h
> +++ b/drivers/cxl/cxl.h
> @@ -587,6 +587,7 @@ struct cxl_dax_region {
>   * @parent_dport: dport that points to this port in the parent
>   * @decoder_ida: allocator for decoder ids
>   * @reg_map: component and ras register mapping parameters
> + * @regs: mapped component registers
>   * @nr_dports: number of entries in @dports
>   * @hdm_end: track last allocated HDM decoder instance for allocation ordering
>   * @commit_end: cursor to track highest committed decoder for commit ordering
> @@ -607,6 +608,7 @@ struct cxl_port {
>  	struct cxl_dport *parent_dport;
>  	struct ida decoder_ida;
>  	struct cxl_register_map reg_map;
> +	struct cxl_regs regs;

Does mapping the whole cxl_regs in make sense?
At least currently we can't use the pmu regs in there from here
for instance - the mess with interrupts means that has to bind
via the port driver (for now anyway).
Maybe struct cxl_component_regs is more appropriate here?


>  	int nr_dports;
>  	int hdm_end;
>  	int commit_end;
> @@ -757,9 +759,12 @@ struct cxl_dport *devm_cxl_add_rch_dport(struct cxl_port *port,
>  
>  #ifdef CONFIG_PCIEAER_CXL
>  void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport);
> +void cxl_setup_parent_uport(struct device *host, struct cxl_port *port);
>  #else
>  static inline void cxl_setup_parent_dport(struct device *host,
>  					  struct cxl_dport *dport) { }
> +static inline void cxl_setup_parent_uport(struct device *host,
> +					  struct cxl_port *port) { }
>  #endif
>  
>  struct cxl_decoder *to_cxl_decoder(struct device *dev);
> diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
> index 0c79d9ce877c..51a4641fc9a6 100644
> --- a/drivers/cxl/mem.c
> +++ b/drivers/cxl/mem.c
> @@ -45,10 +45,39 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
>  	return 0;
>  }
>  
> +static bool cxl_dev_is_pci_type(struct device *dev, u32 pcie_type)
Naming perhaps needs work to make it clear this is checking if
it's a CXL device of that type.
Also, seems like general functionality that belongs in core/pci.c or
similar.

> +{
> +	struct pci_dev *pdev;
> +
> +	if (!dev_is_pci(dev))
> +		return false;
> +
> +	pdev = to_pci_dev(dev);
> +	if (pci_pcie_type(pdev) != pcie_type)
> +		return false;
> +
> +	return pci_find_dvsec_capability(pdev, PCI_DVSEC_VENDOR_ID_CXL,
> +					 CXL_DVSEC_REG_LOCATOR);
> +}
> +
> +static void cxl_setup_ep_parent_ports(struct cxl_ep *ep, struct device *host)
> +{
> +	struct cxl_dport *dport = ep->dport;
> +
> +	if (cxl_dev_is_pci_type(dport->dport_dev, PCI_EXP_TYPE_DOWNSTREAM) ||
> +	    cxl_dev_is_pci_type(dport->dport_dev, PCI_EXP_TYPE_ROOT_PORT))
> +		cxl_setup_parent_dport(host, ep->dport);
> +
> +	if (cxl_dev_is_pci_type(dport->port->uport_dev, PCI_EXP_TYPE_UPSTREAM))
> +		cxl_setup_parent_uport(host, ep->dport->port);
> +}
> +
>  static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
>  				 struct cxl_dport *parent_dport)
>  {
>  	struct cxl_port *parent_port = parent_dport->port;
> +	struct cxl_dev_state *cxlds = cxlmd->cxlds;
> +	struct pci_dev *pdev = to_pci_dev(cxlds->dev);
>  	struct cxl_port *endpoint, *iter, *down;
>  	int rc;
>  
> @@ -62,6 +91,7 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
>  
>  		ep = cxl_ep_load(iter, cxlmd);
>  		ep->next = down;
> +		cxl_setup_ep_parent_ports(ep, &pdev->dev);
>  	}
>  
>  	/* Note: endpoint port component registers are derived from @cxlds */
> @@ -157,8 +187,6 @@ static int cxl_mem_probe(struct device *dev)
>  	else
>  		endpoint_parent = &parent_port->dev;
>  
> -	cxl_setup_parent_dport(dev, dport);
> -
>  	device_lock(endpoint_parent);
>  	if (!endpoint_parent->driver) {
>  		dev_err(dev, "CXL port topology %s not enabled\n",


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B52F91AC255;
	Thu, 20 Jun 2024 12:30:31 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718886635; cv=none; b=c1bZgsgaBDFwFud0NQMln9GO8Ftt2dBlWIBsK5ZO/zNJnWBpf3+f0ZF7T58sjPCh6u/7tRzQ4X8XXBbj4IhBO+K/XJ1Q0X9Vj9YkEcGCWRl26s3PGp6qFuonaFih65+fDwitrcTpPTKJnLZ6NCejI/q5V5dK22Mw6GvFkIt1wZs=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718886635; c=relaxed/simple;
	bh=E/tMBWgqECjSpTbCNeHEJfdD6kMr0Vd0U5MuM6NTzYc=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=C+1Njcu9sMbuNRQbIESM1jcDo1aCo63PO0b/9JkiGck3d1Z8GhwR10HvLaPzwXMUIIwIjeDNi64e1YPoQj26T7gJrWhBYFYNtvnMWHdLAzCIz2xjUazq3CdQpCuuofzfMS4sbF2P31wR73cp3IRLy6pxuvi01cIBQdd53VIEzW0=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.216])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4W4ftH3gzFz67kr9;
	Thu, 20 Jun 2024 20:28:55 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id B9D12140A90;
	Thu, 20 Jun 2024 20:30:28 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Thu, 20 Jun
 2024 13:30:28 +0100
Date: Thu, 20 Jun 2024 13:30:27 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>, Bjorn Helgaas <bhelgaas@google.com>,
	<linux-pci@vger.kernel.org>
Subject: Re: [RFC PATCH 3/9] PCI/portdrv: Update portdrv with an atomic
 notifier for reporting AER internal errors
Message-ID: <20240620133027.000047e1@Huawei.com>
In-Reply-To: <20240617200411.1426554-4-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-4-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100004.china.huawei.com (7.191.162.219) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 17 Jun 2024 15:04:05 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> PCIe port devices are bound to portdrv, the PCIe port bus driver. portdrv
> does not implement an AER correctable handler (CE) but does implement the
> AER uncorrectable error (UCE). The UCE handler is fairly straightforward
> in that it only checks for frozen error state and returns the next step
> for recovery accordingly.
> 
> As a result, port devices relying on AER correctable internal errors (CIE)
> and AER uncorrectable internal errors (UIE) will not be handled. Note,
> the PCIe spec indicates AER CIE/UIE can be used to report implementation
> specific errors.[1]
> 
> CXL root ports, CXL downstream switch ports, and CXL upstream switch ports
> are examples of devices using the AER CIE/UIE for implementation specific
> purposes. These CXL ports use the AER interrupt and AER CIE/UIE status to
> report CXL RAS errors.[2]
> 
> Add an atomic notifier to portdrv's CE/UCE handlers. Use the atomic
> notifier to report CIE/UIE errors to the registered functions. This will
> require adding a CE handler and updating the existing UCE handler.
> 
> For the UCE handler, the CXL spec states UIE errors should return need
> reset: "The only method of recovering from an Uncorrectable Internal Error
> is reset or hardware replacement."[1]
> 
> [1] PCI6.0 - 6.2.10 Internal Errors
> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>              Upstream Switch Ports
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linux-pci@vger.kernel.org
> ---
>  drivers/pci/pcie/portdrv.c | 32 ++++++++++++++++++++++++++++++++
>  drivers/pci/pcie/portdrv.h |  2 ++
>  2 files changed, 34 insertions(+)
> 
> diff --git a/drivers/pci/pcie/portdrv.c b/drivers/pci/pcie/portdrv.c
> index 14a4b89a3b83..86d80e0e9606 100644
> --- a/drivers/pci/pcie/portdrv.c
> +++ b/drivers/pci/pcie/portdrv.c
> @@ -37,6 +37,9 @@ struct portdrv_service_data {
>  	u32 service;
>  };
>  
> +ATOMIC_NOTIFIER_HEAD(portdrv_aer_internal_err_chain);
> +EXPORT_SYMBOL_GPL(portdrv_aer_internal_err_chain);

Perhaps these should be per instance of the portdrv?
I'd imagine we only want to register CXL ones on CXL ports etc
and it's annoying to have to check at runtime for relevance
of a particular notifier.

> +
>  /**
>   * release_pcie_device - free PCI Express port service device structure
>   * @dev: Port service device to release
> @@ -745,11 +748,39 @@ static void pcie_portdrv_shutdown(struct pci_dev *dev)
>  static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *dev,
>  					pci_channel_state_t error)
>  {
> +	if (dev->aer_cap) {
> +		u32 status;
> +
> +		pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_UNCOR_STATUS,
> +				      &status);
> +
> +		if (status & PCI_ERR_UNC_INTN) {
> +			atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
> +						   AER_FATAL, (void *)dev);

Don't think the cast is needed as always fine to implicitly cast to and from
void * in C.

> +			return PCI_ERS_RESULT_NEED_RESET;
> +		}
> +	}
> +
>  	if (error == pci_channel_io_frozen)
>  		return PCI_ERS_RESULT_NEED_RESET;
>  	return PCI_ERS_RESULT_CAN_RECOVER;
>  }
>  
> +static void pcie_portdrv_cor_error_detected(struct pci_dev *dev)
> +{
> +	u32 status;
> +
> +	if (!dev->aer_cap)
> +		return;
> +
> +	pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_COR_STATUS,
> +			      &status);
> +
> +	if (status & PCI_ERR_COR_INTERNAL)
> +		atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
> +					   AER_CORRECTABLE, (void *)dev);

No need for the cast.

> +}
> +
>  static pci_ers_result_t pcie_portdrv_slot_reset(struct pci_dev *dev)
>  {
>  	size_t off = offsetof(struct pcie_port_service_driver, slot_reset);
> @@ -780,6 +811,7 @@ static const struct pci_device_id port_pci_ids[] = {
>  
>  static const struct pci_error_handlers pcie_portdrv_err_handler = {
>  	.error_detected = pcie_portdrv_error_detected,
> +	.cor_error_detected = pcie_portdrv_cor_error_detected,
>  	.slot_reset = pcie_portdrv_slot_reset,
>  	.mmio_enabled = pcie_portdrv_mmio_enabled,
>  };
> diff --git a/drivers/pci/pcie/portdrv.h b/drivers/pci/pcie/portdrv.h
> index 12c89ea0313b..8a39197f0203 100644
> --- a/drivers/pci/pcie/portdrv.h
> +++ b/drivers/pci/pcie/portdrv.h
> @@ -121,4 +121,6 @@ static inline void pcie_pme_interrupt_enable(struct pci_dev *dev, bool en) {}
>  #endif /* !CONFIG_PCIE_PME */
>  
>  struct device *pcie_port_find_device(struct pci_dev *dev, u32 service);
> +
> +extern struct atomic_notifier_head portdrv_aer_internal_err_chain;
>  #endif /* _PORTDRV_H_ */


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 8616878C9C;
	Thu, 20 Jun 2024 11:31:08 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718883070; cv=none; b=VJRUzpE+Jjl7ZqlKhQWkOZ5jQ0CXTtEY5l4YLWTbYCuRvp9zNC8RR84JfCXuAad8nNBWeTYnXEFXmmstTnMQD6jsDC6nbAuMWxLvQPE2kQeQbTqhiEEyk9WS927s+tQwgW+TsBclZFHZ3AsdPxrMx+cCuPnG3In86naP9cf6Q/E=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718883070; c=relaxed/simple;
	bh=ngXGENhKJ5ubOJfWmkGWNflPB0T6h1OvqocKXTMdnEY=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=dBt6mm2cvI6BaoXC0UNnOoyPz1lFo7MQMlM0BIBhWNIq2EcZWCQFuSJJBDI/fObtFJWh9IpEUDwEPg+I0/qxtu0ZWUIOoR51EQWrax/8ChZWOOCpI+1X/b1mQvw1MDsUb6EhEAaA7T4fmKoMqouv9fgZNfcGgp0MDBdZ980YvYk=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4W4dbX34SNz6JB7h;
	Thu, 20 Jun 2024 19:31:04 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id 2D3C31400D9;
	Thu, 20 Jun 2024 19:31:06 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Thu, 20 Jun
 2024 12:31:05 +0100
Date: Thu, 20 Jun 2024 12:31:04 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>, Bjorn Helgaas <bhelgaas@google.com>,
	<linux-pci@vger.kernel.org>
Subject: Re: [RFC PATCH 2/9] PCI/AER: Call AER CE handler before clearing
 AER CE status register
Message-ID: <20240620123104.000029cf@Huawei.com>
In-Reply-To: <20240617200411.1426554-3-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-3-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500002.china.huawei.com (7.191.160.78) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 17 Jun 2024 15:04:04 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> The AER service driver clears the AER correctable error (CE) status before
> calling the correctable error handler. This results in the error's status
> not correctly reflected if read from the CE handler.
> 
> The AER CE status is needed by the portdrv's CE handler. The portdrv's
> CE handler is intended to only call the registered notifier callbacks
> if the CE error status has correctable internal error (CIE) set.
> 
> This is not a problem for AER uncorrrectbale errors (UCE). The UCE status

uncorrectable

> is still present in the AER capability and available for reading, if
> needed, when the UCE handler is called.

I'm seeing the clear in the DPC path for UCE. For other cases is
it a side effect of the reset?

> 
> Change the order of clearing the CE status and calling the CE handler.
> Make it to call the CE handler first and then clear the CE status
> after returning.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linux-pci@vger.kernel.org
Seems reasonable, but many gremlins around the ordering in these
flows, so I'm to particularly confident. With that in mind.
Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huwei.com>

> ---
>  drivers/pci/pcie/aer.c | 7 ++++---
>  1 file changed, 4 insertions(+), 3 deletions(-)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index ac6293c24976..4dc03cb9aff0 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -1094,9 +1094,6 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>  		 * Correctable error does not need software intervention.
>  		 * No need to go through error recovery process.
>  		 */
> -		if (aer)
> -			pci_write_config_dword(dev, aer + PCI_ERR_COR_STATUS,
> -					info->status);
>  		if (pcie_aer_is_native(dev)) {
>  			struct pci_driver *pdrv = dev->driver;
>  
> @@ -1105,6 +1102,10 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>  				pdrv->err_handler->cor_error_detected(dev);
>  			pcie_clear_device_status(dev);
>  		}
> +		if (aer)
> +			pci_write_config_dword(dev, aer + PCI_ERR_COR_STATUS,
> +					info->status);
> +
>  	} else if (info->severity == AER_NONFATAL)
>  		pcie_do_recovery(dev, pci_channel_io_normal, aer_root_reset);
>  	else if (info->severity == AER_FATAL)


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A73621AB52F;
	Thu, 20 Jun 2024 11:21:48 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718882510; cv=none; b=oh1zh6Y7eZjwglBoQq+X2081GoRB1qs/5r/wXdO8uBX18HRtPDf9jHDo5TtxRmiO0L/LW3tNGBOsVrFQZJWAO1oST+viq73C28kD0aNmflfWHb/iiZYJbACeijMWSWycHC3y7acIE1ABVKveULDJ8tkcgomTMi16Mtb2BWIVh5M=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718882510; c=relaxed/simple;
	bh=U0kwcyz9v99F81JpNcMNKchuWwka57MsNC+7Ka7V14s=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=OfVzUqzu0UVceAUf6fk9u33vIHGIKP0R+fQIRlR7itpeSXIqUSM2DFYxKWVlHiXMLjcxltmJuMmWkPHaLu9kVmNoVyPNHPwY3qOM+6mR2wnDcyj8ty4mJxclfOHXZmRY4TQUpnH6/1L/mynWP3nJjr5W0rq36IT0trXiQLG33jo=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4W4dNm1v3sz6JBHX;
	Thu, 20 Jun 2024 19:21:44 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id F4059140D1D;
	Thu, 20 Jun 2024 19:21:45 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Thu, 20 Jun
 2024 12:21:45 +0100
Date: Thu, 20 Jun 2024 12:21:44 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>, Bjorn Helgaas <bhelgaas@google.com>,
	<linux-pci@vger.kernel.org>
Subject: Re: [RFC PATCH 1/9] PCI/AER: Update AER driver to call root port
 and downstream port UCE handlers
Message-ID: <20240620122144.00000faa@Huawei.com>
In-Reply-To: <20240617200411.1426554-2-terry.bowman@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-2-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500002.china.huawei.com (7.191.160.78) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 17 Jun 2024 15:04:03 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> The AER service driver does not currently call a handler for AER
> uncorrectable errors (UCE) detected in root ports or downstream
> ports. This is not needed in most cases because common PCIe port
> functionality is handled by portdrv service drivers.
> 
> CXL root ports include CXL specific RAS registers that need logging
> before starting do_recovery() in the UCE case.
> 
> Update the AER service driver to call the UCE handler for root ports
> and downstream ports. These PCIe port devices are bound to the portdrv
> driver that includes a CE and UCE handler to be called.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Cc: Bjorn Helgaas <bhelgaas@google.com>
> Cc: linux-pci@vger.kernel.org
> ---
>  drivers/pci/pcie/err.c | 20 ++++++++++++++++++++
>  1 file changed, 20 insertions(+)
> 
> diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
> index 705893b5f7b0..a4db474b2be5 100644
> --- a/drivers/pci/pcie/err.c
> +++ b/drivers/pci/pcie/err.c
> @@ -203,6 +203,26 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
>  	pci_ers_result_t status = PCI_ERS_RESULT_CAN_RECOVER;
>  	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
>  
> +	/*
> +	 * PCIe ports may include functionality beyond the standard
> +	 * extended port capabilities. This may present a need to log and
> +	 * handle errors not addressed in this driver. Examples are CXL
> +	 * root ports and CXL downstream switch ports using AER UIE to
> +	 * indicate CXL UCE RAS protocol errors.
> +	 */
> +	if (type == PCI_EXP_TYPE_ROOT_PORT ||
> +	    type == PCI_EXP_TYPE_DOWNSTREAM) {
> +		struct pci_driver *pdrv = dev->driver;
> +
> +		if (pdrv && pdrv->err_handler &&
> +		    pdrv->err_handler->error_detected) {
> +			const struct pci_error_handlers *err_handler;
> +
> +			err_handler = pdrv->err_handler;
> +			status = err_handler->error_detected(dev, state);

This status is going to get overridden by one of the pci_walk_bridge()
calls.  Should it be kept around and acted on, or dropped silently?
(I'd guess no for silent!).

> +		}
> +	}
> +
>  	/*
>  	 * If the error was detected by a Root Port, Downstream Port, RCEC,
>  	 * or RCiEP, recovery runs on the device itself.  For Ports, that


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-BN8-obe.outbound.protection.outlook.com (mail-bn8nam11on2083.outbound.protection.outlook.com [40.107.236.83])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 6045D155CBF;
	Wed, 19 Jun 2024 15:41:01 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.236.83
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718811662; cv=fail; b=XneFDpyCEhyschslBPQTGJH6cm+wf0bZu7qgWmfFDPUaoxn1ZhIyVN3mqqcSuz9k/pxULiv8iDReOdbj2rAqSQx8QMb/VlY1bVnkCaL7Dr4bHRFlsgDQC6Lw60S8U12SKDLBfz5rNMD6nD0hNno1UTL+OYuLZET5mdZG82dZcPE=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718811662; c=relaxed/simple;
	bh=mcIWdL0zqdhnyVXd76kAlfSoSPHxxWoKQ2wSzy55Fhs=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=A1/cqi8ew5riK6wiraiOIIm4olGkBwZ6mMClw3HAznXnoD9Utze5OVggdLNQajj+oehW87sYQG58rBf8NvcrmFRak8a0Nf8dKUroaemQcIDnkIazUgTH1C9xf9bjioEOfbFXQUXvLrO+e7/T5btpTtDwjTek8SiG3H/G8Zsfpu8=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=Psw/vtUU; arc=fail smtp.client-ip=40.107.236.83
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="Psw/vtUU"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=HJHusd7+EwAI+O6Q7viBMEDKmvUHaHzpRnLmyPUZa9EpP80ky28x6JW2Mb7eN40ZlnOKejmsiUsUn7NK/yQ923dgOrnrvkRhZ6BiuI42ITUY2J0dZaIhrYBc6XE7Ijy5UJ9uUZCG6SQJGzvIgL4IrJnYoadhS0R5ZXtnwfNBODADEpTjI8jrRLFNGfnJUw8/VJxzeXsFfzxm2RRbzuu0daLEALd6wHWyBLRlpEYPILo/dWyfVIUHlgdZOSZwVmFJQV4gUBnx4adxA2u34+kdzt0RPS31yNT29NpavAJdsacRTeOP2jRRujge7mw2/n6bVkF3nVlQ6f4Ku4t/QlIvkQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=YZdGZzl6Wx+MmBEjtYlkLhuojY8Z/8XUmKX9Ii5MgOE=;
 b=NbAW3CLP+tshO864YLIVfGJPl+UbCk9QTry+p//YjOKIsBq5AxsJal1AqCM0z0AP7geEu7bzlGjMb66tVTB5SWnHn7oOJK0VoDSHqRfTfHYlHsTDDAOov5jgTuRnqkjXvb79OyG+9mWg2q7C/ZEYQdD0mJ8NDqMkgWJQR9Bf9l3k8lfo8mZa8NL4J8Cs+hh0meulFbNZh3ARQOkzmSSJw4mJwbKmYM0VBsr1Lnj9ZokshOqGMnEscslzWmrvdrjuy6vnIAaNxlgWGz/xhmG0ltU9YIKJlcyMCiZ1agifSHLwCwpIZDNENF42ZfgnNwHNCmxbTXRsHdBfMZXHmFAolg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=YZdGZzl6Wx+MmBEjtYlkLhuojY8Z/8XUmKX9Ii5MgOE=;
 b=Psw/vtUUQxN1JYAPK91TmyOG2CFBejEqBXoPvlMquU+9XJCLkpIVu/cu5wxkoGlQiVBXaxz0gTSqvuo4R/ZS0NdmIOqHZhcd67Lh1DT8hR5YoRCukY7bO3AGJMnre2znhMplwzKTd8XPsM2CzyLi/6E00BU9Nc/G/uAlE3P/Jw8=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 IA0PR12MB9047.namprd12.prod.outlook.com (2603:10b6:208:402::8) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.7698.19; Wed, 19 Jun 2024 15:40:54 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%7]) with mapi id 15.20.7698.017; Wed, 19 Jun 2024
 15:40:54 +0000
Message-ID: <60fd4ef4-2fea-4836-a5d3-94481a61226b@amd.com>
Date: Wed, 19 Jun 2024 10:40:51 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 8/9] PCI/AER: Export pci_aer_unmask_internal_errors()
To: Christoph Hellwig <hch@infradead.org>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, ming4.li@intel.com,
 vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
 Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-9-terry.bowman@amd.com>
 <ZnKEJd44ItoL67_s@infradead.org>
Content-Language: en-US
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <ZnKEJd44ItoL67_s@infradead.org>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SN7PR04CA0011.namprd04.prod.outlook.com
 (2603:10b6:806:f2::16) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|IA0PR12MB9047:EE_
X-MS-Office365-Filtering-Correlation-Id: fa07c13e-c19c-44db-b1cc-08dc9076347d
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|1800799021|366013|376011|7416011;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?aE45NFJON3Fna2lkVGIwK3Y3aGZSdjUrTTQwZnd4bjlXYmVqVk9JWkxSdm55?=
 =?utf-8?B?dC9Kc0daejF4SkdaOEx6NHdQbm0xVk41UHFzbVpLR0oyWkt4eG8yOS9QS2dF?=
 =?utf-8?B?alhnU0dFRk45Wlk2NU9mRlZ1bE9Ncm1oTnpTL3pvVXg4ODFJSWRxU0gvWUh1?=
 =?utf-8?B?SXlFYnVmSCtiaWh0UjlSdEFzWXBKcmFnRnFNcHNla1ZnZThnV0RtaHBKanF1?=
 =?utf-8?B?WVFOb3kzYW5UTWlzWkdyNE9HSW40NGExRm1aSnNSeVdMR3QzK0w1anUvQktK?=
 =?utf-8?B?Nkw5UTdHQm40ZitKVG4xT2gvaFdRTmY3V25YV29UcWx4cXBUR3JOeVZuVjFn?=
 =?utf-8?B?SFdFdmdjY0Vyc0tJWWMrbmNBeXFDRnd6bDZzTkRaSklyZ2JOWlJJdjdmWldY?=
 =?utf-8?B?ZFBhaUhkSW04OVNubldZbGVaV3hQOFdyOWc2Y1JjZDZxU3FZNTRoTUI3NExu?=
 =?utf-8?B?Q2ZGdXZyZlBRaG9TMXBKUXhtaUVGZjJDdFg1TFlZQ0hpTVFUZnZpT3pOYTFW?=
 =?utf-8?B?a0J1V1NRTzBZcjZWZzcydk9kY1hsaS9SUjFnMWJvSU4vMExjNUFiZ0QvYlVm?=
 =?utf-8?B?TmV4dTdkUjR1NVRmcWYxQ1N6R0M0WlhubEFSdGNxVVZRdFd4RU9PZ3lwVHBu?=
 =?utf-8?B?bU1FVHdrQXprNnNNVjM5RHRqRWRGbWMxK2NLaWxITFRQV3JvVWVvVHNCRXpj?=
 =?utf-8?B?ajdrKy9xc1BTcG1zWmIzSk9SZ0JxMnRoKzcvQitTL1p5K2YvVFBYanVpZkFz?=
 =?utf-8?B?ZFRwMEJ6bDFuaHVGR0VybHRFWjZ6Y3RQRFI0aUY0NFdXbC8yNG5WcFVTYUdn?=
 =?utf-8?B?SXl5ZG5UdTBiaU5vekpQRG1JNGZsNVFaRUxEb2tsU05TYVRJSm0yQXlEQ0JN?=
 =?utf-8?B?eDB6YTBNb3BjeFh5UTRvbGdVOGEyZnE0YnluZDJXanE1c3pqd2tocGxlOGZj?=
 =?utf-8?B?RUVRdVVzZVhSVmNnSUZXQytQRy94NEM0SEtEMFdFM3l3Z0M3N0FsNjQ5cW9K?=
 =?utf-8?B?V3ZuNkpITnFHNDVtZ1FqbUdYemFWcllGb3Y0SGJ0eDhTcHJzdSs2bjdvZEJw?=
 =?utf-8?B?RldmODRqT2R6NVRNMDhYamtwWnR4OEc0eWNIVElHZnhWSnhESkpOT1VNTmUw?=
 =?utf-8?B?Q0syWkM0TllQbjRudGZaZEVVb3gxU1p2aUgxYTN3aTRlS2wwRTI4cHJJaXB0?=
 =?utf-8?B?VnEwOHBXR1JEa0YwQ2syYXl4TjVwK0ZZUVFUN0FpSmJBYjNkMXpzK3NSRE9n?=
 =?utf-8?B?cnJwTk81T0JPNDEzelJMeUVTNXlsUjlyei90TDZzSmJzZmh5ak13SnU1R3oy?=
 =?utf-8?B?Mzh1SVVDMDNaVnVyUURHeEg4SHZvR094NHlTdGU4Tm9mTHQzUWRWWGovSGht?=
 =?utf-8?B?QVoybWFXaTRLaWJWK3dQUkEzckxDK09nbkMvZk9FSkw4ZnBKRzQ2eDFLalk5?=
 =?utf-8?B?NEZOaTlxWHpmNFRWRGNnUElKQ2FEdWMxR3h2RDkvblBEY01adUQ4d2VseXNj?=
 =?utf-8?B?VWlOT1EzQ3pKbTd2dnpqT2Fvc1JmeGlxU2hreUtnYzZndmZwM2EyMGl3Wk42?=
 =?utf-8?B?cm5TRkU4bEtWQ0YwUkpTSG9rZlJCdWtKVGorMVUwYVBSWkwyM0FYY2o3NHJz?=
 =?utf-8?B?MzdFaEdGVElvQjF6TksrZEo3TnNsU3gwNGI1ampVVlVkdDRWdTBPNVErTkRj?=
 =?utf-8?Q?veUNCWZDLMt0FRkWSyQZ?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(1800799021)(366013)(376011)(7416011);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?K0xyWllneDI2UFNDVW1iMWZBajVqK3IrTGprQnBOMFF3cWNxSjY4Vzh5MXBN?=
 =?utf-8?B?WnQ3OWVORDBxLzVsbi9wanRUVnJRYksxYUkzUy9IM2RBSTMwdC80dWNiMnp3?=
 =?utf-8?B?OCtIak5UT2RKdnQ3c0x4ZkdkS2cxUERDcS9yYVh5SkFIYUI5Rmg4eVM3VDFx?=
 =?utf-8?B?STdlMlVINXBtVlRqakowYlpsL2FLRktQU2pNY1ZndzU4S0tnR0l2WjlPeEwr?=
 =?utf-8?B?K2dDTW5jM1R1MVMwcjhLYWJYSU1FUERhKzVKblBDRmRGNHZHR1BhelpURC9T?=
 =?utf-8?B?SUVPQ0h4Q0toZTNRS0FHdjBLSUF1Q2wrbmtWdWlZYVQ1U2kxZExrWDdHUm1l?=
 =?utf-8?B?dTY4R3VYNzhnYlRXdDZaWXF0MGNGbVlJdnpMZ0N6UzJNQk1qektaYXFBWFl5?=
 =?utf-8?B?MFpXSk0yTGpCOUEvTjBMKzFHQlRVNzhWa01zUXZoV24xbm4yVTdOWjdndzFr?=
 =?utf-8?B?MXY3bXgwRE9BMks2MlR5dVNvTW1OQXJSZm1CWS9DYndsWnJFL0pDZXQzSGVx?=
 =?utf-8?B?UjlNTUJ4WjBMVUxCQzVsVnBoME9sMXNYTUNpa2pDeHUrTjJqN0pZUWhmZlg4?=
 =?utf-8?B?ckJ3WVcvTDlYQ0h6eWZ5elFRUnBsRnNIRmRIdml2dFZJNTlIeXZpQXZuQVE3?=
 =?utf-8?B?cmkwRUM1VGQvays1eDJOZzVnbmhRSVh3NUJSWlgxdEJjMGxPK0xMaVIyOUh1?=
 =?utf-8?B?SGhsZXRMSGF6TjV5YU52ZjVUdzJEZFo0YzkrbGZDQk1nNXRZa09uWWJ4SlRJ?=
 =?utf-8?B?OXpSN0pWVkw5VklFaWE4TVhuOUdQVlM1YkZmbmpqbmZZWG83OFNkV0MxUlNw?=
 =?utf-8?B?anYvM0FKNkdJMEtXTG9KT1o3YnBKdy9JRkp6UWZONi9pdjhGTlFHYndPcDB3?=
 =?utf-8?B?cmJBTVVUSE9OaVlWVGw3TFE4MmhTbHY4VVY2QXdoRjMwT2VBWDhVQ28rKzV3?=
 =?utf-8?B?UTFMNlhja24zeGU0ek5GVTlMV0JHanpQTjYzak9VeW96V3orakYzMWJJdExw?=
 =?utf-8?B?emVmb3cwMlBGMnpGTVhyc0VkS3llM1dySGh2OHZzL1JSSG15WkU4dU1BWHA5?=
 =?utf-8?B?Wi8zQ2ZYdGV1eHdvY1hhQ1haaENTQnI0WlhaTTF2UUp0ektta3ptZnlNVlB1?=
 =?utf-8?B?d1BJaEpyV2xTZnhxckVqNjhHTjZ3Mmw5UVEwcXV4YUhCU0c5a09nZm9lRnFS?=
 =?utf-8?B?WVpnYTVobGVQVmlKdnZCcHNxV202Z2NWaVhTTVp6eE92Y2lMVHJWYXRqTGdz?=
 =?utf-8?B?a1NISytxaUpvRGRlblRGV25oM0dRZWJCR2tFSzBVR1hVbTVKOWwwQmpyRUp2?=
 =?utf-8?B?M0Q4MEs0R2JtcHErbkJ1aFBRQkZTS0hIc282MThtKzlqOTFva1lsWUJaMStw?=
 =?utf-8?B?SW1uZkYvaTQ2VzFxUHpNei9JclVFQkdHUG9JUzh4b0tyRFpiT28zaU1FekM0?=
 =?utf-8?B?eStDdWkrc2t1TmRGK0JtdVpQcmhPL0NOMzU0dXNZN3hVL1ZJbEpnSE5scnpD?=
 =?utf-8?B?ck1VZE1QL3hkVWVLeVNRT2VwcFlzaXJuS0NORXJkMURNNmlZc2t4anZWeDZw?=
 =?utf-8?B?YXRLUGJTalVPYk43WkxKZ2ticGRZdVgvL1ZNQTdVN3Y2RjBQYmwrdGRVS01x?=
 =?utf-8?B?dEtZUFN4YllvdWxJTlF1cjFSUDU5YjJDRlZveE1mVERvbkNMTk1pUXVQbWRR?=
 =?utf-8?B?YVVhQndrcFVYYU9OVEhWNCtPUkN3eFRpOGZCT3J6VWVzc3hmaCtFRE4wVmxq?=
 =?utf-8?B?UTN5aVRRQVZyQWZIUjZHcGoxdjZ4dTdvWTRVRkR6OUpNbVVzV0dkb0p0L2hk?=
 =?utf-8?B?SUxCL1V4QUFpK1FjQ2xJNDhWUHdJL2JMbUtFZWZjdUtRdFFUOUpaSTdqbWxK?=
 =?utf-8?B?QVJGcTBrWVBRYnoxQUM2VkVoRkVnK2xWOWNIRzhxcU1mSWtQbnBGY0M3SjRz?=
 =?utf-8?B?UnR1QWlCdUZjNDdNR2pNTTY0ZDFXN1lpR3FwWk5QWFBFcG9BM0ZEbTcrS2dX?=
 =?utf-8?B?Vnc1NTFPc3dBMGVqSFhzeG9aZHFlbzhtSng1Q25UZVJxRVA4N2xuMXBFVkJx?=
 =?utf-8?B?MVErS00wWHp2Wi9UUGt6bDV4WjVKaEszeHVRSmRwb0JwYm5vZElZbEV0clZN?=
 =?utf-8?Q?DLhWMrzS0SRxEpmihhvjPqGFu?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: fa07c13e-c19c-44db-b1cc-08dc9076347d
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 19 Jun 2024 15:40:54.3492
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: qg33NNAl6kzSal+Rsn+ypJnPIp225xaRN38Ax925qaelePFp1c+gKVfRSOy1Milxf0qi5JROfd+WHiYzJVI2lw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA0PR12MB9047



On 6/19/24 02:09, Christoph Hellwig wrote:
> On Mon, Jun 17, 2024 at 03:04:10PM -0500, Terry Bowman wrote:
>> AER correctable internal errors (CIE) and AER uncorrectable internal
>> errors (UIE) are disabled through the AER mask register by default.[1]
>>
>> CXL PCIe ports use the CIE/UIE to report RAS errors and as a result
>> need CIE/UIE enabled.[2]
>>
>> Change pci_aer_unmask_internal_errors() function to be exported for
>> the CXL driver and other drivers to use.
> 
> I can't actually find a user for this.  Maybe that's because you did
> weird partial CCs for your series, or maybe it's because you don't
> want to tell us.  Either way it's a no-go.

The use is in the following patchset (9/9) that missed being shared with 
PCI list. If there is rework I'll fix so both are sent to PCI list.

https://lore.kernel.org/all/20240617200411.1426554-10-terry.bowman@amd.com/

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from bombadil.infradead.org (bombadil.infradead.org [198.137.202.133])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 8B41B6139;
	Wed, 19 Jun 2024 07:09:29 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=198.137.202.133
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1718780970; cv=none; b=WR5PI79y7xJEu8dcm/7jHwKQ36r1yIqBBLIdS2fiX5I7TmY9oh8KxDWPH5xu8odeq39Q8h/AJZa9kKmVZsNDEF1Kq6JNPLEyIAvf34fXEz48OSJY0kRxjCwj7xPHaaXx7BbNX3oO+4xLe2LYArBcREr91IZFv9fo4yKWoP+3UDI=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1718780970; c=relaxed/simple;
	bh=9Hi2MN0LHR2BsieKkb/s4ZNHlzXVjUMfLEi1PGQCRJE=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=coCe8DIoiXpWGM5CfC1QpGA1QzbHR1+BYb61PiJEOLGfrC9sJ7Oax6+TMpE+XDkg3MptDk0Ucm6mGBmf9TZ1dLEstVi/tR+6qfpuLK2rh5E9oXIqF4GK3gmxrkwZbYhRE/8DQsEUcxUO5yR/FCeecHy3V2xjwRmPegH/2WnfGcs=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=infradead.org; spf=none smtp.mailfrom=bombadil.srs.infradead.org; dkim=pass (2048-bit key) header.d=infradead.org header.i=@infradead.org header.b=g1X5ujbE; arc=none smtp.client-ip=198.137.202.133
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=infradead.org
Authentication-Results: smtp.subspace.kernel.org; spf=none smtp.mailfrom=bombadil.srs.infradead.org
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=infradead.org header.i=@infradead.org header.b="g1X5ujbE"
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=infradead.org; s=bombadil.20210309; h=In-Reply-To:Content-Type:MIME-Version
	:References:Message-ID:Subject:Cc:To:From:Date:Sender:Reply-To:
	Content-Transfer-Encoding:Content-ID:Content-Description;
	bh=Uicb13uQbVx+qFV6jtZ9WDTbAMdHnx2Ja3RWRg58IJw=; b=g1X5ujbEju4tIR9DcEcnM2sPc6
	as6V32vyl0ZUWoyeSlh5NrN3qsL3nn3HTv+QF71blQkM9p+sWDud/A/reY8tn3AEZRFcqeWAaRhhl
	e5009BXq8c6DgfJyBh46j4TC7Uml1CjPFKNoFfvIxQ8ZKc4hOqmfDSPAUjaSnAhZdl9/7GYE8BytG
	PJGrA5xb/HvVS7CS3vHy8pt/4u6WwZadrr14/LerDHhvGi7DDNqkzF4X9jP5K0gvSGnwfrWZhJesF
	WwTSx2BMT48Gmu3imUD8mpzsZMDh3cmuddXFveaXknGnBOOJVqpBUJ1uQuM+6tVJp4sEWCMy5/qaT
	U88TbtOQ==;
Received: from hch by bombadil.infradead.org with local (Exim 4.97.1 #2 (Red Hat Linux))
	id 1sJpRd-000000008oz-2TMM;
	Wed, 19 Jun 2024 07:09:25 +0000
Date: Wed, 19 Jun 2024 00:09:25 -0700
From: Christoph Hellwig <hch@infradead.org>
To: Terry Bowman <terry.bowman@amd.com>
Cc: dan.j.williams@intel.com, ira.weiny@intel.com, dave@stgolabs.net,
	dave.jiang@intel.com, alison.schofield@intel.com,
	ming4.li@intel.com, vishal.l.verma@intel.com,
	jim.harris@samsung.com, ilpo.jarvinen@linux.intel.com,
	ardb@kernel.org, sathyanarayanan.kuppuswamy@linux.intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
	Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
Subject: Re: [RFC PATCH 8/9] PCI/AER: Export pci_aer_unmask_internal_errors()
Message-ID: <ZnKEJd44ItoL67_s@infradead.org>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-9-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20240617200411.1426554-9-terry.bowman@amd.com>
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by bombadil.infradead.org. See http://www.infradead.org/rpr.html

On Mon, Jun 17, 2024 at 03:04:10PM -0500, Terry Bowman wrote:
> AER correctable internal errors (CIE) and AER uncorrectable internal
> errors (UIE) are disabled through the AER mask register by default.[1]
> 
> CXL PCIe ports use the CIE/UIE to report RAS errors and as a result
> need CIE/UIE enabled.[2]
> 
> Change pci_aer_unmask_internal_errors() function to be exported for
> the CXL driver and other drivers to use.

I can't actually find a user for this.  Maybe that's because you did
weird partial CCs for your series, or maybe it's because you don't
want to tell us.  Either way it's a no-go.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-yb1-f170.google.com (mail-yb1-f170.google.com [209.85.219.170])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 7A993188CD9;
	Mon, 19 Aug 2024 18:35:20 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.219.170
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1724092522; cv=none; b=iQwFTTXHBNXNfEgj3Y3ATqo+TGSuhJVTYBMIOqevpf/msSxbfEqJ+uJPnvxt1iZlvlQ1fxhEt4RC4iap7Qnsf0cyoOjl/VG5pzn1UXHB8XhldBDLl3ASN3CHU0SGCgwdZ7dusbmP1SipuVBT/TyrWodOoCUh0X/waw7sa2b+sko=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1724092522; c=relaxed/simple;
	bh=qN25ESiBluW/Wgf7nnUMEGNcqsWMOVJegLeAlewK/VM=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=gK9iiaHok2TTMlHplEKwXyMd+DOs1n6STI7etfZP+Buay2IlTHCo4Yd94UdWauPp53CR4CY3sNISyvqvtoV/Ut6KrRLkn3Yz/t6okpIgUeTFOuDKe+4CFFCbVnHF4OVWdnCLmSPs13+07Zo0vhGEscKWm7Dc6IGQRzBEze6Qqgw=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=ZT5metu4; arc=none smtp.client-ip=209.85.219.170
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="ZT5metu4"
Received: by mail-yb1-f170.google.com with SMTP id 3f1490d57ef6-e03caab48a2so3392735276.1;
        Mon, 19 Aug 2024 11:35:20 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1724092519; x=1724697319; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=SYH3TQeVTTY68Kyifj6Lhi9y33FdIk3s3eh/aNh8/P8=;
        b=ZT5metu4fisNshzO8bdO9LG40gGB0MlLmfAbKmpmCTiFQzOrQ6WzeOD56wb0yAMlMx
         GVr2mVigApqvyTFxlX4E/5wUgxzleCqUC02J9YultePE2HNwXXjP1uW4bpOOe4/3xE0N
         6UhlxCWPTWMMDKacPEJvBvEMMu9NAcEs242VWqHOSq5qoM9TxTGqlJzO8UVkOIrd2+IQ
         pp/qRbvKIyQIpz2Ebu/yrgwdLg1Klok2Am2fkBD96Fd8tYFe5D7Ake8w2nuBM1uReNC2
         HWU01Vi6BGmUmi6Z62ugV0JLyXT5jz6C48ak7YlK5fR1TjtQABTBRv2addL+8s/oBlk2
         B9UQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1724092519; x=1724697319;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=SYH3TQeVTTY68Kyifj6Lhi9y33FdIk3s3eh/aNh8/P8=;
        b=CrnUZm+XgxPBkaBbFi1rZqp9wBHX2siawTsIkGWbO5tewF/78up1lgdhVj4kjJPsXL
         njx7+lAgXTYHTPUCBLAbIGXZ9KiKdsom216iU0Ha/lA3z4sUG7uz//sDLBxnpJFBDtsc
         5hDRJbjEV8I1wch28oChMmahD8zKArYxiWwVbPng9wzl9bFYWLWaIeWgmUQPFxfECk6U
         ikrWi1H34Bt5DMJM3FctXKvwyu59icOlCqwUqcVDouZMaMhfLDy7wkl2rofiPpdJnQJC
         sdwniSqh74yGF6JWJ5y3eacsbJR46rCNL5dHSYkl+02n1LBmSVklCgkPiivyprmxwoYQ
         U39A==
X-Forwarded-Encrypted: i=1; AJvYcCUeeqKjCnqkCrQlrqshh6zgOEiCNA+cyz6EOCZTQYu+QrpUVwaozoGVenaRBRFGvZK29iiEDdH7u/8=@vger.kernel.org, AJvYcCWNAVIlAriw1JeqD6ttReCsrdeymMcF7CFjNNR6YzF9N4L6O5Oz3UdvSi7pJ8NWnU75oaIR4+tsr2KB@vger.kernel.org, AJvYcCWiPf+rgorjgVVoRRyC+jHhwLXnh7Q9BjZRD6sYc1XLCPVbXTJ8AZsTiqnN2Z1FCzQVsAyHvp0W/h3ZHONH@vger.kernel.org
X-Gm-Message-State: AOJu0Yw+7nM0kYb8fk25NyFuGSyFFzhZfXuzIyrl/z7niwO4FjB8D5Px
	3TnTHlbuYAfLNtpB8P1PUlb3dRZ2AYTBOO74eFb3nk4PC7FCLs1p
X-Google-Smtp-Source: AGHT+IHJ4yX6twOUj+yvQhYg9lvd7DEHA7ViXOMbSjRZ2dxNnD3umeQUVsbdUZjFH0URzjCEzKV38Q==
X-Received: by 2002:a5b:74b:0:b0:e11:44b9:6bc5 with SMTP id 3f1490d57ef6-e164a9a7865mr460329276.22.1724092519398;
        Mon, 19 Aug 2024 11:35:19 -0700 (PDT)
Received: from fan ([50.205.20.42])
        by smtp.gmail.com with ESMTPSA id 3f1490d57ef6-e1172008bdfsm2167805276.51.2024.08.19.11.35.17
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 19 Aug 2024 11:35:18 -0700 (PDT)
From: Fan Ni <nifan.cxl@gmail.com>
X-Google-Original-From: Fan Ni <fan.ni@samsung.com>
Date: Mon, 19 Aug 2024 11:35:15 -0700
To: Terry Bowman <Terry.Bowman@amd.com>
Cc: Dan Williams <dan.j.williams@intel.com>, ira.weiny@intel.com,
	dave@stgolabs.net, dave.jiang@intel.com, alison.schofield@intel.com,
	ming4.li@intel.com, vishal.l.verma@intel.com,
	jim.harris@samsung.com, ilpo.jarvinen@linux.intel.com,
	ardb@kernel.org, sathyanarayanan.kuppuswamy@linux.intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
	Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org,
	a.manzanares@samsung.com
Subject: Re: [RFC PATCH 1/9] PCI/AER: Update AER driver to call root port and
 downstream port UCE handlers
Message-ID: <ZsOQYyh-_t3QRSTW@fan>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-2-terry.bowman@amd.com>
 <6675d1cc5d08_57ac294d5@dwillia2-xfh.jf.intel.com.notmuch>
 <ecc5fbd0-52e1-443f-8e5a-2546328319b2@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <ecc5fbd0-52e1-443f-8e5a-2546328319b2@amd.com>

On Mon, Jun 24, 2024 at 12:56:29PM -0500, Terry Bowman wrote:
> Hi Dan,
> 
> I added a response below.
> 
> On 6/21/24 14:17, Dan Williams wrote:
> > Terry Bowman wrote:
> >> The AER service driver does not currently call a handler for AER
> >> uncorrectable errors (UCE) detected in root ports or downstream
> >> ports. This is not needed in most cases because common PCIe port
> >> functionality is handled by portdrv service drivers.
> >>
> >> CXL root ports include CXL specific RAS registers that need logging
> >> before starting do_recovery() in the UCE case.
> >>
> >> Update the AER service driver to call the UCE handler for root ports
> >> and downstream ports. These PCIe port devices are bound to the portdrv
> >> driver that includes a CE and UCE handler to be called.
> >>
> >> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> >> Cc: Bjorn Helgaas <bhelgaas@google.com>
> >> Cc: linux-pci@vger.kernel.org
> >> ---
> >>  drivers/pci/pcie/err.c | 20 ++++++++++++++++++++
> >>  1 file changed, 20 insertions(+)
> >>
> >> diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
> >> index 705893b5f7b0..a4db474b2be5 100644
> >> --- a/drivers/pci/pcie/err.c
> >> +++ b/drivers/pci/pcie/err.c
> >> @@ -203,6 +203,26 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
> >>  	pci_ers_result_t status = PCI_ERS_RESULT_CAN_RECOVER;
> >>  	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
> >>  
> >> +	/*
> >> +	 * PCIe ports may include functionality beyond the standard
> >> +	 * extended port capabilities. This may present a need to log and
> >> +	 * handle errors not addressed in this driver. Examples are CXL
> >> +	 * root ports and CXL downstream switch ports using AER UIE to
> >> +	 * indicate CXL UCE RAS protocol errors.
> >> +	 */
> >> +	if (type == PCI_EXP_TYPE_ROOT_PORT ||
> >> +	    type == PCI_EXP_TYPE_DOWNSTREAM) {
> >> +		struct pci_driver *pdrv = dev->driver;
> >> +
> >> +		if (pdrv && pdrv->err_handler &&
> >> +		    pdrv->err_handler->error_detected) {
> >> +			const struct pci_error_handlers *err_handler;
> >> +
> >> +			err_handler = pdrv->err_handler;
> >> +			status = err_handler->error_detected(dev, state);
> >> +		}
> >> +	}
> >> +
> > 
> > Would not a more appropriate place for this be pci_walk_bridge() where
> > the ->subordinate == NULL and these type-check cases are unified?
> 
> It does. I can take a look at moving that.
> 

Based on current code logic, the code added here will be executed as
long as the type matches (downstream port or root port), and I also
noticed the case ->subordinate == NULL never gets touched when I try to
inject an error through the aer_inject module and the user space tool. 
If my way to do error injection is right, it means the behaviour will
get changed after the code move.

Here is some of my experimental setup:

QEMU +  cxl topology (one type3 memdev directly attached to a HB with a
single root port).

1. Load the cxl related drivers before error injection

2. Do aer inject with aer_inject inside the QEMU VM

# aer_inject ~/nonfatal

aer inject input file looks like below
-----------------------------------------------------
fan:~/cxl/linux-fixes$ cat ~/nonfatal 
# Inject an uncorrectable/non-fatal training error into the device
# with header log words 0 1 2 3.
#
# Either specify the PCI id on the command-line option or uncomment and edit
# the PCI_ID line below using the correct PCI ID.
#
# Note that system firmware/BIOS may mask certain errors, change their severity
# and/or not report header log words.
#
AER
PCI_ID 0000:0c:00.0
UNCOR_STATUS COMP_ABORT
HEADER_LOG 0 1 2 3
-----------------------------------------------------

The "lspci" output on the VM looks like below
----------------------------------------------------
Qemu: execute "lspci" on VM
00:00.0 Host bridge: Intel Corporation 82G33/G31/P35/P31 Express DRAM Controller
00:01.0 VGA compatible controller: Device 1234:1111 (rev 02)
00:02.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 03)
00:03.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
00:04.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
00:05.0 Host bridge: Red Hat, Inc. QEMU PCIe Expander bridge
00:1f.0 ISA bridge: Intel Corporation 82801IB (ICH9) LPC Interface Controller (rev 02)
00:1f.2 SATA controller: Intel Corporation 82801IR/IO/IH (ICH9R/DO/DH) 6 port SATA Controller [AHCI mode] (rev 02)
00:1f.3 SMBus: Intel Corporation 82801I (ICH9 Family) SMBus Controller (rev 02)
0c:00.0 PCI bridge: Intel Corporation Device 7075
0d:00.0 CXL: Intel Corporation Device 0d93 (rev 01)
--------------------------------------------------

Fan


> Regards,
> Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (mail-bn8nam12on2076.outbound.protection.outlook.com [40.107.237.76])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 2ED6A3AC0C;
	Wed, 10 Jul 2024 21:48:15 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.237.76
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1720648098; cv=fail; b=Z8mfCQjs+Ln67+noMvzJ/MnsVcCZr7WjQx5H3RFfxOFul0tb3y8qbh1/Vnxoa/v+x2cVSabMgP+a4dPJQr4AgmoqKTvplUjoV+Rh3bYwonsasVBTjGELEQ80XjgQmW/z07VCcMXK2reDZlOKcuO/MZtog1PfB5ouxVA0yqyWh3c=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1720648098; c=relaxed/simple;
	bh=THHPy/NRU3Fio7MMKu3FYUoHX4+k/g+v8Bf/FQO/tDQ=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=e1xTQrxhhOAYcns5ph9ZLhHSR62c9iiOksJpzvvAmM4N5lPgezz3Ll/IGGGj+xJe5uaW+LBmPI9n2OUlFuZPmaSi6tMBuPRDO3F1dPLzHgtTE/23/V/GkiflcrPvLe8xMg00PNynULYfjeVHvBmky4Zy5VDa3vUXF0X71Ei3j8k=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=aQQHZz90; arc=fail smtp.client-ip=40.107.237.76
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="aQQHZz90"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=S1mPCyrtghsAU1THaOCkm2YXf6vrSM4237YMW+R0dkDFug6EYehC908OJfYDw7qQjNJDcg+IpIXhxEl7ZEDRr8Xk9mI4SyCcNVSocenTgxvxE7s2rozi7B16Xq0IjZushy+kb6sF2ky/NXS0WIGuNt+jOX58f6cuhu/eWpfPNpIeX1iUYsOBF7vYc1YN18jb5fdzx1tAPZfEH3aoXJWAz1xuPNcBGvuxiCBGZ9O8qj2fr6aT8fHfP8U493dr5uLETn5rAR4YVE6EM7UjeC9oI7t2Z+kW87g3Bl9rEIhSYNTYAtiuYh4pTN1ylonCvkLt+vu9FR47TEgsgY1o9zPSmw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=xYpHhsJ6c532lI06ZMhzgbcIwlvFbNDleG5BJzFurQk=;
 b=eKzyEYRKWOMhQ11eLeLwO/oVBq05ec+o8Tq0IXbgufrx5bjWc2ni1DDA03tHDezAYzkKgkgKZUdoUUd5SCtB32ntPcdr+GV0l539Vnpi7RgTQB0zPxZIIwlmO/NjULEc3EVzQMD8BmVygYxJ4PkE4jL/XwiBQUU9iKvcV2NHSEegFbwgb7wcW4WxVNxBkummzmW7OPDNYOElcFlk5jEe343si9u7kmyvAtvZE7XZIaxSRg0wXa/9Tszpmu2P8qCqAkbSRZe4YKyapdvXHjuj1qAj8K0pQIQ4FxLnhgbeG9Tmv+UCR3gwzmvIgabqv2Kw96SE1CYlWKQP1q6lS6mmJQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=xYpHhsJ6c532lI06ZMhzgbcIwlvFbNDleG5BJzFurQk=;
 b=aQQHZz90wIvqisC6kW312sPwznYsjzpP8eIN7euAaJW2vNPPk0R6Niw9PWRotKTz0bL5lVOvTm2JW7WBoaTq39dC8agAd9RseQEnZ1XrhU+d1d29ZjbsKPvaOJoZiwb0UUjI/gbuvwupOtFV7gY6WPuEHY0Zaod2Lu5OwOI7j2I=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 PH0PR12MB7887.namprd12.prod.outlook.com (2603:10b6:510:26d::7) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.7741.36; Wed, 10 Jul 2024 21:48:12 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%7]) with mapi id 15.20.7741.033; Wed, 10 Jul 2024
 21:48:12 +0000
Message-ID: <8bf0d1c9-632e-458b-9b78-0faeea0472f8@amd.com>
Date: Wed, 10 Jul 2024 16:48:09 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 1/9] PCI/AER: Update AER driver to call root port and
 downstream port UCE handlers
Content-Language: en-US
To: nifan.cxl@gmail.com
Cc: Dan Williams <dan.j.williams@intel.com>, ira.weiny@intel.com,
 dave@stgolabs.net, dave.jiang@intel.com, alison.schofield@intel.com,
 ming4.li@intel.com, vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
 Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-2-terry.bowman@amd.com>
 <6675d1cc5d08_57ac294d5@dwillia2-xfh.jf.intel.com.notmuch>
 <ecc5fbd0-52e1-443f-8e5a-2546328319b2@amd.com>
 <668ef3a2.050a0220.96a0c.4f5c@mx.google.com>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <668ef3a2.050a0220.96a0c.4f5c@mx.google.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA9PR10CA0015.namprd10.prod.outlook.com
 (2603:10b6:806:a7::20) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|PH0PR12MB7887:EE_
X-MS-Office365-Filtering-Correlation-Id: 560662d6-c45e-44d2-5e8a-08dca129fedf
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|1800799024|376014|7416014|366016;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?aHZRcUtWODVyMXRuQW83ODQ5dmx5amxETVRIWEw4NlNwYWF6bFp5VDR6eHFW?=
 =?utf-8?B?RS9JZTR0MUpLVkdJdERramdEdlpLM1cwcjJmUmtQTlRVYWxtQ1hoeUMxZWRT?=
 =?utf-8?B?SjhKaHJWRXJhT3EvWEZCWFBkT3BLOGlzLzZNMHgzOTNTTG5xbzlVZk15aVZN?=
 =?utf-8?B?YkhKbG9NS1BncUkxS0pSdWFKRGQvQVJ4ZUJJMm8yQkxqUFV5Umc3bEQxalhZ?=
 =?utf-8?B?VUZuY09RMU1TVW9sSXBpL3ZCdmx6anFtVjNjdGlNVURqc05lNTAyT1ZUMUdm?=
 =?utf-8?B?cnFmTXlNbEVDS3hqVWNzc1ZsVDhxMUk3Vzg2UnR6ZFp4cU5IeURBZU5DY1FN?=
 =?utf-8?B?M0lWZy9sWW1pY0dTYWQyZzhnb3BQWkU5dDhSTTZKTm1kUXNUMWhVYWtkUlpk?=
 =?utf-8?B?ajRJZk14M3NBWVFhNzNVeHpxODkwd2FsQXQ4ajFaakNkWXV6d1pWWUN3OUM3?=
 =?utf-8?B?MUdwNGlXK1BaUnROd1p2Z0xCYkR6VmpHSVU4bEVqdjhDdzJQRTQrZk1kWkxJ?=
 =?utf-8?B?NmNVRnhSQWR0ZlZrR1BuMVczZEVTd1FiMUcwMEcvSlFtT0NXcHV0bjAwTnpj?=
 =?utf-8?B?eEw3M3Y1VHVCc2lqQVB4MWxxM3lQL3dSclVDU0lGNXFITFhVRzFwUVBSQmJm?=
 =?utf-8?B?K2pmMC9KR3R4eTYydVpMUU9yZUdHalh5TzFWcHhDVG9yemNxVktGZUtscU5T?=
 =?utf-8?B?bnZ5VURIdEJVSkExcjA3YmNPNzllT08vVnFRMWRLZlQrQm85MmxLVG9hOCs3?=
 =?utf-8?B?OGg0TFhVcW5WbWlIL1lvY2VWMk13UzBEd3dFTG5IODAzRjljck1iZjViaUds?=
 =?utf-8?B?MCtMQUNwTUltUDlGMHU1NS9zZ0F4T2dCd1ltR0xIa3IzMHU5TXRxbWVILy9K?=
 =?utf-8?B?bStHK0ErTDBENnZQT2U2RWpMSXAzK3p0UkQ5MGJBcWZwRWlkRGRnTTI3WlpU?=
 =?utf-8?B?V1FBbTJiNmtJcUZaM2ZBZ1kwZnBXRW1MSDdLc3RNVjJHOUpxSm1kdFUrTTlZ?=
 =?utf-8?B?QnBvaXMxRlpYSS9UVjVRWUpIbERCVlQ4c1o4a3JZM1N6TEMycWg1WXlzU1BI?=
 =?utf-8?B?MVhjeWU1YTVoWlpHUjJzcWJDQkhZRWRKZ2t0aXk3dHNoSWdsakhtcVQzSWJw?=
 =?utf-8?B?bWlBWlMzR3RiUFJVbHo1bTFBWFVnVkV3NUQ4TlBacFJoWkNmaytLaVVxaTVT?=
 =?utf-8?B?MnJLMXB6WHBYZEJPMnhJeUxoWmpwbmtrUndEdDF6czhRVHRlS1J1Z1gxMFV1?=
 =?utf-8?B?NTFtOFcrOG9wN2J3dnNJVElMUzVxM1ZzZzVlbFVkL01xUkFmNTVpdzBIZWhN?=
 =?utf-8?B?QWRXdmE4TUZDM2M3YkJhL2c0RmNtVHUzZ0p1TTZrM25mRlRnNkNoZE83S0Yw?=
 =?utf-8?B?cC9HbWpOWVBMQjF4ekpuY1NCTFZNSTEvYXRPa1RkdC9nZ3hWaFFmS0R4d2xF?=
 =?utf-8?B?eDhzQUVRR0NVc3JaUkZXdEUrTFIwUlNnRU1uNjFJT3FiVThqbitoZnhYYVVL?=
 =?utf-8?B?dEZteURVYzhHb3JHWnV3QnA5L05KNmJHQ3hoZkgyeUt6bnNxRlBzR0Vkdjhw?=
 =?utf-8?B?RjM0NlF5TXZYaFNxWWFENG0yMFhuWXA3NXlMS1pIQUNPRCttWk5qSHpxMFk5?=
 =?utf-8?B?aVNLaVpYS0dJWTRCZEhZZjMzRjB2bVc4OXl0YytIbWVNU0ZNdFljNFh4VWRu?=
 =?utf-8?B?dmRtdTRQeEtaVC81YUxkUDU5aEZadnR3dGlDMGlyY3NYOCtHdXBTYStPM0lD?=
 =?utf-8?Q?Az3lPI3cPVnGzHMjs0=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(1800799024)(376014)(7416014)(366016);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?dTdQZVJNbjhZem9PYmVyRlRMdXM2QVp6aTZIdmN4OWoyd3RqY2xNbkJpWXhF?=
 =?utf-8?B?SDIrS25LUkFtR0JZd3pBMHNuTEhKMi9QbDBNbzdGcE5BamJkdU1zbnRqcVBn?=
 =?utf-8?B?SUdjT1V6OVdSWnl3TzMrRE04Q3grUU54RkNFdXZwa3RoeDFpbmpaYUNCVHlU?=
 =?utf-8?B?ZzhhUkdhWWpTV2xMb0dacWdKWmRzN3lFSVg0S0dEY2RtdVZXbXBaUDZTUUx3?=
 =?utf-8?B?WUJaeGJyUm8zeDBOTDV3Y28vUUZmM3JCUHE5elJyRlVNMFZkMWVSdlRiQ1Bj?=
 =?utf-8?B?MGtIU2VSK1k1aS9BckpPazNDQ3RVcFNoTWxybXBZMU1Pd2NtUUtCRlhLZlZH?=
 =?utf-8?B?THFHZDVuM0xMNVlOdzBrNHZONlN5Y2tOYVh3QWQweTdDZHU0UDFONWUrZzJp?=
 =?utf-8?B?R0pmWU5RU2VCNy9ScTB4c0RMTm1lSG1YZi8rMksvcFJVRkF1N1cvRDdWWHI3?=
 =?utf-8?B?SUNmeUk1OWt0ZFR6OStpa0hEbERLWjR0Vnk4N3R3NmlYYkFFNmhOajF6VHNR?=
 =?utf-8?B?TWFHV3lnMHBaWGNLRUdBcmhMWVBZT0w1UzBLb1RCVnVXVjJpR3ZjRXhYY3NV?=
 =?utf-8?B?dE0wTUk0UHBuaGtzdGE4Tk0ybW9qL1paK1R3MWIxQUFvb21FK1NRVHF4cU9Q?=
 =?utf-8?B?aVpRdDdQK0ZQdEtUSmorck1ZVVVIek1PdHVRVXlBMTVkYWEwc2QrZTFpa1lU?=
 =?utf-8?B?NzFXTlpjV1VDOURlSjZVTnNkSjExV1YwYWx5cEpkb2s0U2d2NnZ3U2EzYWYy?=
 =?utf-8?B?clZoUFpQY1lNcTdrdzVpRGpMNExYNFhPMGI4YlpHSFpIRlJkSGZkV2ttM2tC?=
 =?utf-8?B?VkljQlViUEFtRHhReDFid2tIM21WcTQ2bGpkbVNwZjVxWFM1UkdNR0JST0hS?=
 =?utf-8?B?M0RURDY2WkY2MjdtY1NteW5Sb0tORkNCVTg0LzIxN24valRET21QM0d3OTk1?=
 =?utf-8?B?M0szK1dCNzBDMUhNTmFmWlROM29SRDdNV2NIZytvdHliMUdQMjdZVTN4WFgw?=
 =?utf-8?B?a2FyZ0twcnJ2dGZzOUhHa3FCVFRjSG1NdGc3ZHloNzFJTjdQQkFDN0RhQ0tG?=
 =?utf-8?B?aUwxZklOczMvaEpGcDhkNGYrWkxROUJDbXVpMndCQjNWajUwOU05VzgvWVdu?=
 =?utf-8?B?dm1CWkNRaVB2SlVsVTRjdGp4VWNQM0xja05ZUU5VV3pjOTloRGdrOGg3cUVz?=
 =?utf-8?B?SkU1ajI4OEtMY0xEb1ZxTnlDek03akFHWVJJZUg1NGxZelA0WEhwdVRlSVFB?=
 =?utf-8?B?VGVEclRjZUM0eXViYjVHcDFKMTN1dVlHUUhpdDB3MldndVJaVmZOenMwNnMw?=
 =?utf-8?B?VnZVWGlUaHNZTEtXcTBqN2lqcVhuc0FYaXh0c21mRDlQbkpRSlg4N1hmVFky?=
 =?utf-8?B?NEpQTEVod1MzOGRrUUJjV2Y5L21pN2xMRjJ2dFZsckxhQ1BnYWRUWGI2SHNU?=
 =?utf-8?B?T3VqYnMwN3U1dzI5Mi9RMGdCZzIvVnJYb2JRb0oyMFg2YkpncEFLb3VoT3hm?=
 =?utf-8?B?ZXR1anZkV1ZmS2s3ZC91U0JMclBnMmpqUytFVHBpYWtzZU42Y1I1ZzJFK0d3?=
 =?utf-8?B?L2V3VGJnRFdDakViMzlsRzFabER5MWdxTFlRNmx0bkN1TmgrNmtpdjBEbE5j?=
 =?utf-8?B?Z3JBaHlRbnY2UDU2NCsvYVE5Y3ByaWt5S20yZGlvWGM1T2syWStId0Exc0hh?=
 =?utf-8?B?NWVKRkhKZE4zTFJwTWlIU3pyMW12YTNRa3Bsejh2REl5VVdTNnBQcVJ5TUoy?=
 =?utf-8?B?TDl5RnVSNGRMY24yVUI5YXFnK2ZidFJXY3ZNZmFrZHpBenVqbzB5bXA2TURr?=
 =?utf-8?B?bjJveG9nL3ZOK3dTclc0Q1Q3S1dTemlSRTJ6WTlyQS90ZUpPOXhnSC9EdGZK?=
 =?utf-8?B?VEhEZU5JNkhuODhxK3dybERYSjNRdjE4b1lOMnZMd0x5N1M2dUpDNC9YK2dx?=
 =?utf-8?B?SVRmaXVSakdnK1FlazBRSE9sa09RMUtyRnpyOTQyRlpmcFNaMkwyMHlGaFVy?=
 =?utf-8?B?ZFN4Uk5VNkE0WWQwbjY0OSs0MGsrbStFK0RZY0xXNVlMY0Z0MjNYb0YxOUJU?=
 =?utf-8?B?T3QrR3hzUC9pQnpmZkpxY2FlSWt4MkpWUkF2OEpkcExkUjNaT01UZjluTFkx?=
 =?utf-8?Q?Ka8/NX99kpwwDlUQxZ00Mxs9Q?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 560662d6-c45e-44d2-5e8a-08dca129fedf
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 10 Jul 2024 21:48:12.2649
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: wkxbhgmvW7MzIdoB3kZabfn7meH4Sf7HLwLikVcuSQ4M/YWw9NigyAJbkx32nXaN7PVoV8ptLg8sGgKDSPtZOw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH0PR12MB7887

Hi Fan,

On 7/10/24 15:48, nifan.cxl@gmail.com wrote:
> On Mon, Jun 24, 2024 at 12:56:29PM -0500, Terry Bowman wrote:
>> Hi Dan,
>>
>> I added a response below.
>>
>> On 6/21/24 14:17, Dan Williams wrote:
>>> Terry Bowman wrote:
>>>> The AER service driver does not currently call a handler for AER
>>>> uncorrectable errors (UCE) detected in root ports or downstream
>>>> ports. This is not needed in most cases because common PCIe port
>>>> functionality is handled by portdrv service drivers.
>>>>
>>>> CXL root ports include CXL specific RAS registers that need logging
>>>> before starting do_recovery() in the UCE case.
>>>>
>>>> Update the AER service driver to call the UCE handler for root ports
>>>> and downstream ports. These PCIe port devices are bound to the portdrv
>>>> driver that includes a CE and UCE handler to be called.
>>>>
>>>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>>>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>>>> Cc: linux-pci@vger.kernel.org
>>>> ---
>>>>  drivers/pci/pcie/err.c | 20 ++++++++++++++++++++
>>>>  1 file changed, 20 insertions(+)
>>>>
>>>> diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
>>>> index 705893b5f7b0..a4db474b2be5 100644
>>>> --- a/drivers/pci/pcie/err.c
>>>> +++ b/drivers/pci/pcie/err.c
>>>> @@ -203,6 +203,26 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
>>>>  	pci_ers_result_t status = PCI_ERS_RESULT_CAN_RECOVER;
>>>>  	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
>>>>  
>>>> +	/*
>>>> +	 * PCIe ports may include functionality beyond the standard
>>>> +	 * extended port capabilities. This may present a need to log and
>>>> +	 * handle errors not addressed in this driver. Examples are CXL
>>>> +	 * root ports and CXL downstream switch ports using AER UIE to
>>>> +	 * indicate CXL UCE RAS protocol errors.
>>>> +	 */
>>>> +	if (type == PCI_EXP_TYPE_ROOT_PORT ||
>>>> +	    type == PCI_EXP_TYPE_DOWNSTREAM) {
>>>> +		struct pci_driver *pdrv = dev->driver;
>>>> +
>>>> +		if (pdrv && pdrv->err_handler &&
>>>> +		    pdrv->err_handler->error_detected) {
>>>> +			const struct pci_error_handlers *err_handler;
>>>> +
>>>> +			err_handler = pdrv->err_handler;
>>>> +			status = err_handler->error_detected(dev, state);
>>>> +		}
>>>> +	}
>>>> +
>>>
>>> Would not a more appropriate place for this be pci_walk_bridge() where
>>> the ->subordinate == NULL and these type-check cases are unified?
>>
>> It does. I can take a look at moving that.
> 
> Has that already been handled in pci_walk_bridge?
> 
> The function pci_walk_bridge() will call report_error_detected, where
> the err handler will be called. 
> https://elixir.bootlin.com/linux/v6.10-rc6/source/drivers/pci/pcie/err.c#L80
> 
> Fan
> 

You would think so but the UCE handler was not called in my testing for the PCIe 
ports (RP,USP,DSP). The pci_walk_bridge() function has 2 cases:
- If there is a subordinate/secondary bus then the callback is called for
those downstream devices but not the port itself.
- If there is no subordinate/secondary bus then the callback is invoked for the 
port itself.

The function header comment may explain it better:
/**                                                                                                                                                                                                                
 * pci_walk_bridge - walk bridges potentially AER affected                                                                                                                                                         
 * @bridge:     bridge which may be a Port, an RCEC, or an RCiEP                                                                                                                                                   
 * @cb:         callback to be called for each device found                                                                                                                                                        
 * @userdata:   arbitrary pointer to be passed to callback                                                                                                                                                         
 *                                                             
 * If the device provided is a bridge, walk the subordinate bus, including                                                                                                                                         
 * any bridged devices on buses under this bus.  Call the provided callback                                                                                                                                        
 * on each device found.                                                                                                                                                                                           
 *                                                                                                                                                                                                                 
 * If the device provided has no subordinate bus, e.g., an RCEC or RCiEP,                                                                                                                                          
 * call the callback on the device itself. 
 */

Regards,
Terry

>>
>> Regards,
>> Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-yw1-f175.google.com (mail-yw1-f175.google.com [209.85.128.175])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 8B185DF71;
	Wed, 10 Jul 2024 20:48:35 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.128.175
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1720644517; cv=none; b=H/VcDN4y/fpuVXRi7RmaTBXpWz3aXp/jGcVkePeOoCyYDAdZQdbgFPVbvNCqgo0y7621qrQSLv1ZJYLvRS0CUKpBZVnrokbENdFV+zE4s9jq2I1/Ct9a6WfhRyPexJr4dgpfTPlaK1QmirmiLRQYIuXkoopv/5ciD00ZTJaNgi8=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1720644517; c=relaxed/simple;
	bh=/kfkKuVrXmiPEr6PIYbsQfX5EJvKRnQPcqUNsTwM/N4=;
	h=Message-ID:From:Date:To:Cc:Subject:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=JCgXEeCp+NJqqB/GUxWvT7AzuFRu6k8GlIrf9pEKw2FgB/aQKDm7M/e6eBIShW7a6UcKascEMA4LetXw62eAgNRn+u6nI7ZoAkexdOdIL1m4SZLi4TU91hsd16CVtzF8sZ7qhlpqpqI2GrLE475cRj0TV5Dweo4rfkqXGTunlB4=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=RBASbZ07; arc=none smtp.client-ip=209.85.128.175
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="RBASbZ07"
Received: by mail-yw1-f175.google.com with SMTP id 00721157ae682-6512866fa87so1938817b3.2;
        Wed, 10 Jul 2024 13:48:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1720644514; x=1721249314; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:subject:cc
         :to:date:from:message-id:from:to:cc:subject:date:message-id:reply-to;
        bh=+Ch/AJA/sA3QF/9K7kWs3lYEi/aLPB0ep6s8e5YeC7c=;
        b=RBASbZ07X8GnoTz2f7GT4jVxsy0Re4Wo5aEsGgRGq1cc+wor95tVCHNsVCInJxdIMa
         FOO3HnV6xozCw7Ru+WWaI8aXsNRMZbzOniS1sE3jucyz8g6a0JroG65EZ+P8lJvYmh+y
         a2NiIFGNdckzx6G1fcZV/Vq9JmZ3WD1i3CDBnE3yXOWsIaMMMFjcBPvAVhgAnFKH1bJ1
         zSyoNKEq+FwPwvQyq+i2Gv9467YEWsbVWJK3WE/AywfjJCpl3e9v/hPdGhoMM8daTbK5
         lLPNo+XpWNSVlGOB3i10AaGP1GTx84bsjIN3srcEB9ofA8SAZrD8I5d/sEhhTEn5hnrm
         uE0w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1720644514; x=1721249314;
        h=in-reply-to:content-disposition:mime-version:references:subject:cc
         :to:date:from:message-id:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=+Ch/AJA/sA3QF/9K7kWs3lYEi/aLPB0ep6s8e5YeC7c=;
        b=RJuAqX3vG5abX8w5s/IIv+FnnNgAp5J3iD5MtqFATNdvObxCLk5S450aXM/7Pp9yhv
         JxvL+8U9hqnblPik/8nfzi16EtKmsK3OWeltHq7Fpj6FuipdATsyEzXufOQ33DYAMeV2
         CvcB3PXahmNG8/kRz+nAW6OULFrm3Af661UsKPsluJn58w2PtMzIZa+c4RnaEaYzh6+Y
         Ssz0niYtoHA0xC7PUxy5uzznu9tLF/ZHZHTNUAODIUT30t1yzbTC0hWjsjwGbBZpVwTZ
         LL9WHaJZIkHeNPCCdn+9bJmA/cErtObRhjlwq8x0W+3fAt/i7x1Shk0oJpyd17PGyftG
         ICtQ==
X-Forwarded-Encrypted: i=1; AJvYcCWGG0r6nEYTpQNtSr1TPABGoxHMm5Rr68SoZ3aQ/LZKxqKdmQQRkzan9JSPefv92vBRjYI8bq1fv/XM8VaH4tZyf7Xno2uaChzAEh3ZKAh5pbZICGvvY4JsA6XCJukJlwDjZaEo1KAVgog0NtCguPy/2Nf7OUJ/w8/ky2OgAbxWoARn
X-Gm-Message-State: AOJu0YxcIypiF7VRRVRmUT+3UMb26QIENNsLh3UUuJwJjQ3OKyIFj+9z
	GvS7ccdPYjDCAeTn5Q/g3UiazY0rEnFByQ41EMbbffasDBLvAbA9FtP9kQ==
X-Google-Smtp-Source: AGHT+IHqWeXS6RWFKMCzsXOI5tWyA3PleFBm/MdMw2n+0PWp6n1OfS+Q+m7ra1s61yQI2ArnS2P5Hw==
X-Received: by 2002:a0d:ee81:0:b0:64a:d5fd:f19e with SMTP id 00721157ae682-658ee790e6cmr74419587b3.3.1720644514352;
        Wed, 10 Jul 2024 13:48:34 -0700 (PDT)
Received: from gpd. ([50.205.20.42])
        by smtp.gmail.com with ESMTPSA id 00721157ae682-658e6fb8aa8sm8608007b3.132.2024.07.10.13.48.32
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Wed, 10 Jul 2024 13:48:34 -0700 (PDT)
Message-ID: <668ef3a2.050a0220.96a0c.4f5c@mx.google.com>
X-Google-Original-Message-ID: <Zo7zYfrURMv66JIQ@gpd.>
From: nifan.cxl@gmail.com
X-Google-Original-From: fan@gpd.
Date: Wed, 10 Jul 2024 13:48:31 -0700
To: Terry Bowman <Terry.Bowman@amd.com>
Cc: Dan Williams <dan.j.williams@intel.com>, ira.weiny@intel.com,
	dave@stgolabs.net, dave.jiang@intel.com, alison.schofield@intel.com,
	ming4.li@intel.com, vishal.l.verma@intel.com,
	jim.harris@samsung.com, ilpo.jarvinen@linux.intel.com,
	ardb@kernel.org, sathyanarayanan.kuppuswamy@linux.intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
	Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
Subject: Re: [RFC PATCH 1/9] PCI/AER: Update AER driver to call root port and
 downstream port UCE handlers
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-2-terry.bowman@amd.com>
 <6675d1cc5d08_57ac294d5@dwillia2-xfh.jf.intel.com.notmuch>
 <ecc5fbd0-52e1-443f-8e5a-2546328319b2@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <ecc5fbd0-52e1-443f-8e5a-2546328319b2@amd.com>

On Mon, Jun 24, 2024 at 12:56:29PM -0500, Terry Bowman wrote:
> Hi Dan,
> 
> I added a response below.
> 
> On 6/21/24 14:17, Dan Williams wrote:
> > Terry Bowman wrote:
> >> The AER service driver does not currently call a handler for AER
> >> uncorrectable errors (UCE) detected in root ports or downstream
> >> ports. This is not needed in most cases because common PCIe port
> >> functionality is handled by portdrv service drivers.
> >>
> >> CXL root ports include CXL specific RAS registers that need logging
> >> before starting do_recovery() in the UCE case.
> >>
> >> Update the AER service driver to call the UCE handler for root ports
> >> and downstream ports. These PCIe port devices are bound to the portdrv
> >> driver that includes a CE and UCE handler to be called.
> >>
> >> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> >> Cc: Bjorn Helgaas <bhelgaas@google.com>
> >> Cc: linux-pci@vger.kernel.org
> >> ---
> >>  drivers/pci/pcie/err.c | 20 ++++++++++++++++++++
> >>  1 file changed, 20 insertions(+)
> >>
> >> diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
> >> index 705893b5f7b0..a4db474b2be5 100644
> >> --- a/drivers/pci/pcie/err.c
> >> +++ b/drivers/pci/pcie/err.c
> >> @@ -203,6 +203,26 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
> >>  	pci_ers_result_t status = PCI_ERS_RESULT_CAN_RECOVER;
> >>  	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
> >>  
> >> +	/*
> >> +	 * PCIe ports may include functionality beyond the standard
> >> +	 * extended port capabilities. This may present a need to log and
> >> +	 * handle errors not addressed in this driver. Examples are CXL
> >> +	 * root ports and CXL downstream switch ports using AER UIE to
> >> +	 * indicate CXL UCE RAS protocol errors.
> >> +	 */
> >> +	if (type == PCI_EXP_TYPE_ROOT_PORT ||
> >> +	    type == PCI_EXP_TYPE_DOWNSTREAM) {
> >> +		struct pci_driver *pdrv = dev->driver;
> >> +
> >> +		if (pdrv && pdrv->err_handler &&
> >> +		    pdrv->err_handler->error_detected) {
> >> +			const struct pci_error_handlers *err_handler;
> >> +
> >> +			err_handler = pdrv->err_handler;
> >> +			status = err_handler->error_detected(dev, state);
> >> +		}
> >> +	}
> >> +
> > 
> > Would not a more appropriate place for this be pci_walk_bridge() where
> > the ->subordinate == NULL and these type-check cases are unified?
> 
> It does. I can take a look at moving that.

Has that already been handled in pci_walk_bridge?

The function pci_walk_bridge() will call report_error_detected, where
the err handler will be called. 
https://elixir.bootlin.com/linux/v6.10-rc6/source/drivers/pci/pcie/err.c#L80

Fan

> 
> Regards,
> Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9CA241B47D0;
	Tue,  2 Jul 2024 16:00:07 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719936009; cv=none; b=c9RDENQDQbvahO/vJXONS1IzEqFcwnP2jroTYXbicRMXRT9UfZ0MAz/Jt4ltJy0ev6+d+Y7AWpev9NNrCikGSKsi366+LjPdLtdTlXZ+ZSWIZiagX6rdSckD+MGXdHWNxtnt6K+AiGIuqqB+OqFRsDbnJhKl4wWd//ZNWH50DWk=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719936009; c=relaxed/simple;
	bh=9MIzvidVb1BfdAy2uCEv2PU++evxMNjDgRBeTcl20DA=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=dxWsTAeIuZybVUMpwo/R92UCnBDvYPkfhfnczeEL6QXZr+EO4C/BKpTFyLPioUL+P+yX4xrXnyVdieP9VREI0xwYE6L0rmxwCp4AHWrKr0bD1g2ekhGPigpO+pclneuWkkjPIEBYJ/UmnKi1iTpOdHz+6ceSltXrDmr4XX0d0vI=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.216])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4WD6zj1QGfz6J9fv;
	Tue,  2 Jul 2024 23:59:29 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id 432B5140C98;
	Wed,  3 Jul 2024 00:00:05 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Tue, 2 Jul
 2024 17:00:04 +0100
Date: Tue, 2 Jul 2024 17:00:03 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <Terry.Bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 9/9] cxl/pci: Enable interrupts for CXL PCIe ports'
 AER internal errors
Message-ID: <20240702170003.00002657@Huawei.com>
In-Reply-To: <c5c1a814-0706-462e-81b2-f8ce814bbe9a@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-10-terry.bowman@amd.com>
	<20240620141514.00007c6d@Huawei.com>
	<c5c1a814-0706-462e-81b2-f8ce814bbe9a@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100004.china.huawei.com (7.191.162.219) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 24 Jun 2024 11:46:01 -0500
Terry Bowman <Terry.Bowman@amd.com> wrote:

> Hi Jonathan,
> 
> I added responses inline below.
> 
> On 6/20/24 08:15, Jonathan Cameron wrote:
> > On Mon, 17 Jun 2024 15:04:11 -0500
> > Terry Bowman <terry.bowman@amd.com> wrote:
> >   
> >> CXL RAS errors are reported through AER interrupts using the AER status:
> >> correctbale internal errors (CIE) and AER uncorrectable internal errors  
> > 
> > correctable
> >   
> 
> Thanks.
> 
> >> (UIE).[1] But, the AER CIE/UIE are disabled by default preventing
> >> notification of CXL RAS errors.[2]
> >>
> >> Enable CXL PCIe port RAS notification by unmasking the ports' AER CIE
> >> and UIE errors.
> >>
> >> [1] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and Upstream
> >>              Switch Ports
> >> [2] PCI6.0 - 7.8.4.3 Uncorrectable Error Mask Register (Offset 08h),
> >>              7.8.4.6 Correctable Error Mask Register (Offset 14h)
> >>
> >> Signed-off-by: Terry Bowman <terry.bowman@amd.com>  
> > 
> > I'm not sure doing this from a driver other than the one handling the
> > errors makes sense.  It is doing a couple of RMW without any locking
> > or guarantees that the driver bound to the PCI port might care about
> > this changing.
> >   
> 
> I think this could fit into the helper function mentioned in our earlier 
> discussion. When the portdrv's notifier enabler is called it could also
> enable the UIE/CIE.
> 
> > I'd like more info on why we don't just turn this on in general
> > and hence avoid the need to control it from the 'wrong' place.
> > 
> > Jonathan
> >   
> 
> I was trying to enable only where needed given the one case is not a 
> pattern, yet. At this point it is only for CXL RCH downstream port 
> and CXL VH ports (portdrv).
> 
> Would you like for the UIE/CIE unmask added to the AER driver init ?

If we can get away with it, yes!



From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 73BF21BB69C;
	Tue,  2 Jul 2024 15:58:40 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719935922; cv=none; b=uDNeF0B0qGX+0INuAxgdaSXBNfTJgki/cVuL8UWHPXUlHxIClq0evWn6aJy/rDTtk1oshcWM+8h6cp9+OiUAqxczYjcYoZVKlKeM0cReY7wR7nnNpaNyj1vQ9/ss39Gl4okKspwvaQKQuY2dwPaBi7j9NhoEi4klEPvzWADNLpI=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719935922; c=relaxed/simple;
	bh=HGOM6uaJycmbH5iUKR46DNltQSiT7nNQDVmctNm0dbE=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=fWalt1i/o+qjfu1ZL51Z93V+LkA1mUzu79XR064peo7B6wjazxjRODvSmdlbnLHy7jyYc9XZpCTxHNpIJb9wVslp3PxT2mtAAijGsY9+4x+0a16mR3T2O4uoRwYJiK0syCBTttJpVfhvCDCU2o/22IOouLyPAaqPaR0D5A4Ptvw=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4WD6y14lGmz6JB25;
	Tue,  2 Jul 2024 23:58:01 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id B47031400CA;
	Tue,  2 Jul 2024 23:58:37 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Tue, 2 Jul
 2024 16:58:37 +0100
Date: Tue, 2 Jul 2024 16:58:36 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <Terry.Bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 7/9] cxl/pci: Add atomic notifier callback for CXL
 PCIe port AER internal errors
Message-ID: <20240702165836.000045b1@Huawei.com>
In-Reply-To: <6b4b451c-935b-4ce6-ab64-c2e66311099a@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-8-terry.bowman@amd.com>
	<20240620140926.000029d2@Huawei.com>
	<6b4b451c-935b-4ce6-ab64-c2e66311099a@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable
X-ClientProxiedBy: lhrpeml100004.china.huawei.com (7.191.162.219) To
 lhrpeml500005.china.huawei.com (7.191.163.240)


> >> +
> >> +static void __iomem *cxl_pci_port_ras(struct pci_dev *pdev)
> >> +{
> >> +	void __iomem *ras_base =3D NULL; =20
> > Don't initialize and... =20
>=20
> There is possibility the incorrect PCI type is passed and this is intende=
d to
> return NULL for these cases. Should ras_base not be preinitialized in=20
> that for the scenario?

=46rom a code point of view at least, nope - just return NULL directly
give it's an error case.

>=20
> >> +
> >> +	if ((pci_pcie_type(pdev) =3D=3D PCI_EXP_TYPE_ROOT_PORT) ||
> >> +	    (pci_pcie_type(pdev) =3D=3D PCI_EXP_TYPE_DOWNSTREAM)) {
> >> +		struct cxl_dport *dport;
> >> +
> >> +		find_cxl_port(&pdev->dev, &dport);
> >> +		ras_base =3D dport ? dport->regs.ras : NULL; =20
> > 		if (dport)
> > 			return dport->regs.ras; =20
> >> +	} else if (pci_pcie_type(pdev) =3D=3D PCI_EXP_TYPE_UPSTREAM) {
> >> +		struct cxl_port *port =3D pci_to_cxl_uport(pdev);
> >> +
> >> +		ras_base =3D port ? port->regs.ras : NULL; =20
> > 		if (port)
> > 			return port->regs.ras; =20
> >> +	} =20
> > return NULL; =20

This is why you don't need to set ras_base.
If you get here it's always NULL.

> >> +
> >> +	return ras_base;
> >> +}
> >> +
> >> +int port_internal_err_cb(struct notifier_block *unused,
> >> +			 unsigned long event, void *ptr)
> >> +{
> >> +	struct pci_dev *pdev =3D (struct pci_dev *)ptr; =20
> >=20
> > I think you can use this notifier for other types of device in future?
> > If it's going to be global definitely want to check here that we
> > actually have a CXL port of some type.
> >=20
> > It may be that via the various calls any non CXL device
> > will result in a safe error. However that's not obvious, so an
> > upfront check makes sense (or a per device notifier registration!)
> >  =20
>=20
> cxl_pci_port_ras() performs PCIe type check and sets RAS base to NULL if=
=20

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 0ACB026AE4;
	Tue,  2 Jul 2024 15:53:55 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719935638; cv=none; b=q8Kqdhn8CHeLETk5LfxxurOU3jAGGL5AwTq+EZWzhonkXkTeSOyfqIh7szp+GJqJDDDUkJrplOJb4zxw0eTYqXdPyC/VM9ObEuav6ywFT4FtpgMAQl+JD+CPxqIEhsjtUhFkzthjWlqXlG1tTtGJTHjB7jOEDh9C4i2STF0n+2Y=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719935638; c=relaxed/simple;
	bh=tbEB5y4YiyR4kUelXRyJ2OIV+l3q1HZubohZF3UN4T4=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=qyu419p+SBUgg7J4u2vUNyR5WYKAGFr3a7a5+RWbBECiCiGBYXwhI1YqGZMAEbG5YysOZgedRmZlwDa87UxRRQc/73NYf72jxOyOnUQy7XdsdyeFlAsH6z/i0bYqIElizleb8nDilVC1JsBzWUbsOvuvq9sIqvDYNbsnbCQHfDU=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4WD6r42R60z6J6jS;
	Tue,  2 Jul 2024 23:52:52 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id 4349C140B55;
	Tue,  2 Jul 2024 23:53:53 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Tue, 2 Jul
 2024 16:53:52 +0100
Date: Tue, 2 Jul 2024 16:53:51 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <Terry.Bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 6/9] cxl/pci: Add trace logging for CXL PCIe port
 RAS errors
Message-ID: <20240702165351.00004abb@Huawei.com>
In-Reply-To: <550358f7-66d0-441c-abd9-f8edce9a5eb1@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-7-terry.bowman@amd.com>
	<20240620135332.000053f5@Huawei.com>
	<550358f7-66d0-441c-abd9-f8edce9a5eb1@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100004.china.huawei.com (7.191.162.219) To
 lhrpeml500005.china.huawei.com (7.191.163.240)

On Mon, 24 Jun 2024 10:53:51 -0500
Terry Bowman <Terry.Bowman@amd.com> wrote:

> Hi Jonathan,
> 
> I added responses inline below.
> 
> On 6/20/24 07:53, Jonathan Cameron wrote:
> > On Mon, 17 Jun 2024 15:04:08 -0500
> > Terry Bowman <terry.bowman@amd.com> wrote:
> >   
> >> The cxl_pci driver uses kernel trace functions to log RAS errors for
> >> endpoints and RCH downstream ports. The same is needed for CXL root ports,
> >> CXL downstream switch ports, and CXL upstream switch ports.
> >>
> >> Add RAS correctable and RAS uncorrectable trace logging functions for
> >> CXL PCIE ports.
> >>
> >> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> >> ---
> >>  drivers/cxl/core/trace.h | 34 ++++++++++++++++++++++++++++++++++
> >>  1 file changed, 34 insertions(+)
> >>
> >> diff --git a/drivers/cxl/core/trace.h b/drivers/cxl/core/trace.h
> >> index e5f13260fc52..5cfd9952d88a 100644
> >> --- a/drivers/cxl/core/trace.h
> >> +++ b/drivers/cxl/core/trace.h
> >> @@ -48,6 +48,23 @@
> >>  	{ CXL_RAS_UC_IDE_RX_ERR, "IDE Rx Error" }			  \
> >>  )
> >>  
> >> +TRACE_EVENT(cxl_port_aer_uncorrectable_error,
> >> +	TP_PROTO(struct device *dev, u32 status),  
> > 
> > By comparison with existing code, why no fe or header
> > log?  Don't exist for ports for some reason?
> > Serial number of the port might also be useful.
> >   
> 
> The AER FE and header are the same for ports and the logging 
> needs to be added here.
> 
> There is no serial number for the ports.
Why not? At least for switch USP there might be (actually
I believe there can be for pretty much anything but there
are rules on them matching in switch funcitons).

J

> 
> Regards,
> Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CE1311BC06F;
	Tue,  2 Jul 2024 15:18:28 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719933511; cv=none; b=b/AE3d4v7UjuBqs4OceMHN+jPp764Jn1DoDNd2Fc6wlKBBvRqbr5I6LwULlPHuM7F3V8Q/U940qF+FPv1aWaYOvJUqfM+8/B+pv4AemRnzqug/ZXz6piQNm2+bDKyzZpDCweFqhr3ZPE+OMlsPvAMqomjZAq5BKoQc8BHBCVL/k=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719933511; c=relaxed/simple;
	bh=B2rXYLGFgitAB5X44YsnmzwteXueZccB7OliwxBo05Q=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=QesTYHBfbPazaYtA3aALorEQza4fqQ77eiRKTMh+/Ipef93F0yt7IneorDhZZRiVIfhlnu+Tx0tOAwLy3e65azWA37dbIMyOTuc2j+NHxlwaTXlgaNlXBeSVlr5E+/B2w6PbKN9WWMiZPbn46OJf4wQpPtNo010PDsJ1c/JR2Fo=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4WD6295glTz6K97K;
	Tue,  2 Jul 2024 23:16:33 +0800 (CST)
Received: from lhrpeml500005.china.huawei.com (unknown [7.191.163.240])
	by mail.maildlp.com (Postfix) with ESMTPS id 2E333140517;
	Tue,  2 Jul 2024 23:18:25 +0800 (CST)
Received: from localhost (10.203.174.77) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Tue, 2 Jul
 2024 16:18:24 +0100
Date: Tue, 2 Jul 2024 16:18:23 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <Terry.Bowman@amd.com>
CC: <dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
Subject: Re: [RFC PATCH 4/9] cxl/pci: Map CXL PCIe ports' RAS registers
Message-ID: <20240702161823.00003749@Huawei.com>
In-Reply-To: <aba901a8-4d7d-4f2e-9656-7d6b6a1bc4d2@amd.com>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
	<20240617200411.1426554-5-terry.bowman@amd.com>
	<20240620134626.00004dc4@Huawei.com>
	<aba901a8-4d7d-4f2e-9656-7d6b6a1bc4d2@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500001.china.huawei.com (7.191.163.213) To
 lhrpeml500005.china.huawei.com (7.191.163.240)


> >> diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
> >> index 0c79d9ce877c..51a4641fc9a6 100644
> >> --- a/drivers/cxl/mem.c
> >> +++ b/drivers/cxl/mem.c
> >> @@ -45,10 +45,39 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
> >>  	return 0;
> >>  }
> >>  
> >> +static bool cxl_dev_is_pci_type(struct device *dev, u32 pcie_type)  
> > Naming perhaps needs work to make it clear this is checking if
> > it's a CXL device of that type.
> > Also, seems like general functionality that belongs in core/pci.c or
> > similar.  
> 
> Any suggestions on what to use for the rename?
dev_is_pcie_of_type() perhaps?
The dvsec bit obviously is less general but might be bandled
separately with
	if ((dev_is_pcie_of_type(dport->dport_dev, PCI_EXP_TYPE_DOWNSTREAM) ||
	     dev_is_pcie_of_type(dport->dport_dev, PCI_EXP_TYPE_ROOT_PORT)) &&
	    cxl_dev_regloc(dport->dport_dev))

where 
cxl_dev_regloc() is that lookup and is also used in core/regs.c

Or something along those lines.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM04-MW2-obe.outbound.protection.outlook.com (mail-mw2nam04on2059.outbound.protection.outlook.com [40.107.101.59])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 31BC1156883;
	Tue, 25 Jun 2024 14:41:39 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.101.59
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719326501; cv=fail; b=TJB9mcD9TTjTuQQTFu0xZMqMtlk6gYmAhIhNCDMQUPW4RuDs4VlpPBNf+57Qmfl2/RjTiTIcYGFFWzOZ27ApJDBVB2AGWjA8ViT5ZAt4HD6UvnwqQw826n4bjfqFFtJakp9dJOYRotcLIGYYEMkzmyGBHNJPlZ7LlbO72yQLb6M=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719326501; c=relaxed/simple;
	bh=teaUSGWjJcw7Gv4dMNjNwk2KSBFiPeRnmkZOPhOC1Nk=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=JywNy2m9fdFD5v16hd5QSMfgLdA47ZprdAHAdvyEPV0KV8mlUfOcLx/Y0FGfggfOT0TLpn4suZjHU6VEfAtGpA4/Ek4j3PG9RMg6pE2EYFoYjtXiZhx1gpgmZ1G7hSk5YLoX4yCIctj9Fsnqy51zDdXfH6P6Ad+eqno2B1gfEWY=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=wyuuuHIc; arc=fail smtp.client-ip=40.107.101.59
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="wyuuuHIc"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Q1Qkskeb4Da7v+itMZrejovTLubg1Z/nvkDcgRtF3DnjjxOMdFxnAM6oXYS3TUeCuARuXwNNisf64OFPM5GUJxXYvHBay46SWLJOlFQi9EWuyHKx1JTz2p/+gbwHr/FB71aXdRCFJdNjqP9ej3ZWo5/qqV9WLqYxpBe2rmd80eeQ12pM5XrH+9thkgLpAh3/xciXHX0cat/86BSI3I3cqtiCx5LLqeZsVqDigvwsGFRRYRCEjf9w4IC5K75uWWji1QJ4dICNs3aPwP0MvquTgOUuAZQY9O+DDvqLnYYYN+a2SItKhEi5wZD0jy8vqzctyLMrW4kXtwYH37A5hbKx4A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=OLEH/pibRn6dJp1nH+c2dObdF/nfZssuw8sVqJQnAmo=;
 b=EDdPu0ZCV0NcW/2REJx/536ebxL6lf+beVEykv6uitvm05qbTJKAbDKMUUXmNTN4x1phGurNHasRMeUb742112U53ou3PsTfl2Vkr+BJvHLYizjHcyTLfz2dzDhFuiKV7sDElr4PX/13Orwwu9TVVwiF/A8Wbeou84XuRyjwvLPw9Svz4abR4qFOM3pTY5psVa7tOPlImXFZ1JLG7hGlpfeemqNa5mpg7skasaTCbDEm/UdcJgE/oiv/fOBZgoBKWFU/A61urkiSKt0zVugTXutmpx1Wix+ZNyN3LLxdvLKoTpU6Ob+/dOiXCrDdbo7jSOOqH+iiRkj5hSIy0XU5vg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=OLEH/pibRn6dJp1nH+c2dObdF/nfZssuw8sVqJQnAmo=;
 b=wyuuuHIcUXN3s8iJCxHoktKMe/3mgCM7JH1imt7kfPe5nukKUj5u6yXWuc6YeOP1JhaEg2W7xg7I//F0eP3zI/HsAs5gpDU5ABk6oF5EcnS0k5Zkg4iXtm7cIJnfT1yk/3/XOLo7IpEdk5nUln/Nhvnd6r4yFa/h9MDvfTosDHA=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 DS7PR12MB8417.namprd12.prod.outlook.com (2603:10b6:8:eb::21) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.7698.30; Tue, 25 Jun 2024 14:41:37 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%7]) with mapi id 15.20.7698.025; Tue, 25 Jun 2024
 14:41:37 +0000
Message-ID: <9b44e1b6-9f56-4dea-8993-d3f3d43e9dd2@amd.com>
Date: Tue, 25 Jun 2024 09:41:34 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 3/9] PCI/portdrv: Update portdrv with an atomic
 notifier for reporting AER internal errors
Content-Language: en-US
To: Dan Williams <dan.j.williams@intel.com>, ira.weiny@intel.com,
 dave@stgolabs.net, dave.jiang@intel.com, alison.schofield@intel.com,
 ming4.li@intel.com, vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com
Cc: Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-4-terry.bowman@amd.com>
 <6675d622447ac_57ac2942c@dwillia2-xfh.jf.intel.com.notmuch>
 <ce191d03-c228-4f1e-b96a-0388220bc586@amd.com>
 <6679e94411f1d_56392941e@dwillia2-xfh.jf.intel.com.notmuch>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <6679e94411f1d_56392941e@dwillia2-xfh.jf.intel.com.notmuch>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA0PR11CA0062.namprd11.prod.outlook.com
 (2603:10b6:806:d2::7) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|DS7PR12MB8417:EE_
X-MS-Office365-Filtering-Correlation-Id: 4ac91b2e-53c5-4629-d5ba-08dc9524eaec
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|7416011|376011|1800799021|366013|921017;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?Y3lYQnNnTlBLQlhXUyt1RU9Hdng2MGtCZ2dXNGpHOTRST2xhZXJlaVpacDk4?=
 =?utf-8?B?M3poN2VjdjJFYkJ5UG15QklYVkRIK0MyYUM2dXJHUFVGTWNWRDJuOUFyV0pz?=
 =?utf-8?B?VVNlOU84YWJiQTdQMHkzL1JKVXdBL0loSHYvMGl4RWRSNTRocHJLT1NBS0xz?=
 =?utf-8?B?dTgrblpnNm5udHVmL3hFODJOemZpa3pnb2JXb3JTQlpVVStVVGZqY2N4T255?=
 =?utf-8?B?cUtLTnB5YW1PZzJCcFhGRlRtQmdKRDZzemV1WEFGZkdmT0NJaUpYVjhsWTN4?=
 =?utf-8?B?N1ovdXJONDhRUndZOStwK2srYmhkS25hWE5EekFIZVBRZFZFSis2TitoVDVO?=
 =?utf-8?B?STZFSFNoU092c3VMbHhaZ1M2YnloZWJqeEZPR3NPUzJZT3dsNUtKSWE1bzdP?=
 =?utf-8?B?eWJDV25BMjNUWklBTVpuMHFwUnNjQ2pXdnlGNEg5ZEk5OWgvOTRibFhiMTBE?=
 =?utf-8?B?MEkrZTBsOHZjNzM1VWRVelFnKzhzN0tSZDJxNjBaMm1HeDJQb3lZcHFpUUlo?=
 =?utf-8?B?dU9hTlo0cnh0YThpSWVhYXVObFhyNmFCbFlMUlZDT3pGeEwwTCtiOCtwN2Zz?=
 =?utf-8?B?cXkvK0dVM3BrS013MWdpTmFweDlDWkRZNytwNGNxZFl3aTlPZ05vYUMzL1F3?=
 =?utf-8?B?ME9EVm50UE91bnViYUo4QjhnS1IraWVjLzhlZXFJQnpQSzVRUGtxbmtXR1FU?=
 =?utf-8?B?YUZvYjVpZlBSVVJYa2hySSt1VHpKc09XM3RVWVRnc3JjeDFvcU10alNCQmQv?=
 =?utf-8?B?Nnd6LzhVN29NMUxhb2VoRytLcUhnLzlLVXRuR2FFTk1JeklGdDlVbnNvcUhV?=
 =?utf-8?B?MXlhNXZUQ0Q0SCtYWWp4SWpzVUg1Ry9ZQ25NeDF4cHUxVFNHNkYvSlVzMlZa?=
 =?utf-8?B?ellLbGpiSUpOc1lCUW9Sc3g5UWtOSlhxZ0hodkJ3R0NBYjJOL0N1UkRoSjdC?=
 =?utf-8?B?YUxQdld4VWsvNjB4Z0w2NWtCWW94N2hsWWRIajdkcXJOa2J0Vytmb2RoR0U3?=
 =?utf-8?B?VTRjakM2ajR4cUxRak5XNUhrdDZTQUJuakJMSGozMHJvY0swa1NEWEtTVmNW?=
 =?utf-8?B?RU5lak9Va21JRkpkVWJlUlN0N0Q2MHB4a2U3OE1TbzNLZFRtUDk5dkF6RXlN?=
 =?utf-8?B?aC9xT3Nwai8wMVdPUGFRNHJ3V0llSlgyRDV2R0RoTzhTTGplbmxlcTBFUzZJ?=
 =?utf-8?B?ZzEyMlRFQVVIbnRvL2U1dlVIS0Q5MGxHK2pRMnp2bUx5MWdJdFVSb2I0YUto?=
 =?utf-8?B?emRsaUx0a1kwOGQ0N3V4c3Q5ZWdzcmhrRmpNTmZPdTJsL1lteXJ3aU4yRjNt?=
 =?utf-8?B?eHNKNm9ROUtDblR1ajBpeWJsNHVYWS9OYzJPZ3RzOXFWc25vcHFDaGh1THR6?=
 =?utf-8?B?T1lvT0FiKzNBYW84T2pnQi9ONDBKU0xIZEprREJiWXJKek53eVVjRHhpL1h0?=
 =?utf-8?B?SmNnZjF2WlA1M1FqNCtJR2pkbC9pa1dUa0tNYUkrV1ZYRTVza2RuM2hKL2RE?=
 =?utf-8?B?d2xUazdnbXB1YmxiZ2QwdTRLbFl2VVJweTIvSXhwTG43L0R4S29yL2FrSHM1?=
 =?utf-8?B?bDN1czZlOWRBT3pNT3JHRWJiQjZWRjEwOXdHRmd3K0FsMTlETUJCVGFIWTNM?=
 =?utf-8?B?ZkJmVEpFeDI3aUd2b2N4SkVzbUcxdFl2THVBOENyeU85YkZBNFJwY2dMcmsz?=
 =?utf-8?B?aEtVSVIwVW9FR2NLMkVEZTVQUkNJVmY1aWxJdU1MejVPbjFjd3VJRHhrMXdv?=
 =?utf-8?B?MjFvLzZZc1NyVU5Dbm5Ld3diYlE0OG1RYmVCOWgzdGRvVTlMYXlSOXhkZUNm?=
 =?utf-8?B?L3VpdVJVeVN1OW5wZ2RnR1gxQ0t6VCtpclZZN2o4U3JwejlmMFZaWFArQnU2?=
 =?utf-8?Q?jCMZS1y8G6elu?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(7416011)(376011)(1800799021)(366013)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?bUlsOXN4K3Q0anJFTWR2YmdBdHl3RHN1Zi8xWWQxKzAzTjBUWjlNU0NkckFD?=
 =?utf-8?B?YXhpckhwaW04NnhmME4zRzNjNzZCbGxjbzhNQ0NzcDVmUldEUXRlSVhWTXFV?=
 =?utf-8?B?UlhZR1VTNkNwMitNTm9GOSt4dHFFSlZ4YzhuUVNGSW5RN2s2UXI5c3RSaUlL?=
 =?utf-8?B?Mmp0TGp1aVBGeDZ0cGR3OTNBT1ZzZFBtVFJvY1J2aGppa2hHazRYdkZHb0sy?=
 =?utf-8?B?YTQxUmlrRFdaUGV2aU5GcXNDNngzamsvaURLbC9BRGYwZldiMDRGblM5RSti?=
 =?utf-8?B?TXp4VlZhRElRK3QwZW4xTG5JWHAwcmtHck5sVDFJRXBYU2hiM25qZlZ4WG51?=
 =?utf-8?B?VC9pWTB5UGJlVm9BRGUrUFUrbC9mbnF6MEVLMDBXUWdqVE83cmU5aDI0NzEx?=
 =?utf-8?B?NkxnSktzcmd5S2Ztc2N0K00wWERzUWhKTzFRaTlQVHRyVnNSbnVWZW1RVlBx?=
 =?utf-8?B?cXNZV20wc3oyUC94VHJXQnJuemZBdVVZWityZ2tzNWQrQnhVK2wxZHBSa2pW?=
 =?utf-8?B?SGFYVjBWVEp0QzR1MDhZc1pZZzE0amZWb1lDK2kvUUxmc0xtakkxUGdHK2F6?=
 =?utf-8?B?UTBoem1JeitiRnE5eGZ2ZWtqbzhzSFlUUzdXUEdaT1RDOGxEMTkwOWlmN1ZQ?=
 =?utf-8?B?TStpUHdNYlBCK1pZQWhmaFZWZGthK1ZidU95Q0tsampGTWg4djYzelROS1cz?=
 =?utf-8?B?LzVhT1NTNkRLYU92V1h0MFYzd1NkdWZaRUlZZEkxQ2tzV0Z3WlNPZUhNUDI3?=
 =?utf-8?B?dG80M2NZQnJhVXdtK3MySlIwRGxZTjd0SXFtTCtHSHVOL2ZUZXUydllPbC9Q?=
 =?utf-8?B?RDAvekE1L1M0Yy9RN09yc21OdDNRUUFHeTRXSHV5SGR0cnJ3eit2ZFJOMmVN?=
 =?utf-8?B?QWFLSkhHZURGZ2FreVhlQndvNzkwSUZIcGtiV1g1REdUUEIrdGVVMnFsdkFT?=
 =?utf-8?B?TlBFQjEwZGUvLzgrcXhHS05ja1Vlei9DRDk4dVVJSWJEdWgrbGFBTjNqMlRW?=
 =?utf-8?B?S2IvSVRJd1Q3cGk3SURiRE5wakQrRGtIdnNETnBPdnFGN01PQ280akZVWkV2?=
 =?utf-8?B?TjVENktaMHRGdEpWb01iZjVzaEkvMnFjYkhkM2xQQXhOVXArMlF1VEo4aVBB?=
 =?utf-8?B?U3FTUXdrYlh3dHl3akkveTRTaTZQTjhwOWRUazl0a1YzRU0xY2lNaEp5NVRY?=
 =?utf-8?B?SmRxamRnWjRSbVNtZHl1YTBOTE8zWm05d2IrUEF5S2VmdW14aUdZc09EWW1x?=
 =?utf-8?B?WkdKbUNDY3VRT3pTaklxSjNFY3JVdUViSThZaTN6ZFRidjVPNHVSbXdJYXRo?=
 =?utf-8?B?STk0V1l2ZnVMRjQyS0s2T2poSkJyQ1AwbTBsZStHd2pNUFZJU3dqdDJORVY3?=
 =?utf-8?B?ZEtZa1l4Zit1VHdkN2dRYWdTVTZpTmtuWlk2WmFJNUUwaFhLeTNSSnRVTWNY?=
 =?utf-8?B?VUdsZkJGdVRYK0hNZjh4NXJYbXExaEszWEYvcG80MUJ0UEpPV3NFd0RoTGZa?=
 =?utf-8?B?aUdnSTBsUVdFWmpnc2FQK1JsUUlhVzlqRExsUnhiUFFad25EWXBmZjlEaFpn?=
 =?utf-8?B?ZUxSZ3ZyU0hPeHo0Qml0WFptcDZwSWpTLzdJV2s5V2xsYTYvRE02RWdqNWpS?=
 =?utf-8?B?Y0lBM3pQNTVHeDJJM01jcFBJZE1tQTl6TTlSNmMwOXVMaG9EdTZtL1ZaMUsv?=
 =?utf-8?B?RmRTRkRsMUFZeE56anNXU1FtU3pvTzROTVo4WlJncFA5U2VSeGhsdW90blVt?=
 =?utf-8?B?aXdNQkt5TFl6MzY5cWMvMlhpdWFMR1cvQjd1cFBCMVhkTmFFaEIzOHpQYmRq?=
 =?utf-8?B?WkZNR3Fkdm91WlA0WDlyd1huaFk4ZER4czg2MlRlejZHa2hNVzVzcTdHRWVY?=
 =?utf-8?B?N1AwNjd6UVlta0V4cC9HZzA5bklGVDBteWIwbWJiRnFpNW9HbzZmSXEzZGNS?=
 =?utf-8?B?aFdjZlM1bkpIdXI5b1Y2NXQ2MDdLSFkvdEhGQ29qcTZZdkg5TmUrcUJsbUNm?=
 =?utf-8?B?SE5UVEdzQ0JxRXF4aVFQek8xeStoU1QvNCtxVUlJckFEZHhuSnByZVdadE5q?=
 =?utf-8?B?S2h4L1FaOHFsdFZmSzh1bGdLWVlqTXRBczBYMDZHS050dnRwTlkrSHNGNkNL?=
 =?utf-8?Q?YUYmamO7bllg/0u6KkC35d9AH?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 4ac91b2e-53c5-4629-d5ba-08dc9524eaec
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Jun 2024 14:41:37.3742
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: g6yokkWjrb7XNJ0IcanwrZxWnm2ybPozrNDcw7N/y1Ya30a9wJfufYMFz+aKm/ZbnLOn+JLpw6FlNFMHIegErA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS7PR12MB8417



On 6/24/24 16:46, Dan Williams wrote:
> Terry Bowman wrote:
>> Hi Dan,
>>
>> I added responses inline below.
>>
>> On 6/21/24 14:36, Dan Williams wrote:
>>> Terry Bowman wrote:
>>>> PCIe port devices are bound to portdrv, the PCIe port bus driver. portdrv
>>>> does not implement an AER correctable handler (CE) but does implement the
>>>> AER uncorrectable error (UCE). The UCE handler is fairly straightforward
>>>> in that it only checks for frozen error state and returns the next step
>>>> for recovery accordingly.
>>>>
>>>> As a result, port devices relying on AER correctable internal errors (CIE)
>>>> and AER uncorrectable internal errors (UIE) will not be handled. Note,
>>>> the PCIe spec indicates AER CIE/UIE can be used to report implementation
>>>> specific errors.[1]
>>>>
>>>> CXL root ports, CXL downstream switch ports, and CXL upstream switch ports
>>>> are examples of devices using the AER CIE/UIE for implementation specific
>>>> purposes. These CXL ports use the AER interrupt and AER CIE/UIE status to
>>>> report CXL RAS errors.[2]
>>>>
>>>> Add an atomic notifier to portdrv's CE/UCE handlers. Use the atomic
>>>> notifier to report CIE/UIE errors to the registered functions. This will
>>>> require adding a CE handler and updating the existing UCE handler.
>>>>
>>>> For the UCE handler, the CXL spec states UIE errors should return need
>>>> reset: "The only method of recovering from an Uncorrectable Internal Error
>>>> is reset or hardware replacement."[1]
>>>>
>>>> [1] PCI6.0 - 6.2.10 Internal Errors
>>>> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>>>>              Upstream Switch Ports
>>>>
>>>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>>>> Cc: Bjorn Helgaas <bhelgaas@google.com>
>>>> Cc: linux-pci@vger.kernel.org
>>>> ---
>>>>  drivers/pci/pcie/portdrv.c | 32 ++++++++++++++++++++++++++++++++
>>>>  drivers/pci/pcie/portdrv.h |  2 ++
>>>>  2 files changed, 34 insertions(+)
>>>>
>>>> diff --git a/drivers/pci/pcie/portdrv.c b/drivers/pci/pcie/portdrv.c
>>>> index 14a4b89a3b83..86d80e0e9606 100644
>>>> --- a/drivers/pci/pcie/portdrv.c
>>>> +++ b/drivers/pci/pcie/portdrv.c
>>>> @@ -37,6 +37,9 @@ struct portdrv_service_data {
>>>>  	u32 service;
>>>>  };
>>>>  
>>>> +ATOMIC_NOTIFIER_HEAD(portdrv_aer_internal_err_chain);
>>>> +EXPORT_SYMBOL_GPL(portdrv_aer_internal_err_chain);
>>>> +
>>>>  /**
>>>>   * release_pcie_device - free PCI Express port service device structure
>>>>   * @dev: Port service device to release
>>>> @@ -745,11 +748,39 @@ static void pcie_portdrv_shutdown(struct pci_dev *dev)
>>>>  static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *dev,
>>>>  					pci_channel_state_t error)
>>>>  {
>>>> +	if (dev->aer_cap) {
>>>> +		u32 status;
>>>> +
>>>> +		pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_UNCOR_STATUS,
>>>> +				      &status);
>>>> +
>>>> +		if (status & PCI_ERR_UNC_INTN) {
>>>> +			atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
>>>> +						   AER_FATAL, (void *)dev);
>>>> +			return PCI_ERS_RESULT_NEED_RESET;
>>>> +		}
>>>> +	}
>>>> +
>>>
>>> Oh, this is a finer grained  / lower-level location than I was
>>> expecting. I was expecting that the notifier was just conveying the port
>>> interrupt notification to a driver that knew how to take the next step.
>>> This pcie_portdrv_error_detected() is a notification that is already
>>> "downstream" of the AER notification.
>>>
>>
>> My intent was to implement the UIE/CIE "implementation specific" behavior as 
>> mentioned in the PCI spec. This included allowing port devices to be notified if 
>> needed. This plan is not ideal but works within the PCI portdrv situation
>> and before we can introduce a CXL specific portdriver.
> 
> ...but it really isn't implementation specific behavior like all the
> other anonymous internal error cases. This is an open standard
> definition that just happens to alias with the PCIe "internal"
> notification mechanism.
> 
>>
>>> If PCIe does not care about CIE and UIE then don't make it care, but
>>> redirect the notifications to the CXL side that may care.
>>>
>>> Leave the portdrv handlers PCIe native as much as possible.
>>>
>>> Now, I have not thought through the full implications of that
>>> suggestion, but for now am reacting to this AER -> PCIe err_handler ->
>>> CXL notfier as potentially more awkward than AER -> CXL notifier. It's a
>>> separate error handling domain that the PCIe side likely does not want
>>> to worry about. PCIe side is only responsible for allowing CXL to
>>> register for the notifications beacuse the AER interrupt is shared.
>>
>> Hmmm, this sounds like either option#2 or introducing a CXL portdrv service 
>> driver. 
>>
>> Thanks for the reviews and please let me know which option you 
>> would like me to purse.
> 
> So after looking at this patchset I think calling the PCIe portdrv error
> handler set for anything other than PCIe errors is likely a mistake. The
> CXL protocol side of the house can experience errors that have no
> relation to errors that PCIe needs to handle or care about.
> 
> I am thinking something like cxl_rch_handle_error() becomes
> cxl_handle_error() and when that successfully handles the error then no
> need to trigger pcie_do_recovery().
> 
> pcie_do_recovery() is too tightly scoped to error recovery that is
> reasonable for PCIe links. That may not be reasonable to CXL devices
> where protocol errors potentially implicate that a system memory
> transaction failed. The blast radius of CXL protocol errors are not
> constrained to single devices like the PCIe case.
> 
> With that change something like a new cxl_do_recovery() can operate on
> the cxl_port topology and know that it has exclusive control of the
> error handling registers.

Ok, I'll refactor the existing AER RCH downstream port handling to support
CXL USP, DSP, and RP as well. I can incorporate much of the feedback from 
this RFC into the new patchset.

Thanks Dan.

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-BN1-obe.outbound.protection.outlook.com (mail-bn1nam02on2059.outbound.protection.outlook.com [40.107.212.59])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 0EB7116C685;
	Tue, 25 Jun 2024 14:29:51 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.212.59
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719325794; cv=fail; b=Zg7Hg5LpLg56A/mjGf8Cec+9bs9OElhB4MIPijgd7MuUbVW0pJNqeu6fjODTErlPeev8tuBC11hw6CsWlkZm02rSmdQplIFECU5TEo0HVTEz+GAeBumb/nqCmg6N4A0Aaf1OPjxucU37kh6zlAyxep+ehnJmd5h8fOKMUBOQHZU=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719325794; c=relaxed/simple;
	bh=LWXA1APFcyPBArOra51jATN4mjZNpuDrnHi2lMFkw7U=;
	h=Message-ID:Date:Subject:To:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=Rs6wXwydxZM8hRKQ5ZS7YrLYa5l11nJvRTLb+Rvavv8Een7FXaBA0bAkKld0smU8FvGv5VvkZgUyAhzA8l+mhUlRx+AdrssYZQ+zcFJrctpCu2VpFdCIQiOe5x2CDZ4RY3V/ORwWW/BtJh6D24/XCaufBMRsZ7oTPK6Wa0ZxN0g=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=oD/JAdJt; arc=fail smtp.client-ip=40.107.212.59
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="oD/JAdJt"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=KGCYmHdqkNytggSAqD2HQzCKnSaQ4OsylMGY425jINDrrFkJxDw0Wv+osoNNlhH384oHGiU81AshMHqYo6gzRr2e3m9X5ZKgqFF32ghqMZK9sYi5GbtIUJJC19KA2SMXm6DbL/Pv769LGvs0fHiQy1+reR7WxMmhyZ46dHJBnTKUU35w8Qr1lOmkvACvlkZsssnuAlTHaX2FxsLaB8YaPbEwjmlMBBAqMIfpDzd3HTg7OLLj+s4mpvmaDrqoPzpXCLhgnScWv5wmCb6MTqgJGb8uzrYuP8eocsa2YTGYmA3Pfus6LsiFtZXN6bFslMkaM13NoOAsVJItIdhaRszmYg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=W5iYGxqP1d/S+XDkkT9GdX+KvZFEX8+ZZ8Xb2jSND6s=;
 b=B/zoQGsG0MeEd8YXfsvxjhoxN3YI6zr9TCPolW9jppY4J2BgLrHmcIjMH7jW4gH13MubSwVVn6/LjjytYXiE0ox3oDsiNurGSlleSkyWaDEMH7x6zo+fn0w6JuJCkTu1pkg7sfW0/fMnrfMgn1Di9wj9pu7QvhOrO5J8l2pVDU916p04o3NT7pe2rzfavoBKt+DOCcv9vXVh8Ympm2EYPuGSpKKzTKkAdWnhSuIUl/xbDTkVrR3JGfMOfj7LZ0PkmsmFlpxvZS+mx/88wDUUI+GjAzhefVFMnYBHgZJryc3fkljk47VAMM5E+/EjCKg1oraJSeC2KXosDGXIVN7i5A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=W5iYGxqP1d/S+XDkkT9GdX+KvZFEX8+ZZ8Xb2jSND6s=;
 b=oD/JAdJtVBDHcpwD6YWTA0YpQ0O4hfRrrOmhSyn1RsP8KimtqI5Gji0x2QJXd3hVd8YxBFK9t4vDeHvoMki0NgJjSzn8yA/1zJcdJaHD/mNp1BIg2JPFjhAeFEVjWx4L5D0cE8lxWk6ApJ10qxzVuIR9cOdaGUbQnyNpyG4e7uA=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 CY8PR12MB7145.namprd12.prod.outlook.com (2603:10b6:930:5f::8) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.7698.32; Tue, 25 Jun 2024 14:29:48 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%7]) with mapi id 15.20.7698.025; Tue, 25 Jun 2024
 14:29:48 +0000
Message-ID: <6ef2bf5d-b78b-490f-b64f-30dec3197df5@amd.com>
Date: Tue, 25 Jun 2024 09:29:45 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [RFC PATCH 0/9] Add RAS support for CXL root ports, CXL
 downstream switch ports, and CXL upstream switch ports
Content-Language: en-US
To: Dan Williams <dan.j.williams@intel.com>, ira.weiny@intel.com,
 dave@stgolabs.net, dave.jiang@intel.com, alison.schofield@intel.com,
 ming4.li@intel.com, vishal.l.verma@intel.com, jim.harris@samsung.com,
 ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
 sathyanarayanan.kuppuswamy@linux.intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, Yazen.Ghannam@amd.com, Robert.Richter@amd.com
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <6675cece52eaf_57ac294ea@dwillia2-xfh.jf.intel.com.notmuch>
 <f4dffe22-b383-4118-bd3b-a3afb2df835e@amd.com>
 <6679dc345fd4c_5639294a5@dwillia2-xfh.jf.intel.com.notmuch>
From: Terry Bowman <Terry.Bowman@amd.com>
In-Reply-To: <6679dc345fd4c_5639294a5@dwillia2-xfh.jf.intel.com.notmuch>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SN6PR04CA0108.namprd04.prod.outlook.com
 (2603:10b6:805:f2::49) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|CY8PR12MB7145:EE_
X-MS-Office365-Filtering-Correlation-Id: 268ab72d-0738-4501-1e73-08dc95234443
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|366013|1800799021|376011|7416011|921017;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?V2lSSzNhaHVwS1dtVVBvanZNdVFDcXhydUl0dG5TbWc3VkphcWFwLzMrODU3?=
 =?utf-8?B?YmdqVXZiK1R6cG5kaFkrNDNWaXhHNWY0T2pTRk9RZDJuNElwZXhvY3ZXelE0?=
 =?utf-8?B?eHJFNXE0US8zZGthTzI3Vi9XQzdnTmp0bm4zdkkvdzNsNC9VcC81U0tWSU5S?=
 =?utf-8?B?TWJKMDVjbEkybm82ZGgvakRLcERuNDRJTEtlSFFwRzFtblBaSmhjaHpEdmk5?=
 =?utf-8?B?bmoyTXFBLzJHQTM1OW5KTWU0dHp0NlV1L0RPL1BKYUlSYVIrbnRMTjVCV2Vh?=
 =?utf-8?B?S2s5T0VteklDc2gvYzMzby9WbjJwM3Qvcm8vQlVvOWxsWWRDVXZyMVZTUTEv?=
 =?utf-8?B?aDhtaGoyTVJ5TEJ2ZWkvQWdJaFZBUFhPT3hWVWxYS0xxNEg0R3BiaHBZRmVD?=
 =?utf-8?B?QzNFRHltQndGb0dHMEVhSHYvMm9JOG5DVFNQUjJreEZmY3B0eTBtS3VpUmVQ?=
 =?utf-8?B?bGo1dFlhVk9rVjdWMFhvNmlxeGxsTHVTeGp0RnV0d1ZGdWhkR0hZaEIzOFpQ?=
 =?utf-8?B?cjFKUzFPRFpRRjVVK2V5QlBsSUcxYmpGZFMybEZSYXNZckczU21VcERRR2FV?=
 =?utf-8?B?Mm8yMEp2MUM5VEttN1AzRFlMaEk2aHpZa1AwQXRhNGd6ZXplRWtIcFBWL284?=
 =?utf-8?B?K1J0T2ROaVVraWlZbmNpTnVUbVJvcDNIYlp0UVUwN1ljWm1KMGNIbWJucnBT?=
 =?utf-8?B?RWV5T1FBYXJFK29HUXdjQkJhSVZBbUhsYmJRb3JkL1RHN0NOSTZCN05Sb3Yz?=
 =?utf-8?B?bVhudGNxU1NxS21mM0pJTFc5STBYMy9GbW5WQU9mWGdlUDRHNVgvdnN1Ly81?=
 =?utf-8?B?L1dnSCsxQVJIQnFYTFl2RURFMHJYWHFzZ2tRZU1yYXlPejBYeWRKS1FWWHM5?=
 =?utf-8?B?VHdBVDdiaDdHMHQxakgyVWRyVGx4aStXajdnZVA0V0FjblMwQno5RnhYcEdF?=
 =?utf-8?B?QlBkeFpLY2VYWDQycFNPZ2hSSDJJeVIwVzdVTXBRb2c0MWFmZDNsa0xGTFpX?=
 =?utf-8?B?eUh3ajZFQVg5c1VlV2NkZW1KTS9pa2JqZ2k4L2k3OHRhRjEzcXhlR3Q3Z3dq?=
 =?utf-8?B?Y0JqUkZvckw4WjVUdm5RL0JBd2lhcjZpd3NBTnZlU1BmMWxVK2lHcjJWOGRy?=
 =?utf-8?B?VklpZllmYnoxbkhQamR5My9NS0dLM0JYMjJsbWo0MGVwUmhLaHNidUt6clZk?=
 =?utf-8?B?bkVFczJCd2daNWZZWmZaL3pBb3diNVF2cDlLSVltU09pVHFkdlRhdWRFMGNk?=
 =?utf-8?B?VzJUSFBJOW5ybXI2YnU4dUpMQ1dnQ3BWVC9uZzk4U0JiLzFHYnFRd1NjUjZC?=
 =?utf-8?B?Tjdpdmc5NTl4blBLaW1DUEZOTmZ1ZkgrNG9FVEs2Q1RjRENJZzNueDM3dSs1?=
 =?utf-8?B?OXdQZnNONmUvTk1vK1BVVnVYZ3NRYmhBS2k2Vk4wVVJGcFhqUDN2cjhMc2xt?=
 =?utf-8?B?VTQ4dFNYZUlLclVBTkZzRHlTeGpxSGh6YWpPWll3R2x4N3RrR3BxbExoSzkx?=
 =?utf-8?B?Vkk1MG5yQUJBV2wxL0dLaHdwVlZFbkRGaUQ0SGJzb0hlVG1IWTNWUmNRWWNu?=
 =?utf-8?B?bkZKM2hjcGZjZ0QrWURoUUFYMmFWVjk5UTlmampqYVVEWUIyOHhkVFNSVExm?=
 =?utf-8?B?M2FYOTJXZWJuN0lOUytITEcrbmVkUFUxdndoRmE1Sy9LemFPU3g5Z3Jhckw0?=
 =?utf-8?B?V0RxSlFndWF3QzNCbmk3SzlpZEVCdjV1d01oQ2xJcG9YazVNY25kcHN0TkN3?=
 =?utf-8?B?QjB4OC85SHMwWmFWSm16R0ptU2hwN2l1dHkvaG1tZzI2ZjBJLzZPdE40ZzN3?=
 =?utf-8?Q?y+0za5P+qtWvImJJNljXcfj4rtLRbNk20jXT8=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(366013)(1800799021)(376011)(7416011)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?bEhNanpwTVhWVzdReU9Ic0pmekszNlVhZW1IckVkWWk1cUsrcWEyQW1BdmFV?=
 =?utf-8?B?UzVpYjcwYXVWNUNFdmU0WWFqRTdJT1RzcXluWERjZHZWc2xxNFlaVGFtMUtO?=
 =?utf-8?B?d3hsdk4xUXZkcUtCUHZSRHM4aEhsNDMvb0pEVHpJVHpRUlc1dHdydTVYYnlG?=
 =?utf-8?B?QkU0RVpsNk8wemh0aVY4UDBpMlNSNThscTFiVkEwYk1IQnl1UFE0TFAyVDA0?=
 =?utf-8?B?OGM1ZnVSd0kzemJVTWR0SXpGRkM0Z0JIZ0IwakRkdnZlNFEvOFZTUk9HaWx4?=
 =?utf-8?B?TDVHMnRQYzBMT2RLNkRJc2F3UkU1SHI4dDJlbXZBbDBRTkNFSEdDb0Fqb1dE?=
 =?utf-8?B?cUo1TGU2d2FZc1RXNDg3Y2dIdlV5NkN3Skdra1pGL2o4SVNlQk1oSFFlRlpt?=
 =?utf-8?B?TUtmOERUYjNzampPbFkrdllINEpnMTBlUHMxWVRJc1JOTEJ4ekhhTmxTRWs3?=
 =?utf-8?B?dzhPQy9BaDFGc2VBTzZ2bGtQZmo5R2RqMWhXZ0JUOWsrSnlCWFhsbVp6TTRy?=
 =?utf-8?B?dmFpRmpPUUxqemZxb3ZJQ1htc1hTRkkwU0tQdjBQbTFBbU55bklwdU0wMmdY?=
 =?utf-8?B?dDc5emlPRjVCUHlEQzRsUkV1elBna2hHMjNJTUlneFVlVnVyZkg3YjBHS0kr?=
 =?utf-8?B?OGlobURiNVpiS21Xc2RhWjVtWStwUlBkb2k5T2FHK0Q0YUgxTXJnU3dZRHk3?=
 =?utf-8?B?Mko0bnFXWHMrOUZyWHR6Q3RVS1M3SzhEN0RrcDNydlM3QVR5YXQ0Sm43UjJu?=
 =?utf-8?B?UlJTb3VtRWxIM01kZ1FRSXVjcXB6UEV5V1NWeTFFaTRtdTYwUkpLUlBIdW05?=
 =?utf-8?B?c3dZQkJ0N1RaRkdCV2dXU0VwWGJQdUswdDdJWUVRdzRYbTU2aHpINnhiS1I4?=
 =?utf-8?B?MTYrSnVXZkRvQmg1eStXMFJ5eE04TWM0NkhjYndlb2tVVVBQSWtnNmxISTJU?=
 =?utf-8?B?clF0YlR4dE01aklLU3ovdVk1SnI2MXpKbUlyblZPbUIwSnM3MDJCN1dicWxR?=
 =?utf-8?B?M2NWNUx4WXZHZms5ZFlabzRLWVBwVlBndjZOcFdkc2xXaDQvR29Cak4xd1M4?=
 =?utf-8?B?RHVvblhvR05icm01cERyQkkybmxOb21ENUJaMlZXSUVEbEpkdUtKVjdMeVQ4?=
 =?utf-8?B?QjhLM1lscldUcTZ3OHVYa2NUTXhyL3FFVWRDYU51S2NQdUpCekVrRTBZUXIv?=
 =?utf-8?B?Mm5ERW5IMWZRRFNOOStRUFZuM2tlSWtpWGIrSjVxL2NienZCbUMwT2VFWG12?=
 =?utf-8?B?NEFwMjE0M0MrWG5MbWhPYnhZS0RMK3p4OGF5VGxkZUZzWHp3TVovQll2WWlI?=
 =?utf-8?B?SDBOS3pZTUxwWHlsdmRqeVVydmh2U0hDK0R5SjBGR3VWRnBkNHdMZVpkdUF5?=
 =?utf-8?B?MEdvN1gyTDNkRWdZN1p5TG5IQ2RXUmdUR3c5TEdQanhDSnZ3M000bkM0Snp2?=
 =?utf-8?B?Qmp5cUVoUm02bWhNMDY3TkN3RmhSdE5TM29UZnJUS0VuNEJDSXVDcjlhUDV3?=
 =?utf-8?B?NGpUdW5HOUs5VzhiNVg0T0FDL2lqRHRNN0wycUVtaVA1WXhlL2wraG5JSjlR?=
 =?utf-8?B?WlRoKzZlUDRHTktLNzVnUW1mM2txSmk2OEV6UFhCem5RNnpsMFpKbGtSQTMx?=
 =?utf-8?B?ZHJIK1FXb0RYKzNHZ3VYcXZsVjRNalE4SDlCN09OWkRIVXRiVnp6bG9WWTY2?=
 =?utf-8?B?dDJxQ2Nnck5OTjRLQ2gwb2UyTFRiUyttQzJhWXE0QTAzOGY5ZFVaYkwxcEN0?=
 =?utf-8?B?SktweVIxZzlVR3dwWk03ZUtaVmtQMDVrWkhNN2VXMGlXRVRZYmtxUFQ2RnF0?=
 =?utf-8?B?dnZoMUR0OTdlY2VrSVIwbjZsaVY3cjExbUc1bVdqWU5SU3pLZlgxblAvVkxo?=
 =?utf-8?B?YjBHTGx2dWQzR2lsTWUxVVdJUFhYYUZPNGZySjAwTnFvcjUraFBBVkUzV3Ro?=
 =?utf-8?B?UmVSb3FuM0lsQVpWN2ZDV1VkWERicWJ6dHJFN2NNOTkzbzJJQ2tmVmNqelVn?=
 =?utf-8?B?Y3h2VU0rMTdVb0ttc0owQk9ZRWlOelVJdzZWdTNZV05VWi94ZVVLc3ZXR2hM?=
 =?utf-8?B?REo0Z3FJbHV5eWRXakhyM1JYNk9hWHBmMW0wVy9BUkNoUGhaTXZLa3FtWVlX?=
 =?utf-8?Q?XErmobqGDy48ZrIVuDGNUGlmD?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 268ab72d-0738-4501-1e73-08dc95234443
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Jun 2024 14:29:48.2863
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: CtaufGVTEaJt36/HN862fJLLKByqXHPF671JO0KrGu7n6gtqiOtVYQ6Y8LGu5j3pnvzFpyTyuQb8489EyIyTsg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY8PR12MB7145



On 6/24/24 15:51, Dan Williams wrote:
> Terry Bowman wrote:
>> Hi Dan,
>>
>> I added responses below.
>>
>> On 6/21/24 14:04, Dan Williams wrote:
>>> Terry Bowman wrote:
>>>> This patchset provides RAS logging for CXL root ports, CXL downstream
>>>> switch ports, and CXL upstream switch ports. This includes changes to
>>>> use a portdrv notifier chain to communicate CXL AER/RAS errors to a
>>>> cxl_pci callback.
>>>>
>>>> The first 3 patches prepare for and add an atomic notifier chain to the
>>>> portdrv driver. The portdrv's notifier chain reports the port device's
>>>> AER internal errors to the registered callback(s). The preparation changes
>>>> include a portdrv update to call the uncorrectable handler for PCIe root
>>>> ports and PCIe downstream switch ports. Also, the AER correctable error
>>>> (CE) status is made available to the AER CE handler.
>>>>
>>>> The next 4 patches are in preparation for adding an atomic notification
>>>> callback in the cxl_pci driver. This is for receiving AER internal error
>>>> events from the portdrv notifier chain. Preparation includes adding RAS
>>>> register block mapping, adding trace functions for logging, and
>>>> refactoring cxl_pci RAS functions for reuse.
>>>>
>>>> The final 2 patches enable the AER internal error interrupts.
>>> [..] 
>>>>
>>>> Solutions Considered (1-4):
>>>>   Below are solutions that were considered. Solution #4 is
>>>>   implemented in this patchset. 
>>> [..]
>>>>  2.) Update the AER driver to call cxl_pci driver's error handler before
>>>>  calling pci_aer_handle_error()
>>>>
>>>>  This is similar to the existing RCH port error approach in aer.c.
>>>>  In this solution the AER driver searches for a downstream CXL endpoint
>>>>  to 'handle' detected CXL port protocol errors.
>>>>
>>>>  This is a good solution to consider if the one presented in this patchset
>>>>  is not acceptable. I was initially reluctant to this approach because it
>>>>  adds more CXL coupling to the AER driver. But, I think this solution
>>>>  would technically work. I believe Ming was working towards this
>>>>  solution.
>>>
>>> I feel like the coupling is warranted because these things *are* PCIe
>>> and CXL ports, but it means solving the interrupt distribution problem.
>>>
>>
>> I understand the service driver interrupt issue but it is not clear how it 
>> applies to the CXL port error handling. Can you help me understand how the 
>> interrupt issue affects CXL port AER UIE/CIE handling in the AER driver.
> 
> Just the case of the AER MSI/-X vector being multiplexed with other CXL
> functionality on the same device. If the CXL interrupt vector is to be
> enabled later then it means MSI/-X vector enabling needs to be dynamic.
> 
> ...but yeah, not a problem now as we are only talking about PCIe AER
> events and not multiplexing yet. I.e. that problem can be solved later.
> 
>>
>>
>>>>   3.) Refactor portdrv
>>>>   The portdrv refactoring solution is to change the portdrv service drivers
>>>>   into PCIe auxiliary drivers. With this change the facility drivers can be
>>>>   associated with a PCIe driver instead fixed bound to the portdrv driver.
>>>>
>>>>   In this case the CXL port functionality would be added either as a CXL
>>>>   auxiliary driver or as a CXL specific port driver
>>>>   (PCI_CLASS_BRIDGE_PCI_NORMAL).
>>>>
>>>>   This solution has challenges in the interrupt allocation by separate
>>>>   auxiliary drivers and in binding of a specific driver. Binding is
>>>>   currently based on PCIe class and would require extending the binding
>>>>   logic to support multiple drivers for the same class.
>>>>
>>>>   Jonathan Cameron is working towards this solution by initially solving
>>>>   for the PMU service driver.[1] It is using the auxiliary bus to associate
>>>>   what were service drivers with the portdrv driver. Using a CXL auxiliary
>>>>   for handling CXL port RAS errors would result in RAS logic called from
>>>>   the cxl_pci and CXL auxiliary drivers. This may need a library driver.
>>>
>>> I don't think auxiliary bus is a fundamental step forward from pcie
>>> portdrv, it's just a s/pcie_port_bus_type/auxiliary_bus_type/ rename,
>>> but with all the same problems around how to distribute interrupt
>>> services to different interested parties.
>>>
>>> So I think notifiers are interesting from the perspective of a software
>>> hack to enable interrupt distribution. However, given that dynamic MSI-X
>>> support is within reach I am interested in exploring that path and
>>> mandating that archs that want to handle CXL protocol errors natively
>>> need to enable dynamic MSI-X. Otherwise, those platforms should disclaim
>>> native protocol error handling support via CXL _OSC.
>>>
>>> In other words, I expect native dynamic MSI-X support is more
>>> maintainable in the sense of keeping all the code in one notification
>>> domain.
>>>
>>>>   4.) Using a portdrv notifier chain/callback for CIE/UIE
>>>>   (Implemented in this patchset)
>>>>
>>>>   This solution uses a portdrv atomic chain notifier and a cxl_pci
>>>>   callback to handle and log CXL port RAS errors.
>>>
>>> Oh, I will need to look that the cxl_pci tie in for this, I was
>>> expecting cxl_pci only gets involved in the RCH case because the port
>>> and the endpoint are one in the same object. in the VH case I would only
>>> expect cxl_pci to get involved for its own observed protocol errors, not
>>> those reported upstream from that endpoint.
>>>
>>
>> The CXL port error handling needs a place to live with few options at the moment.
>> Where do you want the CXL port error handlers to reside? 
> 
> I need to go understand exactly why cxl_pci is involved in this current
> proposal, but I was thinking it is probably more natural for cxl_port to
> have error handlers.

Ok. I agree, cxl_port is a better location for the handlers.

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.10])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 8D69D1DFD1;
	Mon, 24 Jun 2024 21:46:51 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=198.175.65.10
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1719265613; cv=fail; b=q6FedyJtE4OZtf/c15S3el3gHyf4erRlt2JD/22QJyWUT3LhBe9pP6iLRAhZI8wMNS7JnQFgNSgqa0iyu6WEdYlSKX7vYBmyIwZ7n5aI01gargEAJLw6bBze2Sxnu5v/2jcvZYpXsYAahw2yft7iNLJ9XoL+x0OMMlacE5+DMro=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1719265613; c=relaxed/simple;
	bh=pc9qORuynFYg/WESt22G1L9B0BmC96vonyc6ASYqtLA=;
	h=Date:From:To:CC:Subject:Message-ID:References:Content-Type:
	 Content-Disposition:In-Reply-To:MIME-Version; b=LPrFe6Qvk0cCsJDmCTWw/QzgwjADGn+D9qe45HG1D6f8e/lxsi94k0wRSq8OPBEU8OfCZflhCH5DNKwCWB67a6gGEt8SWvhtWUYGtAF29F9tkWgqa/2Fzug8hgAFlo0fiAg6B15diUphP51aND0oZmKRj6zEev4T5WlnR4NSGuQ=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=khFtqFqi; arc=fail smtp.client-ip=198.175.65.10
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="khFtqFqi"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1719265612; x=1750801612;
  h=date:from:to:cc:subject:message-id:references:
   in-reply-to:mime-version;
  bh=pc9qORuynFYg/WESt22G1L9B0BmC96vonyc6ASYqtLA=;
  b=khFtqFqix8U4bhZ8NVBtS4pC4JItvCYAtIcWD5zRfuXmmYQdlOfYhZjb
   zDzG+V5wfPWf69/1EMFJSyTzeUhLanZ8yBix1+jMLqexokgAxh88E34Wa
   eM/K9aO2tOGV17aFgSoTqlLMSYhw1ppw+pZneloWr7Y43XpqHmDQ6gWgT
   YO+N9Wf4DrhWnReqcFQf2BjzCoLQhtvhRvuKd4tncCFVSzft4P3RLRRL7
   8qVMQXgmsrNcF3COYtsqhWhmtNscp0a8Mv9gph3HakQ0WYf6YwGmODXCt
   HbWzvTbKVEEmSOGmhFlgi+kuQcEaovpKB1ckiv+dZoSKWME9CvF/mLLss
   g==;
X-CSE-ConnectionGUID: 7QTkkL4pSLCcWD4s/yHAfg==
X-CSE-MsgGUID: Ki9s91HwS82KoeknBX8EpA==
X-IronPort-AV: E=McAfee;i="6700,10204,11113"; a="33717129"
X-IronPort-AV: E=Sophos;i="6.08,262,1712646000"; 
   d="scan'208";a="33717129"
Received: from fmviesa008.fm.intel.com ([10.60.135.148])
  by orvoesa102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 24 Jun 2024 14:46:51 -0700
X-CSE-ConnectionGUID: h0+XGbh7Sx6W/AxMJRR+OA==
X-CSE-MsgGUID: R7GzrskaQ2m8qFxMOY+dUw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.08,262,1712646000"; 
   d="scan'208";a="43411981"
Received: from orsmsx603.amr.corp.intel.com ([10.22.229.16])
  by fmviesa008.fm.intel.com with ESMTP/TLS/AES256-GCM-SHA384; 24 Jun 2024 14:46:50 -0700
Received: from orsmsx610.amr.corp.intel.com (10.22.229.23) by
 ORSMSX603.amr.corp.intel.com (10.22.229.16) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Mon, 24 Jun 2024 14:46:49 -0700
Received: from ORSEDG602.ED.cps.intel.com (10.7.248.7) by
 orsmsx610.amr.corp.intel.com (10.22.229.23) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39 via Frontend Transport; Mon, 24 Jun 2024 14:46:49 -0700
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (104.47.59.169)
 by edgegateway.intel.com (134.134.137.103) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.39; Mon, 24 Jun 2024 14:46:49 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=EkeZDIaeA+aIx04Hrly1hQ9iFlidkzd/9lOJ8QCFv5Kq04JpZ6USoyIjupGT/q4v5U3PP3P1yY1wHPwpiIEQVMXgnaCeMqT9hkFeHMzAVZlHoRJ4jtbyWVntnSUWF5XTL5OsjmgmbPn6c2HpZWcRBHRPrG1OdeM++gW2Y2EzNY11aBAgDfXgbeTIIELgnkTgEdLQ5VQUjH21piYr7fE2CC0991ZhxMjyVBLQ3MeV5YNXzp73GmUEPEFobqSjtZznjzMQ6tGzMmN6dftaLYAt+w6FrvTDo7Ag1EsDRJVAVpZeVe8DCuuaXoxwb8PcJkausLj90DgeqX/PdrCZ6o51GA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=weRvFE5bPu1MdGYwCrF0pn5Kw+pHdE1+LiE36UlpnDA=;
 b=eWU+c0Yrcme3BvID8WMbAf+H1sbui3MOGv7gXjsoWnEq5N93+7simoGvhFb8MqnDOwu0noAeR77MPLci2nLclfuXDLQkoLwskNIOMFdnQDdoj12mhiyN7lqfytxd/jZbUGcje9IxH5KibBMTFJLCLZvsdJczOE96y6pItswBBl6rFRzpjBy8qQ+0+FrEI3voGFswbloMH5a+Jnaqg8gT6QFAPokRSVyxt0H89J9MVSY9St+gYOx/aC+XHgi8Bc2C6Lv+fGxFS+K3iCB4W8NLkVqhoMgYrnB2YTyYnp6U0XTUdhZZp/4HvlN08Vwe7xLgd9Cpyrk5iUkUl6RYGb1Fnw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by CH3PR11MB8658.namprd11.prod.outlook.com (2603:10b6:610:1c5::17) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.7698.25; Mon, 24 Jun
 2024 21:46:47 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8%6]) with mapi id 15.20.7698.025; Mon, 24 Jun 2024
 21:46:47 +0000
Date: Mon, 24 Jun 2024 14:46:44 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Terry Bowman <Terry.Bowman@amd.com>, Dan Williams
	<dan.j.williams@intel.com>, <ira.weiny@intel.com>, <dave@stgolabs.net>,
	<dave.jiang@intel.com>, <alison.schofield@intel.com>, <ming4.li@intel.com>,
	<vishal.l.verma@intel.com>, <jim.harris@samsung.com>,
	<ilpo.jarvinen@linux.intel.com>, <ardb@kernel.org>,
	<sathyanarayanan.kuppuswamy@linux.intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <Yazen.Ghannam@amd.com>,
	<Robert.Richter@amd.com>
CC: Bjorn Helgaas <bhelgaas@google.com>, <linux-pci@vger.kernel.org>
Subject: Re: [RFC PATCH 3/9] PCI/portdrv: Update portdrv with an atomic
 notifier for reporting AER internal errors
Message-ID: <6679e94411f1d_56392941e@dwillia2-xfh.jf.intel.com.notmuch>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-4-terry.bowman@amd.com>
 <6675d622447ac_57ac2942c@dwillia2-xfh.jf.intel.com.notmuch>
 <ce191d03-c228-4f1e-b96a-0388220bc586@amd.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <ce191d03-c228-4f1e-b96a-0388220bc586@amd.com>
X-ClientProxiedBy: MW4PR03CA0278.namprd03.prod.outlook.com
 (2603:10b6:303:b5::13) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|CH3PR11MB8658:EE_
X-MS-Office365-Filtering-Correlation-Id: 390b6bd0-fa5f-4eb7-ed04-08dc949725cf
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230037|376011|7416011|1800799021|366013|921017;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?agukuCX2T1wj0YfkY5lK0lPqaedKG/IlUKGL8TnovAiHrDIAc1dXbiRZzC5a?=
 =?us-ascii?Q?0951/0fOSJ5NLoLJzmwUnG/xoiixvD5H7c933eMLOVUybsoy/Qkf1OanKRDc?=
 =?us-ascii?Q?uhfJLKBOfvmGC4Pzvbd5tJCaUGclcuzSkGIxWIM6ECOTAHAH6piXKkSXPEHX?=
 =?us-ascii?Q?YKig5ICGML5R/dKaBi+9aQCIqmoESf32FqGpCsn0mqL7xOpsG5HUjoe8rr3H?=
 =?us-ascii?Q?G+P4kqT1vsymGhrKxEoqOZxIN/SRhnuyssUBGqAh7Q2JwPSbWnS74YZZhlmP?=
 =?us-ascii?Q?Iwu0ddYOH9SFpXL9FVHVvTxa7e17vaBfaXdHpp1xPaJh2UamLoaaKhcyF4In?=
 =?us-ascii?Q?ZGIkMq2oMHUAVAODYYjfXQCBFhnGx4ANUX77UemqoB03zjJSeY1PaI177gIh?=
 =?us-ascii?Q?fJaL9dzHIUaQ6eIadDC5vF65zxiChqEXu+fUL0JTOH+xG8bcrIgdtXTI63pM?=
 =?us-ascii?Q?VN3Nqc1TBsV+ovCf/kKp5O6C/oa1WmrLRNHQHz509R/DIt2cU1hUMKPOZXbL?=
 =?us-ascii?Q?XYgg01Ksv8ifehsNEJoN/n97HmecPTtn7g3JSLVdXKOqRJODOx0aR1/sMJuO?=
 =?us-ascii?Q?04asy5U6YBHTe6+hKEBENUYGH62wDBqXW0Rygij6jAZbAQP6sjolFcwr2NWM?=
 =?us-ascii?Q?RV675vC8gt/f5QOljIxztnjAWTUWVaL+6K5qNFdfIp1Vtqkd50wHogIGIyWM?=
 =?us-ascii?Q?FjpBGuqAHgGngSXICyw+GOkXNtfH00DAfM0b/Mor6sRiIypTkdOODs8gtIIr?=
 =?us-ascii?Q?Bst+6TkMMU8XljRZJGrpvKv6QXajtfW/yOICFkk2JTPq/yJ6I8uMcDRNzQ11?=
 =?us-ascii?Q?8dS6tu23Mq489qEYt0/JzhSDCqzwyNIE9C4wjztNCEJMs2EDRnV86FZz82fU?=
 =?us-ascii?Q?8oMcKK+uwUeDHOh9l5Diwjx1AuOhmi1QcFLT5M4IsEN2MaZ+Sw+Nc994pOlN?=
 =?us-ascii?Q?faom6S/oAzp2hw+wQchtOqZhuinay7lRwQU9tJNomPjuZarbvLb4+/26bKox?=
 =?us-ascii?Q?s7Wt5qMEbCL5yB6Iy7NI4wh2EwsSr+v0VwK2ch2oJWRRm3Oe5N+3uSqAavaP?=
 =?us-ascii?Q?7iOaP1WMJUngT8wlOCn0Gl1/uZqk5M77XnYw+nhyM1ltGbLd5g17o/NrKPUB?=
 =?us-ascii?Q?fMEhVhehGngOK6rYY4FxmDjlUBJcpfV1Dm/BvCJLF9l3NigseW/QdvO59EOn?=
 =?us-ascii?Q?Cp1DAELUlUDgRD/+gJe/OpU+Dd5GnepKw+TO0Hoqz9U20W8+AfsUAQZEYupH?=
 =?us-ascii?Q?K5UQ/UknRCCLg+XVrujoFm9+i5HSbSP+iZG5mYt2mzR2fz7WWBkVuw11o70l?=
 =?us-ascii?Q?DzbnP5pjkP3fktcGgJ78vgxin8hO9fDsqmui3ADRgm0foYTO3Zg4VfbnmLXQ?=
 =?us-ascii?Q?9AwPYsE=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230037)(376011)(7416011)(1800799021)(366013)(921017);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?C3cKN5EhnCNFGXdSeGdgOLmcYbjk4KRApFjn3guUfWkD/98lz9ol30bT3Kjq?=
 =?us-ascii?Q?gUAxblc19JeGBcHJVdoJCDcb8tmQ7HunKgnNg7+E6hhbby7WIUJkBQvVJFGp?=
 =?us-ascii?Q?w3fIMGtTyR5x75rE4fQJO+z7uy0ukhzNzVPuED+ApmojmBCRls+iuUB816I4?=
 =?us-ascii?Q?bBQlNtapqOPZcxm8+U1vQCydX5FpoiBpJK8oEyCx8yu/8zJkXuKxo9Vmra4q?=
 =?us-ascii?Q?g0LE9EEs5r6HlfO/5H9uoJVLMfVmpI0wV0Wbr/Ceut2CAzJgCHbGmm85e2m3?=
 =?us-ascii?Q?LSa0JiV0mxtJ9RvWdbhitgo1nASRGgakWzQ+mavERH+fO33b5oynKgGGrSc2?=
 =?us-ascii?Q?RPyIqX5OjTBmczaSFPsoDvYGNrUa8zPsIt+d1DbnTAZdSE2WbfJLFh92K5h5?=
 =?us-ascii?Q?RJ7GD0BdM/Ts0i/U5FRJRssOrEHWaN5ziwUGQWtLHxYNfcJcZRfTQXj2jRP6?=
 =?us-ascii?Q?+ZwlYYXCaH9DeXLcQytuSi3iu8AEWLA/FgazdBOY6JFgs7AHv5MQ3SCnn/zN?=
 =?us-ascii?Q?yfFiSaQKOYTKqxtZuNi0GHoQIlWJvNe9w7OUEhkCCekPE08N8/2n7E7/2YZk?=
 =?us-ascii?Q?R9eoE55ijK9Zw7SnuEBcuD/HqL4qxdJUt3ve8NAabt3+VYnfxY8obfNbIsgu?=
 =?us-ascii?Q?1R2mTT2DmyNabelJSo7OGvFJr5EE4lXjrcCO2LTELkooj8nLTiUI9mhUycT1?=
 =?us-ascii?Q?Ne584fL1vPvAtZYYzncRimT7uYkn+xfAVLyAr36gSSc6GUT5KcpjnjsdbQt5?=
 =?us-ascii?Q?iHOlxuQYXCfpuZ5OUOxtNfZqHcMBa3iU3Ok3986eDj0ErKPA/4NBvfOg+hDA?=
 =?us-ascii?Q?owLmOFy1rtb9djW2jKhCo090Js/ygrLU2hXXFS6xvuoOBrPMJgt2TaauR2HH?=
 =?us-ascii?Q?0wKTw9k4fLTKRMkBLbh4p2JnnM9jXNgw7wEIOHvajOzyCuZUA+kBqcU1M20o?=
 =?us-ascii?Q?mbBWUt8s9fb3a3yUpPlvA7IvaYPLfEjQuz2ZDmQDEbh6TYx6gCPggaC/M0Ny?=
 =?us-ascii?Q?bY4hPPGz73c011qPKxjJVwksHJJVOl/mhuQ4D6r/N5qr4Ez+ptxiaulUtrOi?=
 =?us-ascii?Q?lFRnr0ctAdOxyWNR+c1OWkilLBbKwVeMDwutSO150xNydn1Tw48ylbYK0/mt?=
 =?us-ascii?Q?Q3DROE/FEyybk3+LXXHbttEHq9KEsp2iFKGts5iy3Cz674kxtUno/22SfUUc?=
 =?us-ascii?Q?K2S7GCOtonqbvTlgC0LNzze6pf+dwE6L0WjE3Udlnk6UM1csE35ed9slEjZZ?=
 =?us-ascii?Q?hFo/QZp47cNiCuowrXyjqQ5J/2HIUU/BYY0dlge9H61C9KsCM372n/fCblUk?=
 =?us-ascii?Q?ausCd8QlkewhSZqZVugrZ1IBV7DrFx8tuY5ygOoMpky9+/ipgJN6ZMKHPfrK?=
 =?us-ascii?Q?EAnIayEy1Dm0PILl7rgnGdUovaCZMj9FXI5vGq0mTNjvgcicYvyLgWUVyOOr?=
 =?us-ascii?Q?qG5+B4kRT3mbBBOF7AMua4tTOVTLlpH7bfoD80JAy7Pio2Z1jxW4S9HuvKeo?=
 =?us-ascii?Q?DKEV6/yyDcGY2aC82ud+Whlot4W+su8qOLuvI2IrDEiQT19q2b+wx0U1QzlO?=
 =?us-ascii?Q?j4xmj6EyJ2XbLL++bcMv+b8OQ2FacqXgCC2rRzVH0n4Cd2Tmql7i7fMW3mpr?=
 =?us-ascii?Q?5g=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 390b6bd0-fa5f-4eb7-ed04-08dc949725cf
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 24 Jun 2024 21:46:47.6731
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: qw1VXlISFuRm3Nq6buSHqkD7bAlcT5RoAFLoes9+tH9znirq4CtGwjsqUKXTVrqm+DRSM0s6glZKx1Sk12/C7fRfA0M6SsUGZTj3MdfLpBg=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CH3PR11MB8658
X-OriginatorOrg: intel.com

Terry Bowman wrote:
> Hi Dan,
> 
> I added responses inline below.
> 
> On 6/21/24 14:36, Dan Williams wrote:
> > Terry Bowman wrote:
> >> PCIe port devices are bound to portdrv, the PCIe port bus driver. portdrv
> >> does not implement an AER correctable handler (CE) but does implement the
> >> AER uncorrectable error (UCE). The UCE handler is fairly straightforward
> >> in that it only checks for frozen error state and returns the next step
> >> for recovery accordingly.
> >>
> >> As a result, port devices relying on AER correctable internal errors (CIE)
> >> and AER uncorrectable internal errors (UIE) will not be handled. Note,
> >> the PCIe spec indicates AER CIE/UIE can be used to report implementation
> >> specific errors.[1]
> >>
> >> CXL root ports, CXL downstream switch ports, and CXL upstream switch ports
> >> are examples of devices using the AER CIE/UIE for implementation specific
> >> purposes. These CXL ports use the AER interrupt and AER CIE/UIE status to
> >> report CXL RAS errors.[2]
> >>
> >> Add an atomic notifier to portdrv's CE/UCE handlers. Use the atomic
> >> notifier to report CIE/UIE errors to the registered functions. This will
> >> require adding a CE handler and updating the existing UCE handler.
> >>
> >> For the UCE handler, the CXL spec states UIE errors should return need
> >> reset: "The only method of recovering from an Uncorrectable Internal Error
> >> is reset or hardware replacement."[1]
> >>
> >> [1] PCI6.0 - 6.2.10 Internal Errors
> >> [2] CXL3.1 - 12.2.2 CXL Root Ports, Downstream Switch Ports, and
> >>              Upstream Switch Ports
> >>
> >> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> >> Cc: Bjorn Helgaas <bhelgaas@google.com>
> >> Cc: linux-pci@vger.kernel.org
> >> ---
> >>  drivers/pci/pcie/portdrv.c | 32 ++++++++++++++++++++++++++++++++
> >>  drivers/pci/pcie/portdrv.h |  2 ++
> >>  2 files changed, 34 insertions(+)
> >>
> >> diff --git a/drivers/pci/pcie/portdrv.c b/drivers/pci/pcie/portdrv.c
> >> index 14a4b89a3b83..86d80e0e9606 100644
> >> --- a/drivers/pci/pcie/portdrv.c
> >> +++ b/drivers/pci/pcie/portdrv.c
> >> @@ -37,6 +37,9 @@ struct portdrv_service_data {
> >>  	u32 service;
> >>  };
> >>  
> >> +ATOMIC_NOTIFIER_HEAD(portdrv_aer_internal_err_chain);
> >> +EXPORT_SYMBOL_GPL(portdrv_aer_internal_err_chain);
> >> +
> >>  /**
> >>   * release_pcie_device - free PCI Express port service device structure
> >>   * @dev: Port service device to release
> >> @@ -745,11 +748,39 @@ static void pcie_portdrv_shutdown(struct pci_dev *dev)
> >>  static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *dev,
> >>  					pci_channel_state_t error)
> >>  {
> >> +	if (dev->aer_cap) {
> >> +		u32 status;
> >> +
> >> +		pci_read_config_dword(dev, dev->aer_cap + PCI_ERR_UNCOR_STATUS,
> >> +				      &status);
> >> +
> >> +		if (status & PCI_ERR_UNC_INTN) {
> >> +			atomic_notifier_call_chain(&portdrv_aer_internal_err_chain,
> >> +						   AER_FATAL, (void *)dev);
> >> +			return PCI_ERS_RESULT_NEED_RESET;
> >> +		}
> >> +	}
> >> +
> > 
> > Oh, this is a finer grained  / lower-level location than I was
> > expecting. I was expecting that the notifier was just conveying the port
> > interrupt notification to a driver that knew how to take the next step.
> > This pcie_portdrv_error_detected() is a notification that is already
> > "downstream" of the AER notification.
> > 
> 
> My intent was to implement the UIE/CIE "implementation specific" behavior as 
> mentioned in the PCI spec. This included allowing port devices to be notified if 
> needed. This plan is not ideal but works within the PCI portdrv situation
> and before we can introduce a CXL specific portdriver.

...but it really isn't implementation specific behavior like all the
other anonymous internal error cases. This is an open standard
definition that just happens to alias with the PCIe "internal"
notification mechanism.

> 
> > If PCIe does not care about CIE and UIE then don't make it care, but
> > redirect the notifications to the CXL side that may care.
> > 
> > Leave the portdrv handlers PCIe native as much as possible.
> > 
> > Now, I have not thought through the full implications of that
> > suggestion, but for now am reacting to this AER -> PCIe err_handler ->
> > CXL notfier as potentially more awkward than AER -> CXL notifier. It's a
> > separate error handling domain that the PCIe side likely does not want
> > to worry about. PCIe side is only responsible for allowing CXL to
> > register for the notifications beacuse the AER interrupt is shared.
> 
> Hmmm, this sounds like either option#2 or introducing a CXL portdrv service 
> driver. 
> 
> Thanks for the reviews and please let me know which option you 
> would like me to purse.

So after looking at this patchset I think calling the PCIe portdrv error
handler set for anything other than PCIe errors is likely a mistake. The
CXL protocol side of the house can experience errors that have no
relation to errors that PCIe needs to handle or care about.

I am thinking something like cxl_rch_handle_error() becomes
cxl_handle_error() and when that successfully handles the error then no
need to trigger pcie_do_recovery().

pcie_do_recovery() is too tightly scoped to error recovery that is
reasonable for PCIe links. That may not be reasonable to CXL devices
where protocol errors potentially implicate that a system memory
transaction failed. The blast radius of CXL protocol errors are not
constrained to single devices like the PCIe case.

With that change something like a new cxl_do_recovery() can operate on
the cxl_port topology and know that it has exclusive control of the
error handling registers.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pl1-f176.google.com (mail-pl1-f176.google.com [209.85.214.176])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 8AD2610A36;
	Thu, 11 Jul 2024 01:14:41 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.214.176
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1720660483; cv=none; b=Ai9ryazEBVve/EMowsjAvjOby7YUAa0IAUrfLUdfDCvjfoXTtoTR41IK3ejbZaT88vHRUIWj7aG1piNMr0VYHXg9nToRFQwvaqPmUep1UdbjVvVz1bHwcM3cE76CIM3psSSmNYzwt3TU5VYjCu1Wn7ReLd//y4wrNbCE8EXK/xA=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1720660483; c=relaxed/simple;
	bh=6/zkEDXjZjxv6dDfH3KWAd0N7AnaFH1Zmp5aws/7dQk=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=sI7rDliEmEIRyR5Yy1kW8j+Pgu2K/HF+Wom7MBVSQf2QcKt7XEg/UZYiWLzz4Kwzk5JYWxgKh9ITZ4lsml1FaCkTe/QuhCIOP9urhUrVzqYZEHM/QqYdUiQi21cdHzyVOFzueYI9LfHi6Wd2k5KEc7Wf+nIJQXZSSKHy3RpatuM=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=jAUiNpn4; arc=none smtp.client-ip=209.85.214.176
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="jAUiNpn4"
Received: by mail-pl1-f176.google.com with SMTP id d9443c01a7336-1fafc9e07f8so2504905ad.0;
        Wed, 10 Jul 2024 18:14:41 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1720660481; x=1721265281; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=rr7Q65/uUNMtJMngxD5LyYKesf+tbYcSf5IHS4oP4n8=;
        b=jAUiNpn4e5i8hbgW/V9nHh1y59tzaQH2MI3E39ZRSwTckpsbUPo6zdDi0M7Qj1H1Ew
         sHrPSR4u8vPArEXfIe4QSskottINLFSo3J1CCphBTdUoRgiOeg9oAPxEk76DJcVY1x2I
         YcI6sfZRVVs09dEVw8O9gdFaoVO0OGQRCGjXMyrC7VVf1/8g/Lwc4lLNr/6LrLHHoJvB
         +z2FuTKpxJ4D2kMufB/PS0heZs6wMCE/bZIlAhMNBBDHzNmdq6QgZHBr0ZzxKVmOjQXS
         4vZOTwCQYbQA9jDkLG3+erjcGabcObbLsJATKHnQHHX14MLW+SuTCbHQG/mkzPsLX7fd
         Pq0A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1720660481; x=1721265281;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=rr7Q65/uUNMtJMngxD5LyYKesf+tbYcSf5IHS4oP4n8=;
        b=oXBvrlDHANZWtoLM326Sf/ZiLS7s7E65/KZSacRuwDgT4rBhCXbi96P79mmLuqVSuf
         lFwcsmsOqKnw7JUuj12wAXZ/QLWCB0HaO3sxpwJUibaH5RrNRxcNPFU3G3x/InTXdPvD
         4yfihOVH4EkKWDQaO7S5LKpQwULORcfA9qDwXXskLKli06RPWFjgtUqBt7ed8TMd3B6x
         XgrDZHhXca3/7F9wmtDdPdS95pgt//bk1CwneDENy71NXcXS3rhH+e0mZ0BerMDNgrsu
         sqXM/NSWPtH+DdUE+zLyk8Kt+2GzzrCRqBylGWrqhkM9CxsOWLEgLNpdMF4lIq/Va1p9
         8OBQ==
X-Forwarded-Encrypted: i=1; AJvYcCXPzrKGNiHpTDhGHvBmm0J+KZgcnYo4JbEabFLCgv8aZdPYF4pxt7eW+zEYyXFXyr3V52NIFlzhckrRVFLkNsar0U4seuGxv+QvK+gX7t9xoovjgkz1YsA/QV0533QVOk8Hh6vH5sNnqsG9qi/l/G2auppb6UOv5KPE9Y1MUxaJsYUZ
X-Gm-Message-State: AOJu0YxAfNFHfRgMIXFrZyleiHeykJdquZ7fuCEdxD7nbJmM1A3HCPdP
	jrNrIv7zvjVgClvTPxB1//KMRL/ZF2H2Xc2+s+vHmv2rrzuIrkxU
X-Google-Smtp-Source: AGHT+IFJUeFA3eAzgk0yLfvuWC7HhHDzJ0TYJRTj/e7EpBNO4Fa5aqAl/Zb3JcJpxWMpURw+W2y5RA==
X-Received: by 2002:a17:903:2bcb:b0:1f8:5a64:b468 with SMTP id d9443c01a7336-1fbb6ed9d22mr62847735ad.47.1720660480788;
        Wed, 10 Jul 2024 18:14:40 -0700 (PDT)
Received: from debian ([2601:646:8f03:9fee:398f:325f:a0e2:200f])
        by smtp.gmail.com with ESMTPSA id d9443c01a7336-1fbb6ab7c66sm39383215ad.121.2024.07.10.18.14.39
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Wed, 10 Jul 2024 18:14:40 -0700 (PDT)
From: fan <nifan.cxl@gmail.com>
X-Google-Original-From: fan <fan@debian>
Date: Wed, 10 Jul 2024 18:14:25 -0700
To: Terry Bowman <Terry.Bowman@amd.com>
Cc: nifan.cxl@gmail.com, Dan Williams <dan.j.williams@intel.com>,
	ira.weiny@intel.com, dave@stgolabs.net, dave.jiang@intel.com,
	alison.schofield@intel.com, ming4.li@intel.com,
	vishal.l.verma@intel.com, jim.harris@samsung.com,
	ilpo.jarvinen@linux.intel.com, ardb@kernel.org,
	sathyanarayanan.kuppuswamy@linux.intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	Yazen.Ghannam@amd.com, Robert.Richter@amd.com,
	Bjorn Helgaas <bhelgaas@google.com>, linux-pci@vger.kernel.org
Subject: Re: [RFC PATCH 1/9] PCI/AER: Update AER driver to call root port and
 downstream port UCE handlers
Message-ID: <Zo8x8YvdHSgcjGcR@debian>
References: <20240617200411.1426554-1-terry.bowman@amd.com>
 <20240617200411.1426554-2-terry.bowman@amd.com>
 <6675d1cc5d08_57ac294d5@dwillia2-xfh.jf.intel.com.notmuch>
 <ecc5fbd0-52e1-443f-8e5a-2546328319b2@amd.com>
 <668ef3a2.050a0220.96a0c.4f5c@mx.google.com>
 <8bf0d1c9-632e-458b-9b78-0faeea0472f8@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <8bf0d1c9-632e-458b-9b78-0faeea0472f8@amd.com>

On Wed, Jul 10, 2024 at 04:48:09PM -0500, Terry Bowman wrote:
> Hi Fan,
> 
> On 7/10/24 15:48, nifan.cxl@gmail.com wrote:
> > On Mon, Jun 24, 2024 at 12:56:29PM -0500, Terry Bowman wrote:
> >> Hi Dan,
> >>
> >> I added a response below.
> >>
> >> On 6/21/24 14:17, Dan Williams wrote:
> >>> Terry Bowman wrote:
> >>>> The AER service driver does not currently call a handler for AER
> >>>> uncorrectable errors (UCE) detected in root ports or downstream
> >>>> ports. This is not needed in most cases because common PCIe port
> >>>> functionality is handled by portdrv service drivers.
> >>>>
> >>>> CXL root ports include CXL specific RAS registers that need logging
> >>>> before starting do_recovery() in the UCE case.
> >>>>
> >>>> Update the AER service driver to call the UCE handler for root ports
> >>>> and downstream ports. These PCIe port devices are bound to the portdrv
> >>>> driver that includes a CE and UCE handler to be called.
> >>>>
> >>>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> >>>> Cc: Bjorn Helgaas <bhelgaas@google.com>
> >>>> Cc: linux-pci@vger.kernel.org
> >>>> ---
> >>>>  drivers/pci/pcie/err.c | 20 ++++++++++++++++++++
> >>>>  1 file changed, 20 insertions(+)
> >>>>
> >>>> diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
> >>>> index 705893b5f7b0..a4db474b2be5 100644
> >>>> --- a/drivers/pci/pcie/err.c
> >>>> +++ b/drivers/pci/pcie/err.c
> >>>> @@ -203,6 +203,26 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
> >>>>  	pci_ers_result_t status = PCI_ERS_RESULT_CAN_RECOVER;
> >>>>  	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
> >>>>  
> >>>> +	/*
> >>>> +	 * PCIe ports may include functionality beyond the standard
> >>>> +	 * extended port capabilities. This may present a need to log and
> >>>> +	 * handle errors not addressed in this driver. Examples are CXL
> >>>> +	 * root ports and CXL downstream switch ports using AER UIE to
> >>>> +	 * indicate CXL UCE RAS protocol errors.
> >>>> +	 */
> >>>> +	if (type == PCI_EXP_TYPE_ROOT_PORT ||
> >>>> +	    type == PCI_EXP_TYPE_DOWNSTREAM) {
> >>>> +		struct pci_driver *pdrv = dev->driver;
> >>>> +
> >>>> +		if (pdrv && pdrv->err_handler &&
> >>>> +		    pdrv->err_handler->error_detected) {
> >>>> +			const struct pci_error_handlers *err_handler;
> >>>> +
> >>>> +			err_handler = pdrv->err_handler;
> >>>> +			status = err_handler->error_detected(dev, state);
> >>>> +		}
> >>>> +	}
> >>>> +
> >>>
> >>> Would not a more appropriate place for this be pci_walk_bridge() where
> >>> the ->subordinate == NULL and these type-check cases are unified?
> >>
> >> It does. I can take a look at moving that.
> > 
> > Has that already been handled in pci_walk_bridge?
> > 
> > The function pci_walk_bridge() will call report_error_detected, where
> > the err handler will be called. 
> > https://elixir.bootlin.com/linux/v6.10-rc6/source/drivers/pci/pcie/err.c#L80
> > 
> > Fan
> > 
> 
> You would think so but the UCE handler was not called in my testing for the PCIe 
> ports (RP,USP,DSP). The pci_walk_bridge() function has 2 cases:
> - If there is a subordinate/secondary bus then the callback is called for
> those downstream devices but not the port itself.
> - If there is no subordinate/secondary bus then the callback is invoked for the 
> port itself.
> 
> The function header comment may explain it better:
> /**                                                                                                                                                                                                                
>  * pci_walk_bridge - walk bridges potentially AER affected                                                                                                                                                         
>  * @bridge:     bridge which may be a Port, an RCEC, or an RCiEP                                                                                                                                                   
>  * @cb:         callback to be called for each device found                                                                                                                                                        
>  * @userdata:   arbitrary pointer to be passed to callback                                                                                                                                                         
>  *                                                             
>  * If the device provided is a bridge, walk the subordinate bus, including                                                                                                                                         
>  * any bridged devices on buses under this bus.  Call the provided callback                                                                                                                                        
>  * on each device found.                                                                                                                                                                                           
>  *                                                                                                                                                                                                                 
>  * If the device provided has no subordinate bus, e.g., an RCEC or RCiEP,                                                                                                                                          
>  * call the callback on the device itself. 
>  */
> 
> Regards,
> Terry

OK, interesting.
Btw, what is the "state" passed to pcie_do_recovery(...state...)?

Fan

> 
> >>
> >> Regards,
> >> Terry

