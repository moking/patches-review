From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-CO1-obe.outbound.protection.outlook.com (mail-co1nam11on2079.outbound.protection.outlook.com [40.107.220.79])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id DD5168BEC;
	Mon, 28 Oct 2024 01:05:53 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.220.79
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730077557; cv=fail; b=LeNdA/MUIA8QS1wfXm5c2K0j2BDxJ3Sa+h/Tk3NuCx5QwIe4C3ihF1O0v09aOxw0hgjVUF6w2P6YM6E0srng8KYV7u2mIOmF571c+MoEwAfXdhLepaVYTkHK4RKh0/Xghh2lQTxmcpyMFtGfk22uIOlbxWDgKvzV5IMVG0Une/4=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730077557; c=relaxed/simple;
	bh=VHlKtFuFxVgGvmY5ut+3rF2Qh1Hdui0Q3+fZIEJxgTA=;
	h=Message-ID:Date:Subject:To:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=CLk+UU89gl/VALAPJOhdEh5Hf554Ji20oiM3RwI/FUD9ERG46rbZIIPIwPE86noOpFMCJ7cQU8lRFffN3ZsItoDoaSMu/+IulC6+ZKiFF7oxcjI03tsjV+GoT5tmVBF32PM0xi+I5sBP+5bISdIfAxh/SLIw4wGADxMDuYmGOas=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=V7wr4RDw; arc=fail smtp.client-ip=40.107.220.79
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="V7wr4RDw"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=tELiWAHQoHCSGju7WCNoHKDBVW9DE+O2GYtza0GZ51bXZ70QRb95alKrjCxdcfl/KPw6rrzwVJxmaOmQ6r8PRx57vTuGc6mOs8T0Pw1vBmXPZy6X58ns+dExTVRtN5m8IfkON0t3XEA9dbLUoIzvOn9qxFwfAsLr4FbPAko/AL4cx60R4JTtDsr0dS+Wemod/sfxmwTwAXBq9POgBUiz81nwD9CLNarwF7V+al540ce5227myWNwjoDmOnJBqIsyyfrfivunJLm5KQ+j5+7ufp2osjajqGpGAZu31Vj57u4KbdKggvY2BJDBzlhmXPPl0IpBpoU1FGKsBWDhmtF62A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=RtVgPRk74DQS5IYdvdXn2BsATg8BW3vp8vUCL65G6lM=;
 b=CjyuLhImwuQILLeZqI0bk0dqOX9QGMBANFub0VJDlzZCp3S/d/+6ouRkw6uWkouuuhjzciNk0ypf/FOcbHuFYwpUGlgJHhUp5YN+KLIhIaJpCg8ssyE0cLprN35Kd1hJrdY5IL/2y7qOxXIVaSo40QosOJ7SD1C0Ghlh5e+8XkNF+a5//WEMOxgJxpi8p3iBRk0qR8MfEXnPvHXsdYq5hbUEEwMvU2T4mjW6vU1f39P8h8cQEBmnD4T13Qs+hTaWXHd42zDaIPYe5cE9Q9T2EGseNiI1Cavxp9jlb8Ip7nC0XtIAeN3/BtHcjP1mp1AubRO3PbLq+cOnCPTWBx/fbA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=RtVgPRk74DQS5IYdvdXn2BsATg8BW3vp8vUCL65G6lM=;
 b=V7wr4RDwksnMbHkgmabMzag20Fn8+eNBzrBWmNx6ZdCuDw9i9Ww+lZWeMnuDolSYuwAf/EXP+QYd0zP/rgz8DDMEkGJZ71OaIcQMfpLXvx1UjBW4YGNtJ8oibXMpSqMoBotS3wMJbq07eGaSzaQHFyLpn51ThdSlkClJQsQG7xo=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 MN2PR12MB4391.namprd12.prod.outlook.com (2603:10b6:208:269::21) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.25; Mon, 28 Oct
 2024 01:05:51 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%6]) with mapi id 15.20.8093.024; Mon, 28 Oct 2024
 01:05:50 +0000
Message-ID: <98aafc3a-cff9-4c81-9fc1-24375a405e49@amd.com>
Date: Sun, 27 Oct 2024 20:05:46 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 0/14] Enable CXL PCIe port protocol error handling and
 logging
To: ming4.li@intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, dave@stgolabs.net,
 jonathan.cameron@huawei.com, dave.jiang@intel.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA0PR11CA0006.namprd11.prod.outlook.com
 (2603:10b6:806:d3::11) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|MN2PR12MB4391:EE_
X-MS-Office365-Filtering-Correlation-Id: 11cad9d9-0ade-4b92-98bc-08dcf6eca9f0
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|376014|7416014|1800799024|366016|921020;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?S3MwZGlYMGVTaUxQMGdRU05XZjlhL3FJSlVxSE5nVHJTRWh0SGNnN0l4aVB1?=
 =?utf-8?B?Ti8zVDZXZkdMa1EvdnErcm94WGNhbG9lK0hWKys3dENYaWFBdmt2S0VaNzd2?=
 =?utf-8?B?NytrWERtNjJKQ0Z1R1Q3NVdld3F4dnlDTE1CcmZWZWZlTGh0a0IrM0pzQnUv?=
 =?utf-8?B?SlBwU1hHU3NXenUzTTRUS0ttbjR3UklDaUp2SzRHNUt2R1czd09kTGQzWDdY?=
 =?utf-8?B?eHprTGQ1U3g4bUdjSHJJNGx3TzlBbGM2T015T1B1WjZlK01zZEhwWE5GaHBu?=
 =?utf-8?B?L29NeFhSRTI1dngvVnJyblhyMjZvemRWWjc5TlNlVHlDN2ZwbytsWlBVZVpj?=
 =?utf-8?B?OVF5K05RRDhCVC9sc0k2YUE0Y09oMkpST3dueVpjMVh0WHJXMlJHSFkyZ0U3?=
 =?utf-8?B?QnhIeHpRWVhCT2taZjBITWNuTTM1Z0ljTmI5bUxXbGNTY3dtN2JDcVBKV0pt?=
 =?utf-8?B?RzFFQ2tiMkkzYnNqemJCeThoTW1OenJGaEdGdHF2czFTRG9NTk9IV0V2ZXhu?=
 =?utf-8?B?YlRvYWFWbHcxSVZCTE1hNzVjQVlPb3BnWkFlZ2lsMWJBS3Zjc1NmRzVkM3l2?=
 =?utf-8?B?ODY2QmpGeVNxcXpLZ2tlZWh4M1F6dmUvQ3dvbmtMM1h5WUcvVGE0di91TEJE?=
 =?utf-8?B?VTBoVVVad3dVQ1lwNlplbWtMcDRlb2FXVXZqY2c3L1J4Um9vMkhhU2JwZGRm?=
 =?utf-8?B?U0lDTWRCZTZ6Y3BFcFNrNWRpMkwxTVhTVnNWMmFVZFVYWXBtR0FLNDhyN2Z6?=
 =?utf-8?B?MUpaeGxaK21Mdld4NDNqeDg3ckFNM0FRWVJLVjF0NW84cHg1S3BFNTZzSGpi?=
 =?utf-8?B?bU03ZDZuWnYwWmd6ZTVjUExCUTQ2dTR1WW5Sc0lvdGR6MEpXdTMxWm1wR1JO?=
 =?utf-8?B?RFZjVGEvWHU2K1FSUHdhQmRqNGJKdXRVR2UwV2U3Z09RUWJqdFNrUiszY0VO?=
 =?utf-8?B?N25vVWtUV04vd0lXMDJQSmQ4ai9pV2VmSFlzakxocndSbUZDT0dZMGRDNnBB?=
 =?utf-8?B?RzF2bE1tQlRoaDEwMVZ2VWZTUzVoSWF2ZjVlUURVeFZBUEZKaXRQOTRWbUpw?=
 =?utf-8?B?YnU0V3dsTFdXZHdVd1dwcHRWOFRoMk1DOEdnblhCOWJqWG90R214TzZrMllq?=
 =?utf-8?B?dzNqK0JVKy9FRWFwK3BBOCtCY1FCQ3ZFRGFYYURQSFhUMmxaeWtqM2VKdk45?=
 =?utf-8?B?L0IycW0vNHQxKytaOHFGeWErNTd6a0Z5RG42aHlzUStGN2Q2SXU1NHQycFJ5?=
 =?utf-8?B?N2tlV3JOTjVUeUE1WkVHMndObkRzU3A2NzAybnlCUGdXZjlJYURDRzFsVXNQ?=
 =?utf-8?B?TUpIN1dkbkNNSHZPSlhTRzNkYjFVUUV5VFlrS0R0Szd3SW1abnloU2dOVlht?=
 =?utf-8?B?T2JaREgzNlViTU5jOTJ3ODdKeWthejBzeld5cnhUckNwS0xUS1B1ZVNyZWEw?=
 =?utf-8?B?V3NOYnhjd2dxUjc3ZmIrVWpZRExUcXZsLy9Tb3AwOTZ4Y1Z3QlhKSHIrMmdE?=
 =?utf-8?B?SzJlMkExSG0raFB3Y0NKWFR4SlpLSjhFZ0NFTVNmUkx3U3J1SVhYS1FtcU5P?=
 =?utf-8?B?bWZzOFJ1RGUyV2U5T1pKZ3dNV2Q1MTJ3aTJLcUdqYlFkNU1mZ0o2ZDQ4LzJ1?=
 =?utf-8?B?RGdoUnRuV0YxVEw4Mk5JUmFkNjkwWGN2ODJyL2Fjc29RdEhvTW9VK0JIbnY3?=
 =?utf-8?B?TUFLbDc0WUFER2tFRW0vZ2l5dUxGcDVyR0k1cFc5d0VRK3ZpaS9QSGhPeWt3?=
 =?utf-8?B?MWUvYUJQSzB0K3ljUGw4S2wvMVBvdFNZZUlwSDF3cjN3QmZrUy9HZVd5ekV1?=
 =?utf-8?Q?vPqJE+0rc3/W/zAySQSKBY1uEENyoh+q95dF0=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(376014)(7416014)(1800799024)(366016)(921020);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?QkQ2ZWZ6aVdOMEovMUl1SlhQWDcwYlBsdmRZdDV1aDlybjRvSlN1dXlLQ3pu?=
 =?utf-8?B?dW5nZjYxL3ZUZXNhdnNrQTIxdzFVMDZ2WEo5Qm5UYVU4VHRrL0E1M3M5SVlL?=
 =?utf-8?B?UlFCTzFqenhaY1UxUU1mNWhRbG9yM2NXZkdtWXdrQlNneEptM1d2Tmd1RjNr?=
 =?utf-8?B?WTZVbWx4QXd6L09JaWtKcG1HL0toV0dwZXYvZ1JtSDVCOTUvekxIclBKUDFY?=
 =?utf-8?B?bk5Pdk1qQlNXWjhFSkppeTVXUGJ3SmowRnlDTWJRTGxseEZmQitEa3hva2Rp?=
 =?utf-8?B?ZUp2Rkx4QkJ3WVlsUU9FcHRyRVQvYWlGK3JjWTZqOUUvTm8rLzBmUDJiYmJz?=
 =?utf-8?B?anBDWXM5ZzNVQzR4eDl2aGpZR1FRVjZMYlZKRmswSGlURE1taVJCQmxnTDhJ?=
 =?utf-8?B?eW95MXZQcUVBRnRiekJlNGFYSzArT293QzdTNUJMdGtxTjloY1gxV1g2WHIw?=
 =?utf-8?B?enc4UCtydHNibk1aeitNQXdQSXB3ZGRkMGhoWXFETlNoS0RrQlZzOVFUUzNt?=
 =?utf-8?B?Sm1JME1Qd0xOaUVkZ3gxL0tNeXJDUjhkUlVZWXBTU1BVUVVhMlFjSkpyY2ZD?=
 =?utf-8?B?MVNHVFA3cnZNODF6QzI4SGsraCtLQkVGVG1ESjlGSjA5YnFHbkhQQ0h0Vmlw?=
 =?utf-8?B?T0l6L3pDSFJ1ZnZQbzZDKzFsMU1Jd0h6ZE40N0w3OGlEVVlPd2ZuVWw0Q0JI?=
 =?utf-8?B?TE10YUc1aWJqZVVsVTlET0FxWEwxVExpQkZmV0JsK2R0Z0JiVmorQUZpdnBU?=
 =?utf-8?B?THh6V2xJc05sNFkrNDVDOERFeVY1Q0x2MkNhRFFOdWoxSWNCK3NuMFpuc1JL?=
 =?utf-8?B?VzB2cTUwckRab0gzN2pOVlF4cHZqU00vejJETmRnRWlTdVBBbnVPNjQ4TXl4?=
 =?utf-8?B?UUFVMWdkdXlLZUtJR2JHRWtVM25CQ3RJYzlwMWZOMjh1OVBReFBYV3kzWUxG?=
 =?utf-8?B?ZURSK1BvYWNzczh4YkIxdEpEVVJmSlBXaEhPMytsNVBiR3FGSmdoQjJBbVNQ?=
 =?utf-8?B?RmFYdndQRHlhMTFuRGh3azZ2R3ZlOXJjVmQydHlVNW5LMTJRdUFwLzdtaUhV?=
 =?utf-8?B?bVorVlhvb0JBRFRqWjgrbS9pOUhaamxOQmdYZm5VcndoNUFSck5OYndlMVFw?=
 =?utf-8?B?MmF5cEFOdnVHUklMc3RFRTgxTVlOV1VjZkpHTkZJeGlOWS9HVCt2VHNHeEp1?=
 =?utf-8?B?ZFJXZE9UVExmWlpzdU0rOEZVWWJMMElhOVIwcHlHWHN1d1JnZE9sTm5IOFlY?=
 =?utf-8?B?dFFYdUhIcllaK2xnNm1XZldralducVNQU0tiNGczVW51eDhBbmUzSndOZW1r?=
 =?utf-8?B?RjBnSVNTd2xNK3ZxWHBmRGxEUXpmZE03aXFEa3FvdDVNQ1F2aHo5cHYzcHZa?=
 =?utf-8?B?OTluZ3Y5ODVpKysyNEZYV3ptR0h0dENTYzdWTUVDLzhQVy9hN1RlK0RFNXcx?=
 =?utf-8?B?NGYybGk1SVZhMC9KdXAyQkZtWW81OFdWUVcxYVNrR0h1d0hnd3dhNDNxWDFy?=
 =?utf-8?B?ZERKbEliU3EwcGFSUUVWekgwSFdjZ3A3RG8vSFNaaGo5MUZFNVQwd2VTVHBh?=
 =?utf-8?B?bW1ENEs0TEdoNS9WRDNVcStwR1RpMU1ocmlDQnZHY2YxMlVWQXhiNTVlaUww?=
 =?utf-8?B?NDJYck94RWUwMDJuQ0xvZXJ0RlhscGY3VTk0YnV5VldXVENaRFZZY1hLamNt?=
 =?utf-8?B?eVdFMEQ1SGpxV1FtZm9YMHRsenNkM2JqajlkTTF1OUNTTm1nbGtWSHhKenNq?=
 =?utf-8?B?bVphb1BObk9SU1dIQm4vbkNYTEJ3Rk0weWdhVlRBb2NzNTZxZ3hPMEVRR1BM?=
 =?utf-8?B?VUJRZGRjLytNS3hTVGVLeDdoNlEwLzRkcUVxSVZGenU0VzI2ZjQxbnNySThL?=
 =?utf-8?B?QUo3bDRmWllmaEJWYnZsWU9XK3c4MWdvQ0M4RXJZK3BUendWRHJTQVJ0Umdl?=
 =?utf-8?B?clpDSUhuRm9tQlFZb2dzTUp0NklPOFIyTVRmTktySlRWUDNLeHp2MnBjYlhn?=
 =?utf-8?B?blhqQlh1OHNhVUgzS0tNVXJuNXI5UUkwNEdobkcvZG1ma3VTTWszRDl6NzI0?=
 =?utf-8?B?UGNwRlNFREJ2aEZEdzRZN2RnWkliYVFoT0M2blExUERQMU51K05KMTVLZThT?=
 =?utf-8?Q?WkuLc7WWptqaPDDDE7oA/0ZCp?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 11cad9d9-0ade-4b92-98bc-08dcf6eca9f0
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 28 Oct 2024 01:05:50.6452
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: YYFqh6YlpU2imLbkUUpuDY4ULXPYLow5guvzrPgHtgOUAhcXwoXl757A3KQ1oYUlCU8+ROIOf4vy3f33yAp4FQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB4391

Correction. This applies to the following base commit:

8cf0b93919e1 (tag: v6.12-rc2) Linux 6.12-rc2


On 10/25/2024 4:02 PM, Terry Bowman wrote:
> This is a continuation of the CXL port error handling RFC from earlier.[1]
> The RFC resulted in the decision to add CXL PCIe port error handling to
> the existing RCH downstream port handling in the AER service driver. This
> patchset adds the CXL PCIe port protocol error handling and logging.
>
> The first 7 patches update the existing AER service driver to support CXL
> PCIe port protocol error handling and reporting. This includes AER service
> driver changes for adding correctable and uncorrectable error support, CXL
> specific recovery handling, and addition of CXL driver callback handlers.
>
> The following 7 patches address CXL driver support for CXL PCIe port
> protocol errors. This includes the following changes to the CXL drivers:
> mapping CXL port and downstream port RAS registers, interface updates for
> common restricted CXL host mode (RCH) and virtual hierarchy mode (VH),
> adding port specific error handlers, and protocol error logging.
>
> [1] - https://lore.kernel.org/linux-cxl/20240617200411.1426554-1-terry.bowman@amd.com/
>
> Testing:
>
> Below are test results for this patchset using Qemu with CXL root
> port(0c:00.0), CXL upstream switchport(0d:00.0), CXL downstream
> switchport(0e:00.0). A CXL endpoint(0f:00.0) CE and UCE logs are
> also added to show the existing PCIe endpoint handling is not changed.
>
> This was tested using aer-inject updated to support CE and UCE internal
> error injection. CXL RAS was set using a test patch (not upstreamed but can
> provide if needed).
>
>  - Root port UCE:
>  root@tbowman-cxl:~/aer-inject# ./root-uce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
>  pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/02000000
>  pcieport 0000:0c:00.0:    [22] UncorrIntErr
>  aer_event: 0000:0c:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
>  cxl_port_aer_uncorrectable_error: device=0000:0c:00.0 host=pci0000:0c status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
>  Kernel panic - not syncing: CXL cachemem error. Invoking panic
>  CPU: 1 UID: 0 PID: 146 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
>  Tainted: [E]=UNSIGNED_MODULE
>  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
>  Call Trace:
>   <TASK>
>   dump_stack_lvl+0x27/0x90
>   dump_stack+0x10/0x20
>   panic+0x33e/0x380
>   cxl_do_recovery+0x116/0x120
>   ? srso_return_thunk+0x5/0x5f
>   aer_isr+0x3e0/0x710
>   irq_thread_fn+0x28/0x70
>   irq_thread+0x179/0x240
>   ? srso_return_thunk+0x5/0x5f
>   ? __pfx_irq_thread_fn+0x10/0x10
>   ? __pfx_irq_thread_dtor+0x10/0x10
>   ? __pfx_irq_thread+0x10/0x10
>   kthread+0xf5/0x130
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork+0x3c/0x60
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork_asm+0x1a/0x30
>   </TASK>
>  Kernel Offset: 0x29000000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
>  ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---
>
>  - Root port CE:
>  root@tbowman-cxl:~/aer-inject# ./root-c[  191.866259] systemd-journald[482]: Sent WATCHDOG=1 notification.
>  e-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00004000/00000000 into device 0000:0c:00.0
>  pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0c:00.0
>  pcieport 0000:0c:00.0: CXL Bus Error: severity=Correctable, type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00004000/0000a000
>  pcieport 0000:0c:00.0:    [14] CorrIntErr
>  aer_event: 0000:0c:00.0 CXL Bus Error: severity=Corrected, Corrected Internal Error, TLP Header=Not available
>  cxl_port_aer_correctable_error: device=0000:0c:00.0 host=pci0000:0c status='Received Error From Physical Layer'
>
>  - Upstream switch port UCE:
>  root@tbowman-cxl:~/aer-inject# ./us-uce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0d:00.0
>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0d:00.0
>  pcieport 0000:0d:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0d:00.0:   device [19e5:a128] error status/mask=00400000/02000000
>  pcieport 0000:0d:00.0:    [22] UncorrIntErr
>  aer_event: 0000:0d:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
>  cxl_port_aer_uncorrectable_error: device=0000:0d:00.0 host=0000:0c:00.0 status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
>  Kernel panic - not syncing: CXL cachemem error. Invoking panic
>  CPU: 1 UID: 0 PID: 148 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
>  Tainted: [E]=UNSIGNED_MODULE
>  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
>  Call Trace:
>   <TASK>
>   dump_stack_lvl+0x27/0x90
>   dump_stack+0x10/0x20
>   panic+0x33e/0x380
>   cxl_do_recovery+0x116/0x120
>   ? srso_return_thunk+0x5/0x5f
>   aer_isr+0x3e0/0x710
>   ? free_cpumask_var+0x9/0x10
>   ? kfree+0x259/0x2e0
>   irq_thread_fn+0x28/0x70
>   irq_thread+0x179/0x240
>   ? srso_return_thunk+0x5/0x5f
>   ? __pfx_irq_thread_fn+0x10/0x10
>   ? __pfx_irq_thread_dtor+0x10/0x10
>   ? __pfx_irq_thread+0x10/0x10
>   kthread+0xf5/0x130
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork+0x3c/0x60
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork_asm+0x1a/0x30
>   </TASK>
>  Kernel Offset: 0x24c00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
>  ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---
>
>  - Upstream switch port CE:
>  root@tbowman-cxl:~/aer-inject# ./us-ce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00004000/00000000 into device 0000:0d:00.0
>  pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0d:00.0
>  pcieport 0000:0d:00.0: CXL Bus Error: severity=Correctable, type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0d:00.0:   device [19e5:a128] error status/mask=00004000/0000a000
>  pcieport 0000:0d:00.0:    [14] CorrIntErr
>  aer_event: 0000:0d:00.0 CXL Bus Error: severity=Corrected, Corrected Internal Error, TLP Header=Not available
>  cxl_port_aer_correctable_error: device=0000:0d:00.0 host=0000:0c:00.0 status='Received Error From Physical Layer'
>
>  - Downstream switch port UCE:
>  root@tbowman-cxl:~/aer-inject# ./ds-uce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0e:00.0
>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0e:00.0
>  pcieport 0000:0e:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0e:00.0:   device [19e5:a129] error status/mask=00400000/02000000
>  pcieport 0000:0e:00.0:    [22] UncorrIntErr
>  aer_event: 0000:0e:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
>  cxl_port_aer_uncorrectable_error: device=0000:0e:00.0 host=0000:0d:00.0 status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
>  Kernel panic - not syncing: CXL cachemem error. Invoking panic
>  CPU: 1 UID: 0 PID: 147 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
>  Tainted: [E]=UNSIGNED_MODULE
>  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
>  Call Trace:
>   <TASK>
>   dump_stack_lvl+0x27/0x90
>   dump_stack+0x10/0x20
>   panic+0x33e/0x380
>   cxl_do_recovery+0x116/0x120
>   ? srso_return_thunk+0x5/0x5f
>   aer_isr+0x3e0/0x710
>   irq_thread_fn+0x28/0x70
>   irq_thread+0x179/0x240
>   ? srso_return_thunk+0x5/0x5f
>   ? __pfx_irq_thread_fn+0x10/0x10
>   ? __pfx_irq_thread_dtor+0x10/0x10
>   ? __pfx_irq_thread+0x10/0x10
>   kthread+0xf5/0x130
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork+0x3c/0x60
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork_asm+0x1a/0x30
>   </TASK>
>  Kernel Offset: 0x19c00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
>  ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---
>
>  - Downstream switch port CE:
>  root@tbowman-cxl:~/aer-inject# ./ds-ce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00004000/00000000 into device 0000:0e:00.0
>  pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0e:00.0
>  pcieport 0000:0e:00.0: CXL Bus Error: severity=Correctable, type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0e:00.0:   device [19e5:a129] error status/mask=00004000/0000a000
>  pcieport 0000:0e:00.0:    [14] CorrIntErr
>  aer_event: 0000:0e:00.0 CXL Bus Error: severity=Corrected, Corrected Internal Error, TLP Header=Not available
>  cxl_port_aer_correctable_error: device=0000:0e:00.0 host=0000:0d:00.0 status='Received Error From Physical Layer'
>
>  - Endpoint CE
>  root@tbowman-cxl:~/aer-inject# ./ep-ce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000040/00000000 into device 0000:0f:00.0
>  pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0f:00.0
>  cxl_pci 0000:0f:00.0: CXL Bus Error: severity=Correctable, type=Data Link Layer, (Receiver ID)
>  cxl_pci 0000:0f:00.0:   device [8086:0d93] error status/mask=00000040/0000e000
>  cxl_pci 0000:0f:00.0:    [ 6] BadTLP
>  aer_event: 0000:0f:00.0 CXL Bus Error: severity=Corrected, Bad TLP, TLP Header=Not available
>  cxl_aer_correctable_error: memdev=mem1 host=0000:0f:00.0 serial=0: status: 'Received Error From Physical Layer'
>
>  - Endpoint UCE
>  root@tbowman-cxl:~/aer-inject# ./ep-uce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00040000 into device 0000:0f:00.0
>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0f:00.0
>  cxl_pci 0000:0f:00.0: AER: CXL Bus Error: severity=Uncorrectable (Fatal), type=Inaccessible, (Unregistered Agent ID)
>  aer_event: 0000:0f:00.0 CXL Bus Error: severity=Fatal, , TLP Header=Not available
>  cxl_aer_uncorrectable_error: memdev=mem1 host=0000:0f:00.0 serial=0: status: 'Memory Byte Enable Parity Error' firs'
>  cxl_pci 0000:0f:00.0: mem1: frozen state error detected, disable CXL.mem
>  cxl_detach_ep: cxl_mem mem1: disconnect mem1 from port2
>  cxl_detach_ep: cxl_mem mem1: disconnect mem1 from port1
>  pcieport 0000:0e:00.0: unlocked secondary bus reset via: pciehp_reset_slot+0xac/0x160
>  pcieport 0000:0e:00.0: AER: Downstream Port link has been reset (0)
>  cxl_pci 0000:0f:00.0: mem1: restart CXL.mem after slot reset
>  devm_cxl_enumerate_ports: cxl_mem mem1: scan: iter: mem1 dport_dev: 0000:0e:00.0 parent: 0000:0d:00.0
>  devm_cxl_enumerate_ports: cxl_mem mem1: found already registered port port2:0000:0d:00.0
>  devm_cxl_enumerate_ports: cxl_mem mem1: scan: iter: 0000:0e:00.0 dport_dev: 0000:0c:00.0 parent: pci0000:0c
>  devm_cxl_enumerate_ports: cxl_mem mem1: found already registered port port1:pci0000:0c
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4500
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4500
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  <snip>
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  cxl_bus_probe: cxl_nvdimm pmem1: probe: 0
>  devm_cxl_add_nvdimm: cxl_mem mem1: register pmem1
>  pcieport 0000:0e:00.0: RAS is already mapped
>  cxl_port port2: RAS is already mapped
>  pcieport 0000:0c:00.0: RAS is already mapped
>  cxl_port_alloc: cxl_mem mem1: host-bridge: pci0000:0c
>  cxl_cdat_get_length: cxl_port endpoint4: CDAT length 160
>  cxl_port_perf_data_calculate: cxl_port endpoint4: Failed to retrieve ep perf coordinates.
>  cxl_endpoint_parse_cdat: cxl_port endpoint4: Failed to do perf coord calculations.
>  init_hdm_decoder: cxl_port endpoint4: decoder4.0: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
>  add_hdm_decoder: cxl decoder4.0: Added to port endpoint4
>  init_hdm_decoder: cxl_port endpoint4: decoder4.1: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
>  add_hdm_decoder: cxl decoder4.1: Added to port endpoint4
>  init_hdm_decoder: cxl_port endpoint4: decoder4.2: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
>  add_hdm_decoder: cxl decoder4.2: Added to port endpoint4
>  init_hdm_decoder: cxl_port endpoint4: decoder4.3: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
>  add_hdm_decoder: cxl decoder4.3: Added to port endpoint4
>  cxl_bus_probe: cxl_port endpoint4: probe: 0
>  devm_cxl_add_port: cxl_mem mem1: endpoint4 added to port2
>  cxl_bus_probe: cxl_mem mem1: probe: 0
>  cxl_pci 0000:0f:00.0: mem1: error resume successful
>  pcieport 0000:0e:00.0: AER: device recovery successful
>
>  Changes in v1 -> v2
>  [Jonathan] Remove extra NULL check and cleanup in cxl_pci_port_ras()
>  [Jonathan] Update description to DSP map patch description
>  [Jonathan] Update cxl_pci_port_ras() to check for NULL port
>  [Jonathan] Dont call handler before handler port changes are present (patch order).
>  [Bjorn] Fix linebreak in cover sheet URL
>  [Bjorn] Remove timestamps from test logs in cover sheet
>  [Bjorn] Retitle AER commits to use "PCI/AER:"
>  [Bjorn] Retitle patch#3 to use renaming instead of refactoring
>  [Bjorn] Fixe base commit-id on cover sheet
>  [Bjorn] Add VH spec reference/citation
>  [Terry] Removed last 2 patches to enable internal errors. Is not needed
>  because internal errors are enabled in AER driver.
>  [Dan] Create cxl_do_recovery() and pci_driver::cxl_err_handlers.
>  [Dan] Use kernel panic in CXL recovery
>  [Dan] cxl_port_hndlrs -> cxl_port_error_handlers
>  [Dan] Move cxl_port_error_handlers to pci_driver. Remove module (un)registration.
>  [Terry] Add patch w/ qcxl_assign_port_error_handlers() and cxl_clear_port_error_handlers()
>  [Terry] Removed PCI_ERS_RESULT_PANIC patch. Is no longer needed because the result type parameter
>  is not used in the CXL_err_handlers callabcks.
>
> Changes in RFC -> v1:
>  [Dan] Rename cxl_rch_handle_error() becomes cxl_handle_error()
>  [Dan] Add cxl_do_recovery()
>  [Jonathan] Flatten cxl_setup_parent_uport()
>  [Jonathan] Use cxl_component_regs instead of struct cxl_regs regs
>  [Jonathan] Rename cxl_dev_is_pci_type()
>  [Ming] bus_find_device(&cxl_bus_type, NULL, &pdev->dev, match_uport) can
>  replace these find_cxl_port() and device_find_child().
>  [Jonathan] Compact call to cxl_port_map_regs() in cxl_setup_parent_uport()
>  [Ming] Dont use endpoint as host to cxl_map_component_regs()
>  [Bjorn] Use "PCIe UIR/CIE" instesad of "AER UI/CIE"
>  [Bjorn] Dont use Kconfig to enable/disable a CXL external interface
>
> Terry Bowman (14):
>   PCI/AER: Introduce 'struct cxl_err_handlers' and add to 'struct
>     pci_driver'
>   PCI/AER: Rename AER driver's interfaces to also indicate CXL PCIe port
>     support
>   cxl/pci: Introduce helper functions pcie_is_cxl() and
>     pcie_is_cxl_port()
>   PCI/AER: Modify AER driver logging to report CXL or PCIe bus error
>     type
>   PCI/AER: Add CXL PCIe port correctable error support in AER service
>     driver
>   PCI/AER: Change AER driver to read UCE fatal status for all CXL PCIe
>     port devices
>   PCI/AER: Add CXL PCIe port uncorrectable error recovery in AER service
>     driver
>   cxl/pci: Change find_cxl_ports() to non-static
>   cxl/pci: Map CXL PCIe root port and downstream switch port RAS
>     registers
>   cxl/pci: Map CXL PCIe upstream switch port RAS registers
>   cxl/pci: Rename RAS handler interfaces to also indicate CXL PCIe port
>     support
>   cxl/pci: Add error handler for CXL PCIe port RAS errors
>   cxl/pci: Add trace logging for CXL PCIe port RAS errors
>   cxl/pci: Add support to assign and clear pci_driver::cxl_err_handlers
>
>  drivers/cxl/core/core.h       |   3 +
>  drivers/cxl/core/pci.c        | 180 +++++++++++++++++++++++++++-------
>  drivers/cxl/core/port.c       |   4 +-
>  drivers/cxl/core/trace.h      |  47 +++++++++
>  drivers/cxl/cxl.h             |  10 +-
>  drivers/cxl/mem.c             |  29 +++++-
>  drivers/pci/pci.c             |  14 +++
>  drivers/pci/pci.h             |   3 +
>  drivers/pci/pcie/aer.c        |  99 ++++++++++++-------
>  drivers/pci/pcie/err.c        |  54 ++++++++++
>  drivers/pci/probe.c           |  10 ++
>  include/linux/pci.h           |  13 +++
>  include/ras/ras_event.h       |   9 +-
>  include/uapi/linux/pci_regs.h |   3 +-
>  14 files changed, 396 insertions(+), 82 deletions(-)
>
>
> base-commit: 739a5da7ed744578a9477fb322f04afecafca6b0


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM04-BN8-obe.outbound.protection.outlook.com (mail-bn8nam04on2041.outbound.protection.outlook.com [40.107.100.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id C95CD14BF86;
	Sun, 27 Oct 2024 17:00:01 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.100.41
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730048405; cv=fail; b=lmmuUY5t6Ldly/cyYCZHBB5MbeESp4cNmoSy33CaONTxLB3nC9mV1qwoQw7OrVg+dvLrdFRFfyC5tx6c/orvgBrKcvdQU9Avn8Prl7bmavx50qFJ733acio6QJYRh5VFHDYGaDJstJYWBCQ6YNkyh5mcRh5mucwkZVOYjjhUReE=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730048405; c=relaxed/simple;
	bh=ePPc63xIzbOIiy3HQ45j8XHNqqiaIoK2tpW9S/q4418=;
	h=Message-ID:Date:Subject:To:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=MqnGWogbRE4gkVk+qFb6FEbf1tLHpJiOcJT6amecNVWchmi2KTlrFJdnoopXqNgcH3sigf8CBMdvbZ+/pJPgqPcxu9DyIYIN2SpgrsePzgb4N1ABucxOkaAM94ldnJli12v0fnS2p97zzF+416PLhiBqyGRKpRhHk5RrKf00Qpw=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=XEDtyJcj; arc=fail smtp.client-ip=40.107.100.41
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="XEDtyJcj"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=jqcc+cEPmvAb4zUuAuvd8xW4yGC/t31f7QxDDp06wDqe3JmocCfjONMvX2q8TSqwMGeQMWfzZRa7T/4uuGC/ZSYHnpHkBuBLxAxyONTgWXQQeJOs+RdWVtjIF8otVcKLlq1zdDOvevkSg2r7FmpP+xGS1EJ/PpnK2ZUy1I9BUfqY5hY+lf8wY4W97KnXx39CyhtObJNv1ceZ8iuhxA6AwghgBflywQTW3Tyamzmt1UIi0CE0bhiXmxpDH8BjSRr9TrlqXvGkzBBu6xShC+A0eBc98l7JJpHr2UZg3v5BJyjSsrSiE643mr4XbusCZ9PZejZjTbVZ4C3GTXrJa1IsLA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=nAcpDX53UCppY5EGRPJdBVYgdRPksCRew6onENRrTB0=;
 b=fXML6bvacORlSd6FkzIVvrKlPEzs+9UYj0phzSmEvc/78Loc7AUB28dOWTY3YvuMVqOXVf/oLHMHz/o9HkfDHNjekamzM+IogHS1bvSjNPYovzwB2Bbl7LAlr58CVEQjMoCoOSiByxggmdcAXfwziH9ZB3FxObK5/elNwP3ofAoD8evJSdyrMafaHhjuQE+Jd2p8qvEINUfUr7mOwPnKdU73ZRD5srxZ+Fj+98mSWpT1QdZY1k0IVAModmM9FEM/46WOqP5gHJc3GJJyGA6fBDerhD6BAGXg/e2CcCYvSJV1uN+IpyUcywxfBkDu/66a5XPCGqzyvZxIUHXXfhXSbw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=nAcpDX53UCppY5EGRPJdBVYgdRPksCRew6onENRrTB0=;
 b=XEDtyJcj8y/jqtBWmM4bhTlTAcPzDVTU7LAnpw/ARjGeH3WrTNDRZPzmaPqDbWt2kaunzDXjFbTNwd5ghc1YSR5eowQFc0sK1OAs71a+C6UHn+WyLu/7NxxvVjL14BkNGTjh+rP83jwLFyqJfCc6c8syMR9I/NGtCO4FpjONeK0=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 PH7PR12MB7841.namprd12.prod.outlook.com (2603:10b6:510:273::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.23; Sun, 27 Oct
 2024 16:59:54 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%6]) with mapi id 15.20.8093.024; Sun, 27 Oct 2024
 16:59:54 +0000
Message-ID: <f765146b-b361-46c1-b11e-194b2b667adf@amd.com>
Date: Sun, 27 Oct 2024 11:59:50 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 0/14] Applies to Base commit: 8cf0b93919e1 (tag:
 v6.12-rc2) Linux 6.12-rc2
To: ming4.li@intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, dave@stgolabs.net,
 jonathan.cameron@huawei.com, dave.jiang@intel.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA9PR13CA0102.namprd13.prod.outlook.com
 (2603:10b6:806:24::17) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|PH7PR12MB7841:EE_
X-MS-Office365-Filtering-Correlation-Id: c2c19c33-67f8-43c0-b1bb-08dcf6a8c785
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|1800799024|7416014|376014|366016|921020;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?cjh5UXF1VVBSekY4S3NtcnczT1drQzZBQzZQSGNRSXB2dytKNURjVDE2UU9R?=
 =?utf-8?B?Ylg2SGFZZ3Z4d1QxWG5xUWdFN0sxU2loRGdlUjRKbFdlSktvZDhxRFU2SUxy?=
 =?utf-8?B?Y3FPMjBGSWVGdUFEN2lxVC9QdFJuN3NvTEJHK0VzZDVGYUl1Ukd6Q2pvbVlt?=
 =?utf-8?B?Y29sQUszaGErUkszRm9yVEp2b2lUTkJSYVJRR2dBNGxZcFJjTStPcDhVTmsv?=
 =?utf-8?B?V2hGNDN6bVVZNk03Z25PMnR1bkxFbmhQaHhCWUV2R0g5VUF1bXdabkxQc0xJ?=
 =?utf-8?B?OGJ4YkdNeTdSN3NaMmZadzhhV3JUaTMxWDBnR1hGMlVuUnNvTEsxTUcrRFlp?=
 =?utf-8?B?WUtmcFArNktKcjVvSEtuRkxTOEI0dEZaK3BtaGF1eEViTHAyaVRHR0NEb0p1?=
 =?utf-8?B?K1UwT3hOcHBuWHZjY1BRZVNCbWxHSXZTSTY4L1JPY1RrUXRnSVpMUDh1RjE2?=
 =?utf-8?B?Rlpjaml2NUxzZkVTTFlnd2puY0loZnBuUjBvVk4rTjUrbDRqVEV0RnlPL1oy?=
 =?utf-8?B?RTBBdkFOY0xSclZ1U0ZWT08rWjQzdnRUWWMvM243b0NBQ2F1UDYvOVp2WWl2?=
 =?utf-8?B?OE1mdUpmdHRCelRTVlhVL01STCtXcTg0czRKbGhIb2Qrd0loRml6V0FqMFQy?=
 =?utf-8?B?cHpQNlJ0SEZCMzdhTHpFRGFURmtrYmcwTVYyc3hlSjB6RFdRaFhTQjVyNG4r?=
 =?utf-8?B?UlNiZUloRUdzV29SbnBTeHJleUMzQVIvQWJOT0kvdVd4VS9GblBQOXVDVVRt?=
 =?utf-8?B?VEZwdGg1TTRKanNDSkFoRFNwUkpnYXFnYXJVZnlkUW1mWW5LRDF1YlhBdkZw?=
 =?utf-8?B?bmFTSUtuUytEVXNwUWtQSUJLTEUyTC9Sd3k0NGZ3L0tLWERyVXJ6aW4zVDdS?=
 =?utf-8?B?UFU3VURZZFdOSDdDOHNLaU5BcVp1cVBiTHZSWW55SDVNOGhxb0dOWkw2TUhG?=
 =?utf-8?B?TlI2THhOQk5xdFFPVEJKL0JnWGtlZWZLVFM0VEVJbWRuZEdyTnBMZjU3MzZ5?=
 =?utf-8?B?YUE2cExUb29JMWNCYlpjUXl0SVF1R2J3cUFVOVhvRVVHcEtFbVFSWXBoV21Q?=
 =?utf-8?B?REU5UzNwM2xIcWxnNUF0dXphZkpOYjVCdmo2ZDM2ODJzdVRjNW1rNDczcVdK?=
 =?utf-8?B?OE0rOGNBYkZsUlI1bi9TMENVQ3BSdVlUUDhYR2ZRQ1IyVTNydnVhcERlRVpr?=
 =?utf-8?B?cG1JR2FhVkplMURBcXVzbHVpQW9La1NmeGF6SlZDUkVQNDUrdzJhbi9kQVV3?=
 =?utf-8?B?M3Vnaml5V1ZVd3pReXBVY0tkMWd6d1VvMzh1RkhzUmtIMHlwVkRQOFVoa2l1?=
 =?utf-8?B?OW16dS8vLzZGV2VLYkVGRGhvSnMvNGxCdzIyT1lNbXlQdHR5TnZWckVqWXA4?=
 =?utf-8?B?MFAvbU0rUmJaNDZwclF5dW1UVmMrMlJSTGNJTHRFaE0xTUJjdTRtdDhYZDd4?=
 =?utf-8?B?Z01NaGg4RjNqTmYwZTgzdFZCNW1wVTJ1dVhrTEMzQXJCOWJqZ2RwekRFYXVh?=
 =?utf-8?B?cXRwelc0UjRlU0xpTFVsdUZxU3FJVTZhdEEveVRMektONE53alBIRXNMUjli?=
 =?utf-8?B?ak5WdnZIU25iZEUzWGIwb0R6T0dWRTlxTjhUcVZpdmk2bXVOQkRiVVhKVCsv?=
 =?utf-8?B?QkVMZHV3MlBRYXVtRmZ0RmxJMmNmRERRVXVXc2NrUmJOZm91TGhBTThIYnpn?=
 =?utf-8?B?RmVINjFrQkVxWmVPRm9tK1RQcnFzYmZnRWtZOExWc2diN0t1Z3dkSmdWcVNU?=
 =?utf-8?B?Q01XVFp0a1pIRlY1bnEyY2VWeWV1VzVSM3kvVEtzL3hSRWRkVVVnK0hHN0FU?=
 =?utf-8?Q?i0MTQAvdyk5Cs4d5mmJY6GalVi5jFbXK7PC1E=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(1800799024)(7416014)(376014)(366016)(921020);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?N0pOcWpWOEJQLyt5dm0yVzFzTkRUUkR3bnUrTDY5Nk5WYTFyMU9pWUpaSllU?=
 =?utf-8?B?aUNkalZUMzE5Skd1cVZkOXpMdVdCWXVyS3gvY1JGREcyR3BzdEV3OE1RcG1O?=
 =?utf-8?B?aktNS0FDbVh6L3BCNnJQM0pvWWlHMm1NUWxlb2hLWmd0Y0toUzVIWFlncGhP?=
 =?utf-8?B?TC9WbzliY3JneE5yZUQ3L2dscnU3Vkc4cXV2ZWlSVkxBZjlqY0tFR2dsdzlI?=
 =?utf-8?B?dytrQ0ZkRU9tb096L29GYUZQRzRRa0NsL1REQS9HU2NIbjdnRTV5UTRIRWZa?=
 =?utf-8?B?RVhHZmhBZXMvb2QxU0plNm5LNXR0dC9ZVUtVaU5HZ3U2d0hSN2lHbDZwRFh2?=
 =?utf-8?B?WHlEeUZzS1FHdHdRakxEL0tWZnBZajFmZWNQdUJZTWNwT2ZKbkhOYmVvUGpk?=
 =?utf-8?B?NXlIYThSc3piWmlhMnoveWt5enhpTnJpWHNZTGFDUjgxYjZnWTlxUzU4L1FT?=
 =?utf-8?B?a2lnSzJTTFFUS1RQejRFMXZTSHE4eGcxbGlVNmgwSFlMWG5mYkMyV1RrNEpS?=
 =?utf-8?B?UzlDSFk4cXZUOWxqdnlKcnpYRDZHYzNNanRsbmF6R1VRV3pQV1hBM2VEbERz?=
 =?utf-8?B?TGQzTTlUclJ6ZkRMM0NnMnk2RmlyZVdXc0Z1STNzanJxL29xSEpSTVJnc2c1?=
 =?utf-8?B?MUNQMXp0djdMYlFqZklZSGJRVWhmak1Pc0QvYmtjd2tJd2FKUVNITzRYRjQy?=
 =?utf-8?B?bWNBMFFpRkljTEZ6RldYSHlXNEp2QVN1aDVSY1IzY0Q0YjRjTmsxYTAwRUxO?=
 =?utf-8?B?azhDNmkvTXNQTmtpOUF3d0NhNmVQcWkrVmlWcDhLVWdTbEhBcThvQ0hQN1Rr?=
 =?utf-8?B?c0gydXlxVkZ3TjBtWWhDbXVpUitldEhtT1dyekZoMnFBZGJpb3FvaXFSdy9U?=
 =?utf-8?B?bE5XUlR5SlpraEFOY2xoWlBnT2lyRXVoenRpM0ZFYXVMUDZZbzV6ZXI2c3Z2?=
 =?utf-8?B?Q1p1VDY4VVhnSFcxRXRzZi8xSDF0dGd2QVZqZTViRXhDUnRJMXdsRmxZOWlt?=
 =?utf-8?B?bExvdWpzSnFiY0VTR2hGQ0t1aHpwZ3IxTWhMakx3NnJlclYxUDJrZzZhRTB2?=
 =?utf-8?B?YlE0MGFKWmRWRXp5YmxHWW5qazU5RTE3VjAwMC83b1VUZjArc2x6RldCN09x?=
 =?utf-8?B?S0VBSFQ2NEcrbTlWbm5hazU1bG8rclh5M1c1SWVCY0FvWWtpSTNnRGptNGlo?=
 =?utf-8?B?SWFPaVFvU3lBYUpaOTBqaGJIL29EenNnSkZNcHBpQ2poeVdRUDZTL3I0ZUhy?=
 =?utf-8?B?bEdZbXFxY3JwTUhlZGxycjhsc1gzQlVjZVM0c0x2QWdEdDVLYm5pVmwrN3R4?=
 =?utf-8?B?eTk0a1RscUY1cElnTjdXeXhVWWd4VzUyU3FZSXFvRHEwSnJIR0lQVnE0WkU4?=
 =?utf-8?B?K2FVSTdDZURya0doTGpCQmNwamNtaFJGQkU2ajF2MEdadEIwcFVGRW5BT1Bu?=
 =?utf-8?B?QzBLejZZNmtuV0FWZ0ozSlp3Q1VUSkx1M0QyUVBDSUFSZU9lYmQxTDJ1WHBL?=
 =?utf-8?B?MWNYc1I2Qmppb1Y5dFZuNjhCUFBXcHl4Mmc5N1Exbk1KYVQ5UHNUa0V5eDRk?=
 =?utf-8?B?bjZmOS9Wc1Z0WGE3U2JPcnBCRHZKYVhRS0U1VVRTaEN2djFkU3dUYmp2bURO?=
 =?utf-8?B?YmRKdXQ1Z0ZyWkVPOTAreFZPR1hNN0pkTDQzU3p6MU1LOFZ6TGcwUlRlMWVZ?=
 =?utf-8?B?WVlISTA1dVVrY0NCZmEvazVZWFV0VnJwcElwbmVNUU84eHF2YW95RWNhQURm?=
 =?utf-8?B?UFUrT0xwVHJsR0EwUUVaNk1qSkpPWm5rVmdCRWZsNFZnaU43VWgxL1o0TW1P?=
 =?utf-8?B?Y1FsQ0Robk1QZnJTS0VHVFNQelJKbzkwSDhkdHo5ZDFxd0tGRWdCckFwZnNP?=
 =?utf-8?B?elNKbmZId0ZKQVFRV2ZBRmhKbklHckc0aGFzakJaS0dYaGsybVdNMkpTTG5w?=
 =?utf-8?B?dEF0SElkWDZpQTd3ZHlzbUNucC93ZDRQTEdmSm54aGNPcmlXTlVxRUh1QUxZ?=
 =?utf-8?B?V1lDVTMvOFhyVjZnTFJTQzR1azh0Q1dDRVdnSkRRRGpBejlBQ1ZlM2p6b1lj?=
 =?utf-8?B?aTRBUWd3T2pYbkllV1phZmZGdFdETmNKb0llalNpRmVObGdlRHJkQ1pFL0Fo?=
 =?utf-8?Q?CJpj7olEQS3rMJs2yIqzbH66G?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: c2c19c33-67f8-43c0-b1bb-08dcf6a8c785
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 27 Oct 2024 16:59:54.4976
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 0xhvwjgX8e6FttQUOYmWAq1FNJ1m/EWSkHMgtuxv0VNirNRuUKaJ5/1TksuBxdODotbrYvAYzKsL41Ctqv9QeA==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH7PR12MB7841

Correction. This applies to:

8cf0b93919e1 (tag: v6.12-rc2) Linux 6.12-rc2

On 10/25/2024 4:02 PM, Terry Bowman wrote:
> This is a continuation of the CXL port error handling RFC from earlier.[1]
> The RFC resulted in the decision to add CXL PCIe port error handling to
> the existing RCH downstream port handling in the AER service driver. This
> patchset adds the CXL PCIe port protocol error handling and logging.
>
> The first 7 patches update the existing AER service driver to support CXL
> PCIe port protocol error handling and reporting. This includes AER service
> driver changes for adding correctable and uncorrectable error support, CXL
> specific recovery handling, and addition of CXL driver callback handlers.
>
> The following 7 patches address CXL driver support for CXL PCIe port
> protocol errors. This includes the following changes to the CXL drivers:
> mapping CXL port and downstream port RAS registers, interface updates for
> common restricted CXL host mode (RCH) and virtual hierarchy mode (VH),
> adding port specific error handlers, and protocol error logging.
>
> [1] - https://lore.kernel.org/linux-cxl/20240617200411.1426554-1-terry.bowman@amd.com/
>
> Testing:
>
> Below are test results for this patchset using Qemu with CXL root
> port(0c:00.0), CXL upstream switchport(0d:00.0), CXL downstream
> switchport(0e:00.0). A CXL endpoint(0f:00.0) CE and UCE logs are
> also added to show the existing PCIe endpoint handling is not changed.
>
> This was tested using aer-inject updated to support CE and UCE internal
> error injection. CXL RAS was set using a test patch (not upstreamed but can
> provide if needed).
>
>  - Root port UCE:
>  root@tbowman-cxl:~/aer-inject# ./root-uce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
>  pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/02000000
>  pcieport 0000:0c:00.0:    [22] UncorrIntErr
>  aer_event: 0000:0c:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
>  cxl_port_aer_uncorrectable_error: device=0000:0c:00.0 host=pci0000:0c status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
>  Kernel panic - not syncing: CXL cachemem error. Invoking panic
>  CPU: 1 UID: 0 PID: 146 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
>  Tainted: [E]=UNSIGNED_MODULE
>  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
>  Call Trace:
>   <TASK>
>   dump_stack_lvl+0x27/0x90
>   dump_stack+0x10/0x20
>   panic+0x33e/0x380
>   cxl_do_recovery+0x116/0x120
>   ? srso_return_thunk+0x5/0x5f
>   aer_isr+0x3e0/0x710
>   irq_thread_fn+0x28/0x70
>   irq_thread+0x179/0x240
>   ? srso_return_thunk+0x5/0x5f
>   ? __pfx_irq_thread_fn+0x10/0x10
>   ? __pfx_irq_thread_dtor+0x10/0x10
>   ? __pfx_irq_thread+0x10/0x10
>   kthread+0xf5/0x130
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork+0x3c/0x60
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork_asm+0x1a/0x30
>   </TASK>
>  Kernel Offset: 0x29000000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
>  ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---
>
>  - Root port CE:
>  root@tbowman-cxl:~/aer-inject# ./root-c[  191.866259] systemd-journald[482]: Sent WATCHDOG=1 notification.
>  e-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00004000/00000000 into device 0000:0c:00.0
>  pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0c:00.0
>  pcieport 0000:0c:00.0: CXL Bus Error: severity=Correctable, type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00004000/0000a000
>  pcieport 0000:0c:00.0:    [14] CorrIntErr
>  aer_event: 0000:0c:00.0 CXL Bus Error: severity=Corrected, Corrected Internal Error, TLP Header=Not available
>  cxl_port_aer_correctable_error: device=0000:0c:00.0 host=pci0000:0c status='Received Error From Physical Layer'
>
>  - Upstream switch port UCE:
>  root@tbowman-cxl:~/aer-inject# ./us-uce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0d:00.0
>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0d:00.0
>  pcieport 0000:0d:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0d:00.0:   device [19e5:a128] error status/mask=00400000/02000000
>  pcieport 0000:0d:00.0:    [22] UncorrIntErr
>  aer_event: 0000:0d:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
>  cxl_port_aer_uncorrectable_error: device=0000:0d:00.0 host=0000:0c:00.0 status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
>  Kernel panic - not syncing: CXL cachemem error. Invoking panic
>  CPU: 1 UID: 0 PID: 148 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
>  Tainted: [E]=UNSIGNED_MODULE
>  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
>  Call Trace:
>   <TASK>
>   dump_stack_lvl+0x27/0x90
>   dump_stack+0x10/0x20
>   panic+0x33e/0x380
>   cxl_do_recovery+0x116/0x120
>   ? srso_return_thunk+0x5/0x5f
>   aer_isr+0x3e0/0x710
>   ? free_cpumask_var+0x9/0x10
>   ? kfree+0x259/0x2e0
>   irq_thread_fn+0x28/0x70
>   irq_thread+0x179/0x240
>   ? srso_return_thunk+0x5/0x5f
>   ? __pfx_irq_thread_fn+0x10/0x10
>   ? __pfx_irq_thread_dtor+0x10/0x10
>   ? __pfx_irq_thread+0x10/0x10
>   kthread+0xf5/0x130
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork+0x3c/0x60
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork_asm+0x1a/0x30
>   </TASK>
>  Kernel Offset: 0x24c00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
>  ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---
>
>  - Upstream switch port CE:
>  root@tbowman-cxl:~/aer-inject# ./us-ce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00004000/00000000 into device 0000:0d:00.0
>  pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0d:00.0
>  pcieport 0000:0d:00.0: CXL Bus Error: severity=Correctable, type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0d:00.0:   device [19e5:a128] error status/mask=00004000/0000a000
>  pcieport 0000:0d:00.0:    [14] CorrIntErr
>  aer_event: 0000:0d:00.0 CXL Bus Error: severity=Corrected, Corrected Internal Error, TLP Header=Not available
>  cxl_port_aer_correctable_error: device=0000:0d:00.0 host=0000:0c:00.0 status='Received Error From Physical Layer'
>
>  - Downstream switch port UCE:
>  root@tbowman-cxl:~/aer-inject# ./ds-uce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0e:00.0
>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0e:00.0
>  pcieport 0000:0e:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0e:00.0:   device [19e5:a129] error status/mask=00400000/02000000
>  pcieport 0000:0e:00.0:    [22] UncorrIntErr
>  aer_event: 0000:0e:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
>  cxl_port_aer_uncorrectable_error: device=0000:0e:00.0 host=0000:0d:00.0 status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
>  Kernel panic - not syncing: CXL cachemem error. Invoking panic
>  CPU: 1 UID: 0 PID: 147 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
>  Tainted: [E]=UNSIGNED_MODULE
>  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
>  Call Trace:
>   <TASK>
>   dump_stack_lvl+0x27/0x90
>   dump_stack+0x10/0x20
>   panic+0x33e/0x380
>   cxl_do_recovery+0x116/0x120
>   ? srso_return_thunk+0x5/0x5f
>   aer_isr+0x3e0/0x710
>   irq_thread_fn+0x28/0x70
>   irq_thread+0x179/0x240
>   ? srso_return_thunk+0x5/0x5f
>   ? __pfx_irq_thread_fn+0x10/0x10
>   ? __pfx_irq_thread_dtor+0x10/0x10
>   ? __pfx_irq_thread+0x10/0x10
>   kthread+0xf5/0x130
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork+0x3c/0x60
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork_asm+0x1a/0x30
>   </TASK>
>  Kernel Offset: 0x19c00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
>  ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---
>
>  - Downstream switch port CE:
>  root@tbowman-cxl:~/aer-inject# ./ds-ce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00004000/00000000 into device 0000:0e:00.0
>  pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0e:00.0
>  pcieport 0000:0e:00.0: CXL Bus Error: severity=Correctable, type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0e:00.0:   device [19e5:a129] error status/mask=00004000/0000a000
>  pcieport 0000:0e:00.0:    [14] CorrIntErr
>  aer_event: 0000:0e:00.0 CXL Bus Error: severity=Corrected, Corrected Internal Error, TLP Header=Not available
>  cxl_port_aer_correctable_error: device=0000:0e:00.0 host=0000:0d:00.0 status='Received Error From Physical Layer'
>
>  - Endpoint CE
>  root@tbowman-cxl:~/aer-inject# ./ep-ce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000040/00000000 into device 0000:0f:00.0
>  pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0f:00.0
>  cxl_pci 0000:0f:00.0: CXL Bus Error: severity=Correctable, type=Data Link Layer, (Receiver ID)
>  cxl_pci 0000:0f:00.0:   device [8086:0d93] error status/mask=00000040/0000e000
>  cxl_pci 0000:0f:00.0:    [ 6] BadTLP
>  aer_event: 0000:0f:00.0 CXL Bus Error: severity=Corrected, Bad TLP, TLP Header=Not available
>  cxl_aer_correctable_error: memdev=mem1 host=0000:0f:00.0 serial=0: status: 'Received Error From Physical Layer'
>
>  - Endpoint UCE
>  root@tbowman-cxl:~/aer-inject# ./ep-uce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00040000 into device 0000:0f:00.0
>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0f:00.0
>  cxl_pci 0000:0f:00.0: AER: CXL Bus Error: severity=Uncorrectable (Fatal), type=Inaccessible, (Unregistered Agent ID)
>  aer_event: 0000:0f:00.0 CXL Bus Error: severity=Fatal, , TLP Header=Not available
>  cxl_aer_uncorrectable_error: memdev=mem1 host=0000:0f:00.0 serial=0: status: 'Memory Byte Enable Parity Error' firs'
>  cxl_pci 0000:0f:00.0: mem1: frozen state error detected, disable CXL.mem
>  cxl_detach_ep: cxl_mem mem1: disconnect mem1 from port2
>  cxl_detach_ep: cxl_mem mem1: disconnect mem1 from port1
>  pcieport 0000:0e:00.0: unlocked secondary bus reset via: pciehp_reset_slot+0xac/0x160
>  pcieport 0000:0e:00.0: AER: Downstream Port link has been reset (0)
>  cxl_pci 0000:0f:00.0: mem1: restart CXL.mem after slot reset
>  devm_cxl_enumerate_ports: cxl_mem mem1: scan: iter: mem1 dport_dev: 0000:0e:00.0 parent: 0000:0d:00.0
>  devm_cxl_enumerate_ports: cxl_mem mem1: found already registered port port2:0000:0d:00.0
>  devm_cxl_enumerate_ports: cxl_mem mem1: scan: iter: 0000:0e:00.0 dport_dev: 0000:0c:00.0 parent: pci0000:0c
>  devm_cxl_enumerate_ports: cxl_mem mem1: found already registered port port1:pci0000:0c
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4500
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4500
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  <snip>
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
>  cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
>  cxl_bus_probe: cxl_nvdimm pmem1: probe: 0
>  devm_cxl_add_nvdimm: cxl_mem mem1: register pmem1
>  pcieport 0000:0e:00.0: RAS is already mapped
>  cxl_port port2: RAS is already mapped
>  pcieport 0000:0c:00.0: RAS is already mapped
>  cxl_port_alloc: cxl_mem mem1: host-bridge: pci0000:0c
>  cxl_cdat_get_length: cxl_port endpoint4: CDAT length 160
>  cxl_port_perf_data_calculate: cxl_port endpoint4: Failed to retrieve ep perf coordinates.
>  cxl_endpoint_parse_cdat: cxl_port endpoint4: Failed to do perf coord calculations.
>  init_hdm_decoder: cxl_port endpoint4: decoder4.0: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
>  add_hdm_decoder: cxl decoder4.0: Added to port endpoint4
>  init_hdm_decoder: cxl_port endpoint4: decoder4.1: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
>  add_hdm_decoder: cxl decoder4.1: Added to port endpoint4
>  init_hdm_decoder: cxl_port endpoint4: decoder4.2: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
>  add_hdm_decoder: cxl decoder4.2: Added to port endpoint4
>  init_hdm_decoder: cxl_port endpoint4: decoder4.3: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
>  add_hdm_decoder: cxl decoder4.3: Added to port endpoint4
>  cxl_bus_probe: cxl_port endpoint4: probe: 0
>  devm_cxl_add_port: cxl_mem mem1: endpoint4 added to port2
>  cxl_bus_probe: cxl_mem mem1: probe: 0
>  cxl_pci 0000:0f:00.0: mem1: error resume successful
>  pcieport 0000:0e:00.0: AER: device recovery successful
>
>  Changes in v1 -> v2
>  [Jonathan] Remove extra NULL check and cleanup in cxl_pci_port_ras()
>  [Jonathan] Update description to DSP map patch description
>  [Jonathan] Update cxl_pci_port_ras() to check for NULL port
>  [Jonathan] Dont call handler before handler port changes are present (patch order).
>  [Bjorn] Fix linebreak in cover sheet URL
>  [Bjorn] Remove timestamps from test logs in cover sheet
>  [Bjorn] Retitle AER commits to use "PCI/AER:"
>  [Bjorn] Retitle patch#3 to use renaming instead of refactoring
>  [Bjorn] Fixe base commit-id on cover sheet
>  [Bjorn] Add VH spec reference/citation
>  [Terry] Removed last 2 patches to enable internal errors. Is not needed
>  because internal errors are enabled in AER driver.
>  [Dan] Create cxl_do_recovery() and pci_driver::cxl_err_handlers.
>  [Dan] Use kernel panic in CXL recovery
>  [Dan] cxl_port_hndlrs -> cxl_port_error_handlers
>  [Dan] Move cxl_port_error_handlers to pci_driver. Remove module (un)registration.
>  [Terry] Add patch w/ qcxl_assign_port_error_handlers() and cxl_clear_port_error_handlers()
>  [Terry] Removed PCI_ERS_RESULT_PANIC patch. Is no longer needed because the result type parameter
>  is not used in the CXL_err_handlers callabcks.
>
> Changes in RFC -> v1:
>  [Dan] Rename cxl_rch_handle_error() becomes cxl_handle_error()
>  [Dan] Add cxl_do_recovery()
>  [Jonathan] Flatten cxl_setup_parent_uport()
>  [Jonathan] Use cxl_component_regs instead of struct cxl_regs regs
>  [Jonathan] Rename cxl_dev_is_pci_type()
>  [Ming] bus_find_device(&cxl_bus_type, NULL, &pdev->dev, match_uport) can
>  replace these find_cxl_port() and device_find_child().
>  [Jonathan] Compact call to cxl_port_map_regs() in cxl_setup_parent_uport()
>  [Ming] Dont use endpoint as host to cxl_map_component_regs()
>  [Bjorn] Use "PCIe UIR/CIE" instesad of "AER UI/CIE"
>  [Bjorn] Dont use Kconfig to enable/disable a CXL external interface
>
> Terry Bowman (14):
>   PCI/AER: Introduce 'struct cxl_err_handlers' and add to 'struct
>     pci_driver'
>   PCI/AER: Rename AER driver's interfaces to also indicate CXL PCIe port
>     support
>   cxl/pci: Introduce helper functions pcie_is_cxl() and
>     pcie_is_cxl_port()
>   PCI/AER: Modify AER driver logging to report CXL or PCIe bus error
>     type
>   PCI/AER: Add CXL PCIe port correctable error support in AER service
>     driver
>   PCI/AER: Change AER driver to read UCE fatal status for all CXL PCIe
>     port devices
>   PCI/AER: Add CXL PCIe port uncorrectable error recovery in AER service
>     driver
>   cxl/pci: Change find_cxl_ports() to non-static
>   cxl/pci: Map CXL PCIe root port and downstream switch port RAS
>     registers
>   cxl/pci: Map CXL PCIe upstream switch port RAS registers
>   cxl/pci: Rename RAS handler interfaces to also indicate CXL PCIe port
>     support
>   cxl/pci: Add error handler for CXL PCIe port RAS errors
>   cxl/pci: Add trace logging for CXL PCIe port RAS errors
>   cxl/pci: Add support to assign and clear pci_driver::cxl_err_handlers
>
>  drivers/cxl/core/core.h       |   3 +
>  drivers/cxl/core/pci.c        | 180 +++++++++++++++++++++++++++-------
>  drivers/cxl/core/port.c       |   4 +-
>  drivers/cxl/core/trace.h      |  47 +++++++++
>  drivers/cxl/cxl.h             |  10 +-
>  drivers/cxl/mem.c             |  29 +++++-
>  drivers/pci/pci.c             |  14 +++
>  drivers/pci/pci.h             |   3 +
>  drivers/pci/pcie/aer.c        |  99 ++++++++++++-------
>  drivers/pci/pcie/err.c        |  54 ++++++++++
>  drivers/pci/probe.c           |  10 ++
>  include/linux/pci.h           |  13 +++
>  include/ras/ras_event.h       |   9 +-
>  include/uapi/linux/pci_regs.h |   3 +-
>  14 files changed, 396 insertions(+), 82 deletions(-)
>
>
> base-commit: 739a5da7ed744578a9477fb322f04afecafca6b0


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (mail-dm6nam12on2077.outbound.protection.outlook.com [40.107.243.77])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 14BF120EA27;
	Fri, 25 Oct 2024 21:05:51 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.243.77
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890354; cv=fail; b=rjbEU0b8nbHCZMBEzuM7u+mYWo6Mvx/uxWuxWE/0LhrRVaJ5giW9rsd963eefwSvSE9PKpP4prwr/kc3EbzeXpp3u3YOepsW3AUI6LDLrMHn5tCodwyQGbHkNKslQekoSM1siDWiTaBAVTn7uX5fH8DWOtX+tFSg8Im8EIwPu6c=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890354; c=relaxed/simple;
	bh=QwmU4aamTKwOqXSIIHut5wxttWDNqtUGvIOD4OwpOnU=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=Jj7UuQDVlsI7EyF3YcNKlQasEv13jIu1q7NMYjKwpiHuTlducR4ucgZmF7Th5c5E2syI9FfzsjVclyjlDjs4KzXw9wCwu1oIkA8T/Xm2q32Jes5Ld35MefbkEPnHxDTjaNMhokE2j3FjTnkzYVYf7SgdEZxzkkEFRJbcSyo3gio=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=Xfuojr6F; arc=fail smtp.client-ip=40.107.243.77
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="Xfuojr6F"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=XwWtJKNMfS/04Wj+X/sSQrygvdlSSZ/pd4zuD5V+9Oq9kYjvzs3IOht2W/RYVa/wsn3mRq/ZUfXXd0FMCoy6sZlDQ7BwLolSxtmW9RZX/Nju+p4w2DREZw/w7eDGVP4pN4qut16sJcY04Drg1pwa0Xh3OZ4IOKTaN07sEXqsSxodDA3ajTkPBoaDOo26UznJzWG0oNK5dzot7BVzOuQoTeml1IHGOlC+OakiNqPLlG3HnnWGuUNAUk1Jo1X4R1U/8E0A5qS7wIsfNZWB7t3YwxO1XvqfmRZoE1rixS34OKUngEl+38W3HU4WG9l3YOH8a1rRDktzTxitDpZu23h4jQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=PkHkW2x6pc1dmmvxlTCsggWBfgCbm/GbyOOLZ6im680=;
 b=elCvVCCWQTOTm93r1WwW+R+rQW+dEVe5Kmw09SXs9xCL2Q1UvpSwkfvDpLIJVIsRD+kXigsm4a55pAOJ2etY71sS/xrehtJnVlVucBIq2xcHjuP8WbQC+COnoOJuImCq7qJuEtDIrK9zMQNkNA0Nb9GLuFC2+srsaKg1yTXI0LDP+ODQ480/cpEtgwkrL+ZSKdVu5U2vQpVZ2J7IdwSFVYzmEJj3M/eUWbB+LVLIhaibEUbdctDarzbeSbEyY0GcrNAJbY9WFs80rXzuPRZp5alhCGXvpAlaE1Rys+H+sZzU4KTbtJaj4nNmjPLV0hLmLrtLlzoTwYmI5o74ug4C9g==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=PkHkW2x6pc1dmmvxlTCsggWBfgCbm/GbyOOLZ6im680=;
 b=Xfuojr6Fp0vhWVSK2DqDbKqGzeqEyCcjnpbAduueVjAPvvdfjO+PtyTnJzHzP/++tDvXoZ3UwnnhXe629cz2sGBx276FYuo9x8ZZshpNUPZnVXYSC/G8FtHm00DCct1IITyqXK/KLvG5NtL/HcDFW3Hf6HE4GYWeCkLHZigrcoI=
Received: from MW4PR04CA0296.namprd04.prod.outlook.com (2603:10b6:303:89::31)
 by CH2PR12MB4327.namprd12.prod.outlook.com (2603:10b6:610:7d::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.21; Fri, 25 Oct
 2024 21:05:46 +0000
Received: from CO1PEPF000044F7.namprd21.prod.outlook.com
 (2603:10b6:303:89:cafe::22) by MW4PR04CA0296.outlook.office365.com
 (2603:10b6:303:89::31) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.21 via Frontend
 Transport; Fri, 25 Oct 2024 21:05:46 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044F7.mail.protection.outlook.com (10.167.241.197) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:05:45 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:05:44 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 14/14] cxl/pci: Add support to assign and clear pci_driver::cxl_err_handlers
Date: Fri, 25 Oct 2024 16:03:05 -0500
Message-ID: <20241025210305.27499-15-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044F7:EE_|CH2PR12MB4327:EE_
X-MS-Office365-Filtering-Correlation-Id: 6a0fa4dc-03c6-4606-2fce-08dcf538cb79
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|1800799024|376014|7416014|36860700013|82310400026|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?pvAbYul0Tz640cwlwg5vAlhTNwn+u2lb8l76RVKhNlS1vGXAvXXDURoCNneo?=
 =?us-ascii?Q?ob68edNM5oiXnjNzOC0pi2EllbqsJHSS8oV3YVi/Hv0E40Atz6dmnhop/7ON?=
 =?us-ascii?Q?+p/12k1DZToIZYlzQmlPTPup9BtDyME1vIPmDKvSDx6vXELyxqQKWk1fIjcf?=
 =?us-ascii?Q?2Y/yE0SuBeqIoa4k+XXnOTZaTli6zl6kW9htnKK9Crnrg74UMxmCkB19wz5Y?=
 =?us-ascii?Q?4aaEnog++7/gi7WsYCVNxDtiivcBW9htiZVAlNaGZiICLeMCEnjP3fQsLdLK?=
 =?us-ascii?Q?9alJ8CMiSE08EvdOmpL2bPt8MoGcJtY5znFi88x+TSD5kfq9E/uMEltdUWSA?=
 =?us-ascii?Q?7cBOfdSTXNG4Eos7d8D6WjV4eQ9jmCpRWsIOYtDx35I4rfUAX3mfjYp9fCCj?=
 =?us-ascii?Q?5Ds6mS3bgsbwBD9VD+JDutKDkQNrHvKpvXAW0adwl2ko6O7yT9wIFImhrW0u?=
 =?us-ascii?Q?46PiFCY/ckIZuonaA95fPykMekNVyT4pxSdNr6Sc2OOLAlLlIOO+I1A035BY?=
 =?us-ascii?Q?ngV1v2sM1oxrxBgBkVL8Q3pR1oy5Iybat05O3I0ck4wcDPwpyH18/4OVpayh?=
 =?us-ascii?Q?WsXeAOSZVXRakYB4ZVEbElqkBqKfDih8uIPaDwBhkSCH58oUVoSN9Oy0goUE?=
 =?us-ascii?Q?OdHQSxX/zyu58RjHYwMlPiHuxsJgXR/LOKLEbNeWGyPsc09clnL2x900AR9Y?=
 =?us-ascii?Q?Re66n0WuKYsBTWLMZoHEIbUZWzJk+8tH0qwSPtJ1550KioSVVEy9ECNyJ1Z1?=
 =?us-ascii?Q?841RkFI2mMsC/We0nc6tPguYJp/Ahn0vV7fQQf2PdulFzq2EIMjflqRyswfT?=
 =?us-ascii?Q?zW8wVjyzincI5iXT32kQ3TPYK+9YTIMsjRI56QG1mo/EH9M59k5xyDY/gItZ?=
 =?us-ascii?Q?c9S3Kz8/7KZ9TIgwr8I4yKyly6i+HUcG35qQvFjNa73QLl+B/BDsJY8ylVus?=
 =?us-ascii?Q?SvMtb7J76Sl+jA+VIflbUkdH+kHgLp8LLCDEbnYkVes6ZOXoLfkC1g/P4E4b?=
 =?us-ascii?Q?QOUJejER+Cr7RNRUR8RRN/DRgp7qCsaCzkVE7QfDxIqC9uZTFozs3g7wAW27?=
 =?us-ascii?Q?mizH3yVGcRaOXIDNxBlzBKqemgrSy0eA6AParZiT++2jX0l00dNIpWl3pGGl?=
 =?us-ascii?Q?FFJJxPe+H6Umt5Ao+H7QN+oZQC0b2g3471zkr7pHGcLueFMvEtQSNDpFwej2?=
 =?us-ascii?Q?7mS1ImpgUHCT83j/Af6k142SUrOaAtbxl3P0x9rAt5rpGy7ZaSEVuU6vL4w9?=
 =?us-ascii?Q?CcNQvmrkWsLJsDLGFUwgLjiUCZpXQ9Lx5Nwe3n7/Ttroom+f44IGqr4GQ98U?=
 =?us-ascii?Q?LqVXc608lorClO7vt3pCTXp08YcRVqD3i99T6fshNIbwZHb0eCqwb5TU3Npd?=
 =?us-ascii?Q?4qYhB8JNJhPcsABvEmOtT13XVeQB?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(1800799024)(376014)(7416014)(36860700013)(82310400026)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:05:45.8583
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 6a0fa4dc-03c6-4606-2fce-08dcf538cb79
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044F7.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CH2PR12MB4327

pci_driver::cxl_err_handlers are not currrently assigned handler callbacks.
The handlers can't be set in the pci_driver static definition because the
CXL PCIe port devices are bound to the portdrv driver which is not CXL
driver aware.

Add cxl_assign_port_error_handlers() in the cxl_core module. This
function will assign the default handlers for a CXL PCIe port device.

When the CXL port (cxl_port or cxl_dport) is destroyed the CXL PCIe port
device's pci_driver::cxl_err_handlers must be set to NULL to prevent future
use. Create cxl_clear_port_error_handlers() and register it to be called
when the CXL port device (cxl_port or cxl_dport) is destroyed.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/pci.c | 35 +++++++++++++++++++++++++++++++++++
 1 file changed, 35 insertions(+)

diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index eeb4a64ba5b5..5f7570c6173c 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -839,8 +839,36 @@ static bool cxl_port_error_detected(struct pci_dev *pdev)
 	return ue;
 }
 
+static const struct cxl_error_handlers cxl_port_error_handlers = {
+	.error_detected	= cxl_port_error_detected,
+	.cor_error_detected	= cxl_port_cor_error_detected,
+};
+
+static void cxl_assign_port_error_handlers(struct pci_dev *pdev)
+{
+	struct pci_driver *pdrv = pdev->driver;
+
+	if (!pdrv)
+		return;
+
+	pdrv->cxl_err_handler = &cxl_port_error_handlers;
+}
+
+static void cxl_clear_port_error_handlers(void *data)
+{
+	struct pci_dev *pdev = data;
+	struct pci_driver *pdrv = pdev->driver;
+
+	if (!pdrv)
+		return;
+
+	pdrv->cxl_err_handler = NULL;
+}
+
 void cxl_uport_init_ras_reporting(struct cxl_port *port)
 {
+	struct pci_dev *pdev = to_pci_dev(port->uport_dev);
+
 	/* uport may have more than 1 downstream EP. Check if already mapped. */
 	if (port->uport_regs.ras) {
 		dev_warn(&port->dev, "RAS is already mapped\n");
@@ -853,6 +881,9 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
 		dev_err(&port->dev, "Failed to map RAS capability.\n");
 		return;
 	}
+
+	cxl_assign_port_error_handlers(pdev);
+	devm_add_action_or_reset(port->uport_dev, cxl_clear_port_error_handlers, pdev);
 }
 EXPORT_SYMBOL_NS_GPL(cxl_uport_init_ras_reporting, CXL);
 
@@ -865,6 +896,7 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
 {
 	struct device *dport_dev = dport->dport_dev;
 	struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport_dev);
+	struct pci_dev *pdev = to_pci_dev(dport_dev);
 
 	if (dport->rch && host_bridge->native_aer) {
 		cxl_dport_map_rch_aer(dport);
@@ -883,6 +915,9 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
 		dev_err(dport_dev, "Failed to map RAS capability.\n");
 		return;
 	}
+
+	cxl_assign_port_error_handlers(pdev);
+	devm_add_action_or_reset(dport_dev, cxl_clear_port_error_handlers, pdev);
 }
 EXPORT_SYMBOL_NS_GPL(cxl_dport_init_ras_reporting, CXL);
 
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-SN1-obe.outbound.protection.outlook.com (mail-sn1nam02on2088.outbound.protection.outlook.com [40.107.96.88])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A299B1B6CFE;
	Fri, 25 Oct 2024 21:05:41 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.96.88
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890343; cv=fail; b=m6Nrkl1sZBSW8mTsEaGBFnDCTyFKU5hx92+S370kWeb830tHvbQ50pq/Lc8MmGefuw0IHnE1VNYSEmcg6kFrblkYTAgBAQ2Cw6j833HQVY0rfO7o1YKznuRYNw/J1FMrret8WPzb7CrL3aKXcFhRqXZ4FI9jn8H332v8VXxibGU=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890343; c=relaxed/simple;
	bh=ejHoeT7Co2D/GMslgPzDJtkpzy8wQ7503exX6ezmgFE=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=chnqHXMWoBAUlNid1JoKig2CQq3Clgs6qd1Cr6Ki2evW/4t1yMUqAO6Fh0uc7Smjwb5sZ/HCVSofoJ2i6ShzL8RcKvcOsajTNGkGZ1+uAd+huRMTDSTIpVTtoRVuM8qo72SWpCzH70khj1Oou9xfjbprLThu8dgAuWcyDP2Out4=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=D3d8+qv/; arc=fail smtp.client-ip=40.107.96.88
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="D3d8+qv/"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=tJyAHMvNAJ5DcUEfq3IIMv7AzPDtzIQP7fgK92W3oYrhYhmzrtlziZS0nJNaldcaVrxLWTbKJ2mrLjKPLsX4raj6cQDUMRFe9YTA6AL0bieMhc43Zuea0NMVqiB1JKIOmuWGKc/uHeQSvF9N+DHOHHqTLJZta2uu0iulmokjWIEPIZD/3cbX1HySsth21KPu43oDM20rTSYc4Bh19eIloOOEv5G9fySOAMBS4lBZh8so5xD2O/zI1BGnpWElbJtwC2bOfxcXk/jWWrak96Uf1tH44leVOoMV24II5SZioamsN6FI+bkhlI9l/DTc7p4cLv3m5TkUDTJ7IDm0IRbGvA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=+UEomUt7HvgMyZTWsAD3mhbMMWljS13GXBCiD8enWxw=;
 b=erkBmtZzywjSCTLfqdj/ihYswf7vawdR1gJidR8pOyEiPpotNloILZC3zcULv5MYPhxpvf3CaOrE7prQYusX1wmZ28zBf8+pZY6+64WseKr9nhkLPENJTEBOvOGKUBK9mgdzzL6gO0rR3xsew4UJwrygKZ6myYiN3lJTo2J1+8JiZRJ6XX77R5kwEVCRC3jOxB46DqEe4QVjVPi9XL0KudvhCSK1tYaSIB6FCUUxIU4pIHUlvkrjjsIYZpuMi0vstrGKk2QOs1Vt7FwrjZ+aBjDlNuyONZXYIbk5JxxeAXxdnzfzlUrUabOsPoWmvG3gNY7Errdo53AdX5wJOdMkGA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=+UEomUt7HvgMyZTWsAD3mhbMMWljS13GXBCiD8enWxw=;
 b=D3d8+qv/UGWQPg0kxfShc58pCmG5Fya3YLG1fKE3ufomqHF3+L2isMms1gcaqJs9nB2bKx1uhrs+jdAsBD+bnAC4JCyMfxakiEDTrprPG/xTuJLrTVRzj11QFWoAdwLxE/oaqYhnPyTWk4msO5cp2JdSiC/Hax3rl1H9vkOB6XM=
Received: from MW4PR04CA0244.namprd04.prod.outlook.com (2603:10b6:303:88::9)
 by PH7PR12MB8039.namprd12.prod.outlook.com (2603:10b6:510:26a::14) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.23; Fri, 25 Oct
 2024 21:05:38 +0000
Received: from CO1PEPF000044F6.namprd21.prod.outlook.com
 (2603:10b6:303:88:cafe::a0) by MW4PR04CA0244.outlook.office365.com
 (2603:10b6:303:88::9) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.20 via Frontend
 Transport; Fri, 25 Oct 2024 21:05:37 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044F6.mail.protection.outlook.com (10.167.241.196) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:05:37 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:05:33 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 13/14] cxl/pci: Add trace logging for CXL PCIe port RAS errors
Date: Fri, 25 Oct 2024 16:03:04 -0500
Message-ID: <20241025210305.27499-14-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044F6:EE_|PH7PR12MB8039:EE_
X-MS-Office365-Filtering-Correlation-Id: 970caabe-ae17-4867-221e-08dcf538c689
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|7416014|376014|82310400026|36860700013|1800799024|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?pKurUUr4sDHAZfx1OePYXHAwZDoEPQWqipKuz6LPTXh8yJcYEJJIn0h8weay?=
 =?us-ascii?Q?6EsM81Uo/QfDSBfJfKsuTnvZxLAFzp8vyq0NSs7K/72a+biIVPkpFdTIy9bt?=
 =?us-ascii?Q?IBB3y8vfZzJFdQimG5iMMMcG3BqcnWltRfygR+qUINUQX+KtSvUfYl4f8qkk?=
 =?us-ascii?Q?8shXQTZQOKmK/UhpwPXHasEJjQaZOrFZCUWyuLKFJaegcN3vfFpLbxhbrAdF?=
 =?us-ascii?Q?2I2qdIqXnt8iECwsQ8lAHDDeyItFv8ovY7phUCzrKYs2hhE8g5Hmiq6IIPyq?=
 =?us-ascii?Q?B9K21GhHE/mEUK6MXj82xJr4vJUUw+ER/KgE3tYCLTsCRiCMmX9gMGz3Iaim?=
 =?us-ascii?Q?HE/Fxw4GMtpehkhLwfm6cUt7j9Ehum9qlgD9mFV4kEs0H9oBdYGS/4k1L/jh?=
 =?us-ascii?Q?sFJVl4jdNswjuAwbUfmu0IuMn4u/+fPPtU9WhoXwOgdMEOHRBc0jrzzAhKsN?=
 =?us-ascii?Q?3d0xdVFDVaAb0vomdm/PfrAOTXXKhrSWZ51tnbJnRjRY1ok/+NjrABjBDdHC?=
 =?us-ascii?Q?ot8clUP7eLhwgWD0sYN5+oyZYp/krxCFptZVs/t8VomVPC3YWTBuyrd0Fzy8?=
 =?us-ascii?Q?OsRr5GgvS3rHqxCCKV8qJeWC4qh7v3b0UEA5yc1qkoNmGuejFozjzwuuWbG7?=
 =?us-ascii?Q?vOZK48IimYhQVN///2ODv8b2+kd3hbVH8IT+F277tA6nHlnUQJqqN9R6Tt7J?=
 =?us-ascii?Q?C9LMRJbtZLqURstztuJZZK7k8QSHBgwDeHGGoSqqrMBmZ3HWBSnsO97dpSeS?=
 =?us-ascii?Q?aaPHngTSwxPLrVU4WrB5PpqPzRwIxe+MluSjHnNWlTj/K0S0Uv5tVie34bY/?=
 =?us-ascii?Q?X0mGx5yThxafVUGbk4kDSFHH2YVuy0mD56jS9gb/I5tL37uxF3VVNwgQ5jim?=
 =?us-ascii?Q?lGPHYrMFEsAsm7PyjzavTeFFFAObKJhYLteg4S4BAnxbD6DpBxH71tWX1s09?=
 =?us-ascii?Q?n3h99CAcuMru7ml++gd2TEsbgNBrprjKwe1lfBt+OddubuGTb1rKRuyCHwWm?=
 =?us-ascii?Q?RbLxdNsjamnvseW7ddeQARAvK3wVILea3LLME6XkwLJ3PhbXkMCvZI4hu7RY?=
 =?us-ascii?Q?aKUi9IerDnofULndDRTCSM6enQQgqxTLkxQxeZtJ/ewqSuJXRF5I8kPylJNS?=
 =?us-ascii?Q?MrjMXSV7GQR2FQHhug5SdlCzyZi6KxsSVAEHIGZ2ZOYnTE+/y7tddx1BQKxt?=
 =?us-ascii?Q?/uIGHpatcaXEboIP6gRzfiQthDz1SvCCeqHdqjguVjHjdtglatAbq7HKJ/Dd?=
 =?us-ascii?Q?VMks8ZLJC1Ja77bIu4zYsdnt1RzXYjEdwWW7DgVBxUkxpBiPJRVztNPdb//z?=
 =?us-ascii?Q?kZ+y4NeeXqKkQ4DTuWfkuNfrjySGrW19+TuOMkUzFm1yrOPY7WSCK1NMcREn?=
 =?us-ascii?Q?cOG5onJdShMiFM/HT7GK0ddCIqw+?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(7416014)(376014)(82310400026)(36860700013)(1800799024)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:05:37.5742
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 970caabe-ae17-4867-221e-08dcf538c689
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044F6.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH7PR12MB8039

The CXL drivers use kernel trace functions for logging endpoint and
RCH downstream port RAS errors. Similar functionality is
required for CXL root ports, CXL downstream switch ports, and CXL
upstream switch ports.

Introduce trace logging functions for both RAS correctable and
uncorrectable errors specific to CXL PCIe ports. Additionally, update
the PCIe port error handlers to invoke these new trace functions.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/pci.c   | 16 ++++++++++----
 drivers/cxl/core/trace.h | 47 ++++++++++++++++++++++++++++++++++++++++
 2 files changed, 59 insertions(+), 4 deletions(-)

diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index adb184d346ae..eeb4a64ba5b5 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -661,10 +661,14 @@ static void __cxl_handle_cor_ras(struct device *dev,
 
 	addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
 	status = readl(addr);
-	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
-		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
+	if (!(status & CXL_RAS_CORRECTABLE_STATUS_MASK))
+		return;
+	writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
+
+	if (is_cxl_memdev(dev))
 		trace_cxl_aer_correctable_error(to_cxl_memdev(dev), status);
-	}
+	else if (dev_is_pci(dev))
+		trace_cxl_port_aer_correctable_error(dev, status);
 }
 
 static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
@@ -720,7 +724,11 @@ static bool __cxl_handle_ras(struct device *dev, void __iomem *ras_base)
 	}
 
 	header_log_copy(ras_base, hl);
-	trace_cxl_aer_uncorrectable_error(to_cxl_memdev(dev), status, fe, hl);
+	if (is_cxl_memdev(dev))
+		trace_cxl_aer_uncorrectable_error(to_cxl_memdev(dev), status, fe, hl);
+	else if (dev_is_pci(dev))
+		trace_cxl_port_aer_uncorrectable_error(dev, status, fe, hl);
+
 	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
 
 	return true;
diff --git a/drivers/cxl/core/trace.h b/drivers/cxl/core/trace.h
index 8672b42ee4d1..1c4368a7b50b 100644
--- a/drivers/cxl/core/trace.h
+++ b/drivers/cxl/core/trace.h
@@ -48,6 +48,34 @@
 	{ CXL_RAS_UC_IDE_RX_ERR, "IDE Rx Error" }			  \
 )
 
+TRACE_EVENT(cxl_port_aer_uncorrectable_error,
+	TP_PROTO(struct device *dev, u32 status, u32 fe, u32 *hl),
+	TP_ARGS(dev, status, fe, hl),
+	TP_STRUCT__entry(
+		__string(devname, dev_name(dev))
+		__string(host, dev_name(dev->parent))
+		__field(u32, status)
+		__field(u32, first_error)
+		__array(u32, header_log, CXL_HEADERLOG_SIZE_U32)
+	),
+	TP_fast_assign(
+		__assign_str(devname);
+		__assign_str(host);
+		__entry->status = status;
+		__entry->first_error = fe;
+		/*
+		 * Embed the 512B headerlog data for user app retrieval and
+		 * parsing, but no need to print this in the trace buffer.
+		 */
+		memcpy(__entry->header_log, hl, CXL_HEADERLOG_SIZE);
+	),
+	TP_printk("device=%s host=%s status: '%s' first_error: '%s'",
+		  __get_str(devname), __get_str(host),
+		  show_uc_errs(__entry->status),
+		  show_uc_errs(__entry->first_error)
+	)
+);
+
 TRACE_EVENT(cxl_aer_uncorrectable_error,
 	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status, u32 fe, u32 *hl),
 	TP_ARGS(cxlmd, status, fe, hl),
@@ -96,6 +124,25 @@ TRACE_EVENT(cxl_aer_uncorrectable_error,
 	{ CXL_RAS_CE_PHYS_LAYER_ERR, "Received Error From Physical Layer" }	\
 )
 
+TRACE_EVENT(cxl_port_aer_correctable_error,
+	TP_PROTO(struct device *dev, u32 status),
+	TP_ARGS(dev, status),
+	TP_STRUCT__entry(
+		__string(devname, dev_name(dev))
+		__string(host, dev_name(dev->parent))
+		__field(u32, status)
+	),
+	TP_fast_assign(
+		__assign_str(devname);
+		__assign_str(host);
+		__entry->status = status;
+	),
+	TP_printk("device=%s host=%s status='%s'",
+		  __get_str(devname), __get_str(host),
+		  show_ce_errs(__entry->status)
+	)
+);
+
 TRACE_EVENT(cxl_aer_correctable_error,
 	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status),
 	TP_ARGS(cxlmd, status),
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-DM6-obe.outbound.protection.outlook.com (mail-dm6nam11on2049.outbound.protection.outlook.com [40.107.223.49])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id C2831215C52;
	Fri, 25 Oct 2024 21:05:27 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.223.49
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890331; cv=fail; b=ffxZwUq5gqCE9LOW3L4820pIML6SMMYr/y4IUMhgS/IKEB7kT/RUXqzPNI1yicD0yaHXnEu3BdbYagSq35KE7v4k0eO/uwIviZC0TSDB3KahQEnkNgJu+bYl39sKecxVaCDVs0i5Xhk+NzKj7QSkkfsiXQwi3qUdboQwBxukWkU=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890331; c=relaxed/simple;
	bh=kTFGXrjGtDr14Ze9C1YsLS+2I9uGo4L3/doNRo0AhY4=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=YAoJui6mfp76kwHRWgSx9JBDrj0/9PtM7+R+EwPVDTFCdAk48LnkCZWPw1Xq3kyKNXeVQTWhZnvIuZSK06SEF44Rg+ujAaS6yJfcgJ0g5E5RffuIr9y6zIoJWW+6PJPcLNy9taavUrJgMW0u0UXBMvSh6/OkpAC3W8nsjlBF/Xw=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=pw0dvQd4; arc=fail smtp.client-ip=40.107.223.49
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="pw0dvQd4"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=zUfCQILDmkJNYYyxuTc633fZW9a8UGGiTP2X8cu/+iHbqsJmuz3usE/giTHUBgpZMWFV0cl5o53oFgbRsQ6gWrz3rqlPYUfWT1G3Zy5n8SD9tycM+95XeHFPUg0ke5DMcKL0OBV6ZyMboHmfcroos8JyNYeUkA8mh/XFqffptGYA8P1g/MLmXHI2ND2rOq2oVB/OcIpRtCwGoSiCq5EEpEPrcEePZ+9f+tjqXmZRK7uMunjawlB8EVSBOtsPY2t5Nn7iau6oDF8XMjOcv6zyjdenPW/LS/52X60d+ItZpWHL3ka/CYbrqvsXGyhrJ+6FNZU9/AXa+2fPmX1RXjiNiw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=uIXbX+PP79KuODXXgLzFsESgnJddbJNI2TQr7VPs3gw=;
 b=gQqMo8xTCDD5TZcpSnbq5nERLvRNdPPT8p80axpN0qiBzGQ8z2QmO7fcNECmw6uS/VVTJXkOIKRvh/jZVGgEe614cYgd+3V4tE2rJf4nNLwe8F1qSke1IjfVc+yVA0NfSKbNVqxypE5zESUBpKG29Oi8zHGtKL6g8uMcg6z+ikb9Xi9yY45o9YoHBdu2FfDiUYNoTFjOjB506lCH5qoyCRjcAFTMNO0XxDewvHKdymjuzEkvbKRflS3MVFD3KxCvIOltIhnNIqFYsF7/CQ2EpBpC6ZGRPPnIJWkMdrg0vMoLid6TnT57/oUsFeH8BghVRjRH1o3CDtqOrUXXhT1FKA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=uIXbX+PP79KuODXXgLzFsESgnJddbJNI2TQr7VPs3gw=;
 b=pw0dvQd41bZy40sbrvCpIp42Wskx29CofCFNPv0u7hFDY7wzzut8USH7Ibywn2XqRTZpHJdWNToZYPm+gBla5kepUAWauTr5koNMZddZlWDFKNoVhbCxImkYw/qwH9Sm5V9Zksj3b7V8IPhR3BKNRlP5gPiSyLGqdIj+gPmGkB8=
Received: from MW4PR03CA0075.namprd03.prod.outlook.com (2603:10b6:303:b6::20)
 by CY8PR12MB8339.namprd12.prod.outlook.com (2603:10b6:930:7e::17) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.21; Fri, 25 Oct
 2024 21:05:24 +0000
Received: from CO1PEPF000044FD.namprd21.prod.outlook.com
 (2603:10b6:303:b6:cafe::13) by MW4PR03CA0075.outlook.office365.com
 (2603:10b6:303:b6::20) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.16 via Frontend
 Transport; Fri, 25 Oct 2024 21:05:24 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044FD.mail.protection.outlook.com (10.167.241.203) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:05:23 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:05:22 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 12/14] cxl/pci: Add error handler for CXL PCIe port RAS errors
Date: Fri, 25 Oct 2024 16:03:03 -0500
Message-ID: <20241025210305.27499-13-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044FD:EE_|CY8PR12MB8339:EE_
X-MS-Office365-Filtering-Correlation-Id: 52d1acc1-700b-4a2c-c5cb-08dcf538be68
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|7416014|1800799024|82310400026|36860700013|376014|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?Wv8bViy98dwWCm2YToj0soiTQLJRfLCy/t7Fq8Z3aD7OJwefrVBfTfgof04f?=
 =?us-ascii?Q?IbRAYbMdDl/FkvNk0ZdK4SUiJrqDQ4w9mwUNxlp3FgvtFe24hCuifBodspZS?=
 =?us-ascii?Q?wY3XzPq89yoIBsSWoRdrLS7R2sU3Yw+0UF00JXZ8UOaoKX/8FJ89LlDCyv0/?=
 =?us-ascii?Q?ci6Zf5syQBFqAg1WuCROcP0Xuy/Lyr/CyQeYebUeP/GoHwUOgtyl9UkojAUc?=
 =?us-ascii?Q?sfm8G64UI/VGJr4FPeoGHPpb/FL/vuUHZp9KKecfspjwrQKQ9vn+H+IGz/W+?=
 =?us-ascii?Q?IMJZ/1shkp2/cPMYAJb4DTL9MObLrBR/2Hni8dGvmCK7Gkt6y1UxlPrIK05b?=
 =?us-ascii?Q?w4Y8SqshNPx3kwq6amfVgePKq4AYQjbXxMZN4A5XG4KjiGC+k5jfu/3T9Fl+?=
 =?us-ascii?Q?UGZTi+b1KJObprspPpRqCtt1n0gM9nwfTvuKM4ivwTeyf2rEH99uFeiQ79A1?=
 =?us-ascii?Q?cApNS+TfDG0kZ5WPIaVG7ZxOQWZweEhdH7pOpFvjb1g7axQMHA/zYywl2T3Z?=
 =?us-ascii?Q?S92FzUa8jaDplPTJQCbgopDdLqgeVi8C8tQ6d4X9Vlv24YjKbv5VXjnvj2qP?=
 =?us-ascii?Q?FqH/vPkP+02iz28061lwFVp3mCyVgfllpLuRxHdpK5qqN/VvUkHIoXKAiuvT?=
 =?us-ascii?Q?w0sReMMm7xqjrjqAzomUAtVPYF251h19yRR1fLMsv7cLVCvBZRmv0RB0wwYY?=
 =?us-ascii?Q?j+qhxkydrDecECy/hxV2xLj0LGZo4wgwZjgYoUea2MGswry7K+pMJvIGNhpy?=
 =?us-ascii?Q?tVPcHbbytrfI6NCk0kg+G5Wbbqr25V31pJLJwfQRFVydVjRR35TifscmL3JC?=
 =?us-ascii?Q?7KY5Puw+k04w2vvrpaI64YETk2HzDddD7NXc3r0grxQ/ELwktRcy1TzsyjC9?=
 =?us-ascii?Q?dRr2i2zZWHxKUepqliAbPxQIWXK+laOa9UYv83F9dyumahSSQ8nUgFf/MloO?=
 =?us-ascii?Q?L2+lleeZzunbdCBcziMhe0GKfWq71/KBDpZvYkfEp/W/j+4jMLD65q5TX+Op?=
 =?us-ascii?Q?jXalMs9CTnKxDoTv7PoY24eAydqomjc7EfF+aJeB8zrVZkrmQL2tGwvL179T?=
 =?us-ascii?Q?cWZoU4jQ3myW5xfK9ag598JGY7vqpFn/faPi7LZ++tBvY1EWkPVmlIYePewI?=
 =?us-ascii?Q?eDZ6t1YrEEJE3jypZMm9r9rnp6MWHoW6Xuh70c52/YuJnyW1icDvryvKqQae?=
 =?us-ascii?Q?jYcQxndRpo43J7EuaTdOQ+apgPZREDRx8kvWim1yWhrOzfBz11ulRVDgS/0V?=
 =?us-ascii?Q?GLrWdhsG0D+bpopu85AuoZjj0bhPNwV/zCrDYYnnWg7w8JHge7sHDNSKXP+Q?=
 =?us-ascii?Q?1xlOYN9STrlpJmTuhNIZkw4Owzp8qUP8rEQ4nCyHhaGbvhf+fzq82VMy8nEY?=
 =?us-ascii?Q?lGMwj2RL3j3ryPGh+3Vt6SrJXIry?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(7416014)(1800799024)(82310400026)(36860700013)(376014)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:05:23.9403
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 52d1acc1-700b-4a2c-c5cb-08dcf538be68
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044FD.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY8PR12MB8339

Introduce correctable and uncorrectable CXL PCIe port handlers.

Use the PCIe port's device object to find the matching port or
downstream port in the CXL topology. The matching port or downstream
port will include the cached RAS register block.

Invoke the existing __cxl_handle_ras() with the RAS registers as a
parameter. __cxl_handle_ras() will log the RAS errors (if present)
and clear the RAS status.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/pci.c | 59 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 59 insertions(+)

diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index bb2fd7d04c4f..adb184d346ae 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -772,6 +772,65 @@ static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
 	writel(aer_cmd, aer_base + PCI_ERR_ROOT_COMMAND);
 }
 
+static int match_uport(struct device *dev, const void *data)
+{
+	struct device *uport_dev = (struct device *)data;
+	struct cxl_port *port;
+
+	if (!is_cxl_port(dev))
+		return 0;
+
+	port = to_cxl_port(dev);
+
+	return port->uport_dev == uport_dev;
+}
+
+static void __iomem *cxl_pci_port_ras(struct pci_dev *pdev)
+{
+	struct cxl_port *port __free(put_cxl_port) = NULL;
+	void __iomem *ras_base = NULL;
+
+	if (!pdev)
+		return NULL;
+
+	if ((pci_pcie_type(pdev) == PCI_EXP_TYPE_ROOT_PORT) ||
+	    (pci_pcie_type(pdev) == PCI_EXP_TYPE_DOWNSTREAM)) {
+		struct cxl_dport *dport;
+
+		port = find_cxl_port(&pdev->dev, &dport);
+		ras_base = dport ? dport->regs.ras : NULL;
+	} else if (pci_pcie_type(pdev) == PCI_EXP_TYPE_UPSTREAM) {
+		struct device *port_dev;
+
+		port_dev = bus_find_device(&cxl_bus_type, NULL, &pdev->dev,
+					   match_uport);
+		if (!port_dev)
+			return NULL;
+
+		port = to_cxl_port(port_dev);
+		ras_base = port ? port->uport_regs.ras : NULL;
+	}
+
+	return ras_base;
+}
+
+static void cxl_port_cor_error_detected(struct pci_dev *pdev)
+{
+	void __iomem *ras_base = cxl_pci_port_ras(pdev);
+
+	__cxl_handle_cor_ras(&pdev->dev, ras_base);
+}
+
+static bool cxl_port_error_detected(struct pci_dev *pdev)
+{
+	void __iomem *ras_base = cxl_pci_port_ras(pdev);
+	bool ue;
+
+	ue = __cxl_handle_ras(&pdev->dev, ras_base);
+
+	return ue;
+}
+
 void cxl_uport_init_ras_reporting(struct cxl_port *port)
 {
 	/* uport may have more than 1 downstream EP. Check if already mapped. */
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-MW2-obe.outbound.protection.outlook.com (mail-mw2nam10on2064.outbound.protection.outlook.com [40.107.94.64])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4CB141D2B04;
	Fri, 25 Oct 2024 21:05:17 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.94.64
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890320; cv=fail; b=Bmc8qH42IkdSpt+REUKgfkPc8XKAHgM1nQmumWByfkhiCPxCxFG4oV37gR/CceTa+lGUFslUFa5n7TLCgPthexYrNtYnZnCUvZ4MUqp526v40Q3b16Xbr2LJE0UxDnfdlqc32EVEUuasrsmO4GeUgQ/DZdCAgsM/V6X02aTOpcA=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890320; c=relaxed/simple;
	bh=xMPqnjGySRkrlOppPyCgIEcNHzQg+tWfa8dlX+xpcIc=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=JHcordWzM2OZ+Bw/v+QIxtq+CzbKWY7mTZf+AgyLfh1bNfN7vOZerYPMGRR3cs5ZYxGsd4+cBwrE58jRh0KsUbyjQDQPQkv9V5S7Pt7Pfz4WBAyFduNFKS5BEiQQGIjFOonHhYAfXahyFAApc6PZX/LGzP/5/XiJttd79cKA2oo=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=BOmPutbg; arc=fail smtp.client-ip=40.107.94.64
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="BOmPutbg"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=IO27biXpXQLVgfcb4w4g2zzUE33sWBrJh0tkWH1RAfDyJILMO4xvkl2yNHGHjD3fZ3IDY1/EUKG20Ke5hgQWx8yt3RXKEuQRba1Gsuff5fF/MZGD60O4hunQZZLuMSuIU9dbb8Wtbek7rxtIBPLf3h+tiy9OnUtCKZ3jbW7jAemGLvF9tT+D/Z0ENKjlnQ0f42cdIXwis2/aNBEyycUfyT00HPV8pLgm+f7lXoSZJ8Q4fsGdDzHpKQqb4jI6H0OnFHi5xTHk0dp04qrFJzusddgH/JqD6pNE4Jmex09Qd/ZzhcC2htSqaIK8yWkwxJIFojX/Ei28emaCyikqOavNwQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=fCcjp76MfUieof0YgM4NsZcJ6EOCvb3oRjqFA4i2qaw=;
 b=bHpzbfQaFstaod07IM04gsC4rJMr9Mu++imPp8fRXkVgy9PZIJOw7VC1ft1nJ1zSo5kZoHNQaz8S+aUpPhIGBkfkfySUfHLwoO+XcVocbDTTXD4aDJEBha60WpteyuOeCtSrpWTWpcHDV+gYneHcKxY9EAz0GI7s63Hwk/JqCypGUdowljT9n+xAWl/Yi9QePFzS15ZRXOvuAEHXcBo69AUJiB4EXw/ekq1YD+uLJlXySeZ9t/KDR5T38wWGhNL8oQTGNwlUKNbj/fjx8DFvt1SRHb/85NItossgonHY2pO165Fj/w2ssAfjtQWQADQL8IS6/dzZwu44aVqCFIwF2g==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=fCcjp76MfUieof0YgM4NsZcJ6EOCvb3oRjqFA4i2qaw=;
 b=BOmPutbgtn5tcdwM+avT2sKNPMwq2OK5ALObZUTurFIYjYXlzz0n8YB9V493fwkyPRxBj+9LrzHE4kNZcyKfy2cLSeE5rQtHLzu2o7cmFNqXl4nAJludXF0zhbu5WUVipDnKTMAf9bEwwAooTdRbIODnNlFj9tBUG7YH93ou2J0=
Received: from MW4PR04CA0299.namprd04.prod.outlook.com (2603:10b6:303:89::34)
 by PH0PR12MB5680.namprd12.prod.outlook.com (2603:10b6:510:146::8) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.17; Fri, 25 Oct
 2024 21:05:12 +0000
Received: from CO1PEPF000044F7.namprd21.prod.outlook.com
 (2603:10b6:303:89:cafe::40) by MW4PR04CA0299.outlook.office365.com
 (2603:10b6:303:89::34) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.18 via Frontend
 Transport; Fri, 25 Oct 2024 21:05:12 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044F7.mail.protection.outlook.com (10.167.241.197) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:05:12 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:05:11 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 11/14] cxl/pci: Rename RAS handler interfaces to also indicate CXL PCIe port support
Date: Fri, 25 Oct 2024 16:03:02 -0500
Message-ID: <20241025210305.27499-12-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044F7:EE_|PH0PR12MB5680:EE_
X-MS-Office365-Filtering-Correlation-Id: 744991a9-6ced-440b-1af6-08dcf538b77f
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|82310400026|376014|36860700013|1800799024|7416014|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?jcJWa8Gn/bOIyjV+6Wg0OVFW80g5TZBd5tQ9If60GjTf1LUi8OveisCeRBoo?=
 =?us-ascii?Q?fpDV0iz2+JkqQfuKqi8ITZuLduimtYob2lOU7x1M2/FEp4CMNNpzBfTuPyII?=
 =?us-ascii?Q?3i4cQcX3L9sejXcdZK7bU53TpYwjruLtASHHBPNKJl7eomg1uhaci57aFLH3?=
 =?us-ascii?Q?3yRhyQFSSRumbOr5r0MA9oPSsNwm5pUViU/AAbi7iKiTW1V8j6C7wCg9sbhT?=
 =?us-ascii?Q?vHxYzQZaV78uQkMGE50RgEbQiB5QJmR5waasAHaHwYYY65OAp1YtpMdumnmP?=
 =?us-ascii?Q?0WbWqy6Wtokv0ucf80brx1u9h2E+4OH6V99KpayHiP9lVgafXez5hWSjdQl6?=
 =?us-ascii?Q?fdnUXJTmGiVHxQ0gq+Bqba/VizkHR+Yx9Pk8eaAy3CokhpZNSAI4S9lVQWGT?=
 =?us-ascii?Q?6wrkvR6ASIo8Yx3Jer+7SEyLhengPbUqjw3yGaUE0/5Ym1aoSeh1tLOBUSai?=
 =?us-ascii?Q?lA6iHACx8mZO3FPNgiDwygaK0wF2Du2izVWbaw7pisQcIurF/oIfuTqAYDGF?=
 =?us-ascii?Q?Qyf6EhCj5MM5jWfvyq7izWu6v+XA6dCuSFwERoVauWCAvkCU/dhaBV8odekc?=
 =?us-ascii?Q?vKue3cYj9Yw72UZh0bLyJ5sscTg2EI/XixqFawY7Egs/1xfTLi6wPVjdSb5w?=
 =?us-ascii?Q?3SYKjoosFw/gZfXun6Pd9vALrZmqCuffU5T93qEU/Aa587BOLo9xLdcAuW5a?=
 =?us-ascii?Q?l57nZpPjbT2Xx+CQpayMqsGHtbp357o9lzNkS0Bzt3wFFLG9PAx0ePmOl6xC?=
 =?us-ascii?Q?mKTmgMnyGfB/C0dUjrMYUlfHpuEhr1xwIhHuX1pwhVbEKXvHUw/OaUFLlfQO?=
 =?us-ascii?Q?bRs2WlMR4C+u3rsiQiSN5EaT1jDNT9xMK1t8dDfNzlZHIgi/opm4SyjZTk8X?=
 =?us-ascii?Q?TgT+oxlcsdpLfWyeYre8rHzv4v/Vpf8YTiAYRJwTPqaeSl3Vz4QBWE8bTjEc?=
 =?us-ascii?Q?XLMmaps+579q0AH/cVNdEfJAGH62J54QLKTjiKuRcR0VNCy2DjCGz0FcdC7w?=
 =?us-ascii?Q?ttkmLUZiWk7D54n3OFCob3gBhyfaOqdzIkRK+9JIQjTwe02n3pW2uGJg+ftB?=
 =?us-ascii?Q?stFFLFdb6GkDrsK8SdbyEHOWKT/n9iHvTcIQaQPMHxCZFksLvD2Ed6CR5eXQ?=
 =?us-ascii?Q?H0Jo6JEkNtjtpCEujy56q96nnhmzvo1RZZgF4yw3AGO5PhYwCc7xmWxGaLNU?=
 =?us-ascii?Q?xfubJATYAqCSVJJkgp+xVJvI5ZI9Op0Y9y5papXq63iD7OsD4MIzvBwV18IR?=
 =?us-ascii?Q?F7izGqZ3PlAwqnov9Jp0CE40Zmla0sZg5VBKW0owEK7TpYBn4LVNHoNhoiCI?=
 =?us-ascii?Q?yxUR/a6vJag7DUYlkYW0vn8zAg69Rf6Pkjcy8ks/dNh8ijoi2GcHg6eJ/KIY?=
 =?us-ascii?Q?4tvLDz00J3oq8aOnDa8lxqWdpkTn?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(82310400026)(376014)(36860700013)(1800799024)(7416014)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:05:12.3427
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 744991a9-6ced-440b-1af6-08dcf538b77f
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044F7.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH0PR12MB5680

CXL PCIe port protocol error handling support will be added to the
CXL drivers in the future. In preparation, rename the existing
interfaces to support handling all CXL PCIe port protocol errors.

The driver's RAS support functions currently rely on a 'struct
cxl_dev_state' type parameter, which is not available for CXL port
devices. However, since the same CXL RAS capability structure is
needed across most CXL components and devices, a common handling
approach should be adopted.

To accommodate this, update the __cxl_handle_cor_ras() and
__cxl_handle_ras() functions to use a `struct device` instead of
`struct cxl_dev_state`.

No functional changes are introduced.

[1] CXL 3.1 Spec, 8.2.4 CXL.cache and CXL.mem Registers

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/pci.c | 17 ++++++++---------
 1 file changed, 8 insertions(+), 9 deletions(-)

diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index 53ca773557f3..bb2fd7d04c4f 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -650,7 +650,7 @@ void read_cdat_data(struct cxl_port *port)
 }
 EXPORT_SYMBOL_NS_GPL(read_cdat_data, CXL);
 
-static void __cxl_handle_cor_ras(struct cxl_dev_state *cxlds,
+static void __cxl_handle_cor_ras(struct device *dev,
 				 void __iomem *ras_base)
 {
 	void __iomem *addr;
@@ -663,13 +663,13 @@ static void __cxl_handle_cor_ras(struct cxl_dev_state *cxlds,
 	status = readl(addr);
 	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
 		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
-		trace_cxl_aer_correctable_error(cxlds->cxlmd, status);
+		trace_cxl_aer_correctable_error(to_cxl_memdev(dev), status);
 	}
 }
 
 static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
 {
-	return __cxl_handle_cor_ras(cxlds, cxlds->regs.ras);
+	return __cxl_handle_cor_ras(&cxlds->cxlmd->dev, cxlds->regs.ras);
 }
 
 /* CXL spec rev3.0 8.2.4.16.1 */
@@ -693,8 +693,7 @@ static void header_log_copy(void __iomem *ras_base, u32 *log)
  * Log the state of the RAS status registers and prepare them to log the
  * next error status. Return 1 if reset needed.
  */
-static bool __cxl_handle_ras(struct cxl_dev_state *cxlds,
-				  void __iomem *ras_base)
+static bool __cxl_handle_ras(struct device *dev, void __iomem *ras_base)
 {
 	u32 hl[CXL_HEADERLOG_SIZE_U32];
 	void __iomem *addr;
@@ -721,7 +720,7 @@ static bool __cxl_handle_ras(struct cxl_dev_state *cxlds,
 	}
 
 	header_log_copy(ras_base, hl);
-	trace_cxl_aer_uncorrectable_error(cxlds->cxlmd, status, fe, hl);
+	trace_cxl_aer_uncorrectable_error(to_cxl_memdev(dev), status, fe, hl);
 	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
 
 	return true;
@@ -729,7 +728,7 @@ static bool __cxl_handle_ras(struct cxl_dev_state *cxlds,
 
 static bool cxl_handle_endpoint_ras(struct cxl_dev_state *cxlds)
 {
-	return __cxl_handle_ras(cxlds, cxlds->regs.ras);
+	return __cxl_handle_ras(&cxlds->cxlmd->dev, cxlds->regs.ras);
 }
 
 #ifdef CONFIG_PCIEAER_CXL
@@ -823,13 +822,13 @@ EXPORT_SYMBOL_NS_GPL(cxl_dport_init_ras_reporting, CXL);
 static void cxl_handle_rdport_cor_ras(struct cxl_dev_state *cxlds,
 					  struct cxl_dport *dport)
 {
-	return __cxl_handle_cor_ras(cxlds, dport->regs.ras);
+	return __cxl_handle_cor_ras(&cxlds->cxlmd->dev, dport->regs.ras);
 }
 
 static bool cxl_handle_rdport_ras(struct cxl_dev_state *cxlds,
 				       struct cxl_dport *dport)
 {
-	return __cxl_handle_ras(cxlds, dport->regs.ras);
+	return __cxl_handle_ras(&cxlds->cxlmd->dev, dport->regs.ras);
 }
 
 /*
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (mail-mw2nam12on2052.outbound.protection.outlook.com [40.107.244.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 3578F16A94A;
	Fri, 25 Oct 2024 21:05:06 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.244.52
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890308; cv=fail; b=QETQedIYX+MosqRKHmhldQOOYapo5K/TMGq6rmtHZw4/ZiJrqIs6CFpBuebNu096y4a5TBrOkiQ0GpPzXVWT0xPc+9YT19qXxB3msv6+Jfrffslhp3uppZcihRozb57FVWo2BhjcB9KmkLUgn+W06J9UWkh3Onv2QOB1HNByFDc=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890308; c=relaxed/simple;
	bh=QcAf1BuZDyCbH2DcyHI+FTUG9FefRJtXIB7thywpjdg=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=bXH61nc+fGUqWcNVnfb18N1YuqIqSAwXXwj03/n8uRQB/QOl248pYAIiyX/FZx4+MD4aoRfjSwJQ9IsvzoA55eksG2jB0snNpngu4esjaxHuA0mPvzz6hkZCILBeeAtMcserbLHtw0J1kG7Kx06TYP04lbK28uLlpqGvFzmzcf4=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=kOuBMm0s; arc=fail smtp.client-ip=40.107.244.52
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="kOuBMm0s"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=rWYXkXCedlFV7IZ+jkZwTDIMAdKAqxnPd/wG5HLs/nwCv2iywtkQwDm4AgPt3g+6Oq3LCj0AMKdsbK8im2KNqCCjgIrxOUCU2ZW9XuOSLGePCnDyOLCW/C9XgrFv/9S2VCrmTr8l3DqniTZ/9yntxX/7oPDbzTTCQrEFM6gdpBEk/myoL1KX84N1LUcUWhUlDp+ftv78aIA4LYXyBoHLy02hiCAP/UEfHzpXDmFv1c9Lo6rWBYzEyxlZhN+99U3poFBQesXFZGj++ExYFtMkw08+50Nz1WHxcc3ra66E5f1ODZ1oLbwDykpVniwe5RuccqvynARdjdnyCyHarI+mMg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=SMJOrvYxRIkiKfVAxbiFRGklKeHAZiPzwITeMhLfk+0=;
 b=cS+/UVON5XP5D9+Qiid9lAyrg+odmymWUzUSYokC0eS+OeIiRuLItT0LcsBwgYNrJPIEZtbMH++NMJVtGTEoDMCUR3SP2sKQN4B4N6wgK2FblwnKtKZMMJSZtP/rZqX4ssgDdYDJ97OXvjE8VJ1pJ4f109slY6y6yXiEB7yX6utn4vA8UOP15+0UWHpFzoV1XDoVO/fvHyWZjIQ51bSYXIFXafoU06e/OOOV4gGqNYh5M/ZC9IabefNO1Q3my+XUldygoMom+iZiuI8xHi8E6rWrHXlnrn3eHWGr1s1gSKETP70d8Zqu26LWFvShN0gIjqDwEmQyEAjC+QbszEkBUg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=SMJOrvYxRIkiKfVAxbiFRGklKeHAZiPzwITeMhLfk+0=;
 b=kOuBMm0sv+YHm34ugnuBHCYjFehBjCr0jZdCMvQIN7l/ANquTJooDNgyvAhtEP0tLEGdWScJBXZC0CesJ+oWrg+yy1qOXhbzKChWIzb6+3vsTwbpkZ4xSONrcJASNYrVMwjL0y0XeFw5z5xlKhvLBVu4HXg+Re629DRJwQ2qgI0=
Received: from MW4PR03CA0069.namprd03.prod.outlook.com (2603:10b6:303:b6::14)
 by SN7PR12MB7936.namprd12.prod.outlook.com (2603:10b6:806:347::20) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.20; Fri, 25 Oct
 2024 21:05:02 +0000
Received: from CO1PEPF000044FD.namprd21.prod.outlook.com
 (2603:10b6:303:b6:cafe::7) by MW4PR03CA0069.outlook.office365.com
 (2603:10b6:303:b6::14) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.16 via Frontend
 Transport; Fri, 25 Oct 2024 21:05:02 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044FD.mail.protection.outlook.com (10.167.241.203) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:05:01 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:05:00 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 10/14] cxl/pci: Map CXL PCIe upstream switch port RAS registers
Date: Fri, 25 Oct 2024 16:03:01 -0500
Message-ID: <20241025210305.27499-11-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044FD:EE_|SN7PR12MB7936:EE_
X-MS-Office365-Filtering-Correlation-Id: c9018107-609b-4da9-fee8-08dcf538b152
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|1800799024|7416014|376014|36860700013|82310400026|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?2USQINZotCBu9o2ZCzbKEveNx5jGk6M+2coMuL81hZpV1b6WmTFH8t1uqcyA?=
 =?us-ascii?Q?Cyi3XJZH234Yv2y1Vxy2W0kGov3SNuuc78/I8NpGgLx7EVS2SycJIl0dkFAs?=
 =?us-ascii?Q?kxNUOC0KVGke9siftP4IglwR7/eRLNPBpCKLyovE5hiFf2Q1AmxlGo4+d2CP?=
 =?us-ascii?Q?O+oNLHHupoFJxS0nB7ALPDOmQw+S61VYGjIZ2A4+vYzkI5449qAD4SRBnSKb?=
 =?us-ascii?Q?jZXrg2DG9xcRTWXEslsfDovqyx0Ydp1quIf3HH/3apokG7SrD9BBxJCpPCoD?=
 =?us-ascii?Q?rlEfVghNxy1pEfEePRPntiUrow2r/iSJoUdnyjtPb1IIP67Q5Yv8DrGWyibl?=
 =?us-ascii?Q?uRERtOHyvY+JOr3sIByUgiAO00lj9qaifabvu1ULEBS40GGsAINazU2Drjaz?=
 =?us-ascii?Q?FPPGrinz5gvDmO6HYK6xYvWjwJVjrNFI38ux49kvh3RO+Z1/V+dDovkP6SSM?=
 =?us-ascii?Q?49/d0fXTfm9B2XBGJJBBIQ7kx2CKtfK8VlI/TwKjkxNmb1+Dsr764uF9oXFt?=
 =?us-ascii?Q?rSPGHaRLnpC/Z9+ulNh/68xCNB1r6+D2YlpryI2YFPKpHJKBVsyy0BQohJc8?=
 =?us-ascii?Q?djCwe3x1t6TBgVPfVXhowDtPCxFSyAhEqfp9W4eCw6zK2USH9o5Qt34BS5jj?=
 =?us-ascii?Q?Np54AVo4xCzO6Lbc9g5tiAvOKGSTQe9m7flJR1BrTV+ojvBWKEprgvclEyFT?=
 =?us-ascii?Q?lKHE3RoZh/dpooDJv+6DIY5QVudq1zGqjwi8CvMoxjHG0FYb4XbA4vpmS7oD?=
 =?us-ascii?Q?LIag/4DV6ZfF3WzIIIcl9LdlNINcp2STiHPDwd4s1CbWxfmORy3mzbxERwGq?=
 =?us-ascii?Q?U4Na7hWv+4pqqpzOSf25G8BxBU8CBYE38r1+67Iz7RpgXsPX6zWwRlTfa9I+?=
 =?us-ascii?Q?WYZqZqTnHC4YZTv6boZs0vno5y1AkP3x6HYqVweSdYSuXUgZ6pq3uHzOv3al?=
 =?us-ascii?Q?xnUYV1j/QRXcCOyebcc9g4W3hcdTuXZi17THFzl2cxO4By2C17Mkxaxd8MXt?=
 =?us-ascii?Q?vLkPVsL/Q9YtA5I9UazfmwuMfyJdf+N6k9IxPNhKQH4oNzDOAcsRiEIXi4xi?=
 =?us-ascii?Q?AldHllUnHMeKBFD0IVUSEu6yCoBqpdUIjW4cJz7Yo2CfRqUyoENLh/mmnquQ?=
 =?us-ascii?Q?GLbeFh2XPkb4TLnHUcetBJlKkMpdrWE0mYLj234NkHmUMiv3KV/jVkmaaXbq?=
 =?us-ascii?Q?vjjS15G1zDQrJepD+uzRqz8cK0b6bt/GOAn6E8BYjEXUGfmXuaPpOFeGJV29?=
 =?us-ascii?Q?SezZt8fbkI9qS/IOpkowpaOm57JH3vRlzkqGcNKHwU+/YhYx9hN7IRX1Fp3F?=
 =?us-ascii?Q?siaCHCcytIeF6ehFpm4l6GMPX5czzhXuU10WVsL+UZNvxO8/sYlzwkzoiUQ9?=
 =?us-ascii?Q?Wo09WrHsXVL4CT+GwDGHnJHSg/tt?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(1800799024)(7416014)(376014)(36860700013)(82310400026)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:05:01.9872
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: c9018107-609b-4da9-fee8-08dcf538b152
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044FD.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN7PR12MB7936

Add logic to map CXL PCIe upstream switch port (USP) RAS registers.

Introduce 'struct cxl_regs' member into 'struct cxl_port' to store a
pointer to the upstream port's mapped RAS registers.

The upstream port may have multiple downstream endpoints. Before
mapping AER registers check if the registers are already mapped.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/pci.c | 17 +++++++++++++++++
 drivers/cxl/cxl.h      |  4 ++++
 drivers/cxl/mem.c      |  3 +++
 3 files changed, 24 insertions(+)

diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index 0bb61e39cf8f..53ca773557f3 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -773,6 +773,23 @@ static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
 	writel(aer_cmd, aer_base + PCI_ERR_ROOT_COMMAND);
 }
 
+void cxl_uport_init_ras_reporting(struct cxl_port *port)
+{
+	/* uport may have more than 1 downstream EP. Check if already mapped. */
+	if (port->uport_regs.ras) {
+		dev_warn(&port->dev, "RAS is already mapped\n");
+		return;
+	}
+
+	port->reg_map.host = &port->dev;
+	if (cxl_map_component_regs(&port->reg_map, &port->uport_regs,
+				   BIT(CXL_CM_CAP_CAP_ID_RAS))) {
+		dev_err(&port->dev, "Failed to map RAS capability.\n");
+		return;
+	}
+}
+EXPORT_SYMBOL_NS_GPL(cxl_uport_init_ras_reporting, CXL);
+
 /**
  * cxl_dport_init_ras_reporting - Setup CXL RAS report on this dport
  * @dport: the cxl_dport that needs to be initialized
diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
index 787688e81602..ded6a343c05e 100644
--- a/drivers/cxl/cxl.h
+++ b/drivers/cxl/cxl.h
@@ -592,6 +592,7 @@ struct cxl_dax_region {
  * @parent_dport: dport that points to this port in the parent
  * @decoder_ida: allocator for decoder ids
  * @reg_map: component and ras register mapping parameters
+ * @uport_regs: mapped component registers
  * @nr_dports: number of entries in @dports
  * @hdm_end: track last allocated HDM decoder instance for allocation ordering
  * @commit_end: cursor to track highest committed decoder for commit ordering
@@ -612,6 +613,7 @@ struct cxl_port {
 	struct cxl_dport *parent_dport;
 	struct ida decoder_ida;
 	struct cxl_register_map reg_map;
+	struct cxl_component_regs uport_regs;
 	int nr_dports;
 	int hdm_end;
 	int commit_end;
@@ -763,8 +765,10 @@ struct cxl_dport *devm_cxl_add_rch_dport(struct cxl_port *port,
 
 #ifdef CONFIG_PCIEAER_CXL
 void cxl_dport_init_ras_reporting(struct cxl_dport *dport);
+void cxl_uport_init_ras_reporting(struct cxl_port *port);
 #else
 static inline void cxl_dport_init_ras_reporting(struct cxl_dport *dport) { }
+static inline void cxl_uport_init_ras_reporting(struct cxl_port *port) { }
 #endif
 
 struct cxl_decoder *to_cxl_decoder(struct device *dev);
diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
index 240d54b22a8c..067fd6389562 100644
--- a/drivers/cxl/mem.c
+++ b/drivers/cxl/mem.c
@@ -66,6 +66,9 @@ static void cxl_init_ep_ports_aer(struct cxl_ep *ep)
 	if (dev_is_cxl_pci(dport->dport_dev, PCI_EXP_TYPE_DOWNSTREAM) ||
 	    dev_is_cxl_pci(dport->dport_dev, PCI_EXP_TYPE_ROOT_PORT))
 		cxl_dport_init_ras_reporting(dport);
+
+	if (dev_is_cxl_pci(dport->port->uport_dev, PCI_EXP_TYPE_UPSTREAM))
+		cxl_uport_init_ras_reporting(dport->port);
 }
 
 static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (mail-mw2nam12on2066.outbound.protection.outlook.com [40.107.244.66])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 516AB21441D;
	Fri, 25 Oct 2024 21:04:54 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.244.66
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890297; cv=fail; b=LrVIrgPT06yVt/ssU+yzW2Ioh2hII/GEi5Pv4DugQ/bPa+2fMiCxyTP6CGiOxRTIKD2nFq5p4V4Rl4QxWXU7iuTg9nR8OopWNgEnRgLpkw42qSQXHve1nzCQX+QxU3wIZAsYex+KfngBnWY5x+QNuZwCCFzATqOKK4IN8LDwe/c=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890297; c=relaxed/simple;
	bh=4LW4XSc59CyRAG7ITnRUURg6U1X9Rt9TBKTTHj/9lxg=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=DQdL/WPRG1HZKI+V73sJLxSLlb3Ga6C/DMvkcsbnBXU9zdGlZulLKVwZ9QkPPaTXmo0DbK3KKHJ1vwLEZHjjiVPPSfKYtrqUJsX6hYAmWuFlQGyQ+2chVoWKl3mqeK+E9R7SyUOqkzPJPBPj9G8wKWiwuXLiKIjCjOfv+ExI2Kk=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=neo0BIP5; arc=fail smtp.client-ip=40.107.244.66
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="neo0BIP5"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=s4Dp1GAMJw++zkFX960srb0RDVRzuxqQh8UeXlmkob3i+LPwCaooNSkMId37AIgu0dNWHGRwl3tIo0+eQtiHf3EYpp6Q2KXKSmDD/F2d9soNmVG1/A6gHnWbce6p9yrnUsMCxVsSyxI0jxicgq20TO2nKFKFVU2l0VSFfIKUsIz3crHq3WUsu8NlviEJuI3rtUW3gaIU0dkqsmmgaGrHb13bY62YYBHVVO36f/Rfi/xMqVyfvFf3pFmxK/QFhkfRO/XIuNP+9eFg9CXyzYm0EEJG3OoXlr4/wBLkLJ78577jAQRRPrfvl81C/JGAiSqoIcFEg0yV9LyXfnipwuWxgg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=wljKaQXriCA88e08x5mQCbE2H+gNf+KG4Nu7K2vlc0g=;
 b=W6mQeRGWfQAUWdtdqYgGojMwed+1oYmmLojMudi5TkDX8Evby3ZuUqp7syRZK9lXllF3abaHzBAF8qzM4swC6PYXZDeO/yy8Ey5A+Zdiy3lwLux8PoPO6qjwXLPAiAmVfQ2XM1Th6p085cLB5hPHud6qR+eHpiqEc3+kO2tZim+ErnOA0WEchEHpn+MjLBxbho89VyGsW1YKvb2WduVusZhCdqj0mFnUYaEm80QdvbqJMS4ooqeHGWxg2N/bxf0CjK2NCTcZSUJYvXwRBt/cTCyQVuP5NliB1czg+puYTGGs3GZvMYt6eO7xcrp2A/4nJktsYR3EZEa3lmJWluOtzg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=wljKaQXriCA88e08x5mQCbE2H+gNf+KG4Nu7K2vlc0g=;
 b=neo0BIP5QrPyL81pI0MOAxIHctT3GKuGIeM1AcQZvQMGPJm8JX7k4HTW0fwPm8Szy7kjrCIaMbcNquNYnUgYhtMk61nGONtjvLTWW1FAKP1BBz+HvAg8PPcEvps1c5Ak9ArGynBm4CVdrYP0A9LcFwHcpwt05B2fd5Y+GAC/Pew=
Received: from MW4PR03CA0289.namprd03.prod.outlook.com (2603:10b6:303:b5::24)
 by DM4PR12MB6327.namprd12.prod.outlook.com (2603:10b6:8:a2::9) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.8093.21; Fri, 25 Oct 2024 21:04:52 +0000
Received: from CO1PEPF000044FA.namprd21.prod.outlook.com
 (2603:10b6:303:b5:cafe::20) by MW4PR03CA0289.outlook.office365.com
 (2603:10b6:303:b5::24) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.18 via Frontend
 Transport; Fri, 25 Oct 2024 21:04:51 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044FA.mail.protection.outlook.com (10.167.241.200) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:04:51 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:04:49 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 09/14] cxl/pci: Map CXL PCIe root port and downstream switch port RAS registers
Date: Fri, 25 Oct 2024 16:03:00 -0500
Message-ID: <20241025210305.27499-10-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044FA:EE_|DM4PR12MB6327:EE_
X-MS-Office365-Filtering-Correlation-Id: 571f49ff-d336-4644-2ed2-08dcf538ab0e
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|1800799024|7416014|376014|36860700013|82310400026|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?WrjWeA/VCZiBF1S6Ju9/b2G0QfWufpqU0VbTetwHjLCtqepOzahL6oFpg2jB?=
 =?us-ascii?Q?pXEqTl0Dqb/4azs5EcheLebCnuIRPl7jGfWh1SRusUlsTpRPo96lZyq7s+am?=
 =?us-ascii?Q?RwlFGld/ea4ITMUoloMURybFZZsX8NRyTIYNB+Hey/crXvy59U3+HuZZpQSa?=
 =?us-ascii?Q?Phfd8ypE9t63iSKDS2pSYi3v5Qlm7FLJjINakYm0oVj4fdCgOJTtLh5xJaEC?=
 =?us-ascii?Q?q2ugJHlRh7u6AaYjxGF2W0+8bK1FVuXUxy3HSr5+damn0CGnFsjxRZ4Q/ugM?=
 =?us-ascii?Q?W4lFPZYo0uSOYxfAlOIcL4rijrqauQE8YNVnorbev/8aUNjPU6PnFDYFZsU4?=
 =?us-ascii?Q?cGJ/VltPnWpcbQ8huKJN1xQr/4d5reKsiLK7rNVP3fz627JRZ3wFoCZtmAXj?=
 =?us-ascii?Q?s6y9uIaFU1O0FZ017K/M6Mn0MbOFlJui0e4G4YXNJ6jRsJwc84P+j7YCWg2o?=
 =?us-ascii?Q?ylZJlgNGEMeXegoQH+fWZyrcLOGmnruj3RpnplupcDcNYJJV/9NZ3j9otqS6?=
 =?us-ascii?Q?2obPMXw/JU3/yAd1R5QqYpH6LyGVizf8fjLwgn0jpKa/qbWP92GuQURfOv9Y?=
 =?us-ascii?Q?pnxHUiONZdDwHrrpNWlwgnsKtFyrTPiANhxGr2FNSY8an8Z8oWymD01aMOay?=
 =?us-ascii?Q?7O2O5JskadQNWbSNgyZqd7EDUfjViROKHlF6jAJewJ+W1ZbIX32kgOvsHjM0?=
 =?us-ascii?Q?P5uXHCUSwLTmzxvs0QRga057AOVzSLEJ/OhD2YEP2qLcUsIRBdkL9Whp8Zjq?=
 =?us-ascii?Q?HFy9qQ7Rv7t6l9n8KnP/NN+PF0jVaBDi6/Ah1EwhLn0Ct2zvXi90rZvVtmpZ?=
 =?us-ascii?Q?LhLEXpWfTJxIVu3xzwyn34lqbZiPkF04lbCmCHubTdk0SkGLjzosxiydEXyT?=
 =?us-ascii?Q?ZnMsES/bldSUGaAyD0tZ50KJrInbnltSNfMeoaL/HJ8ziURS+65v6BV1dZMF?=
 =?us-ascii?Q?0DVsMfjqR9PLSwC9DGQCDC4LjqIeW2ENE/wqiQr4d5Fd3Y5N1O7hRv6oN+1F?=
 =?us-ascii?Q?CWjOUugNgkqNr/fZLL34h3EIGA+VfMZ3VeqoLoU9ulEgIdGY35BOE0WTsiF7?=
 =?us-ascii?Q?s4jsRRUm7leAH0ZTF8siFmaDZ1cmj77UU6deFDgFdNm/ZOeBuYXYNOQP13yo?=
 =?us-ascii?Q?ODIHVSilBJ7uWjL02lgTNm4lQcR7M2NNbj7tS2pExAXE7JPxa5X6jVGgGhbb?=
 =?us-ascii?Q?g+323zOpdF7oR1MvDMJuGZj4a4SuvIrgtDLZ0s/RRa+yHMJZHjkmBdaUJ2hu?=
 =?us-ascii?Q?zd8pixMKgSlYiWlvOCxQ4XfrXQW0IywKIpfjFjw6f/jA91eHSmrbwqeKS2hb?=
 =?us-ascii?Q?RJ0OYCnmS4/ikNZ538NEAx7x3RltqYUzmIGK5hDf/dLCCa9TgDNh1peNoaC7?=
 =?us-ascii?Q?tV3O6Lcx12gqOTo2KzHZufM/NiK5?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(1800799024)(7416014)(376014)(36860700013)(82310400026)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:04:51.4699
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 571f49ff-d336-4644-2ed2-08dcf538ab0e
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044FA.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM4PR12MB6327

Map RAS registers for CXL PCIe root port and downstream RAS registers.

Refactor and rename cxl_setup_parent_dport() to be cxl_init_ep_ports_aer().
Update the function to iterate an endpoint's parent downstream switch
ports and parent root ports. It maps the RAS registers for each
CXL downstream switch port and CXL root port iterated.

Move the RAS register map logic from cxl_dport_map_regs() into
cxl_dport_init_ras_reporting(). This eliminates an unnecessary helper.
cxl_dport_map_regs() can be removed.

cxl_dport_init_ras_reporting() must check for previously mapped registers
within the topology, particularly with CXL switches. Endpoints under a
CXL switch may share parent ports or downstream ports, ensure the ports'
registers are only mapped once.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/pci.c | 38 +++++++++++++++++---------------------
 drivers/cxl/cxl.h      |  6 ++----
 drivers/cxl/mem.c      | 26 ++++++++++++++++++++++++--
 3 files changed, 43 insertions(+), 27 deletions(-)

diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index 5b46bc46aaa9..0bb61e39cf8f 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -749,18 +749,6 @@ static void cxl_dport_map_rch_aer(struct cxl_dport *dport)
 	}
 }
 
-static void cxl_dport_map_ras(struct cxl_dport *dport)
-{
-	struct cxl_register_map *map = &dport->reg_map;
-	struct device *dev = dport->dport_dev;
-
-	if (!map->component_map.ras.valid)
-		dev_dbg(dev, "RAS registers not found\n");
-	else if (cxl_map_component_regs(map, &dport->regs.component,
-					BIT(CXL_CM_CAP_CAP_ID_RAS)))
-		dev_dbg(dev, "Failed to map RAS capability.\n");
-}
-
 static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
 {
 	void __iomem *aer_base = dport->regs.dport_aer;
@@ -790,20 +778,28 @@ static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
  * @dport: the cxl_dport that needs to be initialized
  * @host: host device for devm operations
  */
-void cxl_dport_init_ras_reporting(struct cxl_dport *dport, struct device *host)
+void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
 {
-	dport->reg_map.host = host;
-	cxl_dport_map_ras(dport);
-
-	if (dport->rch) {
-		struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport->dport_dev);
-
-		if (!host_bridge->native_aer)
-			return;
+	struct device *dport_dev = dport->dport_dev;
+	struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport_dev);
 
+	if (dport->rch && host_bridge->native_aer) {
 		cxl_dport_map_rch_aer(dport);
 		cxl_disable_rch_root_ints(dport);
 	}
+
+	/* dport may have more than 1 downstream EP. Check if already mapped. */
+	if (dport->regs.ras) {
+		dev_warn(dport_dev, "RAS is already mapped\n");
+		return;
+	}
+
+	dport->reg_map.host = dport_dev;
+	if (cxl_map_component_regs(&dport->reg_map, &dport->regs.component,
+				   BIT(CXL_CM_CAP_CAP_ID_RAS))) {
+		dev_err(dport_dev, "Failed to map RAS capability.\n");
+		return;
+	}
 }
 EXPORT_SYMBOL_NS_GPL(cxl_dport_init_ras_reporting, CXL);
 
diff --git a/drivers/cxl/cxl.h b/drivers/cxl/cxl.h
index 0d8b810a51f0..787688e81602 100644
--- a/drivers/cxl/cxl.h
+++ b/drivers/cxl/cxl.h
@@ -762,11 +762,9 @@ struct cxl_dport *devm_cxl_add_rch_dport(struct cxl_port *port,
 					 resource_size_t rcrb);
 
 #ifdef CONFIG_PCIEAER_CXL
-void cxl_setup_parent_dport(struct device *host, struct cxl_dport *dport);
-void cxl_dport_init_ras_reporting(struct cxl_dport *dport, struct device *host);
+void cxl_dport_init_ras_reporting(struct cxl_dport *dport);
 #else
-static inline void cxl_dport_init_ras_reporting(struct cxl_dport *dport,
-						struct device *host) { }
+static inline void cxl_dport_init_ras_reporting(struct cxl_dport *dport) { }
 #endif
 
 struct cxl_decoder *to_cxl_decoder(struct device *dev);
diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
index a9fd5cd5a0d2..240d54b22a8c 100644
--- a/drivers/cxl/mem.c
+++ b/drivers/cxl/mem.c
@@ -45,6 +45,29 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
 	return 0;
 }
 
+static bool dev_is_cxl_pci(struct device *dev, u32 pcie_type)
+{
+	struct pci_dev *pdev;
+
+	if (!dev_is_pci(dev))
+		return false;
+
+	pdev = to_pci_dev(dev);
+	if (!pcie_is_cxl_port(pdev))
+		return false;
+
+	return (pci_pcie_type(pdev) == pcie_type);
+}
+
+static void cxl_init_ep_ports_aer(struct cxl_ep *ep)
+{
+	struct cxl_dport *dport = ep->dport;
+
+	if (dev_is_cxl_pci(dport->dport_dev, PCI_EXP_TYPE_DOWNSTREAM) ||
+	    dev_is_cxl_pci(dport->dport_dev, PCI_EXP_TYPE_ROOT_PORT))
+		cxl_dport_init_ras_reporting(dport);
+}
+
 static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
 				 struct cxl_dport *parent_dport)
 {
@@ -62,6 +85,7 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
 
 		ep = cxl_ep_load(iter, cxlmd);
 		ep->next = down;
+		cxl_init_ep_ports_aer(ep);
 	}
 
 	/* Note: endpoint port component registers are derived from @cxlds */
@@ -166,8 +190,6 @@ static int cxl_mem_probe(struct device *dev)
 	else
 		endpoint_parent = &parent_port->dev;
 
-	cxl_dport_init_ras_reporting(dport, dev);
-
 	scoped_guard(device, endpoint_parent) {
 		if (!endpoint_parent->driver) {
 			dev_err(dev, "CXL port topology %s not enabled\n",
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (mail-bn8nam12on2047.outbound.protection.outlook.com [40.107.237.47])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 394881B21B1;
	Fri, 25 Oct 2024 21:04:44 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.237.47
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890287; cv=fail; b=VV1r4zn78Fo01/8EYkWP54iasSTX2TXQwYuqFBDYQzl9eTyDk1fRaQQSKZxSLe2lU03Xx/aMb3wXWfgfzl+2BGS5S/3O8Rl1sWYdp+I7MnVxGWH8pT57+ZPZTgPJAaK06tA3jTPsQY1dKi+nGXboWqc9LOI59SYulxtoLh8ulhQ=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890287; c=relaxed/simple;
	bh=/gciUkMMv/fmzvWAzaB1/vpC75eH95U3LDrMbnbb9CY=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=A43M4sAtrQFTzUr9PWmsM1Wqwmb3g2kK4zn65/ITT7RWRnCIIXqJperWUHjOBpxWGhs/pFO1JIuhPHdN3emqcr6FRJ+DrzJfp3Uf+jF+bRw+Q+BCBgjd1F0PEHIiwpz+z1uEAdVl2ywPvd9ez7wVYpN65YuKhRZe4x8mwPDp680=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=U44ItDjo; arc=fail smtp.client-ip=40.107.237.47
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="U44ItDjo"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=RLGzgq6RfEpsni2vqrKc454aEHIo3OuWhVonuS/HjR1B/hEWFsWhAnCm7ivIB1LVdOrCHhVq/TKjtkbYrK3O2oqIBfe4+TlxJPRE8/wnPrE1hkVwqYwY3mmRzpTQfHo+9HfwR3GvvoPfka2mdjNcsM43kbTShxX7eBTk73SXgxz6Vnl4VrQS6NZ5qPiQY9V3pY+4n6qCJjUjXNVa9YETghrszkRZ3+2M0eRaoAHHoVgfUc4uFEr5pFqMGZzyAcJbkVmbFaVDH5kBlAvWY410hPk8ZHbdHiU2gPBkQ82hnc5EQEHuxcXU0zLGtl1Vx1Gi65CRCcmzxO+favH5NEN/Yw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=lB7aW/QflGOsDvF/CcqsN9ewFe2W7T/z+vI8ciwGPIs=;
 b=Zm5TQYzloWBPV6kASpoGB82C1G05I6Dce2Al5NjTh3eqDWJ51EXP+2h+tRoBs4HkO+hcGV1FSv4U8JK580pbBHNvILZrLickiu5mzVVHXDJEMYdOsuPqFK4Xnc62hjtnR+w1PqKW043/E5BwQqvdAm5sXJ9LH3O7ZnmUgW3mkUo7WRDrijbCeDyY9kvoGlUsve2rRkrVrptTq4LN1n0C/5ES4VDjuKgssgHbefRaXr2C4rcukf8pvKOnXfVQ7BjvDQXHoEBH8CwO3qExLYVev8m7Zanr71R9ilw2n0/QdSqcvTLPKuPUPKr0ZETQC1jN3inw4xN6G1eVuwk5cxa3Fg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=lB7aW/QflGOsDvF/CcqsN9ewFe2W7T/z+vI8ciwGPIs=;
 b=U44ItDjoAqWIbYygEveHAqF5maIeYJGh9lyWOXO5Wn29bgxx0RM2trHoL9qoHDKS6GO9HF0V4xCJ6KW8QYWqcbjhPF9IytJaI/W8rZ7n2mftvn85bqliYSTsT1yD6OaHnvN+HCMrNSkbT5VViDHzyFZAayWcELMEGymj+HWsCQg=
Received: from MW4PR03CA0073.namprd03.prod.outlook.com (2603:10b6:303:b6::18)
 by DM4PR12MB9070.namprd12.prod.outlook.com (2603:10b6:8:bc::12) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8069.28; Fri, 25 Oct
 2024 21:04:41 +0000
Received: from CO1PEPF000044FD.namprd21.prod.outlook.com
 (2603:10b6:303:b6:cafe::f0) by MW4PR03CA0073.outlook.office365.com
 (2603:10b6:303:b6::18) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8069.28 via Frontend
 Transport; Fri, 25 Oct 2024 21:04:40 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044FD.mail.protection.outlook.com (10.167.241.203) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:04:40 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:04:38 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 08/14] cxl/pci: Change find_cxl_ports() to non-static
Date: Fri, 25 Oct 2024 16:02:59 -0500
Message-ID: <20241025210305.27499-9-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044FD:EE_|DM4PR12MB9070:EE_
X-MS-Office365-Filtering-Correlation-Id: d060fb99-2f41-4fdb-9a81-08dcf538a43f
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|82310400026|376014|36860700013|1800799024|7416014|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?vLCXIDPjzVH+wq+VIZNkS37f9fjgCZh/VKAfpoLPARtaZz0/SK8e5FgRXnJZ?=
 =?us-ascii?Q?wJaMx3Z5cGvD86zjDWQGO5qeM9+Ofz537rQrsDCCgya3sY1M1rIFXZfDNriE?=
 =?us-ascii?Q?BCoy/Ua1wCBYXX3LDO32m0qiSd/NwHd+ShEvZFq7vpLFUE4F2NZcPcNKKR/P?=
 =?us-ascii?Q?D3oxgR8aYMQiEZfASAgTllnG8PpM/uiBSVVSCSGVGp3R7npDBvtgTAkb3tWX?=
 =?us-ascii?Q?Jy5lF3QbB2HOPtZ1pQ0LFW1MrLAwZ6+o3boTXhCPMqmIUWiXaYofqLArkdyp?=
 =?us-ascii?Q?/mDEEKs7G/rUP9qGcLKlPDhKj7vbSVmFNdAwJXLOdvDGeQunIlAzyCNPEDrk?=
 =?us-ascii?Q?FHlvAsZLxPDemy5LLnEvrFSwOO5qS+HFNJ61hF51CI67Nr7QiI4caDyvKPiE?=
 =?us-ascii?Q?qrV4ld2kOhiUiVhxHmgwMEh9T8JiEYiuoJFP+uuMoLg2bsUv3OYa/WyI+GFk?=
 =?us-ascii?Q?COu9jTKDzt+rh5p0RJFi6KhXQllKegfipDjleM5AmeUuPWbVar8eXuYj0gDR?=
 =?us-ascii?Q?ig53XP+lWWH3sjYhO2L993sRNpRhP9XYWb9a5i1LfDBHeLgPumZTaMMSBK4k?=
 =?us-ascii?Q?FxJfjVJfgzt7aaqG99MaBTiql7z39ZRR903tJC5R8gN+L4C7QF3aIoa9iwzJ?=
 =?us-ascii?Q?gx1v4WzDfGI2ncJU4VD0P+ifwLwFLmRY57KAzoFGVzw9hgfo2QGP8b//oCzn?=
 =?us-ascii?Q?FEwokf16u0tnNMtxizj+KmsV3+LGqPbCEzUgGOb8c0Ey4+h56LhLeW2eoha6?=
 =?us-ascii?Q?k1s/QVah1tsDXd4kNdnkDLZ6ffTo+9HA0QLKXqzXMe1hslAA5hcEKRD9Tbgu?=
 =?us-ascii?Q?suHB34Ltwcy9+r3geJLADYKpObwflXC0+rWoGkgc1+7HQGZ+XREwZ4Ydh7Xt?=
 =?us-ascii?Q?AzBsqXFmygjzo9AxcqJPidjYs9vQ1SG6vAgW8a8TE2xo/SvIGO2p94nOnki2?=
 =?us-ascii?Q?cgCLqWyoEmbiYE02HSsVZ4iDurjoB3tvfcyvJnRwWiykwZOvo1GI+ke7pkR3?=
 =?us-ascii?Q?lArvzeylgCW+yWaHXRanukvIQdacB5u1gv6FNgQpZSw4iHrRO9yIysAb2SBP?=
 =?us-ascii?Q?jp8xBiNQy6MW34DLBfYjMGTuy6UNrYtXTvdoAzuXeI4iLN7k4Z3UhSNEqlR8?=
 =?us-ascii?Q?9AqU9wJURS9kgKTRJ6zA5IKzrZWi9JAC1lzlL0bymFdMEQVISbDIRJoN3eHc?=
 =?us-ascii?Q?pCr6z8NhKFyf6AaHEHWiDw8nXx6+bfFHuip25s33gPIpvM2UrXKV2/kS4yEx?=
 =?us-ascii?Q?gX6U86vs/D4MjpazNkzVVttACyT8ZRS63gqHFOs8cRYHLeN3fQZQBBdAHJGJ?=
 =?us-ascii?Q?xGcQOnjtLBYnmwYOCi7zK/TLCxm5NQcWEnN1+lZeTIS3BMibH8LBx6T5nCcp?=
 =?us-ascii?Q?IhCgGC8qfcGQc6lQLW3xP6T1zLB5?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(82310400026)(376014)(36860700013)(1800799024)(7416014)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:04:40.0498
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: d060fb99-2f41-4fdb-9a81-08dcf538a43f
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044FD.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM4PR12MB9070

CXL PCIe port protocol error support will be added in the future. This
requires searching for a CXL PCIe port device in the CXL topology as
provided by find_cxl_port(). But, find_cxl_port() is defined static
and as a result is not callable outside of this source file.

Update the find_cxl_port() declaration to be non-static.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/cxl/core/core.h | 3 +++
 drivers/cxl/core/port.c | 4 ++--
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/drivers/cxl/core/core.h b/drivers/cxl/core/core.h
index 0c62b4069ba0..d81e5ee25f58 100644
--- a/drivers/cxl/core/core.h
+++ b/drivers/cxl/core/core.h
@@ -110,4 +110,7 @@ bool cxl_need_node_perf_attrs_update(int nid);
 int cxl_port_get_switch_dport_bandwidth(struct cxl_port *port,
 					struct access_coordinate *c);
 
+struct cxl_port *find_cxl_port(struct device *dport_dev,
+			       struct cxl_dport **dport);
+
 #endif /* __CXL_CORE_H__ */
diff --git a/drivers/cxl/core/port.c b/drivers/cxl/core/port.c
index e666ec6a9085..2ac835cd4f1b 100644
--- a/drivers/cxl/core/port.c
+++ b/drivers/cxl/core/port.c
@@ -1342,8 +1342,8 @@ static struct cxl_port *__find_cxl_port(struct cxl_find_port_ctx *ctx)
 	return NULL;
 }
 
-static struct cxl_port *find_cxl_port(struct device *dport_dev,
-				      struct cxl_dport **dport)
+struct cxl_port *find_cxl_port(struct device *dport_dev,
+			       struct cxl_dport **dport)
 {
 	struct cxl_find_port_ctx ctx = {
 		.dport_dev = dport_dev,
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-BN1-obe.outbound.protection.outlook.com (mail-bn1nam02on2067.outbound.protection.outlook.com [40.107.212.67])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9DB151B21B1;
	Fri, 25 Oct 2024 21:04:33 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.212.67
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890275; cv=fail; b=YJkYOfELeLDhdOfS3pGkUAgQffWdUrbM9r2Rnh+Ie+KBiGlCYlgPSdX5HafTRtcm2r8XwcsLBq6J6H1BsxQ6M+9v17aXevpklVQdazP36IZ4i3EQxll2rzMMggwsAK3JHuk98iq5eQnsK01d3mKP086hLMEsYRzX/2f4ZHOoG5U=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890275; c=relaxed/simple;
	bh=Tei5V3LCgaZI2dNZaxk+p8W2HRQ7GNyUgiwrbkygGbI=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=rbPKA3Jmh8v0d8PNBg46Dx4EScBCSDCFFk4O97qXtV+z8U6C95BnU8jPcrXe6AR+PsqSoQrr0x0d+0OloH/tY3gDKKdfG3h8Xqr9YnkOmUax9cpYfb7bNEMUqLNC2vGe4izKyVS5keBxJVAPpyPQeWPSFnorGSENqpSldmLLY8A=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=S8Obw/6W; arc=fail smtp.client-ip=40.107.212.67
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="S8Obw/6W"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=SsXcHDeatgVyQTHaHNbaaUlOnrlgxGxc8SmmoSYRM22ANxIo+fR9UkmsMNFS4Pw/y7rj7hU8bvYy3rsKP1XmhunOm4JsbvNDd2AfJetRZ/UbPqk8G6ZV81SsLUfcKWOMc318KKq9wE9kN6S4nSJ7owDvJjxdtkGXSqv7ljN9zt+/j7YayRXxJxr2H7fKGd4ZJMOuPPWMD/feL6Fw4w0MDSU2v4hzu2r522bNa+zeiqn/aFkWXIjDlrWjVR1wvTm8zFzTOw507qHym3m2jUapz78pUQmO4+T6ekC21Mu4LFydmYCOdDBOq0hm/789JB0CTZGNuYi9IHZTlKExt28gyg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=efNNfyFyX9vuQVwQ0Zt//7YkM1yqocs5wuQfewqjA6I=;
 b=lDr7Q05GVP/WOxQhJLZuq2QmUUeXCvQgdK462pZ3YQBd5aJRHcN+Z7+A0DmeeEmZGkoQC+aTqaQk8sT+OdjKXsBrYIKf7c9rl+aexlM3ALsMLCHnIEKhJozF9TP2+160dNBpI1N9zKlopPbFGhHTMOVGsokxb4YzqvWuNzezqCRpZsBlv43uIko9BGZQ0WXIoUbvhfCCYOVo1NIj1KgO5CkwhZNOUsqlN0Bswgj260AD7d7bv+nbNWa7IMyOzAWODMf2R2+SJMmjaP3I8VQYyd3txZQNQu49jkksEOdc3UffGh8Ab5KZxMSKzY8ZzE2IxdpWE4h8Fviw1oHSYyHQTw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=efNNfyFyX9vuQVwQ0Zt//7YkM1yqocs5wuQfewqjA6I=;
 b=S8Obw/6WIz9NG0hBTzztWf/nmmv8VsSM4rs7tHf0aG+iUxMWres68lEEyEV5t1rke7+YMkHOokH9KFuwnluj4XG/gEHLUImfoqBD7SF7MhQLyIK1/+IA9q6mEXYztHqFI/eUh6LKEW+U7J9WsEmSFASdrRBKT3ZJe6SaElITUns=
Received: from MW4PR03CA0087.namprd03.prod.outlook.com (2603:10b6:303:b6::32)
 by CYXPR12MB9442.namprd12.prod.outlook.com (2603:10b6:930:e3::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.23; Fri, 25 Oct
 2024 21:04:29 +0000
Received: from CO1PEPF000044FD.namprd21.prod.outlook.com
 (2603:10b6:303:b6:cafe::ea) by MW4PR03CA0087.outlook.office365.com
 (2603:10b6:303:b6::32) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.20 via Frontend
 Transport; Fri, 25 Oct 2024 21:04:29 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044FD.mail.protection.outlook.com (10.167.241.203) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:04:28 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:04:27 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 07/14] PCI/AER: Add CXL PCIe port uncorrectable error recovery in AER service driver
Date: Fri, 25 Oct 2024 16:02:58 -0500
Message-ID: <20241025210305.27499-8-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044FD:EE_|CYXPR12MB9442:EE_
X-MS-Office365-Filtering-Correlation-Id: c66c381b-a2a5-428e-108c-08dcf5389d9e
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|7416014|376014|36860700013|1800799024|82310400026|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?ZDOphukiMYcV4Ip3OrLGGMw/zrdSeVNsb4oaBw77EqlTbz4pvu4hljKhnBl7?=
 =?us-ascii?Q?CiSOeoS30NUU0Wf8VMe9iQHKOoIqJcrKrzWEoQUWZQ5l1gykKJF38g25Ljnc?=
 =?us-ascii?Q?RXwV+2npNWFcM7RXj98NcB6uwqT6FkyduxKjENt+3MklUqFMJCaeTauFsDuM?=
 =?us-ascii?Q?cSovq+japMBCUSzQwBbxiCt2Jqisdp3b7ZcvVqR2MM68yd/N28CZUphYFdxv?=
 =?us-ascii?Q?w2HZY3Hsg8yGg3qlUhLe352cXL3OKt7SsPpyC+vnLCMOYIuBoiYE6urV57gn?=
 =?us-ascii?Q?BXRSkeGl+V83/h1e0t+jeOuLKLVh1xYJdpqjoK9xSB2jHGLA8/6GoFsQEpxD?=
 =?us-ascii?Q?0lTlVHKhi3SXT0byWADxaaBGN828L2jP9dzL1/T+RkIkdxB9oV31HKWvfavN?=
 =?us-ascii?Q?SehcguxiBouPD+o5DDstLqw+VZUcst3hyYBmQDv9OB2FWjMPLuTtDMNYH1/a?=
 =?us-ascii?Q?k11pUeiGUifv1hYN8tFcmCAlXxIOpEg4xX87RLoxUgIIkJN1s+OFt4ocjhFm?=
 =?us-ascii?Q?Q+U2dRERiNqmKeyyzr9jwxE5G7LBw8Z5fRAOCiCDj8lcd/gO82lufobjO+Fr?=
 =?us-ascii?Q?fj6KT5d3DdS6GVQJcQw2qOMmltpSFJc1Gbpy6u9WVnQNBw7q4P8SI6zB1whb?=
 =?us-ascii?Q?HIsj3ErjH4ysXPL4baHzlb49ytsg7OhMaKcxLe6t5SZ64nCvvjrbT59PA/cs?=
 =?us-ascii?Q?0VutHFJ45BRiUFsbmycWOrxWeXvOninmfORfMpNdFZQowo1pOW3MyFsC//PR?=
 =?us-ascii?Q?+6nA/1rl1xpuniIVTssXcQ8lPvjum6gpymjUXIFeR3gkknOkUPxmwzTzO69/?=
 =?us-ascii?Q?M0OTuFr4b/o8qM6UJ1dyJS4Ic5XaJzK0/kSpJO4YaF8Np/kgWNQO9Bt9J+03?=
 =?us-ascii?Q?xDx+GX29v1sX540U4IMqtfSKdsKirplSm1a/NmXzl3x62fYPtvpEV1IdV2Oa?=
 =?us-ascii?Q?uOOJ7Ppo07DHghdWwnykZqtU/Rsn/OUVymiJDvfft5D0fEQ1DNgP6B42VLiD?=
 =?us-ascii?Q?1Du8i1w6SLNmQxID/2xtEV6kr/KvJQTj1k6jCKX0+bz4oSArjQsCNhQWJKVa?=
 =?us-ascii?Q?wigP+n44k3NlPd9w3w8fE5Y/dgTHHEmR5FopdDccIIaWZrJBnEW3PTsuMIEt?=
 =?us-ascii?Q?k470mCxeS+QOakLPW8T8zMKgDip30b5pLypYjHAfzUjIH8bxtPVwv/cWCMtA?=
 =?us-ascii?Q?3/3q+20nzx0CYOdaYua4tAGEnhuQN8m9S98y0X2Perrzg4Kcz58ZgalR5gj0?=
 =?us-ascii?Q?yPNHk/zJmBourqMFrDHJafJClx5vqoQIAhJfcn2OZ0FJ7BE3pCLZm1RbencH?=
 =?us-ascii?Q?4x1F4xcbIzZB7+7N+zRe7SqAGbQRrCDnaMJAEo9jO/jvSghuHDbMoIY8JOhH?=
 =?us-ascii?Q?7ea0ZN3EuNZ+5R64IYRVJO2Ohg/3?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(7416014)(376014)(36860700013)(1800799024)(82310400026)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:04:28.8935
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: c66c381b-a2a5-428e-108c-08dcf5389d9e
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044FD.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CYXPR12MB9442

Existing recovery procedure for PCIe uncorrectable errors (UCE) does not
apply to CXL devices. Recovery can not be used for CXL devices because of
the potential for corruption on what can be system memory. Also, current
PCIe UCE recovery does not begin at the bridge but begins at the bridge's
first downstream device. This will miss handling CXL protocol errors in a
CXL root port. A separate CXL recovery is needed because of the different
handling requirements

Add a new function, cxl_do_recovery() using the following.

Add cxl_walk_bridge() to iterate the detected error's sub-topology.
cxl_walk_bridge() is similar to pci_walk_bridge() but the CXL flavor
will begin iteration at the bridge rather than beginning at the
bridge's first downstream child.

Add cxl_report_error_detected() as an analog to report_error_detected().
It will call pci_driver::cxl_err_handlers for each iterated downstream
child. The pci_driver::cxl_err_handlers UCE handler returns a boolean
indicating if there was a UCE error detected during handling.

cxl_do_recovery() uses the status from cxl_report_error_detected() to
determine how to proceed. Non-fatal CXL UCE errors will be treated as
fatal. If a UCE was present during handling then cxl_do_recovery()
will kernel panic.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/pci/pci.h      |  3 +++
 drivers/pci/pcie/aer.c |  5 +++-
 drivers/pci/pcie/err.c | 54 ++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 61 insertions(+), 1 deletion(-)

diff --git a/drivers/pci/pci.h b/drivers/pci/pci.h
index 14d00ce45bfa..5a67e41919d8 100644
--- a/drivers/pci/pci.h
+++ b/drivers/pci/pci.h
@@ -658,6 +658,9 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
 		pci_channel_state_t state,
 		pci_ers_result_t (*reset_subordinates)(struct pci_dev *pdev));
 
+/* CXL error reporting and handling */
+void cxl_do_recovery(struct pci_dev *dev);
+
 bool pcie_wait_for_link(struct pci_dev *pdev, bool active);
 int pcie_retrain_link(struct pci_dev *pdev, bool use_lt);
 
diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
index d772f123c6a2..19432ab2cfb6 100644
--- a/drivers/pci/pcie/aer.c
+++ b/drivers/pci/pcie/aer.c
@@ -1048,7 +1048,10 @@ static void cxl_handle_error(struct pci_dev *dev, struct aer_err_info *info)
 			pdrv->cxl_err_handler->cor_error_detected(dev);
 
 		pcie_clear_device_status(dev);
-	}
+	} else if (info->severity == AER_NONFATAL)
+		cxl_do_recovery(dev);
+	else if (info->severity == AER_FATAL)
+		cxl_do_recovery(dev);
 }
 
 static int handles_cxl_error_iter(struct pci_dev *dev, void *data)
diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
index 31090770fffc..3785f4ca5103 100644
--- a/drivers/pci/pcie/err.c
+++ b/drivers/pci/pcie/err.c
@@ -276,3 +276,57 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
 
 	return status;
 }
+
+static void cxl_walk_bridge(struct pci_dev *bridge,
+			    int (*cb)(struct pci_dev *, void *),
+			    void *userdata)
+{
+	bool *status = userdata;
+
+	cb(bridge, status);
+	if (bridge->subordinate && !*status)
+		pci_walk_bus(bridge->subordinate, cb, status);
+}
+
+static int cxl_report_error_detected(struct pci_dev *dev, void *data)
+{
+	struct pci_driver *pdrv = dev->driver;
+	bool *status = data;
+
+	device_lock(&dev->dev);
+	if (pdrv && pdrv->cxl_err_handler &&
+	    pdrv->cxl_err_handler->error_detected) {
+		const struct cxl_error_handlers *cxl_err_handler =
+			pdrv->cxl_err_handler;
+		*status |= cxl_err_handler->error_detected(dev);
+	}
+	device_unlock(&dev->dev);
+	return *status;
+}
+
+void cxl_do_recovery(struct pci_dev *dev)
+{
+	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
+	int type = pci_pcie_type(dev);
+	struct pci_dev *bridge;
+	int status;
+
+	if (type == PCI_EXP_TYPE_ROOT_PORT ||
+	    type == PCI_EXP_TYPE_DOWNSTREAM ||
+	    type == PCI_EXP_TYPE_UPSTREAM ||
+	    type == PCI_EXP_TYPE_ENDPOINT)
+		bridge = dev;
+	else
+		bridge = pci_upstream_bridge(dev);
+
+	cxl_walk_bridge(bridge, cxl_report_error_detected, &status);
+	if (status)
+		panic("CXL cachemem error. Invoking panic");
+
+	if (host->native_aer || pcie_ports_native) {
+		pcie_clear_device_status(dev);
+		pci_aer_clear_nonfatal_status(dev);
+	}
+
+	pci_info(bridge, "No uncorrectable error found. Continuing.\n");
+}
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-MW2-obe.outbound.protection.outlook.com (mail-mw2nam10on2056.outbound.protection.outlook.com [40.107.94.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id C9CAB217443;
	Fri, 25 Oct 2024 21:04:20 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.94.56
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890262; cv=fail; b=DaazRE4oz0TBkZfSwIwaZO2WaOZy/G6VdHHSWxau8uAx/f+pJ11kuJkRwrp1GgniWJ8Bx2EkE3D9/O+qciKsOuJZ4FeslOv0TCoRPZPhI2x9CcWXr43RDF4RaNYm5XEUqWyvss7+hZ1FcLH9il+X8c0x5qVAaEZzjxCuSx7wIuY=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890262; c=relaxed/simple;
	bh=/9XJuX40kCs0tSWWCrUdwpU7vxcAia9Zyln1UGg97r8=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=IaXy4ReNP7mGdLTve5d0BkhOW+fRyMpVBukHktMPUVA4EkMqQTNscbP+JD8HQqupHQHOK7PQ2JtfEQyh6x2r01I7vL09gpiaKVuSiGaAfhZRvDAYbJCoqzclfeJT8XIi5E0pM2p4MXB6QyxQjszGx1pwRn7FOq/Uc5bUBlYo8Gs=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=LXqspsou; arc=fail smtp.client-ip=40.107.94.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="LXqspsou"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=JwW4M3x3+R3j0vO41fLIwO9vgVSiEmIo93HGJai/gta4DHrT21N9jeVraxnRLbyqznRlnyfMYkevR11hUZ3+uh07LQiOujTvay6Bg2yGI0EB3eXY7/TPnovLXsjbR3/r2AWM5TWCHjHeKbXahZhkX1+Pp1j139ZLDRrS4XHDNPUFek8Cf6tBR1Icm9iGQy5ExoD+zbMARu4Gc1GaidRmE+fYT+cyZXuODVMytYNHte+EEKWgLTmwwhOBIAaGJgXvPtKUVG+AcTz63VA+e6iEsszW2FLc6JmkhI3KFzJpVCObSm0V8goEO1kKCw78oeKKtUndI0KGI1DKH3Tbvtu84Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=0QJ+++jcSQCsJBok1XrLRy8StiCKAW5Hh3smQzHSG+0=;
 b=ZiW8WtL+IU7lL2qUYSWL8mYO6KkhUCQEUKBYS1kWAuWpqzWGcS52jEpDXOL872uPOHatpeJbIDQzrDRSw01/4vFAbT5CzeJTbGsUgTQmgv+ikXgst0zJJ882bMX9ijYbSim2oivDcN8KoSA4LpBc1+TJG1OSZ6Z8Rp24NliPpFAY9WbQyq9hM8hsCtzBq/GfcrRflzB0JoMgGPNZyRnFU7Gt7ZHh2Wqei2/50r5XusBoN8YMeIWaqDR0jg2RLGkbwXaX+An8E5hf76RFpG0YQbw1nSZ1FoEodkXmNcaREmcYOAe6uj8jb2PYzMI+/TPVcpiJ9Mv26P1BEm4Ze1tpqQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=0QJ+++jcSQCsJBok1XrLRy8StiCKAW5Hh3smQzHSG+0=;
 b=LXqspsoug3nb4qP/qXRw/pi43ygB3cTPmOsqhRkLSFG1U4BWhOfuC/KnTieyEBLgqHgNL9nO7O7BrcNwTLsKkf1byiZrTQ08Hqiox+bxLl83AwgI28NYkU+da4E7REFZL4oER/fBSLoDr6bWlI9QZ4WOpgjf6HQgSoGrF56S8mQ=
Received: from MW4PR04CA0285.namprd04.prod.outlook.com (2603:10b6:303:89::20)
 by MN2PR12MB4240.namprd12.prod.outlook.com (2603:10b6:208:1d3::14) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.23; Fri, 25 Oct
 2024 21:04:18 +0000
Received: from CO1PEPF000044F7.namprd21.prod.outlook.com
 (2603:10b6:303:89:cafe::e9) by MW4PR04CA0285.outlook.office365.com
 (2603:10b6:303:89::20) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.17 via Frontend
 Transport; Fri, 25 Oct 2024 21:04:18 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044F7.mail.protection.outlook.com (10.167.241.197) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:04:17 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:04:16 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 06/14] PCI/AER: Change AER driver to read UCE fatal status for all CXL PCIe port devices
Date: Fri, 25 Oct 2024 16:02:57 -0500
Message-ID: <20241025210305.27499-7-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044F7:EE_|MN2PR12MB4240:EE_
X-MS-Office365-Filtering-Correlation-Id: 517d4d12-5a8a-40b3-71a1-08dcf5389705
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|7416014|376014|36860700013|1800799024|82310400026|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?EhjqGE7a/KflKGyjkA9i2uoASwN2lbBSNeymE8rLnfl17o0iW2gOcemDMR6z?=
 =?us-ascii?Q?DyKJuTkTe3m8pldrmfsq0+Q+HzqvBLRUndyQjVmfL9ntzXFI5SnF4D9rdhFY?=
 =?us-ascii?Q?/dhWQ4wuncYxykUl2BAWPt3wwwLzmUsoCbbDLiEVvAgN1utCuhSHC0rHRRy2?=
 =?us-ascii?Q?vDoVcSSvfS0dVnhb8VcpjN9gbRpuVCNc+qvvFH5sN+1i8SVAAOhEOjs/Ew31?=
 =?us-ascii?Q?+m8mcwu3aGggC7l0Q38Mb1HJZi+0etqviwcK7yqO9MPruZmO022/Vz2EjHDM?=
 =?us-ascii?Q?D7ZCRwwEg6FWb8jw/mficBCYqalYhY2ikATiasDk8H5Dn2Ir2tHJ7K718Q2Y?=
 =?us-ascii?Q?+7pc1uWNkfSjeytLCA4wJw325ARVAcmG+D3qpm39jPniw/DXobrE5lnE+eZD?=
 =?us-ascii?Q?8LbjEnYjVQ26LhhUPJL6vpl48N5HFs4prVqSKICJS/OxmEKH01dD28dDOSCh?=
 =?us-ascii?Q?rwfUFTQP3TlXLbmMz/Aj0ceBRx4u1bJB0JSdTNp++3M+INt0SpHBxa7GVOlI?=
 =?us-ascii?Q?OH/LpmYio7+I9Cl8Dek+Xj6pqSoNbMx+NJE5b8O2q2orCSdzswP/1xtOqIa8?=
 =?us-ascii?Q?pCmNBgQQodfLcdtaaZtQY1qrNC9in84qgEsMF2ymOOY4sieoxgNdxsoMkFLN?=
 =?us-ascii?Q?R5FT/sJ55tfenDV2SyHYfnnZQFqeOnwZqTHfJAnCqH5dgiFxxz4W0fG9c3S6?=
 =?us-ascii?Q?HqOkH4T6xgwVRk5tvbrdErj5dcKN58xZBA4O4g2jRzB0po6G6KeJEFRwtOZ9?=
 =?us-ascii?Q?/0pCrV+CU1aMwgZWpDlr5FRvynhTZMbaThc4Zc2FGy6THGry0IPO99rGyy5z?=
 =?us-ascii?Q?f4g7bt4DmV/so+cn6+7cGipQwicD+Zj8esPmroJEx6ViTanNImvypskzYPtL?=
 =?us-ascii?Q?n9Vs7mwsqoULFBGBU1T20+NaWnHx/EeSXcGFX5vDQ9uBPq4Gn4vR3dl3oXa0?=
 =?us-ascii?Q?MWrOz9QrFDpcu5iXoSu8xJWbjnzrk4HYTrYsjY7OhOlrSlaqRLMGwFxJgsZ9?=
 =?us-ascii?Q?hkzWWQZnfbuY3g57SjOLJ1jZCC3a+YM3A3V42ZWvXQs8olzkq647zurWsGI+?=
 =?us-ascii?Q?5om1o9feJroW7DcswL4lqtmsvdZrExqCf2/2V+iwkagoAMjSSt+54HdXFOQo?=
 =?us-ascii?Q?kf1BYpRiR7mYc571XFmS4tKdz8SyqXeJit+8m1g4mANanpm+rOHgNlHvbRaw?=
 =?us-ascii?Q?N6sbQttyOmW98q/Db0c8UNnI9GvE1OrvN51etSnLUqPKf8eQkyrfAgEAaSvI?=
 =?us-ascii?Q?JDQU39zOjcJCGehl4XFCgVs6DfNwLckQFvIDudEuMRG7hS2HSvc5COvymPrF?=
 =?us-ascii?Q?YGOtJ3mp7yoooWRisXJreYXy5nY5N+NiuVah1gRHVofph+bA6ZOh7bpzgvBM?=
 =?us-ascii?Q?3mJ7nI3kasny42FTltTMQNPpXZkC?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(7416014)(376014)(36860700013)(1800799024)(82310400026)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:04:17.8739
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 517d4d12-5a8a-40b3-71a1-08dcf5389705
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044F7.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MN2PR12MB4240

The AER service driver's aer_get_device_error_info() function doesn't read
uncorrectable (UCE) fatal error status from PCIe upstream port devices,
including CXL upstream switch ports. As a result, fatal errors are not
logged or handled as needed for CXL PCIe upstream switch port devices.

Update the aer_get_device_error_info() function to read the UCE fatal
status for all CXL PCIe port devices.

The fatal error status will be used in future patches implementing
CXL PCIe port uncorrectable error handling and logging.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/pci/pcie/aer.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
index 1d3e5b929661..d772f123c6a2 100644
--- a/drivers/pci/pcie/aer.c
+++ b/drivers/pci/pcie/aer.c
@@ -1250,6 +1250,7 @@ int aer_get_device_error_info(struct pci_dev *dev, struct aer_err_info *info)
 	} else if (type == PCI_EXP_TYPE_ROOT_PORT ||
 		   type == PCI_EXP_TYPE_RC_EC ||
 		   type == PCI_EXP_TYPE_DOWNSTREAM ||
+		   type == PCI_EXP_TYPE_UPSTREAM ||
 		   info->severity == AER_NONFATAL) {
 
 		/* Link is still healthy for IO reads */
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-BN7-obe.outbound.protection.outlook.com (mail-bn7nam10on2083.outbound.protection.outlook.com [40.107.92.83])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E5554215C6D;
	Fri, 25 Oct 2024 21:04:10 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.92.83
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890253; cv=fail; b=ucqyxq8iHoPlSd/GxbGlAlQhqABW46on3+fN2uKAmqntBKRcsPGkXEqeBWTV7S08OwTjya6WVF+LPK+j9U6cdedrf4mYLuTQtRbGwornr8V5kTvXfGKVF82YD9QTMflCdtLphC6M1Re3PM0+E5d4AuYmTqRyfl3j74gfTEoPwQI=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890253; c=relaxed/simple;
	bh=zioKQcmyJmQH1sfE0C1M7XlIbWrM3m4HjYOQW2PS6VY=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=PC3r7yBjMLDpgqSXKr58K7h/O4XiCx3p5SjNKHgFiqFBIeVqG6svmyaUZ66Ej0tH6XxRXOyvCllXKAX8vewDEgZpEygpoppaH39lmfLQ/crOPrSw3WXW97qcWQanNARarWIZG2lzE0RX62bKJGyJ+f3qSaVs/cGROFHFNUmM4Mg=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=jFJ4RWXA; arc=fail smtp.client-ip=40.107.92.83
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="jFJ4RWXA"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=aT7XFednMwOkObU+Qg5qSKjXcdDIwPCaeGvKOM9f1YpkvHG1izPSeMhWh7yGWaD0wMYpH9XBFYObxLMojx2szoFFRYbGVlWZ1xTuYDsNTzBuUUrN0TTLf2hPYzaW3H7HlUfa9K1gOV3gRpAIXR7pKslxCQ52sTMRFfXw2vkeIKlIaG2UZmTSQJVA8Fm+YX950VflpeQ+ZbBtWhqV3lk+l0k74ZPgxtEwtDEA/V29mqanDHW2bUR7LqzsCSCwwmBgoNab5RGMtlVIJhRZ+7s6BOoBOkLr1k0vpQwypWTBAOGlVP9eflr8oWKZoYT2yU2vqckMXxalshwREAUw622btg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=5sVN2+sDwK+dHIO8CQZ8X/cG8jAf/ZsFUGUTpUSuU64=;
 b=iGNrkO08NoijZ2DqGuUCx0sCN++4VTbTIfeOY+OHCVlqAUOuSdbzadxAreBSWMluZrBfQS4FRp7EPealtcO69ne1eaIYMbC8mX6iZmeWPNIcVZH5OSrqV0ydQN2uLmLzNa2SXGajwB+cLREOCSAmy/72naq3/kcMOFuFGM0uhFb1qcMME1DEYido0vIY5IJZza+fkP30qrr0GeiQuTjbp7REMTFuHIKZnaV9ifExPgxOwfqZqChKqjXO08y3iwJf5KWPm4OWnVkJZh9GDfcd6PiuNdpT3DJjUkoU6FLeww39PijLHq/JPN4vYvNc2f0jLCFCG6nIwdBgddZZqhA38g==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=5sVN2+sDwK+dHIO8CQZ8X/cG8jAf/ZsFUGUTpUSuU64=;
 b=jFJ4RWXA2OJWYkQoNd3vk294nSqKXIojnQklnlnomS2RZBL5tzv0q/mbDeL+jSi/tBXJ0qXskK1yXhuZbLJc0WIdnN+PQ3nrB+a1aSNHrcHQaDN/OzCbyVR6ClxN34Wm7jQz8awlfqqX4X/7U0jNpHmqfCwMpU/Ek4yGjfST+fE=
Received: from SJ0PR05CA0096.namprd05.prod.outlook.com (2603:10b6:a03:334::11)
 by DM6PR12MB4041.namprd12.prod.outlook.com (2603:10b6:5:210::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.21; Fri, 25 Oct
 2024 21:04:07 +0000
Received: from CO1PEPF000044FB.namprd21.prod.outlook.com
 (2603:10b6:a03:334:cafe::bf) by SJ0PR05CA0096.outlook.office365.com
 (2603:10b6:a03:334::11) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.16 via Frontend
 Transport; Fri, 25 Oct 2024 21:04:07 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044FB.mail.protection.outlook.com (10.167.241.201) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:04:07 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:04:05 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 05/14] PCI/AER: Add CXL PCIe port correctable error support in AER service driver
Date: Fri, 25 Oct 2024 16:02:56 -0500
Message-ID: <20241025210305.27499-6-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044FB:EE_|DM6PR12MB4041:EE_
X-MS-Office365-Filtering-Correlation-Id: 64bcb1cf-5133-4ab8-0c85-08dcf53890a8
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|1800799024|7416014|376014|36860700013|82310400026|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?19lgCxpxFzmylj82m1uDieAUxfQDQMm9FNoiJUMLP64f5PFy/EAmD+54RlBG?=
 =?us-ascii?Q?5ATEcfPUcwzHvsSiSdjkhg9WwnBcX52KraCMOpAxKFKytdmwzUd2QwnJrVGU?=
 =?us-ascii?Q?Ll0IFw+FK/Ax+c4y1RM7+PK8GXiUyvDY5Y731+837nXzZY9ubNmZOxiiWgxO?=
 =?us-ascii?Q?d7nMBIa3BTeYJSKIN2yvyYBSPz2C9Tha7x8ijOXIl60Mt8BtgsjxWRoZQcEy?=
 =?us-ascii?Q?QSfvVGefoCxT6pUbSHx3e8+OYeIQZdYiwGGW8wVc3aa2p2aymJi1pAWIECmE?=
 =?us-ascii?Q?juuS+g2UpFjBLOe/m5izugZ1z00WWyrXqaxcSt0Ln22cBlM58okYTUW5rnKf?=
 =?us-ascii?Q?wKQ+YTnUGYKxoF0tn2kOZPWh0ul7DPiE9xiO6ARRc9+HhOq/jo2VzDpdLUhj?=
 =?us-ascii?Q?twyfo498ZkM7qxLu4Xhz6+I3jX6079au562dKdfeym7b80jbaMmiBiRxYFMU?=
 =?us-ascii?Q?vuafCXlM/6BtNRg4n58n0fN974kC1MwAOHa1yKkH/OAiAKli27nXYig0T5jZ?=
 =?us-ascii?Q?qYZpJurTjqENvC9SREBg38CVi0vsa1EoyDtxbu6FyzfK8SAb5vNkRI4tdHdK?=
 =?us-ascii?Q?atgNUGuBr2CXp7xSBNjz6vsq4OgYn/un+bSB7HWNImNxLwuky4riF7I0dgK0?=
 =?us-ascii?Q?uLBEiKvY7Rc/PvWt9NNueSAfUrXJOXmBHqwbqdO3WtONrXx/Xxu/HykfffJO?=
 =?us-ascii?Q?u5uM9EOdKc5fBwzed11ROFAk3Zw0efVsBeZYoDm5VIE6PPsAW0EiCRo8k7em?=
 =?us-ascii?Q?Jj1G/wsenFDrplMhuIy/TacRVdUeAcs+7qh0tryBiH0XPdMvoDCVn9sJkoPb?=
 =?us-ascii?Q?h4V7SYZKUfMbLde/U2LWHD7VSswvC8PrZhuF9BvkCqQuOY6lh5jz1uL1mZLY?=
 =?us-ascii?Q?da3xxYugG+WZzO3BaTTSXNA+Y1xpUuZmoMqBhmnInNHFZPbQQBKi864zlejc?=
 =?us-ascii?Q?mjKsEL8g1FI28JgPUGrBRWs47TMIf9YPox6QENH1BR035vm+vvt5+V2/yYTJ?=
 =?us-ascii?Q?zpT3K/sK7Qr1TQiUsSlDEWI0cisjNDNskE5WVROTkuOMMlu28TczdxDZTInl?=
 =?us-ascii?Q?47UVwVl35UIpxMGVjr+6ngMB+UgOSe6TGpjsAE8u10k3WOs1w6jxhpRVkz/w?=
 =?us-ascii?Q?oyOLeH31DprX4pXZsTWQk+aTUnirnI8I6J49XfkB3gzD5LypwAnY5AG1ryjZ?=
 =?us-ascii?Q?IueAswC9M8u4irN7E+IZSdZnFTwL9/E1Jgd75/H7JhfA3XKiNckSLQrWF9R9?=
 =?us-ascii?Q?5/r/7D5kwA0ZG4VeR0cxxSPWdB/MFgJkFOSduwmOmbaBwNx16wK8IdqMLRzJ?=
 =?us-ascii?Q?PuDU3g4gMaNRdC1uQp23mz4/i3qRXOOZyIuqmjUFftai8AwbshBzoDjRAMD1?=
 =?us-ascii?Q?JBzkykhDt88MdxV4KeVTUWtEY9J0BSSNJZbrt7mGHA2EOqVgqYVyjYip2VXg?=
 =?us-ascii?Q?8RrAecKddk4=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(1800799024)(7416014)(376014)(36860700013)(82310400026)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:04:07.1798
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 64bcb1cf-5133-4ab8-0c85-08dcf53890a8
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044FB.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB4041

The AER service driver doesn't currently handle CXL protocol errors
reported by CXL root ports, CXL upstream switch ports, and CXL downstream
switch ports. Consequently, RAS protocol errors from CXL PCIe port devices
are not properly logged or handled.

These errors are reported to the OS via the root port's AER correctable
and uncorrectable internal error fields. While the AER driver supports
handling downstream port protocol errors in restricted CXL host (RCH) mode
also known as CXL1.1, it lacks the same functionality for CXL PCIe ports
operating in virtual hierarchy (VH) mode.

To address this gap, update the AER driver to handle CXL PCIe port device
protocol correctable errors (CE).

Make this update alongside the existing downstream port RCH error handling
logic, extending support to CXL PCIe ports in VH mode.

is_internal_error() is currently limited by CONFIG_PCIEAER_CXL kernel
config. Update is_internal_error()'s function declaration such that it is
always available regardless if CONFIG_PCIEAER_CXL kernel config is enabled
or disabled.

The uncorrectable error (UCE) handling will be added in a future patch.

[1] CXL 3.1 Spec, 12.2.2 CXL Root Ports, Downstream Switch Ports, and
Upstream Switch Ports

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/pci/pcie/aer.c | 59 ++++++++++++++++++++++++++++--------------
 1 file changed, 39 insertions(+), 20 deletions(-)

diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
index 53e9a11f6c0f..1d3e5b929661 100644
--- a/drivers/pci/pcie/aer.c
+++ b/drivers/pci/pcie/aer.c
@@ -941,8 +941,15 @@ static bool find_source_device(struct pci_dev *parent,
 	return true;
 }
 
-#ifdef CONFIG_PCIEAER_CXL
+static bool is_internal_error(struct aer_err_info *info)
+{
+	if (info->severity == AER_CORRECTABLE)
+		return info->status & PCI_ERR_COR_INTERNAL;
 
+	return info->status & PCI_ERR_UNC_INTN;
+}
+
+#ifdef CONFIG_PCIEAER_CXL
 /**
  * pci_aer_unmask_internal_errors - unmask internal errors
  * @dev: pointer to the pcie_dev data structure
@@ -994,14 +1001,6 @@ static bool cxl_error_is_native(struct pci_dev *dev)
 	return (pcie_ports_native || host->native_aer);
 }
 
-static bool is_internal_error(struct aer_err_info *info)
-{
-	if (info->severity == AER_CORRECTABLE)
-		return info->status & PCI_ERR_COR_INTERNAL;
-
-	return info->status & PCI_ERR_UNC_INTN;
-}
-
 static int cxl_rch_handle_error_iter(struct pci_dev *dev, void *data)
 {
 	struct aer_err_info *info = (struct aer_err_info *)data;
@@ -1033,14 +1032,23 @@ static int cxl_rch_handle_error_iter(struct pci_dev *dev, void *data)
 
 static void cxl_handle_error(struct pci_dev *dev, struct aer_err_info *info)
 {
-	/*
-	 * Internal errors of an RCEC indicate an AER error in an
-	 * RCH's downstream port. Check and handle them in the CXL.mem
-	 * device driver.
-	 */
-	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
-	    is_internal_error(info))
+	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC)
 		pcie_walk_rcec(dev, cxl_rch_handle_error_iter, info);
+
+	if (info->severity == AER_CORRECTABLE) {
+		struct pci_driver *pdrv = dev->driver;
+		int aer = dev->aer_cap;
+
+		if (aer)
+			pci_write_config_dword(dev, aer + PCI_ERR_COR_STATUS,
+					       info->status);
+
+		if (pdrv && pdrv->cxl_err_handler &&
+		    pdrv->cxl_err_handler->cor_error_detected)
+			pdrv->cxl_err_handler->cor_error_detected(dev);
+
+		pcie_clear_device_status(dev);
+	}
 }
 
 static int handles_cxl_error_iter(struct pci_dev *dev, void *data)
@@ -1058,9 +1066,13 @@ static bool handles_cxl_errors(struct pci_dev *dev)
 {
 	bool handles_cxl = false;
 
-	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
-	    pcie_aer_is_native(dev))
+	if (!pcie_aer_is_native(dev))
+		return false;
+
+	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC)
 		pcie_walk_rcec(dev, handles_cxl_error_iter, &handles_cxl);
+	else
+		handles_cxl = pcie_is_cxl_port(dev);
 
 	return handles_cxl;
 }
@@ -1078,6 +1090,10 @@ static void cxl_enable_internal_errors(struct pci_dev *dev)
 static inline void cxl_enable_internal_errors(struct pci_dev *dev) { }
 static inline void cxl_handle_error(struct pci_dev *dev,
 				    struct aer_err_info *info) { }
+static bool handles_cxl_errors(struct pci_dev *dev)
+{
+	return false;
+}
 #endif
 
 /**
@@ -1115,8 +1131,11 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
 
 static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info)
 {
-	cxl_handle_error(dev, info);
-	pci_aer_handle_error(dev, info);
+	if (is_internal_error(info) && handles_cxl_errors(dev))
+		cxl_handle_error(dev, info);
+	else
+		pci_aer_handle_error(dev, info);
+
 	pci_dev_put(dev);
 }
 
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM11-CO1-obe.outbound.protection.outlook.com (mail-co1nam11on2064.outbound.protection.outlook.com [40.107.220.64])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 820A517B4E2;
	Fri, 25 Oct 2024 21:03:59 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.220.64
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890241; cv=fail; b=GO8MNvwr80AiCsFjr+zt+07zwCebUaRQD6q5qmuCz3p7PTNuFbrVJXfOTiancVhWwQHcttb+wToedXax5S99zjyR1LLxxwkJYQ1e3GPLNG0GWH5JLLaCACiCq1jk1o2UPNvfEzDRuvpP0sTOqlNq2PRg8wddyvz61tF/vZR0DfI=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890241; c=relaxed/simple;
	bh=nrFfd+HiD6Cm4JfvDVKJZ+FZXMnIS3ckYJOdL5s8zck=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=o4LBZldsK2bhUr1juPOY5Kf8imsNX1m2kYxNaFIPKb0KS90KjH5hxVZyu/YVIusZZKqmzcIJ17XAeSkPBn90lugYOh+L8P/yf1nNCKqAqH4uapAkNfxrgfbplLLb/Bz4XDRhCKi0RBrfGJWXV23DAT9AMskiRbgskiPuaF2vfA8=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=1C+RKVvN; arc=fail smtp.client-ip=40.107.220.64
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="1C+RKVvN"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=vISGJ87Jg7mak9wjbOjWltt9r0eCfWwg07SBVaRH2d5u4rp1Novshph2c4RLEheJV7JXRBGpZWy2WDcVK18fL/mo+TBOW5K1sKKj+Lg+UAkpDUGLWdBpiChQ47J5lGHzuu8wP0+2oIUMIv1hPbcKwrCX8/Qyh+fNRZTGfnIcn3s2JztdJduD2YhapTZxBSICfrcYFYqlrKE2jMp7wxFTd3vYDfmkZozBXOOBXj0FdWi6K6heHZitg+N5BBtDY8K0fu1FxNwqSFuglZqyaSFEbOLylonXd+CjMsQcJrQiBGbPlttuCbIyRGx6s3OM0IyeFInMvK6NdLScfJTxGyTa3A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=4/Mm9/AHwA6oFbwvuuIcPE+b34Z7Bpr+IbqMYM3pOzY=;
 b=R7r+2wov+ZXFv6IDxfD5Q4UYsNCOOCLzS2LfmOQFsbpXj/5Io+eJRsnGT6IkrRZV98cv8IgWlWYqQ3Q9obt3XrQAVsYLBgqnF6PSrZY1vT9dHo3OK4SJ5cvTXkgXW6z2i7TkmvgwyzcAiRWPgobBOp6cxsKhWPzjtO9Hta7DZj7AaIQLpccnkQVyeRhSolkzOQtlayeHJFbIhFmKnM1SuXQ2KJ4Nmm/mNM37iA2VpAeTR1Mv3SIzCwnjnI54vPQsNGsRHcok+q0Ge+DXlFiTn219S6iuURNbVUaVUBvimDfmbsRZX3U4SG82i0YI9G4qx8pJNfsFrKFEJBJevhmEOg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=4/Mm9/AHwA6oFbwvuuIcPE+b34Z7Bpr+IbqMYM3pOzY=;
 b=1C+RKVvNkxcvw9ccl3e6tAF5odgtZWoe0nryItCeeBCypRLD3igaTQ+oVbFEcuJqXgroXoYlxs2W9H5XuMvFa+CplftxEK9phyTLHvvgBc7qrRsdtJoTE5Gp1DP57hFOrEcybRmiyirvjzvzVXVE9FmkM/idVkejfzhkLkkhMbs=
Received: from SJ0PR05CA0112.namprd05.prod.outlook.com (2603:10b6:a03:334::27)
 by CYYPR12MB8656.namprd12.prod.outlook.com (2603:10b6:930:c3::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.17; Fri, 25 Oct
 2024 21:03:56 +0000
Received: from CO1PEPF000044FB.namprd21.prod.outlook.com
 (2603:10b6:a03:334:cafe::75) by SJ0PR05CA0112.outlook.office365.com
 (2603:10b6:a03:334::27) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8114.5 via Frontend
 Transport; Fri, 25 Oct 2024 21:03:56 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044FB.mail.protection.outlook.com (10.167.241.201) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:03:55 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:03:54 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 04/14] PCI/AER: Modify AER driver logging to report CXL or PCIe bus error type
Date: Fri, 25 Oct 2024 16:02:55 -0500
Message-ID: <20241025210305.27499-5-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044FB:EE_|CYYPR12MB8656:EE_
X-MS-Office365-Filtering-Correlation-Id: 7d177634-f314-4e7c-0da0-08dcf53889f1
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|376014|7416014|36860700013|1800799024|82310400026|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?eYXcCyCrqC9gZmTi1F9zHFNukoXGBAmCXP4wn/amrWUzgE225s7utaEjP10M?=
 =?us-ascii?Q?w1g/jIOB26m5y3yAyXI6doK65L8zpVwqXCkQegRRR2gYbR+Bl+cSFfYDNsxb?=
 =?us-ascii?Q?POSNZnLMFwgdeAjhsc+EOEWSVi7/j7CKLITn3xwN7rMfsdxvQyFQgURgLHUC?=
 =?us-ascii?Q?Z99Qn8nT4Bt0LOOfTqpDk+SWKJWwFH7yFAzcihJ7qvoLL5bkGtqzD8A5zDgg?=
 =?us-ascii?Q?pcvrq35K1PsCAo03qS5BAJH6ZgLXQQlG9FWssbdSweOxcL7ytBrp8h5NcuGS?=
 =?us-ascii?Q?tbQuh7FQpXP6545I7SgTzzF77MvHm4ft4L1KjgAvZMuqcuVRxBgjTQJWYy5U?=
 =?us-ascii?Q?3p+9HWLIf2nv5B+CJ0MIYyDQZGjBqrKn9lMiSZZ+C0QSCURoceMiQhfTxgmg?=
 =?us-ascii?Q?LERk9ETvGVy6D70jq9/kDF+YdiBLLWEURNC66EJzZfXMwMidK5O39NNe3qh/?=
 =?us-ascii?Q?i6GTTwW+lnVKUwByWRERlZN7E7Iq1mVLtcpxEKtcgu0EpbeNOjsHtENum+ZU?=
 =?us-ascii?Q?vq+c4U772BX7TdrFdb/FN+Zw+BynvOziNKdD8jikzL/LO6yA2is+CXfHgdAz?=
 =?us-ascii?Q?FQWsgp9dGOrPzcFgEg6WRAeAlFKHberF2gAB9r/Cbl2z7E3eqPak93eKclAI?=
 =?us-ascii?Q?FDvJ6ojKiz2+qWM+dyoGG4mm0UmHWx9I3itnVCI+TYi8f48fgLJuKCQE7f+P?=
 =?us-ascii?Q?PUcaqlIiKA9zfseVzzk2+ZsNPBEF3DQJxTibohN9sAsonqID7gZRxN3OdDA+?=
 =?us-ascii?Q?rBpZY/UJ/SJtzmGnRYKLTuTYQdsRUrqkA2hMwUNhnt0EuzB98Lvk0cvYBwF7?=
 =?us-ascii?Q?MmWlQnKgHAsVr+M8Q0TZY8BXZVxJE9HrUM2HFySydqhVd2S11mv+y3MVT/b3?=
 =?us-ascii?Q?kGL8vqQmw4d+5ija7pu55Gywm4B2Qbpn+z2ZVS+Byit8f0Dqse6bVTdPhHgY?=
 =?us-ascii?Q?E00qYrxurobKtRRAjNaq1a/yOGEw3nU80t49pxtzotkSqpKY1XPhzh2+SJ1A?=
 =?us-ascii?Q?Az7NpILLNOH5Gx4jxD4XrxQOd4v9l2ccuGnhszZf+7gYl4cSTICbsoGME7Ch?=
 =?us-ascii?Q?MWcOw1YArY78AumunaVrZGwmXUPaOG78gBchFsITxPrWqNDgEEoPJ3bAXZiV?=
 =?us-ascii?Q?rNMs6NFm0ZotP3B2Bz68moZGuk32jeSKo3b4bur2F16I0JS22qahiyl7GNEY?=
 =?us-ascii?Q?ukLxaqs29+FDV16uWZG1ZTUYqOzABU05NEecdIOLNNdlAToeNycXSu/9+exm?=
 =?us-ascii?Q?tn+NXDNCpxpK+uyKZsA9RpULQS0s+26mO0vOQCEGVuzQZ5T3wTbXWMCOqv3/?=
 =?us-ascii?Q?XlVL27xhGIObYETYqlDWvbLHeGtNGq4sxs+CNYeXOEGtNSay/cshCK7TLR38?=
 =?us-ascii?Q?aGFe922qgAIvpaHWFzT0A5mMOr1hzXVNk1TJzaKJUXhzJnWsQ6WGbFCtDs66?=
 =?us-ascii?Q?yVCBf3cv5vA=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:US;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(376014)(7416014)(36860700013)(1800799024)(82310400026)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:03:55.9299
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 7d177634-f314-4e7c-0da0-08dcf53889f1
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044FB.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CYYPR12MB8656

The AER driver and aer_event tracing currently log 'PCIe Bus Type'
for all errors.

Update the driver and aer_event tracing to log 'CXL Bus Type' for CXL devices.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/pci/pcie/aer.c  | 14 ++++++++------
 include/ras/ras_event.h |  9 ++++++---
 2 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
index fe6edf26279e..53e9a11f6c0f 100644
--- a/drivers/pci/pcie/aer.c
+++ b/drivers/pci/pcie/aer.c
@@ -699,13 +699,14 @@ static void __aer_print_error(struct pci_dev *dev,
 
 void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
 {
+	const char *bus_type = pcie_is_cxl(dev) ? "CXL"  : "PCIe";
 	int layer, agent;
 	int id = pci_dev_id(dev);
 	const char *level;
 
 	if (!info->status) {
-		pci_err(dev, "PCIe Bus Error: severity=%s, type=Inaccessible, (Unregistered Agent ID)\n",
-			aer_error_severity_string[info->severity]);
+		pci_err(dev, "%s Bus Error: severity=%s, type=Inaccessible, (Unregistered Agent ID)\n",
+			bus_type, aer_error_severity_string[info->severity]);
 		goto out;
 	}
 
@@ -714,8 +715,8 @@ void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
 
 	level = (info->severity == AER_CORRECTABLE) ? KERN_WARNING : KERN_ERR;
 
-	pci_printk(level, dev, "PCIe Bus Error: severity=%s, type=%s, (%s)\n",
-		   aer_error_severity_string[info->severity],
+	pci_printk(level, dev, "%s Bus Error: severity=%s, type=%s, (%s)\n",
+		   bus_type, aer_error_severity_string[info->severity],
 		   aer_error_layer[layer], aer_agent_string[agent]);
 
 	pci_printk(level, dev, "  device [%04x:%04x] error status/mask=%08x/%08x\n",
@@ -730,7 +731,7 @@ void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
 	if (info->id && info->error_dev_num > 1 && info->id == id)
 		pci_err(dev, "  Error of this Agent is reported first\n");
 
-	trace_aer_event(dev_name(&dev->dev), (info->status & ~info->mask),
+	trace_aer_event(dev_name(&dev->dev), bus_type, (info->status & ~info->mask),
 			info->severity, info->tlp_header_valid, &info->tlp);
 }
 
@@ -764,6 +765,7 @@ EXPORT_SYMBOL_GPL(cper_severity_to_aer);
 void pci_print_aer(struct pci_dev *dev, int aer_severity,
 		   struct aer_capability_regs *aer)
 {
+	const char *bus_type = pcie_is_cxl(dev) ? "CXL"  : "PCIe";
 	int layer, agent, tlp_header_valid = 0;
 	u32 status, mask;
 	struct aer_err_info info;
@@ -798,7 +800,7 @@ void pci_print_aer(struct pci_dev *dev, int aer_severity,
 	if (tlp_header_valid)
 		__print_tlp_header(dev, &aer->header_log);
 
-	trace_aer_event(dev_name(&dev->dev), (status & ~mask),
+	trace_aer_event(dev_name(&dev->dev), bus_type, (status & ~mask),
 			aer_severity, tlp_header_valid, &aer->header_log);
 }
 EXPORT_SYMBOL_NS_GPL(pci_print_aer, CXL);
diff --git a/include/ras/ras_event.h b/include/ras/ras_event.h
index e5f7ee0864e7..1bf8e7050ba8 100644
--- a/include/ras/ras_event.h
+++ b/include/ras/ras_event.h
@@ -297,15 +297,17 @@ TRACE_EVENT(non_standard_event,
 
 TRACE_EVENT(aer_event,
 	TP_PROTO(const char *dev_name,
+		 const char *bus_type,
 		 const u32 status,
 		 const u8 severity,
 		 const u8 tlp_header_valid,
 		 struct pcie_tlp_log *tlp),
 
-	TP_ARGS(dev_name, status, severity, tlp_header_valid, tlp),
+	TP_ARGS(dev_name, bus_type, status, severity, tlp_header_valid, tlp),
 
 	TP_STRUCT__entry(
 		__string(	dev_name,	dev_name	)
+		__string(	bus_type,	bus_type	)
 		__field(	u32,		status		)
 		__field(	u8,		severity	)
 		__field(	u8, 		tlp_header_valid)
@@ -314,6 +316,7 @@ TRACE_EVENT(aer_event,
 
 	TP_fast_assign(
 		__assign_str(dev_name);
+		__assign_str(bus_type);
 		__entry->status		= status;
 		__entry->severity	= severity;
 		__entry->tlp_header_valid = tlp_header_valid;
@@ -325,8 +328,8 @@ TRACE_EVENT(aer_event,
 		}
 	),
 
-	TP_printk("%s PCIe Bus Error: severity=%s, %s, TLP Header=%s\n",
-		__get_str(dev_name),
+	TP_printk("%s %s Bus Error: severity=%s, %s, TLP Header=%s\n",
+		__get_str(dev_name), __get_str(bus_type),
 		__entry->severity == AER_CORRECTABLE ? "Corrected" :
 			__entry->severity == AER_FATAL ?
 			"Fatal" : "Uncorrected, non-fatal",
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-DM6-obe.outbound.protection.outlook.com (mail-dm6nam10on2075.outbound.protection.outlook.com [40.107.93.75])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 28EFC17DFEC;
	Fri, 25 Oct 2024 21:03:47 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.93.75
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890230; cv=fail; b=rzcazdqU5uflyK08XaI8pzfdPVnHiH4d76RVkXsvKai1C/oyupVph44i7iVl/sRUQzL4cnammrP9rBq2Avo9XW0zKm9ow/DlLnzBzeeKZQcgO5/y6ddQ/XFLXClKp7CGMm8mLzlQXx+sc2b2qBJqMxnA1SUuJ9D1DTDZ/XguMCk=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890230; c=relaxed/simple;
	bh=6SmHFiEnGJpwhleO/GSxIknsXKe7BSXr2Jq4Y1MbXwA=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=OCePNH/zaRXKOvhBhS1RMoVMnpfZ8l5tWfIi9ArhmcmPH7sRYedXCMZQlVlLxJUifjyD9xkegBA0gxwGFAj4OabJjMakouL9sdu3UCXiNyBC7n7Ry2UmQeqp017F/5KQEB6oUtgSiUxpqWEW258yby/VUamQHrKSk5hHRJzbySQ=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=k+ipOPNJ; arc=fail smtp.client-ip=40.107.93.75
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="k+ipOPNJ"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=eSFQ/Z1G1yb+GESLd9ozEMITd5QQl9jZ8uGlGvhUsU/unGeVyTKPmgCnrtu89gZSTqf8tseiwKTh5TDKGnxnsUzKj64noK9Q3ETpiwaBzonjES0PtVoYoeUrR2CT6qP0+SduTunszWYyWLNdMSI1C+Vn1Kj1XYXPa3HV28V1dqQZnpveD06XU18Wtd5l/jCdkWml+9w0P75GL6vE1He3mKg9SZH+qWDemSq9PutAy19lSYeD8Bnq1yG02143uFwTSpdN9S+mxZAcIVSoZ9S7Ya6ibcHl8kEI4PYgBjpRW0YCxKnEa0aEqDWgJ/8aSTNOhYBzh2wA3PnWQXYiqFRHkA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=jDMr4++BpJAskl3YHWn3w1d3P7iZuJBTX0LiUw21bYw=;
 b=URyV9IKW4op0ua4G4w9Mp3078sUXDcmfcpqCm/FM54tVzPj/n93hrFh3Jj8l4ivP3nNDrP09TaiXju9444e3VimHKOx2pgn5cLvuNm8eGYO5X9+drHE4qT73ldkOJLGpz7btB3y+xO8up6KUZXA/P5gSDKN4378tfFkNZVSWvDOWzvJLGszbkh3PhhO/nQSvtRAMmo+Tn7MEPOJ0+5gW00fAzMFzNnpESjGr2+h2nY/nsUmQ1YsLcBZloYBoUqeIvPXLyrGZmMZ8+knlVWerlbK48HRzTa/JVs3jRTlWmV4U2/kWUmLB2eJyM/0t9+hJIsI8MXWxy7zC/2Ss52vqDg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=jDMr4++BpJAskl3YHWn3w1d3P7iZuJBTX0LiUw21bYw=;
 b=k+ipOPNJy8MunjTx5QePsnHSNkinzwflM049ztcTZBWtq550bDo89is3f6Ul7uD2b+1zrgHcQpaYbzy+sHVZtTO9h9f2gddM8neDNvN9j3K5RBWt7zjUc8kqiS3t7DrD6hDIA0GMRVBLNxrXQCzjFwuIRottkoWiAqzUS56XakQ=
Received: from MW4PR04CA0192.namprd04.prod.outlook.com (2603:10b6:303:86::17)
 by SJ2PR12MB9087.namprd12.prod.outlook.com (2603:10b6:a03:562::12) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.20; Fri, 25 Oct
 2024 21:03:45 +0000
Received: from CO1PEPF000044FC.namprd21.prod.outlook.com
 (2603:10b6:303:86:cafe::2d) by MW4PR04CA0192.outlook.office365.com
 (2603:10b6:303:86::17) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.18 via Frontend
 Transport; Fri, 25 Oct 2024 21:03:45 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044FC.mail.protection.outlook.com (10.167.241.202) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:03:44 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:03:43 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 03/14] cxl/pci: Introduce helper functions pcie_is_cxl() and pcie_is_cxl_port()
Date: Fri, 25 Oct 2024 16:02:54 -0500
Message-ID: <20241025210305.27499-4-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044FC:EE_|SJ2PR12MB9087:EE_
X-MS-Office365-Filtering-Correlation-Id: 57500060-5194-4f1d-92be-08dcf538835e
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|376014|7416014|36860700013|82310400026|1800799024|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?7eFhs5wpHCv0V1Iqr9r95T9QtIaKCj+wB1W7m0lM5KGAAklFGRFBGNUvbEPS?=
 =?us-ascii?Q?SkWrWyVJmDrX8+4BvKwAmQwMxejYmwegtzKiq8YL6Trd0PlXpteIa0t4N8J0?=
 =?us-ascii?Q?Rcr+fMJVK0pZ2Fues6TCS3a2R7L7fx6sZ5KfPQq3PjQ5MZmB2LsVmp8Dp0K+?=
 =?us-ascii?Q?YjHuzloJnN5umvV5KsbCLBwGjTTMdrS3an5Lqjn/ITUVr896QY6RRzVmH6YS?=
 =?us-ascii?Q?Lqub86I564fttmIenL6Um1WLU6dyw6PRuXbIo5rv4cIDk8eChtX5e0DAixd7?=
 =?us-ascii?Q?j3SLK+BZWQiyIwLfxxcRPPMK5QD0uSW4dVsaTuZ4IGZXWJLtBIxnYM0cN9PJ?=
 =?us-ascii?Q?1dr0/c5cTiLrXAeF/dAO1S3igejjBYZ+lXqx0ctiTPWCEfD0vi2bnMTsUN32?=
 =?us-ascii?Q?hG0HvQn63fZHSuNlLDF6M4kuaazwgfeIShvjPqLDb8P0B0tHsn1u21P6lZ3C?=
 =?us-ascii?Q?NDy7Gj6k0aEijOsNqACfu+lJgSeBsX/8bWZaivjibBqQt9Bqgy8AKRq5h3sE?=
 =?us-ascii?Q?M89ABx8+rFIJMOHjSnp5pmlpNvEe1R7/+uZb3SLo8zQuN//tVwlrZdR7l4WC?=
 =?us-ascii?Q?qOrgsu7zyYatC/23MNo0a3Yc/bU5jVWp4wSIqzoTdLD5+wi3f591Xvu9QcX8?=
 =?us-ascii?Q?DKHcjazoJcLLgHNpxsPAOhlyQekrhNhL/jMubI9rswvh+qX4FYHhAhsJUfJw?=
 =?us-ascii?Q?j6kOr6lvsaEGbUmQ0Fykl3TrqOLA/0Vt9o+ugdhZwLNUqAeQqzkzpkvX/hnG?=
 =?us-ascii?Q?a+pyStibRit+cAP6ZozW5l+vaqEUB2ftSACDCYcl9Bd2xhOgWh/JaEdczjwY?=
 =?us-ascii?Q?gZSyEhfJq+4PLphw/JNAXOKf5G8mbRZ3AJSY/AGDuAv5R5xTxZw6V4otUFBh?=
 =?us-ascii?Q?VEU5jQ+XVqVA9JVQfQ8pz7nouYGpx32BONGqHXLs0glAiG+mL7b/K2S72YQP?=
 =?us-ascii?Q?OWApOQeS+kbZJEoit4mOpEaDGI/w8eKCivBxwIjcDK/JMloItc6pXhR6ajg1?=
 =?us-ascii?Q?anf8I8c95G7pimfYvBNxfFf1lXhYOE3ZwAsIfyBEjOgbkjEGH1zh5eyKJzrn?=
 =?us-ascii?Q?4YtbLgfqYP9n6OgCtJEbmxDJfH5T9+wwoMrnzjVjC9D6V+PsDpCUkTX7Ggm8?=
 =?us-ascii?Q?OfxFcOpCP1HvLAt55bcvkqA6W34E/2zXGkXFkbvLtnXPANu5ON5VvTyDdZM7?=
 =?us-ascii?Q?tkUMhCoL616dihOEFI0Zn1S8ZAEApyrfN+8D8Samko9FQOkpLB0InQrDvioZ?=
 =?us-ascii?Q?9QuPye5la5zKxxFhON7ERuFkeE3UxWzMvBtPE/2ecJgav0JMw1J/LRN1/jzm?=
 =?us-ascii?Q?+HJUoWpoQFxS9jaDRkicsGicj5ESadxcSbUjlWicQulreaH7nXaR/t304U7/?=
 =?us-ascii?Q?NoiFKzBiWxmsgvStFtS3/9FpISXX?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(376014)(7416014)(36860700013)(82310400026)(1800799024)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:03:44.8879
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 57500060-5194-4f1d-92be-08dcf538835e
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044FC.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SJ2PR12MB9087

CXL and AER drivers need the ability to identify CXL devices and CXL port
devices.

First, add set_pcie_cxl() with logic checking for CXL Flexbus DVSEC
presence. The CXL Flexbus DVSEC presence is used because it is required
for all the CXL PCIe devices.[1]

Add boolean 'struct pci_dev::is_cxl' with the purpose to cache the CXL
Flexbus presence.

Add pcie_is_cxl() as a macro to return 'struct pci_dev::is_cxl',

Add pcie_is_cxl_port() to check if a device is a CXL root port, CXL
upstream switch port, or CXL downstream switch port. Also, verify the
CXL extensions DVSEC for port is present.[1]

[1] CXL 3.1 Spec, 8.1.1 PCIe Designated Vendor-Specific Extended
    Capability (DVSEC) ID Assignment, Table 8-2

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/pci/pci.c             | 14 ++++++++++++++
 drivers/pci/probe.c           | 10 ++++++++++
 include/linux/pci.h           |  4 ++++
 include/uapi/linux/pci_regs.h |  3 ++-
 4 files changed, 30 insertions(+), 1 deletion(-)

diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
index 7d85c04fbba2..c1b243aec61c 100644
--- a/drivers/pci/pci.c
+++ b/drivers/pci/pci.c
@@ -5034,6 +5034,20 @@ static u16 cxl_port_dvsec(struct pci_dev *dev)
 					 PCI_DVSEC_CXL_PORT);
 }
 
+bool pcie_is_cxl_port(struct pci_dev *dev)
+{
+	if (!pcie_is_cxl(dev))
+		return false;
+
+	if ((pci_pcie_type(dev) != PCI_EXP_TYPE_ROOT_PORT) &&
+	    (pci_pcie_type(dev) != PCI_EXP_TYPE_UPSTREAM) &&
+	    (pci_pcie_type(dev) != PCI_EXP_TYPE_DOWNSTREAM))
+		return false;
+
+	return cxl_port_dvsec(dev);
+}
+EXPORT_SYMBOL_GPL(pcie_is_cxl_port);
+
 static bool cxl_sbr_masked(struct pci_dev *dev)
 {
 	u16 dvsec, reg;
diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
index 4f68414c3086..9324eb345f11 100644
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@ -1631,6 +1631,14 @@ static void set_pcie_thunderbolt(struct pci_dev *dev)
 		dev->is_thunderbolt = 1;
 }
 
+static void set_pcie_cxl(struct pci_dev *dev)
+{
+	u16 dvsec = pci_find_dvsec_capability(dev, PCI_VENDOR_ID_CXL,
+					      PCI_DVSEC_CXL_FLEXBUS);
+	if (dvsec)
+		dev->is_cxl = 1;
+}
+
 static void set_pcie_untrusted(struct pci_dev *dev)
 {
 	struct pci_dev *parent;
@@ -1945,6 +1953,8 @@ int pci_setup_device(struct pci_dev *dev)
 	/* Need to have dev->cfg_size ready */
 	set_pcie_thunderbolt(dev);
 
+	set_pcie_cxl(dev);
+
 	set_pcie_untrusted(dev);
 
 	/* "Unknown power state" */
diff --git a/include/linux/pci.h b/include/linux/pci.h
index 106ac83e3a7b..d3b1af9fb273 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -443,6 +443,7 @@ struct pci_dev {
 	unsigned int	is_hotplug_bridge:1;
 	unsigned int	shpc_managed:1;		/* SHPC owned by shpchp */
 	unsigned int	is_thunderbolt:1;	/* Thunderbolt controller */
+	unsigned int	is_cxl:1;               /* CXL alternate protocol */
 	/*
 	 * Devices marked being untrusted are the ones that can potentially
 	 * execute DMA attacks and similar. They are typically connected
@@ -743,6 +744,9 @@ static inline bool pci_is_vga(struct pci_dev *pdev)
 	return false;
 }
 
+#define pcie_is_cxl(dev) (dev->is_cxl)
+bool pcie_is_cxl_port(struct pci_dev *dev);
+
 #define for_each_pci_bridge(dev, bus)				\
 	list_for_each_entry(dev, &bus->devices, bus_list)	\
 		if (!pci_is_bridge(dev)) {} else
diff --git a/include/uapi/linux/pci_regs.h b/include/uapi/linux/pci_regs.h
index 12323b3334a9..5df6c74963c5 100644
--- a/include/uapi/linux/pci_regs.h
+++ b/include/uapi/linux/pci_regs.h
@@ -1186,9 +1186,10 @@
 #define PCI_DOE_DATA_OBJECT_DISC_RSP_3_PROTOCOL		0x00ff0000
 #define PCI_DOE_DATA_OBJECT_DISC_RSP_3_NEXT_INDEX	0xff000000
 
-/* Compute Express Link (CXL r3.1, sec 8.1.5) */
+/* Compute Express Link (CXL r3.1, sec 8.1) */
 #define PCI_DVSEC_CXL_PORT				3
 #define PCI_DVSEC_CXL_PORT_CTL				0x0c
 #define PCI_DVSEC_CXL_PORT_CTL_UNMASK_SBR		0x00000001
+#define PCI_DVSEC_CXL_FLEXBUS				7
 
 #endif /* LINUX_PCI_REGS_H */
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (mail-dm6nam12on2055.outbound.protection.outlook.com [40.107.243.55])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id D5412213151;
	Fri, 25 Oct 2024 21:03:37 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.243.55
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890219; cv=fail; b=VR0N0uoX3VuLxF8BSfoqRhPx/8U/ROcHy+YFad+JdtB7Tfz43Eu/ePkJHVHKAOaYQLeglNVND/eXqAB9fZ1AQHt9h+VNnmuVUcEtI+lmwy7jOlcRj+DJyreNNQLOjoluGjeCmnOCrl+JZFJ6p8LBKnImi+8ugFXsPAkH91v0QW8=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890219; c=relaxed/simple;
	bh=ZRjSPgJaRj8iM0kkHzcemktnD0wdGXJbBRFDp+JAWac=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=UCMzevSbN0LR3kWJd3ZbJHI1DFrdEJr+1Kp7PBo2Bv/SHZVn4s4oQKjp7Z6LqFUQHl+9Oi79+SB5DwCljrn067n4/3ZzIuBqskH0IRJ5B5+stai5WEJFK3S4j5dNWwcIeD/JOrhcQJI2PfkYoIOZJ1Nb0lDL1zpY0LN1aJmOwME=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=BccFQ+Nw; arc=fail smtp.client-ip=40.107.243.55
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="BccFQ+Nw"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=HiVR1Rw5zqZCp5L2OkaqSJeBQ/C1636EuahpJu04Mgpl4bap+xEAkTSO8llg6rbJQsvs4SQwLzytaE9ZEAC14tO9r6UjNlQJ6oF8QaLfJ5elANee+PiFXf0NC9JBO/qHpq71osTcrYtsjRk/jtLVkbaWSTBuMBPYsMTJl8QtTJU6MNFHg4GDnrZlMf0H5f982Be5vmHSi8uz2RU4e/GC65F+xA6nCYaueupR0jk6rKhYZy32io2k0JLR51KvlioZyRpz98ixYjfElQapHEjBhlfM/rBl2xlmY9SvqpxUmXQGXRF4Gv0aW63Kn2k5qKPcIERKhuthtqkB5E48FVBkvw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=f979xuoLj14M6SqZv/ifTTpYtrTRQNtZxsdcLjh7Pgc=;
 b=c4vNST/sxxTX4z1szsfVdzkAupfbIzA4zxMuR6Z5suVFclveS0cF8tpPTqJ8rCkhMHSr4605npnVey5XFU12U8NWWTinPu5ZaABzuQHPK2OXIN1b9Mjn2b8Q9ylvR++FuaHcidcbdevoAcBPfSNIM0QCNmP5b2IzLCget2AaZNJrFGzwtXb5k8X/LId5iq9DMhxpcGmbySUFbQXaReEqN8zHF/sspi4tRMs6i2rfC21Mn/JGrJXHNFEYMwNNsiVoZfv/R4LsSimzAKRIb+Osu2iecjnt7AQFi6qGFd3HNphZ5Blw+Z5gPENxBOGWvTP7+WxibNXa6D/wrA+aM3ywhQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=f979xuoLj14M6SqZv/ifTTpYtrTRQNtZxsdcLjh7Pgc=;
 b=BccFQ+Nw9WRl8AdnHy1PBQcAogGmeXS5on6mCTlajscaAbhCsf+a6bOUBkWbkNbWD/mMGeluuYw5P0uPBChxFVsyc2g4Bes2Khw49CxXj2eSP7UfgFp4lbZL/uPcAE5Vs3b4MZa2kwxqH/JzAVGGJ+qS/u/5QxrcqgkSaMRBI/k=
Received: from MW4P223CA0029.NAMP223.PROD.OUTLOOK.COM (2603:10b6:303:80::34)
 by IA0PR12MB7650.namprd12.prod.outlook.com (2603:10b6:208:436::14) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.19; Fri, 25 Oct
 2024 21:03:34 +0000
Received: from CO1PEPF000044FD.namprd21.prod.outlook.com
 (2603:10b6:303:80:cafe::8d) by MW4P223CA0029.outlook.office365.com
 (2603:10b6:303:80::34) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.18 via Frontend
 Transport; Fri, 25 Oct 2024 21:03:34 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044FD.mail.protection.outlook.com (10.167.241.203) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:03:33 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:03:32 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 02/14] PCI/AER: Rename AER driver's interfaces to also indicate CXL PCIe port support
Date: Fri, 25 Oct 2024 16:02:53 -0500
Message-ID: <20241025210305.27499-3-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044FD:EE_|IA0PR12MB7650:EE_
X-MS-Office365-Filtering-Correlation-Id: 7b013aa2-16b4-4eed-e49b-08dcf5387cdc
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|82310400026|1800799024|376014|36860700013|7416014|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?sC4UbLSEZ0+A2kbIcgZ+KGKhGncAi0E5Z5zIbLMTLOQKH33NhBmEJSDOhLih?=
 =?us-ascii?Q?VT96uQesz6VQIXcoDsV3kip26m8YyjnSjQgnBZePSExNginrMg3KECe10cXu?=
 =?us-ascii?Q?4XJNaI3WBuedg6A4nnt/3sJDgf3eOzMx0KYgYIJHYQH6wbQwvebA3c4p6/kz?=
 =?us-ascii?Q?PFGssseh1mmUXPo+R9LYZLasZ/iHLZe9QeYsg4Ktw57XpTC6L0LS0gLDBSiS?=
 =?us-ascii?Q?Mwb9g8S/yQZ6JvNQjWi237FjaZ+8F2DVwNfPdE96k+a0B0j0NTXTFYQO73RX?=
 =?us-ascii?Q?vUutLbPQ6JL0ILAwu0Q0E/K21tu0+W73rX06A70BRjq5yNnBI6eH7EF3qi3o?=
 =?us-ascii?Q?kLKn/5mY9zdjb9FcC3q6e3oK8R4PAxl0MfHYIfGEBUMao/8PC2NTV5NrkFZD?=
 =?us-ascii?Q?5OS46/F9U9SDroo1QKoq3LIsVOB6stx7k/s/JujqTB7Ux9AUBHCUEXNLq0Ol?=
 =?us-ascii?Q?Ouw2h/KH+RVE+7lQkPlmMKKYgWIyPDbArmsrgzo+DmlFEGoYqyEhbl2AjbHE?=
 =?us-ascii?Q?btfBehI7DlfZM0qwVhYLs539EBX57mDZWRtMs/8BbIgDtliKZXvaUtRhYzAW?=
 =?us-ascii?Q?aXg8Osyg4uOCx0eWsbc84zDPFGQhhqc3WHHnbmrN/Omy9u83/JRWhBICR2hM?=
 =?us-ascii?Q?AJvDGpGfZd0mqYMq6Xm3Yce12Yzu2E8JEQ0kby9BrMqwh377DtQjmX1s9TQe?=
 =?us-ascii?Q?Ex9QTedeK7q+9USpMlbSGuY4O6LQuMCk4or6MEdFwzTxqnm8qseUYdiVvceT?=
 =?us-ascii?Q?ZojXknpaRG+fiB4ZLW6NUhZzm4AHLoLawsX8Vdq+uJmd1h7/baMK/xjlthC2?=
 =?us-ascii?Q?reaOLrdw5+OaNdjg2Q79HgQaZRk8sR7QCQEqWwNghCzjc7EX0Psb5m27Vgcz?=
 =?us-ascii?Q?pYNIKjLCSric0pGwM0+SsmkSZNGlhUwopUguoc4P7h5cO7DdnLOxwuyXIGr2?=
 =?us-ascii?Q?aQtj6jCkTB5y7O/irQKMiq0cS7k5oqAW0WGxi71kdbuU08Ks5Ce2Ool2wN/r?=
 =?us-ascii?Q?u0XGe8O5ZhAy1x8kBPx5yqRCaz+POUI5k6dllunroDUpLsG4JAdSsNpM4oIo?=
 =?us-ascii?Q?Snlc2Di5Sok4qyyM16ztTym9Rll34t7JXBRRMx+pJK4rSYajpBMF7rZXfSof?=
 =?us-ascii?Q?PxyWZaxd5LC0xlogQBjlHFUSvyo4RzzHDFWt0Cdios9wBTP0EiOpweuPrKzc?=
 =?us-ascii?Q?WJ/JZxCfq1E+naDMpXnkGPXvj0421rFds2bFXWVAwBMI74WXMMJ68aXdU5m5?=
 =?us-ascii?Q?0oa6AoijOAVylhSKoVEtArslnHoB4da8qKVX7vW/dmtdPKb3PenRvXgsmoIP?=
 =?us-ascii?Q?l3hVVrcyZs0iiqtxumoDP+A4PICidm/XOYry4Afzq76k2OS1FdkYMLiUiLKz?=
 =?us-ascii?Q?gacgEIsvnGkHs/lNC+DlxAxI/+p5?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(82310400026)(1800799024)(376014)(36860700013)(7416014)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:03:33.9873
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 7b013aa2-16b4-4eed-e49b-08dcf5387cdc
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044FD.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA0PR12MB7650

The AER service driver already includes support for CXL restricted host
(RCH) downstream port error handling. The current implementation is based
on CXL1.1 using a root complex event collector.

Rename function interfaces and parameters where necessary to include
virtual hierarchy (VH) mode CXL PCIe port error handling alongside the RCH
handling.[1] The CXL PCIe port error handling will be added in a future
patch.

Limit changes to renaming variable and function names. No functional
changes are added.

[1] CXL 3.1 Spec, 9.12.2 CXL Virtual Hierarchy

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 drivers/pci/pcie/aer.c | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
index 13b8586924ea..fe6edf26279e 100644
--- a/drivers/pci/pcie/aer.c
+++ b/drivers/pci/pcie/aer.c
@@ -1029,7 +1029,7 @@ static int cxl_rch_handle_error_iter(struct pci_dev *dev, void *data)
 	return 0;
 }
 
-static void cxl_rch_handle_error(struct pci_dev *dev, struct aer_err_info *info)
+static void cxl_handle_error(struct pci_dev *dev, struct aer_err_info *info)
 {
 	/*
 	 * Internal errors of an RCEC indicate an AER error in an
@@ -1052,30 +1052,30 @@ static int handles_cxl_error_iter(struct pci_dev *dev, void *data)
 	return *handles_cxl;
 }
 
-static bool handles_cxl_errors(struct pci_dev *rcec)
+static bool handles_cxl_errors(struct pci_dev *dev)
 {
 	bool handles_cxl = false;
 
-	if (pci_pcie_type(rcec) == PCI_EXP_TYPE_RC_EC &&
-	    pcie_aer_is_native(rcec))
-		pcie_walk_rcec(rcec, handles_cxl_error_iter, &handles_cxl);
+	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
+	    pcie_aer_is_native(dev))
+		pcie_walk_rcec(dev, handles_cxl_error_iter, &handles_cxl);
 
 	return handles_cxl;
 }
 
-static void cxl_rch_enable_rcec(struct pci_dev *rcec)
+static void cxl_enable_internal_errors(struct pci_dev *dev)
 {
-	if (!handles_cxl_errors(rcec))
+	if (!handles_cxl_errors(dev))
 		return;
 
-	pci_aer_unmask_internal_errors(rcec);
-	pci_info(rcec, "CXL: Internal errors unmasked");
+	pci_aer_unmask_internal_errors(dev);
+	pci_info(dev, "CXL: Internal errors unmasked");
 }
 
 #else
-static inline void cxl_rch_enable_rcec(struct pci_dev *dev) { }
-static inline void cxl_rch_handle_error(struct pci_dev *dev,
-					struct aer_err_info *info) { }
+static inline void cxl_enable_internal_errors(struct pci_dev *dev) { }
+static inline void cxl_handle_error(struct pci_dev *dev,
+				    struct aer_err_info *info) { }
 #endif
 
 /**
@@ -1113,7 +1113,7 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
 
 static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info)
 {
-	cxl_rch_handle_error(dev, info);
+	cxl_handle_error(dev, info);
 	pci_aer_handle_error(dev, info);
 	pci_dev_put(dev);
 }
@@ -1491,7 +1491,7 @@ static int aer_probe(struct pcie_device *dev)
 		return status;
 	}
 
-	cxl_rch_enable_rcec(port);
+	cxl_enable_internal_errors(port);
 	aer_enable_rootport(rpc);
 	pci_info(port, "enabled with IRQ %d\n", dev->irq);
 	return 0;
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM10-BN7-obe.outbound.protection.outlook.com (mail-bn7nam10on2051.outbound.protection.outlook.com [40.107.92.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 7EFCA20EA55;
	Fri, 25 Oct 2024 21:03:29 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.92.51
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890211; cv=fail; b=guA56N0qPq/tkmUFXtWnS8/t1uvvKQZvedDTyY6fD3qgSwkCHpNq9J3wMF9R6n626p6+aQN90V1uWUs2YJSHUYnyuycIfngLmh251utSDnVVPhoEiDeZPHflLfxKue7L4CdNDRe+Ww/yOe+xCfJl+O84+k1oZCx8B00hdXAa7/U=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890211; c=relaxed/simple;
	bh=CzfXmIaE0cpdI4NO4JzPEKzraqK+NSd/DiOSUgLFjCA=;
	h=From:To:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=LG21RiRx+mo9xaO/HYsB75uKIkB3WFtfUCIpEBHTVw7f6fLU2l3jAsz5i7lA+C9stEUEacTjJKghEwimiruEvBHl7s+e9WFICuzkMkkPtyVERfXFviQ1zSFf8+05XOSy+VUoYDw+QNxU72ctE71FWdNUxM/mHceTGJ490m8Voow=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=H+zCpy1i; arc=fail smtp.client-ip=40.107.92.51
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="H+zCpy1i"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=vIDLQbs5wR8St4z96sl7CvzwXcfHdhf+JLKsqwTAulSniaJjGphqnLqGejRe9zJ1SSX706g8x2MoFmyjo6BVjCxDntnhRcJWjrNpEeF/rFFvt30RYHoHogd+0ahNE18K8CtznUZAL1JIksZBrAGDBn5o/JeDZJYTOUjQb/Wzqt6tKCDknQeEyt4GZPFLfK6kiV2BdFI5IEfsEjKp/iXCetAx9AgguaJsKlka8QXYD5zI6eJSNAUzysRNh/xozjuTEy8Rq5mJCj6XRzyQbVHj8lPeCWAXTOS1TyMBxBAzRG3h0LUnm9VxbFx9XPEJ6DcTlzTjn5+j4APIfXI0lRwZ2g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=p4YPnP8xfTu4E3D4mZ0VQtiJJkSZl/mZ8f+jOzFr7jY=;
 b=rf/IZ9ZCmuaowpbjypfgCANOneZngLD5G+V4P80Hs/+dnl3r/j+OlyTVLV+gekIAqW9uJyx4B+dKmtS8SYPnM837CpM/SVT1V0tsG1pk90h2bjsLpuNyaMzzv+jNQK7YlgRMz4cy7iWBQTGtBtUt90FmMoQqOZGnXpHi8V2VWVKfT80I9uHFWwxEz1YGdxHTaX05RGM4zYnBZoYo8pupiocTiE8ykU8dcGZVsA1M4MofumuC4oOJgx7NJeooHThNXdcIlcoW1jWzbw5Wx4sCQCU6GTrIbM4vpiBhaxWEUT4egGnViTYBz70Aezy6EzIfPrS2fiVpRNODGYeeGbEzNg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=p4YPnP8xfTu4E3D4mZ0VQtiJJkSZl/mZ8f+jOzFr7jY=;
 b=H+zCpy1iixAbMlzJPPc5zPMI9XHF27l/yXJH1WlinEcunlJJn7QGx3tNbWNTlLn9UJO7EN/s8kKDt4eRMCI3CTuQNSEi/78AGPV3Cl87FVOVtk8dNwFiLDvhR0Jq5ezp5ZrB6Z/5ez0epjhP15W26AwBMUuMnzo6nJdWH7Dfbc4=
Received: from MW4PR04CA0287.namprd04.prod.outlook.com (2603:10b6:303:89::22)
 by DM4PR12MB7645.namprd12.prod.outlook.com (2603:10b6:8:107::16) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.21; Fri, 25 Oct
 2024 21:03:23 +0000
Received: from CO1PEPF000044F7.namprd21.prod.outlook.com
 (2603:10b6:303:89:cafe::17) by MW4PR04CA0287.outlook.office365.com
 (2603:10b6:303:89::22) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.18 via Frontend
 Transport; Fri, 25 Oct 2024 21:03:23 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044F7.mail.protection.outlook.com (10.167.241.197) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:03:22 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:03:21 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 01/14] PCI/AER: Introduce 'struct cxl_err_handlers' and add to 'struct pci_driver'
Date: Fri, 25 Oct 2024 16:02:52 -0500
Message-ID: <20241025210305.27499-2-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044F7:EE_|DM4PR12MB7645:EE_
X-MS-Office365-Filtering-Correlation-Id: 205b2065-1b38-41f8-f38a-08dcf5387635
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|82310400026|1800799024|36860700013|7416014|376014|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?Qchirn/nxDfcR2R0F8fsIkeDbGbCnK42QD0kleWt/iaQX0Y9d4ZItHVDOixA?=
 =?us-ascii?Q?35TgkR4Oo2aL4Fbfqr0AYrssQ8Meaa4IdH/yjdt4KhQ8kC5nMmZvpHeXTerC?=
 =?us-ascii?Q?I3P/4E46ZmGuZYX7IBPX2AG474QVGTKorZirOWfJfbuRfyX2o0gW7924L9EN?=
 =?us-ascii?Q?id0GHIJrqFF4ykPWIP0hDlKZnXGBNkRP3/COyewcfG0LvIwQA7IjfngZIZfe?=
 =?us-ascii?Q?ztOjyC/eECZJZdjL35mCVtFvJV/6fLV9hTY10LL9aAetQoM7gYmQqiEviOtt?=
 =?us-ascii?Q?Ouzx4cX2rdD40bcqpOh34EgAxLChNFWXGfHlEbgnxhvOwhTm94O/yIiDy8f0?=
 =?us-ascii?Q?91KXyGhK7PwUWFdMXNR0oD9gYLaLu2Cqggchaf5ULGebY3lkh0ZFxv/Yliu0?=
 =?us-ascii?Q?IJKZt5H3AsPyVGsU+uGz7PyQnODBKUKiGMcGRS+BpHMKTayIp1bxIB8cY//p?=
 =?us-ascii?Q?Yk5My7z4eRUqM73/wNRdbUE6F2JSH/5zBI/2SIbWyM129U/oo0i9JoIvTp/0?=
 =?us-ascii?Q?+wVr0packd9M2oZQE+x0EY8Dh/pc25FjXHmXE8vNZguYuPg5iMnZc2vVp10O?=
 =?us-ascii?Q?kpXoy+cLxMYHRINGnSGrLTT/+jaZih32d/Js4i7V/x/AnCkiGfAcb4hHcGK2?=
 =?us-ascii?Q?BuAwZfltF95ThPnQYQ0b/JXb57XS9XikBNT6q+ku1RKaXZvkF2LvrwMnZosI?=
 =?us-ascii?Q?CNay371QYcd5ptdVHd/NOmBzF0IXgF9dWL9BWltJRzZnE0MFo6FXyeevEVkV?=
 =?us-ascii?Q?l6FkAi2VueqQ/MhUGbVuZIWBCwQvrxDZLqd463HPkFenXeysaTMGtOmQGZOT?=
 =?us-ascii?Q?UB9l8nguPitT1Orq2aOMmHngeXfYoKhdn4cGqP4NhmA6vS5zchQCBfKz4DlN?=
 =?us-ascii?Q?Zup0x/ywuNHh0cz/z+ReD+A25EQf0uV6QF+LLliKDCw8Qt2M8LxiRdcTMURo?=
 =?us-ascii?Q?RlHekg17I3Ic853ke6HvA2HzM0lvgA6hod3W7gM0ImOaXAzLEyRbx10EvYrW?=
 =?us-ascii?Q?TbdJIm6g5YCjNz87cStALcORCDraOn3ue6PsrMU/Nn431wzrJLoIE7irE8hj?=
 =?us-ascii?Q?q//d5t8pI5BWHj0W4H3XZO9mZz6fygLhkpV649P1InXzFeXm0d76qUm8+CZR?=
 =?us-ascii?Q?ZAxMCGF5f1CzflQu1oGpGDEFJVkYUE+DerhpZ8QoP7I7u07kcCFw9g4pnd3S?=
 =?us-ascii?Q?2/RvGbK74JinVlEvbM/C6cJ/rmVR/lV35CSpWp+is8xuW2FH2yyWjiWOETTK?=
 =?us-ascii?Q?BVAiTQvkAP+kztzHaLfRL/wOGZoFvtF1Ih3pb8TCeMgERhZ+tQa1s5/OgFHQ?=
 =?us-ascii?Q?Gs+I6fnFwIeVmarXy7hgOFZRrm4eKqfXeCu7QV2+jNSCJCms3IEO4i+uArAw?=
 =?us-ascii?Q?h0eAyL215jaWCq3h0DJRJXiWMB/O?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(82310400026)(1800799024)(36860700013)(7416014)(376014)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:03:22.8113
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 205b2065-1b38-41f8-f38a-08dcf5387635
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044F7.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM4PR12MB7645

CXL.io provides PCIe like protocol error implementation, but CXL.io and
PCIe have different handling requirements.

The PCIe AER service driver may attempt recovering PCIe devices with
uncorrectable errors while recovery is not used for CXL.io. Recovery is not
used in the CXL.io recovery because of the potential for corruption on
what can be system memory.

Create pci_driver::cxl_err_handlers similar to pci_driver::error_handler.
Create handlers for correctable and uncorrectable CXL.io error
handling.

The CXL error handlers will be used in future patches adding CXL PCIe
port protocol error handling.

Signed-off-by: Terry Bowman <terry.bowman@amd.com>
---
 include/linux/pci.h | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/include/linux/pci.h b/include/linux/pci.h
index 573b4c4c2be6..106ac83e3a7b 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -886,6 +886,14 @@ struct pci_error_handlers {
 	void (*cor_error_detected)(struct pci_dev *dev);
 };
 
+/* CXL bus error event callbacks */
+struct cxl_error_handlers {
+	/* CXL bus error detected on this device */
+	bool (*error_detected)(struct pci_dev *dev);
+
+	/* Allow device driver to record more details of a correctable error */
+	void (*cor_error_detected)(struct pci_dev *dev);
+};
 
 struct module;
 
@@ -956,6 +964,7 @@ struct pci_driver {
 	int  (*sriov_set_msix_vec_count)(struct pci_dev *vf, int msix_vec_count); /* On PF */
 	u32  (*sriov_get_vf_total_msix)(struct pci_dev *pf);
 	const struct pci_error_handlers *err_handler;
+	const struct cxl_error_handlers *cxl_err_handler;
 	const struct attribute_group **groups;
 	const struct attribute_group **dev_groups;
 	struct device_driver	driver;
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (mail-mw2nam12on2068.outbound.protection.outlook.com [40.107.244.68])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 45810217F2A;
	Fri, 25 Oct 2024 21:03:17 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.244.68
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729890203; cv=fail; b=gz/SE5iaKOsNNtw/cH3zfn22VLNIi8UoEyru0NsTnNu86HLgJQehHTBxlMlmBXcj6RvYokqPDcY5CQwexajCA1wc5uJAsz6FaZzt3ACOK8I5q8fDwNmBduq8aJ/dwjNPQxbV8i5FQt8j3O3edsIOxQy9DcqilJA308be6+NIIB4=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729890203; c=relaxed/simple;
	bh=DrmCN8K/mYnrGlx7c47UMF/AD0FRWUJEWby23Lqe+gA=;
	h=From:To:Subject:Date:Message-ID:MIME-Version:Content-Type; b=cAACaqJdQa8pKBGWtUD7DwQDEETbQIAezXqpGJvLE18m/VGapRnp3DhJ0bJLW69mslbJIp+H4mAhvjtRG2UeTSAVwPPg+wLMoNUrxpoUUd8FhH4jATwprmFy9/JvOoDtPECiVfVh+DPwo5dky/jo4aJmxrQcFoaL2tpnqdlLkyA=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=tffkEaCK; arc=fail smtp.client-ip=40.107.244.68
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="tffkEaCK"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=OZlWXdrttzvQ7/jOgwbHgakud08vod4xeGWNSqufD1R6WEImexbQDbUwLpRXL4Pyx0MCDICdVDHCgerPu9lpqmr+SmguXcJ51tT0RbgVwy6ZupQURd+G+wiutSc85px40sw81KVJtchVlc2oB/4p3NjY1VKQJGOysM8k06Nqi4kKbHWs0ZHziRcEK8cwBUVkvfFj2x2PDqiUZCfnBqqm7qUdMvjYHcyk5mhtllgS1RuvPUCl2+iMVjrh6DvnJNF0RY/iMB24qzX5qJzz0LapTTNi0jFk2NHd38bAZEENtDLpI1ARTv3TwjHOdR+QhnqmlcZN+8FhYq4uAGgXOO05/w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=9ciA2G9KOnZ+ma8+d9G+TGW8x826Ap+QpO8rcmiuTWs=;
 b=TmVrm2d8ljbE8iBhs2a41VoppPS/L1QihTixJnFRq316wEEZU6wM7il7ZMKDaDM+ysxHUSch5+PBCP47cz3LB5Kzn5WfeAPNJlNJioZwHoJupNekjx55SwD3G9oc06aZGMJwhwdbPq6UXFxLlkJ2N64D7oila1RxQRsxUcUY01sB/aERzHOmQUSAwQAYcBnDWmjXMHM+W5/y9xyCKNEOQ885J/sG73DqXjI+WHhtkUemEPyOG7tU/BvPmIFRRgCl1aGiCPxeXiXxFZGzrUGqkLfwjcPMt7+bql+asXmLi9HZwcDwPjK+axmeZEe/on9Z7npIdCgtu7L1ffFgP9JHsg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass (sender ip is
 165.204.84.17) smtp.rcpttodomain=intel.com smtp.mailfrom=amd.com; dmarc=pass
 (p=quarantine sp=quarantine pct=100) action=none header.from=amd.com;
 dkim=none (message not signed); arc=none (0)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=9ciA2G9KOnZ+ma8+d9G+TGW8x826Ap+QpO8rcmiuTWs=;
 b=tffkEaCKVoayQds8dRTIn4TyKg2cx/aQ6Gd04vxD510sF5lpfPQC7arthtd7vH0nBNRthbaakcE1iGMbSzQao9S+7IS/07IG2ub7YP8MQkrEV4O0hvNdgttReoEnd57BdN/Ew58pJxK5637vRSG3pvcmccZqEf7FDDotzGOq1Qg=
Received: from MW4PR04CA0259.namprd04.prod.outlook.com (2603:10b6:303:88::24)
 by CYXPR12MB9388.namprd12.prod.outlook.com (2603:10b6:930:e8::15) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.18; Fri, 25 Oct
 2024 21:03:12 +0000
Received: from CO1PEPF000044F6.namprd21.prod.outlook.com
 (2603:10b6:303:88:cafe::28) by MW4PR04CA0259.outlook.office365.com
 (2603:10b6:303:88::24) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.20 via Frontend
 Transport; Fri, 25 Oct 2024 21:03:12 +0000
X-MS-Exchange-Authentication-Results: spf=pass (sender IP is 165.204.84.17)
 smtp.mailfrom=amd.com; dkim=none (message not signed)
 header.d=none;dmarc=pass action=none header.from=amd.com;
Received-SPF: Pass (protection.outlook.com: domain of amd.com designates
 165.204.84.17 as permitted sender) receiver=protection.outlook.com;
 client-ip=165.204.84.17; helo=SATLEXMB04.amd.com; pr=C
Received: from SATLEXMB04.amd.com (165.204.84.17) by
 CO1PEPF000044F6.mail.protection.outlook.com (10.167.241.196) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.20.8137.0 via Frontend Transport; Fri, 25 Oct 2024 21:03:11 +0000
Received: from ethanolx7ea3host.amd.com (10.180.168.240) by SATLEXMB04.amd.com
 (10.181.40.145) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.39; Fri, 25 Oct
 2024 16:03:10 -0500
From: Terry Bowman <terry.bowman@amd.com>
To: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <jonathan.cameron@huawei.com>, <dave.jiang@intel.com>,
	<alison.schofield@intel.com>, <vishal.l.verma@intel.com>,
	<dan.j.williams@intel.com>, <bhelgaas@google.com>, <mahesh@linux.ibm.com>,
	<ira.weiny@intel.com>, <oohall@gmail.com>, <Benjamin.Cheatham@amd.com>,
	<rrichter@amd.com>, <nathan.fontenot@amd.com>, <terry.bowman@amd.com>,
	<Smita.KoralahalliChannabasappa@amd.com>
Subject: [PATCH v2 0/14] Enable CXL PCIe port protocol error handling and logging
Date: Fri, 25 Oct 2024 16:02:51 -0500
Message-ID: <20241025210305.27499-1-terry.bowman@amd.com>
X-Mailer: git-send-email 2.34.1
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-ClientProxiedBy: SATLEXMB04.amd.com (10.181.40.145) To SATLEXMB04.amd.com
 (10.181.40.145)
X-EOPAttributedMessage: 0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: CO1PEPF000044F6:EE_|CYXPR12MB9388:EE_
X-MS-Office365-Filtering-Correlation-Id: 219309c2-8588-4a62-f198-08dcf5386fad
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|7416014|376014|36860700013|82310400026|1800799024|921020;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?u7HRDmKjQkylT2eXcZl8cwqcIlb23scITAdF4T4OeATxTsXsPnAx9svyKbXY?=
 =?us-ascii?Q?0IFBmBvDEt2Z4vwFcNwaKF66gf3MgJL0zNTaorWH92Yhs+Uzh6vFphDYntoJ?=
 =?us-ascii?Q?EUOWXhEU0eFsmS1wCL45Y0bnyIOlGiKYJeYNedj2YHmsSaUHQY7Y0cZOUzo/?=
 =?us-ascii?Q?kKroAG2U/1Sn+iXiv9pnddDAURqr9kWFxjvu3Yn0UNUuFigT4NdQA1j2PIXW?=
 =?us-ascii?Q?JPGMR5f+8Dmh/xqfUL7bur/h9WqFmq2hnmy7nRaCld0rxyPRq2o9IMfHxfyh?=
 =?us-ascii?Q?OQHs6ry7y5rG97WQ6l+lNLFnoae83+vBvdxf8RjQDj/zEUNaVY7JygP5ux3X?=
 =?us-ascii?Q?sZdQDG+J1Mlc0Dl2CbqUftelIJl7bwvXa3ISIbiOUa6CwdA98gmlGoSp4fzk?=
 =?us-ascii?Q?hgxXUWr5t46MuP5PXigy2m1vioeH0qS6LzqNwtolvP7DXlyMDL1hyZZUVyZR?=
 =?us-ascii?Q?EjraV0o5b2+nwq6tG8H+eQxa4at/dhRLSSHqqS0MTKHnaann6HuHfIQ9rXNl?=
 =?us-ascii?Q?7bF+7v4e0RRqMBnQrztR2iNKAwKD8VlMbhHkkRSjMXBJNwRwW+DoejnWjCxF?=
 =?us-ascii?Q?48jgddAZt0foZal2pxtJ5UNG+XXufn5Wi6MC++DgtBJd+Mv/Qb2xAPIzDiR1?=
 =?us-ascii?Q?cH8oO7NRxvzuYqYh3jyRWF/6zXMzJH85tKl9+CWDWHjrc830xL7v4xQa8a3V?=
 =?us-ascii?Q?06FnPgtkLmn7rYkGCcyRTWUUiPJKEKDtvQByR4lqgV9ZbZE3afi1YQ/I3IfU?=
 =?us-ascii?Q?I/BJ9OsPFP4acMtyFrBhAZbWB5/7Spa/mZBPhEC00QRcDdJ5lqIiRkP92Yb9?=
 =?us-ascii?Q?we88CaZRsHgSNNVLby4BFFNLjuPgpC8Wc2FojS/a684lDDuAWBu2BiyoJfMv?=
 =?us-ascii?Q?mR7x2DivHdLM9FJkt7meRO4+XoznbJ7RJ3b+NFk1TfXaMPAN9+2OQqdq3pnE?=
 =?us-ascii?Q?xc21gZJ77UvVq7IFIPMZLZx/apecJJ6h1EkaoqdA9W9VjCEIVXSkBoyf93A2?=
 =?us-ascii?Q?OhR/XtRo8MenN1+HM2ofC3Jhqupt+E9PM+GAtUQJIq0CBQESeaPt71HYXfLE?=
 =?us-ascii?Q?vj1uVJYhN6hOUfm/rVYTU8BQjnS6l0JnK6ny4PmWLR30gQkUtB03KV3QM0ga?=
 =?us-ascii?Q?bmkN0fvtp8OaBmp2W3y25wyRo6WWA0cgY8K6GHNUsgrhEICzSDYZggWj74Wx?=
 =?us-ascii?Q?UoQ3rI4AAgB4njRCq/+d/Iuaud41KDi1LgBnSr0WhuqpTVDXxVEWHywPAgWO?=
 =?us-ascii?Q?M8ApdFBIl06CIxdR2jM9NpMsc61BnqdoNsN7midtoG8OimM8+WhRgSQCnns5?=
 =?us-ascii?Q?KdQZVyoqLsyenGIylDfbWIKogHwX8PUJfyoPAhuybKxK3/+y3BxRCmmdscwF?=
 =?us-ascii?Q?rD6hNjE88Q58d7LZLq0bUz2PuxUGxRG10CTFNqIMZLAdK0BOPA=3D=3D?=
X-Forefront-Antispam-Report: CIP:165.204.84.17;CTRY:;LANG:en;SCL:1;SRV:;IPV:CAL;SFV:NSPM;H:SATLEXMB04.amd.com;PTR:InfoDomainNonexistent;CAT:NONE;SFS:(13230040)(7416014)(376014)(36860700013)(82310400026)(1800799024)(921020);DIR:OUT;SFP:1101;
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 25 Oct 2024 21:03:11.8537
 (UTC)
X-MS-Exchange-CrossTenant-Network-Message-Id: 219309c2-8588-4a62-f198-08dcf5386fad
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-OriginalAttributedTenantConnectingIp: TenantId=3dd8961f-e488-4e60-8e11-a82d994e183d;Ip=[165.204.84.17];Helo=[SATLEXMB04.amd.com]
X-MS-Exchange-CrossTenant-AuthSource: CO1PEPF000044F6.namprd21.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Anonymous
X-MS-Exchange-CrossTenant-FromEntityHeader: HybridOnPrem
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CYXPR12MB9388

This is a continuation of the CXL port error handling RFC from earlier.[1]
The RFC resulted in the decision to add CXL PCIe port error handling to
the existing RCH downstream port handling in the AER service driver. This
patchset adds the CXL PCIe port protocol error handling and logging.

The first 7 patches update the existing AER service driver to support CXL
PCIe port protocol error handling and reporting. This includes AER service
driver changes for adding correctable and uncorrectable error support, CXL
specific recovery handling, and addition of CXL driver callback handlers.

The following 7 patches address CXL driver support for CXL PCIe port
protocol errors. This includes the following changes to the CXL drivers:
mapping CXL port and downstream port RAS registers, interface updates for
common restricted CXL host mode (RCH) and virtual hierarchy mode (VH),
adding port specific error handlers, and protocol error logging.

[1] - https://lore.kernel.org/linux-cxl/20240617200411.1426554-1-terry.bowman@amd.com/

Testing:

Below are test results for this patchset using Qemu with CXL root
port(0c:00.0), CXL upstream switchport(0d:00.0), CXL downstream
switchport(0e:00.0). A CXL endpoint(0f:00.0) CE and UCE logs are
also added to show the existing PCIe endpoint handling is not changed.

This was tested using aer-inject updated to support CE and UCE internal
error injection. CXL RAS was set using a test patch (not upstreamed but can
provide if needed).

 - Root port UCE:
 root@tbowman-cxl:~/aer-inject# ./root-uce-inject.sh
 pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
 pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
 pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
 pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/02000000
 pcieport 0000:0c:00.0:    [22] UncorrIntErr
 aer_event: 0000:0c:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
 cxl_port_aer_uncorrectable_error: device=0000:0c:00.0 host=pci0000:0c status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
 Kernel panic - not syncing: CXL cachemem error. Invoking panic
 CPU: 1 UID: 0 PID: 146 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
 Tainted: [E]=UNSIGNED_MODULE
 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
 Call Trace:
  <TASK>
  dump_stack_lvl+0x27/0x90
  dump_stack+0x10/0x20
  panic+0x33e/0x380
  cxl_do_recovery+0x116/0x120
  ? srso_return_thunk+0x5/0x5f
  aer_isr+0x3e0/0x710
  irq_thread_fn+0x28/0x70
  irq_thread+0x179/0x240
  ? srso_return_thunk+0x5/0x5f
  ? __pfx_irq_thread_fn+0x10/0x10
  ? __pfx_irq_thread_dtor+0x10/0x10
  ? __pfx_irq_thread+0x10/0x10
  kthread+0xf5/0x130
  ? __pfx_kthread+0x10/0x10
  ret_from_fork+0x3c/0x60
  ? __pfx_kthread+0x10/0x10
  ret_from_fork_asm+0x1a/0x30
  </TASK>
 Kernel Offset: 0x29000000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
 ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---

 - Root port CE:
 root@tbowman-cxl:~/aer-inject# ./root-c[  191.866259] systemd-journald[482]: Sent WATCHDOG=1 notification.
 e-inject.sh
 pcieport 0000:0c:00.0: aer_inject: Injecting errors 00004000/00000000 into device 0000:0c:00.0
 pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0c:00.0
 pcieport 0000:0c:00.0: CXL Bus Error: severity=Correctable, type=Transaction Layer, (Receiver ID)
 pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00004000/0000a000
 pcieport 0000:0c:00.0:    [14] CorrIntErr
 aer_event: 0000:0c:00.0 CXL Bus Error: severity=Corrected, Corrected Internal Error, TLP Header=Not available
 cxl_port_aer_correctable_error: device=0000:0c:00.0 host=pci0000:0c status='Received Error From Physical Layer'

 - Upstream switch port UCE:
 root@tbowman-cxl:~/aer-inject# ./us-uce-inject.sh
 pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0d:00.0
 pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0d:00.0
 pcieport 0000:0d:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
 pcieport 0000:0d:00.0:   device [19e5:a128] error status/mask=00400000/02000000
 pcieport 0000:0d:00.0:    [22] UncorrIntErr
 aer_event: 0000:0d:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
 cxl_port_aer_uncorrectable_error: device=0000:0d:00.0 host=0000:0c:00.0 status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
 Kernel panic - not syncing: CXL cachemem error. Invoking panic
 CPU: 1 UID: 0 PID: 148 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
 Tainted: [E]=UNSIGNED_MODULE
 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
 Call Trace:
  <TASK>
  dump_stack_lvl+0x27/0x90
  dump_stack+0x10/0x20
  panic+0x33e/0x380
  cxl_do_recovery+0x116/0x120
  ? srso_return_thunk+0x5/0x5f
  aer_isr+0x3e0/0x710
  ? free_cpumask_var+0x9/0x10
  ? kfree+0x259/0x2e0
  irq_thread_fn+0x28/0x70
  irq_thread+0x179/0x240
  ? srso_return_thunk+0x5/0x5f
  ? __pfx_irq_thread_fn+0x10/0x10
  ? __pfx_irq_thread_dtor+0x10/0x10
  ? __pfx_irq_thread+0x10/0x10
  kthread+0xf5/0x130
  ? __pfx_kthread+0x10/0x10
  ret_from_fork+0x3c/0x60
  ? __pfx_kthread+0x10/0x10
  ret_from_fork_asm+0x1a/0x30
  </TASK>
 Kernel Offset: 0x24c00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
 ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---

 - Upstream switch port CE:
 root@tbowman-cxl:~/aer-inject# ./us-ce-inject.sh
 pcieport 0000:0c:00.0: aer_inject: Injecting errors 00004000/00000000 into device 0000:0d:00.0
 pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0d:00.0
 pcieport 0000:0d:00.0: CXL Bus Error: severity=Correctable, type=Transaction Layer, (Receiver ID)
 pcieport 0000:0d:00.0:   device [19e5:a128] error status/mask=00004000/0000a000
 pcieport 0000:0d:00.0:    [14] CorrIntErr
 aer_event: 0000:0d:00.0 CXL Bus Error: severity=Corrected, Corrected Internal Error, TLP Header=Not available
 cxl_port_aer_correctable_error: device=0000:0d:00.0 host=0000:0c:00.0 status='Received Error From Physical Layer'

 - Downstream switch port UCE:
 root@tbowman-cxl:~/aer-inject# ./ds-uce-inject.sh
 pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0e:00.0
 pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0e:00.0
 pcieport 0000:0e:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
 pcieport 0000:0e:00.0:   device [19e5:a129] error status/mask=00400000/02000000
 pcieport 0000:0e:00.0:    [22] UncorrIntErr
 aer_event: 0000:0e:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
 cxl_port_aer_uncorrectable_error: device=0000:0e:00.0 host=0000:0d:00.0 status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
 Kernel panic - not syncing: CXL cachemem error. Invoking panic
 CPU: 1 UID: 0 PID: 147 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
 Tainted: [E]=UNSIGNED_MODULE
 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
 Call Trace:
  <TASK>
  dump_stack_lvl+0x27/0x90
  dump_stack+0x10/0x20
  panic+0x33e/0x380
  cxl_do_recovery+0x116/0x120
  ? srso_return_thunk+0x5/0x5f
  aer_isr+0x3e0/0x710
  irq_thread_fn+0x28/0x70
  irq_thread+0x179/0x240
  ? srso_return_thunk+0x5/0x5f
  ? __pfx_irq_thread_fn+0x10/0x10
  ? __pfx_irq_thread_dtor+0x10/0x10
  ? __pfx_irq_thread+0x10/0x10
  kthread+0xf5/0x130
  ? __pfx_kthread+0x10/0x10
  ret_from_fork+0x3c/0x60
  ? __pfx_kthread+0x10/0x10
  ret_from_fork_asm+0x1a/0x30
  </TASK>
 Kernel Offset: 0x19c00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
 ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---

 - Downstream switch port CE:
 root@tbowman-cxl:~/aer-inject# ./ds-ce-inject.sh
 pcieport 0000:0c:00.0: aer_inject: Injecting errors 00004000/00000000 into device 0000:0e:00.0
 pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0e:00.0
 pcieport 0000:0e:00.0: CXL Bus Error: severity=Correctable, type=Transaction Layer, (Receiver ID)
 pcieport 0000:0e:00.0:   device [19e5:a129] error status/mask=00004000/0000a000
 pcieport 0000:0e:00.0:    [14] CorrIntErr
 aer_event: 0000:0e:00.0 CXL Bus Error: severity=Corrected, Corrected Internal Error, TLP Header=Not available
 cxl_port_aer_correctable_error: device=0000:0e:00.0 host=0000:0d:00.0 status='Received Error From Physical Layer'

 - Endpoint CE
 root@tbowman-cxl:~/aer-inject# ./ep-ce-inject.sh
 pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000040/00000000 into device 0000:0f:00.0
 pcieport 0000:0c:00.0: AER: Correctable error message received from 0000:0f:00.0
 cxl_pci 0000:0f:00.0: CXL Bus Error: severity=Correctable, type=Data Link Layer, (Receiver ID)
 cxl_pci 0000:0f:00.0:   device [8086:0d93] error status/mask=00000040/0000e000
 cxl_pci 0000:0f:00.0:    [ 6] BadTLP
 aer_event: 0000:0f:00.0 CXL Bus Error: severity=Corrected, Bad TLP, TLP Header=Not available
 cxl_aer_correctable_error: memdev=mem1 host=0000:0f:00.0 serial=0: status: 'Received Error From Physical Layer'

 - Endpoint UCE
 root@tbowman-cxl:~/aer-inject# ./ep-uce-inject.sh
 pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00040000 into device 0000:0f:00.0
 pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0f:00.0
 cxl_pci 0000:0f:00.0: AER: CXL Bus Error: severity=Uncorrectable (Fatal), type=Inaccessible, (Unregistered Agent ID)
 aer_event: 0000:0f:00.0 CXL Bus Error: severity=Fatal, , TLP Header=Not available
 cxl_aer_uncorrectable_error: memdev=mem1 host=0000:0f:00.0 serial=0: status: 'Memory Byte Enable Parity Error' firs'
 cxl_pci 0000:0f:00.0: mem1: frozen state error detected, disable CXL.mem
 cxl_detach_ep: cxl_mem mem1: disconnect mem1 from port2
 cxl_detach_ep: cxl_mem mem1: disconnect mem1 from port1
 pcieport 0000:0e:00.0: unlocked secondary bus reset via: pciehp_reset_slot+0xac/0x160
 pcieport 0000:0e:00.0: AER: Downstream Port link has been reset (0)
 cxl_pci 0000:0f:00.0: mem1: restart CXL.mem after slot reset
 devm_cxl_enumerate_ports: cxl_mem mem1: scan: iter: mem1 dport_dev: 0000:0e:00.0 parent: 0000:0d:00.0
 devm_cxl_enumerate_ports: cxl_mem mem1: found already registered port port2:0000:0d:00.0
 devm_cxl_enumerate_ports: cxl_mem mem1: scan: iter: 0000:0e:00.0 dport_dev: 0000:0c:00.0 parent: pci0000:0c
 devm_cxl_enumerate_ports: cxl_mem mem1: found already registered port port1:pci0000:0c
 __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4500
 cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
 __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4500
 cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
 __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
 cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
 __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
 cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
 <snip>
 cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
 __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
 cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
 __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
 cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
 __cxl_pci_mbox_send_cmd: cxl_pci 0000:0f:00.0: Sending command: 0x4102
 cxl_pci_mbox_wait_for_doorbell: cxl_pci 0000:0f:00.0: Doorbell wait took 0ms
 cxl_bus_probe: cxl_nvdimm pmem1: probe: 0
 devm_cxl_add_nvdimm: cxl_mem mem1: register pmem1
 pcieport 0000:0e:00.0: RAS is already mapped
 cxl_port port2: RAS is already mapped
 pcieport 0000:0c:00.0: RAS is already mapped
 cxl_port_alloc: cxl_mem mem1: host-bridge: pci0000:0c
 cxl_cdat_get_length: cxl_port endpoint4: CDAT length 160
 cxl_port_perf_data_calculate: cxl_port endpoint4: Failed to retrieve ep perf coordinates.
 cxl_endpoint_parse_cdat: cxl_port endpoint4: Failed to do perf coord calculations.
 init_hdm_decoder: cxl_port endpoint4: decoder4.0: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
 add_hdm_decoder: cxl decoder4.0: Added to port endpoint4
 init_hdm_decoder: cxl_port endpoint4: decoder4.1: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
 add_hdm_decoder: cxl decoder4.1: Added to port endpoint4
 init_hdm_decoder: cxl_port endpoint4: decoder4.2: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
 add_hdm_decoder: cxl decoder4.2: Added to port endpoint4
 init_hdm_decoder: cxl_port endpoint4: decoder4.3: range: 0x0-0xffffffffffffffff iw: 1 ig: 256
 add_hdm_decoder: cxl decoder4.3: Added to port endpoint4
 cxl_bus_probe: cxl_port endpoint4: probe: 0
 devm_cxl_add_port: cxl_mem mem1: endpoint4 added to port2
 cxl_bus_probe: cxl_mem mem1: probe: 0
 cxl_pci 0000:0f:00.0: mem1: error resume successful
 pcieport 0000:0e:00.0: AER: device recovery successful

 Changes in v1 -> v2
 [Jonathan] Remove extra NULL check and cleanup in cxl_pci_port_ras()
 [Jonathan] Update description to DSP map patch description
 [Jonathan] Update cxl_pci_port_ras() to check for NULL port
 [Jonathan] Dont call handler before handler port changes are present (patch order).
 [Bjorn] Fix linebreak in cover sheet URL
 [Bjorn] Remove timestamps from test logs in cover sheet
 [Bjorn] Retitle AER commits to use "PCI/AER:"
 [Bjorn] Retitle patch#3 to use renaming instead of refactoring
 [Bjorn] Fixe base commit-id on cover sheet
 [Bjorn] Add VH spec reference/citation
 [Terry] Removed last 2 patches to enable internal errors. Is not needed
 because internal errors are enabled in AER driver.
 [Dan] Create cxl_do_recovery() and pci_driver::cxl_err_handlers.
 [Dan] Use kernel panic in CXL recovery
 [Dan] cxl_port_hndlrs -> cxl_port_error_handlers
 [Dan] Move cxl_port_error_handlers to pci_driver. Remove module (un)registration.
 [Terry] Add patch w/ qcxl_assign_port_error_handlers() and cxl_clear_port_error_handlers()
 [Terry] Removed PCI_ERS_RESULT_PANIC patch. Is no longer needed because the result type parameter
 is not used in the CXL_err_handlers callabcks.

Changes in RFC -> v1:
 [Dan] Rename cxl_rch_handle_error() becomes cxl_handle_error()
 [Dan] Add cxl_do_recovery()
 [Jonathan] Flatten cxl_setup_parent_uport()
 [Jonathan] Use cxl_component_regs instead of struct cxl_regs regs
 [Jonathan] Rename cxl_dev_is_pci_type()
 [Ming] bus_find_device(&cxl_bus_type, NULL, &pdev->dev, match_uport) can
 replace these find_cxl_port() and device_find_child().
 [Jonathan] Compact call to cxl_port_map_regs() in cxl_setup_parent_uport()
 [Ming] Dont use endpoint as host to cxl_map_component_regs()
 [Bjorn] Use "PCIe UIR/CIE" instesad of "AER UI/CIE"
 [Bjorn] Dont use Kconfig to enable/disable a CXL external interface

Terry Bowman (14):
  PCI/AER: Introduce 'struct cxl_err_handlers' and add to 'struct
    pci_driver'
  PCI/AER: Rename AER driver's interfaces to also indicate CXL PCIe port
    support
  cxl/pci: Introduce helper functions pcie_is_cxl() and
    pcie_is_cxl_port()
  PCI/AER: Modify AER driver logging to report CXL or PCIe bus error
    type
  PCI/AER: Add CXL PCIe port correctable error support in AER service
    driver
  PCI/AER: Change AER driver to read UCE fatal status for all CXL PCIe
    port devices
  PCI/AER: Add CXL PCIe port uncorrectable error recovery in AER service
    driver
  cxl/pci: Change find_cxl_ports() to non-static
  cxl/pci: Map CXL PCIe root port and downstream switch port RAS
    registers
  cxl/pci: Map CXL PCIe upstream switch port RAS registers
  cxl/pci: Rename RAS handler interfaces to also indicate CXL PCIe port
    support
  cxl/pci: Add error handler for CXL PCIe port RAS errors
  cxl/pci: Add trace logging for CXL PCIe port RAS errors
  cxl/pci: Add support to assign and clear pci_driver::cxl_err_handlers

 drivers/cxl/core/core.h       |   3 +
 drivers/cxl/core/pci.c        | 180 +++++++++++++++++++++++++++-------
 drivers/cxl/core/port.c       |   4 +-
 drivers/cxl/core/trace.h      |  47 +++++++++
 drivers/cxl/cxl.h             |  10 +-
 drivers/cxl/mem.c             |  29 +++++-
 drivers/pci/pci.c             |  14 +++
 drivers/pci/pci.h             |   3 +
 drivers/pci/pcie/aer.c        |  99 ++++++++++++-------
 drivers/pci/pcie/err.c        |  54 ++++++++++
 drivers/pci/probe.c           |  10 ++
 include/linux/pci.h           |  13 +++
 include/ras/ras_event.h       |   9 +-
 include/uapi/linux/pci_regs.h |   3 +-
 14 files changed, 396 insertions(+), 82 deletions(-)


base-commit: 739a5da7ed744578a9477fb322f04afecafca6b0
-- 
2.34.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [198.175.65.10])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B130318E04E;
	Mon,  4 Nov 2024 21:50:22 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=198.175.65.10
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730757025; cv=fail; b=gVoKcVqQsV00eGAnXNS/idh1l99exhdw/ud4VJAbK4L5HHeepBC85wYASih5uERZeZhsMnPgA17J+gv76fNWOuIi83EA58xvYIWQU+7rxMty8uIsFzuC3LCE11JTGf25+TRfHDPJUlzWsLpsg88erJF9Qf2JxIUmN4J+WbQdxwk=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730757025; c=relaxed/simple;
	bh=jmMqO9MvMPfZ8kIggObDdwiNwR50JXyLevJ+gUugEMY=;
	h=Date:From:To:CC:Subject:Message-ID:References:Content-Type:
	 Content-Disposition:In-Reply-To:MIME-Version; b=gar2MK1TBXpzxDAvZJyDWevP7rKlPUV3ujSafYhrTlmGtOs/Bikl6vm7/do4NEUIwu92NbQ2AJisOUHCScFj75MEz02St4lL2vc7eDXarl4M0SkT5jifl4jUifrZMhH0Fo2gOXtcQrYdBUTIkT5fHXUl7CSFPr48zm9Fk9osg1c=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=IfuqUMU7; arc=fail smtp.client-ip=198.175.65.10
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="IfuqUMU7"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1730757023; x=1762293023;
  h=date:from:to:cc:subject:message-id:references:
   in-reply-to:mime-version;
  bh=jmMqO9MvMPfZ8kIggObDdwiNwR50JXyLevJ+gUugEMY=;
  b=IfuqUMU7PG4+IxF/UE4lMof2Dfr7yvrJ7l+vXfacz/RRlHzanIKzCLqy
   J1G2t9441PlI8MBFUPtTeL+rsslN98lrDxLgdbw2H0T+vtNlmDWmbpFnr
   DURON7L83l50mUUd6OOD6j9bRz4u1hYbwL4DhzKwaMKLlDIVnQ9G4N3p2
   0lk4GU3oTdtIhu5mInhZL1+3jodKsO4cMlCG2h5nXDP0B3mA5qUin1y7U
   VkKYy/mu7t+Xf3i2jIPPOJLVKIMu7D3F9RCI/kJ7juhVDRwjOVwpTQixN
   z6Hv5UVz4tU3t1agdmrOKfmwdPgZStfqUZpaux65Y/iFsPZCbELCQYybc
   g==;
X-CSE-ConnectionGUID: /BXiFRlvQYuEzYF6jwdK9w==
X-CSE-MsgGUID: vcMNsMnsTDOXCn1Qsy7Fgw==
X-IronPort-AV: E=McAfee;i="6700,10204,11222"; a="47942738"
X-IronPort-AV: E=Sophos;i="6.11,199,1725346800"; 
   d="scan'208";a="47942738"
Received: from orviesa006.jf.intel.com ([10.64.159.146])
  by orvoesa102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 04 Nov 2024 13:50:22 -0800
X-CSE-ConnectionGUID: j8bqeUZfTeqnpVZrfUCH0A==
X-CSE-MsgGUID: /2n1gjogRWeK2lG5nKBGsw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.11,258,1725346800"; 
   d="scan'208";a="83900979"
Received: from orsmsx603.amr.corp.intel.com ([10.22.229.16])
  by orviesa006.jf.intel.com with ESMTP/TLS/AES256-GCM-SHA384; 04 Nov 2024 13:50:22 -0800
Received: from orsmsx601.amr.corp.intel.com (10.22.229.14) by
 ORSMSX603.amr.corp.intel.com (10.22.229.16) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39; Mon, 4 Nov 2024 13:50:21 -0800
Received: from orsedg603.ED.cps.intel.com (10.7.248.4) by
 orsmsx601.amr.corp.intel.com (10.22.229.14) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.39 via Frontend Transport; Mon, 4 Nov 2024 13:50:21 -0800
Received: from NAM10-BN7-obe.outbound.protection.outlook.com (104.47.70.47) by
 edgegateway.intel.com (134.134.137.100) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.39; Mon, 4 Nov 2024 13:50:21 -0800
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=AFBENX9KIgJvv2hoY2W+pqEkH+VLeuBnufpeEKnE4aybNsvrDVZMtpEDmSZBJD7SApmAEx+xJQuak7if81V8nHuy8it6m5EdRvM3mWZ8Abmr/kQ9ftX0FeJZDLVATmdY75X1feBy0UcGqGAuO4pP6Vp4IEJAPVt0JORoXnGQlSgvbh7ekLaglfFiPDyj3UG2cTBiQnErPBQVyPIOGDASTGLW5BaXlpP5iXzEM8h2vVmmbIS5O9Bx2alOllnVgg/mp0WPqPvOohk44jr+90gyl14q9q81Qkb96o/kzlsZqMUOvKwifJPEt8Dx7gKL3eTokArR//ljlLrNqrL2AJa/Gg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=02imvvOhNjnDgY0c/F5ljAY09Ib6vOVmGjfCnGM5a3c=;
 b=WvBVR0jvHj5G8BltMte/p6oKl/Mbm8BRTkMpoXCmSGFmLmLCuwDip35A9bvnX8NEsGS+IGCaVpNgm/Wg/+vbuK1tHmQdrEX4RJMa3ookA14jiX5FV+Kr2OnyG+3ImaivzF214ZKW1IiPq100lJyCZNpoPNft27PGivFRvDxQCtSfibPdBmldGisw3N5KoNwDI9huw1mREU0BRhDKlj0hC03Z3xXCL/OLjGpc+y7ROvlHdGOeCYZ7o6+AHMb1J6OUoamc6kKtqb9BjCPdX/2oF/BKDJFk9tDieJp89wRIF62bBp6GGmJ/dOA/VM9L5K2QgSm+I3h4aq3DAQOdGjp8Aw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by CY5PR11MB6462.namprd11.prod.outlook.com (2603:10b6:930:32::10) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8114.30; Mon, 4 Nov
 2024 21:50:13 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::6b05:74cf:a304:ecd8%5]) with mapi id 15.20.8114.028; Mon, 4 Nov 2024
 21:50:13 +0000
Date: Mon, 4 Nov 2024 13:50:10 -0800
From: Dan Williams <dan.j.williams@intel.com>
To: Jonathan Cameron <Jonathan.Cameron@huawei.com>, Terry Bowman
	<terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 05/14] PCI/AER: Add CXL PCIe port correctable error
 support in AER service driver
Message-ID: <672941925f59d_2ce729465@dwillia2-xfh.jf.intel.com.notmuch>
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-6-terry.bowman@amd.com>
 <20241030151308.000005d5@Huawei.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <20241030151308.000005d5@Huawei.com>
X-ClientProxiedBy: MW4P223CA0008.NAMP223.PROD.OUTLOOK.COM
 (2603:10b6:303:80::13) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|CY5PR11MB6462:EE_
X-MS-Office365-Filtering-Correlation-Id: 623e305c-5b77-45b2-ce82-08dcfd1aa97b
X-LD-Processed: 46c98d88-e344-4ed4-8496-4ed7712e255d,ExtAddr
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|7416014|1800799024|376014|366016;
X-Microsoft-Antispam-Message-Info: =?us-ascii?Q?qL9j0s2wFAavU2vZZ4U+/QYTZTdlrzWM0OgiwYxse9Lk5hI0/fSEfu1lw4hk?=
 =?us-ascii?Q?NZTJRcZXTT0DkcGnuVyTVIobz+pVl2u/EpD2iLKusJj0yCCasC4DTPykyl8k?=
 =?us-ascii?Q?Ezc6uJygHQQkVMnnCEIh1M4saP0OdB9LDn/sWN22avuORRbDcb38jfUOrzWs?=
 =?us-ascii?Q?rqjPY8nBbtrxZjASIWOdl1vwcGn6C0K+F7AT2KomywGcv1VYqleAR9/eRCFq?=
 =?us-ascii?Q?rUooV3p/AX+UVzRTCBpZn6YDhAdYHD7yEcvkVJeuJYMJqqEHPHcOXsRd9pVB?=
 =?us-ascii?Q?y/4Ma4aVdS2zedjSMoQGCGIjOLG1r3pa2I3CIewJ/7Dk3cfX12tzjqQjQ05y?=
 =?us-ascii?Q?AFhiQzMnLT0wpHZd67PwspjPLFdM25ftojN2i9hJgu3FGO1hIGAVBI/iaGW+?=
 =?us-ascii?Q?7D9kKV8N5TUR08nH08DwW4Yhz+HXkxDQ7dDqj57A7x3wNkH1YxFYq/p37zx9?=
 =?us-ascii?Q?n6HcwuPIq8qcIcSOETqClgdEGWVGVDbK+sZsYEbgi9hxj4VY77Rh0Qz6Vkg9?=
 =?us-ascii?Q?RA5tlWgDnvQga3w+35nDR8c+WLazgZal/57J9KBBY8zqDjTDJ0ndyUo9/ei8?=
 =?us-ascii?Q?fnh3DLEZF/ByP9xvEv87jUAwGTNUBEPt7naAsFdRwt6BQBlSf3NE9ewQceKX?=
 =?us-ascii?Q?4QzLhSIVMhKgAjS4/Hh+vayT/Mq5nG74E3LxnGPrbXn/vlYQctZXKtPjBQ+p?=
 =?us-ascii?Q?uy/tN0xczOOrVcaj+Pb5rpg11OFXJeQkbtud/B6m5HUeXGpxkHl6SCvcoxFC?=
 =?us-ascii?Q?OM0c+kKszVMJDcHAaJpbcbYDAjKWZwwtsQ4ZEo40vlZq49TWpsXf69mEhe82?=
 =?us-ascii?Q?r5VupKulxCJO9AF0NTfc1dScQFL4vqVXfH/+5nAT/I2RnKvvMD21pmDeP18N?=
 =?us-ascii?Q?D0U+6evaVpOHNUHgJ+8vo8Ky+mWbBKLtiO3TlLoha+IUjbXx7z+zdoAQIDbh?=
 =?us-ascii?Q?glpjsRjeqjqxgNaocl4FpyYCuRRb6+FCNDbCYj+qnwTdeWSE8IhvlIBUuM0g?=
 =?us-ascii?Q?DytRh7yi46qY9zIS81u36SfZ6OGBvztTnzzzJCRdrZN9d3U8vvDNucck8ZSX?=
 =?us-ascii?Q?6qErOxicm2+Seo0uhjMd7ZB4FPeLsm5n81bxwrtzhQuC3Ht1o++CtHmZJiA6?=
 =?us-ascii?Q?/+vDALUm59+XeOvP277s76ZfIapY9PRNktqcrWISRJkrfjgJdSvXMDWTBJJH?=
 =?us-ascii?Q?kxyQtq9KVhNIQiPZNDQaWtnLP/r3KHui6o+85j8t1+1gPp0Q6lUxEKuyuvdA?=
 =?us-ascii?Q?u77ggnHJiACbgqk7DG/jv7dJIV91Q2sML1agjmj6K2CcG966OOgwmxLBVCYH?=
 =?us-ascii?Q?0qCtazjj9Jd0r6XaEPe3hUSi?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(7416014)(1800799024)(376014)(366016);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?2lv9C/KsQlroQaE64gvgJq53CQBKygMV4dEF6T5U/6nwO4sQ/LEffVgBgqs9?=
 =?us-ascii?Q?0g/G7ZHuVoAhN8BG9qwouYZDN7H8ukWUem12LE9BIb8GAB3aZMYYZB1+qJB3?=
 =?us-ascii?Q?8EDVpyKQRSMtQNEVJbwLvQzMxbE8P5HCFS/+NyHmn6NgFIuc9bCpw/1GFZd/?=
 =?us-ascii?Q?GrpmKZf4xl0S5x9sp97JXJM1/rmkP4o7YMIScxf0QzVtbw+LqL6/MZQ+GCba?=
 =?us-ascii?Q?2yrqbNemkY6xr9cREJT8ROad2y3/pBtYWO0yEly7sYOo8Oll7Wm20LmIiRD7?=
 =?us-ascii?Q?D4zOkwzx3A+WMtB6SG0AUgI9ZlQer/F979aewff2+j3vB4SpDrRZQDAhhwm+?=
 =?us-ascii?Q?FKLvvpX3rrcZuoUicPMkO12oDMhwGxHWTT8Z5r6wXcQlBj+CJ0vE9BFkONlS?=
 =?us-ascii?Q?xql4zq4odmpjCtPR1UCshqijfnAuSp5wz+85QxFCqhLYnLOcf1j0DdIndJRc?=
 =?us-ascii?Q?9kfBjZbs3hNSzk0/L1/DUeBUiff8E554+ADAMiQ2tPtMj1sD2rpK9X12Hehl?=
 =?us-ascii?Q?FAg/IODdhzB1VCuWikdunM3Ld1icv2Jzi8Y8ve3KnM0w9cv/UzVZ6yoyFBAz?=
 =?us-ascii?Q?NuxI5Aogh3J0AJXGHbrlMvqcaEfiUho+LNGMH4P4DIn4wfhfwdJS3Xb52NPn?=
 =?us-ascii?Q?Oj6D/NwRcg2uKq/gR/y3JP0nfF3BUMfslEbF/ViKBg13w61+EMzSJkVGXwil?=
 =?us-ascii?Q?TwmyZNgwk6O5/tdtLwJ0pgdkMOsL51ZqTw8h+8yTRjsN70mnIn6AkxOci2oB?=
 =?us-ascii?Q?nGpCSrKsRN7ff0aD1EhCa8KNZBBBl2hAPnvq3wd1CzWw+18dUqxf51gt65ad?=
 =?us-ascii?Q?Nci6P0XnAiDlWCrucxCdm32eN0ZwfQ52H9heNFjeWMulehLAwYV8OUaIKof+?=
 =?us-ascii?Q?Q/7VI2bdcA87Lwu11iCkctGnKXDPdV1rtUqkEY1t+qBoUfBMMwcuVb3kpboE?=
 =?us-ascii?Q?8L7+M4Adp0J/NsRU8G2+G8equKjOweadikpHPU7ztn62TjrGz2XNfzuhv628?=
 =?us-ascii?Q?/gosmXuT6hBi91zUNqzzkTFBlTyYRn2UaB43T70opD89gV81m42bi1iW+jdp?=
 =?us-ascii?Q?w4EjE7eQSGfeaVJuk+f/KOWFOvB5WKr1/GGqkuWtnZtOmNa8/ol65dFu/jbR?=
 =?us-ascii?Q?6fcgP2w8jKV745rMjJoQivqmLi7hqZ/lSMdRgeAtvemAhSVrRSdaggwJEDCI?=
 =?us-ascii?Q?Tl/qCkJKgWKnDr/O6x6DcNggAM25CMo5ijyD1H+Q8qDAwDMUpztcSng29cei?=
 =?us-ascii?Q?eHo4O/42DYpQPMKdExOlmh6jBaBE9306JNRgnxol7GcF0KX6dDkxTwxwBFtM?=
 =?us-ascii?Q?URpsRfwQT1b2Ek9k924pXinLuFxQjn9gIAPKDCiNraS2MyroXfGykZrB8wjR?=
 =?us-ascii?Q?AIp/W3YMQGfgPKmopQRt8asRTfyJP+xPAXsh7Mwc0JBzeRJP/nFaZPCmPRNq?=
 =?us-ascii?Q?xsPjMGWzCJdE4m2EfMkMjda6bovSUGIE1GkmRHDJgvVUnzAb8/Dgaavd1g0l?=
 =?us-ascii?Q?VPPjH737pY6fuXil96iX7i7JUOvoUgTOGn9hkvvjGz5KNGN6DQcJ8GGmNxMS?=
 =?us-ascii?Q?Xgi2HaHDxtrNe2SRdRnOY4Um8TxR/y+JLNS4Dw/3smTA10DoIVYdm6t6vQr9?=
 =?us-ascii?Q?iw=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 623e305c-5b77-45b2-ce82-08dcfd1aa97b
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 04 Nov 2024 21:50:13.5741
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: oYepApQebIiTmVJGeGCTPbd5yhI4HgTEo0bRWaS6wNsHws00bSDiq5tvKTSOhFE8xTagN9OojQ8avGTeKGenaKUrVTgl9RwdKDfTgF6629w=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY5PR11MB6462
X-OriginatorOrg: intel.com

Jonathan Cameron wrote:
> On Fri, 25 Oct 2024 16:02:56 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
[..]
> Anyhow, I think it is fine but I would call out that this changes
> things so that the PCI error handlers are no longer called for CXL ports
> if it's an internal error.
> 
> With a sentence on that:
> 
> Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
> 
> I'm not 100% convinced the path of separate handlers is the way to go
> but we can always change things again if that doesn't work out.

Hmm, if that part is not clear there should at least be more
documentation as to the "why". For me it is the fact that CXL
potentially promotes endpoint errors to region scope recovery actions,
and that PCIe native AER has no concept of AER triggering unrecoverable
system fatal reponse.

To date panic on AER error has only been logic that ACPI APEI can
deploy, and the kernel has no chance to evaluate the error. So, CXL
error handlers is a reflection that these errors are outside of the PCIe
AER error model.

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-BN1-obe.outbound.protection.outlook.com (mail-bn1nam02on2074.outbound.protection.outlook.com [40.107.212.74])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id BB9B51CDA1E;
	Fri,  1 Nov 2024 18:28:19 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.212.74
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730485702; cv=fail; b=dF+zMHYYorGhBCvziey+kAHIay4oNUo/vYCbpESrloI6OTY2tps/NnIM49zx6e66p6qq04ZFHVQffzgZLFHcmnnBvkVE8fg+vE5m2CYb+iGI1RRl0itn3ZhzT91XBHd6Zy+hhx/Uhj7+DbqJRBwEeMdmICGFh55HLsJcfEcbMqA=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730485702; c=relaxed/simple;
	bh=mHdDrOkYxsLgnPmMxbl9BsKAhJ6A1j6Xf30+LGWXKcI=;
	h=Content-Type:Message-ID:Date:Subject:To:Cc:References:From:
	 In-Reply-To:MIME-Version; b=Y/kpa8NyvMW1bin2K6jMQZsJLlK9HFy2VyalarwC0h4qDXp7dwfOx4y9HLLoRJnUxnECOp6utHxZe9u39MMp1n/iXL5u7mMDXMQka8hbW5gJ8rS+BKvKfAKRAXKH06b5wYZZLqfF6ayB9K9ydC0XnSCiVjK0nmjztvAIIOKQewA=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=YAul7Q+d; arc=fail smtp.client-ip=40.107.212.74
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="YAul7Q+d"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=aENalO4h+jUw0WyKQsvBxrU4DQKISeSi0zDHgmdgPG0zRxFq4y17eAkdukF98G0AsbyWsAEGJm1b8Bwp08HDeUGF+97bC5332XAjn3IkQCAshDPExF1LPuQ2WSr7DKlZoFTcp6LvBqg6tHNcNRukQVzgucP9xUDdewPLK4IrhVrGoGGOcmW5KVM8x6HmoUAQliD7HLLHtbfkYBeoh7DNkzJqk4FwEc01qrgtdT106oQeb9EVMKCZwfRHvA8uzBmGOYhldhPXiULKqduycZRbys0ZmTeDxqzasX+VxqY/QNT68MdM6rRaBA2Ebfvd9PUucwXxp2euKWyYnoT+je2F7g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=vaGW2EnLSP+H6/exQqp7QRJp3r6k5+TwADMmHnWrXNE=;
 b=nFDPdtrUADmu3DjJlVnXTS2YgqiyfMQv4m34HfA3GzYLWsS6MjsyUq3uN4+SUyoIqLwmb+ZocGKhFeVd1NzJ899TBNoJWjIYzFdY8nYe9mE8Y5xfQxT7Uebh3uYMyqDptwRvuu5kl8wCI1a4hLgu1IT/D0Q+5Xn8hJNfOBqBk7LtQVszGqiaSksRfGN46o3vp8Qr2dnn4G7d3h8jKTC6ARqhK4CWxdb66vcYl/6AZsIOfNk5DJhZu39DPGvbo/QtyRK/Pj4jRWaJscKdIaft2SJUGhWQqM0/DcwTXVOR30Xcm/H93QIC2OJrS0RQpVaj6H3Qs/14A5bHYKTSLxfleA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=vaGW2EnLSP+H6/exQqp7QRJp3r6k5+TwADMmHnWrXNE=;
 b=YAul7Q+dtgcCzpbGDCxFMM991gyoqOPC0fWhXPTqovzacqqK8ovR02GU0m9vbL4THTyk5T90XLIy4SSb48wz8xwQh0qiP4HiMq82e9Ky8T8fReUKu15nHIQEps8tcVhDnHqKWvUNXTbmqlXb1zjL8B/fqdF3aIIB2ohpodH/miM=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 CY8PR12MB7731.namprd12.prod.outlook.com (2603:10b6:930:86::16) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.8093.32; Fri, 1 Nov 2024 18:28:15 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%3]) with mapi id 15.20.8114.015; Fri, 1 Nov 2024
 18:28:15 +0000
Content-Type: multipart/mixed; boundary="------------ZCqoTved48uVI4k8I9sY9cO9"
Message-ID: <8a73bfa1-b916-4f0a-92be-0cb677e1e334@amd.com>
Date: Fri, 1 Nov 2024 13:28:12 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 0/14] Enable CXL PCIe port protocol error handling and
 logging
To: Fan Ni <nifan.cxl@gmail.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, dave@stgolabs.net,
 jonathan.cameron@huawei.com, dave.jiang@intel.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <ZyUXLpQBBgTl733z@fan>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <ZyUXLpQBBgTl733z@fan>
X-ClientProxiedBy: SA0PR11CA0138.namprd11.prod.outlook.com
 (2603:10b6:806:131::23) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|CY8PR12MB7731:EE_
X-MS-Office365-Filtering-Correlation-Id: 4d9e1b02-c758-4cb2-4c7c-08dcfaa2f319
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|7416014|366016|376014|1800799024;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?M1pyZkNJL0RYSDh6cm5CNTF0MGNiVzV5T3ZRcHdCZ2ZMcGxhTlc1UWNXK0Vk?=
 =?utf-8?B?WmFxLzdqOGJsa0VUVlV3eFMzVnd5Z3pKK1RrNnRjWThsd0VXZlhhWDBrODVl?=
 =?utf-8?B?UkRZVFdaaENNMWtSN294bHQxSXFlQTJZTGtJQXlNSmw0YVBBN3VrM3J1dTll?=
 =?utf-8?B?MWgzaXV5dnpIaFlMVWk4Mkc5TjZyckYzVWducStKenMzR3dJNENQMkxZTURR?=
 =?utf-8?B?ZFVwNjVYc295UjhRc2NhSUU1ZzFDbW5DNTlrdnBYMk9yLzBYU0h5STV3OEdL?=
 =?utf-8?B?UmZ5MGhCUXpTQ0FOdDNkUkgwUXRSZVlrTlFsM2F5NkdqVjFqY0tRbFlyOVR0?=
 =?utf-8?B?OVErVmpYTkRVYTVualBRNWkrc0pTMEYxMUZTTUYvT09VSEUwNnpOcFJmTXR0?=
 =?utf-8?B?dktCOENxWUZVeWZzSFBURzRhTTBQU1pZS2lEYUxKQnhVR2lmZVh2d3FzKzZa?=
 =?utf-8?B?bmE1azdVbHI1MkI5ZEFqUEdZTW8zNHpVLzJsUWRwU0dpNWorY052RzJsOHA2?=
 =?utf-8?B?UmJaMmhlZzBMZENhRm50NVo4SVdRQks3VlJ4djNZQWZuc2FxcFpjbXdEelkw?=
 =?utf-8?B?bko3ZnplTVg4bEdmVHpJOVBNNkVqSjJLWll0WDhCSjBSZ1dlNGtWWFpOYUFj?=
 =?utf-8?B?c25CZFM4b1JEc24wM3F3ZHh1Z1JTWlppalkzS3ljYXM4RzMyUXJnV1BXSm4w?=
 =?utf-8?B?bEtkLzZQR0N3SVNjVXdvdGpWVmdYVEdlYUYzY2dMeXI2N0U3TE41Wk02Nk9Q?=
 =?utf-8?B?OTdyaUI2alZjZndUdllGK1I2OUcyUlc1UFc4Qkg5Ni9DZFZaVVFZNFNPK09H?=
 =?utf-8?B?TTBjSGd3L0JZNS9KQzVwbzRWeTQ2RlRsKzMwdlgvVHhWUDNyRjdJWXN1Yk5l?=
 =?utf-8?B?V3prT0tIVlduMGtMZDRhV0ZCd2lYRi82dWJnVklpN2lhRjRvc3RwMkFpNFd5?=
 =?utf-8?B?anRwNlZjdjRlMjJsUW4rYTZqdHB5YlYzdWdIajUxb2E0blBsQ2xydnkvNkhk?=
 =?utf-8?B?Qll2OURnQjlWQ3FlcWtRcURLMkc3dno0RGs2NEJteGdYSGo3NjNxd01xaktp?=
 =?utf-8?B?bUdvT0N6aW5Yc01PSGR5aEwzRkRtbWpUbTNPRmRVMzNPeHhHT0tZdnNtMURj?=
 =?utf-8?B?LzM1WmdhelUvMi9sVDhQbzVSdlRKMXhuWFFGRy9DUmxDbUo0a2ozZElEaTlI?=
 =?utf-8?B?dkZ5WU96V29XdWpKREZROWU1bGNtbVU2WjE3cVFGWDU4YkNQSUpIQldiWTlu?=
 =?utf-8?B?S3NlalFrVkQ5VHE3TzVZdEVKd1BWK0lKUVFTTEZPbjhWNFpibW4vanMvZ0NO?=
 =?utf-8?B?OXhGVUtYR0pHYmZEV2l5cEUxUDhMei8xemVlUkZ5RVljeC9xa0xzRm1naVhk?=
 =?utf-8?B?RDNZK2VqbGE0VnE5K0RsRndXc2ZNRU8vZUQvN3owUzJteTRSWC9Hb0ZTa09k?=
 =?utf-8?B?Y0M1cGxuaGhhTG9IU3NtbW5zN0VhWEhpa2ZQdXh1MFBkcGYvVjdrLzlJTjZp?=
 =?utf-8?B?YUpTakwxSEQ0TWpHVTVNaXpBVG42VFk2ckRkRVVjdGR4aU1sNDZlYTk4QnBE?=
 =?utf-8?B?M3FhN1l4RHFlVi9aUldHWWh0RE5vVkxnQ3FyNG5oZ0RSeTBQUFNpWkJHaHYz?=
 =?utf-8?B?YlhyWjM4TndoYzNRckZPc29YSldCNWlIRDZOK28vZTgzNVdlSGE0dWJwSmNQ?=
 =?utf-8?Q?itpNQxr1J8MVmV7nOlC7?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(7416014)(366016)(376014)(1800799024);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?aVhJYU1DT296MHRyQVVJTDFKY0dEWC92ZDZpUEI4NjhndlpMZ0VLM0RucTJX?=
 =?utf-8?B?QWQwMUxhMElTOTBhdlZ4bmhSMDZpbUJvWU5ZR0FHQUJ3ZXZKL2s0bDJnK2tL?=
 =?utf-8?B?VU4yTDRubVp0QXlmOGpBc3VlTVRvYTFYSW9aRW5mc2toVXRUaHA1WXkyUGFF?=
 =?utf-8?B?MHlDdkIzaXpBMHkyVE1WYy9wWld6WTNEK1N2cEZ4M3ZOQXRwV256UkNvWVpo?=
 =?utf-8?B?VmtkU0haYUlUaGxxMTkxcklndk1JMzU5NkdvUmJOWGlRVzZDVTVHWGx3aFNS?=
 =?utf-8?B?T0luTWU5RFNGSzZjcDdoM0F2Wk5HbmVsSzNENGVHeEFDYmZocHQ2M1ZQMFdI?=
 =?utf-8?B?OVdpb2dSMTNxMWg4T0NqYVkwZ002a0IxV1p1S294a2pzMTFmZWsvZkV1TVZu?=
 =?utf-8?B?V3hzcWRCWDJyZXJKQlFxYjk5OEM4ODZGWjVmOXRCdzJacERhQUpwYW5WWUd0?=
 =?utf-8?B?bDlaeEFMWFFkS2IrNk9ueE5PeENjZGVBM09JTUV3d0ZBdlJ0MWdmSHdQaEcz?=
 =?utf-8?B?L3Q3RDlGaUpQQ29Qb2prd0tiSHlIVmV6SlZaN0RndXdtMHdhRTF2dlg3aE90?=
 =?utf-8?B?UFB2UllpcWtqOUUzU1c1dGRqc0ZEOUFnYUQ0aHlxVUtndlNjNHoxMk5zaXFR?=
 =?utf-8?B?aHBacDJvTCttcU5NNlJaaGtjWnZrTDl6MldvZ1I3TlM4Q0JBNS9DUFBVejZK?=
 =?utf-8?B?UDdIU1R3eFNIek1LazQ1b1pFdWxFUWxXaGpiVjcwTm9jMlRQenF1MFU2RUtP?=
 =?utf-8?B?MEhKbTRNZGZIODEya0tTWDRSZVVGZk05cTYyN1NLa2FSUXJEc25wMHBLaGZ4?=
 =?utf-8?B?ZkUxS1JPS1dyRGVId3l6d1o4K2RNNmRQZnN3T0REVzc2WlZXa3RmRWFPSlRP?=
 =?utf-8?B?R0ZHY3h0VUt6SUZIN0oySzV1SXhEaEdqUFc5d2UrNGNRK3FJRkZOS1lEcENT?=
 =?utf-8?B?M3RLeXhxaVZPTGdMOTVNaFhsc3lxdWpkWFhWSFFST0NOS0FIQmtpSHRLeDBD?=
 =?utf-8?B?eTFkbnd3bmlOeTlvVHZNUFlmamtleDFoWDc5TGpKQURySjMwTGN4eHRjd1pu?=
 =?utf-8?B?a3BCSURmOHVUaTk4M0FHZjlaUnNoR0g5dEhBYTA0Y21IdVAwdXhya29iYVZ3?=
 =?utf-8?B?S21oOHNGelh5VldpUTNEcmRDSXFvT0pvTUkrRFgwc1J2eERpTUNVakFWNzBW?=
 =?utf-8?B?cWptalNuNW9FdkxVWWtNU254NlBwaEJ3WkxBU1g2STVBMXdEM3NzNk53cFo0?=
 =?utf-8?B?eWViTXJuR0JMU0hrcUlqUllqSEtDbHBVZXZVQmRhczErVXB4U1A3UjRjNTFZ?=
 =?utf-8?B?NVBhL0s5TFJMWEpvT3NLdllPaHVXUFd3SmZEaUIvNk03Zm5SZkVsQVVhdnpO?=
 =?utf-8?B?Y1BFcTUzTHBhbms2dm52R2RydThkbzB5WFI5K2paNU03SGZyWEFTWWlKVS8y?=
 =?utf-8?B?NVVoalNLM3RwRkhUalNIbUJpUlBaKzdTV1NZcUVxUWtsYlFIbW5HMmFmZ2dw?=
 =?utf-8?B?cmdZd3I3K2hkYkVYZDFlNGxaUjkzUjh6T1d1c0g1R2hEcTl0Nmptbk94MlZz?=
 =?utf-8?B?WDJZVXgxUkdIOCtNT0VEWGR5c3FhQWpFVjNiQllaaklxbFdiZGp4bnZ5YWJu?=
 =?utf-8?B?cW9kYzZldFhRVGk0VnpsRnBSSjFHL0pIbExtakVXUTZyNDNpNlNmRUN5U3B1?=
 =?utf-8?B?K29nczEvNDhNOUxibDRyYVN3bEtwRUJoWWhJWk1ndzVXZFlQQmw4Z0JBUjZh?=
 =?utf-8?B?V3ZKWE9QdHE4a01KVUYrVS9lUTVEa08zU0d1L2FHSkhQUDVna2NGTG5QeTk2?=
 =?utf-8?B?b2gyWk1NSGNITDV5djN0cE1la2Mvb3k1ZGJnaytQK2dLaE8yM09jbitFTndk?=
 =?utf-8?B?OGdPWXp4RUdDZkNPTVF0NEVjb01aL3lUSFBycjdOZjUvU1FBQ0FYbmF3cDVh?=
 =?utf-8?B?cG1wN3hTQzU4RXdlRWV4QW95RXY1S2lwVEpBellCYzhOOXBUaXk2NFVwRk5q?=
 =?utf-8?B?ZzVYZktubkNIbmk3TWg2N2loWkUyak5rUzcyekMxYmR6TXU2OHhIMTZYWW8w?=
 =?utf-8?B?SXhsNFpZQ0cxRUlCazRNcHlVOVVFWUNZQVRRS1FZNTZUN01ieUc0bnM1QUNl?=
 =?utf-8?Q?shYZar8fs85gP0M99g+i5s0BN?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 4d9e1b02-c758-4cb2-4c7c-08dcfaa2f319
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 01 Nov 2024 18:28:15.1755
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: LPDapZTFHVvRpVjzoTBDu8JQrj31I/0sMzfV/k0fD5RC+8OkJJCYzVUOZ/F4eo7C8RXcDcej5H0yx4Q8u1uPOg==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CY8PR12MB7731

--------------ZCqoTved48uVI4k8I9sY9cO9
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi Fan,

I added comments below.

On 11/1/2024 1:00 PM, Fan Ni wrote:
> On Fri, Oct 25, 2024 at 04:02:51PM -0500, Terry Bowman wrote:
>> This is a continuation of the CXL port error handling RFC from earlier.[1]
>> The RFC resulted in the decision to add CXL PCIe port error handling to
>> the existing RCH downstream port handling in the AER service driver. This
>> patchset adds the CXL PCIe port protocol error handling and logging.
>>
>> The first 7 patches update the existing AER service driver to support CXL
>> PCIe port protocol error handling and reporting. This includes AER service
>> driver changes for adding correctable and uncorrectable error support, CXL
>> specific recovery handling, and addition of CXL driver callback handlers.
>>
>> The following 7 patches address CXL driver support for CXL PCIe port
>> protocol errors. This includes the following changes to the CXL drivers:
>> mapping CXL port and downstream port RAS registers, interface updates for
>> common restricted CXL host mode (RCH) and virtual hierarchy mode (VH),
>> adding port specific error handlers, and protocol error logging.
>>
>> [1] - https://lore.kernel.org/linux-cxl/20240617200411.1426554-1-terry.bowman@amd.com/
>>
>> Testing:
> Hi Terry,
> I tried to test the patchset with aer_inject tool (with the patch you shared
> in the last version), and hit some issues.
> Could you help check and give some insights? Thanks.
>
> Below are some test setup info and results.
>
> I tested two topology,
>   a. one memdev directly attaced to a HB with only one RP;
>   b. a topology with cxl switch:
>          HB
>         /  \
>       RP0   RP1
>        |
>      switch
>        |
>  ----------------
>  |    |    |    |
> mem0 mem1 mem2 mem3
>
> For both topologies, I cannot reproduce the system panic shown in your cover
> letter.  
>
> btw, I tried both compile cxl as modules and in the kernel.
>
> Below, I will use the direct-attached topology (a) as an example to show what I
> tried, hope can get some clarity about the test and what I missed or did wrong.
>
> -------------------------------------
> pci device info on the test VM 
> root@fan:~# lspci
> 00:00.0 Host bridge: Intel Corporation 82G33/G31/P35/P31 Express DRAM Controller
> 00:01.0 VGA compatible controller: Device 1234:1111 (rev 02)
> 00:02.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 03)
> 00:03.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
> 00:04.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
> 00:05.0 Host bridge: Red Hat, Inc. QEMU PCIe Expander bridge
> 00:1f.0 ISA bridge: Intel Corporation 82801IB (ICH9) LPC Interface Controller (rev 02)
> 00:1f.2 SATA controller: Intel Corporation 82801IR/IO/IH (ICH9R/DO/DH) 6 port SATA Controller [AHCI mode] (rev 02)
> 00:1f.3 SMBus: Intel Corporation 82801I (ICH9 Family) SMBus Controller (rev 02)
> 0c:00.0 PCI bridge: Intel Corporation Device 7075
> 0d:00.0 CXL: Intel Corporation Device 0d93 (rev 01)
> root@fan:~# 
> -------------------------------------
>
> The aer injection input file looks like below,
>
> -------------------------------------
> fan:~/cxl/cxl-test-tool$ cat /tmp/internal 
> AER
> PCI_ID 0000:0c:00.0
> UNCOR_STATUS INTERNAL
> HEADER_LOG 0 1 2 3
> ------------------------------------
>
> dmesg after aer injection 
>
> ssh root@localhost -p 2024 "dmesg"
> [  613.195352] pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
> [  613.195830] pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
> [  613.196253] pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
> [  613.198199] pcieport 0000:0c:00.0: AER: No uncorrectable error found. Continuing.
> -----------------------------------

This is likely because the device's CXL RAS status is not set and as a result returns false and bypasses the panic.
Unfortunately, the aer-inject only sets the AER status and triggers the interrupt. The CXL RAS is not set.

I attached 2 'test' patches. The first patch sets the device's RAS status to simulate the error reporting.
This will have to be adjusted as the patch looks for a specific device's bus and this will likely be a different
bus then the device's you test in your setup.

The 2nd patch enables UIE/CIE. I moved this out of the v2 patchset. I need to revisit this to see if it is
needed in the patchset itself (not just a test patch).

Regards,
Terry

>
> The problem seems to be related to the cxl_error_handler not been assigned for
> cxlmem device. 
>
> in
> cxl_do_recover() {
> ...
>     327     cxl_walk_bridge(bridge, cxl_report_error_detected, &status);                         
>     328     if (status)                                                                 
>     329         panic("CXL cachemem error. Invoking panic");                   
> ...
> }
> The status returned is false, so no panic().
>
> I tried to add some dev_dbg info to the code to debug.
> Below are the debug info and kernel code changes for debugging. 
> --------------------------------------
> fan:~/cxl/cxl-test-tool$ cxl-tool.py --cmd dmesg | grep XXX
> [    1.738909] cxl_mem:cxl_mem_probe:205: cxl_mem mem0: XXX: add endpoint
> [    1.739188] cxl_mem:devm_cxl_add_endpoint:85: cxl_port port1: XXX: add endpoint
> [    1.739509] cxl_mem:devm_cxl_add_endpoint:92: cxl_mem mem0: XXX: init ep port aer
> [    1.739876] cxl_core:cxl_dport_init_ras_reporting:907: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 1
> [    1.740338] cxl_core:cxl_dport_init_ras_reporting:913: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 2
> [    1.740812] cxl_core:cxl_dport_init_ras_reporting:927: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 3
> [    1.741273] cxl_core:cxl_assign_port_error_handlers:851: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____)
> [    1.741812] cxl_core:cxl_assign_port_error_handlers:855: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____)
> [    1.742263] cxl_core:cxl_assign_port_error_handlers:857: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____) (____ptrval____)
> fan:~/cxl/cxl-test-tool$ 
> --------------------------------------
>
> dmesg after error injection:
> --------------------------------------
> ssh root@localhost -p 2024 "dmesg"
> [  228.544439] pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
> [  228.544977] pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
> [  228.545381] pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
> [  228.545879] pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/00000000
> [  228.546360] pcieport 0000:0c:00.0:    [22] UncorrIntErr          
> [  228.546698] pcieport 0000:0c:00.0: AER: XXX: call cxl_err_handler: 00000000a268bfcb 000000009e0da039
> [  228.547103] cxl_pci 0000:0d:00.0: AER: XXX: call cxl_err_handler: 00000000b9f08b93 0000000000000000
> [  228.547515] pcieport 0000:0c:00.0: AER: No uncorrectable error found. Continuing.
> fan:~/cxl/cxl-test-tool$ 
> --------------------------------------
>
>
> Kernel changes:
> --------------------------------------
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index 5f7570c6173c..bcecd1283fc6 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -848,10 +848,13 @@ static void cxl_assign_port_error_handlers(struct pci_dev *pdev)
>  {
>  	struct pci_driver *pdrv = pdev->driver;
>  
> +    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p\n enter", pdev);
>  	if (!pdrv)
>  		return;
>  
> +    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p\n", pdrv);
>  	pdrv->cxl_err_handler = &cxl_port_error_handlers;
> +    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p %p\n", pdrv, pdrv->cxl_err_handler);
>  }
>  
>  static void cxl_clear_port_error_handlers(void *data)
> @@ -869,12 +872,14 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
>  {
>  	struct pci_dev *pdev = to_pci_dev(port->uport_dev);
>  
> +    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 1\n");
>  	/* uport may have more than 1 downstream EP. Check if already mapped. */
>  	if (port->uport_regs.ras) {
>  		dev_warn(&port->dev, "RAS is already mapped\n");
>  		return;
>  	}
>  
> +    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 2\n");
>  	port->reg_map.host = &port->dev;
>  	if (cxl_map_component_regs(&port->reg_map, &port->uport_regs,
>  				   BIT(CXL_CM_CAP_CAP_ID_RAS))) {
> @@ -882,6 +887,7 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
>  		return;
>  	}
>  
> +    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 3\n");
>  	cxl_assign_port_error_handlers(pdev);
>  	devm_add_action_or_reset(port->uport_dev, cxl_clear_port_error_handlers, pdev);
>  }
> @@ -898,11 +904,13 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
>  	struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport_dev);
>  	struct pci_dev *pdev = to_pci_dev(dport_dev);
>  
> +    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 1\n");
>  	if (dport->rch && host_bridge->native_aer) {
>  		cxl_dport_map_rch_aer(dport);
>  		cxl_disable_rch_root_ints(dport);
>  	}
>  
> +    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 2\n");
>  	/* dport may have more than 1 downstream EP. Check if already mapped. */
>  	if (dport->regs.ras) {
>  		dev_warn(dport_dev, "RAS is already mapped\n");
> @@ -916,6 +924,7 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
>  		return;
>  	}
>  
> +    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 3\n");
>  	cxl_assign_port_error_handlers(pdev);
>  	devm_add_action_or_reset(dport_dev, cxl_clear_port_error_handlers, pdev);
>  }
> diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
> index 067fd6389562..aa824584f8dd 100644
> --- a/drivers/cxl/mem.c
> +++ b/drivers/cxl/mem.c
> @@ -82,13 +82,15 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
>  	 * Now that the path to the root is established record all the
>  	 * intervening ports in the chain.
>  	 */
> +    dev_dbg(host, "XXX: add endpoint\n");
>  	for (iter = parent_port, down = NULL; !is_cxl_root(iter);
>  	     down = iter, iter = to_cxl_port(iter->dev.parent)) {
>  		struct cxl_ep *ep;
>  
>  		ep = cxl_ep_load(iter, cxlmd);
>  		ep->next = down;
> -		cxl_init_ep_ports_aer(ep);
> +        dev_dbg(ep->ep, "XXX: init ep port aer\n");
> +        cxl_init_ep_ports_aer(ep);
>  	}
>  
>  	/* Note: endpoint port component registers are derived from @cxlds */
> @@ -200,6 +202,7 @@ static int cxl_mem_probe(struct device *dev)
>  			return -ENXIO;
>  		}
>  
> +        dev_dbg(dev, "XXX: add endpoint\n");
>  		rc = devm_cxl_add_endpoint(endpoint_parent, cxlmd, dport);
>  		if (rc)
>  			return rc;
> diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
> index 3785f4ca5103..8285f14994e8 100644
> --- a/drivers/pci/pcie/err.c
> +++ b/drivers/pci/pcie/err.c
> @@ -294,6 +294,11 @@ static int cxl_report_error_detected(struct pci_dev *dev, void *data)
>  	bool *status = data;
>  
>  	device_lock(&dev->dev);
> +    if (pdrv) {
> +        dev_dbg(&dev->dev, "XXX: call cxl_err_handler: %p %p\n", pdrv, pdrv->cxl_err_handler);
> +    } else {
> +        dev_dbg(&dev->dev, "XXX: call cxl_err_handler: %p no handler\n", pdrv);
> +    }
>  	if (pdrv && pdrv->cxl_err_handler &&
>  	    pdrv->cxl_err_handler->error_detected) {
>  		const struct cxl_error_handlers *cxl_err_handler =
> --------------------------------------
>
> Fan
>> Below are test results for this patchset using Qemu with CXL root
>> port(0c:00.0), CXL upstream switchport(0d:00.0), CXL downstream
>> switchport(0e:00.0). A CXL endpoint(0f:00.0) CE and UCE logs are
>> also added to show the existing PCIe endpoint handling is not changed.
>>
>> This was tested using aer-inject updated to support CE and UCE internal
>> error injection. CXL RAS was set using a test patch (not upstreamed but can
>> provide if needed).
>>
>>  - Root port UCE:
>>  root@tbowman-cxl:~/aer-inject# ./root-uce-inject.sh
>>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
>>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
>>  pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
>>  pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/02000000
>>  pcieport 0000:0c:00.0:    [22] UncorrIntErr
>>  aer_event: 0000:0c:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
>>  cxl_port_aer_uncorrectable_error: device=0000:0c:00.0 host=pci0000:0c status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
>>  Kernel panic - not syncing: CXL cachemem error. Invoking panic
>>  CPU: 1 UID: 0 PID: 146 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
>>  Tainted: [E]=UNSIGNED_MODULE
>>  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
>>  Call Trace:
>>   <TASK>
>>   dump_stack_lvl+0x27/0x90
>>   dump_stack+0x10/0x20
>>   panic+0x33e/0x380
>>   cxl_do_recovery+0x116/0x120
>>   ? srso_return_thunk+0x5/0x5f
>>   aer_isr+0x3e0/0x710
>>   irq_thread_fn+0x28/0x70
>>   irq_thread+0x179/0x240
>>   ? srso_return_thunk+0x5/0x5f
>>   ? __pfx_irq_thread_fn+0x10/0x10
>>   ? __pfx_irq_thread_dtor+0x10/0x10
>>   ? __pfx_irq_thread+0x10/0x10
>>   kthread+0xf5/0x130
>>   ? __pfx_kthread+0x10/0x10
>>   ret_from_fork+0x3c/0x60
>>   ? __pfx_kthread+0x10/0x10
>>   ret_from_fork_asm+0x1a/0x30
>>   </TASK>
>>  Kernel Offset: 0x29000000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
>>  ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---
> ...

--------------ZCqoTved48uVI4k8I9sY9cO9
Content-Type: application/x-compressed; name="cxl-port-err-test-patches.tgz"
Content-Disposition: attachment; filename="cxl-port-err-test-patches.tgz"
Content-Transfer-Encoding: base64

H4sIAAAAAAAAA+1YbW/byBHOV/FXTHGAoTdSfBflNEYcR74E59ippCuuKIoFubuU2Uikji+2g+b6
2zuzlG1JkRXXNRoE0MAxw93Z2dmZh7Pz2DRNS38ro2qqD9Mwmkk9SUuZp+FMl3me5fj6T8nLJEtp
ItNFdp0WZS5DYxGW/PLFY8RE8V1XPVE2n57jeC8st29ZtuX6PurZjt33XoD5KOv/o1RFGeYAL/Is
K3fpfWv+B5XTPJuDKazQ9vu2b9ouN3lgu9KMg4EXBk7oCGE5wueWFQzgQ5bCWC7A6oNpHqofsBFB
Gpk5hAlC5jO8ya7nYQp/LunNiNTb63AuDJ7Nj7S3YSlRs5JdsDy44CUasF2w/EPLPbQC0E3PNLVx
FRHsDuHvH48nJ+/A6tn/AAXTQ6hxCrc4BYVTuMMpTWRwh9O5BossL4uekFcJl4Wm6bqugciTK5kX
PX4z6/Esl70FTwwOX8CGTud+Gkfpn+yFMlfTHk53yECS8lklZG+WpNWNmr4ElFsDDsTJTBbAL8N0
KkUX+riikDl5WDQ7rS7qCTmT9bve0jSRxDHo+jQpIew94F70wISWpELeQN9zfDdGGXiRYQRuEFs8
imXgBWCpT5DO/qB1DU/28A6vX4MeBF7Xhw49+oADV1kiAPVYRSFmSZqULA8Llkt6T9JpE1NQYYpJ
h4agTb9bGmjQoLGwKJJpqqaYSiPDcIkZbt9cYL5aL1EPn3MWCsFClV6GSrksZNmkVfpRvTUqddUu
fCbDfJvBLiwtdhp4IIYJY1U6D4tP7BZI9YL7nf/QYPjbx4vRhI3/9uHNxRk7H7OfP541dx24Cye/
ndFiFa+B1ad4DaxgI17iEfESdcDEM0ZMfJdYPXTY+1hthf7Gpxc9MLGEvjVwHTuMbB5HvmFEnikc
ziOfe/526G8YWYf+xqRKpTvAHHbo4VMq8dYoE/Qqy2aQFBtxuU0jBQ4HcDbOoE2/MZGNXJZVTmUq
zvQjslMVcAAfT96z4WjEfj0/Ye/PJ+d1UDX9pyQWMoaTi/PT9z8z1BoeD0cMI6dBr93WANqwO0eg
Qz2xUTELtfY1JvAQK6SaAyyc5aUkg5JgAiIsQ6gPU+WyDoRvqkB4gxrTTw8E7n6e0WWAB4I53sMQ
SZCquAtAJEJRLQgq+BZ9Vn7VJRyuLxN+ebtC2eGXkn9CvSSFUFyFKcfbRRpTA66T8rI+DrmA/qXo
7ZVstgxa19P0pfvqy/wG1pdnIS2KTZugr3WevBL+hVhATQoOvKKz6Udkg4cL+ogrxwYy9rKOet9R
Ue/b3cFK1J++eUMh4uAV/PsWeCcXIwLecHR+fEYO0ILrPCkl41kaJ1MmrrNcNFX1IJc7sLryw/H4
l65yuC4Hna3lYLer9wWhswP1G4CjCjOXczrbjjj32utFZtvtHW0bXZYXNxr0YyeInZjHhiEHwnQd
0+e28NbLyzYLdW3ZNkOZ9bwu9hTe6o1K/i9yDA7FatuhurDEDSskFqyk/NzV1BBfrIyxMlMGvpqg
EKuNyEIueYbD7PdKVlLpimweJmkXqwZdNeqrwg+tKjZG0I84xX0bDaiFBu/8gZUvHxEdRsmMXMrl
tIB2ve+0oBvm6V8QnuInmWJaoddjBI93jAqmDpptOK5hadr3bq5/AEH+ZS/532mWc6ljn6BjrdVV
dzU6Huv1DfVf0L1te+zif47n+ev8z+p7nr3nf/8Pqflf3wxdP/SoqFmW9KVvOo7FeWAGVp/3ncAx
ncgL5fPxv9M8Qf4XrPA/JH/9Q9d9gP/ZK/xP4RQrTVn3KtQlI06hxum36J3lE4Fbkx1sD1yoNexN
Omeb63zuWfjbKmMzDCscWL7sm7YIn4u/2QPF3/BhuZttxC1Hw+s+X/IBIUtMghRfld/F/c2q1jKW
ZHgJQ5sa/CgsJDY0yh7dZGQTx++4ArIKrNlN9a4f4cWiH6XVPKIu6BWYN7wFX76gDl0pD+mIR+jI
x+iYrRaeotPYOAaSJ+rJ7k7Toc6EIcqo1xkNTybHb86GbDw5nvw6Zhenp+PhhMhSQ/VLs6Z545rY
JKERxaGwG8JAMdWq1BRLxZhiclA7pu70292WfKrOmKMYZOB66xlT3c9dxh6XrSekqqH2qeSPnjUk
VY/Lm/113iqK0FrydiXunt9R1J6B2K5SWcPw3cBzTM8Osft8HmJrOYGCmHpa5grGkvz3+iisbuPw
XfWH+OzWJaONzKCUN/TnCUUXchmKdbaQLzbJwujiYqL+Mx6ddOFAsiLnRiJaOyjHA0bqNCLRUybq
8l/XlyVW88VWEFLCV9dgetfsKrCw0clfX6r8k6U/fYqTOGOLqmwe5AteEzUaWu7eogjcJv796C/s
3fH527Ph25f7hnQve9nLXvayl73sZS972cte9rKXvXx3+Q+6aqfQACgAAA==

--------------ZCqoTved48uVI4k8I9sY9cO9--

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pf1-f181.google.com (mail-pf1-f181.google.com [209.85.210.181])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 5799970827;
	Fri,  1 Nov 2024 18:00:19 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.210.181
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730484021; cv=none; b=fzF4rQZJOwpIIrDZA0vo1bvMNyQV7/8fqoT/Er4pOsEiObUEgSmVgv5Ht1QfmmQUUK2nrDLknYGV1z8ICQtAuTE/l81b87yTBQqO1MNDa/IBG+2N5WWM4FYColefFh1M7P1TpZuSl+SFb6eoQm85QG7F0xTNWVNzWynx7X0FEmU=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730484021; c=relaxed/simple;
	bh=IgMxiTAaUeJdEf/LeyHO8UujIxGJJ3BpoTSZ2DuLlyc=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=uLopgLaFq+JSKr4yS7PObP/74G4mmuCbjodF9Y411SYCT3RV0VEoyUs+TpBCISU2tfM0j35iPSo1zuGbZUKEI18srStAn1btnzb0Scz5BmNRA1gU9GgizTerL8UvoaDZ+vYk/VeEL5Zv2wDmUsS9EZfZEWv+gOqeE/TfMPM8PRw=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=YQckOwKd; arc=none smtp.client-ip=209.85.210.181
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="YQckOwKd"
Received: by mail-pf1-f181.google.com with SMTP id d2e1a72fcca58-71e983487a1so1849340b3a.2;
        Fri, 01 Nov 2024 11:00:19 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1730484018; x=1731088818; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=ho20PkVrnbRCak35ywDE4CKQxL2Y+KHHf3gwNYey8HI=;
        b=YQckOwKdn5B/8D9lddXvmX+XMDOuq22Fs+/VzzJZFLfyMQUbUYPp34jGJNQd02FHpW
         T0h2QN5DYjHA4HMDaHhaKCkGmyVyUM4Kkaue/H6thaMvUhZNuCLmnTJq+7DzOxvFdFY4
         1KtFiJbU1FZOjrWxv5NVeiVYYdsAkLkAOH7+TUGZsC4lElyMDt17E4YwU5kTTN8grXxU
         iBJVO1X41kn/tn/rg+q+Z2o3rIlpQvAMt2XoTL1YRimrmzDwLPMaZgAOrNi6nYGrMH2+
         0p+tD5tOmi5kNjjwfRXmKGeEC9xRCQ5LctCFDe+akKIor6zGfXZFzDvJXL5SuApjjF8G
         oTpg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1730484018; x=1731088818;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=ho20PkVrnbRCak35ywDE4CKQxL2Y+KHHf3gwNYey8HI=;
        b=FOYoRxvJCuIhYkW3ftjUBGK63mVvI9DdnVc0yo7ASKRgDKk4E2+VMOK50AZOwiyP8D
         /UWqKyFSHfnPwm57T+kZPOX6RhshixU+LZAh0VZVA2a8m5RiWKdcQ5eUunQqSjEG61nO
         uSaGxO/ryolbuNHUEhXgWzR0KL7vB9jgvqPglK0nk3qLth0F2RSd9ZzE4U3iIoVOr21v
         KNojv45pqK0ZEoJ5Te45k0vNia2bG4PVdkwCqVCMMOoJU1uKaOXK5ZTdLyQk260DKbLg
         xQSBgj/5bJ8u2mnXiz/cU18RYrKeK050Qyn9daib+l0yj6oM3CsQ4+L99PH7mTDAnL04
         5vUw==
X-Forwarded-Encrypted: i=1; AJvYcCURcDLBBTKtri+JPZN8hULRFwnN6BAtMsianNXQ5smsrEanpQSR7+Zy4rL3N8a0uRGHZ218glltKv4=@vger.kernel.org, AJvYcCVQlagF0Fjx8MU5AqbwAjO4LmNGYUsygDaL11ceToyhZlWxSIq8GyfQC0PPCuvOQ04MjfPIYa1yW3/bQft0@vger.kernel.org, AJvYcCVc2iV+4TGEkNlNGPwjJMxmtI4G1MJjPzF819hygo9lUej3TnTEFwWZ4qzvhldPn4GuIO+zgHfhBFCO@vger.kernel.org
X-Gm-Message-State: AOJu0Yy/smRLz6wAeSlOBlIxdHpdQ9DEnLsaz2X/jtxS7qeRfTdoxmt+
	/ehzGnumRKQIG4aN/xfp6an8ZVfrScXxzSjmuVC5A04IdX/XDMJ4
X-Google-Smtp-Source: AGHT+IFmuMH1YKyaYipqlM1ZZKiVDiBwvHFFkdmQQdDKlFYsEUbZUiYfkOTnZecGa5YUypc/9Kahpw==
X-Received: by 2002:a05:6a21:168e:b0:1d9:215c:c641 with SMTP id adf61e73a8af0-1db91e82758mr8478349637.48.1730484018228;
        Fri, 01 Nov 2024 11:00:18 -0700 (PDT)
Received: from fan ([2601:646:8f03:9fee:eba7:38e1:4f3b:331c])
        by smtp.gmail.com with ESMTPSA id 41be03b00d2f7-7ee452a7f5bsm2739006a12.24.2024.11.01.11.00.15
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Fri, 01 Nov 2024 11:00:17 -0700 (PDT)
From: Fan Ni <nifan.cxl@gmail.com>
X-Google-Original-From: Fan Ni <fan.ni@samsung.com>
Date: Fri, 1 Nov 2024 11:00:14 -0700
To: Terry Bowman <terry.bowman@amd.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
	linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org,
	dave@stgolabs.net, jonathan.cameron@huawei.com,
	dave.jiang@intel.com, alison.schofield@intel.com,
	vishal.l.verma@intel.com, dan.j.williams@intel.com,
	bhelgaas@google.com, mahesh@linux.ibm.com, ira.weiny@intel.com,
	oohall@gmail.com, Benjamin.Cheatham@amd.com, rrichter@amd.com,
	nathan.fontenot@amd.com, Smita.KoralahalliChannabasappa@amd.com
Subject: Re: [PATCH v2 0/14] Enable CXL PCIe port protocol error handling and
 logging
Message-ID: <ZyUXLpQBBgTl733z@fan>
References: <20241025210305.27499-1-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20241025210305.27499-1-terry.bowman@amd.com>

On Fri, Oct 25, 2024 at 04:02:51PM -0500, Terry Bowman wrote:
> This is a continuation of the CXL port error handling RFC from earlier.[1]
> The RFC resulted in the decision to add CXL PCIe port error handling to
> the existing RCH downstream port handling in the AER service driver. This
> patchset adds the CXL PCIe port protocol error handling and logging.
> 
> The first 7 patches update the existing AER service driver to support CXL
> PCIe port protocol error handling and reporting. This includes AER service
> driver changes for adding correctable and uncorrectable error support, CXL
> specific recovery handling, and addition of CXL driver callback handlers.
> 
> The following 7 patches address CXL driver support for CXL PCIe port
> protocol errors. This includes the following changes to the CXL drivers:
> mapping CXL port and downstream port RAS registers, interface updates for
> common restricted CXL host mode (RCH) and virtual hierarchy mode (VH),
> adding port specific error handlers, and protocol error logging.
> 
> [1] - https://lore.kernel.org/linux-cxl/20240617200411.1426554-1-terry.bowman@amd.com/
> 
> Testing:

Hi Terry,
I tried to test the patchset with aer_inject tool (with the patch you shared
in the last version), and hit some issues.
Could you help check and give some insights? Thanks.

Below are some test setup info and results.

I tested two topology,
  a. one memdev directly attaced to a HB with only one RP;
  b. a topology with cxl switch:
         HB
        /  \
      RP0   RP1
       |
     switch
       |
 ----------------
 |    |    |    |
mem0 mem1 mem2 mem3

For both topologies, I cannot reproduce the system panic shown in your cover
letter.  

btw, I tried both compile cxl as modules and in the kernel.

Below, I will use the direct-attached topology (a) as an example to show what I
tried, hope can get some clarity about the test and what I missed or did wrong.

-------------------------------------
pci device info on the test VM 
root@fan:~# lspci
00:00.0 Host bridge: Intel Corporation 82G33/G31/P35/P31 Express DRAM Controller
00:01.0 VGA compatible controller: Device 1234:1111 (rev 02)
00:02.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 03)
00:03.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
00:04.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
00:05.0 Host bridge: Red Hat, Inc. QEMU PCIe Expander bridge
00:1f.0 ISA bridge: Intel Corporation 82801IB (ICH9) LPC Interface Controller (rev 02)
00:1f.2 SATA controller: Intel Corporation 82801IR/IO/IH (ICH9R/DO/DH) 6 port SATA Controller [AHCI mode] (rev 02)
00:1f.3 SMBus: Intel Corporation 82801I (ICH9 Family) SMBus Controller (rev 02)
0c:00.0 PCI bridge: Intel Corporation Device 7075
0d:00.0 CXL: Intel Corporation Device 0d93 (rev 01)
root@fan:~# 
-------------------------------------

The aer injection input file looks like below,

-------------------------------------
fan:~/cxl/cxl-test-tool$ cat /tmp/internal 
AER
PCI_ID 0000:0c:00.0
UNCOR_STATUS INTERNAL
HEADER_LOG 0 1 2 3
------------------------------------

dmesg after aer injection 

ssh root@localhost -p 2024 "dmesg"
[  613.195352] pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
[  613.195830] pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
[  613.196253] pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
[  613.198199] pcieport 0000:0c:00.0: AER: No uncorrectable error found. Continuing.
--------------------------------------

The problem seems to be related to the cxl_error_handler not been assigned for
cxlmem device. 

in
cxl_do_recover() {
...
    327     cxl_walk_bridge(bridge, cxl_report_error_detected, &status);                         
    328     if (status)                                                                 
    329         panic("CXL cachemem error. Invoking panic");                   
...
}
The status returned is false, so no panic().

I tried to add some dev_dbg info to the code to debug.
Below are the debug info and kernel code changes for debugging. 
--------------------------------------
fan:~/cxl/cxl-test-tool$ cxl-tool.py --cmd dmesg | grep XXX
[    1.738909] cxl_mem:cxl_mem_probe:205: cxl_mem mem0: XXX: add endpoint
[    1.739188] cxl_mem:devm_cxl_add_endpoint:85: cxl_port port1: XXX: add endpoint
[    1.739509] cxl_mem:devm_cxl_add_endpoint:92: cxl_mem mem0: XXX: init ep port aer
[    1.739876] cxl_core:cxl_dport_init_ras_reporting:907: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 1
[    1.740338] cxl_core:cxl_dport_init_ras_reporting:913: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 2
[    1.740812] cxl_core:cxl_dport_init_ras_reporting:927: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 3
[    1.741273] cxl_core:cxl_assign_port_error_handlers:851: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____)
[    1.741812] cxl_core:cxl_assign_port_error_handlers:855: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____)
[    1.742263] cxl_core:cxl_assign_port_error_handlers:857: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____) (____ptrval____)
fan:~/cxl/cxl-test-tool$ 
--------------------------------------

dmesg after error injection:
--------------------------------------
ssh root@localhost -p 2024 "dmesg"
[  228.544439] pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
[  228.544977] pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
[  228.545381] pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
[  228.545879] pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/00000000
[  228.546360] pcieport 0000:0c:00.0:    [22] UncorrIntErr          
[  228.546698] pcieport 0000:0c:00.0: AER: XXX: call cxl_err_handler: 00000000a268bfcb 000000009e0da039
[  228.547103] cxl_pci 0000:0d:00.0: AER: XXX: call cxl_err_handler: 00000000b9f08b93 0000000000000000
[  228.547515] pcieport 0000:0c:00.0: AER: No uncorrectable error found. Continuing.
fan:~/cxl/cxl-test-tool$ 
--------------------------------------


Kernel changes:
--------------------------------------
diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index 5f7570c6173c..bcecd1283fc6 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -848,10 +848,13 @@ static void cxl_assign_port_error_handlers(struct pci_dev *pdev)
 {
 	struct pci_driver *pdrv = pdev->driver;
 
+    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p\n enter", pdev);
 	if (!pdrv)
 		return;
 
+    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p\n", pdrv);
 	pdrv->cxl_err_handler = &cxl_port_error_handlers;
+    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p %p\n", pdrv, pdrv->cxl_err_handler);
 }
 
 static void cxl_clear_port_error_handlers(void *data)
@@ -869,12 +872,14 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
 {
 	struct pci_dev *pdev = to_pci_dev(port->uport_dev);
 
+    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 1\n");
 	/* uport may have more than 1 downstream EP. Check if already mapped. */
 	if (port->uport_regs.ras) {
 		dev_warn(&port->dev, "RAS is already mapped\n");
 		return;
 	}
 
+    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 2\n");
 	port->reg_map.host = &port->dev;
 	if (cxl_map_component_regs(&port->reg_map, &port->uport_regs,
 				   BIT(CXL_CM_CAP_CAP_ID_RAS))) {
@@ -882,6 +887,7 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
 		return;
 	}
 
+    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 3\n");
 	cxl_assign_port_error_handlers(pdev);
 	devm_add_action_or_reset(port->uport_dev, cxl_clear_port_error_handlers, pdev);
 }
@@ -898,11 +904,13 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
 	struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport_dev);
 	struct pci_dev *pdev = to_pci_dev(dport_dev);
 
+    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 1\n");
 	if (dport->rch && host_bridge->native_aer) {
 		cxl_dport_map_rch_aer(dport);
 		cxl_disable_rch_root_ints(dport);
 	}
 
+    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 2\n");
 	/* dport may have more than 1 downstream EP. Check if already mapped. */
 	if (dport->regs.ras) {
 		dev_warn(dport_dev, "RAS is already mapped\n");
@@ -916,6 +924,7 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
 		return;
 	}
 
+    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 3\n");
 	cxl_assign_port_error_handlers(pdev);
 	devm_add_action_or_reset(dport_dev, cxl_clear_port_error_handlers, pdev);
 }
diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
index 067fd6389562..aa824584f8dd 100644
--- a/drivers/cxl/mem.c
+++ b/drivers/cxl/mem.c
@@ -82,13 +82,15 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
 	 * Now that the path to the root is established record all the
 	 * intervening ports in the chain.
 	 */
+    dev_dbg(host, "XXX: add endpoint\n");
 	for (iter = parent_port, down = NULL; !is_cxl_root(iter);
 	     down = iter, iter = to_cxl_port(iter->dev.parent)) {
 		struct cxl_ep *ep;
 
 		ep = cxl_ep_load(iter, cxlmd);
 		ep->next = down;
-		cxl_init_ep_ports_aer(ep);
+        dev_dbg(ep->ep, "XXX: init ep port aer\n");
+        cxl_init_ep_ports_aer(ep);
 	}
 
 	/* Note: endpoint port component registers are derived from @cxlds */
@@ -200,6 +202,7 @@ static int cxl_mem_probe(struct device *dev)
 			return -ENXIO;
 		}
 
+        dev_dbg(dev, "XXX: add endpoint\n");
 		rc = devm_cxl_add_endpoint(endpoint_parent, cxlmd, dport);
 		if (rc)
 			return rc;
diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
index 3785f4ca5103..8285f14994e8 100644
--- a/drivers/pci/pcie/err.c
+++ b/drivers/pci/pcie/err.c
@@ -294,6 +294,11 @@ static int cxl_report_error_detected(struct pci_dev *dev, void *data)
 	bool *status = data;
 
 	device_lock(&dev->dev);
+    if (pdrv) {
+        dev_dbg(&dev->dev, "XXX: call cxl_err_handler: %p %p\n", pdrv, pdrv->cxl_err_handler);
+    } else {
+        dev_dbg(&dev->dev, "XXX: call cxl_err_handler: %p no handler\n", pdrv);
+    }
 	if (pdrv && pdrv->cxl_err_handler &&
 	    pdrv->cxl_err_handler->error_detected) {
 		const struct cxl_error_handlers *cxl_err_handler =
--------------------------------------

Fan
> 
> Below are test results for this patchset using Qemu with CXL root
> port(0c:00.0), CXL upstream switchport(0d:00.0), CXL downstream
> switchport(0e:00.0). A CXL endpoint(0f:00.0) CE and UCE logs are
> also added to show the existing PCIe endpoint handling is not changed.
> 
> This was tested using aer-inject updated to support CE and UCE internal
> error injection. CXL RAS was set using a test patch (not upstreamed but can
> provide if needed).
> 
>  - Root port UCE:
>  root@tbowman-cxl:~/aer-inject# ./root-uce-inject.sh
>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
>  pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
>  pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/02000000
>  pcieport 0000:0c:00.0:    [22] UncorrIntErr
>  aer_event: 0000:0c:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
>  cxl_port_aer_uncorrectable_error: device=0000:0c:00.0 host=pci0000:0c status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
>  Kernel panic - not syncing: CXL cachemem error. Invoking panic
>  CPU: 1 UID: 0 PID: 146 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
>  Tainted: [E]=UNSIGNED_MODULE
>  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
>  Call Trace:
>   <TASK>
>   dump_stack_lvl+0x27/0x90
>   dump_stack+0x10/0x20
>   panic+0x33e/0x380
>   cxl_do_recovery+0x116/0x120
>   ? srso_return_thunk+0x5/0x5f
>   aer_isr+0x3e0/0x710
>   irq_thread_fn+0x28/0x70
>   irq_thread+0x179/0x240
>   ? srso_return_thunk+0x5/0x5f
>   ? __pfx_irq_thread_fn+0x10/0x10
>   ? __pfx_irq_thread_dtor+0x10/0x10
>   ? __pfx_irq_thread+0x10/0x10
>   kthread+0xf5/0x130
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork+0x3c/0x60
>   ? __pfx_kthread+0x10/0x10
>   ret_from_fork_asm+0x1a/0x30
>   </TASK>
>  Kernel Offset: 0x29000000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
>  ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---
...
-- 
Fan Ni

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (mail-bn8nam12on2087.outbound.protection.outlook.com [40.107.237.87])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A4CB419923A;
	Fri,  1 Nov 2024 13:30:58 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.237.87
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730467861; cv=fail; b=EMTyo5EXfwA2plW6SU48czrqLYSMH0t1YJWs/vvqCWkA8b7AR+MZWGaM36RkryTQHVnVop+5r7hrx+Y695X9TeNFUY/aSYAqS+cqps4hJ0lyXwUlFxlIdjTi6M2TdAaJ9Oa9RDWuLEOWayxGh2Er+zNtI2RjK3OvRmoBwLyoowc=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730467861; c=relaxed/simple;
	bh=qpaFNEwam3eC3MdbvBP7ZWkPLvIx+8sj1YY/7ZqhQ4c=;
	h=Message-ID:Date:Subject:To:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=cPeZChqz2P0y2XPQgwKtMgJUPgHmLYCesTGe4wBIatW7X3zWQPP3ZJNe5WVsIeeqyrybVg5iXlX/+NCMMsUrbtDhD/DfnETavezvjO7qPIQPm8MiK0xIWemL3dIvLz4YPwQKNrwVgPLmYX9SuQcsQj4GM8EMKry9EiqWci7/xyI=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=D9xK6Hjb; arc=fail smtp.client-ip=40.107.237.87
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="D9xK6Hjb"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=SgicWQAddUOEPUGxs37y11qIFS0QFRh7ZxhOmSA8Lvr2VrvdI6HcnFXlCVjuHdlQkLd/lsWg3Y+B5bA3hl3FfvPm+J0Q9vJxprCTJ43vgNcBEvn0ddikFUcB6VySiUDmD3XiR3pQcA2MQ+JcSo908hpGqlEMCp0QBqHkv4T/ZWq39sXdn6KlPyzpfLa0yqYQ5kanokVzxzUQlRsD5hvanzJXZL8MzV/Pjtk8PoslMxfjlBSfdGB0c5dSXaawFW45B0i1aQ0GuWrvlozubFCV784QB3u09TslmLcYjX1DTBCLbWepaBu9GcPt16crHEhvKH9Gw7lrS0igvWNFJoBS0g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=dZV0wVKFbQpJYyc/PvFaT3FNQirnSSstcwDRVyiR/wc=;
 b=ppHDhUfbZlGve4Rcjny0dymh5UMMPPnGGL+U/KpB/Tz1Y02xoUrSJ2cgudcpSteu3clr2g7/wRkQvwhXHOoLxNRlIQ3PC/J23JlskQKIcFKwajpuRjFAu5QWyR0KZSfPp+eNj6dpR0C3EDyWl19uIQ5MERX5GY4xfh+DTV70X8zSyyP3P/PjxYJT8KrMGUB9dk9fFa3wXWTxpeGHd1VPEUrMMrIHrIi8niNX+iqHunXCc6JpiHNGzQwxc2Isc8YwRQ6ukBXMfu2Yoq/oq8pL8nI+w4sImn76YWFcbj85MGOnH9HhvvWoSJTt2VDkJJQzb+NENBRirRLDh2g8pacZSA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=dZV0wVKFbQpJYyc/PvFaT3FNQirnSSstcwDRVyiR/wc=;
 b=D9xK6HjbxJF/FDl6jIJbAnvZR7ncqy8tJfYR41qG6GambeqKOOZ6vZQKFYSTcjrXX2knheeWrxcxRCGoVIBRI0mtm2eDz1MWn1qJxD6CElZMHAl8KSN5e3TEUfdVM4ayYqYIFnLeDqfRhjL5qfaYIIXv51QMJ20eM29kO7z4e0M=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 DS0PR12MB9275.namprd12.prod.outlook.com (2603:10b6:8:1be::20) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.8114.18; Fri, 1 Nov 2024 13:30:55 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%3]) with mapi id 15.20.8114.015; Fri, 1 Nov 2024
 13:30:55 +0000
Message-ID: <e4767c14-66b0-460c-ab88-ef78be77690b@amd.com>
Date: Fri, 1 Nov 2024 08:30:52 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 06/14] PCI/AER: Change AER driver to read UCE fatal
 status for all CXL PCIe port devices
To: Dave Jiang <dave.jiang@intel.com>, ming4.li@intel.com,
 linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
 linux-pci@vger.kernel.org, dave@stgolabs.net, jonathan.cameron@huawei.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-7-terry.bowman@amd.com>
 <77b60d4e-2792-4e00-a91c-d2892c091050@intel.com>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <77b60d4e-2792-4e00-a91c-d2892c091050@intel.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA1P222CA0046.NAMP222.PROD.OUTLOOK.COM
 (2603:10b6:806:2d0::14) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|DS0PR12MB9275:EE_
X-MS-Office365-Filtering-Correlation-Id: a4f61ed2-5762-4a0e-17fc-08dcfa7969a9
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|366016|1800799024|376014|7416014|921020;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?Nmlyb3VuWGVjL241eGNxdHd2b2d0SmUxSzlLTWJodmxXZ3l6eXpLUldFdVlI?=
 =?utf-8?B?MXA0SG9nbFFaY3pSb2FJQTBQVzd1WVJCVWhrRFFIQm1EU1dSRDJ2cktjdjZ6?=
 =?utf-8?B?RzlSSXN3UG5kNHlsa1Ntcjl5bW1lVzIyTHlsRmhPRmZBVmNCWkhhR0o4ZXZO?=
 =?utf-8?B?bmZPbFp5Ynh6WVlKYytsdEhyUWdrODlTcWZWWjNWNDltZjJTL1pvOThMblRu?=
 =?utf-8?B?ak50T0l1SndwaUFRc0NOa0dqSTY2WGJITzZQWDZJWGRqRFgyM09oaE9vS3lo?=
 =?utf-8?B?VFpxdDZub1Zxa2Q1TG5sK3MwNW84bzJrZ2VPUVIrcE1jZHRkTENUMzJic2ZI?=
 =?utf-8?B?dTRPb3BGV25hZmh0Um9pWUp4MXNIa1RXbVh2UEVTa0Z2dVl0VWk5ZEFrN04z?=
 =?utf-8?B?VzVpRWE3UnRFelR1K24yQkcvZmNTcCtvOHUrMzRhYTgxWVp4NVM0Y1ZuNmdi?=
 =?utf-8?B?dmpsOXNRV3J3d0JTMGFINDlacjVUcjRpWHh4R0RuR1RIbFJlcFRadlpWa3Fx?=
 =?utf-8?B?RjJBekp0MDVsd2ZmYXRBdExBSTVJOSsveWVZaTNqTmZ3SUJ0bGJzSTlNK2FL?=
 =?utf-8?B?ZnczdFBVT0FDb0hVWEJTc1dzTXpmTHE2RzRzNXZabDVkNEYySEo0ckxkb0Rk?=
 =?utf-8?B?b0dab2VSV2dNc3hlWUFnQnVqem10S1JLTFVpTVRnZStGU3o0bm9YNUsxTU0v?=
 =?utf-8?B?L1N4aG0xdHJlaS91NXFlVGtjbE5zazlqTzVDL2tyZ1dNSUJ3TnViT2U2V1ZD?=
 =?utf-8?B?a3AxNCtaeE4vYlA2V3BubXJwQ1RVcTd1dStYMXBha1JkN2c2V1NPZWlHTUVD?=
 =?utf-8?B?QTJoYjZ0c1hGaXFjRlhhMTViNkJRclVHQ0F4aC9EWTZrMzFTWTBUSnhHQmdY?=
 =?utf-8?B?cmdxMmlweVNWN3oyR1BDaDFZVUw1RjNUdUdwSnlFanAwb3hvb2NMVk9jZUY2?=
 =?utf-8?B?WXM2cElnY29wTjZvazZ4QXQ5dVVUMzRuYm1YNDc4M1BsQ2F4ZUtOL1JFYVp0?=
 =?utf-8?B?cWxHNVpmS1dUM2VBcWxRRU9aRCthaHlDRkJEeGhXRzhJdUErNlZLTUlOc0NY?=
 =?utf-8?B?d2VMcmJ4MjJMcHFEYnVid2pYdHprUkpGRmxPZkltT1BCTEIwV0svanhFRlhY?=
 =?utf-8?B?Zmh3Vnc4d0R2RFl4c3V3WFhicW1JMlA2WUdjaXpTblp3TXh4MTVwMFMyOGdC?=
 =?utf-8?B?TGQvemhoN29YdDlZVTJYMEs0K2hCSENBbk9pWTRGVXdSenMwMnBsZGUwNjhI?=
 =?utf-8?B?ZTFob0ZtT2tYMTdjVncrZEN2NFhuRWx3bC9sZVpFakh4WExLZ3NxNURKSlZK?=
 =?utf-8?B?NncrR1EvZ2JCZzFSbnVyTVpwWVlLN3RKQms1V0pPaCtZeWpZaEtyOWprYlhq?=
 =?utf-8?B?cStqeG81aXJZcGV0SVhyWlFLamZwNUZqVDNjdHJVdEUxbkRWUy9RQXdac3kr?=
 =?utf-8?B?cks2THovZzlYYzhZZjVQNVB0MjdxRllVUTQzbFNFUlBJTWdrK1duZktmSUtK?=
 =?utf-8?B?WjcyelpjVEh0cVNpMU5HK0FNbkpLUXhIc1dyeTNKVnpJeFhKeG9URUtkQkVP?=
 =?utf-8?B?RVJVVmViNWlOR3lwa3J0MkNDTm94dWN3alhHZDZGMGdJYk1hWER6a3F2OXZn?=
 =?utf-8?B?bVRHWGJMUmVIbWxxMmpXU3VFcXRiVVBUOGZOVVNKZVB3blpoak5QZ2J1OFVG?=
 =?utf-8?B?SE0xNlVpTmZNM1ZjTk5iRlA5MjRYL1FHaG9PTFFoaHc3OFRTeURuNmhwR3Er?=
 =?utf-8?B?RFk4ZzVKMk1ET2RHTk5tTWZxbklqUnJXQ05zVUx2UE10aTZwbDNhOHdtWitN?=
 =?utf-8?Q?/QajW9ewYOWfWBWAmWxE+Lxk4pz1Y6iM8y3HQ=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(366016)(1800799024)(376014)(7416014)(921020);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?TWEreW5rS3VkNWRGZlFYZEtGQVg2TWoxTjNaT0xyd2VrZmhYSXFSL3NZaXdi?=
 =?utf-8?B?WHJRbGh3aVhyaVN2cU5TWnJQcVl6VTJsb0FOT1JlMkh1Ykw5UGUxek1mUG5k?=
 =?utf-8?B?TEJUV0hqVituQVBpZUhScEc4cHZ4QjZja1ZlWWphdnBPTXhhdk5KYWVad3A4?=
 =?utf-8?B?ZGhOek52Q3VNUWJ1OGlZYXF2dDMxdXhEYy9oejJrVFIyOW13MkNRTjluQlFm?=
 =?utf-8?B?VmoreWZMTE9HekorTklLMU5aNzkzL1BEKyttNzdqZUlxeDEwTEs2Y1B6VUZ6?=
 =?utf-8?B?ZjNtbmFwUmcvdGZaVXVKbnpxSnlSR09kLzFlb1F6YWoxbFYyOHJveUlDYnp5?=
 =?utf-8?B?WVVVZTEvbnJWbU9DODFsbnpMRUFSTlRWU3V6dXVYZnR0dStSS0gyZUlRL2lZ?=
 =?utf-8?B?MFc5YUlkaC9LVDZaOUZFQTh2ZktDQ2ozVDhBZUMrWEZFNFhQaVdUWVQ4OGg2?=
 =?utf-8?B?c01jbXRBd3V6c1cvOWt1Y29KNTh1OVdWQU9UZGdIVGZKS1lya1JkajQ4ZlpL?=
 =?utf-8?B?NFlLeGJ5ZTdwVXhYYmgvZWdZMlFZWW5hQnZ5cEx3T0pKcGFjclJXN2VIUzNC?=
 =?utf-8?B?eUxTU3YyTHN1T2k3SDNYY0w1Rno4QnNtS2NMdDA3aGhVa21XVHA0QStReU1a?=
 =?utf-8?B?T00vbmhCdlJvc1kvTGw1cHNBMUt1MkI0QWc5cm9vYUNSVCtxU3kvWHhscVhS?=
 =?utf-8?B?dnFkQlc2UExTNm9MU3NwOGp2dGhFbTJyWHNXMHB0dGtnMnUzL2R4SzZUKzBs?=
 =?utf-8?B?clR4a3k4NWpaWVlyczZ0bS84YmMvRVJvYWtxbk9pWHdGTk16V0NwRHJEdDJw?=
 =?utf-8?B?MS8vTkdjMEl4LzdTcERhMVlUZjBsbkowREdvRm83b2JPV0lISTQwODByRkRx?=
 =?utf-8?B?c3lPZVFkZVBEWUZoWTIrQUg0OXJtNm1vYkx4c0JOWDh6bmNUVkJkazlSemwr?=
 =?utf-8?B?VHJaakJlRllsc0hOMTE0Y3pIbGU3VDdTdTJNS0ozSXpHd0piakoyQ2ZzcFVI?=
 =?utf-8?B?NEluM21CSW9XUm9Bc0U4bWpEb3FqUkwwQnU3MVZ0Y1l1dENNOHpkenVtNVlH?=
 =?utf-8?B?Qi9lcTk5YnFkZ042M3dienBRWGlJL01yUkVTaTkzWFIzdUpmV3h1SytUVlJv?=
 =?utf-8?B?SEFNTncrRnlkYkhha0pqZkt2WHpmL2Q5SEo5YkU0NjYybDZpY0xxVndqaFFI?=
 =?utf-8?B?WGlDb0MydkxaWW9oZHlVQkZ5Zk1OTnJVNGlOallzdllWTiszZlRBWFRJR1h3?=
 =?utf-8?B?SzVFOWI4RkN3SEg1cVpoK2dTck94aVgvVllPb0NXdU5KNGRvVVZMOXFVVVpT?=
 =?utf-8?B?ZDRIUDNXb2ZwSzVtVEJ0elpISHNoN0Z4VzZ1VkROK2Z2VlkzYkFiRlY3SDlN?=
 =?utf-8?B?d0wwQ0RTSjlGU3VQQWRoVVQ1dTRxN0F0M2Y0UXJGWWs4aDhPM0V5cXZLcDRH?=
 =?utf-8?B?N3Y5YmJiZlJ6c20xUlpCU1MvQzUwTEhpVzhUQWx1RlNHVGlPMzNVL2dNRTNI?=
 =?utf-8?B?LzJUbkVxeHExMm5pTjVvdmJXYTJGRWQ4TDA4MUJpd05TUW01dWxtZDNJcVFX?=
 =?utf-8?B?RDRreGhTRVMxWXJrdDFUNGhpYkNsTm8zMVFUTDVJQnZVYWhHQXNTejNzeU43?=
 =?utf-8?B?L1JDTXpvQUJBT0lncC8yZ1Y2dnlVS0RFdHNscFNSZGh1OXE3SVBtcXdiREdp?=
 =?utf-8?B?cjdFZWRKWnVLVmU3Z0pldE10d05uTkFDeEY4RTlLWkRKcVRlRmJKT3R6UFB4?=
 =?utf-8?B?NGJ5ZUpIdUxQOS9IWTRIY1M4MCtpVDVHVWwxbVdXZDllWXo5YUpxNGZIVjJu?=
 =?utf-8?B?bnY3ejZVNFl4dFZwbEJlemJkSm5EeXVQYzdNN3NnOGduZXdSeGYxZkRqZmRL?=
 =?utf-8?B?T2hwTzBCenlIeVBRemExek1BaFhRd1VTdlpRV1FmeGE2aE1RY3VuWmhZYk1V?=
 =?utf-8?B?YnVWSnhhN2lmbmVnMzAvNmlPRFVGNzJwOVgzMXRmZWZRMHVWMlBKb0FWZXRw?=
 =?utf-8?B?TXdMUzJuRVkzVnRQRUpacmlsTGdYMU56VmdTY1Ixb1N3QkNKVEZ0cko0a09B?=
 =?utf-8?B?czhoNDJjZWNjYlhqT2RRRzBUMWk0Y0plRjlvNTJaQXBxaGhuT2dUVDRXdkF2?=
 =?utf-8?Q?GleoFUNPgs/HqpoBR4/VSxCRb?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: a4f61ed2-5762-4a0e-17fc-08dcfa7969a9
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 01 Nov 2024 13:30:55.2864
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: ZgQ9j8o/XUyNFX3R/MVG2DcICGOiwpBOG6nKWJeMPntGMZ4E6CAGc+863Q+Z2W8c8ZFCqeSwX08Q8hoZHkznzQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS0PR12MB9275

Hi Dave,

On 10/31/2024 11:58 AM, Dave Jiang wrote:
>
> On 10/25/24 2:02 PM, Terry Bowman wrote:
>> The AER service driver's aer_get_device_error_info() function doesn't read
>> uncorrectable (UCE) fatal error status from PCIe upstream port devices,
>> including CXL upstream switch ports. As a result, fatal errors are not
>> logged or handled as needed for CXL PCIe upstream switch port devices.
>>
>> Update the aer_get_device_error_info() function to read the UCE fatal
>> status for all CXL PCIe port devices.
>>
>> The fatal error status will be used in future patches implementing
>> CXL PCIe port uncorrectable error handling and logging.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
>> ---
>>  drivers/pci/pcie/aer.c | 1 +
>>  1 file changed, 1 insertion(+)
>>
>> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
>> index 1d3e5b929661..d772f123c6a2 100644
>> --- a/drivers/pci/pcie/aer.c
>> +++ b/drivers/pci/pcie/aer.c
>> @@ -1250,6 +1250,7 @@ int aer_get_device_error_info(struct pci_dev *dev, struct aer_err_info *info)
>>  	} else if (type == PCI_EXP_TYPE_ROOT_PORT ||
>>  		   type == PCI_EXP_TYPE_RC_EC ||
>>  		   type == PCI_EXP_TYPE_DOWNSTREAM ||
>> +		   type == PCI_EXP_TYPE_UPSTREAM ||
> At minimal we probably should do something like
> (pcie_is_cxl(dev) && type == PCI_EXP_TYPE_UPSTREAM)
> instead so we don't regress the original PCI behavior?

Good Idea. I'll change the condition to what you recommend.

Regards,
Terry


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pf1-f177.google.com (mail-pf1-f177.google.com [209.85.210.177])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id D1F7016DEBD;
	Thu, 31 Oct 2024 21:27:37 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.210.177
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730410063; cv=none; b=F1QzcxK+TtkQ3KM536BPqHnNsPVoPg00Dw7HUZwRDNUrPaHmI5AUdTHIl+UpcGpUrfXIMdeP8tiNL5RJWEgIvRpiRXwQqGNDBHt5kmhbu0j06CsD6oLi4M/MO2Pl4K4DocVk/B8McgIsNiCjdgYRDzPCpayBlj0C8tO8Q8z2vLU=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730410063; c=relaxed/simple;
	bh=bl44WVmaUULL8B5ir/xE2s0B1QEu/rRZUJxn5ctU5rM=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=LZhhKcZhupTq2rgooBe2kWhTCibM7a7VF0VwLuUlPB2bbHFEDL9qZIPWX/BvuFofuoFqnEVDnZlMd5xmFfg98OuevdrzmZrKvmYeLtd36s3GwHp4YC+p3RuFgeLX8POMEoDFCyW5QOwa1yds0d+pt/Ss+b7dFdjs5Cd2LErHaW8=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=Qtc8XRko; arc=none smtp.client-ip=209.85.210.177
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="Qtc8XRko"
Received: by mail-pf1-f177.google.com with SMTP id d2e1a72fcca58-718e9c8bd83so1925666b3a.1;
        Thu, 31 Oct 2024 14:27:37 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1730410057; x=1731014857; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=gP3+/PsY3A1zi3YMA5waIl6JNl6hCrFJv9jzWk+G+kE=;
        b=Qtc8XRkox/SbRUs6q0IckEQD/Ggfy6CF+I1jmOAoO5x2HytyWHI/jGtCcOaf2OS8IX
         2VAurQVUFunrTch48mGaDghF1kFfA/ZrcN391iC1/mBGAqwo2czu1XRlIWxHWyR9grRJ
         eKvtx4qk2MYgywUvzf7dvz/Kbx6ZVljZebCGg3lM7Ob2eqzaGzvr4zQCeWNvyMRh5eBJ
         /G/6hLOxxK/jBw3zC2MuLQR+3O3EqEu6KWWRq6OZuIrU51BHV2NvpXWEBcGt0h+yYlJv
         eMO3l0QRszBLMPFbbxLG+bZrRZFyhrHaKkUCwZhNs8tBQV5FRmbJgB7kqACvy1QwFU8P
         3pDw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1730410057; x=1731014857;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=gP3+/PsY3A1zi3YMA5waIl6JNl6hCrFJv9jzWk+G+kE=;
        b=T3C4XfLrOSd94L9bDiJjvN0zY3sgKs5xHRcoOCC9oX3Q+ZKKT71aGaAMH4Bocygj2E
         TE/yZ97zjsZMtmM/OWj8Gu/fqK5a4UwGmvhSqL5GXMqsetPsvt+Ysdew8Gx/GOYYl7wm
         0pLXnyYStVZ47MMrGiUXjCcK/jaJIPl6sGh+2IRl0HHHkyUfDChD+TUy8YaKYI9WBQm1
         MYYAE+1pXMSDUZtgYL0wicU8Nq50ZWScUzNV9q6lCSNZ8sYODkPRH2nW0Q0lMa/xY0Hy
         EqP5i9Rb4Z4Pr1nlVUEDT3+AlyfnJQL9NDkBcFtYQMZOcao8zJpMTpzofb6Ha/zgRIBv
         MS+w==
X-Forwarded-Encrypted: i=1; AJvYcCUYQN2cRQHls1xnFLdmMPQVu+NtFwN4ERpgiBmZ9o9QKVnWc6ux3xZXPpcoDNcpc3Qs3oDVMs1igm13E6P2@vger.kernel.org, AJvYcCUcVBjjaQAKdf8sFPlc9LOLWweebPiotX3nVOz8YKe+AvBFifsb63b+Wu9ayUl/3zaWJgeD8l824BN1@vger.kernel.org, AJvYcCX4ClVjZO75No2KLusv7hdUWKqbmS/EOhsQ3dPiSegBaXmbuyrhjE3apeGzmw/9yhErwLw/UzFOm3U=@vger.kernel.org
X-Gm-Message-State: AOJu0Yw8Q5nYBeIe6J0Ue8xvvByWnipGwkU9kmPxkFUy8dcHib/4l6c0
	lXCWHYVi+PSuPbNYr4zvRgOLPHD/dpnjp1jNc0nYmgg6Bry5/5I0kV3LGISs
X-Google-Smtp-Source: AGHT+IEtn2vH5K/i/Z0Zxb70H9baohg/vqBNTSMXA6kbOU6qTZSpjUSinMN8Yx3+Pjj4JKspzImLUg==
X-Received: by 2002:a05:6a20:a8a0:b0:1d9:167a:7890 with SMTP id adf61e73a8af0-1db94fbf902mr5710768637.11.1730410056810;
        Thu, 31 Oct 2024 14:27:36 -0700 (PDT)
Received: from fan ([2601:646:8f03:9fee:1a14:7759:606e:c90])
        by smtp.gmail.com with ESMTPSA id d2e1a72fcca58-720bc1e572dsm1577741b3a.66.2024.10.31.14.27.35
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Thu, 31 Oct 2024 14:27:36 -0700 (PDT)
From: Fan Ni <nifan.cxl@gmail.com>
X-Google-Original-From: Fan Ni <fan.ni@samsung.com>
Date: Thu, 31 Oct 2024 14:27:33 -0700
To: Terry Bowman <terry.bowman@amd.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
	linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org,
	dave@stgolabs.net, jonathan.cameron@huawei.com,
	dave.jiang@intel.com, alison.schofield@intel.com,
	vishal.l.verma@intel.com, dan.j.williams@intel.com,
	bhelgaas@google.com, mahesh@linux.ibm.com, ira.weiny@intel.com,
	oohall@gmail.com, Benjamin.Cheatham@amd.com, rrichter@amd.com,
	nathan.fontenot@amd.com, Smita.KoralahalliChannabasappa@amd.com
Subject: Re: [PATCH v2 04/14] PCI/AER: Modify AER driver logging to report
 CXL or PCIe bus error type
Message-ID: <ZyP2Rda-92qdfi-N@fan>
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-5-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20241025210305.27499-5-terry.bowman@amd.com>

On Fri, Oct 25, 2024 at 04:02:55PM -0500, Terry Bowman wrote:
> The AER driver and aer_event tracing currently log 'PCIe Bus Type'
> for all errors.
> 
> Update the driver and aer_event tracing to log 'CXL Bus Type' for CXL devices.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---

Reviewed-by: Fan Ni <fan.ni@samsung.com>

>  drivers/pci/pcie/aer.c  | 14 ++++++++------
>  include/ras/ras_event.h |  9 ++++++---
>  2 files changed, 14 insertions(+), 9 deletions(-)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index fe6edf26279e..53e9a11f6c0f 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -699,13 +699,14 @@ static void __aer_print_error(struct pci_dev *dev,
>  
>  void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
>  {
> +	const char *bus_type = pcie_is_cxl(dev) ? "CXL"  : "PCIe";
>  	int layer, agent;
>  	int id = pci_dev_id(dev);
>  	const char *level;
>  
>  	if (!info->status) {
> -		pci_err(dev, "PCIe Bus Error: severity=%s, type=Inaccessible, (Unregistered Agent ID)\n",
> -			aer_error_severity_string[info->severity]);
> +		pci_err(dev, "%s Bus Error: severity=%s, type=Inaccessible, (Unregistered Agent ID)\n",
> +			bus_type, aer_error_severity_string[info->severity]);
>  		goto out;
>  	}
>  
> @@ -714,8 +715,8 @@ void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
>  
>  	level = (info->severity == AER_CORRECTABLE) ? KERN_WARNING : KERN_ERR;
>  
> -	pci_printk(level, dev, "PCIe Bus Error: severity=%s, type=%s, (%s)\n",
> -		   aer_error_severity_string[info->severity],
> +	pci_printk(level, dev, "%s Bus Error: severity=%s, type=%s, (%s)\n",
> +		   bus_type, aer_error_severity_string[info->severity],
>  		   aer_error_layer[layer], aer_agent_string[agent]);
>  
>  	pci_printk(level, dev, "  device [%04x:%04x] error status/mask=%08x/%08x\n",
> @@ -730,7 +731,7 @@ void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
>  	if (info->id && info->error_dev_num > 1 && info->id == id)
>  		pci_err(dev, "  Error of this Agent is reported first\n");
>  
> -	trace_aer_event(dev_name(&dev->dev), (info->status & ~info->mask),
> +	trace_aer_event(dev_name(&dev->dev), bus_type, (info->status & ~info->mask),
>  			info->severity, info->tlp_header_valid, &info->tlp);
>  }
>  
> @@ -764,6 +765,7 @@ EXPORT_SYMBOL_GPL(cper_severity_to_aer);
>  void pci_print_aer(struct pci_dev *dev, int aer_severity,
>  		   struct aer_capability_regs *aer)
>  {
> +	const char *bus_type = pcie_is_cxl(dev) ? "CXL"  : "PCIe";
>  	int layer, agent, tlp_header_valid = 0;
>  	u32 status, mask;
>  	struct aer_err_info info;
> @@ -798,7 +800,7 @@ void pci_print_aer(struct pci_dev *dev, int aer_severity,
>  	if (tlp_header_valid)
>  		__print_tlp_header(dev, &aer->header_log);
>  
> -	trace_aer_event(dev_name(&dev->dev), (status & ~mask),
> +	trace_aer_event(dev_name(&dev->dev), bus_type, (status & ~mask),
>  			aer_severity, tlp_header_valid, &aer->header_log);
>  }
>  EXPORT_SYMBOL_NS_GPL(pci_print_aer, CXL);
> diff --git a/include/ras/ras_event.h b/include/ras/ras_event.h
> index e5f7ee0864e7..1bf8e7050ba8 100644
> --- a/include/ras/ras_event.h
> +++ b/include/ras/ras_event.h
> @@ -297,15 +297,17 @@ TRACE_EVENT(non_standard_event,
>  
>  TRACE_EVENT(aer_event,
>  	TP_PROTO(const char *dev_name,
> +		 const char *bus_type,
>  		 const u32 status,
>  		 const u8 severity,
>  		 const u8 tlp_header_valid,
>  		 struct pcie_tlp_log *tlp),
>  
> -	TP_ARGS(dev_name, status, severity, tlp_header_valid, tlp),
> +	TP_ARGS(dev_name, bus_type, status, severity, tlp_header_valid, tlp),
>  
>  	TP_STRUCT__entry(
>  		__string(	dev_name,	dev_name	)
> +		__string(	bus_type,	bus_type	)
>  		__field(	u32,		status		)
>  		__field(	u8,		severity	)
>  		__field(	u8, 		tlp_header_valid)
> @@ -314,6 +316,7 @@ TRACE_EVENT(aer_event,
>  
>  	TP_fast_assign(
>  		__assign_str(dev_name);
> +		__assign_str(bus_type);
>  		__entry->status		= status;
>  		__entry->severity	= severity;
>  		__entry->tlp_header_valid = tlp_header_valid;
> @@ -325,8 +328,8 @@ TRACE_EVENT(aer_event,
>  		}
>  	),
>  
> -	TP_printk("%s PCIe Bus Error: severity=%s, %s, TLP Header=%s\n",
> -		__get_str(dev_name),
> +	TP_printk("%s %s Bus Error: severity=%s, %s, TLP Header=%s\n",
> +		__get_str(dev_name), __get_str(bus_type),
>  		__entry->severity == AER_CORRECTABLE ? "Corrected" :
>  			__entry->severity == AER_FATAL ?
>  			"Fatal" : "Uncorrected, non-fatal",
> -- 
> 2.34.1
> 

-- 
Fan Ni

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pf1-f175.google.com (mail-pf1-f175.google.com [209.85.210.175])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 42BF513C9C0;
	Thu, 31 Oct 2024 21:22:45 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.210.175
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730409771; cv=none; b=gFI7DgJ0rWxkBW3bzDYpq0/NAapjDTZpZoBQEk+O6CL7irVP/2p8lcKc6dxjEieksWy+zFdzXWDM5VU0QwAA6vmiYgSD+Fv4U+4oPTwQJM3iShDlu5z8k/+t8P7J3q0a2w4mAUKiC0HhykZUktcwKiwnDgWRCfmMIrFzAR39RS8=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730409771; c=relaxed/simple;
	bh=PgcMBwr/s2S9yZx2+wQTVmHYDbosjx0vKnuVX9907MQ=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=k+sNgP0N5JQe97L5/qYLG1xILHetwm65kLfbBluTnaWncxxSv7jl2KFFAHo+4kdyoNJdubYCiFa1+pkeGRzUVZFIjaI21mOeTkY1K7NUco8ve3Le/QbEZgJwPM0dlyKhtrwvhLtMHuTENx5B5sp5SJcW9Eck3a9we3GgZz49G4Q=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=NPd79usM; arc=none smtp.client-ip=209.85.210.175
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="NPd79usM"
Received: by mail-pf1-f175.google.com with SMTP id d2e1a72fcca58-720be2b27acso866963b3a.0;
        Thu, 31 Oct 2024 14:22:45 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1730409764; x=1731014564; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=xaowfYoL4ccPBj6E3WMNX/UPY0D/S/vlf6D5F0IhQcI=;
        b=NPd79usMbpqxAvtWYMCwPHRMCs9ccv+O85gfBwemqUn3IFBFL9pYa31eCsL9hrXv72
         IP6QbVfxO7610rXlJkmBW8JX2ZzMAP3DuOX/DAnc5EtiqWl02BZ5LURlryx9FJNXAwMA
         +M+nXKAFt2C5lP0GROwEUPjqvcT8e1ztQThSt/zYYv4OFJC/uf0fIrUqDNZtk2KZiA9M
         o49z7a0DNIjUlF+DcvVX0COelMNUwOuAcE8gAYO53ypZMwPc4lpaLO2Se2KdYCdqC6Jx
         q6P6IqbclSz0MXpVjbLspLBM47fkgSMWJtkkEGz6B3bPlcEWWuHhHRfAjzfB//YnpdXZ
         A3GQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1730409764; x=1731014564;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=xaowfYoL4ccPBj6E3WMNX/UPY0D/S/vlf6D5F0IhQcI=;
        b=i/Ybm7D7WLI1i4u6SKnRisquxzSzglEzj/+sA5YyfipyPE8rcYXdi3O2WCMRD3Gx4x
         ftCxUWYCdsWsveIWNnhbuAnEI/8kjAhEh0lbO6P6zhPE7KE/s+xG4vScOZVGO0xDfk5R
         NABaieqcn77oPfLjokAJ/Cp2BTnqqHfPsN7PUlxlrN803Ac7bcvlBu5vPgAeMlZ0Ostj
         FHAKonPN5t6LMM39yUznwM2aoAixdTsdgjNY07NOk7iCKlrBtr5P4mDr+zjYVLDo+HkI
         qESxpPSLPtbf3T7qQGdNJkkida8dmdz/Fc8+zFYVT515emYnIlj0U9naCSZ3rL3O3OFY
         wkTQ==
X-Forwarded-Encrypted: i=1; AJvYcCVfwnXVqEw/j/TpX8ZHzcD2SkqhA2ZkwttT9fiPku+PMhWipGXzYd4rxp2muUOsqUDnf1rpB55ztnvE@vger.kernel.org, AJvYcCW3i+4fKlZsYQe9sHj4U7n1jmJn3/QdNkRbiSAXEd7fTDh9jC7aLPZ1DDC6iRrNBgZbOszUe44qbIg=@vger.kernel.org, AJvYcCWdUlwmeWUolO/V0I4S789Hs8Ph1VWC0lZ+ajuEHCWdA8TmBdeaiN+WshTQc8/Ya+hRlmNLpkLGFKO4DLHx@vger.kernel.org
X-Gm-Message-State: AOJu0YzCq0IinZKXH73SaAU3RRH/d9rrkyvMSRtke1b2oUrJTSH1j6iE
	gDSj18RhSHxiPB8qYcvxod9tNntku7MCY73Ln0lWGOqWtgjRyOrTaZj+ztxt
X-Google-Smtp-Source: AGHT+IEdhWcb37E7r8sAP0OHqJnLQL4mMASrXRCrxjLKERy6Cl2RXp+TGtFyhjBlomU/Wuc5CPZZPA==
X-Received: by 2002:a05:6a00:4653:b0:71e:77e7:d60 with SMTP id d2e1a72fcca58-720b9ddb788mr6584049b3a.23.1730409764310;
        Thu, 31 Oct 2024 14:22:44 -0700 (PDT)
Received: from fan ([2601:646:8f03:9fee:1a14:7759:606e:c90])
        by smtp.gmail.com with ESMTPSA id d2e1a72fcca58-720bc2eb683sm1630859b3a.175.2024.10.31.14.22.42
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Thu, 31 Oct 2024 14:22:43 -0700 (PDT)
From: Fan Ni <nifan.cxl@gmail.com>
X-Google-Original-From: Fan Ni <fan.ni@samsung.com>
Date: Thu, 31 Oct 2024 14:22:24 -0700
To: Terry Bowman <terry.bowman@amd.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
	linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org,
	dave@stgolabs.net, jonathan.cameron@huawei.com,
	dave.jiang@intel.com, alison.schofield@intel.com,
	vishal.l.verma@intel.com, dan.j.williams@intel.com,
	bhelgaas@google.com, mahesh@linux.ibm.com, ira.weiny@intel.com,
	oohall@gmail.com, Benjamin.Cheatham@amd.com, rrichter@amd.com,
	nathan.fontenot@amd.com, Smita.KoralahalliChannabasappa@amd.com
Subject: Re: [PATCH v2 03/14] cxl/pci: Introduce helper functions
 pcie_is_cxl() and pcie_is_cxl_port()
Message-ID: <ZyP1EBLzjwTgzhAR@fan>
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-4-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20241025210305.27499-4-terry.bowman@amd.com>

On Fri, Oct 25, 2024 at 04:02:54PM -0500, Terry Bowman wrote:
> CXL and AER drivers need the ability to identify CXL devices and CXL port
> devices.
> 
> First, add set_pcie_cxl() with logic checking for CXL Flexbus DVSEC
> presence. The CXL Flexbus DVSEC presence is used because it is required
> for all the CXL PCIe devices.[1]
> 
> Add boolean 'struct pci_dev::is_cxl' with the purpose to cache the CXL
> Flexbus presence.
> 
> Add pcie_is_cxl() as a macro to return 'struct pci_dev::is_cxl',
> 
> Add pcie_is_cxl_port() to check if a device is a CXL root port, CXL
> upstream switch port, or CXL downstream switch port. Also, verify the
> CXL extensions DVSEC for port is present.[1]
> 
> [1] CXL 3.1 Spec, 8.1.1 PCIe Designated Vendor-Specific Extended
>     Capability (DVSEC) ID Assignment, Table 8-2
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---

Reviewed-by: Fan Ni <fan.ni@samsung.com>

>  drivers/pci/pci.c             | 14 ++++++++++++++
>  drivers/pci/probe.c           | 10 ++++++++++
>  include/linux/pci.h           |  4 ++++
>  include/uapi/linux/pci_regs.h |  3 ++-
>  4 files changed, 30 insertions(+), 1 deletion(-)
> 
> diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
> index 7d85c04fbba2..c1b243aec61c 100644
> --- a/drivers/pci/pci.c
> +++ b/drivers/pci/pci.c
> @@ -5034,6 +5034,20 @@ static u16 cxl_port_dvsec(struct pci_dev *dev)
>  					 PCI_DVSEC_CXL_PORT);
>  }
>  
> +bool pcie_is_cxl_port(struct pci_dev *dev)
> +{
> +	if (!pcie_is_cxl(dev))
> +		return false;
> +
> +	if ((pci_pcie_type(dev) != PCI_EXP_TYPE_ROOT_PORT) &&
> +	    (pci_pcie_type(dev) != PCI_EXP_TYPE_UPSTREAM) &&
> +	    (pci_pcie_type(dev) != PCI_EXP_TYPE_DOWNSTREAM))
> +		return false;
> +
> +	return cxl_port_dvsec(dev);
> +}
> +EXPORT_SYMBOL_GPL(pcie_is_cxl_port);
> +
>  static bool cxl_sbr_masked(struct pci_dev *dev)
>  {
>  	u16 dvsec, reg;
> diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
> index 4f68414c3086..9324eb345f11 100644
> --- a/drivers/pci/probe.c
> +++ b/drivers/pci/probe.c
> @@ -1631,6 +1631,14 @@ static void set_pcie_thunderbolt(struct pci_dev *dev)
>  		dev->is_thunderbolt = 1;
>  }
>  
> +static void set_pcie_cxl(struct pci_dev *dev)
> +{
> +	u16 dvsec = pci_find_dvsec_capability(dev, PCI_VENDOR_ID_CXL,
> +					      PCI_DVSEC_CXL_FLEXBUS);
> +	if (dvsec)
> +		dev->is_cxl = 1;
> +}
> +
>  static void set_pcie_untrusted(struct pci_dev *dev)
>  {
>  	struct pci_dev *parent;
> @@ -1945,6 +1953,8 @@ int pci_setup_device(struct pci_dev *dev)
>  	/* Need to have dev->cfg_size ready */
>  	set_pcie_thunderbolt(dev);
>  
> +	set_pcie_cxl(dev);
> +
>  	set_pcie_untrusted(dev);
>  
>  	/* "Unknown power state" */
> diff --git a/include/linux/pci.h b/include/linux/pci.h
> index 106ac83e3a7b..d3b1af9fb273 100644
> --- a/include/linux/pci.h
> +++ b/include/linux/pci.h
> @@ -443,6 +443,7 @@ struct pci_dev {
>  	unsigned int	is_hotplug_bridge:1;
>  	unsigned int	shpc_managed:1;		/* SHPC owned by shpchp */
>  	unsigned int	is_thunderbolt:1;	/* Thunderbolt controller */
> +	unsigned int	is_cxl:1;               /* CXL alternate protocol */
>  	/*
>  	 * Devices marked being untrusted are the ones that can potentially
>  	 * execute DMA attacks and similar. They are typically connected
> @@ -743,6 +744,9 @@ static inline bool pci_is_vga(struct pci_dev *pdev)
>  	return false;
>  }
>  
> +#define pcie_is_cxl(dev) (dev->is_cxl)
> +bool pcie_is_cxl_port(struct pci_dev *dev);
> +
>  #define for_each_pci_bridge(dev, bus)				\
>  	list_for_each_entry(dev, &bus->devices, bus_list)	\
>  		if (!pci_is_bridge(dev)) {} else
> diff --git a/include/uapi/linux/pci_regs.h b/include/uapi/linux/pci_regs.h
> index 12323b3334a9..5df6c74963c5 100644
> --- a/include/uapi/linux/pci_regs.h
> +++ b/include/uapi/linux/pci_regs.h
> @@ -1186,9 +1186,10 @@
>  #define PCI_DOE_DATA_OBJECT_DISC_RSP_3_PROTOCOL		0x00ff0000
>  #define PCI_DOE_DATA_OBJECT_DISC_RSP_3_NEXT_INDEX	0xff000000
>  
> -/* Compute Express Link (CXL r3.1, sec 8.1.5) */
> +/* Compute Express Link (CXL r3.1, sec 8.1) */
>  #define PCI_DVSEC_CXL_PORT				3
>  #define PCI_DVSEC_CXL_PORT_CTL				0x0c
>  #define PCI_DVSEC_CXL_PORT_CTL_UNMASK_SBR		0x00000001
> +#define PCI_DVSEC_CXL_FLEXBUS				7
>  
>  #endif /* LINUX_PCI_REGS_H */
> -- 
> 2.34.1
> 

-- 
Fan Ni

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pg1-f176.google.com (mail-pg1-f176.google.com [209.85.215.176])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4D93C1A2562;
	Thu, 31 Oct 2024 20:25:29 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.215.176
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730406331; cv=none; b=g/Cna2C+hgcjzn4iHA3QQGSKd2iT90sTpRlm/woBD7ylOkwtg0XLV3NWP9rJO7bc9FmvFvkqJIeopfHMIcCc4HMgtORhBm7B9bb/VxK1UeFl7p6qD6tty8B1TLNPWBGo0itWZtvj4GQhlyQYhBt1A+kNZIswxO3jFBad4AA4ang=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730406331; c=relaxed/simple;
	bh=SXxJLnwmliE4sTl2okXJbGuvdeDDxukFYNzonEm748E=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=Lok3AgLYT6QVn0Iq3IOcXYeveMAxMLJ3ff5ol6ocr5z/uTwcYVt7+1z9ksol/vk6/7FZ/Fm577X2uQFjCm0H7I8X1cNrHFEhmvdTpLurI4Bm+jRsuMYAGJgK55E53JG560TyBU9ZBNscEute3Edesf7P8TN1+eZRoF8DfKs5CuQ=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=gHRPRDWL; arc=none smtp.client-ip=209.85.215.176
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="gHRPRDWL"
Received: by mail-pg1-f176.google.com with SMTP id 41be03b00d2f7-7eda47b7343so983609a12.0;
        Thu, 31 Oct 2024 13:25:29 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1730406328; x=1731011128; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=JP9sRmcVEjno6np3uwfTiX/MWx/3bhU6Ar7kOBUlziU=;
        b=gHRPRDWLWIi+6ZNr7zetxpitFexQpsD0OEYniV8N60NizWhvTbSfwDayANIw54aSb8
         ALkDlhy+C/J+qzseVXR9q+oVfhQlbky3BI/k3ZsISALsUHuHMoidZqqEVpM74yaXp57X
         /WA0Zg1S31SnlEzkCNmVU3AGNhAQbFUnNtQMsvcImSdaET63wPqus65mL4uOGXvVocKd
         +MyerNgiNb+RVo+KG5AmFBTFjJ85FjEzuhC067zFN+5vjq7EDVbi39TSAEiR5zxuz3YI
         io2YPUhRlDUtO7dY8udr5W1P5Va4rT2duMX+od0LhgbkGATHPNkUnJh5gNNX1BWQfvyE
         OJzQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1730406328; x=1731011128;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=JP9sRmcVEjno6np3uwfTiX/MWx/3bhU6Ar7kOBUlziU=;
        b=kksiv1I0wrKwr8CHKdbg+dMvR2yZ5QBKGvVketRfMnwUUndOz0cEuj+rG2h/IVdA0N
         MFt65RbeCSUtyXBOrL5B67+3ALNTOCtXLzJ7u+Hnvy8xzYcdwkt6j3CpSHO/46CupjLI
         T7D4uVAZMoxksV9QTr+tX+LG2iMdlWH9bVL4AoP4IFAYK+sx8CTh07UgxSAFyD7Zw//h
         QfkAW9GI11AeCb86IkEp2FslbUFPQUWwh1GInggUYaALxhicPWkXPviU9mvGSASoOpuS
         pLrVD9HaYki0V1jVJuYMaNKYo2L81u3OYGROLWvNeLCJX19HeS5ubkFmajp99S1POVVx
         aPlA==
X-Forwarded-Encrypted: i=1; AJvYcCVo2mbTKywVh41+BFe/YuPihXYfY4JhnFSlA6gZlDBkMWCvc23DqM7Rr/XC8EXv/RHdcclcTuxLZFmE@vger.kernel.org, AJvYcCWQ11fJs8+3f6vMSKePEcGwE94mBMQpdfRSFGJcQQvBwS2Cq8CpSvk88QRD/WJw0OSuikS0G1pD1l1ICYXS@vger.kernel.org, AJvYcCXzJ+q2vvuWOAYhjbasG6QmKCTqng1DyWlYniQeDMvQ85AVZZLsQlfN9HEIyz08tYrmxn4eGpH6AOE=@vger.kernel.org
X-Gm-Message-State: AOJu0YxDc9uOE65TNnGGAjIenEmpGPMhujQoL8WOSygBE2SQzp+GJgDH
	sBvLNXGVniLO5ShXUis0hMfy2YKxoBoD0P40itBxvrQCMywazz5buqiMcQ==
X-Google-Smtp-Source: AGHT+IG2yf4+3tcnyIFunU30HkVWTtJjBqO29GTyQa5oE9K5gI36udLNH0NyRtVasXUOkjqBtZvKBg==
X-Received: by 2002:a17:903:230d:b0:20b:8776:4902 with SMTP id d9443c01a7336-210c6c34577mr272895695ad.38.1730406328157;
        Thu, 31 Oct 2024 13:25:28 -0700 (PDT)
Received: from fan ([2601:646:8f03:9fee:1a14:7759:606e:c90])
        by smtp.gmail.com with ESMTPSA id d9443c01a7336-211057bfd09sm12324315ad.183.2024.10.31.13.25.26
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Thu, 31 Oct 2024 13:25:27 -0700 (PDT)
From: Fan Ni <nifan.cxl@gmail.com>
X-Google-Original-From: Fan Ni <fan.ni@samsung.com>
Date: Thu, 31 Oct 2024 13:25:24 -0700
To: Terry Bowman <terry.bowman@amd.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
	linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org,
	dave@stgolabs.net, jonathan.cameron@huawei.com,
	dave.jiang@intel.com, alison.schofield@intel.com,
	vishal.l.verma@intel.com, dan.j.williams@intel.com,
	bhelgaas@google.com, mahesh@linux.ibm.com, ira.weiny@intel.com,
	oohall@gmail.com, Benjamin.Cheatham@amd.com, rrichter@amd.com,
	nathan.fontenot@amd.com, Smita.KoralahalliChannabasappa@amd.com
Subject: Re: [PATCH v2 02/14] PCI/AER: Rename AER driver's interfaces to also
 indicate CXL PCIe port support
Message-ID: <ZyPntFwZIxCv3hXr@fan>
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-3-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20241025210305.27499-3-terry.bowman@amd.com>

On Fri, Oct 25, 2024 at 04:02:53PM -0500, Terry Bowman wrote:
> The AER service driver already includes support for CXL restricted host
> (RCH) downstream port error handling. The current implementation is based
> on CXL1.1 using a root complex event collector.
> 
> Rename function interfaces and parameters where necessary to include
> virtual hierarchy (VH) mode CXL PCIe port error handling alongside the RCH
> handling.[1] The CXL PCIe port error handling will be added in a future
> patch.
> 
> Limit changes to renaming variable and function names. No functional
> changes are added.
> 
> [1] CXL 3.1 Spec, 9.12.2 CXL Virtual Hierarchy
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>

Reviewed-by: Fan Ni <fan.ni@samsung.com>

> ---
>  drivers/pci/pcie/aer.c | 28 ++++++++++++++--------------
>  1 file changed, 14 insertions(+), 14 deletions(-)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 13b8586924ea..fe6edf26279e 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -1029,7 +1029,7 @@ static int cxl_rch_handle_error_iter(struct pci_dev *dev, void *data)
>  	return 0;
>  }
>  
> -static void cxl_rch_handle_error(struct pci_dev *dev, struct aer_err_info *info)
> +static void cxl_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>  {
>  	/*
>  	 * Internal errors of an RCEC indicate an AER error in an
> @@ -1052,30 +1052,30 @@ static int handles_cxl_error_iter(struct pci_dev *dev, void *data)
>  	return *handles_cxl;
>  }
>  
> -static bool handles_cxl_errors(struct pci_dev *rcec)
> +static bool handles_cxl_errors(struct pci_dev *dev)
>  {
>  	bool handles_cxl = false;
>  
> -	if (pci_pcie_type(rcec) == PCI_EXP_TYPE_RC_EC &&
> -	    pcie_aer_is_native(rcec))
> -		pcie_walk_rcec(rcec, handles_cxl_error_iter, &handles_cxl);
> +	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
> +	    pcie_aer_is_native(dev))
> +		pcie_walk_rcec(dev, handles_cxl_error_iter, &handles_cxl);
>  
>  	return handles_cxl;
>  }
>  
> -static void cxl_rch_enable_rcec(struct pci_dev *rcec)
> +static void cxl_enable_internal_errors(struct pci_dev *dev)
>  {
> -	if (!handles_cxl_errors(rcec))
> +	if (!handles_cxl_errors(dev))
>  		return;
>  
> -	pci_aer_unmask_internal_errors(rcec);
> -	pci_info(rcec, "CXL: Internal errors unmasked");
> +	pci_aer_unmask_internal_errors(dev);
> +	pci_info(dev, "CXL: Internal errors unmasked");
>  }
>  
>  #else
> -static inline void cxl_rch_enable_rcec(struct pci_dev *dev) { }
> -static inline void cxl_rch_handle_error(struct pci_dev *dev,
> -					struct aer_err_info *info) { }
> +static inline void cxl_enable_internal_errors(struct pci_dev *dev) { }
> +static inline void cxl_handle_error(struct pci_dev *dev,
> +				    struct aer_err_info *info) { }
>  #endif
>  
>  /**
> @@ -1113,7 +1113,7 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>  
>  static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info)
>  {
> -	cxl_rch_handle_error(dev, info);
> +	cxl_handle_error(dev, info);
>  	pci_aer_handle_error(dev, info);
>  	pci_dev_put(dev);
>  }
> @@ -1491,7 +1491,7 @@ static int aer_probe(struct pcie_device *dev)
>  		return status;
>  	}
>  
> -	cxl_rch_enable_rcec(port);
> +	cxl_enable_internal_errors(port);
>  	aer_enable_rootport(rpc);
>  	pci_info(port, "enabled with IRQ %d\n", dev->irq);
>  	return 0;
> -- 
> 2.34.1
> 

-- 
Fan Ni

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pl1-f172.google.com (mail-pl1-f172.google.com [209.85.214.172])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 196CF1A2562;
	Thu, 31 Oct 2024 20:24:35 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.214.172
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730406278; cv=none; b=g1DCIi2TqZGqr0w9u2+7MJNLS1sd95boGfws9U+qZbTX9JMhJ0kDBTvQ503qvL/NsQ8/2i8Kt1C9PTkga4Gy1lpemIjI73kXvkto/xmaO1h/GcVtOHsOgWm5OzpSNMBsV17fWAJyFvixb1tPUN5GnAFES9phzfBmzk/H39f8aJU=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730406278; c=relaxed/simple;
	bh=wrFSEeZQV9brU3Dbe6yQ2USyHr8bTrVEo03V9uBxbN8=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=XVRObGLKhhRxfJhGuSuUv6NH1uT7S6ndzC3K58H5AKdUR+v3X+pL6b326PzEi52AKgDVcWjyU9kXU5WqcVxNhiOcuHiC6FcpLkuIQa3aHhpESoGCeF5GwRHTb1r3N7T6FjmhBdOz/PFdcpOME5Uk5Hhjc2EDDO5mHz6hzpgl5zk=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=BJyHgGYo; arc=none smtp.client-ip=209.85.214.172
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="BJyHgGYo"
Received: by mail-pl1-f172.google.com with SMTP id d9443c01a7336-20cdbe608b3so14460205ad.1;
        Thu, 31 Oct 2024 13:24:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1730406275; x=1731011075; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=bvul/ButslL/SfFParCrQ24MY7VsrtOizUyLtg7jpC0=;
        b=BJyHgGYovkjJXTVC8qs95XGyYadvHragMpecxTkiuknvQt7DXYpNwCrOv1hv2M0FRV
         2thAbeC3QxF5G3jzHTv7PpJ6pLB/kRGBjEzeyYAVs1BZyzg/Qkn/hSSlKnnoQRwvnayB
         sb/hq9mwSuGLcldySxWcWnEOtzPRrZrOvntOzxDG9x2IRbinn4RqTO6iZYdoyO//6SC/
         GnDwA45kY+8+noVbs7YxaKIfNURkSZN/HkJXO/tDcEpa1rxhi6q6dcOcOiI9aaCrPMpF
         hTZUGv0h9rh/p93NrLzo//Zs/tldtOvMTbbmxbgRMgDZ8G2K1pN4CsTUGXwSgPBaw5lH
         dq5A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1730406275; x=1731011075;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=bvul/ButslL/SfFParCrQ24MY7VsrtOizUyLtg7jpC0=;
        b=o/d5Cy+96u+EmD5CNe6T0k1P7l/5UHLKURSTd8cfIYYSyYyuJjwcQrqr71KsICAlE3
         YMvUfmx94ptzOuJmpnDUB/QcpKsxGJGgz9RI8qy/KRl+3BOFGn4HRPSHshoYajn/QQxv
         ShCevxqTa/Rt6pN+dRCNtwHBUSKzY9ZxjjuyktSZ3dz+/Wy5R9ZhEWrlm0ruRJTTyc2i
         5Q1CLAiSoFBPQEv5hHJ8sNgjQskjn1hshl4PpqDqW+K4VEsVkbIKI7iFMxco1AP1ye+Y
         vBhMvt+XqpfjcG05A40o0xmzakGEH1O9G77gVDiSi1fwg0+I2ntPlHUCO+RvwEN/dxUt
         Jojg==
X-Forwarded-Encrypted: i=1; AJvYcCV2b8J2TKQKARrw98hEAobGO+xdPq4l5f2lrlThruZFgEhRFrF94CqFfMvwV8M0GGZ03pKOzUrw5odTcjcd@vger.kernel.org, AJvYcCW9cZFW4qAYDaznI0d6Dkrc//juwRQMYVu9DJucPoVWyqXuzWJG7VCwAhBwcJlj+lo8mPqsvn6cGHb4@vger.kernel.org, AJvYcCXabIgK/6WcMWrtYFckDgVUcQhxMhhdMJXtoEeR7lM7bcwwnwHzn+ihsAXph5B7y/w9gz0pWJ5zsg0=@vger.kernel.org
X-Gm-Message-State: AOJu0YwXXjjibfbNutovyPDOUGrqc7dx0GgFDBYj4ldKr53qYX5+DrRh
	Fzn9HT03/peLjq4afz4Q3aPxld+y/tKqr4t541hVwTrq702cZJFX
X-Google-Smtp-Source: AGHT+IF8/Jj1mz6ZXbFcpAc6WbNpTLEt+rE2mRrtARP8nrTGarcDw9XqiTfO/Gph0pGEN4+53/cH6w==
X-Received: by 2002:a17:902:f68a:b0:20c:c880:c3b0 with SMTP id d9443c01a7336-210f751dd47mr104971915ad.21.1730406275259;
        Thu, 31 Oct 2024 13:24:35 -0700 (PDT)
Received: from fan ([2601:646:8f03:9fee:1a14:7759:606e:c90])
        by smtp.gmail.com with ESMTPSA id d9443c01a7336-211057a2531sm12413625ad.139.2024.10.31.13.24.33
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Thu, 31 Oct 2024 13:24:34 -0700 (PDT)
From: Fan Ni <nifan.cxl@gmail.com>
X-Google-Original-From: Fan Ni <fan.ni@samsung.com>
Date: Thu, 31 Oct 2024 13:24:18 -0700
To: Terry Bowman <terry.bowman@amd.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
	linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org,
	dave@stgolabs.net, jonathan.cameron@huawei.com,
	dave.jiang@intel.com, alison.schofield@intel.com,
	vishal.l.verma@intel.com, dan.j.williams@intel.com,
	bhelgaas@google.com, mahesh@linux.ibm.com, ira.weiny@intel.com,
	oohall@gmail.com, Benjamin.Cheatham@amd.com, rrichter@amd.com,
	nathan.fontenot@amd.com, Smita.KoralahalliChannabasappa@amd.com
Subject: Re: [PATCH v2 01/14] PCI/AER: Introduce 'struct cxl_err_handlers'
 and add to 'struct pci_driver'
Message-ID: <ZyPncuiISDL7ubqN@fan>
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-2-terry.bowman@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20241025210305.27499-2-terry.bowman@amd.com>

On Fri, Oct 25, 2024 at 04:02:52PM -0500, Terry Bowman wrote:
> CXL.io provides PCIe like protocol error implementation, but CXL.io and
> PCIe have different handling requirements.
> 
> The PCIe AER service driver may attempt recovering PCIe devices with
> uncorrectable errors while recovery is not used for CXL.io. Recovery is not
> used in the CXL.io recovery because of the potential for corruption on
> what can be system memory.
> 
> Create pci_driver::cxl_err_handlers similar to pci_driver::error_handler.
> Create handlers for correctable and uncorrectable CXL.io error
> handling.
> 
> The CXL error handlers will be used in future patches adding CXL PCIe
> port protocol error handling.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---

Reviewed-by: Fan Ni <fan.ni@samsung.com>

>  include/linux/pci.h | 9 +++++++++
>  1 file changed, 9 insertions(+)
> 
> diff --git a/include/linux/pci.h b/include/linux/pci.h
> index 573b4c4c2be6..106ac83e3a7b 100644
> --- a/include/linux/pci.h
> +++ b/include/linux/pci.h
> @@ -886,6 +886,14 @@ struct pci_error_handlers {
>  	void (*cor_error_detected)(struct pci_dev *dev);
>  };
>  
> +/* CXL bus error event callbacks */
> +struct cxl_error_handlers {
> +	/* CXL bus error detected on this device */
> +	bool (*error_detected)(struct pci_dev *dev);
> +
> +	/* Allow device driver to record more details of a correctable error */
> +	void (*cor_error_detected)(struct pci_dev *dev);
> +};
>  
>  struct module;
>  
> @@ -956,6 +964,7 @@ struct pci_driver {
>  	int  (*sriov_set_msix_vec_count)(struct pci_dev *vf, int msix_vec_count); /* On PF */
>  	u32  (*sriov_get_vf_total_msix)(struct pci_dev *pf);
>  	const struct pci_error_handlers *err_handler;
> +	const struct cxl_error_handlers *cxl_err_handler;
>  	const struct attribute_group **groups;
>  	const struct attribute_group **dev_groups;
>  	struct device_driver	driver;
> -- 
> 2.34.1
> 

-- 
Fan Ni

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.17])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B9DFF1A0B00;
	Thu, 31 Oct 2024 16:58:21 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=192.198.163.17
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730393903; cv=none; b=eF6WnUh5cHgcX4yYbnGBM+xeIhvUSstCXlQ2Ui72LRiR5P4MAX3PB2UfhLCHrycxAzuQWTFffMMyzyCarT2kIeC27pFdc3bDSyx/kaIrj2dmCa8uSbDpilE9j2i3hfML9miennmGTwhltFdHIXq+DOwDF5h+FrjhIPHyUM++UHI=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730393903; c=relaxed/simple;
	bh=1HncyWhQX+kDpPii6v7Lt+fPnDDyCcdt6X02irdfR2Y=;
	h=Message-ID:Date:MIME-Version:Subject:To:References:From:
	 In-Reply-To:Content-Type; b=B37o8aSnjmFLa9v04eHpK70Rjp5dv00QEUj4oCGL5ZeE39Kt6TnADxNDo6eS5HzvdL64i1g20yv6X8MtkHsK2W0C1Elzbh1KRq93RrNxSWofKaN8uXbqEHQ6CuVWDudZ5mkJx0Vh6LqxL1eFaZhXq5isNIp1xd2tRDzjdDFLX/E=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=nyhUhu/e; arc=none smtp.client-ip=192.198.163.17
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="nyhUhu/e"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1730393902; x=1761929902;
  h=message-id:date:mime-version:subject:to:references:from:
   in-reply-to:content-transfer-encoding;
  bh=1HncyWhQX+kDpPii6v7Lt+fPnDDyCcdt6X02irdfR2Y=;
  b=nyhUhu/eby95G3/f+dQ0qHlhm3baG4Hg7d2UNAe8YGn/5JCAEpfT9NO9
   bP9sJIns9REBOueD5Rz2BpIoBHl22sMj8W+u9srI4g1+6rY1/SGe7PzxG
   q+CbSQbbR99xvBlHvbDLkRlCADaxDiT//WWJec1/LaFscdg/Xngc5tcOQ
   s4auUB6kLzhqLXGil74sSI64U2VcxZbeXC6NModvsP71OVlEesA0JnQaN
   P4wJyPpNANi4FLsoPihPryv0RyEgTqzZqBwZHLXJjuwzh6yFkNzLB+Kcy
   Ch68On9xBoGIrQbJYiEMfBss1/clqbuG9k90r1XOSF91w0LHvYLKn32I3
   w==;
X-CSE-ConnectionGUID: 6QzwaYO/TZqNmX2XBLfdXA==
X-CSE-MsgGUID: sMhwhECLRoCtYZeZ0Y4ZuA==
X-IronPort-AV: E=McAfee;i="6700,10204,11242"; a="30038410"
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="30038410"
Received: from fmviesa004.fm.intel.com ([10.60.135.144])
  by fmvoesa111.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:58:21 -0700
X-CSE-ConnectionGUID: N5oowuxYQiSyqKRwpvdciQ==
X-CSE-MsgGUID: phjvXgHVRhKxrIQnjAaPHg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="87278858"
Received: from dwoodwor-mobl2.amr.corp.intel.com (HELO [10.125.108.232]) ([10.125.108.232])
  by fmviesa004-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:58:19 -0700
Message-ID: <77b60d4e-2792-4e00-a91c-d2892c091050@intel.com>
Date: Thu, 31 Oct 2024 09:58:18 -0700
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 06/14] PCI/AER: Change AER driver to read UCE fatal
 status for all CXL PCIe port devices
To: Terry Bowman <terry.bowman@amd.com>, ming4.li@intel.com,
 linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
 linux-pci@vger.kernel.org, dave@stgolabs.net, jonathan.cameron@huawei.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-7-terry.bowman@amd.com>
Content-Language: en-US
From: Dave Jiang <dave.jiang@intel.com>
In-Reply-To: <20241025210305.27499-7-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit



On 10/25/24 2:02 PM, Terry Bowman wrote:
> The AER service driver's aer_get_device_error_info() function doesn't read
> uncorrectable (UCE) fatal error status from PCIe upstream port devices,
> including CXL upstream switch ports. As a result, fatal errors are not
> logged or handled as needed for CXL PCIe upstream switch port devices.
> 
> Update the aer_get_device_error_info() function to read the UCE fatal
> status for all CXL PCIe port devices.
> 
> The fatal error status will be used in future patches implementing
> CXL PCIe port uncorrectable error handling and logging.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---
>  drivers/pci/pcie/aer.c | 1 +
>  1 file changed, 1 insertion(+)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 1d3e5b929661..d772f123c6a2 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -1250,6 +1250,7 @@ int aer_get_device_error_info(struct pci_dev *dev, struct aer_err_info *info)
>  	} else if (type == PCI_EXP_TYPE_ROOT_PORT ||
>  		   type == PCI_EXP_TYPE_RC_EC ||
>  		   type == PCI_EXP_TYPE_DOWNSTREAM ||
> +		   type == PCI_EXP_TYPE_UPSTREAM ||

At minimal we probably should do something like
(pcie_is_cxl(dev) && type == PCI_EXP_TYPE_UPSTREAM)
instead so we don't regress the original PCI behavior?
    
>  		   info->severity == AER_NONFATAL) {
>  
>  		/* Link is still healthy for IO reads */


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.13])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id BE724CA6B;
	Thu, 31 Oct 2024 16:37:18 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=192.198.163.13
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730392643; cv=none; b=Ds3kV/VEcgcapU4T3Z998p4Fg87l9Zs/U36mecfjHYi/8daZ5xSwobA7wNj71/b3Pz30z4y17son9RWJcoTTsI2MGu2hV5rYrcy4BMkm84gBbEJdlNnjepkwarXRQ7GFn2xHFMsJY2o1PxPVNhhM3Bq1ZVhXpRb6vyTxdsDhp2s=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730392643; c=relaxed/simple;
	bh=CWuytdwFjVNhOZ5aXDIDvQbiDmrTte+EhXq6nl7T+IQ=;
	h=Message-ID:Date:MIME-Version:Subject:To:References:From:
	 In-Reply-To:Content-Type; b=O/FqcyYkKA2pdXzPb1Mylae3aSXVRMh6fOwDwdpAUT+vwuQQKqQZRedC7gxA2X959VYG2nSoKh0/cymKBxOE+6HH7Rw2upLDpb6iMHpvY/yz7ZDuXKKXWFT4E6erjZxT+eY3SDjeWePw3cDX0AgbLgd7DzxJ0F8QjeVmt6aY/EQ=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=gGuWtCPt; arc=none smtp.client-ip=192.198.163.13
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="gGuWtCPt"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1730392641; x=1761928641;
  h=message-id:date:mime-version:subject:to:references:from:
   in-reply-to:content-transfer-encoding;
  bh=CWuytdwFjVNhOZ5aXDIDvQbiDmrTte+EhXq6nl7T+IQ=;
  b=gGuWtCPtrrHmGptXCm+fQ+M6zwXXicH0oMl0sU2sWY1C0K7g9kvL1yyj
   RMEl5jrSLvhEVVBcPgQgThjgGXqdVAXwAJV1VbpySeDlsbw9VZ1Dd07L4
   MGteav02A+0nvMoBcXCHtVrWFZGrbX1vQ4zFqf9BIXOfmFKM4sTFL8AYz
   qKqUZqmAUVqPsAvfTvSRNQy8q8jfURxQsplFjJc5+Vf9GYmaOLB/8c/0M
   qMsQyNEUsAEEfVN7InU5DX0rHOLYYHmX3sVkOhmPDY8Gdx4ziexKbgp4t
   9rsCkf34ArNHmsVydFXOCvfZJmvF8NzilZARewOj8bVF5pyuMbvPPzRhz
   w==;
X-CSE-ConnectionGUID: MqjzAEyGTtm3MKw2atOtEA==
X-CSE-MsgGUID: CQuv9RFvThGBhFwodsc+Bg==
X-IronPort-AV: E=McAfee;i="6700,10204,11242"; a="32980106"
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="32980106"
Received: from orviesa009.jf.intel.com ([10.64.159.149])
  by fmvoesa107.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:37:18 -0700
X-CSE-ConnectionGUID: IQ+MNz/hQPinjJ0TXR7bkg==
X-CSE-MsgGUID: hEk4zaQETkmywsQMJ/qirw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="82577912"
Received: from dwoodwor-mobl2.amr.corp.intel.com (HELO [10.125.108.232]) ([10.125.108.232])
  by orviesa009-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:37:17 -0700
Message-ID: <9e602b57-c064-43a3-ab57-343773c07863@intel.com>
Date: Thu, 31 Oct 2024 09:37:15 -0700
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 05/14] PCI/AER: Add CXL PCIe port correctable error
 support in AER service driver
To: Terry Bowman <terry.bowman@amd.com>, ming4.li@intel.com,
 linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
 linux-pci@vger.kernel.org, dave@stgolabs.net, jonathan.cameron@huawei.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-6-terry.bowman@amd.com>
Content-Language: en-US
From: Dave Jiang <dave.jiang@intel.com>
In-Reply-To: <20241025210305.27499-6-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit



On 10/25/24 2:02 PM, Terry Bowman wrote:
> The AER service driver doesn't currently handle CXL protocol errors
> reported by CXL root ports, CXL upstream switch ports, and CXL downstream
> switch ports. Consequently, RAS protocol errors from CXL PCIe port devices
> are not properly logged or handled.
> 
> These errors are reported to the OS via the root port's AER correctable
> and uncorrectable internal error fields. While the AER driver supports
> handling downstream port protocol errors in restricted CXL host (RCH) mode
> also known as CXL1.1, it lacks the same functionality for CXL PCIe ports
> operating in virtual hierarchy (VH) mode.
> 
> To address this gap, update the AER driver to handle CXL PCIe port device
> protocol correctable errors (CE).
> 
> Make this update alongside the existing downstream port RCH error handling
> logic, extending support to CXL PCIe ports in VH mode.
> 
> is_internal_error() is currently limited by CONFIG_PCIEAER_CXL kernel
> config. Update is_internal_error()'s function declaration such that it is
> always available regardless if CONFIG_PCIEAER_CXL kernel config is enabled
> or disabled.
> 
> The uncorrectable error (UCE) handling will be added in a future patch.
> 
> [1] CXL 3.1 Spec, 12.2.2 CXL Root Ports, Downstream Switch Ports, and
> Upstream Switch Ports
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>

With the commit log update from what Jonathan suggested,
Reviewed-by: Dave Jiang <dave.jiang@intel.com>

> ---
>  drivers/pci/pcie/aer.c | 59 ++++++++++++++++++++++++++++--------------
>  1 file changed, 39 insertions(+), 20 deletions(-)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 53e9a11f6c0f..1d3e5b929661 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -941,8 +941,15 @@ static bool find_source_device(struct pci_dev *parent,
>  	return true;
>  }
>  
> -#ifdef CONFIG_PCIEAER_CXL
> +static bool is_internal_error(struct aer_err_info *info)
> +{
> +	if (info->severity == AER_CORRECTABLE)
> +		return info->status & PCI_ERR_COR_INTERNAL;
>  
> +	return info->status & PCI_ERR_UNC_INTN;
> +}
> +
> +#ifdef CONFIG_PCIEAER_CXL
>  /**
>   * pci_aer_unmask_internal_errors - unmask internal errors
>   * @dev: pointer to the pcie_dev data structure
> @@ -994,14 +1001,6 @@ static bool cxl_error_is_native(struct pci_dev *dev)
>  	return (pcie_ports_native || host->native_aer);
>  }
>  
> -static bool is_internal_error(struct aer_err_info *info)
> -{
> -	if (info->severity == AER_CORRECTABLE)
> -		return info->status & PCI_ERR_COR_INTERNAL;
> -
> -	return info->status & PCI_ERR_UNC_INTN;
> -}
> -
>  static int cxl_rch_handle_error_iter(struct pci_dev *dev, void *data)
>  {
>  	struct aer_err_info *info = (struct aer_err_info *)data;
> @@ -1033,14 +1032,23 @@ static int cxl_rch_handle_error_iter(struct pci_dev *dev, void *data)
>  
>  static void cxl_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>  {
> -	/*
> -	 * Internal errors of an RCEC indicate an AER error in an
> -	 * RCH's downstream port. Check and handle them in the CXL.mem
> -	 * device driver.
> -	 */
> -	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
> -	    is_internal_error(info))
> +	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC)
>  		pcie_walk_rcec(dev, cxl_rch_handle_error_iter, info);
> +
> +	if (info->severity == AER_CORRECTABLE) {
> +		struct pci_driver *pdrv = dev->driver;
> +		int aer = dev->aer_cap;
> +
> +		if (aer)
> +			pci_write_config_dword(dev, aer + PCI_ERR_COR_STATUS,
> +					       info->status);
> +
> +		if (pdrv && pdrv->cxl_err_handler &&
> +		    pdrv->cxl_err_handler->cor_error_detected)
> +			pdrv->cxl_err_handler->cor_error_detected(dev);
> +
> +		pcie_clear_device_status(dev);
> +	}
>  }
>  
>  static int handles_cxl_error_iter(struct pci_dev *dev, void *data)
> @@ -1058,9 +1066,13 @@ static bool handles_cxl_errors(struct pci_dev *dev)
>  {
>  	bool handles_cxl = false;
>  
> -	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
> -	    pcie_aer_is_native(dev))
> +	if (!pcie_aer_is_native(dev))
> +		return false;
> +
> +	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC)
>  		pcie_walk_rcec(dev, handles_cxl_error_iter, &handles_cxl);
> +	else
> +		handles_cxl = pcie_is_cxl_port(dev);
>  
>  	return handles_cxl;
>  }
> @@ -1078,6 +1090,10 @@ static void cxl_enable_internal_errors(struct pci_dev *dev)
>  static inline void cxl_enable_internal_errors(struct pci_dev *dev) { }
>  static inline void cxl_handle_error(struct pci_dev *dev,
>  				    struct aer_err_info *info) { }
> +static bool handles_cxl_errors(struct pci_dev *dev)
> +{
> +	return false;
> +}
>  #endif
>  
>  /**
> @@ -1115,8 +1131,11 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>  
>  static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info)
>  {
> -	cxl_handle_error(dev, info);
> -	pci_aer_handle_error(dev, info);
> +	if (is_internal_error(info) && handles_cxl_errors(dev))
> +		cxl_handle_error(dev, info);
> +	else
> +		pci_aer_handle_error(dev, info);
> +
>  	pci_dev_put(dev);
>  }
>  


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.15])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 2264F1BBBE5;
	Thu, 31 Oct 2024 16:27:11 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=192.198.163.15
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730392034; cv=none; b=AqcybxrJ4atyBLXwvwMszRmFqKcVSrdCqYGLovL9HOrOt1H9YoVMjPZmaj+tVkXMP0mj6pd/je7qftXXIeiFfuclXZLsjwnHIk91oCqL+oNUqK1GRu3SMoxkck9OrC7cM/I/IucHRJgUaZuqaP3MavTfK+wvZTy5qliRjh1Df/4=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730392034; c=relaxed/simple;
	bh=x3VGYA7MwWp6jzN6/+h9SPAxStwbeYk1Po1rpI6RtDw=;
	h=Message-ID:Date:MIME-Version:Subject:To:References:From:
	 In-Reply-To:Content-Type; b=PaE0mCsDXFtQu7eGLXjTsBOyRWN4xPErybfsJ91Tog6JDAOSScK0wQZp+O4WgEyF25aB8vlPQpQoPrejj3NkG5s0TrOZWc379iXLckiMldey+zpp6MKDPZkqlhe0dEZdW2xUbYQomwQ2M4oA9Eeby1aMwn8l0yZeWYS/uNH73Tc=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=ZjSDf+yZ; arc=none smtp.client-ip=192.198.163.15
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="ZjSDf+yZ"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1730392032; x=1761928032;
  h=message-id:date:mime-version:subject:to:references:from:
   in-reply-to:content-transfer-encoding;
  bh=x3VGYA7MwWp6jzN6/+h9SPAxStwbeYk1Po1rpI6RtDw=;
  b=ZjSDf+yZCzfeSe4f76dsMAmeFRSf1MoCQz4HcwhoAomkvbeFtYhNAhct
   YMU/i+85y94J7L++bsgxf8d+fjOFDheHhm6ND2CVRpPvUTXq/6K8mf2PE
   pxa35IrKHi4gqq5jtydCny6FyRVs+9HvNyXhX5Z205IyRH+sVL7RiMuRM
   7MsAwvBmHZQglNRW4VNWgqY7yAQAx7Wy/YercxH5pxchzzzC4MFO/V7JO
   51duPkPVXXJF83k6BY3/Wfybsyjjno7ktJ7rpqOUDnoBVj6XXqhSYsKDR
   /a9lguCQitWlEKcUUThq/vEJNWmsNdz1owQMzxQzkL3k9/I/SXLudQP+E
   w==;
X-CSE-ConnectionGUID: CWzcs4kzQaS7jg2b/N7G6g==
X-CSE-MsgGUID: +hQDnnxpQ0GdQlaHi6WfwA==
X-IronPort-AV: E=McAfee;i="6700,10204,11242"; a="30259150"
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="30259150"
Received: from fmviesa001.fm.intel.com ([10.60.135.141])
  by fmvoesa109.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:27:12 -0700
X-CSE-ConnectionGUID: viogqThGRGaTbUW0jFYyZA==
X-CSE-MsgGUID: esvJn3cCS3a4UmUJRkrf8A==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="113522798"
Received: from dwoodwor-mobl2.amr.corp.intel.com (HELO [10.125.108.232]) ([10.125.108.232])
  by smtpauth.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:27:10 -0700
Message-ID: <271e1830-11a3-4ee7-a87b-4585b93438fb@intel.com>
Date: Thu, 31 Oct 2024 09:27:09 -0700
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 04/14] PCI/AER: Modify AER driver logging to report CXL
 or PCIe bus error type
To: Terry Bowman <terry.bowman@amd.com>, ming4.li@intel.com,
 linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
 linux-pci@vger.kernel.org, dave@stgolabs.net, jonathan.cameron@huawei.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-5-terry.bowman@amd.com>
Content-Language: en-US
From: Dave Jiang <dave.jiang@intel.com>
In-Reply-To: <20241025210305.27499-5-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit



On 10/25/24 2:02 PM, Terry Bowman wrote:
> The AER driver and aer_event tracing currently log 'PCIe Bus Type'
> for all errors.
> 
> Update the driver and aer_event tracing to log 'CXL Bus Type' for CXL devices.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Reviewed-by: Dave Jiang <dave.jiang@intel.com>

> ---
>  drivers/pci/pcie/aer.c  | 14 ++++++++------
>  include/ras/ras_event.h |  9 ++++++---
>  2 files changed, 14 insertions(+), 9 deletions(-)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index fe6edf26279e..53e9a11f6c0f 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -699,13 +699,14 @@ static void __aer_print_error(struct pci_dev *dev,
>  
>  void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
>  {
> +	const char *bus_type = pcie_is_cxl(dev) ? "CXL"  : "PCIe";
>  	int layer, agent;
>  	int id = pci_dev_id(dev);
>  	const char *level;
>  
>  	if (!info->status) {
> -		pci_err(dev, "PCIe Bus Error: severity=%s, type=Inaccessible, (Unregistered Agent ID)\n",
> -			aer_error_severity_string[info->severity]);
> +		pci_err(dev, "%s Bus Error: severity=%s, type=Inaccessible, (Unregistered Agent ID)\n",
> +			bus_type, aer_error_severity_string[info->severity]);
>  		goto out;
>  	}
>  
> @@ -714,8 +715,8 @@ void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
>  
>  	level = (info->severity == AER_CORRECTABLE) ? KERN_WARNING : KERN_ERR;
>  
> -	pci_printk(level, dev, "PCIe Bus Error: severity=%s, type=%s, (%s)\n",
> -		   aer_error_severity_string[info->severity],
> +	pci_printk(level, dev, "%s Bus Error: severity=%s, type=%s, (%s)\n",
> +		   bus_type, aer_error_severity_string[info->severity],
>  		   aer_error_layer[layer], aer_agent_string[agent]);
>  
>  	pci_printk(level, dev, "  device [%04x:%04x] error status/mask=%08x/%08x\n",
> @@ -730,7 +731,7 @@ void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
>  	if (info->id && info->error_dev_num > 1 && info->id == id)
>  		pci_err(dev, "  Error of this Agent is reported first\n");
>  
> -	trace_aer_event(dev_name(&dev->dev), (info->status & ~info->mask),
> +	trace_aer_event(dev_name(&dev->dev), bus_type, (info->status & ~info->mask),
>  			info->severity, info->tlp_header_valid, &info->tlp);
>  }
>  
> @@ -764,6 +765,7 @@ EXPORT_SYMBOL_GPL(cper_severity_to_aer);
>  void pci_print_aer(struct pci_dev *dev, int aer_severity,
>  		   struct aer_capability_regs *aer)
>  {
> +	const char *bus_type = pcie_is_cxl(dev) ? "CXL"  : "PCIe";
>  	int layer, agent, tlp_header_valid = 0;
>  	u32 status, mask;
>  	struct aer_err_info info;
> @@ -798,7 +800,7 @@ void pci_print_aer(struct pci_dev *dev, int aer_severity,
>  	if (tlp_header_valid)
>  		__print_tlp_header(dev, &aer->header_log);
>  
> -	trace_aer_event(dev_name(&dev->dev), (status & ~mask),
> +	trace_aer_event(dev_name(&dev->dev), bus_type, (status & ~mask),
>  			aer_severity, tlp_header_valid, &aer->header_log);
>  }
>  EXPORT_SYMBOL_NS_GPL(pci_print_aer, CXL);
> diff --git a/include/ras/ras_event.h b/include/ras/ras_event.h
> index e5f7ee0864e7..1bf8e7050ba8 100644
> --- a/include/ras/ras_event.h
> +++ b/include/ras/ras_event.h
> @@ -297,15 +297,17 @@ TRACE_EVENT(non_standard_event,
>  
>  TRACE_EVENT(aer_event,
>  	TP_PROTO(const char *dev_name,
> +		 const char *bus_type,
>  		 const u32 status,
>  		 const u8 severity,
>  		 const u8 tlp_header_valid,
>  		 struct pcie_tlp_log *tlp),
>  
> -	TP_ARGS(dev_name, status, severity, tlp_header_valid, tlp),
> +	TP_ARGS(dev_name, bus_type, status, severity, tlp_header_valid, tlp),
>  
>  	TP_STRUCT__entry(
>  		__string(	dev_name,	dev_name	)
> +		__string(	bus_type,	bus_type	)
>  		__field(	u32,		status		)
>  		__field(	u8,		severity	)
>  		__field(	u8, 		tlp_header_valid)
> @@ -314,6 +316,7 @@ TRACE_EVENT(aer_event,
>  
>  	TP_fast_assign(
>  		__assign_str(dev_name);
> +		__assign_str(bus_type);
>  		__entry->status		= status;
>  		__entry->severity	= severity;
>  		__entry->tlp_header_valid = tlp_header_valid;
> @@ -325,8 +328,8 @@ TRACE_EVENT(aer_event,
>  		}
>  	),
>  
> -	TP_printk("%s PCIe Bus Error: severity=%s, %s, TLP Header=%s\n",
> -		__get_str(dev_name),
> +	TP_printk("%s %s Bus Error: severity=%s, %s, TLP Header=%s\n",
> +		__get_str(dev_name), __get_str(bus_type),
>  		__entry->severity == AER_CORRECTABLE ? "Corrected" :
>  			__entry->severity == AER_FATAL ?
>  			"Fatal" : "Uncorrected, non-fatal",


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.15])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id AB3A81BBBDA;
	Thu, 31 Oct 2024 16:25:44 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=192.198.163.15
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730391948; cv=none; b=CfNo/oy3847e6YRkQurlkyhbt6E3P9vRRo9dNdXvTrgXDDVhu1/nUZhsES9wUg0xtvp7TCDJM02onZaPhTLDYMjhnI4R5l28ZlmgAC5W0Y/DOF2i0Qh+uRZYg43QXQHvDMRymqibUg5w2QpsvNu/xfAiUDGTWiLNxcOFm4gemwU=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730391948; c=relaxed/simple;
	bh=JjE5x1eGkkaUcr30PcTK0N+rFI8UzjKI7Uv+XWdOyhI=;
	h=Message-ID:Date:MIME-Version:Subject:To:References:From:
	 In-Reply-To:Content-Type; b=USsMxMoeunqLXx5eqTRhrxkUVV3KeukFo4I+9z/nMhVpEAy99eGJm5n/hzUlprEKf5ccrFxpO27USryibTo2hF+ksWPajYa0HOiY2S23/P29UyANxbMcvAvmo+3lQ4ls68/ahRxCkkYmSPXHZHKX8kMCZznV4dd0Ppz76i6e2xo=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=dGy78zBy; arc=none smtp.client-ip=192.198.163.15
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="dGy78zBy"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1730391946; x=1761927946;
  h=message-id:date:mime-version:subject:to:references:from:
   in-reply-to:content-transfer-encoding;
  bh=JjE5x1eGkkaUcr30PcTK0N+rFI8UzjKI7Uv+XWdOyhI=;
  b=dGy78zByvdzLOnljGtIkzE5SdfXe5wlkictUq0S9eCFHWDntSSDWh2Lx
   oy1oC2rX+MolqMndTEJikP/y4oHtIux6BrkP6MKANIuZBigOwfWw47vPn
   OAf37jZ4UA+F3lHTTgmPvGx1h7wyw5h9s623h03mtu2UZtNySFYdX9+gm
   KYoBz1oEKIHKGdi+RcS302kzDHnxCQ/hnCx8U0dDzGsN8fqomm4Nx6UEY
   C2kde+sq3CA+lnNemT8QDsCAT9EPfgbk2IjRz2cx265RRv/u6VxJet6So
   AK5sqZIC0MDyirm2kguOT5ZFhy1/EPMGR1sKm+03H9JpDnp1rSFmrWDSv
   A==;
X-CSE-ConnectionGUID: OHHNNLvdQNy3zPEfmvA/kw==
X-CSE-MsgGUID: sj3Yf3RpQjeI0S4aXv2fAA==
X-IronPort-AV: E=McAfee;i="6700,10204,11242"; a="30259021"
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="30259021"
Received: from fmviesa001.fm.intel.com ([10.60.135.141])
  by fmvoesa109.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:25:44 -0700
X-CSE-ConnectionGUID: To6RB4RqS4iiAlKXKXqx8w==
X-CSE-MsgGUID: HaSDEYG2QKet9nTN59Uyeg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="113522642"
Received: from dwoodwor-mobl2.amr.corp.intel.com (HELO [10.125.108.232]) ([10.125.108.232])
  by smtpauth.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:25:42 -0700
Message-ID: <a68f58d4-d79d-4c91-855f-9bfb36013cc4@intel.com>
Date: Thu, 31 Oct 2024 09:25:41 -0700
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 03/14] cxl/pci: Introduce helper functions
 pcie_is_cxl() and pcie_is_cxl_port()
To: Terry Bowman <terry.bowman@amd.com>, ming4.li@intel.com,
 linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
 linux-pci@vger.kernel.org, dave@stgolabs.net, jonathan.cameron@huawei.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-4-terry.bowman@amd.com>
Content-Language: en-US
From: Dave Jiang <dave.jiang@intel.com>
In-Reply-To: <20241025210305.27499-4-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit



On 10/25/24 2:02 PM, Terry Bowman wrote:
> CXL and AER drivers need the ability to identify CXL devices and CXL port
> devices.
> 
> First, add set_pcie_cxl() with logic checking for CXL Flexbus DVSEC
> presence. The CXL Flexbus DVSEC presence is used because it is required
> for all the CXL PCIe devices.[1]
> 
> Add boolean 'struct pci_dev::is_cxl' with the purpose to cache the CXL
> Flexbus presence.
> 
> Add pcie_is_cxl() as a macro to return 'struct pci_dev::is_cxl',
> 
> Add pcie_is_cxl_port() to check if a device is a CXL root port, CXL
> upstream switch port, or CXL downstream switch port. Also, verify the
> CXL extensions DVSEC for port is present.[1]
> 
> [1] CXL 3.1 Spec, 8.1.1 PCIe Designated Vendor-Specific Extended
>     Capability (DVSEC) ID Assignment, Table 8-2
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>

Reviewed-by: Dave Jiang <dave.jiang@intel.com>
> ---
>  drivers/pci/pci.c             | 14 ++++++++++++++
>  drivers/pci/probe.c           | 10 ++++++++++
>  include/linux/pci.h           |  4 ++++
>  include/uapi/linux/pci_regs.h |  3 ++-
>  4 files changed, 30 insertions(+), 1 deletion(-)
> 
> diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
> index 7d85c04fbba2..c1b243aec61c 100644
> --- a/drivers/pci/pci.c
> +++ b/drivers/pci/pci.c
> @@ -5034,6 +5034,20 @@ static u16 cxl_port_dvsec(struct pci_dev *dev)
>  					 PCI_DVSEC_CXL_PORT);
>  }
>  
> +bool pcie_is_cxl_port(struct pci_dev *dev)
> +{
> +	if (!pcie_is_cxl(dev))
> +		return false;
> +
> +	if ((pci_pcie_type(dev) != PCI_EXP_TYPE_ROOT_PORT) &&
> +	    (pci_pcie_type(dev) != PCI_EXP_TYPE_UPSTREAM) &&
> +	    (pci_pcie_type(dev) != PCI_EXP_TYPE_DOWNSTREAM))
> +		return false;
> +
> +	return cxl_port_dvsec(dev);
> +}
> +EXPORT_SYMBOL_GPL(pcie_is_cxl_port);
> +
>  static bool cxl_sbr_masked(struct pci_dev *dev)
>  {
>  	u16 dvsec, reg;
> diff --git a/drivers/pci/probe.c b/drivers/pci/probe.c
> index 4f68414c3086..9324eb345f11 100644
> --- a/drivers/pci/probe.c
> +++ b/drivers/pci/probe.c
> @@ -1631,6 +1631,14 @@ static void set_pcie_thunderbolt(struct pci_dev *dev)
>  		dev->is_thunderbolt = 1;
>  }
>  
> +static void set_pcie_cxl(struct pci_dev *dev)
> +{
> +	u16 dvsec = pci_find_dvsec_capability(dev, PCI_VENDOR_ID_CXL,
> +					      PCI_DVSEC_CXL_FLEXBUS);
> +	if (dvsec)
> +		dev->is_cxl = 1;
> +}
> +
>  static void set_pcie_untrusted(struct pci_dev *dev)
>  {
>  	struct pci_dev *parent;
> @@ -1945,6 +1953,8 @@ int pci_setup_device(struct pci_dev *dev)
>  	/* Need to have dev->cfg_size ready */
>  	set_pcie_thunderbolt(dev);
>  
> +	set_pcie_cxl(dev);
> +
>  	set_pcie_untrusted(dev);
>  
>  	/* "Unknown power state" */
> diff --git a/include/linux/pci.h b/include/linux/pci.h
> index 106ac83e3a7b..d3b1af9fb273 100644
> --- a/include/linux/pci.h
> +++ b/include/linux/pci.h
> @@ -443,6 +443,7 @@ struct pci_dev {
>  	unsigned int	is_hotplug_bridge:1;
>  	unsigned int	shpc_managed:1;		/* SHPC owned by shpchp */
>  	unsigned int	is_thunderbolt:1;	/* Thunderbolt controller */
> +	unsigned int	is_cxl:1;               /* CXL alternate protocol */
>  	/*
>  	 * Devices marked being untrusted are the ones that can potentially
>  	 * execute DMA attacks and similar. They are typically connected
> @@ -743,6 +744,9 @@ static inline bool pci_is_vga(struct pci_dev *pdev)
>  	return false;
>  }
>  
> +#define pcie_is_cxl(dev) (dev->is_cxl)
> +bool pcie_is_cxl_port(struct pci_dev *dev);
> +
>  #define for_each_pci_bridge(dev, bus)				\
>  	list_for_each_entry(dev, &bus->devices, bus_list)	\
>  		if (!pci_is_bridge(dev)) {} else
> diff --git a/include/uapi/linux/pci_regs.h b/include/uapi/linux/pci_regs.h
> index 12323b3334a9..5df6c74963c5 100644
> --- a/include/uapi/linux/pci_regs.h
> +++ b/include/uapi/linux/pci_regs.h
> @@ -1186,9 +1186,10 @@
>  #define PCI_DOE_DATA_OBJECT_DISC_RSP_3_PROTOCOL		0x00ff0000
>  #define PCI_DOE_DATA_OBJECT_DISC_RSP_3_NEXT_INDEX	0xff000000
>  
> -/* Compute Express Link (CXL r3.1, sec 8.1.5) */
> +/* Compute Express Link (CXL r3.1, sec 8.1) */
>  #define PCI_DVSEC_CXL_PORT				3
>  #define PCI_DVSEC_CXL_PORT_CTL				0x0c
>  #define PCI_DVSEC_CXL_PORT_CTL_UNMASK_SBR		0x00000001
> +#define PCI_DVSEC_CXL_FLEXBUS				7
>  
>  #endif /* LINUX_PCI_REGS_H */


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.17])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id DFCCD1BBBD6;
	Thu, 31 Oct 2024 16:21:16 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=192.198.163.17
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730391679; cv=none; b=houYJ9LE/tRg5+ZVhON9OOsHg5Neb/sVreL56YWyuXTsF8gKfWk5dRAaNAAK2AzDT0HlabpQgWC/M4NUNOsEdhTbv3FIiw8E+9Vc7p++XIZu4lzHe5EZCM8Bwtfsw1SI2x0PHzjreiO1ccUGDr7Q/7SQUHW8RUjyBuOvXA+z22s=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730391679; c=relaxed/simple;
	bh=CdXx1JIY5Fppr8hDxAedta9mTqEBilxS5Z9Y6Eqje2w=;
	h=Message-ID:Date:MIME-Version:Subject:To:References:From:
	 In-Reply-To:Content-Type; b=aQlQesRXV+b9RqAXNLmS0cSjT7jK7iY4IiRIJH4aTbzvzfKnJwHZIPNbS9l0oJEif2Im0Pznl/oKb6uqfuU0d6Kqrsdg2Kbk04emmdDYEY5zaKwM9BdMi3DNXVAERl7anL9KwqPAsnDnqf71tzemO98PZcG7tgrGtKqvVuQAmV8=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=Epjb2Ij5; arc=none smtp.client-ip=192.198.163.17
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="Epjb2Ij5"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1730391677; x=1761927677;
  h=message-id:date:mime-version:subject:to:references:from:
   in-reply-to:content-transfer-encoding;
  bh=CdXx1JIY5Fppr8hDxAedta9mTqEBilxS5Z9Y6Eqje2w=;
  b=Epjb2Ij538rvP53P6InM6BW64Ec4BObvV+5BIqvhZytp+RxBdzuamu7U
   muiJYKrBtx9rteHlM/2LDWd1ej9hYQK8gWS7J6hC7f7oN9i53hLpYQTMy
   Q+qmfYn/OBF0Ke5s5fnsLlCw+rFgAWXYYA+XDPA511oo37n2773Bz/6zc
   ya41sdDARq2m7niUfKkuuINrF5p3GfjoUPW3d9V1ElBPLBT2X6N3WGgMN
   qzSM9xGiYJ/hZqQ7LPGUxKS7rXhd7Mp0u76OndGmQ+LIRp0M++cEZ/Air
   k6QBAKnpGfWG043H9y0zVlUHFfO+x8Jpr5aBoFhAJi1nEhcMN2fCjDLKx
   g==;
X-CSE-ConnectionGUID: FlUuuLjmTnegOI12apSvbA==
X-CSE-MsgGUID: bpSexOP4RC+bxAGOIFkqbQ==
X-IronPort-AV: E=McAfee;i="6700,10204,11242"; a="30032105"
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="30032105"
Received: from orviesa002.jf.intel.com ([10.64.159.142])
  by fmvoesa111.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:21:15 -0700
X-CSE-ConnectionGUID: M4UqB8K+S0Gk5DO42/vtnw==
X-CSE-MsgGUID: HMUn+UNyQRiKaB5oNU9rOw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="113458555"
Received: from dwoodwor-mobl2.amr.corp.intel.com (HELO [10.125.108.232]) ([10.125.108.232])
  by orviesa002-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:21:13 -0700
Message-ID: <32ee3523-9234-4e51-9199-5cbbabb5a0ed@intel.com>
Date: Thu, 31 Oct 2024 09:21:12 -0700
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 02/14] PCI/AER: Rename AER driver's interfaces to also
 indicate CXL PCIe port support
To: Terry Bowman <terry.bowman@amd.com>, ming4.li@intel.com,
 linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
 linux-pci@vger.kernel.org, dave@stgolabs.net, jonathan.cameron@huawei.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-3-terry.bowman@amd.com>
Content-Language: en-US
From: Dave Jiang <dave.jiang@intel.com>
In-Reply-To: <20241025210305.27499-3-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit



On 10/25/24 2:02 PM, Terry Bowman wrote:
> The AER service driver already includes support for CXL restricted host
> (RCH) downstream port error handling. The current implementation is based
> on CXL1.1 using a root complex event collector.
> 
> Rename function interfaces and parameters where necessary to include
> virtual hierarchy (VH) mode CXL PCIe port error handling alongside the RCH
> handling.[1] The CXL PCIe port error handling will be added in a future
> patch.
> 
> Limit changes to renaming variable and function names. No functional
> changes are added.
> 
> [1] CXL 3.1 Spec, 9.12.2 CXL Virtual Hierarchy
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>

Reviewed-by: Dave Jiang <dave.jiang@intel.com>
> ---
>  drivers/pci/pcie/aer.c | 28 ++++++++++++++--------------
>  1 file changed, 14 insertions(+), 14 deletions(-)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 13b8586924ea..fe6edf26279e 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -1029,7 +1029,7 @@ static int cxl_rch_handle_error_iter(struct pci_dev *dev, void *data)
>  	return 0;
>  }
>  
> -static void cxl_rch_handle_error(struct pci_dev *dev, struct aer_err_info *info)
> +static void cxl_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>  {
>  	/*
>  	 * Internal errors of an RCEC indicate an AER error in an
> @@ -1052,30 +1052,30 @@ static int handles_cxl_error_iter(struct pci_dev *dev, void *data)
>  	return *handles_cxl;
>  }
>  
> -static bool handles_cxl_errors(struct pci_dev *rcec)
> +static bool handles_cxl_errors(struct pci_dev *dev)
>  {
>  	bool handles_cxl = false;
>  
> -	if (pci_pcie_type(rcec) == PCI_EXP_TYPE_RC_EC &&
> -	    pcie_aer_is_native(rcec))
> -		pcie_walk_rcec(rcec, handles_cxl_error_iter, &handles_cxl);
> +	if (pci_pcie_type(dev) == PCI_EXP_TYPE_RC_EC &&
> +	    pcie_aer_is_native(dev))
> +		pcie_walk_rcec(dev, handles_cxl_error_iter, &handles_cxl);
>  
>  	return handles_cxl;
>  }
>  
> -static void cxl_rch_enable_rcec(struct pci_dev *rcec)
> +static void cxl_enable_internal_errors(struct pci_dev *dev)
>  {
> -	if (!handles_cxl_errors(rcec))
> +	if (!handles_cxl_errors(dev))
>  		return;
>  
> -	pci_aer_unmask_internal_errors(rcec);
> -	pci_info(rcec, "CXL: Internal errors unmasked");
> +	pci_aer_unmask_internal_errors(dev);
> +	pci_info(dev, "CXL: Internal errors unmasked");
>  }
>  
>  #else
> -static inline void cxl_rch_enable_rcec(struct pci_dev *dev) { }
> -static inline void cxl_rch_handle_error(struct pci_dev *dev,
> -					struct aer_err_info *info) { }
> +static inline void cxl_enable_internal_errors(struct pci_dev *dev) { }
> +static inline void cxl_handle_error(struct pci_dev *dev,
> +				    struct aer_err_info *info) { }
>  #endif
>  
>  /**
> @@ -1113,7 +1113,7 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>  
>  static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info)
>  {
> -	cxl_rch_handle_error(dev, info);
> +	cxl_handle_error(dev, info);
>  	pci_aer_handle_error(dev, info);
>  	pci_dev_put(dev);
>  }
> @@ -1491,7 +1491,7 @@ static int aer_probe(struct pcie_device *dev)
>  		return status;
>  	}
>  
> -	cxl_rch_enable_rcec(port);
> +	cxl_enable_internal_errors(port);
>  	aer_enable_rootport(rpc);
>  	pci_info(port, "enabled with IRQ %d\n", dev->irq);
>  	return 0;


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.17])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 72A5219C562;
	Thu, 31 Oct 2024 16:20:58 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=192.198.163.17
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730391661; cv=none; b=NdZBXwJSQC5w/PQMD70g+EOHOe5MfAY2Szbcak7aRN87T++I0aKYtnOZbSOaTx07B0Hbjl1HnyytOgtUYBctzItGZQ1+kZxuSrmR8l3di0qfL0R7rZLNtqK3ArOcqANnc3STAxlOnrvafIowm9MEdz32IJAe/D8Qs3++jahX4xU=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730391661; c=relaxed/simple;
	bh=tjreIR6D1ItokDQ+ixbb6MEE6BfjD32ie6X5Zd9jpps=;
	h=Message-ID:Date:MIME-Version:Subject:To:References:From:
	 In-Reply-To:Content-Type; b=SBb8UpXjh1Ak4rLFBKOKjAebjerPGGftSFe8STlX9VDZoVn5xtaJlLAc+ZGmPsrt7VjL2DcDpB7ag//MXD+qnFXob3iopWKVgcX1dck4lshaLSYuMet1dXKGC2xQnhb5lp3T3qag+kWLTULLubSMKpLemOdgNxPt1qFDlnfLawI=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=lNzvSsSP; arc=none smtp.client-ip=192.198.163.17
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="lNzvSsSP"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1730391660; x=1761927660;
  h=message-id:date:mime-version:subject:to:references:from:
   in-reply-to:content-transfer-encoding;
  bh=tjreIR6D1ItokDQ+ixbb6MEE6BfjD32ie6X5Zd9jpps=;
  b=lNzvSsSPtE4jomS1BiMPRuBpx2HF2kSY1DiYWx/OqqkFfM4uT5nPloOy
   5XZjVWTfJidbJkcXQQKCUZYX/mPUbKNRPGIydbojNAPpatzIb/F2M6tpn
   iUtC/FXCkFf4adu4aN6Ijwj8VnRyoTvW1ghPClGMafmcxphjBwOq/rD+T
   zfsO0MoI27AM5pD2g8yrsZa+/rKKZ5WEZnUHSkLtiHOv0pdrYx04st0dL
   QNbAfoR3L86JEEbWSp59RI0+8I+VkoRtZQ8yEp/vyrEB9efRYRXHFgyET
   m+aWDzcTrbYfuielqr3YlELu4L0pVnzP/NHp8Doz0yMGQuis5/KKyFx7i
   Q==;
X-CSE-ConnectionGUID: uKrZ0KA0TbKD3CtfFUOrYQ==
X-CSE-MsgGUID: F/6ACO03QBedGIsg+rQmJA==
X-IronPort-AV: E=McAfee;i="6700,10204,11242"; a="30032013"
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="30032013"
Received: from orviesa002.jf.intel.com ([10.64.159.142])
  by fmvoesa111.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:20:58 -0700
X-CSE-ConnectionGUID: Wnukmcy9TS6oisULlfZ1kA==
X-CSE-MsgGUID: +203foodRn6saXOI2z72Fg==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.11,247,1725346800"; 
   d="scan'208";a="113458440"
Received: from dwoodwor-mobl2.amr.corp.intel.com (HELO [10.125.108.232]) ([10.125.108.232])
  by orviesa002-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 Oct 2024 09:20:52 -0700
Message-ID: <a1721ede-6c51-429d-a820-85e11b21c441@intel.com>
Date: Thu, 31 Oct 2024 09:20:50 -0700
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 01/14] PCI/AER: Introduce 'struct cxl_err_handlers' and
 add to 'struct pci_driver'
To: Terry Bowman <terry.bowman@amd.com>, ming4.li@intel.com,
 linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
 linux-pci@vger.kernel.org, dave@stgolabs.net, jonathan.cameron@huawei.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-2-terry.bowman@amd.com>
Content-Language: en-US
From: Dave Jiang <dave.jiang@intel.com>
In-Reply-To: <20241025210305.27499-2-terry.bowman@amd.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit



On 10/25/24 2:02 PM, Terry Bowman wrote:
> CXL.io provides PCIe like protocol error implementation, but CXL.io and
> PCIe have different handling requirements.
> 
> The PCIe AER service driver may attempt recovering PCIe devices with
> uncorrectable errors while recovery is not used for CXL.io. Recovery is not
> used in the CXL.io recovery because of the potential for corruption on
> what can be system memory.
> 
> Create pci_driver::cxl_err_handlers similar to pci_driver::error_handler.
> Create handlers for correctable and uncorrectable CXL.io error
> handling.
> 
> The CXL error handlers will be used in future patches adding CXL PCIe
> port protocol error handling.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Reviewed-by: Dave Jiang <dave.jiang@intel.com>

> ---
>  include/linux/pci.h | 9 +++++++++
>  1 file changed, 9 insertions(+)
> 
> diff --git a/include/linux/pci.h b/include/linux/pci.h
> index 573b4c4c2be6..106ac83e3a7b 100644
> --- a/include/linux/pci.h
> +++ b/include/linux/pci.h
> @@ -886,6 +886,14 @@ struct pci_error_handlers {
>  	void (*cor_error_detected)(struct pci_dev *dev);
>  };
>  
> +/* CXL bus error event callbacks */
> +struct cxl_error_handlers {
> +	/* CXL bus error detected on this device */
> +	bool (*error_detected)(struct pci_dev *dev);
> +
> +	/* Allow device driver to record more details of a correctable error */
> +	void (*cor_error_detected)(struct pci_dev *dev);
> +};
>  
>  struct module;
>  
> @@ -956,6 +964,7 @@ struct pci_driver {
>  	int  (*sriov_set_msix_vec_count)(struct pci_dev *vf, int msix_vec_count); /* On PF */
>  	u32  (*sriov_get_vf_total_msix)(struct pci_dev *pf);
>  	const struct pci_error_handlers *err_handler;
> +	const struct cxl_error_handlers *cxl_err_handler;
>  	const struct attribute_group **groups;
>  	const struct attribute_group **dev_groups;
>  	struct device_driver	driver;


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (mail-mw2nam12on2043.outbound.protection.outlook.com [40.107.244.43])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E0E2221765C;
	Wed, 30 Oct 2024 21:34:57 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.244.43
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730324100; cv=fail; b=UAfJ/nOh3fNEFF4xMlph7i9emqZIx91dSLly2c7KZoa7iacbYDm0JzZaNYvTFPATNIudRSL21/2JGPSfDksIa3brytWkSTwW+NmvL2ByYagP4IeCq8p4dAO7ox6vOvKElm+QJi58M3rMkILd2G/kEIih9hKl4LZAPRAu1DLNWQI=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730324100; c=relaxed/simple;
	bh=1fW8A0vCuFzF5tTXG03/2QAuThLteg0IT59mQIBiuTE=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=CMV1H+gNRGfpP6o33IUsvw5fXPwxy6HA/tedEcqS8CW4Ks/eRRSUCrkr4Vu9n7o6dY8IOe5ap6sVf0I40zw7ho7modiZWvo/8/rCMK0bfL1/BpD8Kt76mG+n7p2EDgxoWagiaYgqbi6q2GhCiENZe27EAUqwHOXsewdvBB6DuEs=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=jvOCbekT; arc=fail smtp.client-ip=40.107.244.43
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="jvOCbekT"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=TZsZEIenFmwotdU0uJD//FVzOj5xOWg/qiCf2tYRQ9ksUgXjyMSj/5vPQ2bVuMxpqe9vuRZgueLQ7XpGvvR3caWewDCZy55+XlW7Kc8FYXxWP47QE8suvyoHCRLVxSHUVCThaXU5hwBR4LLZ5qdUb6BN0tyYY573EtWyqnplhGc4xsoBOO7XBL+A98KVVPm8GiiRIARwIp+E72pUCmNPin8hWskqrlzIPMnqz3D/2QKYx/q4lx2Pt2zHK5YjuSANXCCR2sHFawOoVKKtKawkElE1LozbW8QDFbPIT+lcALIIchZc0EI1+fckmWdSGZl2tZzVwTggw4aDdnjz8mAWag==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=Bvr2poXScmdbd0z9krZT2guoeXvvv3e4b7fjKVxLbN0=;
 b=sVNtfw+TwrXnuM+3MkdMRvPcBZKqTKnJF5imHQ/fDolyUxLQJOF6xuTQl0XdnuFNJk2zmbqKs3vKqLwYzAcwegnB/XlPBlSzTqTaE3yoxn6kXTwB/ZBV57xgZuXD47wA3Df4rEgyCyWd+nmjAdkpI4INIoBJJwrvPCeuQ0czBh9YKqNn9H1oX7kM5QVSMFquGD/Vsx0MJXoYTmoqKEnVshsHTQ0xjW+e4IUbuX69r2U/q2QvVIzaL29HwWPAHJMvbD2fxUtubk/XSHlPMxxnqM58nbaBIx+llbOv81xa3MdeVZb96qHgKozh9Rrw2DsJaK3fNB1PDieCYufBTS5ZKQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=Bvr2poXScmdbd0z9krZT2guoeXvvv3e4b7fjKVxLbN0=;
 b=jvOCbekTY7HoZXd3cWzVAPjaXxytISJi7GP1DoCF4HfW7prh2biSwDEew35bOjZQiIGmPuTT/yCHVe04oqatTRnNMlci6TT4+qRjN2gk8cGaiuUeThI1B7Axp9ElFB4DCh9CrurW4d2KpWkKki8Ls5egw0L82KzGTOjt4kuwWls=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 SJ2PR12MB8651.namprd12.prod.outlook.com (2603:10b6:a03:541::21) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.32; Wed, 30 Oct
 2024 21:34:54 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%3]) with mapi id 15.20.8114.015; Wed, 30 Oct 2024
 21:34:54 +0000
Message-ID: <995b6552-420e-4b8c-bb92-63a8666236ea@amd.com>
Date: Wed, 30 Oct 2024 16:34:51 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 14/14] cxl/pci: Add support to assign and clear
 pci_driver::cxl_err_handlers
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-15-terry.bowman@amd.com>
 <20241030161120.000078b2@Huawei.com>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <20241030161120.000078b2@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SN6PR08CA0019.namprd08.prod.outlook.com
 (2603:10b6:805:66::32) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|SJ2PR12MB8651:EE_
X-MS-Office365-Filtering-Correlation-Id: dd56064d-c55f-4ff9-f817-08dcf92ab139
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|1800799024|7416014|376014|366016;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?SDhRdG9DZWU4NjFWbzdGd3gxOTJ2NGp6ZU9hTkowUHIxMEJrRmZpYkpQQllF?=
 =?utf-8?B?RnFQVUNRM2tWcDhJaFBzcTlkck1WSnNqak5ncWt4cVhnSS9LTmdKS2tRQ3dI?=
 =?utf-8?B?aHY2MnlFY1M2OXdGVmRFZWxCTFNYMGZXMzFJVVZWNlY3aWxIekNLWjgvb09s?=
 =?utf-8?B?T2NaTXNsNUlZNEw4YWJQQnpTSS9sMkdKMDg0RlQzWWpzRVltWjdPTlkyeFRU?=
 =?utf-8?B?cjQwNzN0VjdydTl5bUJMRTFKTW1Gb0hWdi9PZlJrbTREMW5BZDBRNGdQTlpr?=
 =?utf-8?B?RzlOaC9iRUY4ZnA0QUFwaE9PTWkrbUFkQm42MGE0YlBpbGVDMXk2S2p1dWpR?=
 =?utf-8?B?Y21qaUhkcWZLeU9jVFN6THEwS2Y5WFNnY1AwcVZib3NYOEVoUnVrZis5RGc4?=
 =?utf-8?B?NVJqWlNzbVpZZDVnRzAwa3dSTXc5UlJiRGdESmFPUHF1NGkwdWhjK3orR21O?=
 =?utf-8?B?OXdlWERFQURGbzhINkRGb3ZHUi9XYWlTOUpraVFnWUdVQWdTQ2pQVkxRYXpQ?=
 =?utf-8?B?MFVhSG9xK2l6MldEOC81UXVpMHN5b2dabWFhaGJ0YnpVZjVONlJTai9tVFA5?=
 =?utf-8?B?d2JxbmtNSmhDTExEakgyR0JtbkQ4ZGp4NmlTVEJuRTR3aDJxNDJXSmcxM1NJ?=
 =?utf-8?B?dUZLbE1DVTE5R1hUY0RjL0dVVEU4YnFlbFBGQzdZWHZvdDd2Y0g2aDViOEVt?=
 =?utf-8?B?ckswcHlnQnRFNU1VRkR1TFloUDc5SkdiSGtEMkJ6NGMweXdjZmliS1M4MERm?=
 =?utf-8?B?UUwzdXFXREUzRUpXZGdncmVnRHRrSWNCUENlZkVaWjR0U1JqRTdNcTVnK08v?=
 =?utf-8?B?Tm9DTTByUlNLbWMvclBXVzl3R1gxTGNKM2dWd2FNOUJGMC9IdzYvSjNHNmNK?=
 =?utf-8?B?US9ZSlY5VmtNczRjeC9vU2hUSWg4eDRpcy82Zjh0N1l2cUdKbEhzU09VeDdn?=
 =?utf-8?B?Zm4wYzJZTVBnOVBPcFFBQlg3YUx5R2kvTlBpTkEzYzIwR2F5RVZrdmR2MGdj?=
 =?utf-8?B?UWNhODYyd1BZellHamtuR0FOTnFoVTZ6WTVxUWZDVHRZdnM4Y0UvWDNRZW9M?=
 =?utf-8?B?blBtR0ZFcGd5Y1dXN2pLdmVyU0hBOHhlUU5kb3EwaFZZTFNmeDc5NXUwRHRx?=
 =?utf-8?B?Vms1OHhzOE1pZGJRdVRLczE1Y09PTGhmV3kveUtBK0FGWFVaOFpPQXNUT3RH?=
 =?utf-8?B?bFpBVEpWUWxlbWV2cGlWQVVUeHBqaC9DR1pYS1dML1ZjNy9taHBQL1pyMk04?=
 =?utf-8?B?aUJ6aHJOVUNiY3NaaXB0bnF6SkZzUXcrMTNhZEVQZzJwb3VmLytROFdqVTU5?=
 =?utf-8?B?ZlozWGd5TWgyemlvdEtxSmQ3V0x3TzlPMjVLdzBWNmVLT2k1WmU1UnBnQWxq?=
 =?utf-8?B?UDRTM1kvQmV3RnNzN3pMWlpLckU0cEQvMEcrZVBBNU1TN2JlczQ4VzE5dEpy?=
 =?utf-8?B?K3orWGlyY1NGaTFCRGxYYk10eFc1Qmt1ZzZXdXZ5RUlGTjN2cWdNZVNyVDY5?=
 =?utf-8?B?MXpoM2MrNXhGQ3h6eGNSMDBuK3gxUk5tY25GN2M5bkR3WEY1THFiTkdpK0JR?=
 =?utf-8?B?KzdHbnh1bTVyZkdoNDM5bmNBQURXWU95VjBpVVBEd3QvLzk4N0N0S1ovUGpn?=
 =?utf-8?B?dG1IUi9ZWnhVcENCTU05MjJ3SS91TXIzWmxBM05SUjNoUkxESUpZZytYOGI5?=
 =?utf-8?B?U0MyNHpuWUFZY0hzVDhCbExNTnFKcktCWXdFOEFmNmliZVQxMUV2ZE9HOHNL?=
 =?utf-8?Q?BifXxuo12FU3yP7McF0190aJI4+Qlezym6l4rBm?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(1800799024)(7416014)(376014)(366016);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?UUx6V1NXVk53ZkRQbUtwb0dXaDhHcEt6bTFKL2ppSVNkZ3RjamNaaE1uNWR5?=
 =?utf-8?B?ekUxcUFkWWtnMTYvbmYzWWJQbDRRSEtLdTJKaWlkOHlDRkVTSU5tVGk4VXp2?=
 =?utf-8?B?M2RvWE1iaHY2Nkg0OS9VMWJZSWkxQjZXZm1JakFvVTIvMjRlTzJhWEpqblRn?=
 =?utf-8?B?cXBIZ3AyYU1Gck1xZFFOMy9RbFZLbFNaUmQ1eU1NRlM2Z3V5KzJ5Q29Mdi9q?=
 =?utf-8?B?VUppMnpDNm5FRWFIU2hQQnkyRW4xS0RXaitzSm1Sc0o5SlAzNnBWdC9BdjV0?=
 =?utf-8?B?YWJ4RXloRjZxWG9wRm9LZVZ6MXhlcjJjclMvMnVuYndXUFc5TkhEYlNqb0F6?=
 =?utf-8?B?c0ZZYllqc1JzUlFJNmE2NnBXaFZncXBUNHoxVVVwRTk1R3NsMGNmS0xBUHJT?=
 =?utf-8?B?NDhEMVN1ajJSNlVSSC9zRUdVeSttZzVxZURvRzZod2FKQmJibW05WFRpUWwx?=
 =?utf-8?B?NjUxNVU0ZHdmRHd6TFBJNE9CeWtqOWJhMkdzc3VYeDlwaXBwRUFYWXFJS1I5?=
 =?utf-8?B?cW5ocnFySzZndGd5bDBOajFsdkJlYjhkWVZ3SGphTG54QnRHdlhtRTFtVkEv?=
 =?utf-8?B?b0FhRnlLbkR4Q2t2TzBOWlFzWUlSSVhibytDTkxSU2NjM0dmSlpUeVBQNFNs?=
 =?utf-8?B?ZHdDVzUyUWFtZlh6eGVXaEFtc0RUZENoNytuek1rVDByMjRsb2VsOGN3c2lK?=
 =?utf-8?B?OVVBMTdpZU9sYWVtRGZNRXRhTW04eS9hRzIwZ2J0N1JRZFhCQ1U4cktRZXZK?=
 =?utf-8?B?SFpnVGxaMWs5cVBORXpTKyt0NEdhVWhFT0hRcGlQZ2xTSDdPY0lDNGhpRy94?=
 =?utf-8?B?ZS9ocytxaXRnQ1RJMEF1Vkt1NjIwTTRxZlhPOXFsWWc5amxUaVJsZ0NBM0hP?=
 =?utf-8?B?aTdQUm1ZVnlpMXFmS0RhUUIxRGJtd2lYaVVZc1JlSi9GcUpSTzFHNm85RkM4?=
 =?utf-8?B?RjhkWnBIZzFmM0cwdnZidjBtQkZMNlhhMDg5UzhKT003QnM4dmFLRzZxOTY0?=
 =?utf-8?B?RktQRmEwNHdnQ3RTOWRlVEtRTnVwU2NZaWhDNWljbmpNR0Y5S0toOW11VDQ2?=
 =?utf-8?B?Z0NLL2s1WTNONmRTdW5HSll3endLcnd0c1hwbnJHVVBJUENqajgxVzd1RXZN?=
 =?utf-8?B?YjhiWGNRVXY3em83QlI0d1hyc1g1SC9lT2lQSFcrRlV6bGcxR2JFRXZRYkwx?=
 =?utf-8?B?ODM3ZVJnT2NqTC84UHVIcWtGTTdLNmJURi9DK3J3VkExQXBZUjltaTBhK0RG?=
 =?utf-8?B?V0ZNcFNtVEhqMUcrV3MvdWVXWVFvMVpSUW9KNll3QldtWE1UdmNyNitxdnZO?=
 =?utf-8?B?cGNvMXpUMHdHRXpkcFVaSUxVb3prSnJmRUErN3FvRnZEK1Y1RFh5dDVwbXFq?=
 =?utf-8?B?R3dFRnBLTjJMaHdGN3Faay93dDBxWUZhTmlyZU00d2NldDNpRHFwMUlsTFpF?=
 =?utf-8?B?YVV0d3BoMVdKMkF2T2tiMVhyT0VlKzU4K0cyTjlZbjIzSE92Z2JwL1RZZVNi?=
 =?utf-8?B?V0ptdGRhbjljMURjZ3JPS0oyOWo2Njlrcy9QL2xPUHVOZzh5Q0l4aXUwRll2?=
 =?utf-8?B?SVVzRWNBV3k4MWNxdmFCV2FSSW1EK0ZZZ1pTN2pTYWFVakVXd3FNVTBGVzFL?=
 =?utf-8?B?eTJaZXkwSFpTclhFQWFTdlhXL0JnNXhKNUhTNGNSai9vanZwUEtGRjJOMFo4?=
 =?utf-8?B?MTMrdHRld2JILzZSVlRySURpZlF5cjV4amNncDdObGtzVkxQaWRYMUw3K1dQ?=
 =?utf-8?B?dUpzbzJhSCtKOFBWM0RhZjFVVTJLK3JOTmtGMXg3VCs0TkkwUTJkZXJzdzdS?=
 =?utf-8?B?TnVNdGxTeTZNVlowbWhsdFNLbHF3VGNwd3hEYTVlY05ublJQdWdVQUpXTm80?=
 =?utf-8?B?aGEzMXpweENoRHZ1WGgwOWlsbVkyTnFOSnczWnh5RTZONk42cWgxc2dZOXpF?=
 =?utf-8?B?MFB4Z2FWRk90TVk0enpBWEplL1NKNk9rNkdGS28waU5Hb1hUaFZtTnZ2bUtm?=
 =?utf-8?B?V1hhUTJSVkVLTE84NkdybFhKdldleVBuUnQ2K0NndGNHU3JOVEFVZ2VzRmlj?=
 =?utf-8?B?bTFZN3lUdlF5dHI0R1JXL2c5bmRiZGR0NjVkaUdueklxRlNUWUxzNDdNOVpo?=
 =?utf-8?Q?KC/qhZ3gQwbBwkbgNHQPRe0S1?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: dd56064d-c55f-4ff9-f817-08dcf92ab139
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Oct 2024 21:34:53.8621
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: V4swhu+7jQTGE84LP7FLjpC2UKWRuR8pYRb2mjxrIlKIGnDfKPBXZlwHHmgfxwgxX8AokkqXsz/lQc+NH698tw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SJ2PR12MB8651

Hi Jonathan,

On 10/30/2024 11:11 AM, Jonathan Cameron wrote:
> On Fri, 25 Oct 2024 16:03:05 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
>
>> pci_driver::cxl_err_handlers are not currrently assigned handler callbacks.
>> The handlers can't be set in the pci_driver static definition because the
>> CXL PCIe port devices are bound to the portdrv driver which is not CXL
>> driver aware.
>>
>> Add cxl_assign_port_error_handlers() in the cxl_core module. This
>> function will assign the default handlers for a CXL PCIe port device.
>>
>> When the CXL port (cxl_port or cxl_dport) is destroyed the CXL PCIe port
>> device's pci_driver::cxl_err_handlers must be set to NULL to prevent future
>> use. Create cxl_clear_port_error_handlers() and register it to be called
>> when the CXL port device (cxl_port or cxl_dport) is destroyed.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> One trivial comment inline. 
>> ---
>>  drivers/cxl/core/pci.c | 35 +++++++++++++++++++++++++++++++++++
>>  1 file changed, 35 insertions(+)
>>
>> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
>> index eeb4a64ba5b5..5f7570c6173c 100644
>> --- a/drivers/cxl/core/pci.c
>> +++ b/drivers/cxl/core/pci.c
>> @@ -839,8 +839,36 @@ static bool cxl_port_error_detected(struct pci_dev *pdev)
>>  	return ue;
>>  }
>>  
>> +static const struct cxl_error_handlers cxl_port_error_handlers = {
>> +	.error_detected	= cxl_port_error_detected,
>> +	.cor_error_detected	= cxl_port_cor_error_detected,
> Odd spacing?  I'd just use a single space as aligning these almost
> always makes for messy future patches.

Thanks for pointing out. I'll fix it.

Regards,
Terry

>> +};
>> +
>> +static void cxl_assign_port_error_handlers(struct pci_dev *pdev)
>> +{
>> +	struct pci_driver *pdrv = pdev->driver;
>> +
>> +	if (!pdrv)
>> +		return;
>> +
>> +	pdrv->cxl_err_handler = &cxl_port_error_handlers;
>> +}
>> +
>> +static void cxl_clear_port_error_handlers(void *data)
>> +{
>> +	struct pci_dev *pdev = data;
>> +	struct pci_driver *pdrv = pdev->driver;
>> +
>> +	if (!pdrv)
>> +		return;
>> +
>> +	pdrv->cxl_err_handler = NULL;
>> +}
>> +
>>  void cxl_uport_init_ras_reporting(struct cxl_port *port)
>>  {
>> +	struct pci_dev *pdev = to_pci_dev(port->uport_dev);
>> +
>>  	/* uport may have more than 1 downstream EP. Check if already mapped. */
>>  	if (port->uport_regs.ras) {
>>  		dev_warn(&port->dev, "RAS is already mapped\n");
>> @@ -853,6 +881,9 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
>>  		dev_err(&port->dev, "Failed to map RAS capability.\n");
>>  		return;
>>  	}
>> +
>> +	cxl_assign_port_error_handlers(pdev);
>> +	devm_add_action_or_reset(port->uport_dev, cxl_clear_port_error_handlers, pdev);
>>  }
>>  EXPORT_SYMBOL_NS_GPL(cxl_uport_init_ras_reporting, CXL);
>>  
>> @@ -865,6 +896,7 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
>>  {
>>  	struct device *dport_dev = dport->dport_dev;
>>  	struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport_dev);
>> +	struct pci_dev *pdev = to_pci_dev(dport_dev);
>>  
>>  	if (dport->rch && host_bridge->native_aer) {
>>  		cxl_dport_map_rch_aer(dport);
>> @@ -883,6 +915,9 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
>>  		dev_err(dport_dev, "Failed to map RAS capability.\n");
>>  		return;
>>  	}
>> +
>> +	cxl_assign_port_error_handlers(pdev);
>> +	devm_add_action_or_reset(dport_dev, cxl_clear_port_error_handlers, pdev);
>>  }
>>  EXPORT_SYMBOL_NS_GPL(cxl_dport_init_ras_reporting, CXL);
>>  


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (mail-bn8nam12on2047.outbound.protection.outlook.com [40.107.237.47])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 64E0F219CA8;
	Wed, 30 Oct 2024 21:30:59 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.237.47
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730323861; cv=fail; b=O9aKShoxSMA0LLtF5/f/+JJKTZCeB+VuiedrvoWSh2Gi+pyjofGNxr0mh7uULziHraxOUMOSrbfUI1bNC6I/EJ+cz7BsNurOHET9P23jXKCzSKkgjYqoZy4wq5JBMxRsUcx886/BjlUcITQlCWNRLKZxP9H58+k64H2Psgd00Go=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730323861; c=relaxed/simple;
	bh=YwjwGURVaYC2NtWPudhe0HlK/UE8tyoomslccByC+Xw=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=FpImNDhOfiZ0dO/L1GLEv8PKETe9lfZA/zf6AlNAdkvnj3D9dDzyTZar/OYxocJQcMRM24Hgl7rDaUqgamXiCjkqGOS/U8zvGZPsgdlDKpRZgei8BomXrLCYXZ1S0Xz5JET3jfbnTZxXCIyQD59RU+OOJf4jVtsilU13P63neII=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=ROU1knbs; arc=fail smtp.client-ip=40.107.237.47
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="ROU1knbs"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=YzeoVP/7YG76ntKVuqwQamKZowZh+ShLqEgeHQVwUBefQ87NX/943C+hx1UIizFd7579Qim2nDzmmrarNWU07+aTA8s8T/dFWcyGslalqjEAS0/QLiKGpHlqXmm5iPT5BWT5VVtFCnUn8d2qtVJfy7nakvxRxG0kfjT440n6+W7yviRC5J6PYFJNzYRwQXmVADFa8BwgUXo5eI9uuI0fyiVfQJS/fb82yvsYc1tvhSLjcFN9eVcz9IwGxn803fv4ztuf7qk5AFBVLaTSXLXnarlMgFqjCEhDKVKozDkFAJ6yCJIrqWb0jleHJeXGzFhRZP+vuwQQDrPGyguyJcSIAw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=VL4DPQGAOi61Kwhr8VVpUOJE6hK9LF+Gp+LRHby1160=;
 b=a3LLqHObeanybs7DXJS4w5VKfQZhc0CqFyQWcR7ZhLt3d5JoIqmhyYwQTMlLXm1oohtcsZN9Yuiu7c9cw4C6hz/39yubJPIlEZeSqiePRopwAjh3ntcV/NI3s8QlXwhLJPu/vxecB/T9755SsML+LGdQmIE5TtRMBw8wHgI3w9YMain3dpUPblB2r9LLhd6AJ7EU6f3Mj71h5xFW2AFvVoZizQ404gZbeh0vqUwhVc6qrEl8cD97LmmS0qr88kte6Ibw/jzIFKJ9+1ScsxS+uNLuG0/Wt2w2andYpQis1qosMOfEsqhLm9CF1jixZAYqe65tSXcxCACiHXFlMAXUiw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=VL4DPQGAOi61Kwhr8VVpUOJE6hK9LF+Gp+LRHby1160=;
 b=ROU1knbs8bo8KRCdEF/8f1NBDXQz1j7ItUflihqjPwflre9jcr4qqKXBNHu61cSHDZMRPR7fVj/2dT4DqQUfx3dGY43lvXSt3aui0umVa7yfzXLyY0jIQ4Eyq739iUybkAV7HZOaD4HvgfHEgOVDLCAa7ui8YUPD/W2z6ILbtgM=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 SJ2PR12MB7989.namprd12.prod.outlook.com (2603:10b6:a03:4c3::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8093.27; Wed, 30 Oct
 2024 21:30:56 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%3]) with mapi id 15.20.8114.015; Wed, 30 Oct 2024
 21:30:56 +0000
Message-ID: <eee81573-6c87-4f20-afec-37f114fa7759@amd.com>
Date: Wed, 30 Oct 2024 16:30:53 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 13/14] cxl/pci: Add trace logging for CXL PCIe port RAS
 errors
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com, shiju.jose@huawei.com,
 M.Chehab@huawei.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-14-terry.bowman@amd.com>
 <20241030160726.0000533e@Huawei.com>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <20241030160726.0000533e@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SN7P220CA0016.NAMP220.PROD.OUTLOOK.COM
 (2603:10b6:806:123::21) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|SJ2PR12MB7989:EE_
X-MS-Office365-Filtering-Correlation-Id: 640034cd-16ad-4c90-ea10-08dcf92a236c
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|376014|7416014|366016|1800799024;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?NkJsazNWcklpV042VFBhczBYd1UwNmYrSDFPeklIVjJMazJ6TTdoVlhxbFZU?=
 =?utf-8?B?NVhFOVNVM0dXMndWVXh6QmZIYlZLK0JoVHQ2MGhxcFBLWUl0YUZnaEdlQzYr?=
 =?utf-8?B?eXJRUkExVDlrQWx6M1BTRHQyaUNTMU1oOHR1UmdqS0lCdmxHWmtVSzFGMjdL?=
 =?utf-8?B?eGVmUk85cHcwV09NNmx5ZkUxUG9sMG52a2pEdzhuaVB6MGhrRkh5OTQrMWM5?=
 =?utf-8?B?eVJHTnNvbDE3bllYVTVyMFFqdk1vWmZ5UVlOeFRDU040OU5BVm5nUC91R3Jt?=
 =?utf-8?B?cGNESktMK3F3alMxSjJvZkJYYWFPODZ5cHhSc2lBS3ZBQTZodEVON0Y2dUxY?=
 =?utf-8?B?OEFPeDlodFhFd0pCVkMyY2xpRDk0SlVPdjduRWtVQUs3L1ViQTJzQ0JkQzhB?=
 =?utf-8?B?MkJZRWxNRkU2dHBqS3RxdnZmNXZseW1QaWFGQnhVMTd2MVNOaUFWUnZZOGNn?=
 =?utf-8?B?Sk9qQXZheTNHNlVXYlVIOEM5V0NObGszTjFadTgwOFVVZ25GMWpSZi9mcEVP?=
 =?utf-8?B?NnVmdlRYV3FFaXVPS3RzeG9YOFFjRWtlUXpEUWx4K3pwWGdZeVB2cXNwTndM?=
 =?utf-8?B?ZEs1TGF1V2piTXd4U1FmTVk3NWVSMmVjaFNUOExhNldNNGhWdEpPN3lSeDZ6?=
 =?utf-8?B?SHdDWlQrTzNKWUIrdmU3RjZuSVhFRmptV2p0MitONmM1SjFVWVUwQ1dncmZQ?=
 =?utf-8?B?VnBLQnZEdHc2a3NUYm1KNTdZaVdJTHdsOE9oaVRhQmRITnl4Qksxdm55OFVS?=
 =?utf-8?B?RnhiWG43a25nUlBFRi9hUGE2WkFoY1JnWGdrM0dkak1BN0ZJZHhvMUt0Mk9v?=
 =?utf-8?B?Z3NwY2gvZXRBRXgwdjRGcURYcmJ2M0owUE1Zd3o0eHlaL21Wa0I5NjRITjg3?=
 =?utf-8?B?TTc4OGlkRUZCS2FQQ1gzMncvU2xYRnZ2b0kxY00ybEJucFlnNWVJcWJTZXA4?=
 =?utf-8?B?RXNzVzFZSFprSThKTmFUeWNzcDNrSXZZK1dacE1tamZRKzlHNWVuUHR1QU5D?=
 =?utf-8?B?OXd5UGpvY2Z3YTNqak9DczJyeVpST0cxYmZ6emp3VldCZUFBNUJuYjliOVZO?=
 =?utf-8?B?ZUpSNmIvTzBtNU9qVlhFVUZaaW5adUVEdkduaEk0eG5iM1FPdFpCWXZyTUF6?=
 =?utf-8?B?TW5zN1U1TW1wNjE2RElINlpSeHF2RDhEVDZOeDNUZUJEWFozOFBZaXh6MFdY?=
 =?utf-8?B?NHpsV3ZkV0pJSjk2b2t1ZUJMMkJoVUtwZWhsKy9MckRVS1BWaUV6SmxtZjY3?=
 =?utf-8?B?S29WZzNidXJmaTNrdGtuUVlMWDV6ZSs1MzA4L3NoUmV1MkJoaC9laHg2VVE0?=
 =?utf-8?B?dHRNeERiRGh0OGdqSURzald5dnJkWnZ3TVpNV0lSU0lxSVVyc3BLMmg0clJn?=
 =?utf-8?B?bXhvSmlhZUdwd3lPRUQwMFl5Q0pHdXBsNmVsUmFLM1ZlUHp6dENOaVlTL3Zl?=
 =?utf-8?B?OUV5NFFlR21TV0lFVzhFbWNIdWkzNEdkUHh0a205dDZETGwzVDJBQ1R6dVJJ?=
 =?utf-8?B?a2c1YVVmWHdUMjlTOEhSUjFPYWU3amtORlI0N0w2aGZibXBQNUIxVExNREdD?=
 =?utf-8?B?L0ZIZmhhK0xPSjUwamFGMmtjOTNmbVRzejJNbU9pOW91cmh0TUhqQm92UFlP?=
 =?utf-8?B?VUsvdW16aU4yRjRCQjdHYUFvWkIrdGNaR2NJZEExUSs1WDJudVUyalUva2w0?=
 =?utf-8?B?VEdJSDZRb3Z3VDN0QmJUMEduUGQzSUpsc0c0Z1ZLVGNaeVU4dExWcVhKZFUz?=
 =?utf-8?Q?wYLNp2aARdJXs489Q4PaaI3apnOSqj3HDfNzWOE?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(376014)(7416014)(366016)(1800799024);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?QUJnN3RoYW1pd1lsd2ZHRmhzZVI4bjNuNDNzNzBzUk56TElibCswc2dwMWdm?=
 =?utf-8?B?czMrV0o0M05YeDZ3MUtSNGRZRS9VQkNvc2Y1M1RjWGRxcWs3U3pXM0VRbFNw?=
 =?utf-8?B?dTU1N3FqWWFhSkhMRXNLTWx3U2Nlb0JBcDVUVHdOZVplSURzSTljQTRoclB4?=
 =?utf-8?B?MEFxRDJoODdPTUFVOFYwSUdHQUYrM1FzVWJlVmluL0FQb3g2eVdOS1F4cldw?=
 =?utf-8?B?c0RBcFJIY3BWTjV3STc2Z1dBaVFFOGFGVDM1ZDREL0p3V1krOFAzcUx3Wnkz?=
 =?utf-8?B?UW1Rb2FFTjZEUXc2b3lFQTVaS0RHeHFIaEFHK1pRVnEwTzJ2Q2IzY2pGS2N3?=
 =?utf-8?B?ZFJhQjliWXFSK01obGF3VFBxaE1BcWlxMHZhcTJmbUhSWTFtb3lDWTE3S0do?=
 =?utf-8?B?WXdCWjcwcDV0M2o5VkRTQTlTK2FVSUFkOWFZRlhnL0FvU0ZOZy9UZWhYOXZH?=
 =?utf-8?B?SW1zU2p4TWhkamtBWWd5Vk56ZlNxTWljMC8yMVVmSWdaUmY5d0YrbmRzNEQ2?=
 =?utf-8?B?YWU4dVRmYXRncXVKMzVUMmJGTnkzUGJ4cjR0VVFKNDFQMXp2Nmx3cnp0dHZK?=
 =?utf-8?B?dXkzWVpPOU1XM3lIOHYzUnBYUUVrMVdOSGtaT3FBNEVtaWhodzQ3aXkxSGVi?=
 =?utf-8?B?SGFHTU1FMFJEaktzaWJJbnJEK1REbHk1eDNDLzNGVGdBb0ZVQWk5akgveVRH?=
 =?utf-8?B?OUIxR1M3WnZZZk8zb1BhRWl3RXV4Zm9wRG1iWnFDV3RaUG1pMU9wQkNlNHA4?=
 =?utf-8?B?Y2szcmIyRUM3VnhSWXVSb3pTcGFzTktrYm44K29nNjY1RDJCYkJDOTlaUzl2?=
 =?utf-8?B?a2g3NXFWMThMTEp3VmFIWEluK2w1WWV5endaa2tMaXp1MnRtNGdjTE5XVVRK?=
 =?utf-8?B?eDBIMjVUTFJ0ZFNBcmg1UDRiOW9NZm9pN0VtN0ROaW5iWVQyTHR5aEhjOGx1?=
 =?utf-8?B?TTNFUlRqN29TN0JHdkVqRGxjTUhzZkU1aTFlNkxvdTlCeXJHajBZbjZ6ejN3?=
 =?utf-8?B?WnV4djZiTFd5Q3BaUUVYOXhkLzB0Sy83VlRKZWVmVnFqdU1OUmVrUW9pMm15?=
 =?utf-8?B?THRJS3lTS3EyRmlvMitvM3ZhdWJ2NFVobytaTUpwSUVQVUE1Wi95TUZjMTdI?=
 =?utf-8?B?ZzdmSXIzYkdGOGYyejdmMk5NN0NlUXVpeTBZQUxaQllnUmN6TFN1UmdvWHpG?=
 =?utf-8?B?MmZxTllkMEFuaXlram9Ga3dpdVRKV1hNTHVMWm84ajlhUHBZbm5KSXJVeSs1?=
 =?utf-8?B?WFJRMkFvT3BqcGpLdllic0VMWmx2RVJqVDd6VE5lQmM1SXl3TUlRS1NGYTl4?=
 =?utf-8?B?clJUMGRJbFpnemtzNWh3VmZlU0l4MnZ5VVo5Y3VRUFhPalpVeS81TmFpa1NC?=
 =?utf-8?B?TjdsSWNyN050cjYvWVI3UGpXQmN3MW15eCsrTGQ3eWI1aDJQWGxONFJJY0li?=
 =?utf-8?B?aXJqVG9yQjNYZEFIbXdSd3pjTnZHNlpyRE5OdkR3c0NKSWpJd1lQVVZuS1ZI?=
 =?utf-8?B?aDVOajRvc1dtKzVCQkVaeDkzbWQ0NkhvSWZYMVRmWXZmeW5mWEdTaStEbjJl?=
 =?utf-8?B?amhRMnc4ZHdRQ0hBZ0w1TmNwazBnSnRYYTRUMmd3MUl6RkhLRWw5VUw3eWpt?=
 =?utf-8?B?SUVTUlIwSHFhaHFuUHJobHVpNmVETVdYVVFnT2hVdnpwU1JyT2N3MTBPT2hu?=
 =?utf-8?B?bFFuNkVBdUhveDNucmtHWm16YzI2VXhYS2ZaR3lwMUNzajZSdTlXSTJtTzg5?=
 =?utf-8?B?U3djbWtDQktzL1MvdDlCWE5KTVlOMUhQOVpBS25kcDhzVXZUR0Jkc1hPWVFl?=
 =?utf-8?B?Ukt4VjhWL1ZvblRCdWxSOHorc0pxNUlxb1ZYTm9rQ0RRR29CTllSTGZvMjdP?=
 =?utf-8?B?VkYzNDIrbEV1Qk5JWmEwakFzK0ZmRW41L3BDWUE5b0w1N3crQXV4cHlrUlhS?=
 =?utf-8?B?ZnhxYjBLZGxGT1hoRXc2QmFyd3U3Tnl0T2RQTnNiVGxVWWJRRVJNWnVVMUlE?=
 =?utf-8?B?S3A3cG40cFVUV2pZMmlWN2FMMG1JQXhYRnM2L1F3bndMWXJjNi84SnhCdHVW?=
 =?utf-8?B?cmhFSkNnY3hUZ2FuZGVWMGM2OE1BMEFhK3ZHaWIxMU1zN1k5RUxpNVNudjdn?=
 =?utf-8?Q?wxjrJFmkMCEsiuPwWVT915x4C?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 640034cd-16ad-4c90-ea10-08dcf92a236c
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Oct 2024 21:30:55.9613
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: IpsQzqqVbZ4XDVhvgl1IkFwup2EW1urFlb8uLXhmjxHUSA1g91CtEC9p1MXXxOtRImdxQAXCtJSlIag4J/jEtw==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SJ2PR12MB7989

Hi Jonathan,

On 10/30/2024 11:07 AM, Jonathan Cameron wrote:
> On Fri, 25 Oct 2024 16:03:04 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
>
>> The CXL drivers use kernel trace functions for logging endpoint and
>> RCH downstream port RAS errors. Similar functionality is
>> required for CXL root ports, CXL downstream switch ports, and CXL
>> upstream switch ports.
>>
>> Introduce trace logging functions for both RAS correctable and
>> uncorrectable errors specific to CXL PCIe ports. Additionally, update
>> the PCIe port error handlers to invoke these new trace functions.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> +CC Mauro and Shiju to give the tracepoint a sanity check and for
> awareness that we have something new to feed rasdaemon :)
>
> Jonathan
>
>> ---
>>  drivers/cxl/core/pci.c   | 16 ++++++++++----
>>  drivers/cxl/core/trace.h | 47 ++++++++++++++++++++++++++++++++++++++++
>>  2 files changed, 59 insertions(+), 4 deletions(-)
>>
>> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
>> index adb184d346ae..eeb4a64ba5b5 100644
>> --- a/drivers/cxl/core/pci.c
>> +++ b/drivers/cxl/core/pci.c
>> @@ -661,10 +661,14 @@ static void __cxl_handle_cor_ras(struct device *dev,
>>  
>>  	addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
>>  	status = readl(addr);
>> -	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
>> -		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
>> +	if (!(status & CXL_RAS_CORRECTABLE_STATUS_MASK))
>> +		return;
>> +	writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
>> +
>> +	if (is_cxl_memdev(dev))
>>  		trace_cxl_aer_correctable_error(to_cxl_memdev(dev), status);
>> -	}
>> +	else if (dev_is_pci(dev))
> How would you get here otherwise? Is it useful to know it is a pci device
> here?
This dev_is_pci() check is not necessary and can be removed.

>> +		trace_cxl_port_aer_correctable_error(dev, status);
>>  }
>>  
>>  static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
>> @@ -720,7 +724,11 @@ static bool __cxl_handle_ras(struct device *dev, void __iomem *ras_base)
>>  	}
>>  
>>  	header_log_copy(ras_base, hl);
>> -	trace_cxl_aer_uncorrectable_error(to_cxl_memdev(dev), status, fe, hl);
>> +	if (is_cxl_memdev(dev))
>> +		trace_cxl_aer_uncorrectable_error(to_cxl_memdev(dev), status, fe, hl);
>> +	else if (dev_is_pci(dev))
> as above.
Got it and thank you.
>> +		trace_cxl_port_aer_uncorrectable_error(dev, status, fe, hl);
>> +
>>  	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
>>  
>>  	return true;
>> diff --git a/drivers/cxl/core/trace.h b/drivers/cxl/core/trace.h
>> index 8672b42ee4d1..1c4368a7b50b 100644
>> --- a/drivers/cxl/core/trace.h
>> +++ b/drivers/cxl/core/trace.h
>> @@ -48,6 +48,34 @@
>>  	{ CXL_RAS_UC_IDE_RX_ERR, "IDE Rx Error" }			  \
>>  )
>>  
>> +TRACE_EVENT(cxl_port_aer_uncorrectable_error,
>> +	TP_PROTO(struct device *dev, u32 status, u32 fe, u32 *hl),
>> +	TP_ARGS(dev, status, fe, hl),
>> +	TP_STRUCT__entry(
>> +		__string(devname, dev_name(dev))
>> +		__string(host, dev_name(dev->parent))
>> +		__field(u32, status)
>> +		__field(u32, first_error)
>> +		__array(u32, header_log, CXL_HEADERLOG_SIZE_U32)
>> +	),
>> +	TP_fast_assign(
>> +		__assign_str(devname);
>> +		__assign_str(host);
>> +		__entry->status = status;
>> +		__entry->first_error = fe;
>> +		/*
>> +		 * Embed the 512B headerlog data for user app retrieval and
>> +		 * parsing, but no need to print this in the trace buffer.
> I'm not sure any printing as such goes on in the trace buffer. It is from
> the data in the trace buffer I think.
Right, the comment indicates it is not printed but included here because the buffer can be accessed by applications. Regards, Terry
>> +		 */
>> +		memcpy(__entry->header_log, hl, CXL_HEADERLOG_SIZE);
>> +	),
>> +	TP_printk("device=%s host=%s status: '%s' first_error: '%s'",
>> +		  __get_str(devname), __get_str(host),
>> +		  show_uc_errs(__entry->status),
>> +		  show_uc_errs(__entry->first_error)
>> +	)
>> +);
>> +
>>  TRACE_EVENT(cxl_aer_uncorrectable_error,
>>  	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status, u32 fe, u32 *hl),
>>  	TP_ARGS(cxlmd, status, fe, hl),
>> @@ -96,6 +124,25 @@ TRACE_EVENT(cxl_aer_uncorrectable_error,
>>  	{ CXL_RAS_CE_PHYS_LAYER_ERR, "Received Error From Physical Layer" }	\
>>  )
>>  
>> +TRACE_EVENT(cxl_port_aer_correctable_error,
>> +	TP_PROTO(struct device *dev, u32 status),
>> +	TP_ARGS(dev, status),
>> +	TP_STRUCT__entry(
>> +		__string(devname, dev_name(dev))
>> +		__string(host, dev_name(dev->parent))
>> +		__field(u32, status)
>> +	),
>> +	TP_fast_assign(
>> +		__assign_str(devname);
>> +		__assign_str(host);
>> +		__entry->status = status;
>> +	),
>> +	TP_printk("device=%s host=%s status='%s'",
>> +		  __get_str(devname), __get_str(host),
>> +		  show_ce_errs(__entry->status)
>> +	)
>> +);
>> +
>>  TRACE_EVENT(cxl_aer_correctable_error,
>>  	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status),
>>  	TP_ARGS(cxlmd, status),


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id EBB9D433D5;
	Wed, 30 Oct 2024 16:11:24 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730304688; cv=none; b=Xh8cR5OPMetA4+omSTvWFAO6PL+lkTGOistomrjSq574OY0ZYh+oZUQ62y88KC1DLZNGdJWDyCJAc0I2ZSxuHIDCviMfG2MFcXfNpNjeZWmqeNtHc63idHeu92xuFZEyC/Ek6NxHjnBZIhZPHfuhoT2DA3wbH+ncvhKeeb8bsDU=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730304688; c=relaxed/simple;
	bh=DQ9O8ymxBFCCJfWsoERVpeUQdjxuhmTL/esmCBryiJs=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=NHE3LVsTO4gmMxd92yTI1c7C8DbXef4XyxDYTiwuFmRWWqoB3iWgj6o8H4vD80M5Ll2pyodqLJ0HdSo1Mx8TIof2hwpvrfBwvnoMlKwGzq9bejJLPHm7mynjuY/tVVCZjIlV8KOt18M2G0EqLP6e1tOzyWbJclE8rqYZwLBIOu4=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.216])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4XdsXX188Hz6J9sx;
	Thu, 31 Oct 2024 00:10:04 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id AA97A140B39;
	Thu, 31 Oct 2024 00:11:22 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 17:11:21 +0100
Date: Wed, 30 Oct 2024 16:11:20 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 14/14] cxl/pci: Add support to assign and clear
 pci_driver::cxl_err_handlers
Message-ID: <20241030161120.000078b2@Huawei.com>
In-Reply-To: <20241025210305.27499-15-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-15-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500006.china.huawei.com (7.191.161.198) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:03:05 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> pci_driver::cxl_err_handlers are not currrently assigned handler callbacks.
> The handlers can't be set in the pci_driver static definition because the
> CXL PCIe port devices are bound to the portdrv driver which is not CXL
> driver aware.
> 
> Add cxl_assign_port_error_handlers() in the cxl_core module. This
> function will assign the default handlers for a CXL PCIe port device.
> 
> When the CXL port (cxl_port or cxl_dport) is destroyed the CXL PCIe port
> device's pci_driver::cxl_err_handlers must be set to NULL to prevent future
> use. Create cxl_clear_port_error_handlers() and register it to be called
> when the CXL port device (cxl_port or cxl_dport) is destroyed.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
One trivial comment inline. 
> ---
>  drivers/cxl/core/pci.c | 35 +++++++++++++++++++++++++++++++++++
>  1 file changed, 35 insertions(+)
> 
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index eeb4a64ba5b5..5f7570c6173c 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -839,8 +839,36 @@ static bool cxl_port_error_detected(struct pci_dev *pdev)
>  	return ue;
>  }
>  
> +static const struct cxl_error_handlers cxl_port_error_handlers = {
> +	.error_detected	= cxl_port_error_detected,
> +	.cor_error_detected	= cxl_port_cor_error_detected,
Odd spacing?  I'd just use a single space as aligning these almost
always makes for messy future patches.

> +};
> +
> +static void cxl_assign_port_error_handlers(struct pci_dev *pdev)
> +{
> +	struct pci_driver *pdrv = pdev->driver;
> +
> +	if (!pdrv)
> +		return;
> +
> +	pdrv->cxl_err_handler = &cxl_port_error_handlers;
> +}
> +
> +static void cxl_clear_port_error_handlers(void *data)
> +{
> +	struct pci_dev *pdev = data;
> +	struct pci_driver *pdrv = pdev->driver;
> +
> +	if (!pdrv)
> +		return;
> +
> +	pdrv->cxl_err_handler = NULL;
> +}
> +
>  void cxl_uport_init_ras_reporting(struct cxl_port *port)
>  {
> +	struct pci_dev *pdev = to_pci_dev(port->uport_dev);
> +
>  	/* uport may have more than 1 downstream EP. Check if already mapped. */
>  	if (port->uport_regs.ras) {
>  		dev_warn(&port->dev, "RAS is already mapped\n");
> @@ -853,6 +881,9 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
>  		dev_err(&port->dev, "Failed to map RAS capability.\n");
>  		return;
>  	}
> +
> +	cxl_assign_port_error_handlers(pdev);
> +	devm_add_action_or_reset(port->uport_dev, cxl_clear_port_error_handlers, pdev);
>  }
>  EXPORT_SYMBOL_NS_GPL(cxl_uport_init_ras_reporting, CXL);
>  
> @@ -865,6 +896,7 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
>  {
>  	struct device *dport_dev = dport->dport_dev;
>  	struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport_dev);
> +	struct pci_dev *pdev = to_pci_dev(dport_dev);
>  
>  	if (dport->rch && host_bridge->native_aer) {
>  		cxl_dport_map_rch_aer(dport);
> @@ -883,6 +915,9 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
>  		dev_err(dport_dev, "Failed to map RAS capability.\n");
>  		return;
>  	}
> +
> +	cxl_assign_port_error_handlers(pdev);
> +	devm_add_action_or_reset(dport_dev, cxl_clear_port_error_handlers, pdev);
>  }
>  EXPORT_SYMBOL_NS_GPL(cxl_dport_init_ras_reporting, CXL);
>  


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id D7C3836126;
	Wed, 30 Oct 2024 16:07:51 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730304476; cv=none; b=kJTP6OuiVtg+am/T/x4DxcqfiZA26JD7YhAzD0DLYuFyE/L+QUhsFcu6SdTHLJsacjfRgmkL/rezvd/i9/GEGwhVFWblS55PuSGaEcNuNMuPiYN1/JCSJf/xMq/6RDD17wOhgRZIod+iKpW6hjpVq5tNrBbZPAgkCMhNjdzyr9c=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730304476; c=relaxed/simple;
	bh=sYrCCtSJMM/vNIM5bemKiWX1x209eI6n/2Wtl3Rrhiw=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=ovPc7mrZ2pu7Lx5VQocKKB5dPnCxEcaWJfpVh+avdkbl7uj/iZXI3KagnV7nChorCKFIy/fDx/0mbD9ns5Oqqbtei7LTC4n5Wo7ot0N2iaxPZH8e+Jgm6mlF60bFoXaz5FTvA0ABxyRyX+gP7SE2uvRfqcrLNLuRNBzGafrjeps=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4XdsQk6fm8z6K6kk;
	Thu, 31 Oct 2024 00:05:02 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 65497140B38;
	Thu, 31 Oct 2024 00:07:28 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 17:07:27 +0100
Date: Wed, 30 Oct 2024 16:07:26 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>,
	<shiju.jose@huawei.com>, <M.Chehab@huawei.com>
Subject: Re: [PATCH v2 13/14] cxl/pci: Add trace logging for CXL PCIe port
 RAS errors
Message-ID: <20241030160726.0000533e@Huawei.com>
In-Reply-To: <20241025210305.27499-14-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-14-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500006.china.huawei.com (7.191.161.198) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:03:04 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> The CXL drivers use kernel trace functions for logging endpoint and
> RCH downstream port RAS errors. Similar functionality is
> required for CXL root ports, CXL downstream switch ports, and CXL
> upstream switch ports.
> 
> Introduce trace logging functions for both RAS correctable and
> uncorrectable errors specific to CXL PCIe ports. Additionally, update
> the PCIe port error handlers to invoke these new trace functions.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
+CC Mauro and Shiju to give the tracepoint a sanity check and for
awareness that we have something new to feed rasdaemon :)

Jonathan

> ---
>  drivers/cxl/core/pci.c   | 16 ++++++++++----
>  drivers/cxl/core/trace.h | 47 ++++++++++++++++++++++++++++++++++++++++
>  2 files changed, 59 insertions(+), 4 deletions(-)
> 
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index adb184d346ae..eeb4a64ba5b5 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -661,10 +661,14 @@ static void __cxl_handle_cor_ras(struct device *dev,
>  
>  	addr = ras_base + CXL_RAS_CORRECTABLE_STATUS_OFFSET;
>  	status = readl(addr);
> -	if (status & CXL_RAS_CORRECTABLE_STATUS_MASK) {
> -		writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
> +	if (!(status & CXL_RAS_CORRECTABLE_STATUS_MASK))
> +		return;
> +	writel(status & CXL_RAS_CORRECTABLE_STATUS_MASK, addr);
> +
> +	if (is_cxl_memdev(dev))
>  		trace_cxl_aer_correctable_error(to_cxl_memdev(dev), status);
> -	}
> +	else if (dev_is_pci(dev))
How would you get here otherwise? Is it useful to know it is a pci device
here?
> +		trace_cxl_port_aer_correctable_error(dev, status);
>  }
>  
>  static void cxl_handle_endpoint_cor_ras(struct cxl_dev_state *cxlds)
> @@ -720,7 +724,11 @@ static bool __cxl_handle_ras(struct device *dev, void __iomem *ras_base)
>  	}
>  
>  	header_log_copy(ras_base, hl);
> -	trace_cxl_aer_uncorrectable_error(to_cxl_memdev(dev), status, fe, hl);
> +	if (is_cxl_memdev(dev))
> +		trace_cxl_aer_uncorrectable_error(to_cxl_memdev(dev), status, fe, hl);
> +	else if (dev_is_pci(dev))
as above.

> +		trace_cxl_port_aer_uncorrectable_error(dev, status, fe, hl);
> +
>  	writel(status & CXL_RAS_UNCORRECTABLE_STATUS_MASK, addr);
>  
>  	return true;
> diff --git a/drivers/cxl/core/trace.h b/drivers/cxl/core/trace.h
> index 8672b42ee4d1..1c4368a7b50b 100644
> --- a/drivers/cxl/core/trace.h
> +++ b/drivers/cxl/core/trace.h
> @@ -48,6 +48,34 @@
>  	{ CXL_RAS_UC_IDE_RX_ERR, "IDE Rx Error" }			  \
>  )
>  
> +TRACE_EVENT(cxl_port_aer_uncorrectable_error,
> +	TP_PROTO(struct device *dev, u32 status, u32 fe, u32 *hl),
> +	TP_ARGS(dev, status, fe, hl),
> +	TP_STRUCT__entry(
> +		__string(devname, dev_name(dev))
> +		__string(host, dev_name(dev->parent))
> +		__field(u32, status)
> +		__field(u32, first_error)
> +		__array(u32, header_log, CXL_HEADERLOG_SIZE_U32)
> +	),
> +	TP_fast_assign(
> +		__assign_str(devname);
> +		__assign_str(host);
> +		__entry->status = status;
> +		__entry->first_error = fe;
> +		/*
> +		 * Embed the 512B headerlog data for user app retrieval and
> +		 * parsing, but no need to print this in the trace buffer.
I'm not sure any printing as such goes on in the trace buffer. It is from
the data in the trace buffer I think.

> +		 */
> +		memcpy(__entry->header_log, hl, CXL_HEADERLOG_SIZE);
> +	),
> +	TP_printk("device=%s host=%s status: '%s' first_error: '%s'",
> +		  __get_str(devname), __get_str(host),
> +		  show_uc_errs(__entry->status),
> +		  show_uc_errs(__entry->first_error)
> +	)
> +);
> +
>  TRACE_EVENT(cxl_aer_uncorrectable_error,
>  	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status, u32 fe, u32 *hl),
>  	TP_ARGS(cxlmd, status, fe, hl),
> @@ -96,6 +124,25 @@ TRACE_EVENT(cxl_aer_uncorrectable_error,
>  	{ CXL_RAS_CE_PHYS_LAYER_ERR, "Received Error From Physical Layer" }	\
>  )
>  
> +TRACE_EVENT(cxl_port_aer_correctable_error,
> +	TP_PROTO(struct device *dev, u32 status),
> +	TP_ARGS(dev, status),
> +	TP_STRUCT__entry(
> +		__string(devname, dev_name(dev))
> +		__string(host, dev_name(dev->parent))
> +		__field(u32, status)
> +	),
> +	TP_fast_assign(
> +		__assign_str(devname);
> +		__assign_str(host);
> +		__entry->status = status;
> +	),
> +	TP_printk("device=%s host=%s status='%s'",
> +		  __get_str(devname), __get_str(host),
> +		  show_ce_errs(__entry->status)
> +	)
> +);
> +
>  TRACE_EVENT(cxl_aer_correctable_error,
>  	TP_PROTO(const struct cxl_memdev *cxlmd, u32 status),
>  	TP_ARGS(cxlmd, status),


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E7A4F1F426F;
	Wed, 30 Oct 2024 16:03:54 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730304237; cv=none; b=CvEiOqA0YwrEVNbGj7qbX+03KgmQjur/BoLNrLvjhsaTK3RbgxY9SvqiPEb84/oE0sMj2YgjbZfeDwRs87zsQov/W2jHp0iulxkZypGl+rLjYzLxpdVThirwZp8+RLrS99Ilxrhn45AFY3yKyuU/b/818u4rHhRhf3k6JJPOK6o=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730304237; c=relaxed/simple;
	bh=MIFL21hA3B+jSnmLceMUs1JbFhcBmdo1m9jwxnwcY7U=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=nOXNY4hy0gZSFEgMnR8HK6UGUV1J59z4l6PpxTqFcoIuW5wQi4tagFEhANOgL+2oEybzb+gtg2R6ilYZdpWzGAkIxCNTg1Oh3sBF8Qfa9VP8JHci34Hs1HEMKxut3AtTNyF2+BM214iTjo1m3NvUDupFT7iUQKTKjZPW/hoRvKQ=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4XdsHn1SJpz6GBVS;
	Wed, 30 Oct 2024 23:59:01 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 7F4E01400D3;
	Thu, 31 Oct 2024 00:03:52 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 17:03:51 +0100
Date: Wed, 30 Oct 2024 16:03:49 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 12/14] cxl/pci: Add error handler for CXL PCIe port
 RAS errors
Message-ID: <20241030160349.000040d4@Huawei.com>
In-Reply-To: <20241025210305.27499-13-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-13-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500006.china.huawei.com (7.191.161.198) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:03:03 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> Introduce correctable and uncorrectable CXL PCIe port handlers.
> 
> Use the PCIe port's device object to find the matching port or
> downstream port in the CXL topology. The matching port or downstream
> port will include the cached RAS register block.
> 
> Invoke the existing __cxl_handle_ras() with the RAS registers as a
> parameter. __cxl_handle_ras() will log the RAS errors (if present)
> and clear the RAS status.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---
>  drivers/cxl/core/pci.c | 59 ++++++++++++++++++++++++++++++++++++++++++
>  1 file changed, 59 insertions(+)
> 
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index bb2fd7d04c4f..adb184d346ae 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -772,6 +772,65 @@ static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
>  	writel(aer_cmd, aer_base + PCI_ERR_ROOT_COMMAND);
>  }
>  
> +static int match_uport(struct device *dev, const void *data)
> +{
> +	struct device *uport_dev = (struct device *)data;
> +	struct cxl_port *port;
> +
> +	if (!is_cxl_port(dev))
> +		return 0;
> +
> +	port = to_cxl_port(dev);
> +
> +	return port->uport_dev == uport_dev;
> +}
> +
> +static void __iomem *cxl_pci_port_ras(struct pci_dev *pdev)
> +{
> +	struct cxl_port *port __free(put_cxl_port) = NULL;
> +	void __iomem *ras_base = NULL;
> +
> +	if (!pdev)
> +		return NULL;
> +
> +	if ((pci_pcie_type(pdev) == PCI_EXP_TYPE_ROOT_PORT) ||
> +	    (pci_pcie_type(pdev) == PCI_EXP_TYPE_DOWNSTREAM)) {
> +		struct cxl_dport *dport;
> +
> +		port = find_cxl_port(&pdev->dev, &dport);

Scope of port is messy as the constructor and destructor
are not well associated. I'd drag a copy into each leg so they can
remain closer to each other.
Or don't use __free() as it's not adding much here.

> +		ras_base = dport ? dport->regs.ras : NULL;	
> +	} else if (pci_pcie_type(pdev) == PCI_EXP_TYPE_UPSTREAM) {
> +		struct device *port_dev;
> +
> +		port_dev = bus_find_device(&cxl_bus_type, NULL, &pdev->dev,
> +					   match_uport);
> +		if (!port_dev)
> +			return NULL;
> +
> +		port = to_cxl_port(port_dev);
> +		ras_base = port ? port->uport_regs.ras : NULL;
> +	}
> +
> +	return ras_base;
> +}
> +
> +static void cxl_port_cor_error_detected(struct pci_dev *pdev)
> +{
> +	void __iomem *ras_base = cxl_pci_port_ras(pdev);
> +
> +	__cxl_handle_cor_ras(&pdev->dev, ras_base);
> +}
> +
> +static bool cxl_port_error_detected(struct pci_dev *pdev)
> +{
> +	void __iomem *ras_base = cxl_pci_port_ras(pdev);
> +	bool ue;
> +
> +	ue = __cxl_handle_ras(&pdev->dev, ras_base);
> +
> +	return ue;
> +}
> +
>  void cxl_uport_init_ras_reporting(struct cxl_port *port)
>  {
>  	/* uport may have more than 1 downstream EP. Check if already mapped. */


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CA130213EFF;
	Wed, 30 Oct 2024 15:59:04 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730303946; cv=none; b=Vo8Lh3zXILVN15biyGrz2yy3EHwhgVe3qPuR1s/1soJUtuI83qiUljdi3vCFYYIEwDbWqVBOnmq8zSWW+OkmRsPUbWVrLyU4QdDo1UKh7iu9lQduWoGX3Syllfw/vM8gMy+wfI2WyDeDs6fL7WmsHbwluoBosqn3aO1dMwTpzb4=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730303946; c=relaxed/simple;
	bh=izOxNBnMwK2x6wyTuLbVwu4dfjX4Be2CqB/qIo5sb04=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=diZbDK2+G/Vt3HMAMyjQBM9QUye4GvLCauMeze5dCs/cy5JCCGzDbqRF7p+USZLy/WThhHY7a8i6elhgU1PQ4F164KyY+otVUyu75eubwXBbW6AIYRld6ZGLgsXmwNhaByEB618csLUAWPZlqhin6GxOHVOclUNBT9RUeu/hJiE=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4XdsF13FGyz6K6XB;
	Wed, 30 Oct 2024 23:56:37 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id E06C9140453;
	Wed, 30 Oct 2024 23:59:02 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 16:59:02 +0100
Date: Wed, 30 Oct 2024 15:59:00 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 11/14] cxl/pci: Rename RAS handler interfaces to also
 indicate CXL PCIe port support
Message-ID: <20241030155900.00000867@Huawei.com>
In-Reply-To: <20241025210305.27499-12-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-12-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500012.china.huawei.com (7.191.174.4) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:03:02 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

Patch title looks unconnected to the patch. Cut and paste issue?


> CXL PCIe port protocol error handling support will be added to the
> CXL drivers in the future. In preparation, rename the existing
> interfaces to support handling all CXL PCIe port protocol errors.
> 
> The driver's RAS support functions currently rely on a 'struct
> cxl_dev_state' type parameter, which is not available for CXL port
> devices. However, since the same CXL RAS capability structure is
> needed across most CXL components and devices, a common handling
> approach should be adopted.
> 
> To accommodate this, update the __cxl_handle_cor_ras() and
> __cxl_handle_ras() functions to use a `struct device` instead of
> `struct cxl_dev_state`.
> 
> No functional changes are introduced.
> 
> [1] CXL 3.1 Spec, 8.2.4 CXL.cache and CXL.mem Registers
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Otherwise looks fine


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 2425D1F426F;
	Wed, 30 Oct 2024 15:56:57 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730303822; cv=none; b=oXMEd6adNJa6oUSrwLBornyAfx3QvGqcck1ScOWgEtfInW1eoqUGZhetQScWIGSfaHO0TWtxA5GB58/Xv7zHzSEES7xtHmCdiViHs9j0FDjL+loTUm21DPBsS2XvPNb4wPx/Vnec8teUPFlA6NlAKZPuxGp6lijqNegvAK0XhM4=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730303822; c=relaxed/simple;
	bh=lcdcICWIZgCkqKauCNeaI97hVgNLtvxkqm7Mte9DYXI=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=eUSH8o0HB9SZGemg6iV1O4pqHhHDtjbpGTwg0Tr9Ts+YnzlrQA7u/pBoOfyLvgZvjANvSaGSLc6CrJDTIHBy5FKbw70dVFAAZFwpxgvj0rkH0xMwvPkexlBiH8idGecD2+YsDJZop0cu6Sc7LewpvhU9Lik1TlJSquG40TA9fBw=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4XdsBZ015Dz6K5yj;
	Wed, 30 Oct 2024 23:54:30 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 71259140158;
	Wed, 30 Oct 2024 23:56:55 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 16:56:54 +0100
Date: Wed, 30 Oct 2024 15:56:53 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 10/14] cxl/pci: Map CXL PCIe upstream switch port RAS
 registers
Message-ID: <20241030155653.000079e9@Huawei.com>
In-Reply-To: <20241025210305.27499-11-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-11-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500006.china.huawei.com (7.191.161.198) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:03:01 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> Add logic to map CXL PCIe upstream switch port (USP) RAS registers.
> 
> Introduce 'struct cxl_regs' member into 'struct cxl_port' to store a
> pointer to the upstream port's mapped RAS registers.
> 
> The upstream port may have multiple downstream endpoints. Before
> mapping AER registers check if the registers are already mapped.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---
>  drivers/cxl/core/pci.c | 17 +++++++++++++++++
>  drivers/cxl/cxl.h      |  4 ++++
>  drivers/cxl/mem.c      |  3 +++
>  3 files changed, 24 insertions(+)
> 
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index 0bb61e39cf8f..53ca773557f3 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -773,6 +773,23 @@ static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
>  	writel(aer_cmd, aer_base + PCI_ERR_ROOT_COMMAND);
>  }
>  
> +void cxl_uport_init_ras_reporting(struct cxl_port *port)
> +{
> +	/* uport may have more than 1 downstream EP. Check if already mapped. */
> +	if (port->uport_regs.ras) {
> +		dev_warn(&port->dev, "RAS is already mapped\n");
As before, warn seems inappropriate from the comment.
> +		return;
> +	}
> +
> +	port->reg_map.host = &port->dev;
> +	if (cxl_map_component_regs(&port->reg_map, &port->uport_regs,
> +				   BIT(CXL_CM_CAP_CAP_ID_RAS))) {
> +		dev_err(&port->dev, "Failed to map RAS capability.\n");
> +		return;
> +	}
> +}
> +EXPORT_SYMBOL_NS_GPL(cxl_uport_init_ras_reporting, CXL);
> +


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id BF04C1F4711;
	Wed, 30 Oct 2024 15:55:50 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730303754; cv=none; b=iPBkGptL7J88ElakmXciQHcA3BSKe+EcpLChJ9gLppaESlHlq8LnO+w9QBqh9aNMrWuwQAIf+aSoAfzDjM5tgO9XqpEiEHzsFzDH40pVHXWiCnhzUOultrlqlqdEP68wo6+xmOwJPUkLzJ2T5rJQr1ZJiLciUHQTexWoMrEjhz4=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730303754; c=relaxed/simple;
	bh=maB6ZWiHIOmuX5pTEMBGTeAhT8UyG24m9ddpkq+e+7s=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=hrYBZxdHQgLp0fym4+L/FzDmu3Yna8s2mrLpaWuNIu2MRRwAOIa2RO9bFqWoextWUyf7HNNwuY6e2EcxHRjI4d2lWsWBHjGqAQY97g5cnKK/T5mWkBKreRjKm7YY9y1SU4NPG2Yya+2n84Siw/uoq816Bjp9AwdkbRvtiBx64ms=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4Xds6S6x6Hz6GDrs;
	Wed, 30 Oct 2024 23:50:56 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 765A5140CB1;
	Wed, 30 Oct 2024 23:55:48 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 16:55:47 +0100
Date: Wed, 30 Oct 2024 15:55:46 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 09/14] cxl/pci: Map CXL PCIe root port and downstream
 switch port RAS registers
Message-ID: <20241030155546.0000701f@Huawei.com>
In-Reply-To: <20241025210305.27499-10-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-10-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500006.china.huawei.com (7.191.161.198) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:03:00 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> Map RAS registers for CXL PCIe root port and downstream RAS registers.
> 
> Refactor and rename cxl_setup_parent_dport() to be cxl_init_ep_ports_aer().
> Update the function to iterate an endpoint's parent downstream switch
> ports and parent root ports. It maps the RAS registers for each
> CXL downstream switch port and CXL root port iterated.
> 
> Move the RAS register map logic from cxl_dport_map_regs() into
> cxl_dport_init_ras_reporting(). This eliminates an unnecessary helper.
> cxl_dport_map_regs() can be removed.

looks to be called cxl_dport_map_ras()


> 
> cxl_dport_init_ras_reporting() must check for previously mapped registers
> within the topology, particularly with CXL switches. Endpoints under a
> CXL switch may share parent ports or downstream ports, ensure the ports'
> registers are only mapped once.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---
>  drivers/cxl/core/pci.c | 38 +++++++++++++++++---------------------
>  drivers/cxl/cxl.h      |  6 ++----
>  drivers/cxl/mem.c      | 26 ++++++++++++++++++++++++--
>  3 files changed, 43 insertions(+), 27 deletions(-)
> 
> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index 5b46bc46aaa9..0bb61e39cf8f 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -749,18 +749,6 @@ static void cxl_dport_map_rch_aer(struct cxl_dport *dport)
>  	}
>  }
>  
> -static void cxl_dport_map_ras(struct cxl_dport *dport)
> -{
> -	struct cxl_register_map *map = &dport->reg_map;
> -	struct device *dev = dport->dport_dev;
> -
> -	if (!map->component_map.ras.valid)
> -		dev_dbg(dev, "RAS registers not found\n");
> -	else if (cxl_map_component_regs(map, &dport->regs.component,
> -					BIT(CXL_CM_CAP_CAP_ID_RAS)))
> -		dev_dbg(dev, "Failed to map RAS capability.\n");
> -}
> -
>  static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
>  {
>  	void __iomem *aer_base = dport->regs.dport_aer;
> @@ -790,20 +778,28 @@ static void cxl_disable_rch_root_ints(struct cxl_dport *dport)
>   * @dport: the cxl_dport that needs to be initialized
>   * @host: host device for devm operations
>   */
> -void cxl_dport_init_ras_reporting(struct cxl_dport *dport, struct device *host)
> +void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
>  {
> -	dport->reg_map.host = host;
> -	cxl_dport_map_ras(dport);
> -
> -	if (dport->rch) {
> -		struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport->dport_dev);
> -
> -		if (!host_bridge->native_aer)
> -			return;
> +	struct device *dport_dev = dport->dport_dev;
> +	struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport_dev);
>  
> +	if (dport->rch && host_bridge->native_aer) {
>  		cxl_dport_map_rch_aer(dport);
>  		cxl_disable_rch_root_ints(dport);
>  	}
> +
> +	/* dport may have more than 1 downstream EP. Check if already mapped. */
> +	if (dport->regs.ras) {
> +		dev_warn(dport_dev, "RAS is already mapped\n");
The comment suggests this is normal? If so why the dev_warn?

> +		return;
> +	}
> +
> +	dport->reg_map.host = dport_dev;
> +	if (cxl_map_component_regs(&dport->reg_map, &dport->regs.component,
> +				   BIT(CXL_CM_CAP_CAP_ID_RAS))) {
> +		dev_err(dport_dev, "Failed to map RAS capability.\n");
> +		return;
> +	}
>  }
>  EXPORT_SYMBOL_NS_GPL(cxl_dport_init_ras_reporting, CXL);

>  struct cxl_decoder *to_cxl_decoder(struct device *dev);
> diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
> index a9fd5cd5a0d2..240d54b22a8c 100644
> --- a/drivers/cxl/mem.c
> +++ b/drivers/cxl/mem.c
> @@ -45,6 +45,29 @@ static int cxl_mem_dpa_show(struct seq_file *file, void *data)
>  	return 0;
>  }
>  
> +static bool dev_is_cxl_pci(struct device *dev, u32 pcie_type)

Seems to only match ports, so that name is a little misleading.

> +{
> +	struct pci_dev *pdev;
> +
> +	if (!dev_is_pci(dev))
> +		return false;
> +
> +	pdev = to_pci_dev(dev);
> +	if (!pcie_is_cxl_port(pdev))
> +		return false;
> +
> +	return (pci_pcie_type(pdev) == pcie_type);
> +}
> +

>  static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
>  				 struct cxl_dport *parent_dport)
>  {
> @@ -62,6 +85,7 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
>  
>  		ep = cxl_ep_load(iter, cxlmd);
>  		ep->next = down;
> +		cxl_init_ep_ports_aer(ep);
The comment above this is talking about various stuff, not including that it now
maps the aer registers. Probably need to add something if this is the appropriate
place to do it.
>  	}
>  
>  	/* Note: endpoint port component registers are derived from @cxlds */
> @@ -166,8 +190,6 @@ static int cxl_mem_probe(struct device *dev)
>  	else
>  		endpoint_parent = &parent_port->dev;
>  
> -	cxl_dport_init_ras_reporting(dport, dev);
> -
>  	scoped_guard(device, endpoint_parent) {
>  		if (!endpoint_parent->driver) {
>  			dev_err(dev, "CXL port topology %s not enabled\n",


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (mail-bn8nam12on2082.outbound.protection.outlook.com [40.107.237.82])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4D5B6213127;
	Wed, 30 Oct 2024 15:55:04 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.237.82
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730303706; cv=fail; b=qohKmVWeYqag32VW7EITjjs5rSemCFe66U+qPnt+Yw7jCtEkc3gGcijJL+Xo2fJHm8wTpk7kOjui5mb8KPIMLUIFYik2buUOJYs/6rdIAE809IW2HOuagjdWzbova5cRyz2kvWcGLXsuBi6b+4gNMgAgW2iIncGfqDoanPZBm+4=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730303706; c=relaxed/simple;
	bh=YIVNe6razYrj9YqkkPk7GX+Ygagy4PRE5p43Kc/HOek=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=Xi3K1pScGMtG9M7Y1+F2qdcqAjNp53VgPdXjCcD9lFtvweqs8A8UDd8g8TKBxCipBsSR0Vu5pF/aJdHefpC10nhvz4jgLfm5Hgbo7eRvUlzIPlOqxnhLt2Eg7WrfqXbciFMiv8lYr3jo2Lt0zYCctL+oaWIGaN8qOMqvPR5G1SI=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=R7BNLjgv; arc=fail smtp.client-ip=40.107.237.82
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="R7BNLjgv"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=I6NfaWIgtIRVUiyBPNVagIFBhjBwipBnpLA53h77CBIEAFcOPQRKGTRAWNMxrHJqkJ8ne+RKVrfviz16zAqb7Knoa5609Rg1f3tLh5cpVF6uL2eC+Lw8f13GDxzsfsCjFHDu2MIwhy6EgSsu+JPVX9UYKNBYWZFR5TBg+AuRPh78RCUGg17o9lfh+k91D4Lz/T/sUe+kxne5rsujOLSa2/mV6c2JCZbO8Az/j+dA9EorTG0obxKShxD2NzI+99rmAmjpU/PJGRNJfahov9CoblETcDuD7KXC3UR9Vicdc2Erhu7760rta/KT/wQSC+KcZsDlDK9ybo236RCgGIz5XA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=YIVNe6razYrj9YqkkPk7GX+Ygagy4PRE5p43Kc/HOek=;
 b=nDPiY2RP6Tt1RRAhT/p+CvDNHQ8IklqMMRwVta+oM05/wjsVDQsgyevTOo/BbHJkRvSC/7Qrvb0sDTMtgMxMwxfPCtpTELZm/JCVAIIFd59lnWHsstAEGkYCo8aIwr5S3rfeUTx8calfxavVPDWpSix266ReaNdzIPP9a3NKGIkw6ufC2agA0cQXMdtpB3vB/6H5hNZkga75vnevwedBhTbEnOjnWOVXUCsLXwZ0R15B5oVikDZQJ7ni1NJJIkaq0OObWr2scc0cD/L3Z9VvH4brIyeGEW7s7gZeTpciGkbE+IG4g2mI/Cak0gmcB8kvdzRVOu+ENoXOL3Ol4OWHVg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=YIVNe6razYrj9YqkkPk7GX+Ygagy4PRE5p43Kc/HOek=;
 b=R7BNLjgvGfnX7UCYtvfTWkkcRkCJRK7VMBPdojPxNg76U6RKBBfUI4IecXyyJsUXBt9kIJZ/pZXZbZTamCsJp/7EIr2MY6yEQzvOLazFz5+KLxzKA3a6yA6sgusbmQvTwH6eNx7z2c0e2DoZlyMstnmlVTglPr2cJKsijhGC0Qg=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 DM6PR12MB4234.namprd12.prod.outlook.com (2603:10b6:5:213::18) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.8093.27; Wed, 30 Oct 2024 15:55:01 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%3]) with mapi id 15.20.8114.015; Wed, 30 Oct 2024
 15:55:01 +0000
Message-ID: <64ecef65-6935-4e97-b028-fd11369b14ab@amd.com>
Date: Wed, 30 Oct 2024 10:54:58 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 08/14] cxl/pci: Change find_cxl_ports() to non-static
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-9-terry.bowman@amd.com>
 <20241030154536.00006f9a@Huawei.com>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <20241030154536.00006f9a@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA0PR11CA0158.namprd11.prod.outlook.com
 (2603:10b6:806:1bb::13) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|DM6PR12MB4234:EE_
X-MS-Office365-Filtering-Correlation-Id: 6854e8c1-6fd6-4394-9a9b-08dcf8fb3663
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|1800799024|366016|7416014|376014;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?VTlMMThhYWRQVGRLSHllR0Mva2tCUW1aSll1TDJ6U04vaTdobHdtTHgxVlJO?=
 =?utf-8?B?NThHNlBBN0pVcWo4ODBqVFNob1B1NjdUMGVQVGpBTVJaZE9UV1JNUUFldkUw?=
 =?utf-8?B?WUtGTmJWR3NGeVp1R1FHRDYzQURrblZKZ3NlbXNLby9IVDVoNXcxVThycE9E?=
 =?utf-8?B?bGdxMWI1SlR3dkp3ZVlwWU5CVHc0enlXUVcyNlZ5SFRLNEhPdFFqUFlIaVBC?=
 =?utf-8?B?NUZHYWdEeXVxd2xQR2FHM0Y0R2gwSVppN3hrTncvL2ZlWnVVZ3VWTHRSczU5?=
 =?utf-8?B?cWhFZldoaXNjZ0NBcG1zdmhvOWpBNXVCL3FPdE45WDUrQ3gveU9icGtsUXZn?=
 =?utf-8?B?Tm15bnFxTll0dlFGRStDc0x6MUk1aFdDWjZqTlJGUWgvN1BoNEZocHVUZXVB?=
 =?utf-8?B?bEV4WGZpMzJudGw0Y0dBRlg4QW0xd2tadit3anhMYnMxblFmUVlvOEtVb1ND?=
 =?utf-8?B?VUd4ZzhTZEp5ZlZUMDNVU0I2R0NMSlhKb0dGMnJPVzNSYTdHUktjU3FNQVhK?=
 =?utf-8?B?M1FJVUlRcjNyS1VSVjUrNGg5eFZkUERWV1lTN09KZ0lld25IV3hxL1QzZHE2?=
 =?utf-8?B?SW5lVFM2bUZDdnlJd2JVRDVPQWJmSERGZXpuYk5CYU8reGdwTVdUWDFhWG1w?=
 =?utf-8?B?RGNubzhmNEg2VThCNEg2NFUxRTFaRWQ4am9zVS9SZ1RhZFZzTGdnWDg4QUJz?=
 =?utf-8?B?bUNyZ1pnbmQrYnRSbkh6b0M3Q3ZEZHkyd1NDL2E0R25GcTdqaTdLUkE1WXd5?=
 =?utf-8?B?cW1ZcStkc01PNjdIWWhic0JLMndHVDF4bmJmdHhxalRuNkd0V0VrRDRPOE5i?=
 =?utf-8?B?aTM3OXRCUEZmdVovc2tSRU41TmcrRzNIT0JnYVZWQW42VVZuUE83dmdiNmJs?=
 =?utf-8?B?UTh2aENTWTVsekZ5Yi9ZaENPYS9QWXZNeHUxRGNCQk5nMklPY3BEQngyeUIx?=
 =?utf-8?B?UlRSam1RUHJlbHVLS3psZ0x2SXNXTHBSMmxxRG83ZUZtRVAvSDVtMHdSVW9k?=
 =?utf-8?B?K2t5ZXEyK3hxaW83S2VDNHNNcEpaeUJKVXJpWGFJNTc1VzZTZDU2c3ZTRlBX?=
 =?utf-8?B?bmFKbnlGNnQzT284ZGpOa3Fab3dRN0duZHd0emE1OUhkSXRyQVlBNEJ5dWRU?=
 =?utf-8?B?RXpnUHgzdmlTYUxleXhocmw3QUFVV3dnMzJqa2dkalFWZE9URldpd1VLaGkv?=
 =?utf-8?B?NTVHQm1zRlRNdXhvYUhDTmVvUnNhQzZjSTN6Q1V0czJ1ZHBnVklPN1hicGtx?=
 =?utf-8?B?SUh3czZULzV0MTlPVHJiZlhoR28zYk9KTkROUmhpQ05WQ2w4QXpYR3Rad2RW?=
 =?utf-8?B?b1AySXp6bnFyVWNzRGFMZEt5Sk1xc0ZSMTdjalAzUElVTk0wZll2eWZYUzB0?=
 =?utf-8?B?NXZZbXZ6akJIY1ZRcUpWUkpJamY3L1pQeWdxZzZLQ3lYYzNDeTVhQUdGaFVi?=
 =?utf-8?B?Q1BDTkkxQ2FFSnpBWmUzZDVVUXRZdjkyN1EwWkNHMk5yLzZNSXBJZjJrVFhJ?=
 =?utf-8?B?VklTZk9XdHNqQXd3QWF5Q3pESE5CYW1IYTRndVJWeHJ2NXp1THZHUTVNZ1U3?=
 =?utf-8?B?anQ2Z1pmTmhwQ05BOGxDRm50dEQ5RWxkdkQ0NXk2RjFwbk1WcWJjZjhmak4r?=
 =?utf-8?B?UUVBQzNzcUkzWm9McXljQzlTdU90aS9BVUcvMG9IRmY4b3JPSk9OeDhRS3ow?=
 =?utf-8?B?ODloSHZaeDBLMWJGMUo3UEUvdzBXV2t2TUYzc1FzM1JlUGhTR3ViN1dVSFdT?=
 =?utf-8?Q?Den2c60SgX6KrXbbLlyu/8JYUx9M2naLDT9pThE?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(1800799024)(366016)(7416014)(376014);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?bmc5UGRMaDhPTytiRzRUU3NkY0N6aFFFNThXdTh4Y3M3Y0ozTWNsRTJvMG5s?=
 =?utf-8?B?eGtHVFRqRzRrUFJrbUlJbzdJTWJRUmo2aklSNXlrS3ZQL2hLNTZCdytlU3dQ?=
 =?utf-8?B?SHVDb3dVTzYraDhLaXNYUVNySVNMWmVvR05SU3pZNWpGdWlmaER1Zk9LS0pK?=
 =?utf-8?B?a0s3N2lLVkRjaVg5NU5CMUMwd2RJdzJxcnhNVkNrUmhGQ05kWDZjMmxNKyt6?=
 =?utf-8?B?eUZBdkg3aHpaUHowc1krWndDK0JZdlkxTzFQV3NBYVRxZHVxcUJ4YzB3L0Fy?=
 =?utf-8?B?ZzhqdDZ5ME9mV1FtZVdSSkIxODc0MTFuV2JLUW5sY2dlSG9INUNOMXpCWVhS?=
 =?utf-8?B?ZEU2QjFLSHByS084QWtaaC9tSkFXY0ZoTFBTZm9IS2hBN0k5NzdpUk9nM2lo?=
 =?utf-8?B?RThzSHFwOVZqaWsybXZUUi9xWWxVT3dNNGVlTFdkTjFrN0xnRG1pRlFzM2dN?=
 =?utf-8?B?M1BRY1VRVjFQT2k2bWl2cE9NZlRkQlJTcFZndlQrUlpjUDd3RjdTVHpWSG5Z?=
 =?utf-8?B?dlRKMHZsWE1pVHNyVklsM3p3cWlqUFBxSzVCMnpPelZ2YVVuRnpremRBTnZM?=
 =?utf-8?B?dkJwNTdrNytwOWVmeHRpOFJJdzl2RGhHMGl6emJqSjdmVjVBYzZTRnJvL0Fv?=
 =?utf-8?B?N0pGYzhEeW0vOWhXdUZqejRHNUJJNmF4OUxWeXhTNkc5QlpaV3RXa3NXZDkx?=
 =?utf-8?B?eksvMXZsOVlNUTdFajBJUXR3Ulhpc1JLMzc1aTRTaWV2cG1XQ2NFY09RcWVs?=
 =?utf-8?B?UVB0RWdvdlVuV21LQTA3c0tqZUorTWExOTJuRVh6YXd2Z3VsSDhkdTFBeGZS?=
 =?utf-8?B?cHYzU0YvUldpcXpYcWxiZDY0Y0tyOFlXUlg1MmFXT1V0enA0Mm1tYU92cXNs?=
 =?utf-8?B?emU3cnZnd3ZlNWduRXJnbVpuTzJhdnRlcU4xcEZhL1V0dmVta3cvNk9Jd0NZ?=
 =?utf-8?B?dWN6dmsyczZKc2FyODZUQm04Y3BEeXNta0R5UjEra0Rjek9XMzNBbnd4YUJO?=
 =?utf-8?B?RzFLaWg4Ri9vMTg4K3U1QnF5QlFKUHpwMHBnRlBsT2dNTDBEM1RIem5WSkNm?=
 =?utf-8?B?MHA2d3VIc0RGY25rYzIwa3Z6bVc1TzVldFFiSDgvV285aUJWdlh5RHZGVkFm?=
 =?utf-8?B?ZkJqems3WEh4YURhRklPbjA0SUp4NUQ0WW5WYitpZ2NrbVVIbEFNeXFnT2Ix?=
 =?utf-8?B?bG1MZGswd2o4U3JRUnhlbXdPb3JpdTlrdU4wbVZDRzJKL2Y4SlNrMW1UMlZs?=
 =?utf-8?B?WkhYdk0rQTI5QXc1V3Y5YTdjWHJmYnV1VlI3Yk1NTWVpblAvTEVIcktlVllR?=
 =?utf-8?B?MVltY3YwOGMvOFF3dW11WE9MeVJCL2pwK1NUMUpxR1doNkxnRU1lZENKV1ky?=
 =?utf-8?B?QUtURUFES2FLZllzbEFEeFFTVzZ1Nzcvb0RycW9JbS9wbVNrZllrSm9jem1N?=
 =?utf-8?B?MDAwbExQZjkzU0xqVC9qZTc3MG1LUVRlVlZtd1JFcjlMS3E5OXA0ZHJmWjZy?=
 =?utf-8?B?SFh1U3R3Yi9TRUJmM1lQSGdHbUx3L25nSWhFaFUrZnYvdzRMOEptak9lYXhO?=
 =?utf-8?B?R2xVNlNXbzZ3Skp1RDFFNmIvMFJXekNRYlJ5TWg0U1UyOHJ1dFVRYVBhdUF0?=
 =?utf-8?B?Qm9yUFV1NG5zWXhzNnFGUjdjQ25kRUV1VmxqT090eFpkOFhjZHVGcEhxZU5P?=
 =?utf-8?B?ZFZJWFlmR0w2alJZWU52TDJFcmxnTjMxSWI2ZWFpbWlGeEJ5RktvUmFyaVVw?=
 =?utf-8?B?UEFWUlp4OG5YY1lTbXNGN3pvaVE1UEFVMEMvK3BaSDVCa2svTmdEbXYrQ3VP?=
 =?utf-8?B?REl1MkRKUlFLTzl4djUrZEtuY0NSdFRuNU50RnYxQS9Ram1SRW9hbXhRYUJn?=
 =?utf-8?B?amhDR0FOQUN5WnQwdTRjajBSQVVuMVd3RnNTeE5JcUR6N3ZLWk1GWjBzT2gx?=
 =?utf-8?B?QVR5NWJOYVJMUXZHY3ZMVVM4SGh1U0gwdkw0WkVWcG41ZWRqcEZkakx1b2xw?=
 =?utf-8?B?VGNzR1ZjcVV1dUdWUGtrSkR4cGlHRngvRTNld3FCSGg2bzZCNWUwU0Q5eE94?=
 =?utf-8?B?TnlxeFdNajlPblNnbWNrZGFQWTIvZGkrdUFUaENWUXMyRk1IcGVha0VhcU1z?=
 =?utf-8?Q?SSekR5ygSxXJEJNj0uuZKhTTG?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 6854e8c1-6fd6-4394-9a9b-08dcf8fb3663
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Oct 2024 15:55:01.4517
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: IChpJz42pw2JLALaAoY+UR0xWQ1XY2UWObBEsCNtSsqZxxlWC3x/HWs/uV/5jeoI6sJGLmZvVxS5/Bj13AV9Ow==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB4234

Hi Jonathan,

I added comments below.

On 10/30/2024 10:45 AM, Jonathan Cameron wrote:
> On Fri, 25 Oct 2024 16:02:59 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
>
> Typo in title. Shouldn't be plural ports.

I'll remove the plural. Thanks.

>> CXL PCIe port protocol error support will be added in the future. This
>> requires searching for a CXL PCIe port device in the CXL topology as
>> provided by find_cxl_port(). But, find_cxl_port() is defined static
>> and as a result is not callable outside of this source file.
>>
>> Update the find_cxl_port() declaration to be non-static.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Doesn't hugely matter but I'd do this later in the series as it's
> not used until patch 12 (I think) and by then reviewers may have forgotten what
> it is for.
>
> Fine otherwise,
>
> Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

Thanks. I will move this patch to later.

Regards,
Terry


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM04-BN8-obe.outbound.protection.outlook.com (mail-bn8nam04on2049.outbound.protection.outlook.com [40.107.100.49])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id C3DF8213EF0;
	Wed, 30 Oct 2024 15:51:24 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.100.49
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730303487; cv=fail; b=NFVHyOBUlxP9Yx5gsEsg6qCLFtn+Vb8zF+RTgdvuk3j2WU+ngLvUQUmvSbiTQe4zBqFWQEOiZR/0PwuYLIA8H5WDRFiiioPcP+A5XgF07ZTamgRp0IxkRPYHFcBV0Uj3GwlyGX6YsKe+q49JgUPnqGBX60Bj/GwQEHqVH3FoTUM=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730303487; c=relaxed/simple;
	bh=fDsT3V0t5enZ09Lb4gBsjRdnA5mN5zq4lkHMixRfa7c=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=TbX94/DwxHLr+wMxGN++emQSnbLFs4wdQOApQ9JSwCUkkSy4MPbXz+bB2ilWb65d7/iqx01HL5is+Cn/x2MZpXKLVN6jOfMY48HJG5pgHeQhVDGYm2Ha9QaB7CsfAQ6T8SyW8V4ui14o8Miz0RquexO0dBn78HgQiJ5lwO1GFGs=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=U6NdSzJn; arc=fail smtp.client-ip=40.107.100.49
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="U6NdSzJn"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=x01SC2iiex7/oQ5WsMF+JD6P0pckbfOjv8v5KeHWwPEMdOUfdnzuv6NOB54pSHmD8cXaXjdC3sGG93B3KRc7sLgx1EX4u38xUFzyXaMx5FMJieZD6kGNPSsQ/VWKKnsQuIr560RfIf+KIT7Qy3e3pDF6Flpi6oZo1v0weD8B3Q+Qr+VrSKKywL0/cYY107EJPFG2RhO9W8JDFiW+LB0DlLu+jgPqlCQEmJg7IiqpLDcMSRlVzsqYICE2Q2n9SoXHKbWnQJj0SJo0ZtiSbpOEMc/FVu7eHzrsKHfSIUY4Mn1bjEt+u2HbCqzYk600rhEggEkCiEmPgWMoFdHg8Mm7zw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=2fFy6Hdg3gntNS0vGH9F4+YQOiCxBdKlzsTt7tc8ROs=;
 b=nON7vBJFf3dYBZPNjI72MhRIdJbj0RURjR7uUsWnb2PgkPc5mW8wAu8ZZhkxnZ2FZYvGTPrcEBHv2K6yJi5QvO5UAp6GIaEvL6j+zzOiTDz7E9beGv9E1AoZ0XJLdSIEiFRRBkZ0ybsi4CIHaDmoCPFZ5x6/7aSNz4Q8oi3sc78SYByT3+tWdcOe7XXD+jvN3K4+V92zDZDfXKNCdiyXR8jMKPVZyiMKPr9hMsmmyaTUJzBvDyCLzRLdque5fNju3F9kPdV9ooJ6JGx84SAOnRQC+XwZFjSEoGdLxT7E6VsnNPQteH0njFO5BZnzUniREulAjxyNssfvrOEo5YHFEQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=2fFy6Hdg3gntNS0vGH9F4+YQOiCxBdKlzsTt7tc8ROs=;
 b=U6NdSzJnYDl+dtFq/QSj/daz346FclqYsKlxACKgW9cbDcSZRPnu7kMVrHlpMBNbBThZH5fQsemIcW1+sYM+wjZBnFp5hSJApprplfjp0K9nPGvTsCxzhGDORBxROH8dHzmkS2Im7IGrR3vxVJ3JsV1bKHBDU6dh4Sq5KLkVlZw=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 SJ0PR12MB6880.namprd12.prod.outlook.com (2603:10b6:a03:485::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8114.20; Wed, 30 Oct
 2024 15:51:21 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%3]) with mapi id 15.20.8114.015; Wed, 30 Oct 2024
 15:51:20 +0000
Message-ID: <e7702a99-5386-445c-9b65-cbc189eef9dd@amd.com>
Date: Wed, 30 Oct 2024 10:51:17 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 05/14] PCI/AER: Add CXL PCIe port correctable error
 support in AER service driver
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-6-terry.bowman@amd.com>
 <20241030151308.000005d5@Huawei.com>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <20241030151308.000005d5@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA0PR11CA0169.namprd11.prod.outlook.com
 (2603:10b6:806:1bb::24) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|SJ0PR12MB6880:EE_
X-MS-Office365-Filtering-Correlation-Id: 77f54a8f-aaef-46e8-dc23-08dcf8fab282
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|366016|7416014|376014|1800799024;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?dFo0UWR4ZG5OU1R2U2pZQ1NhL09kL1J4dFBzd3BubG9Za1FRbU1hZ1Z1bG9a?=
 =?utf-8?B?V2pQRHU3WnVMa0V0alZyTW9VUGpCdy9LOFJhVFNUcDJ1VHduTU9GbnRzTGF3?=
 =?utf-8?B?QkhydjlWbnd4NU9FY0R3UGtUQStGVTlCdGZVQ2p4ZlBrZ0xBUzN3MDJ4dEJK?=
 =?utf-8?B?Qy8vU2YxZHJOMCtsMGFaMnRIbFdZM2svUFl4MjlMMFFzbEN1VStaTXptOWpR?=
 =?utf-8?B?U3dDN2RtQTVFdWFXL0V4OWowdUsza0tJaGt4aXgxakxUYkpmcHROaHQ0TVVD?=
 =?utf-8?B?UnpmMVpNTHNDMjJOdDN5UjVTSC83cDdWeGJ2M3VrRFJrTGJvK0ZEbDVET2s4?=
 =?utf-8?B?ZTBsTEtoZERWZnM4bys4TFcwOHUzcnJQK29CQUZ1Q2FUaHNxL3QwMW9HQ0RN?=
 =?utf-8?B?OVdFOTB1aUZQdGFOQnJsbVVYSE1jeWp2c1VwdW5vaFkyMTFFcG9FWkVZc3k4?=
 =?utf-8?B?SGx0MTRvTVNwWHBic1ZvNU5LVTdSajhUYzFOTitLMlNrQ1oxUmxubXFJVkpE?=
 =?utf-8?B?VHdiejNXWmRsUVM1R1NmNVVkdHlIbDZqZUVQVjNpZlBWaUJ0R0Q1UzlWQlRH?=
 =?utf-8?B?enY4UnoyU0t5QUdwRVBjSmpTMy9KS2ZCcFdDcTBFdklZNHpoTWtYWm05T1hL?=
 =?utf-8?B?cFRPMnE0SG4yaHplanExc0hhOTVKRTZiVUlVYmNlNU5vK1c4azI4OC9sTk9k?=
 =?utf-8?B?SEdSMURrZ1hNZ3hTelNmVkNBQ2JoOERSRXZHeVhZMVlhSU1tZlRpZW1LOHhY?=
 =?utf-8?B?ZzlwWndIOWZSYUJFUldGcFl3elN6M1NHQUVEbzJqRy9FZ255b2d0RDNzak02?=
 =?utf-8?B?ZWJqSlhjK1BzbktxbFBIZTZHQitxN2s1WnR3Z3NzNEFlbVlldVUzTm54MWtK?=
 =?utf-8?B?Q284USt2NFhYQ3h6Vk1iMk5IS0FSZzRQYXpWeGlKRDFMZTF0eTZ4ckZIS0pz?=
 =?utf-8?B?cVRkTVdaUGVGTFhLMmgyeXY0ZlV1YmpPSUM0M3dKYWN2RjBDeGhTbVMwbS9K?=
 =?utf-8?B?b1BYQmVab0lHeDB3Uktnbjh6L2hpd3FmcVpzYzMweThXYXQrYjRpZGRwRXpy?=
 =?utf-8?B?YjVBKzZoN2xEYU9IOGpOb3Jzenc1ZXByMndzRURkTktRcU1hc1dob2JOZ0FS?=
 =?utf-8?B?QkxxV3ZFVzBNMVM3dzZNdktPMll5L3ZCWlJHMmhhczJjSWFvYXY0azBraTN5?=
 =?utf-8?B?T253MmRIbnpkVUdpTzlBRlN5c2dic0ZpRmhsVENBdVM0aXpSVG5SYW1QOExY?=
 =?utf-8?B?V21DQ3dNckUyRGNqZXRqdDF3Z1FVSXc1WUhPVzcvVHcrM0dMc3ZXZ1I1SXRk?=
 =?utf-8?B?SVV0TEx1VUZkL2dVYnQxZWMvSUJkQ3VLMlg1eG5ENFduQzc4MkJHQXp3cjZt?=
 =?utf-8?B?dDVhTm13UXZ5d25TMUl3RzVPc0FGTXZzemJ1NGJFOWNOU252U24vMTMyK3NG?=
 =?utf-8?B?UW5MN3cxSm5kelIxM3AyMHFVSEtaYllSSTNmOHp1WWZweUV5Mlh0bHp3MW1J?=
 =?utf-8?B?RmNNaWNYdkxTREltR0VvaytEeUJOaHJuSmtNUVUxbDd0dlJNaEU2K1FGZFcw?=
 =?utf-8?B?UUZqWkp2b0lwZ3I3YnpMWm81YWdUWDg5OTMzNkx3YXplYzcwdjhySW4ybzFW?=
 =?utf-8?B?NmZwQTFkZlBmZTdIVE5nV3VHYWxtRzVsQzMwZnZ0Mi9WREZpSTVsT1R4anVn?=
 =?utf-8?B?bEdwMGV3OG9NWENjc0cvTTlqTWNYejdyUXVXYzdCcDh3WXB0blRtUXNwOWNS?=
 =?utf-8?Q?QddVZPUD6gLDnnkl/0yUq/OJpGjAD2MXTqm20gu?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(366016)(7416014)(376014)(1800799024);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?NGNaSU9GY083MkpoN2puVGxrNVpiTm9kakd6MDlmM1JmSGI0RzR2WUZ3Sjl3?=
 =?utf-8?B?WHBZTnQ1WmRDanlBME5qSDJxVG94d3hSVEtqYkhGeFIyS3V4eVJzdk5JVmE0?=
 =?utf-8?B?MUlsQVVRV1puRzdaZGxkYzNzbFJyNUJHRCt5UEVVUUM3S3hkaW4yM0xLZlVs?=
 =?utf-8?B?U2JqSVlqQzVqQVRNN1hIMUxjSnRhekR6Szhkem0yc2NDdlluR2VVL0Q0dkY5?=
 =?utf-8?B?R1VFMTB3R0V2NTJ4cnVZT3J6eW5waGlmd3A2TDhLWVpPVmpwSkdJYzhhUlhD?=
 =?utf-8?B?UHNBejg3bTA3UU5ESnNTL05uZzhhaVhxMjQyUkJEQ21tUDJzVVJWaUxEZC83?=
 =?utf-8?B?WkFJcnc1UWtpb3dSaE1sdXZXQUVDQU94bUNsa0lnc3ZmMnQ3N3ZtelVxWk95?=
 =?utf-8?B?TDBZZFZueDdmMWJNMkZHTGRMa2lFc1h3RHFOT3QxWGRvWkZLVGNpeE43cHB0?=
 =?utf-8?B?K3FjWmhYK0IzMndOWFZMcXRLSGVFa2FhcWh6VlEwcXdRbEpicnZTaVZ5VDc2?=
 =?utf-8?B?eUMrcTA4S3pMRHlkR2NjQm1mZ21UTE44MjFrMjh4Q25LT2NWaGw5TzRhekla?=
 =?utf-8?B?UDREVFFBM3Y5bmcrYUYydVRBd2xNVFhOMFhjNXVWbVBQY2RPREYvZCtPMFJo?=
 =?utf-8?B?M2xOd2svNERoRjFjam5XTEFWNW5xbS9CSGhQSlZjYitScC82YjRNK05LUGFU?=
 =?utf-8?B?L1IrS0FMZWRFYjkvYW5ENzVEbHpVY3BUZFVkSEpqMGRwV291cUNkZGhFRGx4?=
 =?utf-8?B?akJnaVhBOTZnc2ZBeG5jNzAvZXhuM3REMVVSQXE0ZjB4a3VRUHJEVkZBTnNI?=
 =?utf-8?B?NjRSQXRxUzdjYWZkSzA2YXhHMWZZNUxVRzhLYzNSdVJ0S29BMURjek5rZktx?=
 =?utf-8?B?WnF2L0p4b3lFcjJuVVNEejNRMXhPR3I1WG1EVlBMcXpVRGQ1SXBpZkhwR01X?=
 =?utf-8?B?bnN6MDFueUZqclp1VFozYmRuZE9lS25uOEk3R1RxWlRaek9XZDNxU0ViYzJI?=
 =?utf-8?B?S1FxWnZMSmxnR0dhdnhpTjNYMFVlazZFL0pocW1Xakt4NWNJckJNd1JuL0tw?=
 =?utf-8?B?S2drYjZWdy9vV0ZFbkdTUkRqVWJGREg2OVllNGxRWW54bUtHNkRKek9sUnRN?=
 =?utf-8?B?L3RKNjFTRkpsaUtmSFJmak11Qi9sTGZkcm8xeXJkUTV4eWRTd2hUaDRxNHEx?=
 =?utf-8?B?NnI1MW16MXpDWWwrVk1OVmltYzZSL3pUOWhENkl1a0ZQL0NlQ3ZyS2ZpUFFw?=
 =?utf-8?B?bkhBTnBCLzBibUMwajZkd3FyeDM1RXdOakh6YzJIVm40SGxndFJUODlYOFhR?=
 =?utf-8?B?V29WbnhSZlI4K2FscDQxcktRVWlmNGVpaXhMVUJJKzU1ajBvczdOVlRkSTZm?=
 =?utf-8?B?K0pwN1pLT0ZLcU5zK0JQQzhleFJ0NlB2bXRNRjI3c2RveisxMWFPM0txSW5I?=
 =?utf-8?B?ak9yTzhReENQdThqTmIzN2RsekZqRkNCRHpMaFUyaGllVFB4WXdDWmtlbjlK?=
 =?utf-8?B?RFdvd3l5ZEJkUGg4L2VLWnBTdkFsZHZLR3hHSXA5ZEk5SGZNa2dBUUp0aUtE?=
 =?utf-8?B?TWRPamNLZlcvZEU5YnNobXBIZHVhK2ZrOGZNSUh5THlRS2lJaE9kVzJoU215?=
 =?utf-8?B?V3NOVk56RTVYZTBLOHI3U0w2dUo0NWs0S2xaVXZRSHJoS0Z1czJJeUJYWmVi?=
 =?utf-8?B?K0l4eTd1MzFIMitMelIxZnc1UjNaUTVSNHMyMGk0Q3J3UEN3ejRlTU5HK1Zl?=
 =?utf-8?B?bEFETjdZZm9tNkYydi93SGoraitwMHJnSWt3bEhvenpzdFVTU0txMXBNNzJT?=
 =?utf-8?B?MHBLMnNoZkRRSkJwT280cUZGRnYrL3IrSzlIUGtJT2ZWQzlQd3BNc2RoS1di?=
 =?utf-8?B?MUxJNkgrUUtYTXlBRVNyL080czA3eXlLNE1Mckc3cnAyeUl2bGZRU05oVysv?=
 =?utf-8?B?VkFBUmVWUFhuRUN4a1JEK2xVZ2RjUHJIZFllY3pVY1V0QkJtc2ZrV3Vkcjls?=
 =?utf-8?B?Y1c2SzZNYjNFaHFLM1RTaitGbS9oUzdLZWh0VFdWVU5BTWFrVGJUQUh3S3J6?=
 =?utf-8?B?ejhKMDV3QURvVTJEdTJBdnQxblVyaXhnQVhESHAwY0dROXgyUytxN25LSVBu?=
 =?utf-8?Q?58QtyO0aPtINUTXfLuBkPbKZp?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 77f54a8f-aaef-46e8-dc23-08dcf8fab282
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Oct 2024 15:51:20.3615
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: ge/HDHgsQgGYAlDe8YlJtR+pPQSJVOR3zjcJ3gIcsy/+lOi+wR1FHqDOfK68RCZf3ovm5jrCZnXNUs1k/pNN3Q==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SJ0PR12MB6880

Hi Jonathan,

I added responses below.

On 10/30/2024 10:13 AM, Jonathan Cameron wrote:
> On Fri, 25 Oct 2024 16:02:56 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
>
>> The AER service driver doesn't currently handle CXL protocol errors
>> reported by CXL root ports, CXL upstream switch ports, and CXL downstream
>> switch ports. Consequently, RAS protocol errors from CXL PCIe port devices
>> are not properly logged or handled.
>>
>> These errors are reported to the OS via the root port's AER correctable
>> and uncorrectable internal error fields. While the AER driver supports
>> handling downstream port protocol errors in restricted CXL host (RCH) mode
>> also known as CXL1.1, it lacks the same functionality for CXL PCIe ports
>> operating in virtual hierarchy (VH) mode.
>>
>> To address this gap, update the AER driver to handle CXL PCIe port device
>> protocol correctable errors (CE).
>>
>> Make this update alongside the existing downstream port RCH error handling
>> logic, extending support to CXL PCIe ports in VH mode.
>>
>> is_internal_error() is currently limited by CONFIG_PCIEAER_CXL kernel
>> config. Update is_internal_error()'s function declaration such that it is
>> always available regardless if CONFIG_PCIEAER_CXL kernel config is enabled
>> or disabled.
>>
>> The uncorrectable error (UCE) handling will be added in a future patch.
>>
>> [1] CXL 3.1 Spec, 12.2.2 CXL Root Ports, Downstream Switch Ports, and
>> Upstream Switch Ports
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> This is a fiddly patch to read, but that's at least partly diff going crazy
> in a few places.
>
> Anyhow, I think it is fine but I would call out that this changes
> things so that the PCI error handlers are no longer called for CXL ports
> if it's an internal error.
>
> With a sentence on that:
>
> Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
>
> I'm not 100% convinced the path of separate handlers is the way to go
> but we can always change things again if that doesn't work out.
>
> Jonathan
I will update the patch message to mention ports use CXL handling
for CIE will not call the PCIe handlers or PCIe recovery.

Note, port devices are bound to the portdrv driver with fairly generic
CIE handler.

Regards,
Terry

>> ---
>>  drivers/pci/pcie/aer.c | 59 ++++++++++++++++++++++++++++--------------
>>  1 file changed, 39 insertions(+), 20 deletions(-)
>>
>> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
>> index 53e9a11f6c0f..1d3e5b929661 100644
>> --- a/drivers/pci/pcie/aer.c
>> +++ b/drivers/pci/pcie/aer.c
>> @@ -941,8 +941,15 @@ static bool find_source_device(struct pci_dev *parent,
>>  	return true;
>>  }
>>  
>> -#ifdef CONFIG_PCIEAER_CXL
>> +static bool is_internal_error(struct aer_err_info *info)
>> +{
>> +	if (info->severity == AER_CORRECTABLE)
>> +		return info->status & PCI_ERR_COR_INTERNAL;
>>  
>> +	return info->status & PCI_ERR_UNC_INTN;
>> +}
>> +
>> +#ifdef CONFIG_PCIEAER_CXL
> Diff was having fun.  Maybe put a blank line here? I think that's
> what has tripped it up.
>
>>  /**
>>   * pci_aer_unmask_internal_errors - unmask internal errors
>>   * @dev: pointer to the pcie_dev data structure
>> @@ -994,14 +1001,6 @@ static bool cxl_error_is_native(struct pci_dev *dev)
>>  	return (pcie_ports_native || host->native_aer);
>>  }
>> -
>>  /**
>> @@ -1115,8 +1131,11 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>>  
>>  static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info)
>>  {
>> -	cxl_handle_error(dev, info);
>> -	pci_aer_handle_error(dev, info);
>> +	if (is_internal_error(info) && handles_cxl_errors(dev))
>> +		cxl_handle_error(dev, info);
>> +	else
>> +		pci_aer_handle_error(dev, info);
> Whilst not calling this for the CXL cases probably makes sense and
> given new code needs to be the case to avoid a double clear I think,
> I would call that change out more explicitly in the patch description.
>> +
>>  	pci_dev_put(dev);
>>  }
>>  


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 64A241990C5;
	Wed, 30 Oct 2024 15:45:41 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730303145; cv=none; b=uOv9Saft/AH4OtgSkeusWgdW1s/aA6L2RW/+JvSNTyjv2rN+52DzqYC3PKjcWfxmfILCVgkGC5esv8mfgbpmf0KQN4plR3TkrTHgDd/UIe5H0N/8i0dZslO7QJaMX3a6h+maYvWMYeR+ENmJiIGsgkZbHJO+AWlayWYY4wNliDc=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730303145; c=relaxed/simple;
	bh=rsME5Vtg9NwmL1hNC+wYulcyxWLemaHEv/m3v2exxvE=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=cEIQqymQbe/KL/r82NeME/WBSQtwGPN3kPqPNLaWM165xATVHbUjrmm3M1COKCLxdYh7JRXGzlL4/P0+hyEZKAmmGgAi/+c9tXgaFkwrk/3SO5ZCXU1nD1phR1d2VpocjcAkinxUIYvvwd5oqoLsGZiSksgqsZ2ZQY5FBlu68FI=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4Xdrtl2nkBz67cSV;
	Wed, 30 Oct 2024 23:40:47 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id A3CCB1404F9;
	Wed, 30 Oct 2024 23:45:38 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 16:45:37 +0100
Date: Wed, 30 Oct 2024 15:45:36 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 08/14] cxl/pci: Change find_cxl_ports() to non-static
Message-ID: <20241030154536.00006f9a@Huawei.com>
In-Reply-To: <20241025210305.27499-9-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-9-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500006.china.huawei.com (7.191.161.198) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:02:59 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

Typo in title. Shouldn't be plural ports.


> CXL PCIe port protocol error support will be added in the future. This
> requires searching for a CXL PCIe port device in the CXL topology as
> provided by find_cxl_port(). But, find_cxl_port() is defined static
> and as a result is not callable outside of this source file.
> 
> Update the find_cxl_port() declaration to be non-static.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Doesn't hugely matter but I'd do this later in the series as it's
not used until patch 12 (I think) and by then reviewers may have forgotten what
it is for.

Fine otherwise,

Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

> ---
>  drivers/cxl/core/core.h | 3 +++
>  drivers/cxl/core/port.c | 4 ++--
>  2 files changed, 5 insertions(+), 2 deletions(-)
> 
> diff --git a/drivers/cxl/core/core.h b/drivers/cxl/core/core.h
> index 0c62b4069ba0..d81e5ee25f58 100644
> --- a/drivers/cxl/core/core.h
> +++ b/drivers/cxl/core/core.h
> @@ -110,4 +110,7 @@ bool cxl_need_node_perf_attrs_update(int nid);
>  int cxl_port_get_switch_dport_bandwidth(struct cxl_port *port,
>  					struct access_coordinate *c);
>  
> +struct cxl_port *find_cxl_port(struct device *dport_dev,
> +			       struct cxl_dport **dport);
> +
>  #endif /* __CXL_CORE_H__ */
> diff --git a/drivers/cxl/core/port.c b/drivers/cxl/core/port.c
> index e666ec6a9085..2ac835cd4f1b 100644
> --- a/drivers/cxl/core/port.c
> +++ b/drivers/cxl/core/port.c
> @@ -1342,8 +1342,8 @@ static struct cxl_port *__find_cxl_port(struct cxl_find_port_ctx *ctx)
>  	return NULL;
>  }
>  
> -static struct cxl_port *find_cxl_port(struct device *dport_dev,
> -				      struct cxl_dport **dport)
> +struct cxl_port *find_cxl_port(struct device *dport_dev,
> +			       struct cxl_dport **dport)
>  {
>  	struct cxl_find_port_ctx ctx = {
>  		.dport_dev = dport_dev,


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id F2DAA213143;
	Wed, 30 Oct 2024 15:42:50 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730302976; cv=none; b=r53gU7WB8Aozuf1CC8igq0HPSPKQsCAv7WZwqBKQv4aCNQe7gISWmSF7jK4ik/Rjnkc6J5OaHrNjLEYG/4HJziH3woUPul0lUcGId1h+S3jCBQQEJC+/ZI+ae58yH9C+SCCXmURtJugh75Wdlc8QOTBK+Nb3Enx1r/B31f/Zm8E=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730302976; c=relaxed/simple;
	bh=7kcnWVYIKaF+38h6wpgdybIdYb0dLLBerv1NN1T1BA0=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=b3YCh5BomvdHhqFIe4/mdjvMqtjfLzYp03gOhzui+sQfvv05pgkEW69APWyRm325tSjOHXdza6mUSuhRFlRnik+Js86WZlqZx4LNCGPpTpXtnDQ4o4aW210c5SJUB0nmWWwbHHRUU3Yk3sDGB++OluERngTdFZU5aWQAqzl1gKo=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4XdrtG5GvKz6K6X2;
	Wed, 30 Oct 2024 23:40:22 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 29E8C140B3C;
	Wed, 30 Oct 2024 23:42:48 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 16:42:47 +0100
Date: Wed, 30 Oct 2024 15:42:46 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 07/14] PCI/AER: Add CXL PCIe port uncorrectable error
 recovery in AER service driver
Message-ID: <20241030154246.000059d2@Huawei.com>
In-Reply-To: <20241025210305.27499-8-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-8-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500006.china.huawei.com (7.191.161.198) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:02:58 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> Existing recovery procedure for PCIe uncorrectable errors (UCE) does not
> apply to CXL devices. Recovery can not be used for CXL devices because of
> the potential for corruption on what can be system memory. Also, current
> PCIe UCE recovery does not begin at the bridge but begins at the bridge's
> first downstream device. 

I'm still stuck on why it is fine for PCIe to skip handling errors in the
root port.  Can't see why it should be different.

I might take a poke at what happens on an emulated PCIe system to try and
understand this better but probably not that quickly.

Without understanding the reasoning behind that I'm reluctant to make
an assessment of whether this code is right.

One trivial comment inline.

Jonathan


> This will miss handling CXL protocol errors in a
> CXL root port. A separate CXL recovery is needed because of the different
> handling requirements
> 
> Add a new function, cxl_do_recovery() using the following.
> 
> Add cxl_walk_bridge() to iterate the detected error's sub-topology.
> cxl_walk_bridge() is similar to pci_walk_bridge() but the CXL flavor
> will begin iteration at the bridge rather than beginning at the
> bridge's first downstream child.
> 
> Add cxl_report_error_detected() as an analog to report_error_detected().
> It will call pci_driver::cxl_err_handlers for each iterated downstream
> child. The pci_driver::cxl_err_handlers UCE handler returns a boolean
> indicating if there was a UCE error detected during handling.
> 
> cxl_do_recovery() uses the status from cxl_report_error_detected() to
> determine how to proceed. Non-fatal CXL UCE errors will be treated as
> fatal. If a UCE was present during handling then cxl_do_recovery()
> will kernel panic.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> ---
>  drivers/pci/pci.h      |  3 +++
>  drivers/pci/pcie/aer.c |  5 +++-
>  drivers/pci/pcie/err.c | 54 ++++++++++++++++++++++++++++++++++++++++++
>  3 files changed, 61 insertions(+), 1 deletion(-)
> 
> diff --git a/drivers/pci/pci.h b/drivers/pci/pci.h
> index 14d00ce45bfa..5a67e41919d8 100644
> --- a/drivers/pci/pci.h
> +++ b/drivers/pci/pci.h
> @@ -658,6 +658,9 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
>  		pci_channel_state_t state,
>  		pci_ers_result_t (*reset_subordinates)(struct pci_dev *pdev));
>  
> +/* CXL error reporting and handling */
> +void cxl_do_recovery(struct pci_dev *dev);
> +
>  bool pcie_wait_for_link(struct pci_dev *pdev, bool active);
>  int pcie_retrain_link(struct pci_dev *pdev, bool use_lt);
>  
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index d772f123c6a2..19432ab2cfb6 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -1048,7 +1048,10 @@ static void cxl_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>  			pdrv->cxl_err_handler->cor_error_detected(dev);
>  
>  		pcie_clear_device_status(dev);
> -	}
> +	} else if (info->severity == AER_NONFATAL)
> +		cxl_do_recovery(dev);
> +	else if (info->severity == AER_FATAL)
Needs {}

> +		cxl_do_recovery(dev);
>  }
>  
>  static int handles_cxl_error_iter(struct pci_dev *dev, void *data)
> diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
> index 31090770fffc..3785f4ca5103 100644
> --- a/drivers/pci/pcie/err.c
> +++ b/drivers/pci/pcie/err.c
> @@ -276,3 +276,57 @@ pci_ers_result_t pcie_do_recovery(struct pci_dev *dev,
>  
>  	return status;
>  }
> +
> +static void cxl_walk_bridge(struct pci_dev *bridge,
> +			    int (*cb)(struct pci_dev *, void *),
> +			    void *userdata)
> +{
> +	bool *status = userdata;
> +
> +	cb(bridge, status);
> +	if (bridge->subordinate && !*status)
> +		pci_walk_bus(bridge->subordinate, cb, status);
> +}
> +
> +static int cxl_report_error_detected(struct pci_dev *dev, void *data)
> +{
> +	struct pci_driver *pdrv = dev->driver;
> +	bool *status = data;
> +
> +	device_lock(&dev->dev);
> +	if (pdrv && pdrv->cxl_err_handler &&
> +	    pdrv->cxl_err_handler->error_detected) {
> +		const struct cxl_error_handlers *cxl_err_handler =
> +			pdrv->cxl_err_handler;
> +		*status |= cxl_err_handler->error_detected(dev);
> +	}
> +	device_unlock(&dev->dev);
> +	return *status;
> +}
> +
> +void cxl_do_recovery(struct pci_dev *dev)
> +{
> +	struct pci_host_bridge *host = pci_find_host_bridge(dev->bus);
> +	int type = pci_pcie_type(dev);
> +	struct pci_dev *bridge;
> +	int status;
> +
> +	if (type == PCI_EXP_TYPE_ROOT_PORT ||
> +	    type == PCI_EXP_TYPE_DOWNSTREAM ||
> +	    type == PCI_EXP_TYPE_UPSTREAM ||
> +	    type == PCI_EXP_TYPE_ENDPOINT)
> +		bridge = dev;
> +	else
> +		bridge = pci_upstream_bridge(dev);
> +
> +	cxl_walk_bridge(bridge, cxl_report_error_detected, &status);
> +	if (status)
> +		panic("CXL cachemem error. Invoking panic");
> +
> +	if (host->native_aer || pcie_ports_native) {
> +		pcie_clear_device_status(dev);
> +		pci_aer_clear_nonfatal_status(dev);
> +	}
> +
> +	pci_info(bridge, "No uncorrectable error found. Continuing.\n");
> +}


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E8B022139A8;
	Wed, 30 Oct 2024 15:37:12 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730302637; cv=none; b=kXYE3L+J5YU+D/4E/Bba/OtBsUAXEBXudt3QpKnK7IT0m5zpyuf60I3R8iHpeB35fapQnCJ9l2HV4k+uCoOVAyCVl+ddwT/M70fmZFy/gIoEereKcxhAQxw+fPsv38jrrz13iTMcU5HlyU6VMRakA/296LrULtZEdSOEPwVkV/0=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730302637; c=relaxed/simple;
	bh=PIpJkJ1iSVh/VJTjPjEj26Ptv2Y+3Be1BtZThLonA2A=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=eYOHOWvspQqAFbmiPhn+ljlGkb9Bj+PWmagQfdohnjPhUShwyocMV3vciL3p/3FHhAhBj50C/o3eCPRGlRRpl4dLqaNgpaXjb00fE17UlvDvr9KGb0MaeusWLkMxlmyU3jKeyaKcV8f9CUukxo2jS9Wx+2IuLF7miBcfk0QKSF0=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4Xdrn35vkpz6HJgF;
	Wed, 30 Oct 2024 23:35:51 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 4841C140A35;
	Wed, 30 Oct 2024 23:37:10 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 16:37:09 +0100
Date: Wed, 30 Oct 2024 15:37:08 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 06/14] PCI/AER: Change AER driver to read UCE fatal
 status for all CXL PCIe port devices
Message-ID: <20241030153708.000001a0@Huawei.com>
In-Reply-To: <20241025210305.27499-7-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-7-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml500006.china.huawei.com (7.191.161.198) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:02:57 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> The AER service driver's aer_get_device_error_info() function doesn't read
> uncorrectable (UCE) fatal error status from PCIe upstream port devices,
> including CXL upstream switch ports. As a result, fatal errors are not
> logged or handled as needed for CXL PCIe upstream switch port devices.
> 
> Update the aer_get_device_error_info() function to read the UCE fatal
> status for all CXL PCIe port devices.
> 
> The fatal error status will be used in future patches implementing
> CXL PCIe port uncorrectable error handling and logging.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>

I assume this was previously not done because the upstream port
requires a healthy link and maybe the error indicates we don't have one.

So I'd imagine this change may have a bad effect on PCIe devices
even if we know it's fine CXL ones in the case of certain protocol errors.

Also, does the error log stuff that follows make much sense for
an upstream port?

> ---
>  drivers/pci/pcie/aer.c | 1 +
>  1 file changed, 1 insertion(+)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 1d3e5b929661..d772f123c6a2 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -1250,6 +1250,7 @@ int aer_get_device_error_info(struct pci_dev *dev, struct aer_err_info *info)
>  	} else if (type == PCI_EXP_TYPE_ROOT_PORT ||
>  		   type == PCI_EXP_TYPE_RC_EC ||
>  		   type == PCI_EXP_TYPE_DOWNSTREAM ||
> +		   type == PCI_EXP_TYPE_UPSTREAM ||
>  		   info->severity == AER_NONFATAL) {
>  
>  		/* Link is still healthy for IO reads */


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (mail-mw2nam12on2082.outbound.protection.outlook.com [40.107.244.82])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9BE4421314A;
	Wed, 30 Oct 2024 15:15:54 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.244.82
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730301356; cv=fail; b=LNCcldaFVMs2GhChm3EL4Yno/nGPbPUFcJ7dpoqPzFJUsRpzsxr1Z01uhQbmzQrcZzS2kgahXsZ0mE2UXTjN+0EmAtvyT0AAGqBlrXBK4L1b8NNQsPLrfAV1f4gppPAqbGaOdHEU8lr9YzOycML3X2FqPnIzH06IvTn6E6G2+rY=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730301356; c=relaxed/simple;
	bh=P+WIbD8zBxhWSUWgt4yFRFebNQnsjRRd+36IeDXVrl0=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=YI6BYIGJJy1KWdLmBNIOdheVcA0MpsoLsrOflP0GjksGiibAgaKaEbb/SmoOJNpUyk9HP46kMgls2ihxAx8SqADJKe3Ak/+OllxTxvmbMjzPt6FJyLeJxflOCNZKMD39JBpoPwaybG5zQBReHGnGJui1YhqApTXsWrySf+zWKJs=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=GWyyl2Dh; arc=fail smtp.client-ip=40.107.244.82
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="GWyyl2Dh"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=jIbbiNxwKUjkbqJOes1LYuxStpb/Shx2Af6jtJu0Yo1zXC/UH0cL5hvou2/ZILRo7yCJ3LJyWPNKl0++UYA0EUh7npLB5iHY1e1XlZ2Ja4nRjFkKrl49ADzG31K9IJJvzspguxj+6q+3VEZsoWPVj5BXmS3y0P1BagnkNMWJ7mu6kZu4SI2Tf5oP2qNqtB6E9+yRSkuXgafCYfPeQ/rkB/ua+LyEYqHtZ7m2o3A8MrKOVWoYXb+fyablUzkhC84NblD8o63DOJ+FilZqDf6bLRnhDqLPRPZmN2cRx4sYSjvKkul0C7nJGeZOG3qNukAHwc8rFC4ENl5qSoOaSB1vmw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=P+WIbD8zBxhWSUWgt4yFRFebNQnsjRRd+36IeDXVrl0=;
 b=Z6va6JH0fAB/3JC/HO0HTD/OJ7yoWs1D3DgCNIv7m9CGRsSwrG+HbZrb9yfvVAEVKaLyT6aGa3tP4yxftCfDV9LyXhC3bg682jsVG4LS9BiWfLyYskfH1h3UKBcYoSOnShwdoqDt2GbkMBlaNdBjkHg2gWU0pCHu++YI7RPI+j5mtssI6LjAeWpyAGCPlfehuZs4trIkzpGq6pKBwUZaqfgvoHsHqHBXZVCE74ISfWRC9JKoO7SYB4/t7hHPQCngaprodcMfFmyTkxCmWnXdBE338NMhhOvm4/VsqLAli2t3Q6CcCX/YVC2aoCAD+Ngj/Aea+gafXkFb2n0Vy1Bz4A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=P+WIbD8zBxhWSUWgt4yFRFebNQnsjRRd+36IeDXVrl0=;
 b=GWyyl2DhV5AldwOd2HUdOGA+t3WySjspAVn6zm6UIaUvh4MzIhck/o1oZbA7ZqsVOOVHam6/hCAoW0rBrVE29lwV0tlsqcCloHShQrQX6qzQcAwAx8HLOWTpV5AUXws1JY1qcg4fXxOtBt5205gK7eLsGQ1RRlCkOM+rjSJjuYk=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 IA1PR12MB8538.namprd12.prod.outlook.com (2603:10b6:208:455::13) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8114.18; Wed, 30 Oct
 2024 15:15:51 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%3]) with mapi id 15.20.8114.015; Wed, 30 Oct 2024
 15:15:51 +0000
Message-ID: <c415e871-4c12-4974-a818-97287d3d8188@amd.com>
Date: Wed, 30 Oct 2024 10:15:49 -0500
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 01/14] PCI/AER: Introduce 'struct cxl_err_handlers' and
 add to 'struct pci_driver'
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-2-terry.bowman@amd.com>
 <20241030151407.0000227c@Huawei.com>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <20241030151407.0000227c@Huawei.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA9PR13CA0067.namprd13.prod.outlook.com
 (2603:10b6:806:23::12) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|IA1PR12MB8538:EE_
X-MS-Office365-Filtering-Correlation-Id: 8e3393f1-3e47-459d-2a0f-08dcf8f5bdd5
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|7416014|376014|366016|1800799024;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?T2sraGhzbytWQm0xUXMxLzRpYkdKZGtiNTFhMmRkV2Y3Ymk0YVJIM0FMUmVS?=
 =?utf-8?B?cTJPWGdmWFpZQ0RSeGJZWmVzN0F1Smtlbm1BZkxRMDBHRkJITFc4Vi9EbnM0?=
 =?utf-8?B?VHFCSFhSbkppaGpMNzB1YUt0VnZmR2NEOHMxODRUQ3J0VEMwS3Q3VGVFMVFQ?=
 =?utf-8?B?Rk5POGYvTXlYMlpieHU1U3JodzZtUXUvSGRPR0ZYUXFBaHNTWi91dGVEc1RJ?=
 =?utf-8?B?VlBBcXF4Ny9WekVkbHo3dWxXdktjTnAxY2trblJmQmVuWHNYbGhkMExtWkJI?=
 =?utf-8?B?OERmUUtERWE2MTIzb0lnVDJHS0V0dWsxZDNhTjZ4Vm5DT0xXdFlacFRsY1kr?=
 =?utf-8?B?MzBpZkpiZnlGbk81bnlhQXBlMGNpUW9jeDF5aHBSU1ludWVCQzFXTTZQZXVX?=
 =?utf-8?B?a3RoV3NDVTRIcHlSR2ZqenZScEh2RnJLV0hSbWQweW9XcXhHeTZnYkdtZGFQ?=
 =?utf-8?B?WVgxVjdkUm9oSnRqcnlETCtFclNmc1o3b0QxaEgvdC9nL2g0Y1RGM3JHMllH?=
 =?utf-8?B?RFFoMDk2dXcyQXpSUnppcnVlOUNmSWZGVUc0cGx6TzlEOHBYdXhnZkxkTURU?=
 =?utf-8?B?MXR0STJTeUl1V2lDUi80TEYrUmxSL3luV0xoTUttSzhlV1dJT1pQZGpZMGo5?=
 =?utf-8?B?b1J0SWxqWjlpK3daYXV6MzV1RVVLYkVzVEhNdEN5Z0ZQYVRHb2hzT0w3SHgv?=
 =?utf-8?B?L1BxRlZmNkdQL1M0R01qMnl2aXJLNkhpREgxOFZ3NUUxQWxGV05KbUJ1V2lr?=
 =?utf-8?B?YmkzWG1vdzVBOVF5TFphVUtoMkhiTHJFS3Z4WGEwdFV6eEE4ZWJUSDR3SVYw?=
 =?utf-8?B?cm9qNnE2MUNTMG5sZzIwUEEydGVrQnFvbGR5d0tCeE9yeVRlNlpTSmV2K3V3?=
 =?utf-8?B?aFFlRWpiYTl2dVRQZEpLdDdVeE92UHNlcmN6eExwTCtFQUZOU0FQNUwxcXRr?=
 =?utf-8?B?QUhxdGpoZlpTdEU2RDFER1FNZG5qRCtzeFBlVTVSUFRmbC9FUGFIM2cvWERi?=
 =?utf-8?B?b1YxNG5GRVFkSjlCKzl1V1pJdDdlcUVPZDRjN1lROHNMa3JDL1h5VFdaUGx1?=
 =?utf-8?B?SDVWWFZaZlVFL2V1ZjgxMm0wMHVIZEJDSmdWbU91cWQyOEpzZEhrb3AzODRP?=
 =?utf-8?B?TDk1eUhDd0Q2NWNDZHZnUEI2YlNqT1V4QlYrYnRkM3JFSTR1YTgvVnVQcSt5?=
 =?utf-8?B?b3ZYMlk0Q2xHVXYzQWNuc1ByRTVodWpuR2FPd2c2V3p4b1E5M1JjRXFBNDJO?=
 =?utf-8?B?SnhwYytnQW0xdTh1eVdmNXV5c2JSbXI5b0FML2RmMk50MEEwZDVxZ1loNkxZ?=
 =?utf-8?B?cTdIOG1KVXg0TEtGamNwNDlTVDdZV2tCYW9yaTY4RHM1UVl0UE9tWWJUWTFw?=
 =?utf-8?B?VnNJVmIvYXdWMkhuVTduZzEzOStsZnhXYjZnajZxdEdzZGRrd0RKcUF2a1g5?=
 =?utf-8?B?bzM1dW41TzZnMit2NFIrdG1Jc0g0aC9nZzJZbGRTcWlDbnAvdXIrZ2kvQVpR?=
 =?utf-8?B?Mms1b0RkV2V4MVZBUkhmOFRCTDBxcUdhWjJCUVFqSm1xVzgrcmQ2SDdaZWNv?=
 =?utf-8?B?UUtRWXJEamk3NkFaSkhBMmZRWTExN2FMODlOaFRick1uL3lIRWtDNWFzYlVT?=
 =?utf-8?B?NUZnc05xTnEzUlcrWHczblRHVDU3cnRLZ0g2TGVxdjNPNmN6dHR3ZEUvT0tC?=
 =?utf-8?B?azZXL2liV3Q0SnFJUEV5YWFvSy92M0N0WjhVVUZxU3REZDJhQ2c0eW1Da09r?=
 =?utf-8?Q?hOcZOUPhy04cHBkeug=3D?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(7416014)(376014)(366016)(1800799024);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?OFdXV1JUbXdRWUdoaGRsZ2t3aTF6a1JXTFlJR25aWEdQS1VsQUJlTjcwemVj?=
 =?utf-8?B?VTNCYjVJZGZVeXdFbEpRbndTeHlKSzg2Zk1RMFQvMkVraUNCSlFYMllIMTJE?=
 =?utf-8?B?MVo2VEhscFg3dHJWeGM4MWJDUFM2ait0Nms3MHoza2I0Zjd0YmJIRWhuMHB5?=
 =?utf-8?B?QnB6SHJudklheGtlZkplN2xraGpGU0JpTzN5c24zRzJidm9OSHBvY2ZlWC9J?=
 =?utf-8?B?ak5wdURYNUJSY1ZHVFBZSXpIampUTHVncUNPbkozUmZra3hFWVlSUlU3YlNl?=
 =?utf-8?B?NEcwVGRwWTlPY1RtOTdLRExmVE5ZQ2xGZXpnMzB0azcxM3ZmenlEV0ZsWndM?=
 =?utf-8?B?bzI0M0lUUFJ0cU1rUjhpa1gzV1FMa1dZNGVVZGQxN1huZU1pK081aUIxUlow?=
 =?utf-8?B?T2VnL09pUGdiZFBwZUJHOWFIYldnOFhNbFJKMTJIMnV0c3NGdnRnVjg0dXo4?=
 =?utf-8?B?M3VNaDVuUktyYTVQa0hRazBJY2tuLy9oRHVHVEVqcUg4eThnaExqcDRWN0FT?=
 =?utf-8?B?UFFKVVB1K0VaVEpabWpFd2dCTTRaQzZ1T3oydzFiN0pSL2ZGdWR4ZXIxRXBu?=
 =?utf-8?B?SmFUNHliSUd2WUJST25jRXE4cGxSb2U5bks0Q2ZqVVFsSENIeWZWU3dIblMw?=
 =?utf-8?B?UXgzYWZxKzJsRG1rcUxLWG4wWHBReFBwanNrY1doSHBNZVlpaU9TbjhGMHd4?=
 =?utf-8?B?Y3NVQ2wrRVpRVENJaUdJMU0zTmM1cytNbFNTZUV6c2lwa09QQng5TGh6SVg3?=
 =?utf-8?B?NTNyNzgxOG1kYXN2dGEybjhuYmJaZXVIN3hxNkk4VStVVExaSjlNNS9ud0V2?=
 =?utf-8?B?blpuZ1dIdEZLZTRFYjlqVUxWbXF3S0ViTXcwQlVHWXRaZGtWdUxTbnB5YVdU?=
 =?utf-8?B?Mjh3Qmt4T2MybGEwMGZDL3NKSTFVUFVFSkFiUjFxK3hmUFV5cWxzWm1aMEhC?=
 =?utf-8?B?VkM3ZHVrR1R6eldLZmVOMS92ZkRBRXhCakpORHBOWFo2MU5XcFgzZXVSMjNZ?=
 =?utf-8?B?OEpjSUx3bGFvbVNyS2hOc2sxdWtNTFc0NjJvRGJWTjFwUFZuditWSEM4K1Bz?=
 =?utf-8?B?S0MrUjVzM1RJKzQ2UmNML3Z2RG5wTTZRUDkvVkV6K1Z4dHQyZDJvbjQxVkhJ?=
 =?utf-8?B?YVpPSlpJWGR5QStuMWZ4VEoybkZLcnlDN3Ryck43eHN4SHVzR2xVaWZwMkNU?=
 =?utf-8?B?eDcvcDd6U2Yvd083UEtTRzdHdnFPU3FrUFZEYTFiWGRBbHQrS3Y1bGlUY0g0?=
 =?utf-8?B?NG9aN0Z0ZC9mMlZtbWJlTzVjV1F6NlhrajVRRnlPYU9IUjdzb1B0dnFsS1N1?=
 =?utf-8?B?Q1Rya1hZUTlXaTBXblIvSjNRS2R5Sk01RWJSMVA2RzBzbzVmQm1PNk93QXhu?=
 =?utf-8?B?Q015Nmp5MVFNTGVwemVSZ2E4M0JBRHc2ZmZCSUcrbHZnbmc2OWJaTnIwQWZS?=
 =?utf-8?B?dkNWL1NBRUhuMHIvREQrdVFuejZTTjU2ajArZk96dk1Xb3RXL0RzZTJ4Rzlz?=
 =?utf-8?B?QnR3SlV5ZXVwZi9CaGcreHEvRENmWEx3dEZTL0M1TWMra2hBTENWUUlaNjQv?=
 =?utf-8?B?ay92c2tuOU84cWdRRHQvTzM3Y2cralgxWXgrUW84WmFLM3F1VytjTEg3V2h4?=
 =?utf-8?B?S0FaWHBwQmNZc2Y5WExiMEVOVmFNdDY4YU5mOUtLcS9yN0JMMHUwQ0ZZT0Vx?=
 =?utf-8?B?SUFGNC9yc09NNUd5aEs1TG41aEFqejFXZ0lyMHp5cjF2N2JiTFhTMElxb2lw?=
 =?utf-8?B?VHJVK2I1dk5NWVhERWdlYmExWG02QmlWU1hzOUM3alVQY0pqOXJHMEo0Mm0y?=
 =?utf-8?B?QlRHNEx4Skg5ZVRjQ1AyeXphbkRKanZrRGc3OERFZks5Ky9PRTl2UTZYN3E5?=
 =?utf-8?B?UUx5MU81dm5hV2oydDhidXlVdVBxMDQ2a3l3U0ZkQUlQR2tWRFlWZ2l6MzlE?=
 =?utf-8?B?S2hEZzVEdjJLTTRDYXhoZXRYWlVJRVBlYU1SaFJxSWlteGFuMXh4TzRSeGtO?=
 =?utf-8?B?RHBaWlBCZ2JRblBqK2kxZmZ2eHg2OFYvMzBuYzk0bThrMXlEUmNHYzBKTGs0?=
 =?utf-8?B?RUVGb3IyOWdKVCsrUjNLMnBhbXAxZHN5akt0TXBqTTNvQVAvT25NWkZvU3lo?=
 =?utf-8?Q?jNVE90ltQd8U+HNGsfG7O2tFK?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 8e3393f1-3e47-459d-2a0f-08dcf8f5bdd5
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Oct 2024 15:15:51.7294
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: Wacl3CQiKHnFny3zNmLNli8+KAXOJQVq2ulbiG4Z/C0jsfNoSncynlWVREQFfcAnG4EHpwM5GMQ7lO3dk95/NQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA1PR12MB8538

Hi Jonathan,

Thank you for reviewing.

Regards,
Terry

On 10/30/2024 10:14 AM, Jonathan Cameron wrote:
> On Fri, 25 Oct 2024 16:02:52 -0500
> Terry Bowman <terry.bowman@amd.com> wrote:
>
>> CXL.io provides PCIe like protocol error implementation, but CXL.io and
>> PCIe have different handling requirements.
>>
>> The PCIe AER service driver may attempt recovering PCIe devices with
>> uncorrectable errors while recovery is not used for CXL.io. Recovery is not
>> used in the CXL.io recovery because of the potential for corruption on
>> what can be system memory.
>>
>> Create pci_driver::cxl_err_handlers similar to pci_driver::error_handler.
>> Create handlers for correctable and uncorrectable CXL.io error
>> handling.
>>
>> The CXL error handlers will be used in future patches adding CXL PCIe
>> port protocol error handling.
>>
>> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
> Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 2BDBF218D7D;
	Wed, 30 Oct 2024 15:14:11 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730301254; cv=none; b=EoqMEOPYC1+wLJXbVIFQySkgEtMeEPnPSs+i3M9RP9q21wIAg1mVgmCOZgch0Flhz2qYO0Gq5Tbo26MBj1phdwu48nxRKcG9iMMQ77J/UzEsjPHEPIhezllaEadpfgXEbtV9tWn4f1XyksDrfjrOyE5SCVnAjBVITvsLIpIAK+I=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730301254; c=relaxed/simple;
	bh=ZmQNu2d+N/0t2jHPTpFE9ynfUCN3+h8ww7kE4zJqUI4=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=kl/5XEmYpR3htPDxguKtZUVB/SPC/HHSTdk7BLazldmjqMvRlkTX64hlYycPojsrvtUI3EdM9rJGgmxiFbsW33euX1d5Otdo/8qLb3A7gsr3qmO8FYRohBKcCA/AxY2HVQ6PZlI0VG48zqLVx6rYAkmD9gYL0pk3sP3Z8c2F+vs=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.216])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4XdrBQ3P7wz6GDpd;
	Wed, 30 Oct 2024 23:09:18 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id A7B9F140593;
	Wed, 30 Oct 2024 23:14:09 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 16:14:08 +0100
Date: Wed, 30 Oct 2024 15:14:07 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 01/14] PCI/AER: Introduce 'struct cxl_err_handlers'
 and add to 'struct pci_driver'
Message-ID: <20241030151407.0000227c@Huawei.com>
In-Reply-To: <20241025210305.27499-2-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-2-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100001.china.huawei.com (7.191.160.183) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:02:52 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> CXL.io provides PCIe like protocol error implementation, but CXL.io and
> PCIe have different handling requirements.
> 
> The PCIe AER service driver may attempt recovering PCIe devices with
> uncorrectable errors while recovery is not used for CXL.io. Recovery is not
> used in the CXL.io recovery because of the potential for corruption on
> what can be system memory.
> 
> Create pci_driver::cxl_err_handlers similar to pci_driver::error_handler.
> Create handlers for correctable and uncorrectable CXL.io error
> handling.
> 
> The CXL error handlers will be used in future patches adding CXL PCIe
> port protocol error handling.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4978F21503F;
	Wed, 30 Oct 2024 15:13:34 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730301218; cv=none; b=eyqh1UOvIxa8bBucPlX9/5SGnwQLQyYNL1WSfkS7D7A9mhd8A7/Ooml6GQ7ZsINoaeL9xLQxrRrESrbj1KOFI2lXqnY+Z2HJSTHGPeC0TH8TL7w7wy/ssDDveBhzG8SgrXiqFGIb/LOdI1ZC1wegyfmzYREcS8VWRnvxeb2FXlA=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730301218; c=relaxed/simple;
	bh=IgNI8lgYFQbAt0dJNQpNKncmbTgA/OCnxxHvT/Lwx9Q=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=e9MzI+IcMOre4VObwGBRShcBLD2VxFro0jEzf8aNuFuXpUNfxTAwpwRILhoXrdB6iChxsLlZZg0vAMRisjrHRkMkybTnRnC+AHVnMYMdQ3cRnrVmOd+PiSHMUkDDVmYoKkul7OAhAqWu0oE5lyRw7aNFGJwRmXHk7y+qdxQJJq0=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4Xdr9j3MWvz6GDsD;
	Wed, 30 Oct 2024 23:08:41 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id AC7FD140498;
	Wed, 30 Oct 2024 23:13:32 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 16:13:31 +0100
Date: Wed, 30 Oct 2024 15:13:30 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 02/14] PCI/AER: Rename AER driver's interfaces to
 also indicate CXL PCIe port support
Message-ID: <20241030151330.00005e54@Huawei.com>
In-Reply-To: <20241025210305.27499-3-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-3-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100001.china.huawei.com (7.191.160.183) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:02:53 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> The AER service driver already includes support for CXL restricted host
> (RCH) downstream port error handling. The current implementation is based
> on CXL1.1 using a root complex event collector.
> 
> Rename function interfaces and parameters where necessary to include
> virtual hierarchy (VH) mode CXL PCIe port error handling alongside the RCH
> handling.[1] The CXL PCIe port error handling will be added in a future
> patch.
> 
> Limit changes to renaming variable and function names. No functional
> changes are added.
> 
> [1] CXL 3.1 Spec, 9.12.2 CXL Virtual Hierarchy
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4E44A1FCF40;
	Wed, 30 Oct 2024 15:13:12 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730301196; cv=none; b=XiHtlHZ98mgFH26KJ6SolEP55OBHixP9lTdlhDTwjlbpxYsc9SQyFjCol1M4GxTKPkTApNReTDmQsJLFWc3jjeueX+GKgINr6OtMse84w04woa72IBiHiZohHUvg5oJ4wFgkjYtWO+lel0fuFDDudO9IZhH1yzPf6/zpiP3cSjM=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730301196; c=relaxed/simple;
	bh=eGP89k2OWd5d7Pxbyxcn/I7TL7S78zbAyyD/JGiIBFg=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=t2Mska9PEI/A6NN+ATN1nvjrYBS7bbE61SA0iaLnR6WRmbf74Q5o9+066P6kxCidSuEK5i61z6QoMdz5MuEFLRT1+Hc1SjCkyHACBkhfMgBaRp+M06GzpK/CWjpmM6Ax2gsOmdhr5ZxYSN+zndL11LTkB8rhd8InSP7PSVnE7SM=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4XdrFN1Z65z6HJgC;
	Wed, 30 Oct 2024 23:11:52 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 9D84F140158;
	Wed, 30 Oct 2024 23:13:10 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 16:13:09 +0100
Date: Wed, 30 Oct 2024 15:13:08 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 05/14] PCI/AER: Add CXL PCIe port correctable error
 support in AER service driver
Message-ID: <20241030151308.000005d5@Huawei.com>
In-Reply-To: <20241025210305.27499-6-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-6-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100001.china.huawei.com (7.191.160.183) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:02:56 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> The AER service driver doesn't currently handle CXL protocol errors
> reported by CXL root ports, CXL upstream switch ports, and CXL downstream
> switch ports. Consequently, RAS protocol errors from CXL PCIe port devices
> are not properly logged or handled.
> 
> These errors are reported to the OS via the root port's AER correctable
> and uncorrectable internal error fields. While the AER driver supports
> handling downstream port protocol errors in restricted CXL host (RCH) mode
> also known as CXL1.1, it lacks the same functionality for CXL PCIe ports
> operating in virtual hierarchy (VH) mode.
> 
> To address this gap, update the AER driver to handle CXL PCIe port device
> protocol correctable errors (CE).
> 
> Make this update alongside the existing downstream port RCH error handling
> logic, extending support to CXL PCIe ports in VH mode.
> 
> is_internal_error() is currently limited by CONFIG_PCIEAER_CXL kernel
> config. Update is_internal_error()'s function declaration such that it is
> always available regardless if CONFIG_PCIEAER_CXL kernel config is enabled
> or disabled.
> 
> The uncorrectable error (UCE) handling will be added in a future patch.
> 
> [1] CXL 3.1 Spec, 12.2.2 CXL Root Ports, Downstream Switch Ports, and
> Upstream Switch Ports
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
This is a fiddly patch to read, but that's at least partly diff going crazy
in a few places.

Anyhow, I think it is fine but I would call out that this changes
things so that the PCI error handlers are no longer called for CXL ports
if it's an internal error.

With a sentence on that:

Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

I'm not 100% convinced the path of separate handlers is the way to go
but we can always change things again if that doesn't work out.

Jonathan

> ---
>  drivers/pci/pcie/aer.c | 59 ++++++++++++++++++++++++++++--------------
>  1 file changed, 39 insertions(+), 20 deletions(-)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index 53e9a11f6c0f..1d3e5b929661 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -941,8 +941,15 @@ static bool find_source_device(struct pci_dev *parent,
>  	return true;
>  }
>  
> -#ifdef CONFIG_PCIEAER_CXL
> +static bool is_internal_error(struct aer_err_info *info)
> +{
> +	if (info->severity == AER_CORRECTABLE)
> +		return info->status & PCI_ERR_COR_INTERNAL;
>  
> +	return info->status & PCI_ERR_UNC_INTN;
> +}
> +
> +#ifdef CONFIG_PCIEAER_CXL

Diff was having fun.  Maybe put a blank line here? I think that's
what has tripped it up.

>  /**
>   * pci_aer_unmask_internal_errors - unmask internal errors
>   * @dev: pointer to the pcie_dev data structure
> @@ -994,14 +1001,6 @@ static bool cxl_error_is_native(struct pci_dev *dev)
>  	return (pcie_ports_native || host->native_aer);
>  }

> -

>  /**
> @@ -1115,8 +1131,11 @@ static void pci_aer_handle_error(struct pci_dev *dev, struct aer_err_info *info)
>  
>  static void handle_error_source(struct pci_dev *dev, struct aer_err_info *info)
>  {
> -	cxl_handle_error(dev, info);
> -	pci_aer_handle_error(dev, info);
> +	if (is_internal_error(info) && handles_cxl_errors(dev))
> +		cxl_handle_error(dev, info);
> +	else
> +		pci_aer_handle_error(dev, info);
Whilst not calling this for the CXL cases probably makes sense and
given new code needs to be the case to avoid a double clear I think,
I would call that change out more explicitly in the patch description.
> +

>  	pci_dev_put(dev);
>  }
>  


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9399D26AD4;
	Wed, 30 Oct 2024 14:57:20 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730300243; cv=none; b=TmMVml5HcqQjy3VPGLQikG19waN6fGWD9RMdPk8Yx1ke8OJfDGxD69qsJGhfM4OyEfDoK2HwjKwuXCW/tdTlthe8409lbTXtrCkYd0m3wjICj6rqAJ6LsEy4ebB6NI0LKrm1j182LACnki+IaI+T/xWT1pHVs+QvS4NJNkf8ua0=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730300243; c=relaxed/simple;
	bh=NFNwA1nAENuRUepB0mrjvJghMwFFjdV9BjvwSmBmWQU=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=BG4yzX1EXiv9OP9JI15xdX/vhdIhEw3g0oT2KnYNoNR7Tju8tSYcOi5LsRb5ZHEfRN8Z2+F4uflvytwWr2vj8pX+AgACqS8zSeUehGziCjUJpOyErJ7Hd7Ywo3mVk2phqc5gYxJLUF50Y/JifNCmQLZi5WYsJjuqqxGSgZ/Axo4=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.31])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4Xdqpz1946z6GFD4;
	Wed, 30 Oct 2024 22:52:27 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 65FF3140158;
	Wed, 30 Oct 2024 22:57:18 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 15:57:17 +0100
Date: Wed, 30 Oct 2024 14:57:15 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>
Subject: Re: [PATCH v2 03/14] cxl/pci: Introduce helper functions
 pcie_is_cxl() and pcie_is_cxl_port()
Message-ID: <20241030145715.00001d78@Huawei.com>
In-Reply-To: <20241025210305.27499-4-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-4-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100012.china.huawei.com (7.191.174.184) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:02:54 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> CXL and AER drivers need the ability to identify CXL devices and CXL port
> devices.
> 
> First, add set_pcie_cxl() with logic checking for CXL Flexbus DVSEC
> presence. The CXL Flexbus DVSEC presence is used because it is required
> for all the CXL PCIe devices.[1]
> 
> Add boolean 'struct pci_dev::is_cxl' with the purpose to cache the CXL
> Flexbus presence.
> 
> Add pcie_is_cxl() as a macro to return 'struct pci_dev::is_cxl',
> 
> Add pcie_is_cxl_port() to check if a device is a CXL root port, CXL
> upstream switch port, or CXL downstream switch port. Also, verify the
> CXL extensions DVSEC for port is present.[1]
> 
> [1] CXL 3.1 Spec, 8.1.1 PCIe Designated Vendor-Specific Extended
>     Capability (DVSEC) ID Assignment, Table 8-2
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Make sense to improve the trace point info if nothing else.
Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E02381F4FBA;
	Wed, 30 Oct 2024 14:56:23 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=185.176.79.56
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730300187; cv=none; b=Ohfupe+5HUoOj0MUQy/v+NZli9tuwLD3vShoWIPuf4ZdkuPgH9dqf5zTh+FckuPao9zGEMAeBLHDUp/YJiiZFYCKdHeMM/R16zmkycLBtS/EKZe5UT2pNLIvDcLJTHBXoS6h1qtyVkrR5qkh7rnert0TuhoQX1sJSyU5QJwXXpo=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730300187; c=relaxed/simple;
	bh=Nc9r3n+OXVQBLgWQU9aNggCLV+9LjFfRoOXAKiwCd0M=;
	h=Date:From:To:CC:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=bYgwRQ3t+51dyHUopD7O6IteAUbKpnYcwJq05vGwdcYCNNrpgCj30uciY4afXJzEaqq/dSMLWAPBsjO7tQyVNfGebUdiSO7q3rTcs/CGye01kObG800/ir8N2/gRWO7BhhmbnTh5+fs/Ag2HpDo+zctjcmXZOH9h7BYkjWxux5Y=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com; spf=pass smtp.mailfrom=huawei.com; arc=none smtp.client-ip=185.176.79.56
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=Huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Received: from mail.maildlp.com (unknown [172.18.186.231])
	by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4Xdqnt1sJWz6GDpd;
	Wed, 30 Oct 2024 22:51:30 +0800 (CST)
Received: from frapeml500008.china.huawei.com (unknown [7.182.85.71])
	by mail.maildlp.com (Postfix) with ESMTPS id 7C190140A35;
	Wed, 30 Oct 2024 22:56:21 +0800 (CST)
Received: from localhost (10.203.177.66) by frapeml500008.china.huawei.com
 (7.182.85.71) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.1.2507.39; Wed, 30 Oct
 2024 15:56:20 +0100
Date: Wed, 30 Oct 2024 14:56:19 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Terry Bowman <terry.bowman@amd.com>
CC: <ming4.li@intel.com>, <linux-cxl@vger.kernel.org>,
	<linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<dave@stgolabs.net>, <dave.jiang@intel.com>, <alison.schofield@intel.com>,
	<vishal.l.verma@intel.com>, <dan.j.williams@intel.com>,
	<bhelgaas@google.com>, <mahesh@linux.ibm.com>, <ira.weiny@intel.com>,
	<oohall@gmail.com>, <Benjamin.Cheatham@amd.com>, <rrichter@amd.com>,
	<nathan.fontenot@amd.com>, <Smita.KoralahalliChannabasappa@amd.com>,
	<shiju.jose@huawei.com>, <M.Chehab@huawei.com>
Subject: Re: [PATCH v2 04/14] PCI/AER: Modify AER driver logging to report
 CXL or PCIe bus error type
Message-ID: <20241030145619.00005dbc@Huawei.com>
In-Reply-To: <20241025210305.27499-5-terry.bowman@amd.com>
References: <20241025210305.27499-1-terry.bowman@amd.com>
	<20241025210305.27499-5-terry.bowman@amd.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: lhrpeml100011.china.huawei.com (7.191.174.247) To
 frapeml500008.china.huawei.com (7.182.85.71)

On Fri, 25 Oct 2024 16:02:55 -0500
Terry Bowman <terry.bowman@amd.com> wrote:

> The AER driver and aer_event tracing currently log 'PCIe Bus Type'
> for all errors.
> 
> Update the driver and aer_event tracing to log 'CXL Bus Type' for CXL devices.
> 
> Signed-off-by: Terry Bowman <terry.bowman@amd.com>
Looks fine to me.
Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

+CC Mauro and Shiju.  I assume this will be easy to add to rasdaemon
useage of this tracepoint?

> ---
>  drivers/pci/pcie/aer.c  | 14 ++++++++------
>  include/ras/ras_event.h |  9 ++++++---
>  2 files changed, 14 insertions(+), 9 deletions(-)
> 
> diff --git a/drivers/pci/pcie/aer.c b/drivers/pci/pcie/aer.c
> index fe6edf26279e..53e9a11f6c0f 100644
> --- a/drivers/pci/pcie/aer.c
> +++ b/drivers/pci/pcie/aer.c
> @@ -699,13 +699,14 @@ static void __aer_print_error(struct pci_dev *dev,
>  
>  void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
>  {
> +	const char *bus_type = pcie_is_cxl(dev) ? "CXL"  : "PCIe";
>  	int layer, agent;
>  	int id = pci_dev_id(dev);
>  	const char *level;
>  
>  	if (!info->status) {
> -		pci_err(dev, "PCIe Bus Error: severity=%s, type=Inaccessible, (Unregistered Agent ID)\n",
> -			aer_error_severity_string[info->severity]);
> +		pci_err(dev, "%s Bus Error: severity=%s, type=Inaccessible, (Unregistered Agent ID)\n",
> +			bus_type, aer_error_severity_string[info->severity]);
>  		goto out;
>  	}
>  
> @@ -714,8 +715,8 @@ void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
>  
>  	level = (info->severity == AER_CORRECTABLE) ? KERN_WARNING : KERN_ERR;
>  
> -	pci_printk(level, dev, "PCIe Bus Error: severity=%s, type=%s, (%s)\n",
> -		   aer_error_severity_string[info->severity],
> +	pci_printk(level, dev, "%s Bus Error: severity=%s, type=%s, (%s)\n",
> +		   bus_type, aer_error_severity_string[info->severity],
>  		   aer_error_layer[layer], aer_agent_string[agent]);
>  
>  	pci_printk(level, dev, "  device [%04x:%04x] error status/mask=%08x/%08x\n",
> @@ -730,7 +731,7 @@ void aer_print_error(struct pci_dev *dev, struct aer_err_info *info)
>  	if (info->id && info->error_dev_num > 1 && info->id == id)
>  		pci_err(dev, "  Error of this Agent is reported first\n");
>  
> -	trace_aer_event(dev_name(&dev->dev), (info->status & ~info->mask),
> +	trace_aer_event(dev_name(&dev->dev), bus_type, (info->status & ~info->mask),
>  			info->severity, info->tlp_header_valid, &info->tlp);
>  }
>  
> @@ -764,6 +765,7 @@ EXPORT_SYMBOL_GPL(cper_severity_to_aer);
>  void pci_print_aer(struct pci_dev *dev, int aer_severity,
>  		   struct aer_capability_regs *aer)
>  {
> +	const char *bus_type = pcie_is_cxl(dev) ? "CXL"  : "PCIe";
>  	int layer, agent, tlp_header_valid = 0;
>  	u32 status, mask;
>  	struct aer_err_info info;
> @@ -798,7 +800,7 @@ void pci_print_aer(struct pci_dev *dev, int aer_severity,
>  	if (tlp_header_valid)
>  		__print_tlp_header(dev, &aer->header_log);
>  
> -	trace_aer_event(dev_name(&dev->dev), (status & ~mask),
> +	trace_aer_event(dev_name(&dev->dev), bus_type, (status & ~mask),
>  			aer_severity, tlp_header_valid, &aer->header_log);
>  }
>  EXPORT_SYMBOL_NS_GPL(pci_print_aer, CXL);
> diff --git a/include/ras/ras_event.h b/include/ras/ras_event.h
> index e5f7ee0864e7..1bf8e7050ba8 100644
> --- a/include/ras/ras_event.h
> +++ b/include/ras/ras_event.h
> @@ -297,15 +297,17 @@ TRACE_EVENT(non_standard_event,
>  
>  TRACE_EVENT(aer_event,
>  	TP_PROTO(const char *dev_name,
> +		 const char *bus_type,
>  		 const u32 status,
>  		 const u8 severity,
>  		 const u8 tlp_header_valid,
>  		 struct pcie_tlp_log *tlp),
>  
> -	TP_ARGS(dev_name, status, severity, tlp_header_valid, tlp),
> +	TP_ARGS(dev_name, bus_type, status, severity, tlp_header_valid, tlp),
>  
>  	TP_STRUCT__entry(
>  		__string(	dev_name,	dev_name	)
> +		__string(	bus_type,	bus_type	)
>  		__field(	u32,		status		)
>  		__field(	u8,		severity	)
>  		__field(	u8, 		tlp_header_valid)
> @@ -314,6 +316,7 @@ TRACE_EVENT(aer_event,
>  
>  	TP_fast_assign(
>  		__assign_str(dev_name);
> +		__assign_str(bus_type);
>  		__entry->status		= status;
>  		__entry->severity	= severity;
>  		__entry->tlp_header_valid = tlp_header_valid;
> @@ -325,8 +328,8 @@ TRACE_EVENT(aer_event,
>  		}
>  	),
>  
> -	TP_printk("%s PCIe Bus Error: severity=%s, %s, TLP Header=%s\n",
> -		__get_str(dev_name),
> +	TP_printk("%s %s Bus Error: severity=%s, %s, TLP Header=%s\n",
> +		__get_str(dev_name), __get_str(bus_type),
>  		__entry->severity == AER_CORRECTABLE ? "Corrected" :
>  			__entry->severity == AER_FATAL ?
>  			"Fatal" : "Uncorrected, non-fatal",


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (mail-bn8nam12on2065.outbound.protection.outlook.com [40.107.237.65])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id BB7191AAE27;
	Mon,  4 Nov 2024 22:05:58 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.237.65
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730757960; cv=fail; b=unICcgLCzrbP6suX1ClmhZZMpnf28QrNiDD0Rh5dXaKaFZF1TI2jfLx/EYKa/uaec6i1iX26M3JueXQTwHzxeyBgqf5I23JoN1T89eprczzIBeD9iZ8MTMl90C5ABz7bybItMcqmcT7cxNai2bL3WiWyrxihiflid8QGnT0iQxk=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730757960; c=relaxed/simple;
	bh=xsygl/qspePD82OvA2VpKOni4cTiOxkKltqnSegvMn4=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=X6eA5O7O4lcfX9472LHIyO2gBl+yV7gnHbYRDpJ1lP55IDfSw7UT2ULn8PBzLwJB/89X0Y2ct/vUNgU9ykACHJk5AlHaDIzsZqONbEK6Fmo3P4iT1jLfvRlNvMfQpPaFScb9H+Pv+jsCnQ1A1kxH6Gj/MofguF9/iZMLvmMjQSw=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=LHm2pDA4; arc=fail smtp.client-ip=40.107.237.65
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="LHm2pDA4"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=etTD7pykbFPnmABkrBdI7EX3v1MClkCY9dvcMD0ZkOW/MB2TRkS+RWWoqtDhcjpXFv3e6Ch1rAx6s5JYW34hjGEy5eMYkpj5OyKSmMxIlRYz54m5WfcZpaPWKaZ8PbIFuBgufd+W5AiVBzvB9U0hHmG8fsiFnk9dkEx3nSv5hhup89WnQoTU9YEvM5y95muZRymE1T0w195xNOQPZ1F5Ab2Fepe9zNbwb7QvhruE4i+6VwXNhKz80X+M1EYf3SPrp9TAd5s+wjjcZBpuquby0zAqwUmvuPH8NuLROWiiq0OpTLt2XyUPMz2kGPLZPMhtMYMb7N88hp4IRTlqwBWZ9A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=xsygl/qspePD82OvA2VpKOni4cTiOxkKltqnSegvMn4=;
 b=lAUk/yBYqpVLADqboqOeGSpZTRpzZMxNQSNg+Bv3qFF+RegK2/AEmS5enyFXXoRqQpzZhgHgsmMRkbpqFDpeRyJmb4WaSucqM6e/UyX8YrT+qBkU/KzmUfKY/wN5ppp5VxrqglnxrymvQXHy3l7qlXDVuS42kpdfkAzAF7D3FfOhxGrhK6gPhpYeunU3neqkE42F5yww5OCQfqQoTo1lRPcWeXJ1RUN8GA+Rz3lDb3/Y3zunno49VROY+h02yc0p650IpOt+VZ2hmjZcOk1eiK9GhDPlQ3z7lKC/1780GYVHl16XXxnE8AIAoT0y16UIELynbplm5drVnFHZWu8w5A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=xsygl/qspePD82OvA2VpKOni4cTiOxkKltqnSegvMn4=;
 b=LHm2pDA4YqFhn4EImpSHYJXrJ7k23Zup3vMbzDvFncGB5b8M1fBjUacUMOc9jgG+FxB4PTzNQ4HfYYu0gj2ZKzAEtl655mqZZ34Su5tSZ1F9gtm0f4P1ONHr4eHbgUw0oxzJQfGBMcKEdk1vtZp62+T4KUUZwXMn+5Gypa+XwP8=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 PH8PR12MB7278.namprd12.prod.outlook.com (2603:10b6:510:222::7) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.8114.28; Mon, 4 Nov 2024 22:05:55 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%3]) with mapi id 15.20.8114.028; Mon, 4 Nov 2024
 22:05:55 +0000
Message-ID: <1968415b-d217-40b4-a8cb-5465f958016e@amd.com>
Date: Mon, 4 Nov 2024 16:05:51 -0600
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 05/14] PCI/AER: Add CXL PCIe port correctable error
 support in AER service driver
To: Dan Williams <dan.j.williams@intel.com>,
 Jonathan Cameron <Jonathan.Cameron@huawei.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, dave@stgolabs.net,
 dave.jiang@intel.com, alison.schofield@intel.com, vishal.l.verma@intel.com,
 bhelgaas@google.com, mahesh@linux.ibm.com, ira.weiny@intel.com,
 oohall@gmail.com, Benjamin.Cheatham@amd.com, rrichter@amd.com,
 nathan.fontenot@amd.com, Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <20241025210305.27499-6-terry.bowman@amd.com>
 <20241030151308.000005d5@Huawei.com>
 <672941925f59d_2ce729465@dwillia2-xfh.jf.intel.com.notmuch>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <672941925f59d_2ce729465@dwillia2-xfh.jf.intel.com.notmuch>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SA0PR11CA0056.namprd11.prod.outlook.com
 (2603:10b6:806:d0::31) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|PH8PR12MB7278:EE_
X-MS-Office365-Filtering-Correlation-Id: 6999e7fd-56f9-4e36-c61d-08dcfd1cdad4
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|376014|7416014|366016|1800799024;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?T2pmUkc3Yk1kdmt4SCtYK054OEU5RWNaNGtNSEJEL1JYWXlNdjdPalFHbFdI?=
 =?utf-8?B?T3MzRTBuellYaDdEWHE3dU5JcjNKcFEzL0l0eVFOK2NZVWI5c2Z2NkYycW8z?=
 =?utf-8?B?bkttV0lCRUxJaWtCQXJIVkJzM1hRVk92Q2x5aFJldFEyQ05EL29rdGhnR1Vk?=
 =?utf-8?B?WVNmU21TRkg4cGpETWlxVXMwVUk4TUxxNVl3Q0FkcmprTlh6bDdWNjFjTzB2?=
 =?utf-8?B?M1VodmlMZW5TSFRYcWN6WDZPejFzMWNFMGk2a2RhL25CVEJpMUdJR3dQaE9W?=
 =?utf-8?B?WjV0am5IZzkxOWxMSENtUTBPRlBCYTRrUVlRZlpLd21ZYlcvck9pcXozQnNE?=
 =?utf-8?B?RFE1b2RlUVNwY3BReFZ3YjEvMHhNK1VkNm5TdUs4eC94Zkd3Y0NZZUZJUmYz?=
 =?utf-8?B?ZW9ZVEZRRktxS0JmVU5FR3gxQXdTNzBsVzFEQXBSQ3JuaGN6amRraHY0S3dw?=
 =?utf-8?B?NHNQTDcxY21tYmtEUEpNNVcyZms3Z3NMd0ZFS0hEMFd0ZkNpYnZPbC9UM3NE?=
 =?utf-8?B?amdEdktOMmpHZXM5MTZEdDFWT2lKdFlKSmxWbHhoWWx1UzA0bkhRSlZmcmtY?=
 =?utf-8?B?SDN5bjRzTUNPckhINU52eCtrRkI2c0FsTDBodDhGYlZGaHBFdUtiWTdXcWhr?=
 =?utf-8?B?RjVEZjZnWVh4dGxpQSt2NXhkVEt0RlQycEtxUFdvWElsNGE4UUJOVGVkbTd0?=
 =?utf-8?B?cjVDVEhnTW5icVlPSTVpSFdzOEJvcVA3SzhoUGpndkZZSlg5ZEJhdTVzTDdV?=
 =?utf-8?B?QWcyRm5WQ1U1M1pGWUNRVXVvSFZLK2hsN2FSYVVjTE1HV05XVEUyTGxhVzYz?=
 =?utf-8?B?NEd1WEV6VWZkbUh4emt6b0xWVDBtZ09HRTd0U2tmd0lmbVNHRzgvLzNDcURM?=
 =?utf-8?B?VWFvWDBkTThxWkNmZ0FIcW9UUE5YeFRBTnd2L1BVK1pYMXJpSHpPL0had242?=
 =?utf-8?B?dUYrNnZzUWt1bktMdzliOWJ4VEs4Y0YwcStnRGQ4MVFWNlltclIwVnNCbXpL?=
 =?utf-8?B?cVg3WlMybXBlWXhYOTZOSHM0SXZtLy9CZVl4bVVJNTRiWFFtbmNacngwMkZR?=
 =?utf-8?B?UTNsMEt2dnZoNDJ0bUhaNDhYZWt3YnZJOFF3aTdoQTcybFpKaHp1b3FhYW1X?=
 =?utf-8?B?K21kbFEzRHBwMXl1dlVCMUdiSVpsK0s4YUZQQ3FSeUo5MFJ1cFFjMjVjdmpS?=
 =?utf-8?B?M05PaWpzUi9sTTM3WlNsbzNxT2VtZmZuWUdBNThXQmUrYjFsQUd4Z0N5b3N5?=
 =?utf-8?B?blgvTGVxN0p2RElUZ250Y0ltVXRZSEFWQUR0Tkp2WGNWWlZYcEdRM0ZCTzBi?=
 =?utf-8?B?dWljMGVLdjhNL2tEcU5EU2xFNkpPKytyUEx6U1N6MmxEZTRKazcvTisrZjQ0?=
 =?utf-8?B?ZEgwdEZBMXhQaTY1bzJKMS9CL01sOTBFaSt5anA1OFNGTGNyVzBMSDBYV0Rp?=
 =?utf-8?B?ZE5OaUtTaWNSaHEyYUV2OTNERVdUNnN0VXMwT2NCbXVQS3FQNllzMTRZZllj?=
 =?utf-8?B?WXRRQXlPQis3cmw2a1R6UUJ4VkhxeGVnK2Z0ZjhiazhJQWh0cjM4OWViL21W?=
 =?utf-8?B?cSs2RE4wbVgreDBaeHkvbktBVGtNd2lSZDZCbkd2TC9jbXBvNWVmWmozRXNP?=
 =?utf-8?B?eWRTWEZCTzV2VmZDVnpMNlhrYkdQLzUwT283dGVkdXE1SThxMWsrMkdsZTlp?=
 =?utf-8?B?cHZiM2RrUmcrdzlvcFdMYXJlR1hibStTZXVwcDR4Y1RMK0NPYllYTm53OFk3?=
 =?utf-8?Q?WfqWC9jlnIhGxuvPUvzr0Yhxgqp8y5meh7pf0SG?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(376014)(7416014)(366016)(1800799024);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?Q2tkOXVIWlhRZTdrenJleEhjWHZpeHlTWE00R1lBdE0ycDV0WGZHYjJZWW5j?=
 =?utf-8?B?NTFZQkFrMlFmWTZkem1tZ1FmU3hqRnBPZDVIN0NDUERiUDFjYWFvTGowSDZS?=
 =?utf-8?B?VG5TbmlXVHphcjdMSzhyUXpsN2RCWkkvb0hHYTdqS1dKWktSN2I3Sm5ZbTYy?=
 =?utf-8?B?RWRSSEFyODljdUdhY25Ha2c5MVN3U1QvN1hKVzFyZjdWcjVZZTJJeHk3T3FK?=
 =?utf-8?B?WGlMeWQ1d1ppL3pWODFVc1RQSzVPNWVNc2JobmdFb2ZCb05ucHJtbitFdG1u?=
 =?utf-8?B?b0NHd0c5NjFBM1l5Vk5kK2F6alBtemU1WHNrNkJHMXZFbDJ1WGh0UGEvbE92?=
 =?utf-8?B?M2JKbGp5L2pSWUJmbkozK0t3cS80OC9iaVFtQ1FyRzBIcGRuOWM2bjdKZEFU?=
 =?utf-8?B?MEt0VGw2QmttUUJHbzExZVVjOHBVczhNTWVteG9MQU5oT1NPdm1YK0pUSlRD?=
 =?utf-8?B?N2hDTzFYSm5WZmdySVVOTDNianI4a1lGTGV3RDNmcGZsb2FsNXQwR2p6bWpj?=
 =?utf-8?B?WlpLMGdSVlhHbUJOckNCVHVBSXIyVVZEc2pYQnh2ZFpwUExmeVlQSmdCREZv?=
 =?utf-8?B?YUhwazhSYWh4NStNbEMydVhyeXVtUWxBdnVQRmJGWnNTb3V2OUYwdDhtaENk?=
 =?utf-8?B?VG93eDlQUVlXeDVsYlI5bHNiWDlxbVY2d1p2cWo3dXFySG1jRmJDcHFkRTdB?=
 =?utf-8?B?MmY5c1pjTzdFdXhHZmp5czZJcmowcXpBRFZBNThueFhoY0l6eEw2azh1bVR3?=
 =?utf-8?B?VGZEUXIxZE52U28reDJQdGt4SWw5ZzZHQkhLdmtvNE9zNis1OUNrV3M1dk4r?=
 =?utf-8?B?NVMycXVycHJkMmxoUG5BaEJXUC95L3YwaHlzdHd4QXBTaXd1NXE4djNDRGhI?=
 =?utf-8?B?bHcvSEdoVGlNYUloVkx0aWJuYzc3eWVmRnBnQ3NTYXRxVHdVVmk0cWc3Qm5S?=
 =?utf-8?B?UzU1K0cvYUI1TzdjR2plV21CZWJURDFoSUIyNUtVR0puQnJobjQwQ1Y4aFV3?=
 =?utf-8?B?Zkh0Y3R5WU5XeTdnVFV3bVBVaG5jeEJvTm05N2VMSTJtMmFrZG9iSGtxNmJz?=
 =?utf-8?B?LzZTUjBsem1yaFJkQUozajllZm1WcktxZEJFcC85S3QxVkMwNXk0UEVjdVp4?=
 =?utf-8?B?RSs1aGJtbjJNbG5Cd3FmVzdLd3h0UGhWb2RWVlVxY1hNWnlsWS82U2Vja2xn?=
 =?utf-8?B?NjB3N0Ywakg5YWI4MTNpNUV1WW9xN0RpNjdTaUQwYUVGNE9EYytwU25HNTMx?=
 =?utf-8?B?Y0tmTlRnYU1jcnlFaG9MelQwMWdwNjBXbGNYQ25xSGtMdTJrT3JmVUE3YmlK?=
 =?utf-8?B?OHlqaGtYWWpnMnRkZi94eTR3bWltVzRIT1c5Y2psUEF6Vy9xMzlFWG10UXZZ?=
 =?utf-8?B?MGlqNnN5OFZJYk1LMEhMYjA5K283WkUvd2dZd2NPWEw1TW5ZQjBiQlJ0dEZB?=
 =?utf-8?B?Nmdqb01RSzlPTVF3VjM5ZXpadjJNbW5SS1o0UTZ0dFhRUzlYcklZN0VGOXFO?=
 =?utf-8?B?cUd0bHpNYmwvQlZBeUlUMloxSVlyOW81UTNUOElwS0g1Ukh1Smg5L3Y5Rzhp?=
 =?utf-8?B?ZmcxSnA5ekx1ZmI5KzNIVnBoUEc2Qzg1MkhFNThhRzNJcExlbjh1eGRWZ1V1?=
 =?utf-8?B?ZEtublUrV0VhdzBRN2R4cW5LUWRlQ0FNYVZxTWpJTGRzMXlEOGdMRktXamRu?=
 =?utf-8?B?VzUwQm1oMHVGK0VPenVDNkZDWExNeHRMWkNleHI2ZmcwVkc3VzZJMTBnaWZ0?=
 =?utf-8?B?Z3NqN1dqL3AvSTlGVVRYazI2Y1k2MTlpU0p6b1ZrN1BnNElWQ2VlWnk5TnVB?=
 =?utf-8?B?TE16bXJpdFliWDcxTkprZ1NFQkVRa3dWZVZxQmtJUjAvcVlDQnc2M25Xb1d4?=
 =?utf-8?B?cmY2UjVEdlVVQ0hBeTNMRGJBNXZUQTQ3Z1NUYUVYVzd3VkVneUkyMjFhWk0z?=
 =?utf-8?B?Y05SM3hRL2kvYW1INVNHNGgxOXZ1R2FlUitqSGRsNTJUVHNYK1RBVDlWTzRP?=
 =?utf-8?B?VTQ1dE9iMWdUR3lEclc3bHlHMjNjVHY4V3l0QmJTaEh0OTBFcVNJSG5jaDd3?=
 =?utf-8?B?a2lwRmhLcnpIKyt2dFVReVB3S1ZKeDl5c3c1UzBsQWhtYis0Z2g5NjhPMjly?=
 =?utf-8?Q?YtV5p8lLs3Ornp7pDC5bbdnQ7?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 6999e7fd-56f9-4e36-c61d-08dcfd1cdad4
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 04 Nov 2024 22:05:55.4114
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 3w6ngcYvgFTPTpN3xJlslb6OGPfF0asQ13lm5waPJvhpQfmKg3RRBKrCwM/KZdVweEDuBJoEhd1JlE5UloTWfQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH8PR12MB7278



On 11/4/2024 3:50 PM, Dan Williams wrote:
> Jonathan Cameron wrote:
>> On Fri, 25 Oct 2024 16:02:56 -0500
>> Terry Bowman <terry.bowman@amd.com> wrote:
> [..]
>> Anyhow, I think it is fine but I would call out that this changes
>> things so that the PCI error handlers are no longer called for CXL ports
>> if it's an internal error.
>>
>> With a sentence on that:
>>
>> Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
>>
>> I'm not 100% convinced the path of separate handlers is the way to go
>> but we can always change things again if that doesn't work out.
> Hmm, if that part is not clear there should at least be more
> documentation as to the "why". For me it is the fact that CXL
> potentially promotes endpoint errors to region scope recovery actions,
> and that PCIe native AER has no concept of AER triggering unrecoverable
> system fatal reponse.
>
> To date panic on AER error has only been logic that ACPI APEI can
> deploy, and the kernel has no chance to evaluate the error. So, CXL
> error handlers is a reflection that these errors are outside of the PCIe
> AER error model.
Hi Dan,

I'll elaborate more and touch on what you mentioned.

Regards,
Terry

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from NAM02-DM3-obe.outbound.protection.outlook.com (mail-dm3nam02on2069.outbound.protection.outlook.com [40.107.95.69])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9F87019BBA;
	Mon,  4 Nov 2024 21:26:24 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=fail smtp.client-ip=40.107.95.69
ARC-Seal: i=2; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730755586; cv=fail; b=G4mOIfdA5pxdBPsLruODt/q89AeVwIRaNFayz1u0Cy+AL9knEURzUFgsPwOgc9+GQwXSTkI5KnQfZbGZE9gzQ+FqVUl7D+UxBe06s5NlCIqX5ah9oI0vW2XxOEcCkVRM8rWAa1G+tYc8GU9nPTzYseaTnT/xkOa1kSEqRIqjsLY=
ARC-Message-Signature: i=2; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730755586; c=relaxed/simple;
	bh=vG6P/pfERSooCyp8fuOi1+EAQhdqdPlpZeBcWGPdSEk=;
	h=Message-ID:Date:Subject:To:Cc:References:From:In-Reply-To:
	 Content-Type:MIME-Version; b=t9A5QRRJEyx66TDbJe84Ji7SvuYFqqbDWqWFuB9GbSGRsMjPje6Id18Po/g12EqVmTqwYSx9Ymh5/zYkAz4tyNVNOFLwXNE8SxtB1q6NfkkuHk3ck0gWpfbng7Au/p9qQTU8dmEKcvn0rF6IAUe1KjMaa6k6EK4ibYwmU1D6fdM=
ARC-Authentication-Results: i=2; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com; spf=fail smtp.mailfrom=amd.com; dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b=QMRPAvK0; arc=fail smtp.client-ip=40.107.95.69
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=amd.com
Authentication-Results: smtp.subspace.kernel.org; spf=fail smtp.mailfrom=amd.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=amd.com header.i=@amd.com header.b="QMRPAvK0"
ARC-Seal: i=1; a=rsa-sha256; s=arcselector10001; d=microsoft.com; cv=none;
 b=bvjLBWqXjGVIcdQa5OtFiYY+QTWrGQ8MZl7y9QPLX4NTbMdFgFt4OgZ/XlUH8jGTS9mZ/v47GhjlhTAXn21sNBA/e1PkroGZZEHbK1BtcQ6w9I+NMDxR7GhmRUhQ/t6E4HpW95L8N/zPfsMlvq5UjWs2KI444l9VN1Qkok2wBh7CwWMz161t5AcDxK17G/LE2LAyFqHjiRQ/JWCX1+JFY5rsJSPJC/vcdsqSv0fAmAhoIvuJjUuqu4SHN+56oWmP/yDIJmldAcJaNR23TazO60+YeVbHTGCbv33OMbu/tCvJGYZlY5YAEkdsrO8dJUFmaepJVTLJ+3y0V80FvQIrsQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector10001;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=+vZRezUiuRlAOetaKDKl6vi0Dwx1KiETwKd3PTTXvHs=;
 b=pQZNlL2q8dVe49o94DO6nQW07WSlomfzR3clCp6YW/PcJLYkyfbiLuZeOdg3ldmxoOoRktfzNiVsCbXsyBUbXLTksIUCA9oZW3sv9grfmQImJN2MJNDhy5AIO5kk9YdKNOv4/ZqSrLPLd863eRn46AnUEPwLA4gWxS+BWkRET3Vk/W7C5FRmDYZZ6NY6gFSTfyGD9/KAfDObLF235N12uTowzJO2EWZ7wXM1LWIoT+9mPQOuak9EqKw1nJI7mic7zv7hf1+6UulB4tUwfacBJzLHnE6utJWWVhFOmzjL8FYqeLCbL974YzVFOY+bNtt+NcBc/B1JkScOEAEgGlQLJg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=amd.com; dmarc=pass action=none header.from=amd.com; dkim=pass
 header.d=amd.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=amd.com; s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=+vZRezUiuRlAOetaKDKl6vi0Dwx1KiETwKd3PTTXvHs=;
 b=QMRPAvK0qvGxxIyx/WbjQ7YwhkmwQFAOt4hQhMHlNOdi6UbRlmBtsGRkzV7oCCOL3Kt8MzMU02gigBSQVvLofD6v6Yk/JON7k2jz3GwjFmv6FxeeDHXJX+L0ip0c4UaRVZHE1w9g3lXAOkv77mSGCvVWnNwO7Ylfcr/WujQi0RE=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=amd.com;
Received: from DS0PR12MB6390.namprd12.prod.outlook.com (2603:10b6:8:ce::7) by
 IA1PR12MB6457.namprd12.prod.outlook.com (2603:10b6:208:3ab::17) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.8114.26; Mon, 4 Nov
 2024 21:26:17 +0000
Received: from DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f]) by DS0PR12MB6390.namprd12.prod.outlook.com
 ([fe80::38ec:7496:1a35:599f%3]) with mapi id 15.20.8114.028; Mon, 4 Nov 2024
 21:26:17 +0000
Message-ID: <341e5c63-8f1c-4b53-a6f0-bdd7483f0c93@amd.com>
Date: Mon, 4 Nov 2024 15:25:38 -0600
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH v2 0/14] Enable CXL PCIe port protocol error handling and
 logging
To: Fan Ni <nifan.cxl@gmail.com>
Cc: ming4.li@intel.com, linux-cxl@vger.kernel.org,
 linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org, dave@stgolabs.net,
 jonathan.cameron@huawei.com, dave.jiang@intel.com,
 alison.schofield@intel.com, vishal.l.verma@intel.com,
 dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
 ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
 rrichter@amd.com, nathan.fontenot@amd.com,
 Smita.KoralahalliChannabasappa@amd.com
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <ZyUXLpQBBgTl733z@fan> <8a73bfa1-b916-4f0a-92be-0cb677e1e334@amd.com>
 <ZyVSAzSW1HEd2_Mp@fan>
Content-Language: en-US
From: "Bowman, Terry" <terry.bowman@amd.com>
In-Reply-To: <ZyVSAzSW1HEd2_Mp@fan>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-ClientProxiedBy: SN7P220CA0019.NAMP220.PROD.OUTLOOK.COM
 (2603:10b6:806:123::24) To DS0PR12MB6390.namprd12.prod.outlook.com
 (2603:10b6:8:ce::7)
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: DS0PR12MB6390:EE_|IA1PR12MB6457:EE_
X-MS-Office365-Filtering-Correlation-Id: 377156a5-10ab-497e-d703-08dcfd17513b
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;ARA:13230040|366016|7416014|376014|1800799024;
X-Microsoft-Antispam-Message-Info: =?utf-8?B?UCtPTmcwWUI5RjVxRklLR0FhcmRrNlNoL3NhQ2h5VFFpSlhWREoxTnJxSytr?=
 =?utf-8?B?TVdPY3IreWV1dlZJOFhiZllyOG13QmRQZ3VuNVFXOW1FSVoySiswTVJWS09i?=
 =?utf-8?B?WjJHTXg2TDlOWmFnOE8yd1VJWThlZ2RxRzNtTGdWU3l5NDdQRjJQYlFIVy9F?=
 =?utf-8?B?b3Q0UXBtWFUrRUdFazl0SFMwWGZuOHF0eTBubDdhTTNQdDg2Um5XL2xVbmFY?=
 =?utf-8?B?a25TN3pUelVKbXZtWnZ4Z0VrWjY2cVY5WDRMd3NwRzAwNWkxMFpaVXVSTkcx?=
 =?utf-8?B?Qnc4YjZCZXI0ekdDNzhRaC9sa3FUaXhTalcxVjBEcjA4UU8yczNMdWY5b2p4?=
 =?utf-8?B?UVdRenE4M200cGNodlBuQ1o4NGlYU3l4U3lzWHc4cXFydjRiRjI0T2tCeGhG?=
 =?utf-8?B?aVIzNmtNN2tCTlFGU3NIbUpNS21kbG82RDZQV2Zvb3pGd2VTYkx4MVYvN0Fm?=
 =?utf-8?B?U0ZKeFhyRDhhVEIzbjFCUmlIeXoxaGl6OVZPUTNVRXNySXZwVnhHcTdwUHVZ?=
 =?utf-8?B?bVBiSXY1dFkrUlFmWnNlZ2lMcWYzeWl1bjQ4M0hKcGNvbit2TDMzaU56bVlq?=
 =?utf-8?B?SmNTZU1DaEVIWFlXVzByVG0wOGNNbTJhTnM3dm9wa3A2bmtRVENLRlZSWHRL?=
 =?utf-8?B?TkltbXNNNjQvUzI5MDBtdkp1SkMxOTJkV2VvOFp1V1E5WndHNVdGRmtnemlW?=
 =?utf-8?B?RjJrUlllRmhkSHQrM3VDNDI0cWx2L2tUVFhXVzRlWlhEUlZPNlF5YVpFdm9E?=
 =?utf-8?B?a2VoOEllTDBvdG9JYWpGd1lUdFloUnlOa0l1dzJudzhoaldtZ0lwUWJ3RHBh?=
 =?utf-8?B?ZU56QVJnSGJxcWtxam00NHl1dWxLSXV1aVk4TDhiaEYwUy90TWdZNTF6SDE5?=
 =?utf-8?B?bWUvbGJLZ3kxbHA0WlQrS2xjenFJL0Y4WWZTMFFFSGt2ZWdpdG1LRHdqQWxv?=
 =?utf-8?B?eG9uUjllSFY2OGlOTVAvaGpuU3ZycWdKZlpjazdaakx6NkRIYnE0RHVDbGpE?=
 =?utf-8?B?MGVxaStoNGNnQTFTdnUwY2RUalE3bGhVSDUwSjlIY0xsTHBKMGlRN09WcDZp?=
 =?utf-8?B?WGgrU3J5MC8yS0RTa1hQb2ptQW5xR0lPZnU2TVFTdUZJdjdCdENkV2p4V0lJ?=
 =?utf-8?B?eFYwb0ZZbFYvWDFnNFFlbHlwMlZ2V0Fqbit4Vm0vUkxNcnI4UUFaTmZyTjBR?=
 =?utf-8?B?ZEVNZy94QTVENzZSa0JqUm1XRmdJZXAvWVlXRXUzN1dXNkxxaEdVdUJya21a?=
 =?utf-8?B?YmJBZGJkR0ZFZ2EzcDV1cHZkNGdzRERyM1Q1MnpobVJYbU9GdHRSNTRub2V0?=
 =?utf-8?B?Q2NtTEhVMVVMN0p6U2VGWkRWaFFPVFA3bVBRL0kveVRvR2JpajhsWjB0OUdD?=
 =?utf-8?B?TGFQaXRNZzl6SGkvUWxtMitPKzFPL0lRMXJQVjVFTnBnVG55RVlMUXVSMjZT?=
 =?utf-8?B?STVJQkRBL2d3ak5UcjZtSDVhNlRpbEwzWW1zaThud29oVjAvQ0VnYTFkZXpl?=
 =?utf-8?B?cFpQQlhBRDd3cnNhL1Q1N2hlRVgyMmNhZWsxeDZtK05RdXZvTzRwSzhubXFl?=
 =?utf-8?B?M0c4dFFLU1dEQWowc2RBZmEreTlKMWFvSC9BK3Y1WFJWL1BURG1pSmRuM3Y0?=
 =?utf-8?B?allMdWJCckZhcHhKa0F2T0tsZXVZSlU3dXdyZ2M0b1hIMDI3WHk2NG5kTWZT?=
 =?utf-8?B?TExEUkhTWVR0YjhmZmc5aXljaUdIMHZETVIvSTVid2JNRlRRSnBNTktXMng0?=
 =?utf-8?Q?dldWGNXxZiGWL8R4X2/285FZ85CGwj/Sh3gWxNk?=
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:DS0PR12MB6390.namprd12.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230040)(366016)(7416014)(376014)(1800799024);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?cU00WlFqZ25DWU4zc29uY1lyTnhFcXdZc3Q0YzFmRDZkeEROOG9qVnRFUFk1?=
 =?utf-8?B?bVVMS1ZOS1h1YjRMRkVZS3RYYmdUVlFybm5yMHZCd2M1cWtEcmR5WVh0eldM?=
 =?utf-8?B?UFl0Wnk0bDRoL0Z4WWN5U0xaOHRYNVN6R3lKUldoNTVvZUpSandFZDBvSC9x?=
 =?utf-8?B?Nlo2VnFQS3dSdmNsY3pUTEs4cisvYi9lMzh6eUdRUWhuc1lQclZUbEo5RjY4?=
 =?utf-8?B?QjNiSG1qanNYcmtCck5GQVpsNXNtRUs3Z0JLdDNZSTZiUFgwZHVEVGFIUmFO?=
 =?utf-8?B?SjEvb09jZm02VFBsenFTRGhKRXlDRlUzM3FFdFBMU3VXc3Y1OVp4QmtIdVNs?=
 =?utf-8?B?NGFyWngwVENMQTZhQlFCRWtIWXExcU01SG1MZUY0T3hFNHZ1VHBpMHN2dkxo?=
 =?utf-8?B?Kzd0YkUrZU9XQlZPOE1tNXVWVGlPdGZsK0U3UFRoQjYydzI1K3pUOThtbkhh?=
 =?utf-8?B?d2ZGa1dmc0Vvb2dRSFpnMjV3ZFpUNWNGUVlPVWUrcFRQa0ltekZpam85cEpC?=
 =?utf-8?B?TUJJTzRqRTdtRDdwQkcwM2p1K2htRGQ2alBiSmdyZHhPWWsyWHp6WEhuTnJB?=
 =?utf-8?B?and4UE9sVjZwVks3dU03T012QUJ5Z0UxdWZnSVhpdUk5eGtsRHJlY3JXUFlm?=
 =?utf-8?B?ZitXYVc3ZWJXNGg5L1V3bVg5NTd5b3dpbjJWdzlYMHllc3VMYjNTR2RpSVc1?=
 =?utf-8?B?MkIyTGttZmxBVzVTdUo2enArNmtmTUtCemZkVkhKTDFKeThZRi9EaFo2My90?=
 =?utf-8?B?MlM2V0xMeVpCY1ViZnV5ZGxaaDdXWG51NTBkT2hrV0hDbEdQZ0tpd2FjbUZy?=
 =?utf-8?B?dm5hTWxMeWtOblNvbWorWWY0bVJ5cjNsUm4wNTZCUk5RVTJhZU1NZUcxQU44?=
 =?utf-8?B?UEU3cUx0N0Q4MjlEajZIbDBmUXhpMTRwV0lOSXZ2YWJ6QjJocjQzVytacEFF?=
 =?utf-8?B?ek9MUm8xRHY4VE1PUVFjeWFiZHFoTGNzRW51cXRuVlpTL2RIdkRtbmJOS0xN?=
 =?utf-8?B?TkZ0d3BGRDBkQk15OWpEU09sTmZiMHYwVDRlOGNYcHBPYWNTTEN2T2pNejZP?=
 =?utf-8?B?U3htQ1hIRFhRdEdDTVNzajYxK3Q4S09KV1JoUHFSaUpMTnRNWFp4OVlCMis5?=
 =?utf-8?B?T2tJbGppbmJyWjB2NEp5cmFETEdNczQzc0NzNlVrRG5xSzkrZ2tybEkvQnNQ?=
 =?utf-8?B?aS95ZTJ0R284NUhmWWZyWnd6K0FPQklPR1c5cXZvdFBTSXNhSTdFOWdhS0xN?=
 =?utf-8?B?Qmp2cEVsNnZrMkpTek9QVG9WNTRQdkRFYitCNVU4K1NWU0Qrd3pERlBWSnZX?=
 =?utf-8?B?bldEbHJMUHlySDk0U3J2YzI4SmJ6S1JMd0lEZHdwcXQwNFE1USt6bmNuOXBK?=
 =?utf-8?B?V09paCs5ZFRKZmtTWG5McWxSRkoweXR5TnVIM3hyYm0rZHNpSmhWMTlJMmcr?=
 =?utf-8?B?TkdqVlVnQ2JQMjR6MVpNeTVKdHZVNUZIVWgrMkxkSFJoenlrREt0WmtsdlhY?=
 =?utf-8?B?ak5uMFlMeFJzRGd6cW9xZGU1RWhvS042RXpwV3JyOFpoMExNZCtoT3R6eGRR?=
 =?utf-8?B?OUpXSFNkTG9UYUloQ0dITGJHUE9HZmllRmcycXFxM1JUVmJMV05vZGMzcndo?=
 =?utf-8?B?WlE2YXRCcVA3MThuYnhuaFZoTEptUTZlbFFqQ3I3TzhYZXNlZmp4R1M3NS9v?=
 =?utf-8?B?RkRKeVF2azU2TjgrRGEwWXJLLzFUYUtRYjQ5QUlhK2Raa1BkT1VyZFJ6UzI3?=
 =?utf-8?B?cnlIN3gzdEJFMDRyazFnNExHdjBKdGVieXJRT3BOcUUzQUQzeUx2bWxqdGRu?=
 =?utf-8?B?K1dNUTV5a3U0UWljT1VPdFdEUjZNZm84cmhpYldmY2Y1L1BPbkYxcDk5L2tF?=
 =?utf-8?B?R2k4c1RrSlFoazZLbHJHUDZSWENPNVIxa0IrYjNQMGlRY2ZMaEExZFZGMzRC?=
 =?utf-8?B?SXpoZjNxWXhuRitmSkVEeHdYVmVqSzlWdzB2a2JIWDZiSTdsUmtLb3VXbUFw?=
 =?utf-8?B?UWZyTk1uNnJNcGxqSU94Q080SVBEY3R4VDMwT1JQMTgvNWQ5cEVIbU5mZVRz?=
 =?utf-8?B?MWQxRmxyMDRPWWdib2x0VDl1dHo1SklJRUtrMVlhd3lua0QzR21NRTJGWExM?=
 =?utf-8?Q?fVEgbNswsh/FqtZmLUb4Ijbsn?=
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 377156a5-10ab-497e-d703-08dcfd17513b
X-MS-Exchange-CrossTenant-AuthSource: DS0PR12MB6390.namprd12.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 04 Nov 2024 21:26:17.1295
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: LmoV//78yAHmQa4G6DauHFAFhjIfsIZodVrAbJonlaJlhPmbWmLZ5s2jTfAFhM23ySCHL5eox5Bpn+kMT7NZwQ==
X-MS-Exchange-Transport-CrossTenantHeadersStamped: IA1PR12MB6457



On 11/1/2024 5:11 PM, Fan Ni wrote:
> On Fri, Nov 01, 2024 at 01:28:12PM -0500, Bowman, Terry wrote:
>> Hi Fan,
>>
>> I added comments below.
>>
>> On 11/1/2024 1:00 PM, Fan Ni wrote:
>>> On Fri, Oct 25, 2024 at 04:02:51PM -0500, Terry Bowman wrote:
>>>> This is a continuation of the CXL port error handling RFC from earlier.[1]
>>>> The RFC resulted in the decision to add CXL PCIe port error handling to
>>>> the existing RCH downstream port handling in the AER service driver. This
>>>> patchset adds the CXL PCIe port protocol error handling and logging.
>>>>
>>>> The first 7 patches update the existing AER service driver to support CXL
>>>> PCIe port protocol error handling and reporting. This includes AER service
>>>> driver changes for adding correctable and uncorrectable error support, CXL
>>>> specific recovery handling, and addition of CXL driver callback handlers.
>>>>
>>>> The following 7 patches address CXL driver support for CXL PCIe port
>>>> protocol errors. This includes the following changes to the CXL drivers:
>>>> mapping CXL port and downstream port RAS registers, interface updates for
>>>> common restricted CXL host mode (RCH) and virtual hierarchy mode (VH),
>>>> adding port specific error handlers, and protocol error logging.
>>>>
>>>> [1] - https://lore.kernel.org/linux-cxl/20240617200411.1426554-1-terry.bowman@amd.com/
>>>>
>>>> Testing:
>>> Hi Terry,
>>> I tried to test the patchset with aer_inject tool (with the patch you shared
>>> in the last version), and hit some issues.
>>> Could you help check and give some insights? Thanks.
>>>
>>> Below are some test setup info and results.
>>>
>>> I tested two topology,
>>>   a. one memdev directly attaced to a HB with only one RP;
>>>   b. a topology with cxl switch:
>>>          HB
>>>         /  \
>>>       RP0   RP1
>>>        |
>>>      switch
>>>        |
>>>  ----------------
>>>  |    |    |    |
>>> mem0 mem1 mem2 mem3
>>>
>>> For both topologies, I cannot reproduce the system panic shown in your cover
>>> letter.  
>>>
>>> btw, I tried both compile cxl as modules and in the kernel.
>>>
>>> Below, I will use the direct-attached topology (a) as an example to show what I
>>> tried, hope can get some clarity about the test and what I missed or did wrong.
>>>
>>> -------------------------------------
>>> pci device info on the test VM 
>>> root@fan:~# lspci
>>> 00:00.0 Host bridge: Intel Corporation 82G33/G31/P35/P31 Express DRAM Controller
>>> 00:01.0 VGA compatible controller: Device 1234:1111 (rev 02)
>>> 00:02.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 03)
>>> 00:03.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
>>> 00:04.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
>>> 00:05.0 Host bridge: Red Hat, Inc. QEMU PCIe Expander bridge
>>> 00:1f.0 ISA bridge: Intel Corporation 82801IB (ICH9) LPC Interface Controller (rev 02)
>>> 00:1f.2 SATA controller: Intel Corporation 82801IR/IO/IH (ICH9R/DO/DH) 6 port SATA Controller [AHCI mode] (rev 02)
>>> 00:1f.3 SMBus: Intel Corporation 82801I (ICH9 Family) SMBus Controller (rev 02)
>>> 0c:00.0 PCI bridge: Intel Corporation Device 7075
>>> 0d:00.0 CXL: Intel Corporation Device 0d93 (rev 01)
>>> root@fan:~# 
>>> -------------------------------------
>>>
>>> The aer injection input file looks like below,
>>>
>>> -------------------------------------
>>> fan:~/cxl/cxl-test-tool$ cat /tmp/internal 
>>> AER
>>> PCI_ID 0000:0c:00.0
>>> UNCOR_STATUS INTERNAL
>>> HEADER_LOG 0 1 2 3
>>> ------------------------------------
>>>
>>> dmesg after aer injection 
>>>
>>> ssh root@localhost -p 2024 "dmesg"
>>> [  613.195352] pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
>>> [  613.195830] pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
>>> [  613.196253] pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
>>> [  613.198199] pcieport 0000:0c:00.0: AER: No uncorrectable error found. Continuing.
>>> -----------------------------------
>> This is likely because the device's CXL RAS status is not set and as a result returns false and bypasses the panic.
>> Unfortunately, the aer-inject only sets the AER status and triggers the interrupt. The CXL RAS is not set.
>>
>> I attached 2 'test' patches. The first patch sets the device's RAS status to simulate the error reporting.
>> This will have to be adjusted as the patch looks for a specific device's bus and this will likely be a different
>> bus then the device's you test in your setup.
>>
>> The 2nd patch enables UIE/CIE. I moved this out of the v2 patchset. I need to revisit this to see if it is
>> needed in the patchset itself (not just a test patch).
>>
>> Regards,
>> Terry
>>
> Hi Terry, 
>
> I checked the two patches you attached, do we really need the first
> patch to umask internal error? I see it is already unmasked in
> aer_enable_internal_errors() which is called in aer_probe().
> I tried to only apply the other patch and test again, it seems the test
> output is the same as applying two patches. The system panics as well.
>
> Fan
Hi Fan,

Which device did you inject into? RP, DSP, or USP?

Yes, the RP UIE & CIE are enabled by the AER driver. RCEC too. But, this is not done for CXL DSP
and USP. Below are details from the spec describing how an AER error masked at the source will not
be propagated as notification to the root complex (RP or RCEC).

'If an individual error is masked when it is detected, its error status bit is still affected,
but no error reporting Message is sent to the Root Complex, and the error is not recorded in the
Header Log, TLP Prefix Log, or First Error Pointer.'[1]

[1] PCIe Spec 6.2.3.2.2 Masking Individual Errors

Also, there can be platform BIOS settings that enable/disable UIE/CIE.

Regards,
Terry


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pf1-f176.google.com (mail-pf1-f176.google.com [209.85.210.176])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 65A76140E34;
	Fri,  1 Nov 2024 22:11:32 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.210.176
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730499094; cv=none; b=GKt5lNPGH73fdmO4aDZErQi5Af/8bBs9k+2Q1do6jo6taK7WQgmT4k3+/CTUYwbev6L/O6bgzyvh0IsTT9KQpC3qPCQj2nNuHyhTpV/fTNWcDTqONS05cOFQkARGDxUrrrNI2i3lwFHVZtW/IoTWnrBvC3EZdIOI5LS8SJ6fb9Y=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730499094; c=relaxed/simple;
	bh=NVgd0qeM5eJhA+iymIHzjTwRMkqaJc8fzn5B62mDq1o=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=Y/vPH39x/VpdIVqs+v/7oYjVFElF0IA7g5bVuZBDCasA8nOyCB/WwIoqQ4Jv3IIBuso6bTrdaFgJj7mj7tE6Y3beuSGsLrFlk8iN7dKFm7lPnxqPP4apd4dydE26fx5g3cbvB8szvOpohDM/grKVQAD0VvQWxaj7LCJHUFhHQfE=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=m/n423b4; arc=none smtp.client-ip=209.85.210.176
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="m/n423b4"
Received: by mail-pf1-f176.google.com with SMTP id d2e1a72fcca58-7206304f93aso2286249b3a.0;
        Fri, 01 Nov 2024 15:11:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1730499091; x=1731103891; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=X21LhufANyPN/Tj7n8TfP1pRe/ZRiL+OkK+pbxybc9s=;
        b=m/n423b4DITs57e23W6npNQRjdxrQG09AL2gWGRsAUoWjPbxYdCTcobNWaGo2DA4wh
         2m9V2vwh4H8gyDJ/3mRusa8CVeoO2ctYg3uId41hCQzyuaOD85n9oVBEJ5Zfb4QGPnYK
         jZRFyM7/amZQ6LacN/gWnD+dsqeigTCYeNI6QOzxTA6Wbeoyv6teV1MQ6Myrr8cmXc9L
         rvc3a61MQg7BKuRRuaC631t31Z5IsvcD1gruqn6hL+IPAQcBjFh3aRLKaFBum6ZAzZVd
         Ic+R1+/ZjIoL9Y/REi2iVsYYxtu0rY0GwjJDgdxcISrV/Zoh+PFMC5JI+WuX0heaDAM7
         +qUQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1730499091; x=1731103891;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=X21LhufANyPN/Tj7n8TfP1pRe/ZRiL+OkK+pbxybc9s=;
        b=xP2pwC9A9jxwtshofpAqkyaW6dW6dBU16mQJPoY0Mm4NyzuXATHVMsRIsnRQbiRTOm
         idZpoX4yxw2ynwZPysC6XxH4ODdJ9O8QAzGT1KwusmfC0ezZ2rvJ68Uo65/Zsk4LYdbO
         weKQcMCODQuc8fv7BMkVUHoZmzcSwJseyt/52rmX5+GIb8OWs0Ns6wBzbEsH6SIfTswM
         xXrGj0x/YBiK/30BjCq1LtCvxqUZeZDp3Y3NLklGxApxloOSO8DMqQ4c9RumKwpmflus
         5KtDqLDcsyEerRBwY7G1ofI10yc6R1DiKDGv/m1El9WGyKoTEEKDwq7r1e/UXLD738uD
         gUFA==
X-Forwarded-Encrypted: i=1; AJvYcCV36o1Xc+BqsRwCE6qlp6t6GZUMwIe5DxOEsnfUzwrihAEAZM9ub6LxE4zklTNs51mRw2xkCs2v/1ddirUZ@vger.kernel.org, AJvYcCV82YKuHc+bjyisqGu/pU0o6fAjMPSCH9ffSZaC2+Mi2TBDLbP26zJ8RDtFhXv9PHKSDLYQrl4ymqkR@vger.kernel.org, AJvYcCWc24CST/ozeDXEYfbsgGwIOCN2RXFLr/FIAjHIV3oaiSsCX/pfHjuq27SPB27W6+rfSWZZgyrz18k=@vger.kernel.org
X-Gm-Message-State: AOJu0YzUnfDwtSVbinvA1ED1MuAziIAh0aPXcyj9seRJQ6opFQR6mLMq
	PzSxYWSyTTnCjS2qquqKoObYh5PUQINCJrVhqC+NLGu7aM+4E8Kh
X-Google-Smtp-Source: AGHT+IGbbxtFiPyMCfArRKwSbL6RjlrOdwiBEOvXkXzELLDx/f9OZhDO9vxDcZ1fySMliPur/PtlOg==
X-Received: by 2002:a05:6a21:9d83:b0:1d9:1377:c1a3 with SMTP id adf61e73a8af0-1dba54df54fmr6048677637.40.1730499091282;
        Fri, 01 Nov 2024 15:11:31 -0700 (PDT)
Received: from fan ([2601:646:8f03:9fee:eba7:38e1:4f3b:331c])
        by smtp.gmail.com with ESMTPSA id 41be03b00d2f7-7ee455a510fsm2912182a12.49.2024.11.01.15.11.29
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Fri, 01 Nov 2024 15:11:30 -0700 (PDT)
From: Fan Ni <nifan.cxl@gmail.com>
X-Google-Original-From: Fan Ni <fan.ni@samsung.com>
Date: Fri, 1 Nov 2024 15:11:15 -0700
To: "Bowman, Terry" <terry.bowman@amd.com>
Cc: Fan Ni <nifan.cxl@gmail.com>, ming4.li@intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	linux-pci@vger.kernel.org, dave@stgolabs.net,
	jonathan.cameron@huawei.com, dave.jiang@intel.com,
	alison.schofield@intel.com, vishal.l.verma@intel.com,
	dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
	ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
	rrichter@amd.com, nathan.fontenot@amd.com,
	Smita.KoralahalliChannabasappa@amd.com
Subject: Re: [PATCH v2 0/14] Enable CXL PCIe port protocol error handling and
 logging
Message-ID: <ZyVSAzSW1HEd2_Mp@fan>
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <ZyUXLpQBBgTl733z@fan>
 <8a73bfa1-b916-4f0a-92be-0cb677e1e334@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <8a73bfa1-b916-4f0a-92be-0cb677e1e334@amd.com>

On Fri, Nov 01, 2024 at 01:28:12PM -0500, Bowman, Terry wrote:
> Hi Fan,
> 
> I added comments below.
> 
> On 11/1/2024 1:00 PM, Fan Ni wrote:
> > On Fri, Oct 25, 2024 at 04:02:51PM -0500, Terry Bowman wrote:
> >> This is a continuation of the CXL port error handling RFC from earlier.[1]
> >> The RFC resulted in the decision to add CXL PCIe port error handling to
> >> the existing RCH downstream port handling in the AER service driver. This
> >> patchset adds the CXL PCIe port protocol error handling and logging.
> >>
> >> The first 7 patches update the existing AER service driver to support CXL
> >> PCIe port protocol error handling and reporting. This includes AER service
> >> driver changes for adding correctable and uncorrectable error support, CXL
> >> specific recovery handling, and addition of CXL driver callback handlers.
> >>
> >> The following 7 patches address CXL driver support for CXL PCIe port
> >> protocol errors. This includes the following changes to the CXL drivers:
> >> mapping CXL port and downstream port RAS registers, interface updates for
> >> common restricted CXL host mode (RCH) and virtual hierarchy mode (VH),
> >> adding port specific error handlers, and protocol error logging.
> >>
> >> [1] - https://lore.kernel.org/linux-cxl/20240617200411.1426554-1-terry.bowman@amd.com/
> >>
> >> Testing:
> > Hi Terry,
> > I tried to test the patchset with aer_inject tool (with the patch you shared
> > in the last version), and hit some issues.
> > Could you help check and give some insights? Thanks.
> >
> > Below are some test setup info and results.
> >
> > I tested two topology,
> >   a. one memdev directly attaced to a HB with only one RP;
> >   b. a topology with cxl switch:
> >          HB
> >         /  \
> >       RP0   RP1
> >        |
> >      switch
> >        |
> >  ----------------
> >  |    |    |    |
> > mem0 mem1 mem2 mem3
> >
> > For both topologies, I cannot reproduce the system panic shown in your cover
> > letter.  
> >
> > btw, I tried both compile cxl as modules and in the kernel.
> >
> > Below, I will use the direct-attached topology (a) as an example to show what I
> > tried, hope can get some clarity about the test and what I missed or did wrong.
> >
> > -------------------------------------
> > pci device info on the test VM 
> > root@fan:~# lspci
> > 00:00.0 Host bridge: Intel Corporation 82G33/G31/P35/P31 Express DRAM Controller
> > 00:01.0 VGA compatible controller: Device 1234:1111 (rev 02)
> > 00:02.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 03)
> > 00:03.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
> > 00:04.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
> > 00:05.0 Host bridge: Red Hat, Inc. QEMU PCIe Expander bridge
> > 00:1f.0 ISA bridge: Intel Corporation 82801IB (ICH9) LPC Interface Controller (rev 02)
> > 00:1f.2 SATA controller: Intel Corporation 82801IR/IO/IH (ICH9R/DO/DH) 6 port SATA Controller [AHCI mode] (rev 02)
> > 00:1f.3 SMBus: Intel Corporation 82801I (ICH9 Family) SMBus Controller (rev 02)
> > 0c:00.0 PCI bridge: Intel Corporation Device 7075
> > 0d:00.0 CXL: Intel Corporation Device 0d93 (rev 01)
> > root@fan:~# 
> > -------------------------------------
> >
> > The aer injection input file looks like below,
> >
> > -------------------------------------
> > fan:~/cxl/cxl-test-tool$ cat /tmp/internal 
> > AER
> > PCI_ID 0000:0c:00.0
> > UNCOR_STATUS INTERNAL
> > HEADER_LOG 0 1 2 3
> > ------------------------------------
> >
> > dmesg after aer injection 
> >
> > ssh root@localhost -p 2024 "dmesg"
> > [  613.195352] pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
> > [  613.195830] pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
> > [  613.196253] pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
> > [  613.198199] pcieport 0000:0c:00.0: AER: No uncorrectable error found. Continuing.
> > -----------------------------------
> 
> This is likely because the device's CXL RAS status is not set and as a result returns false and bypasses the panic.
> Unfortunately, the aer-inject only sets the AER status and triggers the interrupt. The CXL RAS is not set.
> 
> I attached 2 'test' patches. The first patch sets the device's RAS status to simulate the error reporting.
> This will have to be adjusted as the patch looks for a specific device's bus and this will likely be a different
> bus then the device's you test in your setup.
> 
> The 2nd patch enables UIE/CIE. I moved this out of the v2 patchset. I need to revisit this to see if it is
> needed in the patchset itself (not just a test patch).
> 
> Regards,
> Terry
> 
Hi Terry, 

I checked the two patches you attached, do we really need the first
patch to umask internal error? I see it is already unmasked in
aer_enable_internal_errors() which is called in aer_probe().
I tried to only apply the other patch and test again, it seems the test
output is the same as applying two patches. The system panics as well.

Fan

> >
> > The problem seems to be related to the cxl_error_handler not been assigned for
> > cxlmem device. 
> >
> > in
> > cxl_do_recover() {
> > ...
> >     327     cxl_walk_bridge(bridge, cxl_report_error_detected, &status);                         
> >     328     if (status)                                                                 
> >     329         panic("CXL cachemem error. Invoking panic");                   
> > ...
> > }
> > The status returned is false, so no panic().
> >
> > I tried to add some dev_dbg info to the code to debug.
> > Below are the debug info and kernel code changes for debugging. 
> > --------------------------------------
> > fan:~/cxl/cxl-test-tool$ cxl-tool.py --cmd dmesg | grep XXX
> > [    1.738909] cxl_mem:cxl_mem_probe:205: cxl_mem mem0: XXX: add endpoint
> > [    1.739188] cxl_mem:devm_cxl_add_endpoint:85: cxl_port port1: XXX: add endpoint
> > [    1.739509] cxl_mem:devm_cxl_add_endpoint:92: cxl_mem mem0: XXX: init ep port aer
> > [    1.739876] cxl_core:cxl_dport_init_ras_reporting:907: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 1
> > [    1.740338] cxl_core:cxl_dport_init_ras_reporting:913: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 2
> > [    1.740812] cxl_core:cxl_dport_init_ras_reporting:927: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 3
> > [    1.741273] cxl_core:cxl_assign_port_error_handlers:851: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____)
> > [    1.741812] cxl_core:cxl_assign_port_error_handlers:855: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____)
> > [    1.742263] cxl_core:cxl_assign_port_error_handlers:857: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____) (____ptrval____)
> > fan:~/cxl/cxl-test-tool$ 
> > --------------------------------------
> >
> > dmesg after error injection:
> > --------------------------------------
> > ssh root@localhost -p 2024 "dmesg"
> > [  228.544439] pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
> > [  228.544977] pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
> > [  228.545381] pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
> > [  228.545879] pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/00000000
> > [  228.546360] pcieport 0000:0c:00.0:    [22] UncorrIntErr          
> > [  228.546698] pcieport 0000:0c:00.0: AER: XXX: call cxl_err_handler: 00000000a268bfcb 000000009e0da039
> > [  228.547103] cxl_pci 0000:0d:00.0: AER: XXX: call cxl_err_handler: 00000000b9f08b93 0000000000000000
> > [  228.547515] pcieport 0000:0c:00.0: AER: No uncorrectable error found. Continuing.
> > fan:~/cxl/cxl-test-tool$ 
> > --------------------------------------
> >
> >
> > Kernel changes:
> > --------------------------------------
> > diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> > index 5f7570c6173c..bcecd1283fc6 100644
> > --- a/drivers/cxl/core/pci.c
> > +++ b/drivers/cxl/core/pci.c
> > @@ -848,10 +848,13 @@ static void cxl_assign_port_error_handlers(struct pci_dev *pdev)
> >  {
> >  	struct pci_driver *pdrv = pdev->driver;
> >  
> > +    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p\n enter", pdev);
> >  	if (!pdrv)
> >  		return;
> >  
> > +    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p\n", pdrv);
> >  	pdrv->cxl_err_handler = &cxl_port_error_handlers;
> > +    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p %p\n", pdrv, pdrv->cxl_err_handler);
> >  }
> >  
> >  static void cxl_clear_port_error_handlers(void *data)
> > @@ -869,12 +872,14 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
> >  {
> >  	struct pci_dev *pdev = to_pci_dev(port->uport_dev);
> >  
> > +    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 1\n");
> >  	/* uport may have more than 1 downstream EP. Check if already mapped. */
> >  	if (port->uport_regs.ras) {
> >  		dev_warn(&port->dev, "RAS is already mapped\n");
> >  		return;
> >  	}
> >  
> > +    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 2\n");
> >  	port->reg_map.host = &port->dev;
> >  	if (cxl_map_component_regs(&port->reg_map, &port->uport_regs,
> >  				   BIT(CXL_CM_CAP_CAP_ID_RAS))) {
> > @@ -882,6 +887,7 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
> >  		return;
> >  	}
> >  
> > +    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 3\n");
> >  	cxl_assign_port_error_handlers(pdev);
> >  	devm_add_action_or_reset(port->uport_dev, cxl_clear_port_error_handlers, pdev);
> >  }
> > @@ -898,11 +904,13 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
> >  	struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport_dev);
> >  	struct pci_dev *pdev = to_pci_dev(dport_dev);
> >  
> > +    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 1\n");
> >  	if (dport->rch && host_bridge->native_aer) {
> >  		cxl_dport_map_rch_aer(dport);
> >  		cxl_disable_rch_root_ints(dport);
> >  	}
> >  
> > +    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 2\n");
> >  	/* dport may have more than 1 downstream EP. Check if already mapped. */
> >  	if (dport->regs.ras) {
> >  		dev_warn(dport_dev, "RAS is already mapped\n");
> > @@ -916,6 +924,7 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
> >  		return;
> >  	}
> >  
> > +    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 3\n");
> >  	cxl_assign_port_error_handlers(pdev);
> >  	devm_add_action_or_reset(dport_dev, cxl_clear_port_error_handlers, pdev);
> >  }
> > diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
> > index 067fd6389562..aa824584f8dd 100644
> > --- a/drivers/cxl/mem.c
> > +++ b/drivers/cxl/mem.c
> > @@ -82,13 +82,15 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
> >  	 * Now that the path to the root is established record all the
> >  	 * intervening ports in the chain.
> >  	 */
> > +    dev_dbg(host, "XXX: add endpoint\n");
> >  	for (iter = parent_port, down = NULL; !is_cxl_root(iter);
> >  	     down = iter, iter = to_cxl_port(iter->dev.parent)) {
> >  		struct cxl_ep *ep;
> >  
> >  		ep = cxl_ep_load(iter, cxlmd);
> >  		ep->next = down;
> > -		cxl_init_ep_ports_aer(ep);
> > +        dev_dbg(ep->ep, "XXX: init ep port aer\n");
> > +        cxl_init_ep_ports_aer(ep);
> >  	}
> >  
> >  	/* Note: endpoint port component registers are derived from @cxlds */
> > @@ -200,6 +202,7 @@ static int cxl_mem_probe(struct device *dev)
> >  			return -ENXIO;
> >  		}
> >  
> > +        dev_dbg(dev, "XXX: add endpoint\n");
> >  		rc = devm_cxl_add_endpoint(endpoint_parent, cxlmd, dport);
> >  		if (rc)
> >  			return rc;
> > diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
> > index 3785f4ca5103..8285f14994e8 100644
> > --- a/drivers/pci/pcie/err.c
> > +++ b/drivers/pci/pcie/err.c
> > @@ -294,6 +294,11 @@ static int cxl_report_error_detected(struct pci_dev *dev, void *data)
> >  	bool *status = data;
> >  
> >  	device_lock(&dev->dev);
> > +    if (pdrv) {
> > +        dev_dbg(&dev->dev, "XXX: call cxl_err_handler: %p %p\n", pdrv, pdrv->cxl_err_handler);
> > +    } else {
> > +        dev_dbg(&dev->dev, "XXX: call cxl_err_handler: %p no handler\n", pdrv);
> > +    }
> >  	if (pdrv && pdrv->cxl_err_handler &&
> >  	    pdrv->cxl_err_handler->error_detected) {
> >  		const struct cxl_error_handlers *cxl_err_handler =
> > --------------------------------------
> >
> > Fan
> >> Below are test results for this patchset using Qemu with CXL root
> >> port(0c:00.0), CXL upstream switchport(0d:00.0), CXL downstream
> >> switchport(0e:00.0). A CXL endpoint(0f:00.0) CE and UCE logs are
> >> also added to show the existing PCIe endpoint handling is not changed.
> >>
> >> This was tested using aer-inject updated to support CE and UCE internal
> >> error injection. CXL RAS was set using a test patch (not upstreamed but can
> >> provide if needed).
> >>
> >>  - Root port UCE:
> >>  root@tbowman-cxl:~/aer-inject# ./root-uce-inject.sh
> >>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
> >>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
> >>  pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
> >>  pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/02000000
> >>  pcieport 0000:0c:00.0:    [22] UncorrIntErr
> >>  aer_event: 0000:0c:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
> >>  cxl_port_aer_uncorrectable_error: device=0000:0c:00.0 host=pci0000:0c status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
> >>  Kernel panic - not syncing: CXL cachemem error. Invoking panic
> >>  CPU: 1 UID: 0 PID: 146 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
> >>  Tainted: [E]=UNSIGNED_MODULE
> >>  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
> >>  Call Trace:
> >>   <TASK>
> >>   dump_stack_lvl+0x27/0x90
> >>   dump_stack+0x10/0x20
> >>   panic+0x33e/0x380
> >>   cxl_do_recovery+0x116/0x120
> >>   ? srso_return_thunk+0x5/0x5f
> >>   aer_isr+0x3e0/0x710
> >>   irq_thread_fn+0x28/0x70
> >>   irq_thread+0x179/0x240
> >>   ? srso_return_thunk+0x5/0x5f
> >>   ? __pfx_irq_thread_fn+0x10/0x10
> >>   ? __pfx_irq_thread_dtor+0x10/0x10
> >>   ? __pfx_irq_thread+0x10/0x10
> >>   kthread+0xf5/0x130
> >>   ? __pfx_kthread+0x10/0x10
> >>   ret_from_fork+0x3c/0x60
> >>   ? __pfx_kthread+0x10/0x10
> >>   ret_from_fork_asm+0x1a/0x30
> >>   </TASK>
> >>  Kernel Offset: 0x29000000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
> >>  ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---
> > ...



-- 
Fan Ni

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-pf1-f171.google.com (mail-pf1-f171.google.com [209.85.210.171])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 967691714B9;
	Fri,  1 Nov 2024 19:11:34 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.210.171
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730488297; cv=none; b=QrL/ji0Q9+w8I0h1w5x1NnJME5AcHiIuYozDlKZOtXmg9OFdoG04/QfivFf+fqbjMvnGWSkRYqgohpRbhYEwWzBMRXjN8Ahlp1psl4TUSyxq3pkN9EdquwyKzhDkPwNBOSoFTYBu61srAzo/D97nIvurKSUGlA2SQfz1RfspI8c=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730488297; c=relaxed/simple;
	bh=TWZJyK0Ek2KvWFRrKuJFykXEux8Sb3PqWidP0jJDkpk=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=clww4RkvL6X9Nk0AKllbMeVH6U2hULTm7iAful2Je7ycpztjhXqZ3ev6dklxgVteSXiySucuLytMksfxO/jCU/aVW993Y7PkawpD/TO+n2klG9GnDZoLSVHKzba7bgpx8yofib4GNYvnNQolDEcfPDM259e9KorC7kHBYh8fnmA=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=TU8hfjwF; arc=none smtp.client-ip=209.85.210.171
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="TU8hfjwF"
Received: by mail-pf1-f171.google.com with SMTP id d2e1a72fcca58-7203c431f93so2016589b3a.1;
        Fri, 01 Nov 2024 12:11:34 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1730488294; x=1731093094; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=tyksEX9VffcEy3DQu/M2+BkUSCcB/8+fwI1TdK4zwzc=;
        b=TU8hfjwFrnIG1PpeX4iEm6SmHfnAhgvy8/etxFCow59X35MSX0nPjn5kOE0XK6FltY
         QGWreSJhX7skJ5zpVhlKbwg72CeLTf31fieiUU4hUvJJHV9V9Tq5hOZI6LwjBi6HvmWn
         v9NZJ2K9ZJdffi1oM9cj1XXeLtK2ricGDn8lB1WZgFNvNQLIG53oCB/C2INudvVue+p7
         ZNwP7DJYzWrC+Yo2zmQj2G59ey5rNS/A8O4a+Tdfa+9fsAC6rNPMxVSCjg17v/1lhKrW
         +9jUzls3Eb0iiQ9U1Qsu6TCey+OyUMZgmO4pvstEzmVXEGjPFu5cLh/Xcz89BQbleokl
         ln1g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1730488294; x=1731093094;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=tyksEX9VffcEy3DQu/M2+BkUSCcB/8+fwI1TdK4zwzc=;
        b=GBtf+Fh7lWHveq3Vay7KJEKV2zPcpsTp/tB6/W3C2uHbdjZwATBhX7R05PUlbUlm9H
         cYWdNW25ENQAnUAAZaneM2gNnF7PmqcZ4XiMhFvaJvqz8SJTmmQzwjwwKw79uc52ZClA
         +0colwvLYGJMKYOQZLXiojhNry+0BZhfDDVCbi35+pP7ITgn7CXUHkn+lBU+44PJWx9X
         QjEpAwc62aAtRYFP70+3EXxek/EyuItte+rEopoxt1wIujHN87K5/xwlR2+BwbWkGmVu
         ayLQgUzcLndIfjrlwe1H586gbWFg/c7tBDriZbGhnTXHGrM8av2sYr9J8ZLpOIbXABs0
         Iqtw==
X-Forwarded-Encrypted: i=1; AJvYcCU3Sv6l5rlox6+9zxwvenz1FgGAbuFI6GxxB+pwcOksxEcLTdstez2U0ULXI9qzyIjpQTdC2n6N0zzS@vger.kernel.org, AJvYcCVVlx3fSSAKh43F5m9asGj/PMJeBsa1tT2x9gYgAtGADbM99HbZivrsvqX6/6ag1x4wF5ZvBOj1qh/sS6Ch@vger.kernel.org, AJvYcCVi97odjA4g//7YT39nbBtXQNBK8/B797eKjusrvPvDmsIQcoW43wyXnOdM2VEjHZDOzB1ezgziP5U=@vger.kernel.org
X-Gm-Message-State: AOJu0YxFcRZaOnnG/ZYlZm0D2iCIzEe3NBA1EhdKeuM/psGrVe8fkajj
	j3MW0ZoUM9+sp+TBr1xqJz2NVCm/X9IvLVRx55bO+SUlILQbAj0DkXFuWTYl
X-Google-Smtp-Source: AGHT+IF2Jw8OxZ2zGOUwuHFV+DLMSyz9lFbOaUyC9chy21VF6WLQmVeue9ye39DlMb0K73a5C3cohA==
X-Received: by 2002:a05:6a21:478a:b0:1d9:792d:eda9 with SMTP id adf61e73a8af0-1db91e68229mr9682566637.37.1730488293671;
        Fri, 01 Nov 2024 12:11:33 -0700 (PDT)
Received: from fan ([2601:646:8f03:9fee:eba7:38e1:4f3b:331c])
        by smtp.gmail.com with ESMTPSA id 41be03b00d2f7-7ee452a809fsm2775124a12.26.2024.11.01.12.11.31
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Fri, 01 Nov 2024 12:11:33 -0700 (PDT)
From: Fan Ni <nifan.cxl@gmail.com>
X-Google-Original-From: Fan Ni <fan.ni@samsung.com>
Date: Fri, 1 Nov 2024 12:11:19 -0700
To: "Bowman, Terry" <terry.bowman@amd.com>
Cc: Fan Ni <nifan.cxl@gmail.com>, ming4.li@intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	linux-pci@vger.kernel.org, dave@stgolabs.net,
	jonathan.cameron@huawei.com, dave.jiang@intel.com,
	alison.schofield@intel.com, vishal.l.verma@intel.com,
	dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
	ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
	rrichter@amd.com, nathan.fontenot@amd.com,
	Smita.KoralahalliChannabasappa@amd.com
Subject: Re: [PATCH v2 0/14] Enable CXL PCIe port protocol error handling and
 logging
Message-ID: <ZyUn18bgi-QL0aCi@fan>
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <ZyUXLpQBBgTl733z@fan>
 <8a73bfa1-b916-4f0a-92be-0cb677e1e334@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <8a73bfa1-b916-4f0a-92be-0cb677e1e334@amd.com>

On Fri, Nov 01, 2024 at 01:28:12PM -0500, Bowman, Terry wrote:
> Hi Fan,
> 
> I added comments below.
> 
> On 11/1/2024 1:00 PM, Fan Ni wrote:
> > On Fri, Oct 25, 2024 at 04:02:51PM -0500, Terry Bowman wrote:
> >> This is a continuation of the CXL port error handling RFC from earlier.[1]
> >> The RFC resulted in the decision to add CXL PCIe port error handling to
> >> the existing RCH downstream port handling in the AER service driver. This
> >> patchset adds the CXL PCIe port protocol error handling and logging.
> >>
> >> The first 7 patches update the existing AER service driver to support CXL
> >> PCIe port protocol error handling and reporting. This includes AER service
> >> driver changes for adding correctable and uncorrectable error support, CXL
> >> specific recovery handling, and addition of CXL driver callback handlers.
> >>
> >> The following 7 patches address CXL driver support for CXL PCIe port
> >> protocol errors. This includes the following changes to the CXL drivers:
> >> mapping CXL port and downstream port RAS registers, interface updates for
> >> common restricted CXL host mode (RCH) and virtual hierarchy mode (VH),
> >> adding port specific error handlers, and protocol error logging.
> >>
> >> [1] - https://lore.kernel.org/linux-cxl/20240617200411.1426554-1-terry.bowman@amd.com/
> >>
> >> Testing:
> > Hi Terry,
> > I tried to test the patchset with aer_inject tool (with the patch you shared
> > in the last version), and hit some issues.
> > Could you help check and give some insights? Thanks.
> >
> > Below are some test setup info and results.
> >
> > I tested two topology,
> >   a. one memdev directly attaced to a HB with only one RP;
> >   b. a topology with cxl switch:
> >          HB
> >         /  \
> >       RP0   RP1
> >        |
> >      switch
> >        |
> >  ----------------
> >  |    |    |    |
> > mem0 mem1 mem2 mem3
> >
> > For both topologies, I cannot reproduce the system panic shown in your cover
> > letter.  
> >
> > btw, I tried both compile cxl as modules and in the kernel.
> >
> > Below, I will use the direct-attached topology (a) as an example to show what I
> > tried, hope can get some clarity about the test and what I missed or did wrong.
> >
> > -------------------------------------
> > pci device info on the test VM 
> > root@fan:~# lspci
> > 00:00.0 Host bridge: Intel Corporation 82G33/G31/P35/P31 Express DRAM Controller
> > 00:01.0 VGA compatible controller: Device 1234:1111 (rev 02)
> > 00:02.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 03)
> > 00:03.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
> > 00:04.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
> > 00:05.0 Host bridge: Red Hat, Inc. QEMU PCIe Expander bridge
> > 00:1f.0 ISA bridge: Intel Corporation 82801IB (ICH9) LPC Interface Controller (rev 02)
> > 00:1f.2 SATA controller: Intel Corporation 82801IR/IO/IH (ICH9R/DO/DH) 6 port SATA Controller [AHCI mode] (rev 02)
> > 00:1f.3 SMBus: Intel Corporation 82801I (ICH9 Family) SMBus Controller (rev 02)
> > 0c:00.0 PCI bridge: Intel Corporation Device 7075
> > 0d:00.0 CXL: Intel Corporation Device 0d93 (rev 01)
> > root@fan:~# 
> > -------------------------------------
> >
> > The aer injection input file looks like below,
> >
> > -------------------------------------
> > fan:~/cxl/cxl-test-tool$ cat /tmp/internal 
> > AER
> > PCI_ID 0000:0c:00.0
> > UNCOR_STATUS INTERNAL
> > HEADER_LOG 0 1 2 3
> > ------------------------------------
> >
> > dmesg after aer injection 
> >
> > ssh root@localhost -p 2024 "dmesg"
> > [  613.195352] pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
> > [  613.195830] pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
> > [  613.196253] pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
> > [  613.198199] pcieport 0000:0c:00.0: AER: No uncorrectable error found. Continuing.
> > -----------------------------------
> 
> This is likely because the device's CXL RAS status is not set and as a result returns false and bypasses the panic.
> Unfortunately, the aer-inject only sets the AER status and triggers the interrupt. The CXL RAS is not set.
> 
> I attached 2 'test' patches. The first patch sets the device's RAS status to simulate the error reporting.
> This will have to be adjusted as the patch looks for a specific device's bus and this will likely be a different
> bus then the device's you test in your setup.
> 
> The 2nd patch enables UIE/CIE. I moved this out of the v2 patchset. I need to revisit this to see if it is
> needed in the patchset itself (not just a test patch).
> 
> Regards,
> Terry

Hi Terry,

Thanks for the quick reply. With the two patches applied, the system
panic as expected. 

Thanks,
Fan

> 
> >
> > The problem seems to be related to the cxl_error_handler not been assigned for
> > cxlmem device. 
> >
> > in
> > cxl_do_recover() {
> > ...
> >     327     cxl_walk_bridge(bridge, cxl_report_error_detected, &status);                         
> >     328     if (status)                                                                 
> >     329         panic("CXL cachemem error. Invoking panic");                   
> > ...
> > }
> > The status returned is false, so no panic().
> >
> > I tried to add some dev_dbg info to the code to debug.
> > Below are the debug info and kernel code changes for debugging. 
> > --------------------------------------
> > fan:~/cxl/cxl-test-tool$ cxl-tool.py --cmd dmesg | grep XXX
> > [    1.738909] cxl_mem:cxl_mem_probe:205: cxl_mem mem0: XXX: add endpoint
> > [    1.739188] cxl_mem:devm_cxl_add_endpoint:85: cxl_port port1: XXX: add endpoint
> > [    1.739509] cxl_mem:devm_cxl_add_endpoint:92: cxl_mem mem0: XXX: init ep port aer
> > [    1.739876] cxl_core:cxl_dport_init_ras_reporting:907: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 1
> > [    1.740338] cxl_core:cxl_dport_init_ras_reporting:913: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 2
> > [    1.740812] cxl_core:cxl_dport_init_ras_reporting:927: pcieport 0000:0c:00.0: XXX: assign port error handlers for dport 3
> > [    1.741273] cxl_core:cxl_assign_port_error_handlers:851: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____)
> > [    1.741812] cxl_core:cxl_assign_port_error_handlers:855: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____)
> > [    1.742263] cxl_core:cxl_assign_port_error_handlers:857: pcieport 0000:0c:00.0: XXX: cxl_err_handler: (____ptrval____) (____ptrval____)
> > fan:~/cxl/cxl-test-tool$ 
> > --------------------------------------
> >
> > dmesg after error injection:
> > --------------------------------------
> > ssh root@localhost -p 2024 "dmesg"
> > [  228.544439] pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
> > [  228.544977] pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
> > [  228.545381] pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
> > [  228.545879] pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/00000000
> > [  228.546360] pcieport 0000:0c:00.0:    [22] UncorrIntErr          
> > [  228.546698] pcieport 0000:0c:00.0: AER: XXX: call cxl_err_handler: 00000000a268bfcb 000000009e0da039
> > [  228.547103] cxl_pci 0000:0d:00.0: AER: XXX: call cxl_err_handler: 00000000b9f08b93 0000000000000000
> > [  228.547515] pcieport 0000:0c:00.0: AER: No uncorrectable error found. Continuing.
> > fan:~/cxl/cxl-test-tool$ 
> > --------------------------------------
> >
> >
> > Kernel changes:
> > --------------------------------------
> > diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> > index 5f7570c6173c..bcecd1283fc6 100644
> > --- a/drivers/cxl/core/pci.c
> > +++ b/drivers/cxl/core/pci.c
> > @@ -848,10 +848,13 @@ static void cxl_assign_port_error_handlers(struct pci_dev *pdev)
> >  {
> >  	struct pci_driver *pdrv = pdev->driver;
> >  
> > +    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p\n enter", pdev);
> >  	if (!pdrv)
> >  		return;
> >  
> > +    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p\n", pdrv);
> >  	pdrv->cxl_err_handler = &cxl_port_error_handlers;
> > +    dev_dbg(&pdev->dev, "XXX: cxl_err_handler: %p %p\n", pdrv, pdrv->cxl_err_handler);
> >  }
> >  
> >  static void cxl_clear_port_error_handlers(void *data)
> > @@ -869,12 +872,14 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
> >  {
> >  	struct pci_dev *pdev = to_pci_dev(port->uport_dev);
> >  
> > +    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 1\n");
> >  	/* uport may have more than 1 downstream EP. Check if already mapped. */
> >  	if (port->uport_regs.ras) {
> >  		dev_warn(&port->dev, "RAS is already mapped\n");
> >  		return;
> >  	}
> >  
> > +    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 2\n");
> >  	port->reg_map.host = &port->dev;
> >  	if (cxl_map_component_regs(&port->reg_map, &port->uport_regs,
> >  				   BIT(CXL_CM_CAP_CAP_ID_RAS))) {
> > @@ -882,6 +887,7 @@ void cxl_uport_init_ras_reporting(struct cxl_port *port)
> >  		return;
> >  	}
> >  
> > +    dev_dbg(&port->dev, "XXX: assign port error handlers for uport 3\n");
> >  	cxl_assign_port_error_handlers(pdev);
> >  	devm_add_action_or_reset(port->uport_dev, cxl_clear_port_error_handlers, pdev);
> >  }
> > @@ -898,11 +904,13 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
> >  	struct pci_host_bridge *host_bridge = to_pci_host_bridge(dport_dev);
> >  	struct pci_dev *pdev = to_pci_dev(dport_dev);
> >  
> > +    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 1\n");
> >  	if (dport->rch && host_bridge->native_aer) {
> >  		cxl_dport_map_rch_aer(dport);
> >  		cxl_disable_rch_root_ints(dport);
> >  	}
> >  
> > +    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 2\n");
> >  	/* dport may have more than 1 downstream EP. Check if already mapped. */
> >  	if (dport->regs.ras) {
> >  		dev_warn(dport_dev, "RAS is already mapped\n");
> > @@ -916,6 +924,7 @@ void cxl_dport_init_ras_reporting(struct cxl_dport *dport)
> >  		return;
> >  	}
> >  
> > +    dev_dbg(dport_dev, "XXX: assign port error handlers for dport 3\n");
> >  	cxl_assign_port_error_handlers(pdev);
> >  	devm_add_action_or_reset(dport_dev, cxl_clear_port_error_handlers, pdev);
> >  }
> > diff --git a/drivers/cxl/mem.c b/drivers/cxl/mem.c
> > index 067fd6389562..aa824584f8dd 100644
> > --- a/drivers/cxl/mem.c
> > +++ b/drivers/cxl/mem.c
> > @@ -82,13 +82,15 @@ static int devm_cxl_add_endpoint(struct device *host, struct cxl_memdev *cxlmd,
> >  	 * Now that the path to the root is established record all the
> >  	 * intervening ports in the chain.
> >  	 */
> > +    dev_dbg(host, "XXX: add endpoint\n");
> >  	for (iter = parent_port, down = NULL; !is_cxl_root(iter);
> >  	     down = iter, iter = to_cxl_port(iter->dev.parent)) {
> >  		struct cxl_ep *ep;
> >  
> >  		ep = cxl_ep_load(iter, cxlmd);
> >  		ep->next = down;
> > -		cxl_init_ep_ports_aer(ep);
> > +        dev_dbg(ep->ep, "XXX: init ep port aer\n");
> > +        cxl_init_ep_ports_aer(ep);
> >  	}
> >  
> >  	/* Note: endpoint port component registers are derived from @cxlds */
> > @@ -200,6 +202,7 @@ static int cxl_mem_probe(struct device *dev)
> >  			return -ENXIO;
> >  		}
> >  
> > +        dev_dbg(dev, "XXX: add endpoint\n");
> >  		rc = devm_cxl_add_endpoint(endpoint_parent, cxlmd, dport);
> >  		if (rc)
> >  			return rc;
> > diff --git a/drivers/pci/pcie/err.c b/drivers/pci/pcie/err.c
> > index 3785f4ca5103..8285f14994e8 100644
> > --- a/drivers/pci/pcie/err.c
> > +++ b/drivers/pci/pcie/err.c
> > @@ -294,6 +294,11 @@ static int cxl_report_error_detected(struct pci_dev *dev, void *data)
> >  	bool *status = data;
> >  
> >  	device_lock(&dev->dev);
> > +    if (pdrv) {
> > +        dev_dbg(&dev->dev, "XXX: call cxl_err_handler: %p %p\n", pdrv, pdrv->cxl_err_handler);
> > +    } else {
> > +        dev_dbg(&dev->dev, "XXX: call cxl_err_handler: %p no handler\n", pdrv);
> > +    }
> >  	if (pdrv && pdrv->cxl_err_handler &&
> >  	    pdrv->cxl_err_handler->error_detected) {
> >  		const struct cxl_error_handlers *cxl_err_handler =
> > --------------------------------------
> >
> > Fan
> >> Below are test results for this patchset using Qemu with CXL root
> >> port(0c:00.0), CXL upstream switchport(0d:00.0), CXL downstream
> >> switchport(0e:00.0). A CXL endpoint(0f:00.0) CE and UCE logs are
> >> also added to show the existing PCIe endpoint handling is not changed.
> >>
> >> This was tested using aer-inject updated to support CE and UCE internal
> >> error injection. CXL RAS was set using a test patch (not upstreamed but can
> >> provide if needed).
> >>
> >>  - Root port UCE:
> >>  root@tbowman-cxl:~/aer-inject# ./root-uce-inject.sh
> >>  pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
> >>  pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
> >>  pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
> >>  pcieport 0000:0c:00.0:   device [8086:7075] error status/mask=00400000/02000000
> >>  pcieport 0000:0c:00.0:    [22] UncorrIntErr
> >>  aer_event: 0000:0c:00.0 CXL Bus Error: severity=Fatal, Uncorrectable Internal Error, TLP Header=Not available
> >>  cxl_port_aer_uncorrectable_error: device=0000:0c:00.0 host=pci0000:0c status: 'Memory Address Parity Error' first_error: 'Memory Address Parity Error'
> >>  Kernel panic - not syncing: CXL cachemem error. Invoking panic
> >>  CPU: 1 UID: 0 PID: 146 Comm: irq/24-aerdrv Tainted: G            E      6.12.0-rc2-cxl-port-err-g2beab06a67d1 #4414
> >>  Tainted: [E]=UNSIGNED_MODULE
> >>  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
> >>  Call Trace:
> >>   <TASK>
> >>   dump_stack_lvl+0x27/0x90
> >>   dump_stack+0x10/0x20
> >>   panic+0x33e/0x380
> >>   cxl_do_recovery+0x116/0x120
> >>   ? srso_return_thunk+0x5/0x5f
> >>   aer_isr+0x3e0/0x710
> >>   irq_thread_fn+0x28/0x70
> >>   irq_thread+0x179/0x240
> >>   ? srso_return_thunk+0x5/0x5f
> >>   ? __pfx_irq_thread_fn+0x10/0x10
> >>   ? __pfx_irq_thread_dtor+0x10/0x10
> >>   ? __pfx_irq_thread+0x10/0x10
> >>   kthread+0xf5/0x130
> >>   ? __pfx_kthread+0x10/0x10
> >>   ret_from_fork+0x3c/0x60
> >>   ? __pfx_kthread+0x10/0x10
> >>   ret_from_fork_asm+0x1a/0x30
> >>   </TASK>
> >>  Kernel Offset: 0x29000000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff)
> >>  ---[ end Kernel panic - not syncing: CXL cachemem error. Invoking panic ]---
> > ...



-- 
Fan Ni

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mail-yw1-f180.google.com (mail-yw1-f180.google.com [209.85.128.180])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 8C80718EB1;
	Mon,  4 Nov 2024 21:48:44 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.128.180
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1730756926; cv=none; b=Qz2tVaq4zamgg8w5BuStCbeP2KaM+S239NOBAmuUS5tWpMh0gnan5jeuzFGlj/azUxEW2UX3vTmfT3dsjk3ywt8vy638g8mYNvJQ/TqjKJsDdTs6PWS+cTM+gyaw9t47ClJdlxGt9Kg+FKF2XD81Jf4cpT0l0ro/bLuDLcsqfZo=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1730756926; c=relaxed/simple;
	bh=+5/qQEyG8+vkBtKNB7IKOxlx47N98ltAycn9m8oKd3o=;
	h=From:Date:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=NaUysRt/pF/8GQf7NGyXa9CSflR5uAAyVehBueLBTcvWhoJeei+Ig472K0fIOJVRqXApu/UiCpIIOmB0VzlrWpaAzfGMA2u44R46VTUKf5vLdFBI/JwqDsaxZQJr3o7XvyltG2WYGKz2RaTs5HU4L+wApR76DyvoqY506PyoLps=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=aCwJD/gi; arc=none smtp.client-ip=209.85.128.180
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="aCwJD/gi"
Received: by mail-yw1-f180.google.com with SMTP id 00721157ae682-6e3c3da5bcdso43678497b3.2;
        Mon, 04 Nov 2024 13:48:44 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1730756923; x=1731361723; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:from:to:cc:subject:date:message-id:reply-to;
        bh=a7qLqFn5A9wDwTX3A2pduAe6E332LTqYCGawBlUF+jw=;
        b=aCwJD/giFtUcSEH57DLbno8SrmkaPqZJampCkIIzQeVlj+s9HP0vOGFmZ6tows2P6C
         h2WpW3RZ+bRz0sHrXPpSym9F3kIOn4VwmboCRQo94yjx0VRMJNhyQSDfT2ZGJod5OO0w
         rbwhCuQwXG/+5536fPGMCuIuOcwT+EUHR5jlTtWdLbhjT3jFmwXeHgFmL5I2+9XoSlLT
         tiWfiSt6ayy4G1+kflTtuZZV2BaW+g2PphjWI3pTTF1wCu7iOK8a85uDF//UfYiLgv5y
         KvXuso8CS1Zq5za2i0jM9wXMP07XTWCmoVnV36xh12GOHSAdzGExwX3UhnchBHojTRHx
         9e8w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1730756923; x=1731361723;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:date:from:x-gm-message-state:from:to:cc:subject:date
         :message-id:reply-to;
        bh=a7qLqFn5A9wDwTX3A2pduAe6E332LTqYCGawBlUF+jw=;
        b=GbOOjp90JOO63lheDfL1pIfqiWgof8GkoockrVHCsd4lhS6P8kZnQflkyHkPO4rd50
         794lXWWoPqsuQlQyxvQawveO+OARy8ozr/3zlJVK3zFK23yrtADdaTP7wIedAP8gvpZN
         Xz4eKci2VjWuNiM/wubNxnGMROjtnNu6uBJ4HUpALq+d+mzr90ckthtKDZVRGhDWXcNe
         Cp8CfFZnyuaTJVrklsleD4/FSNG3g2uBNlAsLqNCbUDid3P1nvLn7mN24oFs3n/SFD/Q
         zIxKFNdusrvgg0eGIUB5e4pkHkvbvmUin3vEX6CN2E4Rv7rtX3wdSveATJ33lULTe9R8
         tg/A==
X-Forwarded-Encrypted: i=1; AJvYcCXK7dkWXLlmyO58EYbEPmTc66CmvdFrc57rIVeJeLMVhEID9PB2kv2WZQa9oH9xSD2tY5OHU4rf0JRb@vger.kernel.org, AJvYcCXUXz3DFK3BQ/ZLJFsqDX86Hst1PWp5qNO/D0ufSE0R0Weh2Ygp+x3vkd6bfxJrgL86QYNfKwiFdCUbVY+Y@vger.kernel.org, AJvYcCXqJRAQ/9hl8XA8LYsmqiswinlSh9i1Acfv5fdCtXRGhsYJo4XoX+pNPO+zSnWLQVJHxy3fD+tfKjg=@vger.kernel.org
X-Gm-Message-State: AOJu0YwvArpyZY0D3k/2SGP725FeXlr2+tQzhI41FIGNPEvKseK6LcwM
	+aYZKNvSvXeswG5kjI8MGxju2ocSuFBnJa0CoAfRiW3Q/q0IBLCV
X-Google-Smtp-Source: AGHT+IFpWCLsXHXLJwteQEPVNqkAsazLNXMpgLj2XYtXenCaYYxJR8i6RkB+QMPvOJ7yKffH5z/MPg==
X-Received: by 2002:a05:690c:1e:b0:6e7:e76e:5852 with SMTP id 00721157ae682-6ea3b96aaa6mr262752107b3.32.1730756923435;
        Mon, 04 Nov 2024 13:48:43 -0800 (PST)
Received: from fan ([50.205.20.42])
        by smtp.gmail.com with ESMTPSA id 00721157ae682-6ea55c48a52sm19316237b3.102.2024.11.04.13.48.41
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 04 Nov 2024 13:48:43 -0800 (PST)
From: Fan Ni <nifan.cxl@gmail.com>
X-Google-Original-From: Fan Ni <fan.ni@samsung.com>
Date: Mon, 4 Nov 2024 13:48:23 -0800
To: "Bowman, Terry" <terry.bowman@amd.com>
Cc: Fan Ni <nifan.cxl@gmail.com>, ming4.li@intel.com,
	linux-cxl@vger.kernel.org, linux-kernel@vger.kernel.org,
	linux-pci@vger.kernel.org, dave@stgolabs.net,
	jonathan.cameron@huawei.com, dave.jiang@intel.com,
	alison.schofield@intel.com, vishal.l.verma@intel.com,
	dan.j.williams@intel.com, bhelgaas@google.com, mahesh@linux.ibm.com,
	ira.weiny@intel.com, oohall@gmail.com, Benjamin.Cheatham@amd.com,
	rrichter@amd.com, nathan.fontenot@amd.com,
	Smita.KoralahalliChannabasappa@amd.com
Subject: Re: [PATCH v2 0/14] Enable CXL PCIe port protocol error handling and
 logging
Message-ID: <ZylBJ8mASGFVyDch@fan>
References: <20241025210305.27499-1-terry.bowman@amd.com>
 <ZyUXLpQBBgTl733z@fan>
 <8a73bfa1-b916-4f0a-92be-0cb677e1e334@amd.com>
 <ZyVSAzSW1HEd2_Mp@fan>
 <341e5c63-8f1c-4b53-a6f0-bdd7483f0c93@amd.com>
Precedence: bulk
X-Mailing-List: linux-cxl@vger.kernel.org
List-Id: <linux-cxl.vger.kernel.org>
List-Subscribe: <mailto:linux-cxl+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-cxl+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <341e5c63-8f1c-4b53-a6f0-bdd7483f0c93@amd.com>

On Mon, Nov 04, 2024 at 03:25:38PM -0600, Bowman, Terry wrote:
> 
> 
> On 11/1/2024 5:11 PM, Fan Ni wrote:
> > On Fri, Nov 01, 2024 at 01:28:12PM -0500, Bowman, Terry wrote:
> >> Hi Fan,
> >>
> >> I added comments below.
> >>
> >> On 11/1/2024 1:00 PM, Fan Ni wrote:
> >>> On Fri, Oct 25, 2024 at 04:02:51PM -0500, Terry Bowman wrote:
> >>>> This is a continuation of the CXL port error handling RFC from earlier.[1]
> >>>> The RFC resulted in the decision to add CXL PCIe port error handling to
> >>>> the existing RCH downstream port handling in the AER service driver. This
> >>>> patchset adds the CXL PCIe port protocol error handling and logging.
> >>>>
> >>>> The first 7 patches update the existing AER service driver to support CXL
> >>>> PCIe port protocol error handling and reporting. This includes AER service
> >>>> driver changes for adding correctable and uncorrectable error support, CXL
> >>>> specific recovery handling, and addition of CXL driver callback handlers.
> >>>>
> >>>> The following 7 patches address CXL driver support for CXL PCIe port
> >>>> protocol errors. This includes the following changes to the CXL drivers:
> >>>> mapping CXL port and downstream port RAS registers, interface updates for
> >>>> common restricted CXL host mode (RCH) and virtual hierarchy mode (VH),
> >>>> adding port specific error handlers, and protocol error logging.
> >>>>
> >>>> [1] - https://lore.kernel.org/linux-cxl/20240617200411.1426554-1-terry.bowman@amd.com/
> >>>>
> >>>> Testing:
> >>> Hi Terry,
> >>> I tried to test the patchset with aer_inject tool (with the patch you shared
> >>> in the last version), and hit some issues.
> >>> Could you help check and give some insights? Thanks.
> >>>
> >>> Below are some test setup info and results.
> >>>
> >>> I tested two topology,
> >>>   a. one memdev directly attaced to a HB with only one RP;
> >>>   b. a topology with cxl switch:
> >>>          HB
> >>>         /  \
> >>>       RP0   RP1
> >>>        |
> >>>      switch
> >>>        |
> >>>  ----------------
> >>>  |    |    |    |
> >>> mem0 mem1 mem2 mem3
> >>>
> >>> For both topologies, I cannot reproduce the system panic shown in your cover
> >>> letter.  
> >>>
> >>> btw, I tried both compile cxl as modules and in the kernel.
> >>>
> >>> Below, I will use the direct-attached topology (a) as an example to show what I
> >>> tried, hope can get some clarity about the test and what I missed or did wrong.
> >>>
> >>> -------------------------------------
> >>> pci device info on the test VM 
> >>> root@fan:~# lspci
> >>> 00:00.0 Host bridge: Intel Corporation 82G33/G31/P35/P31 Express DRAM Controller
> >>> 00:01.0 VGA compatible controller: Device 1234:1111 (rev 02)
> >>> 00:02.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 03)
> >>> 00:03.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
> >>> 00:04.0 Unclassified device [0002]: Red Hat, Inc. Virtio filesystem
> >>> 00:05.0 Host bridge: Red Hat, Inc. QEMU PCIe Expander bridge
> >>> 00:1f.0 ISA bridge: Intel Corporation 82801IB (ICH9) LPC Interface Controller (rev 02)
> >>> 00:1f.2 SATA controller: Intel Corporation 82801IR/IO/IH (ICH9R/DO/DH) 6 port SATA Controller [AHCI mode] (rev 02)
> >>> 00:1f.3 SMBus: Intel Corporation 82801I (ICH9 Family) SMBus Controller (rev 02)
> >>> 0c:00.0 PCI bridge: Intel Corporation Device 7075
> >>> 0d:00.0 CXL: Intel Corporation Device 0d93 (rev 01)
> >>> root@fan:~# 
> >>> -------------------------------------
> >>>
> >>> The aer injection input file looks like below,
> >>>
> >>> -------------------------------------
> >>> fan:~/cxl/cxl-test-tool$ cat /tmp/internal 
> >>> AER
> >>> PCI_ID 0000:0c:00.0
> >>> UNCOR_STATUS INTERNAL
> >>> HEADER_LOG 0 1 2 3
> >>> ------------------------------------
> >>>
> >>> dmesg after aer injection 
> >>>
> >>> ssh root@localhost -p 2024 "dmesg"
> >>> [  613.195352] pcieport 0000:0c:00.0: aer_inject: Injecting errors 00000000/00400000 into device 0000:0c:00.0
> >>> [  613.195830] pcieport 0000:0c:00.0: AER: Uncorrectable (Fatal) error message received from 0000:0c:00.0
> >>> [  613.196253] pcieport 0000:0c:00.0: CXL Bus Error: severity=Uncorrectable (Fatal), type=Transaction Layer, (Receiver ID)
> >>> [  613.198199] pcieport 0000:0c:00.0: AER: No uncorrectable error found. Continuing.
> >>> -----------------------------------
> >> This is likely because the device's CXL RAS status is not set and as a result returns false and bypasses the panic.
> >> Unfortunately, the aer-inject only sets the AER status and triggers the interrupt. The CXL RAS is not set.
> >>
> >> I attached 2 'test' patches. The first patch sets the device's RAS status to simulate the error reporting.
> >> This will have to be adjusted as the patch looks for a specific device's bus and this will likely be a different
> >> bus then the device's you test in your setup.
> >>
> >> The 2nd patch enables UIE/CIE. I moved this out of the v2 patchset. I need to revisit this to see if it is
> >> needed in the patchset itself (not just a test patch).
> >>
> >> Regards,
> >> Terry
> >>
> > Hi Terry, 
> >
> > I checked the two patches you attached, do we really need the first
> > patch to umask internal error? I see it is already unmasked in
> > aer_enable_internal_errors() which is called in aer_probe().
> > I tried to only apply the other patch and test again, it seems the test
> > output is the same as applying two patches. The system panics as well.
> >
> > Fan
> Hi Fan,
> 
> Which device did you inject into? RP, DSP, or USP?
> 
> Yes, the RP UIE & CIE are enabled by the AER driver. RCEC too. But, this is not done for CXL DSP
> and USP. Below are details from the spec describing how an AER error masked at the source will not
> be propagated as notification to the root complex (RP or RCEC).
> 
> 'If an individual error is masked when it is detected, its error status bit is still affected,
> but no error reporting Message is sent to the Root Complex, and the error is not recorded in the
> Header Log, TLP Prefix Log, or First Error Pointer.'[1]
> 
> [1] PCIe Spec 6.2.3.2.2 Masking Individual Errors
> 
> Also, there can be platform BIOS settings that enable/disable UIE/CIE.
> 
> Regards,
> Terry
Oh, I see. I did inject into rp in my previous setup. And confirmed we
need extra unmask for downstream port case. 

Thanks for the info.

Fan
> 

-- 
Fan Ni

