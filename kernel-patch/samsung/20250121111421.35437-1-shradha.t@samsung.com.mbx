From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 89C6E221552;
	Thu, 13 Feb 2025 14:39:22 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1739457562; cv=none; b=X7cDwCtAR8lV6DX80gxEiv3ayxFi9jf5CZbGKQa5KPtBQd80RxIaBeYV6RnuIGnYS4WI8Qxs9olKo5+Spf8i3ujkiMzr+yt0d9ju6ITmpYUBA55FY0aycFHUGfPgKikJOTAsoUJX6SU/u5mjsPRpbRP0BT8JXX6GcA5lo5SkI0k=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1739457562; c=relaxed/simple;
	bh=mljex6fF/+V1lN1/JEaG7T5L9mO4fXa+fKxBcu5YfGI=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=snWRrZaKsXkI2IUMQNWBNKDRgAfbK/G9DVs8lSOMaGnvV5qna7V+vdz5ozIQhKcRzjl1ovMUHnAgLtR10RGJqrvGYHBlrzITR+M30Q/rFWqv54bvrHH6d48FSEHbMwCeoIQOE/IYYdQOQ7e6yvFRfFilhtysw0Ny+zfi15lgoHY=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=Jfa4GGaD; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="Jfa4GGaD"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id EF5A0C4CEE2;
	Thu, 13 Feb 2025 14:39:18 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1739457562;
	bh=mljex6fF/+V1lN1/JEaG7T5L9mO4fXa+fKxBcu5YfGI=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=Jfa4GGaDEqqfKZFf9i1BLECTwiIFy9spSG+YcDopF/6/mYWQ5ezPRlqv5UUsQ9/Hr
	 j0LWzW+MkhFX5p+SB7yFuiQdGPwmareQEb+7DFw/cXxvqov2t8TUwswlu58DQCbLtp
	 mB8ZCS8LwnZ9vcciWy3gis3f0EtgJ25z8Ky+eCsL1VxHgwEK2Qf6rg6Yw3UuR3D+Ae
	 yhHW4GJ0uX//c4o4UZkztSP9dM0zWGuM9JJLsotCNqJilM2B6tEoAmYbqDKnK6G+2H
	 xY9XvVjrvRK80IxbwtPfWwAWxfWR0Q6gl14O2rQir14iAPAu9X+h8apd2RZ9g4cUXS
	 /fcPI1gUPQbTA==
Date: Thu, 13 Feb 2025 15:39:16 +0100
From: Niklas Cassel <cassel@kernel.org>
To: Shradha Todi <shradha.t@samsung.com>
Cc: linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org,
	manivannan.sadhasivam@linaro.org, lpieralisi@kernel.org,
	kw@linux.com, robh@kernel.org, bhelgaas@google.com,
	jingoohan1@gmail.com, Jonathan.Cameron@huawei.com,
	fan.ni@samsung.com, a.manzanares@samsung.com,
	pankaj.dubey@samsung.com, quic_nitegupt@quicinc.com,
	quic_krichai@quicinc.com, gost.dev@samsung.com
Subject: Re: [PATCH v5 0/4] Add support for RAS DES feature in PCIe DW
Message-ID: <Z64EFN2QZ2AOF11I@ryzen>
References: <CGME20250121115157epcas5p15f8b34cd76cbbb3b043763e644469b18@epcas5p1.samsung.com>
 <20250121111421.35437-1-shradha.t@samsung.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20250121111421.35437-1-shradha.t@samsung.com>

On Tue, Jan 21, 2025 at 04:44:17PM +0530, Shradha Todi wrote:
> DesignWare controller provides a vendor specific extended capability
> called RASDES as an IP feature. This extended capability  provides
> hardware information like:
>  - Debug registers to know the state of the link or controller. 
>  - Error injection mechanisms to inject various PCIe errors including
>    sequence number, CRC
>  - Statistical counters to know how many times a particular event
>    occurred
> 
> However, in Linux we do not have any generic or custom support to be
> able to use this feature in an efficient manner. This is the reason we
> are proposing this framework. Debug and bring up time of high-speed IPs
> are highly dependent on costlier hardware analyzers and this solution
> will in some ways help to reduce the HW analyzer usage.
> 
> The debugfs entries can be used to get information about underlying
> hardware and can be shared with user space. Separate debugfs entries has
> been created to cater to all the DES hooks provided by the controller.
> The debugfs entries interacts with the RASDES registers in the required
> sequence and provides the meaningful data to the user. This eases the
> effort to understand and use the register information for debugging.
> 
> v5:
>     - Addressed Fan's comment to split the patches for easier review
>     - Addressed Bjorn's comment to fix vendor specific cap search
>     - Addressed style related change requests from v4
>     - Added rasdes debugfs init call to common designware files for host
>       and EP.
> 
> v4: https://lore.kernel.org/lkml/20241206074456.17401-1-shradha.t@samsung.com/
>     - Addressed comments from Manivannan, Bjorn and Jonathan
>     - Addressed style related change requests from v3
>     - Added Documentation under Documentation/ABI/testing and kdoc stype
>       comments wherever required for better understanding
>     - Enhanced error injection to include all possible error groups
>     - Removed debugfs init call from common designware file and left it
>       up to individual platform drivers to init/deinit as required.
> 
> v3: https://lore.kernel.org/all/20240625093813.112555-1-shradha.t@samsung.com/
>     - v2 had suggestions about moving this framework to perf/EDAC instead of a
>       controller specific debugfs but after discussions we decided to go ahead
>       with the same. Rebased and posted v3 with minor style changes.
> 
> v2: https://lore.kernel.org/lkml/20231130115044.53512-1-shradha.t@samsung.com/
>     - Addressed comments from Krzysztof WilczyÅ„ski, Bjorn Helgaas and
>       posted v2 with a changed implementation for a better code design
> 
> v1: https://lore.kernel.org/all/20210518174618.42089-1-shradha.t@samsung.com/T/
> 
> Shradha Todi (4):
>   PCI: dwc: Add support for vendor specific capability search
>   Add debugfs based silicon debug support in DWC
>   Add debugfs based error injection support in DWC
>   Add debugfs based statistical counter support in DWC
> 
>  Documentation/ABI/testing/debugfs-dwc-pcie    | 144 +++++
>  drivers/pci/controller/dwc/Kconfig            |  10 +
>  drivers/pci/controller/dwc/Makefile           |   1 +
>  .../controller/dwc/pcie-designware-debugfs.c  | 561 ++++++++++++++++++
>  .../pci/controller/dwc/pcie-designware-ep.c   |   5 +
>  .../pci/controller/dwc/pcie-designware-host.c |   6 +
>  drivers/pci/controller/dwc/pcie-designware.c  |  19 +
>  drivers/pci/controller/dwc/pcie-designware.h  |  16 +
>  8 files changed, 762 insertions(+)
>  create mode 100644 Documentation/ABI/testing/debugfs-dwc-pcie
>  create mode 100644 drivers/pci/controller/dwc/pcie-designware-debugfs.c
> 
> -- 
> 2.17.1
> 

Shradha,

Thank you for this awesome feature!

It would be great if we could get it included in v6.15.

Are you intending to send out a v6?


Kind regards,
Niklas

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mailout4.samsung.com (mailout4.samsung.com [203.254.224.34])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B7FFD1F2395
	for <linux-kernel@vger.kernel.org>; Tue, 21 Jan 2025 12:15:01 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=203.254.224.34
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737461706; cv=none; b=nViDEz6cU99a2J9wROAvyGPFYFmNeHjdVz7cdT9fLl/oyfyzu21fgDGN3uJY7jaMna7TVuIVKI6S14RYOhwpOgCpti2h740WFovnf6/231yRkpCfpz4C64hIkfDOHNCgXnm8BvxSmqrwJSOi+x9mEI2HOhu0YogHl876YR4BmSE=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737461706; c=relaxed/simple;
	bh=NUk4i/SPmaayWwpfmA6zqwIeYyIBOelZ6oOeMIax5zc=;
	h=From:To:Cc:Subject:Date:Message-Id:MIME-Version:Content-Type:
	 References; b=n993iR5xCmlIfB38TJ7MiTMPRcD52Eh/jXvQviTGhSfKBg6StUnixSY6n4nGtuTplDSOG47J86neTB82fXxjJZrCNSeIWHHNCDZ3JYOaPSA8/9qoKR3Vt36iyEkUGgFtHnFDB0ub+cwJY3I0XLpmyCJ8RPK6Yl2ZPXNttUv6w8w=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com; spf=pass smtp.mailfrom=samsung.com; dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b=KIEho7Bj; arc=none smtp.client-ip=203.254.224.34
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=samsung.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b="KIEho7Bj"
Received: from epcas5p2.samsung.com (unknown [182.195.41.40])
	by mailout4.samsung.com (KnoxPortal) with ESMTP id 20250121121459epoutp044bfe970a28c3de1fcb1a12ce238804fd~ctDXlvtGZ1864618646epoutp04r
	for <linux-kernel@vger.kernel.org>; Tue, 21 Jan 2025 12:14:59 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout4.samsung.com 20250121121459epoutp044bfe970a28c3de1fcb1a12ce238804fd~ctDXlvtGZ1864618646epoutp04r
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
	s=mail20170921; t=1737461699;
	bh=CVhXkMaMNrC6nsn01V2f9lAt+sJh0dgdZAWcbUeNBuI=;
	h=From:To:Cc:Subject:Date:References:From;
	b=KIEho7Bj0Q8af9KvD/n1UEyzbGNKLo4fdHUUwLaLVhiQmM8m35D36OrjzP9hkRclc
	 wxqFe6HRuVZ/exxh7QXqwSMy1FrFASElietWfZgguKIj1oyP6aWwOh9+4dOljFqeBp
	 nv8Bw7/4PdYV+XrII6gXJjY+k9uXAul8FgHdltIE=
Received: from epsnrtp1.localdomain (unknown [182.195.42.162]) by
	epcas5p4.samsung.com (KnoxPortal) with ESMTP id
	20250121121458epcas5p4ffc4f49f49f84c83aedf90d8bf839141~ctDWNWVL90802108021epcas5p4B;
	Tue, 21 Jan 2025 12:14:58 +0000 (GMT)
Received: from epsmges5p1new.samsung.com (unknown [182.195.38.177]) by
	epsnrtp1.localdomain (Postfix) with ESMTP id 4YcmNw4Pczz4x9Pp; Tue, 21 Jan
	2025 12:14:56 +0000 (GMT)
Received: from epcas5p1.samsung.com ( [182.195.41.39]) by
	epsmges5p1new.samsung.com (Symantec Messaging Gateway) with SMTP id
	4F.4A.20052.0CF8F876; Tue, 21 Jan 2025 21:14:56 +0900 (KST)
Received: from epsmtrp2.samsung.com (unknown [182.195.40.14]) by
	epcas5p1.samsung.com (KnoxPortal) with ESMTPA id
	20250121115157epcas5p15f8b34cd76cbbb3b043763e644469b18~csvP3Q4M71635316353epcas5p1T;
	Tue, 21 Jan 2025 11:51:57 +0000 (GMT)
Received: from epsmgmcp1.samsung.com (unknown [182.195.42.82]) by
	epsmtrp2.samsung.com (KnoxPortal) with ESMTP id
	20250121115157epsmtrp22623974c524c9542b4f5c579f47e5785~csvP2ZXGe1513315133epsmtrp2m;
	Tue, 21 Jan 2025 11:51:57 +0000 (GMT)
X-AuditID: b6c32a49-3fffd70000004e54-aa-678f8fc0dd25
Received: from epsmtip1.samsung.com ( [182.195.34.30]) by
	epsmgmcp1.samsung.com (Symantec Messaging Gateway) with SMTP id
	1E.5C.33707.D5A8F876; Tue, 21 Jan 2025 20:51:57 +0900 (KST)
Received: from Jaguar.sa.corp.samsungelectronics.net (unknown
	[107.109.115.6]) by epsmtip1.samsung.com (KnoxPortal) with ESMTPA id
	20250121115154epsmtip10441c54040454bf47f4c1eb92d8e62ee~csvNukeI81736817368epsmtip1E;
	Tue, 21 Jan 2025 11:51:54 +0000 (GMT)
From: Shradha Todi <shradha.t@samsung.com>
To: linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org
Cc: manivannan.sadhasivam@linaro.org, lpieralisi@kernel.org, kw@linux.com,
	robh@kernel.org, bhelgaas@google.com, jingoohan1@gmail.com,
	Jonathan.Cameron@Huawei.com, fan.ni@samsung.com, a.manzanares@samsung.com,
	pankaj.dubey@samsung.com, quic_nitegupt@quicinc.com,
	quic_krichai@quicinc.com, gost.dev@samsung.com, Shradha Todi
	<shradha.t@samsung.com>
Subject: [PATCH v5 0/4] Add support for RAS DES feature in PCIe DW
Date: Tue, 21 Jan 2025 16:44:17 +0530
Message-Id: <20250121111421.35437-1-shradha.t@samsung.com>
X-Mailer: git-send-email 2.17.1
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFtrPJsWRmVeSWpSXmKPExsWy7bCmuu6B/v50g23XZCymH1a0WNKUYdG0
	+i6rxc0DO5ksVnyZyW6xauE1NouGnt+sFpd3zWGzODvvOJtFy58WFou7LZ2sFou2fmG3ePCg
	0qJzzhFmi/97drBb9B6udRDw2DnrLrvHgk2lHi1H3rJ6bFrVyeZx59oeNo8nV6YzeUzcU+fR
	t2UVo8fnTXIBnFHZNhmpiSmpRQqpecn5KZl56bZK3sHxzvGmZgaGuoaWFuZKCnmJuam2Si4+
	AbpumTlAHygplCXmlAKFAhKLi5X07WyK8ktLUhUy8otLbJVSC1JyCkwK9IoTc4tL89L18lJL
	rAwNDIxMgQoTsjMOTb3CXHBVuuLoskssDYw7xLoYOTkkBEwklu1/y9jFyMUhJLCbUeJ64zFm
	COcTo8Sx2f8QnKUP7rPDtKx8/JAVIrGTUeLE/RdMEE4zk8SXP/8ZQarYBLQkGr92MYPYIgLW
	Eofbt7CBFDELPGWSaD3+kw0kISzgJNH/bBkTiM0ioCrxfNsSsBW8AlYSXTc/sUGsk5dYveEA
	M0RcUOLkzCcsIDYzULx562yw+yQEtnBIvNh9A6rBReLWki2sELawxKvjW6DulpL4/G4vVE26
	xMrNM5gh7ByJb5uXMEHY9hIHrswBWsABtEBTYv0ufYiwrMTUU+uYIPbySfT+fgJVziuxYx6M
	rSzx5e8eFghbUmLescusIGMkBDwkGib7gYSFBGIlzvdsZprAKD8LyTezkHwzC2HxAkbmVYyS
	qQXFuempxaYFhnmp5fCYTc7P3cQITslanjsY7z74oHeIkYmD8RCjBAezkgiv6IeedCHelMTK
	qtSi/Pii0pzU4kOMpsAgnsgsJZqcD8wKeSXxhiaWBiZmZmYmlsZmhkrivM07W9KFBNITS1Kz
	U1MLUotg+pg4OKUamOQVMhy5BWaLs2g31k6L2pN75cx5EY3wqwoNLbwV26bNDefLiTdUmLyf
	pW1CZo/c90ylwFk8782VbhxoO7DPbUnst88X9ZY3XtqxVVvY/ApTG3/h/F453jPKnqr2D7xK
	yg33FO3Ypr20ecF9XtZ3rH4ThdUu/Cl7cmBSlMi6qFktkvIl/3anZ/vym6WJa3w1zDBecq7u
	tKiS98dS1tI7aQX3jaSXOL/duTZ0auarDOElibuiJ71jSZN44Nwx88ry6Ta1EVFRj91/H8s9
	LfHe5tWcpW2pFVvZr/oUux+98vid9GJtIx7j89echKWm/JOZ3pnf9OvszOMm3xdVnDnMdk9f
	4Wz9RtlNv7d/Vn//W4mlOCPRUIu5qDgRAOISvI1SBAAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFvrLLMWRmVeSWpSXmKPExsWy7bCSnG5sV3+6wZEvzBbTDytaLGnKsGha
	fZfV4uaBnUwWK77MZLdYtfAam0VDz29Wi8u75rBZnJ13nM2i5U8Li8Xdlk5Wi0Vbv7BbPHhQ
	adE55wizxf89O9gteg/XOgh47Jx1l91jwaZSj5Yjb1k9Nq3qZPO4c20Pm8eTK9OZPCbuqfPo
	27KK0ePzJrkAzigum5TUnMyy1CJ9uwSujENTrzAXXJWuOLrsEksD4w6xLkZODgkBE4mVjx+y
	djFycQgJbGeUOLvtBCNEQlLi88V1TBC2sMTKf8/ZIYoamSS6jqwAK2IT0JJo/NrFDGKLCNhK
	3H80GWwSs8BXJomPn26AJYQFnCT6ny0Dm8QioCrxfNsSdhCbV8BKouvmJzaIDfISqzccYIaI
	C0qcnPmEpYuRA2iQusT6eUIgYWagkuats5knMPLPQlI1C6FqFpKqBYzMqxhFUwuKc9NzkwsM
	9YoTc4tL89L1kvNzNzGCY0graAfjsvV/9Q4xMnEwHmKU4GBWEuEV/dCTLsSbklhZlVqUH19U
	mpNafIhRmoNFSZxXOaczRUggPbEkNTs1tSC1CCbLxMEp1cBkvG3Wqgt3n1zYmurNVT1p5Xkr
	AS85xr2mn8s1Vwddmi1TH2u8/kJgSZ6l4V/tBZMeHz357dnMplvmncLbc6z2nn6hL+a4VzXw
	evzHv/4Gl/8ZXlj/rFJBd/n2rTsvN5T6nJ8zTfAdT/8Gz7L+MxfZjOQvK1y/wHs6zVRTxjTi
	eeSmtS9sl/TPX/U9k6k38eOjide+9mbMuKr1bUL23+fnPFRl2uTcmu9PdSg84/Vzyb+aLT19
	/t+3J9y+lM24dcWEy1XfrJQdplVc0TLKzHl/rKnCTDZ5heTDjW5yn8JMmnzzpU7knlK6ddb1
	9cS7H1LCbDblLVioY+ohdSnzU21TxP+A/7N7770tZX4asXiHuhJLcUaioRZzUXEiADsGHMYQ
	AwAA
X-CMS-MailID: 20250121115157epcas5p15f8b34cd76cbbb3b043763e644469b18
X-Msg-Generator: CA
Content-Type: text/plain; charset="utf-8"
X-Sendblock-Type: REQ_APPROVE
CMS-TYPE: 105P
DLP-Filter: Pass
X-CFilter-Loop: Reflected
X-CMS-RootMailID: 20250121115157epcas5p15f8b34cd76cbbb3b043763e644469b18
References: <CGME20250121115157epcas5p15f8b34cd76cbbb3b043763e644469b18@epcas5p1.samsung.com>

DesignWare controller provides a vendor specific extended capability
called RASDES as an IP feature. This extended capability  provides
hardware information like:
 - Debug registers to know the state of the link or controller. 
 - Error injection mechanisms to inject various PCIe errors including
   sequence number, CRC
 - Statistical counters to know how many times a particular event
   occurred

However, in Linux we do not have any generic or custom support to be
able to use this feature in an efficient manner. This is the reason we
are proposing this framework. Debug and bring up time of high-speed IPs
are highly dependent on costlier hardware analyzers and this solution
will in some ways help to reduce the HW analyzer usage.

The debugfs entries can be used to get information about underlying
hardware and can be shared with user space. Separate debugfs entries has
been created to cater to all the DES hooks provided by the controller.
The debugfs entries interacts with the RASDES registers in the required
sequence and provides the meaningful data to the user. This eases the
effort to understand and use the register information for debugging.

v5:
    - Addressed Fan's comment to split the patches for easier review
    - Addressed Bjorn's comment to fix vendor specific cap search
    - Addressed style related change requests from v4
    - Added rasdes debugfs init call to common designware files for host
      and EP.

v4: https://lore.kernel.org/lkml/20241206074456.17401-1-shradha.t@samsung.com/
    - Addressed comments from Manivannan, Bjorn and Jonathan
    - Addressed style related change requests from v3
    - Added Documentation under Documentation/ABI/testing and kdoc stype
      comments wherever required for better understanding
    - Enhanced error injection to include all possible error groups
    - Removed debugfs init call from common designware file and left it
      up to individual platform drivers to init/deinit as required.

v3: https://lore.kernel.org/all/20240625093813.112555-1-shradha.t@samsung.com/
    - v2 had suggestions about moving this framework to perf/EDAC instead of a
      controller specific debugfs but after discussions we decided to go ahead
      with the same. Rebased and posted v3 with minor style changes.

v2: https://lore.kernel.org/lkml/20231130115044.53512-1-shradha.t@samsung.com/
    - Addressed comments from Krzysztof WilczyÅ„ski, Bjorn Helgaas and
      posted v2 with a changed implementation for a better code design

v1: https://lore.kernel.org/all/20210518174618.42089-1-shradha.t@samsung.com/T/

Shradha Todi (4):
  PCI: dwc: Add support for vendor specific capability search
  Add debugfs based silicon debug support in DWC
  Add debugfs based error injection support in DWC
  Add debugfs based statistical counter support in DWC

 Documentation/ABI/testing/debugfs-dwc-pcie    | 144 +++++
 drivers/pci/controller/dwc/Kconfig            |  10 +
 drivers/pci/controller/dwc/Makefile           |   1 +
 .../controller/dwc/pcie-designware-debugfs.c  | 561 ++++++++++++++++++
 .../pci/controller/dwc/pcie-designware-ep.c   |   5 +
 .../pci/controller/dwc/pcie-designware-host.c |   6 +
 drivers/pci/controller/dwc/pcie-designware.c  |  19 +
 drivers/pci/controller/dwc/pcie-designware.h  |  16 +
 8 files changed, 762 insertions(+)
 create mode 100644 Documentation/ABI/testing/debugfs-dwc-pcie
 create mode 100644 drivers/pci/controller/dwc/pcie-designware-debugfs.c

-- 
2.17.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mailout1.samsung.com (mailout1.samsung.com [203.254.224.24])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 3AD0C1F2362
	for <linux-kernel@vger.kernel.org>; Tue, 21 Jan 2025 12:14:57 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=203.254.224.24
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737461699; cv=none; b=RBrjLJdKlO4kgcTlZ4DlIwdpzxmw9p2HVmDJD+pIKYH+cKkk16LI2d4FJAInE2pVGWIf2eL8pk/ms5qZB+p4zN7f7qTQyR5loTprm+gLOFHYywK0vA51OFrKSQ1Zo45rMpZIr79NLqVeZXcNZtSpJPQqIOPXewi1Nc5JTVvul78=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737461699; c=relaxed/simple;
	bh=BCvWu21/60Qrer2suhPTEYGrFQGUk1j3Cafga0UkHCY=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:Content-Type:
	 References; b=YSE4id/2t3G9bRGWyx0MYoy3VKm4jKvLqXnfOQw9cnvr9eivzCF9SyGvU1nPlp7dJhfnTqhbBR9aJz82AgaMeGUHUlATQ93VM0O5Ez+8WleGmcALJy2PIq7Q0UE6HYn8HpQA5pcQrIhM+3B3mR4zoyn9kyt47GSlRfu7Xa+MnNU=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com; spf=pass smtp.mailfrom=samsung.com; dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b=QEeCrMxM; arc=none smtp.client-ip=203.254.224.24
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=samsung.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b="QEeCrMxM"
Received: from epcas5p2.samsung.com (unknown [182.195.41.40])
	by mailout1.samsung.com (KnoxPortal) with ESMTP id 20250121121455epoutp01ae2650c7c5d756386e7ec5f513e968b4~ctDTg5v0x0886708867epoutp01L
	for <linux-kernel@vger.kernel.org>; Tue, 21 Jan 2025 12:14:55 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout1.samsung.com 20250121121455epoutp01ae2650c7c5d756386e7ec5f513e968b4~ctDTg5v0x0886708867epoutp01L
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
	s=mail20170921; t=1737461695;
	bh=lXUpLOxvexbFrilbcXr3nhUUpuUNXCnBKsDFM90deW8=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=QEeCrMxMKsXuQtp1u4Z5cUmNgVcMwlUb4W8lkebkhjvTovR9jlatVPQPbOjQ3d044
	 l+6gsuW6tQVqnDdpH0ZU/SEO583li9VoIp0xD/yVUbEcA48p/ePgZtQ+HSKcyYpF+H
	 7NRQDTi5q3ifXYuSJg8DO8M79NFQrVCBMlPf7Tp0=
Received: from epsnrtp2.localdomain (unknown [182.195.42.163]) by
	epcas5p1.samsung.com (KnoxPortal) with ESMTP id
	20250121121454epcas5p19c8ef8716cdd312c6d142d89be4ccf35~ctDSqTmTV1628416284epcas5p1E;
	Tue, 21 Jan 2025 12:14:54 +0000 (GMT)
Received: from epsmges5p2new.samsung.com (unknown [182.195.38.176]) by
	epsnrtp2.localdomain (Postfix) with ESMTP id 4YcmNr4Bnmz4x9Py; Tue, 21 Jan
	2025 12:14:52 +0000 (GMT)
Received: from epcas5p1.samsung.com ( [182.195.41.39]) by
	epsmges5p2new.samsung.com (Symantec Messaging Gateway) with SMTP id
	83.8A.19933.CBF8F876; Tue, 21 Jan 2025 21:14:52 +0900 (KST)
Received: from epsmtrp1.samsung.com (unknown [182.195.40.13]) by
	epcas5p1.samsung.com (KnoxPortal) with ESMTPA id
	20250121115200epcas5p130ba67bfd97abfba09e4542256eb254f~csvTJ3TBc1774517745epcas5p1b;
	Tue, 21 Jan 2025 11:52:00 +0000 (GMT)
Received: from epsmgms1p1new.samsung.com (unknown [182.195.42.41]) by
	epsmtrp1.samsung.com (KnoxPortal) with ESMTP id
	20250121115200epsmtrp1c07474e3dde731a74fa54f6ec0d3b047~csvTJAwml0954909549epsmtrp1Y;
	Tue, 21 Jan 2025 11:52:00 +0000 (GMT)
X-AuditID: b6c32a4a-c1fda70000004ddd-c2-678f8fbcc51f
Received: from epsmtip1.samsung.com ( [182.195.34.30]) by
	epsmgms1p1new.samsung.com (Symantec Messaging Gateway) with SMTP id
	C8.02.18729.06A8F876; Tue, 21 Jan 2025 20:52:00 +0900 (KST)
Received: from Jaguar.sa.corp.samsungelectronics.net (unknown
	[107.109.115.6]) by epsmtip1.samsung.com (KnoxPortal) with ESMTPA id
	20250121115158epsmtip1edd573775756f6017ec5061441ed5181~csvRC05Qd1750517505epsmtip1u;
	Tue, 21 Jan 2025 11:51:58 +0000 (GMT)
From: Shradha Todi <shradha.t@samsung.com>
To: linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org
Cc: manivannan.sadhasivam@linaro.org, lpieralisi@kernel.org, kw@linux.com,
	robh@kernel.org, bhelgaas@google.com, jingoohan1@gmail.com,
	Jonathan.Cameron@Huawei.com, fan.ni@samsung.com, a.manzanares@samsung.com,
	pankaj.dubey@samsung.com, quic_nitegupt@quicinc.com,
	quic_krichai@quicinc.com, gost.dev@samsung.com, Shradha Todi
	<shradha.t@samsung.com>
Subject: [PATCH v5 1/4] PCI: dwc: Add support for vendor specific capability
 search
Date: Tue, 21 Jan 2025 16:44:18 +0530
Message-Id: <20250121111421.35437-2-shradha.t@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20250121111421.35437-1-shradha.t@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFprDJsWRmVeSWpSXmKPExsWy7bCmuu6e/v50g1cPZCymH1a0WNKUYdG0
	+i6rxc0DO5ksVnyZyW6xauE1NouGnt+sFpd3zWGzODvvOJtFy58WFou7LZ2sFou2fmG3ePCg
	0qJzzhFmi/97drBb9B6udRDw2DnrLrvHgk2lHi1H3rJ6bFrVyeZx59oeNo8nV6YzeUzcU+fR
	t2UVo8fnTXIBnFHZNhmpiSmpRQqpecn5KZl56bZK3sHxzvGmZgaGuoaWFuZKCnmJuam2Si4+
	AbpumTlAHygplCXmlAKFAhKLi5X07WyK8ktLUhUy8otLbJVSC1JyCkwK9IoTc4tL89L18lJL
	rAwNDIxMgQoTsjNmtuxnLbjNX3HpzRuWBsbjvF2MnBwSAiYSx7bOYupi5OIQEtjNKPFj5Rl2
	COcTo8Shv5PYIJxvjBLP9y9lgWl5fvU+VGIvo8SRrvvMIAkhgWYmiRUNOSA2m4CWROPXLrC4
	iIC1xOH2LWANzAJPmSRaj/9kA0kIC4RK7FtzkwnEZhFQldh3spUdxOYVsJK4Mb2TDWKbvMTq
	DQfABnECDXpz5A4ryCAJgbkcEst3LGeCKHKRONa1Geo8YYlXx7ewQ9hSEi/726DsdImVm2cw
	Q9g5Et82L4HqtZc4cGUOUC8H0HWaEut36UOEZSWmnloHVsIswCfR+/sJVDmvxI55MLayxJe/
	e6DWSkrMO3aZFcL2kPjydgU0hPoYJS4dec46gVFuFsKKBYyMqxglUwuKc9NTi00LjPJSy+HR
	lpyfu4kRnEy1vHYwPnzwQe8QIxMH4yFGCQ5mJRFe0Q896UK8KYmVValF+fFFpTmpxYcYTYEB
	OJFZSjQ5H5jO80riDU0sDUzMzMxMLI3NDJXEeZt3tqQLCaQnlqRmp6YWpBbB9DFxcEo1MEm9
	23vRc/rH/G+L59S4ewpf7J/lNZ/Hy3fp2ms2MUwWK1vXcTvtatGctkpp9VcZXh7FIwU/tEJt
	PG9lrfiu/l+Ja+PZT+93fm7tfPi3cFfxgRkpOkw1zPbiXfoHD5pP92b6Pckv2b5h0qVU71X8
	LXNWb8pdb9EpsyxC+MjEPSlzn1vKuvwM/3aMaWpseM++BYEsX57viWNbV9+mM5/l4JqzC80j
	p6nGzwo/sprXYG7pplXqC6NdZwS/anp3dvnSWWmGddaOG5lqbdhF3Ly/75Sd2PSLPZFZeb9s
	ga6/ux53W35VyhfPM5yVWc8dbV5JRR5/7L3hXky3guumpDuXWu+H63JKzin5qCrx3ortlBJL
	cUaioRZzUXEiAJPYb0svBAAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFrrELMWRmVeSWpSXmKPExsWy7bCSnG5CV3+6waq7qhbTDytaLGnKsGha
	fZfV4uaBnUwWK77MZLdYtfAam0VDz29Wi8u75rBZnJ13nM2i5U8Li8Xdlk5Wi0Vbv7BbPHhQ
	adE55wizxf89O9gteg/XOgh47Jx1l91jwaZSj5Yjb1k9Nq3qZPO4c20Pm8eTK9OZPCbuqfPo
	27KK0ePzJrkAzigum5TUnMyy1CJ9uwSujJkt+1kLbvNXXHrzhqWB8ThvFyMnh4SAicTzq/fZ
	QGwhgd2MEke+FUPEJSU+X1zHBGELS6z895y9i5ELqKaRSeLHh7PsIAk2AS2Jxq9dzCC2iICt
	xP1Hk1lBipgFvjJJfPx0AywhLBAsseHSSbBJLAKqEvtOtoI18wpYSdyY3skGsUFeYvWGA2D1
	nALWEm+O3GGFuMhKYvb2U6wTGPkWMDKsYpRMLSjOTc8tNiwwzEst1ytOzC0uzUvXS87P3cQI
	DnYtzR2M21d90DvEyMTBeIhRgoNZSYRX9ENPuhBvSmJlVWpRfnxRaU5q8SFGaQ4WJXFe8Re9
	KUIC6YklqdmpqQWpRTBZJg5OqQYmF5aT7/4EXPuYI3k+aU7RRYWqQPcTR2c6XGovuMm0PD7E
	tzvU++DJzefMD6+Kz/jje/6zlMD6g9u3/3inve6nrL7/VIcL0jn7roUwJUxg6PaSV3RWOfdh
	7jU2t7+TFnYpblje2Ln725Mk+dlxxUeeRE34J7fq47sEIb0dWmvOPTvOwyCz5les4JxbFhUf
	sjlXb7toZDRHf3v1liurU4qXfa2+IKt7+H6sh8+n1zcsyizL5OqSGOompClta9YVenHSqV56
	wj+BV+p3nbrOlLu0CXA8qN8YkHPh7cya0CWJsZ3bjhWJtEppeZf5BqyYtyDw4i5W5yedu4Xj
	HU7t0d/1IfjMv95mA6Xc5iNXtrguUmIpzkg01GIuKk4EACZCcn7lAgAA
X-CMS-MailID: 20250121115200epcas5p130ba67bfd97abfba09e4542256eb254f
X-Msg-Generator: CA
Content-Type: text/plain; charset="utf-8"
X-Sendblock-Type: REQ_APPROVE
CMS-TYPE: 105P
DLP-Filter: Pass
X-CFilter-Loop: Reflected
X-CMS-RootMailID: 20250121115200epcas5p130ba67bfd97abfba09e4542256eb254f
References: <20250121111421.35437-1-shradha.t@samsung.com>
	<CGME20250121115200epcas5p130ba67bfd97abfba09e4542256eb254f@epcas5p1.samsung.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>

Add vendor specific extended configuration space capability search API
using struct dw_pcie pointer for DW controllers.

Signed-off-by: Shradha Todi <shradha.t@samsung.com>
---
 drivers/pci/controller/dwc/pcie-designware.c | 19 +++++++++++++++++++
 drivers/pci/controller/dwc/pcie-designware.h |  1 +
 2 files changed, 20 insertions(+)

diff --git a/drivers/pci/controller/dwc/pcie-designware.c b/drivers/pci/controller/dwc/pcie-designware.c
index 6d6cbc8b5b2c..3588197ba2d7 100644
--- a/drivers/pci/controller/dwc/pcie-designware.c
+++ b/drivers/pci/controller/dwc/pcie-designware.c
@@ -277,6 +277,25 @@ static u16 dw_pcie_find_next_ext_capability(struct dw_pcie *pci, u16 start,
 	return 0;
 }
 
+u16 dw_pcie_find_vsec_capability(struct dw_pcie *pci, u16 vendor_id, u16 vsec_cap)
+{
+	u16 vsec = 0;
+	u32 header;
+
+	if (vendor_id != dw_pcie_readw_dbi(pci, PCI_VENDOR_ID))
+		return 0;
+
+	while ((vsec = dw_pcie_find_next_ext_capability(pci, vsec,
+					PCI_EXT_CAP_ID_VNDR))) {
+		header = dw_pcie_readl_dbi(pci, vsec + PCI_VNDR_HEADER);
+		if (PCI_VNDR_HEADER_ID(header) == vsec_cap)
+			return vsec;
+	}
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(dw_pcie_find_vsec_capability);
+
 u16 dw_pcie_find_ext_capability(struct dw_pcie *pci, u8 cap)
 {
 	return dw_pcie_find_next_ext_capability(pci, 0, cap);
diff --git a/drivers/pci/controller/dwc/pcie-designware.h b/drivers/pci/controller/dwc/pcie-designware.h
index 347ab74ac35a..02e94bd9b042 100644
--- a/drivers/pci/controller/dwc/pcie-designware.h
+++ b/drivers/pci/controller/dwc/pcie-designware.h
@@ -476,6 +476,7 @@ void dw_pcie_version_detect(struct dw_pcie *pci);
 
 u8 dw_pcie_find_capability(struct dw_pcie *pci, u8 cap);
 u16 dw_pcie_find_ext_capability(struct dw_pcie *pci, u8 cap);
+u16 dw_pcie_find_vsec_capability(struct dw_pcie *pci, u16 vendor_id, u16 vsec_cap);
 
 int dw_pcie_read(void __iomem *addr, int size, u32 *val);
 int dw_pcie_write(void __iomem *addr, int size, u32 val);
-- 
2.17.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mailout2.samsung.com (mailout2.samsung.com [203.254.224.25])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A9FBB1F2367
	for <linux-kernel@vger.kernel.org>; Tue, 21 Jan 2025 12:14:47 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=203.254.224.25
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737461689; cv=none; b=uhj2ILb1mhWjV/AYm6Xr78EDnSyyimeNOiF94eK8ihQ9VdZylRdo5C5yO9k+DmEq7VxQdG4iRSvR0l9MQ4YIzSxQAgkUmRfPzT5nghKlPM0KqA+YUkrnlF2vKEeq727edUk1LXugT413UGTXnbSEY8PW9kM3epbPPmpkIK7UZeI=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737461689; c=relaxed/simple;
	bh=bWW45EpU4eofPQ7rVUlr43FcN8WWbF671ps8Q9RunVc=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:Content-Type:
	 References; b=QgmlP64DQ0kKCnIPjT9djhliQgFRBa9XtZt8FxZ4Kiqt3m2EmXJRlmZ5w6keWanrsxBEYGCnKT2vfioEiR5lVFZ2cWGMH0ZGaw0v/zdHnyk7lngg3SVefoxNGYK/PWc/4H9A6plq+vC06wuGAdhQjLMOblrBNGOwmu6NGiBv7os=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com; spf=pass smtp.mailfrom=samsung.com; dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b=JjSFTiBw; arc=none smtp.client-ip=203.254.224.25
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=samsung.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b="JjSFTiBw"
Received: from epcas5p4.samsung.com (unknown [182.195.41.42])
	by mailout2.samsung.com (KnoxPortal) with ESMTP id 20250121121445epoutp028b76cf2549ab2b87d8463774a5578d02~ctDKT0E2H2363123631epoutp02E
	for <linux-kernel@vger.kernel.org>; Tue, 21 Jan 2025 12:14:45 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout2.samsung.com 20250121121445epoutp028b76cf2549ab2b87d8463774a5578d02~ctDKT0E2H2363123631epoutp02E
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
	s=mail20170921; t=1737461685;
	bh=izn50hHVilbiavuM9SxsRoBx1zbvwXMzVWNpemgwipw=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=JjSFTiBwwEeq9S2MSjzg0cm/7b7gccUSV1AQ/npDW8SS4tOJ+RUtEWNlzOnZSTGG2
	 SrMnokYZypcvk9TBEcGW6cUHFRDT1KtDbDEY3clOeniT+RGhlbkR1NIZubFm2MVM8C
	 eheGB+yLt+q4tRxS+yRbwT/nXU1BZ+1kRQ3tCWbo=
Received: from epsnrtp4.localdomain (unknown [182.195.42.165]) by
	epcas5p1.samsung.com (KnoxPortal) with ESMTP id
	20250121121444epcas5p1acd55f9306b562879a2da73b216e46eb~ctDJwfUYM0889308893epcas5p1h;
	Tue, 21 Jan 2025 12:14:44 +0000 (GMT)
Received: from epsmgec5p1new.samsung.com (unknown [182.195.38.180]) by
	epsnrtp4.localdomain (Postfix) with ESMTP id 4YcmNg1cDgz4x9Pq; Tue, 21 Jan
	2025 12:14:43 +0000 (GMT)
Received: from epcas5p3.samsung.com ( [182.195.41.41]) by
	epsmgec5p1new.samsung.com (Symantec Messaging Gateway) with SMTP id
	B3.1E.19710.3BF8F876; Tue, 21 Jan 2025 21:14:43 +0900 (KST)
Received: from epsmtrp2.samsung.com (unknown [182.195.40.14]) by
	epcas5p4.samsung.com (KnoxPortal) with ESMTPA id
	20250121115206epcas5p42ce605e6c8500fd2cdfea83a82b101a5~csvYTuPQc0408004080epcas5p4E;
	Tue, 21 Jan 2025 11:52:06 +0000 (GMT)
Received: from epsmgms1p2new.samsung.com (unknown [182.195.42.42]) by
	epsmtrp2.samsung.com (KnoxPortal) with ESMTP id
	20250121115206epsmtrp213bbe9516751739df0a531153f8a453d~csvYR9CnF1523215232epsmtrp2d;
	Tue, 21 Jan 2025 11:52:06 +0000 (GMT)
X-AuditID: b6c32a44-36bdd70000004cfe-a6-678f8fb3c634
Received: from epsmtip1.samsung.com ( [182.195.34.30]) by
	epsmgms1p2new.samsung.com (Symantec Messaging Gateway) with SMTP id
	A9.BB.18949.56A8F876; Tue, 21 Jan 2025 20:52:06 +0900 (KST)
Received: from Jaguar.sa.corp.samsungelectronics.net (unknown
	[107.109.115.6]) by epsmtip1.samsung.com (KnoxPortal) with ESMTPA id
	20250121115203epsmtip1c91f42914922686799b4797c5330bb73~csvWC2urJ1602616026epsmtip1_;
	Tue, 21 Jan 2025 11:52:03 +0000 (GMT)
From: Shradha Todi <shradha.t@samsung.com>
To: linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org
Cc: manivannan.sadhasivam@linaro.org, lpieralisi@kernel.org, kw@linux.com,
	robh@kernel.org, bhelgaas@google.com, jingoohan1@gmail.com,
	Jonathan.Cameron@Huawei.com, fan.ni@samsung.com, a.manzanares@samsung.com,
	pankaj.dubey@samsung.com, quic_nitegupt@quicinc.com,
	quic_krichai@quicinc.com, gost.dev@samsung.com, Shradha Todi
	<shradha.t@samsung.com>
Subject: [PATCH v5 2/4] Add debugfs based silicon debug support in DWC
Date: Tue, 21 Jan 2025 16:44:19 +0530
Message-Id: <20250121111421.35437-3-shradha.t@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20250121111421.35437-1-shradha.t@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFprNJsWRmVeSWpSXmKPExsWy7bCmpu7m/v50g3vXWC2mH1a0WNKUYdG0
	+i6rxc0DO5ksVnyZyW6xauE1NouGnt+sFpd3zWGzODvvOJtFy58WFou7LZ2sFou2fmG3ePCg
	0qJzzhFmi/97drBb9B6udRDw2DnrLrvHgk2lHi1H3rJ6bFrVyeZx59oeNo8nV6YzeUzcU+fR
	t2UVo8fnTXIBnFHZNhmpiSmpRQqpecn5KZl56bZK3sHxzvGmZgaGuoaWFuZKCnmJuam2Si4+
	AbpumTlAHygplCXmlAKFAhKLi5X07WyK8ktLUhUy8otLbJVSC1JyCkwK9IoTc4tL89L18lJL
	rAwNDIxMgQoTsjMmbZvFXrAzrGJn/2fmBsZ+zy5GTg4JAROJxZ0/WbsYuTiEBHYzShxueMwC
	4XxilDjwrhHK+cYo8WTzE1aYloNPZzOC2EICexklpu9VhyhqZpLo+fmJGSTBJqAl0fi1C8wW
	EbCWONy+hQ2kiFngKZNE6/GfQA4Hh7CAm8TZVcIgNSwCqhJLD2wEW8ArYCVx8vt7Fohl8hKr
	NxwAm8MJNOfNkTtgt0oIzOWQ6DyzhgmiyEViwxUYW1ji1fEt7BC2lMTnd3vZIOx0iZWbZzBD
	2DkS3zYvgaq3lzhwZQ4LyD3MApoS63fpQ4RlJaaeWgdWwizAJ9H7+wlUOa/EjnkwtrLEl797
	oO6UlJh37DI0gDwkDk+czggJlD5GiZOzj7BPYJSbhbBiASPjKkbJ1ILi3PTUZNMCw7zUcnis
	JefnbmIEp1Itlx2MN+b/0zvEyMTBeIhRgoNZSYRX9ENPuhBvSmJlVWpRfnxRaU5q8SFGU2AA
	TmSWEk3OBybzvJJ4QxNLAxMzMzMTS2MzQyVx3uadLelCAumJJanZqakFqUUwfUwcnFINTJuD
	ZYuMz2SkqjuluD2QunFKL7bYyZgtsu39o22CDI8usX6NYcq6dJdt9u4ZXdmvJY9XXmG8uavq
	0j6/lQJKOyazfy2zf3MwcZ12bdRUxXNdrJX36q+K3cwSW9bnKnxQquL41b/JX/ZvdDpUcOqV
	6+z0NWdF1T8kT0kqfh+wMiHJ4/yFvleOrG4fj65PCn/fl7pPgUM9v+D5Cj7WxSt2vWcwUWeT
	0LC5r6m5o3mr20HHUg9HnxKPq0rJC6y6T6i2VK0Vl5FaX/nwS2tQyuYmScED32RMmqNl7X5s
	ODqn0vST1WvO4x8Lr9cpdn44/ea+3tyXMQtq9/TIWiu9rUqdcf1XlLsvO7f4eo+He4RnKLEU
	ZyQaajEXFScCALP1L4guBAAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFrrELMWRmVeSWpSXmKPExsWy7bCSnG5aV3+6wdIzTBbTDytaLGnKsGha
	fZfV4uaBnUwWK77MZLdYtfAam0VDz29Wi8u75rBZnJ13nM2i5U8Li8Xdlk5Wi0Vbv7BbPHhQ
	adE55wizxf89O9gteg/XOgh47Jx1l91jwaZSj5Yjb1k9Nq3qZPO4c20Pm8eTK9OZPCbuqfPo
	27KK0ePzJrkAzigum5TUnMyy1CJ9uwSujEnbZrEX7Ayr2Nn/mbmBsd+zi5GTQ0LAROLg09mM
	XYxcHEICuxklGv7uZINISEp8vriOCcIWllj57zk7RFEjk8SBrotgCTYBLYnGr13MILaIgK3E
	/UeTWUGKmAW+Mkl8/HQDKMHBISzgJnF2lTBIDYuAqsTSAxtZQWxeASuJk9/fs0AskJdYveEA
	2BxOAWuJN0fugNUIAdXM3n6KdQIj3wJGhlWMkqkFxbnpucWGBUZ5qeV6xYm5xaV56XrJ+bmb
	GMHBrqW1g3HPqg96hxiZOBgPMUpwMCuJ8Ip+6EkX4k1JrKxKLcqPLyrNSS0+xCjNwaIkzvvt
	dW+KkEB6YklqdmpqQWoRTJaJg1Oqgant2UXWRZqHj3E1XBbw8vivmJGrMdGLi/9hobyvxuEr
	F055WtRkhfbZGTQsDf9d9PJPVBS3ac+xU/nXNWeWzzm/qM9RP71OMfkBa1T54cpShqemHUG/
	90vEyEj/0MmdLTXtWKCESc9V7RlpuV/9Plet+fYrMqJT+NH2rR8vWbu1OxxeN7HxKEN1rrrY
	ywNH5eOfX8s966y9xuOgg3u76/daacNsJ76d/V/t5mzQ1xeb+tNH5fadjwfyMh/+qMuazqm8
	ctvE4ozU1PfHH2469Gz2H0m1BrMKQf/Jb+bfOHs7TTS6aq107h2m+99efAkwk/ka4Zb65KiQ
	c3PqrOksR/54OnhkLf70WlYsb8IdOyWW4oxEQy3mouJEAOofCo7lAgAA
X-CMS-MailID: 20250121115206epcas5p42ce605e6c8500fd2cdfea83a82b101a5
X-Msg-Generator: CA
Content-Type: text/plain; charset="utf-8"
X-Sendblock-Type: REQ_APPROVE
CMS-TYPE: 105P
DLP-Filter: Pass
X-CFilter-Loop: Reflected
X-CMS-RootMailID: 20250121115206epcas5p42ce605e6c8500fd2cdfea83a82b101a5
References: <20250121111421.35437-1-shradha.t@samsung.com>
	<CGME20250121115206epcas5p42ce605e6c8500fd2cdfea83a82b101a5@epcas5p4.samsung.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>

Add support to provide silicon debug interface to userspace. This set
of debug registers are part of the RASDES feature present in DesignWare
PCIe controllers.

Signed-off-by: Shradha Todi <shradha.t@samsung.com>
---
 Documentation/ABI/testing/debugfs-dwc-pcie    |  13 ++
 drivers/pci/controller/dwc/Kconfig            |  10 +
 drivers/pci/controller/dwc/Makefile           |   1 +
 .../controller/dwc/pcie-designware-debugfs.c  | 173 ++++++++++++++++++
 .../pci/controller/dwc/pcie-designware-ep.c   |   5 +
 .../pci/controller/dwc/pcie-designware-host.c |   6 +
 drivers/pci/controller/dwc/pcie-designware.h  |  15 ++
 7 files changed, 223 insertions(+)
 create mode 100644 Documentation/ABI/testing/debugfs-dwc-pcie
 create mode 100644 drivers/pci/controller/dwc/pcie-designware-debugfs.c

diff --git a/Documentation/ABI/testing/debugfs-dwc-pcie b/Documentation/ABI/testing/debugfs-dwc-pcie
new file mode 100644
index 000000000000..e7920ac82e38
--- /dev/null
+++ b/Documentation/ABI/testing/debugfs-dwc-pcie
@@ -0,0 +1,13 @@
+What:		/sys/kernel/debug/dwc_pcie_<dev>/rasdes_debug/lane_detect
+Date:		January 2025
+Contact:	Shradha Todi <shradha.t@samsung.com>
+Description:	(RW) Write the lane number to be checked for detection.	Read
+		will return whether PHY indicates receiver detection on the
+		selected lane. The default selected lane is Lane0.
+
+What:		/sys/kernel/debug/dwc_pcie_<dev>/rasdes_debug/rx_valid
+Date:		January 2025
+Contact:	Shradha Todi <shradha.t@samsung.com>
+Description:	(RW) Write the lane number to be checked as valid or invalid. Read
+		will return the status of PIPE RXVALID signal of the selected lane.
+		The default selected lane is Lane0.
diff --git a/drivers/pci/controller/dwc/Kconfig b/drivers/pci/controller/dwc/Kconfig
index b6d6778b0698..99ddc1e18f72 100644
--- a/drivers/pci/controller/dwc/Kconfig
+++ b/drivers/pci/controller/dwc/Kconfig
@@ -6,6 +6,16 @@ menu "DesignWare-based PCIe controllers"
 config PCIE_DW
 	bool
 
+config PCIE_DW_DEBUGFS
+	default y
+	depends on DEBUG_FS
+	depends on PCIE_DW_HOST || PCIE_DW_EP
+	bool "DWC PCIe debugfs entries"
+	help
+	  Enables debugfs entries for the DW PCIe Controller. These entries
+	  make use of the RAS features in the DW controller to help in debug,
+	  error injection and statistical counters.
+
 config PCIE_DW_HOST
 	bool
 	select PCIE_DW
diff --git a/drivers/pci/controller/dwc/Makefile b/drivers/pci/controller/dwc/Makefile
index a8308d9ea986..54565eedc52c 100644
--- a/drivers/pci/controller/dwc/Makefile
+++ b/drivers/pci/controller/dwc/Makefile
@@ -1,5 +1,6 @@
 # SPDX-License-Identifier: GPL-2.0
 obj-$(CONFIG_PCIE_DW) += pcie-designware.o
+obj-$(CONFIG_PCIE_DW_DEBUGFS) += pcie-designware-debugfs.o
 obj-$(CONFIG_PCIE_DW_HOST) += pcie-designware-host.o
 obj-$(CONFIG_PCIE_DW_EP) += pcie-designware-ep.o
 obj-$(CONFIG_PCIE_DW_PLAT) += pcie-designware-plat.o
diff --git a/drivers/pci/controller/dwc/pcie-designware-debugfs.c b/drivers/pci/controller/dwc/pcie-designware-debugfs.c
new file mode 100644
index 000000000000..907864c35ef3
--- /dev/null
+++ b/drivers/pci/controller/dwc/pcie-designware-debugfs.c
@@ -0,0 +1,173 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Synopsys DesignWare PCIe controller debugfs driver
+ *
+ * Copyright (C) 2025 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * Author: Shradha Todi <shradha.t@samsung.com>
+ */
+
+#include <linux/debugfs.h>
+
+#include "pcie-designware.h"
+
+#define SD_STATUS_L1LANE_REG		0xb0
+#define PIPE_RXVALID			BIT(18)
+#define PIPE_DETECT_LANE		BIT(17)
+#define LANE_SELECT			GENMASK(3, 0)
+
+#define DWC_DEBUGFS_BUF_MAX		128
+
+struct dwc_pcie_vendor_id {
+	u16 vendor_id;
+	u16 vsec_rasdes_cap_id;
+};
+
+static const struct dwc_pcie_vendor_id dwc_pcie_vendor_ids[] = {
+	{PCI_VENDOR_ID_SAMSUNG,	0x2},
+	{} /* terminator */
+};
+
+/**
+ * struct dwc_pcie_rasdes_info - Stores controller common information
+ * @ras_cap_offset: RAS DES vendor specific extended capability offset
+ * @reg_lock: Mutex used for RASDES shadow event registers
+ * @rasdes_dir: Top level debugfs directory entry
+ *
+ * Any parameter constant to all files of the debugfs hierarchy for a single controller
+ * will be stored in this struct. It is allocated and assigned to controller specific
+ * struct dw_pcie during initialization.
+ */
+struct dwc_pcie_rasdes_info {
+	u32 ras_cap_offset;
+	struct mutex reg_lock;
+	struct dentry *rasdes_dir;
+};
+
+static ssize_t lane_detect_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)
+{
+	struct dw_pcie *pci = file->private_data;
+	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
+	char debugfs_buf[DWC_DEBUGFS_BUF_MAX];
+	ssize_t off = 0;
+	u32 val;
+
+	val = dw_pcie_readl_dbi(pci, rinfo->ras_cap_offset + SD_STATUS_L1LANE_REG);
+	val = FIELD_GET(PIPE_DETECT_LANE, val);
+	if (val)
+		off += scnprintf(debugfs_buf, DWC_DEBUGFS_BUF_MAX - off, "Lane Detected\n");
+	else
+		off += scnprintf(debugfs_buf, DWC_DEBUGFS_BUF_MAX - off, "Lane Undetected\n");
+
+	return simple_read_from_buffer(buf, count, ppos, debugfs_buf, off);
+}
+
+static ssize_t lane_detect_write(struct file *file, const char __user *buf,
+				 size_t count, loff_t *ppos)
+{
+	struct dw_pcie *pci = file->private_data;
+	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
+	u32 lane, val;
+
+	val = kstrtou32_from_user(buf, count, 0, &lane);
+	if (val)
+		return val;
+
+	val = dw_pcie_readl_dbi(pci, rinfo->ras_cap_offset + SD_STATUS_L1LANE_REG);
+	val &= ~(LANE_SELECT);
+	val |= FIELD_PREP(LANE_SELECT, lane);
+	dw_pcie_writel_dbi(pci, rinfo->ras_cap_offset + SD_STATUS_L1LANE_REG, val);
+
+	return count;
+}
+
+static ssize_t rx_valid_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)
+{
+	struct dw_pcie *pci = file->private_data;
+	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
+	char debugfs_buf[DWC_DEBUGFS_BUF_MAX];
+	ssize_t off = 0;
+	u32 val;
+
+	val = dw_pcie_readl_dbi(pci, rinfo->ras_cap_offset + SD_STATUS_L1LANE_REG);
+	val = FIELD_GET(PIPE_RXVALID, val);
+	if (val)
+		off += scnprintf(debugfs_buf, DWC_DEBUGFS_BUF_MAX - off, "RX Valid\n");
+	else
+		off += scnprintf(debugfs_buf, DWC_DEBUGFS_BUF_MAX - off, "RX Invalid\n");
+
+	return simple_read_from_buffer(buf, count, ppos, debugfs_buf, off);
+}
+
+static ssize_t rx_valid_write(struct file *file, const char __user *buf, size_t count, loff_t *ppos)
+{
+	return lane_detect_write(file, buf, count, ppos);
+}
+
+#define dwc_debugfs_create(name)			\
+debugfs_create_file(#name, 0644, rasdes_debug, pci,	\
+			&dbg_ ## name ## _fops)
+
+#define DWC_DEBUGFS_FOPS(name)					\
+static const struct file_operations dbg_ ## name ## _fops = {	\
+	.open = simple_open,				\
+	.read = name ## _read,				\
+	.write = name ## _write				\
+}
+
+DWC_DEBUGFS_FOPS(lane_detect);
+DWC_DEBUGFS_FOPS(rx_valid);
+
+void dwc_pcie_rasdes_debugfs_deinit(struct dw_pcie *pci)
+{
+	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
+
+	debugfs_remove_recursive(rinfo->rasdes_dir);
+	mutex_destroy(&rinfo->reg_lock);
+}
+
+int dwc_pcie_rasdes_debugfs_init(struct dw_pcie *pci)
+{
+	struct dentry *dir, *rasdes_debug;
+	struct dwc_pcie_rasdes_info *rasdes_info;
+	const struct dwc_pcie_vendor_id *vid;
+	char dirname[DWC_DEBUGFS_BUF_MAX];
+	struct device *dev = pci->dev;
+	int ras_cap;
+
+	for (vid = dwc_pcie_vendor_ids; vid->vendor_id; vid++) {
+		ras_cap = dw_pcie_find_vsec_capability(pci, vid->vendor_id,
+							vid->vsec_rasdes_cap_id);
+		if (ras_cap)
+			break;
+	}
+	if (!ras_cap) {
+		dev_dbg(dev, "No RASDES capability available\n");
+		return -ENODEV;
+	}
+
+	rasdes_info = devm_kzalloc(dev, sizeof(*rasdes_info), GFP_KERNEL);
+	if (!rasdes_info)
+		return -ENOMEM;
+
+	/* Create main directory for each platform driver */
+	snprintf(dirname, DWC_DEBUGFS_BUF_MAX, "dwc_pcie_%s", dev_name(dev));
+	dir = debugfs_create_dir(dirname, NULL);
+	if (IS_ERR(dir))
+		return PTR_ERR(dir);
+
+	/* Create subdirectories for Debug, Error injection, Statistics */
+	rasdes_debug = debugfs_create_dir("rasdes_debug", dir);
+
+	mutex_init(&rasdes_info->reg_lock);
+	rasdes_info->ras_cap_offset = ras_cap;
+	rasdes_info->rasdes_dir = dir;
+	pci->rasdes_info = rasdes_info;
+
+	/* Create debugfs files for Debug subdirectory */
+	dwc_debugfs_create(lane_detect);
+	dwc_debugfs_create(rx_valid);
+
+	return 0;
+}
diff --git a/drivers/pci/controller/dwc/pcie-designware-ep.c b/drivers/pci/controller/dwc/pcie-designware-ep.c
index f3ac7d46a855..84b5f27a2c69 100644
--- a/drivers/pci/controller/dwc/pcie-designware-ep.c
+++ b/drivers/pci/controller/dwc/pcie-designware-ep.c
@@ -642,6 +642,7 @@ void dw_pcie_ep_cleanup(struct dw_pcie_ep *ep)
 {
 	struct dw_pcie *pci = to_dw_pcie_from_ep(ep);
 
+	dwc_pcie_rasdes_debugfs_deinit(pci);
 	dw_pcie_edma_remove(pci);
 }
 EXPORT_SYMBOL_GPL(dw_pcie_ep_cleanup);
@@ -813,6 +814,10 @@ int dw_pcie_ep_init_registers(struct dw_pcie_ep *ep)
 
 	dw_pcie_ep_init_non_sticky_registers(pci);
 
+	ret = dwc_pcie_rasdes_debugfs_init(pci);
+	if (ret)
+		goto err_remove_edma;
+
 	return 0;
 
 err_remove_edma:
diff --git a/drivers/pci/controller/dwc/pcie-designware-host.c b/drivers/pci/controller/dwc/pcie-designware-host.c
index d2291c3ceb8b..1cd282f70830 100644
--- a/drivers/pci/controller/dwc/pcie-designware-host.c
+++ b/drivers/pci/controller/dwc/pcie-designware-host.c
@@ -524,6 +524,10 @@ int dw_pcie_host_init(struct dw_pcie_rp *pp)
 	if (ret)
 		goto err_remove_edma;
 
+	ret = dwc_pcie_rasdes_debugfs_init(pci);
+	if (ret)
+		goto err_remove_edma;
+
 	if (!dw_pcie_link_up(pci)) {
 		ret = dw_pcie_start_link(pci);
 		if (ret)
@@ -571,6 +575,8 @@ void dw_pcie_host_deinit(struct dw_pcie_rp *pp)
 
 	dw_pcie_stop_link(pci);
 
+	dwc_pcie_rasdes_debugfs_deinit(pci);
+
 	dw_pcie_edma_remove(pci);
 
 	if (pp->has_msi_ctrl)
diff --git a/drivers/pci/controller/dwc/pcie-designware.h b/drivers/pci/controller/dwc/pcie-designware.h
index 02e94bd9b042..8d5dc22f06f7 100644
--- a/drivers/pci/controller/dwc/pcie-designware.h
+++ b/drivers/pci/controller/dwc/pcie-designware.h
@@ -463,6 +463,7 @@ struct dw_pcie {
 	struct reset_control_bulk_data	core_rsts[DW_PCIE_NUM_CORE_RSTS];
 	struct gpio_desc		*pe_rst;
 	bool			suspended;
+	void			*rasdes_info;
 };
 
 #define to_dw_pcie_from_pp(port) container_of((port), struct dw_pcie, pp)
@@ -796,4 +797,18 @@ dw_pcie_ep_get_func_from_ep(struct dw_pcie_ep *ep, u8 func_no)
 	return NULL;
 }
 #endif
+
+#ifdef CONFIG_PCIE_DW_DEBUGFS
+int dwc_pcie_rasdes_debugfs_init(struct dw_pcie *pci);
+void dwc_pcie_rasdes_debugfs_deinit(struct dw_pcie *pci);
+#else
+static inline int dwc_pcie_rasdes_debugfs_init(struct dw_pcie *pci)
+{
+	return 0;
+}
+static inline void dwc_pcie_rasdes_debugfs_deinit(struct dw_pcie *pci)
+{
+}
+#endif
+
 #endif /* _PCIE_DESIGNWARE_H */
-- 
2.17.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mailout1.samsung.com (mailout1.samsung.com [203.254.224.24])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 6A23220318
	for <linux-kernel@vger.kernel.org>; Tue, 21 Jan 2025 12:14:40 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=203.254.224.24
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737461682; cv=none; b=sahoOj+REu16DE7++T6vi05pWP4LyeheSLYW8nvAlloeLjuWkryjawnYxRahqu9xcAkSG5v5PExxued7NmhGtxSCCBMKmQlWZmlGgZ3yTAFy/LycqxNjf1R/MaPbOb4DOIgbpsXDnkwvt4ChTSrLNw9LWC4pTmT7THu66NV+Fzg=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737461682; c=relaxed/simple;
	bh=5adRfrzZxmkOwnYYUxs/QxgMeVRUHf/I0jq+wE26w68=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:Content-Type:
	 References; b=ipxB1y3sb3WsePmv3XA7/LXOXo77PdKxAgjKb+7xFNgZo55n1hR/qvZMu2erWiCqwtWVXztuyPn6sAvPMmLv/t2gC66B/0oUIdvLxUnSLgOIAF/lzoPh5eyEO1XklCvjZnRYfaYbdeI+sVWFWxR0vR5kjlqTM8ntiLQ0HvEf48s=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com; spf=pass smtp.mailfrom=samsung.com; dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b=ZxgXYAe/; arc=none smtp.client-ip=203.254.224.24
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=samsung.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b="ZxgXYAe/"
Received: from epcas5p2.samsung.com (unknown [182.195.41.40])
	by mailout1.samsung.com (KnoxPortal) with ESMTP id 20250121121438epoutp01f9f0f44ad9b18d2335dcb10bdddd4a7c~ctDDiYY550885008850epoutp01Q
	for <linux-kernel@vger.kernel.org>; Tue, 21 Jan 2025 12:14:38 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout1.samsung.com 20250121121438epoutp01f9f0f44ad9b18d2335dcb10bdddd4a7c~ctDDiYY550885008850epoutp01Q
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
	s=mail20170921; t=1737461678;
	bh=RFOVXKR7bc7/bHPo+3Ty6gn2tlgKFINmXdaMP9FPMgc=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=ZxgXYAe/yJ4Qv5uGM/6meQdhp2AlFS23NRE0hM+2p62pnLa/rUZW5QegIsaTca3AT
	 gTpwvebVe2qMSunyZmvYZvGvcy52OgR9QMQswD2ic6tAqcFSQgc4aqtjeC7peDkMtB
	 YxEvQz3f6CJ2ssPV2QOXhjsjB+ISBqrpt2NU68rI=
Received: from epsnrtp2.localdomain (unknown [182.195.42.163]) by
	epcas5p3.samsung.com (KnoxPortal) with ESMTP id
	20250121121437epcas5p310d498123652c5711c00b19cb31f2a57~ctDDD9X733019030190epcas5p3M;
	Tue, 21 Jan 2025 12:14:37 +0000 (GMT)
Received: from epsmgec5p1-new.samsung.com (unknown [182.195.38.182]) by
	epsnrtp2.localdomain (Postfix) with ESMTP id 4YcmNX3XsJz4x9Pt; Tue, 21 Jan
	2025 12:14:36 +0000 (GMT)
Received: from epcas5p3.samsung.com ( [182.195.41.41]) by
	epsmgec5p1-new.samsung.com (Symantec Messaging Gateway) with SMTP id
	44.B5.29212.CAF8F876; Tue, 21 Jan 2025 21:14:36 +0900 (KST)
Received: from epsmtrp1.samsung.com (unknown [182.195.40.13]) by
	epcas5p3.samsung.com (KnoxPortal) with ESMTPA id
	20250121115209epcas5p3c5974d568705bc669645c72026dcba22~csvbz4Am91183111831epcas5p3k;
	Tue, 21 Jan 2025 11:52:09 +0000 (GMT)
Received: from epsmgmc1p1new.samsung.com (unknown [182.195.42.40]) by
	epsmtrp1.samsung.com (KnoxPortal) with ESMTP id
	20250121115209epsmtrp1740d04a859650e2cff5accccc7da3ff3~csvbzCsF-0976909769epsmtrp1Y;
	Tue, 21 Jan 2025 11:52:09 +0000 (GMT)
X-AuditID: b6c32a50-801fa7000000721c-14-678f8faccace
Received: from epsmtip1.samsung.com ( [182.195.34.30]) by
	epsmgmc1p1new.samsung.com (Symantec Messaging Gateway) with SMTP id
	BB.84.23488.96A8F876; Tue, 21 Jan 2025 20:52:09 +0900 (KST)
Received: from Jaguar.sa.corp.samsungelectronics.net (unknown
	[107.109.115.6]) by epsmtip1.samsung.com (KnoxPortal) with ESMTPA id
	20250121115207epsmtip1e36221c73876013b8df774fee51fbd46~csvZm_vpg1806918069epsmtip1X;
	Tue, 21 Jan 2025 11:52:07 +0000 (GMT)
From: Shradha Todi <shradha.t@samsung.com>
To: linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org
Cc: manivannan.sadhasivam@linaro.org, lpieralisi@kernel.org, kw@linux.com,
	robh@kernel.org, bhelgaas@google.com, jingoohan1@gmail.com,
	Jonathan.Cameron@Huawei.com, fan.ni@samsung.com, a.manzanares@samsung.com,
	pankaj.dubey@samsung.com, quic_nitegupt@quicinc.com,
	quic_krichai@quicinc.com, gost.dev@samsung.com, Shradha Todi
	<shradha.t@samsung.com>
Subject: [PATCH v5 3/4] Add debugfs based error injection support in DWC
Date: Tue, 21 Jan 2025 16:44:20 +0530
Message-Id: <20250121111421.35437-4-shradha.t@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20250121111421.35437-1-shradha.t@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFprNJsWRmVeSWpSXmKPExsWy7bCmpu6a/v50g7lvxSymH1a0WNKUYdG0
	+i6rxc0DO5ksVnyZyW6xauE1NouGnt+sFpd3zWGzODvvOJtFy58WFou7LZ2sFou2fmG3ePCg
	0qJzzhFmi/97drBb9B6udRDw2DnrLrvHgk2lHi1H3rJ6bFrVyeZx59oeNo8nV6YzeUzcU+fR
	t2UVo8fnTXIBnFHZNhmpiSmpRQqpecn5KZl56bZK3sHxzvGmZgaGuoaWFuZKCnmJuam2Si4+
	AbpumTlAHygplCXmlAKFAhKLi5X07WyK8ktLUhUy8otLbJVSC1JyCkwK9IoTc4tL89L18lJL
	rAwNDIxMgQoTsjOeXupgL/gWWrF0x2nGBsZety5GTg4JAROJeX0TWUBsIYE9jBKfrzND2J8Y
	JU5O8+li5AKyvzFKnNh6mgmm4cGEJ8wQib2MEu9XX4Fympkk1mxZwA5SxSagJdH4tQtslIiA
	tcTh9i1sIEXMAk+ZJFqP/wRyODiEBTwkrl73AqlhEVCVONh6HKyXV8BK4uTdkywQ2+QlVm84
	ADaHE2jOmyN3WEHmSAgs5JA4+b0P6iQXiTu/2tkhbGGJV8e3QNlSEi/726DsdImVm2cwQ9g5
	Et82L4HqtZc4cGUOC8g9zAKaEut36UOEZSWmnloHVsIswCfR+/sJVDmvxI55MLayxJe/e6Du
	lJSYd+wyK4TtIXF01gd2SKD0MUr83/2BdQKj3CyEFQsYGVcxSqUWFOempyabFhjq5qWWw2Mt
	OT93EyM4lWoF7GBcveGv3iFGJg7GQ4wSHMxKIryiH3rShXhTEiurUovy44tKc1KLDzGaAkNw
	IrOUaHI+MJnnlcQbmlgamJiZmZlYGpsZKonzNu9sSRcSSE8sSc1OTS1ILYLpY+LglGpgqt3h
	Ibsv6Kqhy4Enh+b2yazi4Z8ie7gnXtY3ZUO6pMNnod/NhS+n3XlUelbic8OZTRI8LqcSMlXr
	qheeyX3sb3HobsBXBqV/Lnp7zAtErqnNDup4v2rhJ44MXX/frWneF49kTFjApniiS3Rjd9ex
	b4/ezF9+sz5sseTCYlvFl2xy1+ZKyD+YUOqdevGqxJF3IT96phbtne8d9MX9hOneuod1jcuK
	H1zbqbjucWwao9SxOU3cC/9eqyo7PX/zZhHfi1odybF/93y+Y+Q2e/UR8SKe6jJj6fXSn39X
	mHalTb90XX93o8rnE9oz9/z9WvtaYkalmY5rZ9ydK1zHb+4KlSpmXZ530rrw7ysXgd1rDymx
	FGckGmoxFxUnAgBhzU2uLgQAAA==
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFrrILMWRmVeSWpSXmKPExsWy7bCSnG5mV3+6wbEvxhbTDytaLGnKsGha
	fZfV4uaBnUwWK77MZLdYtfAam0VDz29Wi8u75rBZnJ13nM2i5U8Li8Xdlk5Wi0Vbv7BbPHhQ
	adE55wizxf89O9gteg/XOgh47Jx1l91jwaZSj5Yjb1k9Nq3qZPO4c20Pm8eTK9OZPCbuqfPo
	27KK0ePzJrkAzigum5TUnMyy1CJ9uwSujKeXOtgLvoVWLN1xmrGBsdeti5GTQ0LAROLBhCfM
	XYxcHEICuxkldl48zAiRkJT4fHEdE4QtLLHy33N2EFtIoJFJYsccZhCbTUBLovFrF5gtImAr
	cf/RZFaQQcwCX5kkPn66AZTg4BAW8JC4et0LpIZFQFXiYOtxsDm8AlYSJ++eZIGYLy+xesMB
	sDmcAtYSb47cYYXYZSUxe/sp1gmMfAsYGVYxSqYWFOem5yYbFhjmpZbrFSfmFpfmpesl5+du
	YgSHupbGDsZ335r0DzEycTAeYpTgYFYS4RX90JMuxJuSWFmVWpQfX1Sak1p8iFGag0VJnHel
	YUS6kEB6YklqdmpqQWoRTJaJg1OqgUlxf90xq6vPe3rNMtfs4ZCrOdq+x17x5+tPW8ykExsn
	FzlEfTguldSan7foANu0p1OSXp/ZaCI240pw2qqAtWcYvaI+vlXInuGwctpcpxqxibcrdOxd
	eHIfvi+Zz7HZ1na56YxkCeYvd/87Obw41dHd8OJLh6S228Opjxkas14s/iGwgH/Zkje1eyp6
	XzKL75D3Xvtpwp3H5u+X7QlqiIjdHLFa+vXpnuiDwj49r1mulnDKhnfLHGzvumH8w2y98v+s
	J18/KO2NnbvqV6xtVMy/dUyrnl7Tf7r147qFKhOeMu7/J/rT48lMyUilmzP+zOR4WVTxme2A
	UMEOv7KEub2vuVukI4oe3Hw0J3jTo1eLlFiKMxINtZiLihMBGMp2peQCAAA=
X-CMS-MailID: 20250121115209epcas5p3c5974d568705bc669645c72026dcba22
X-Msg-Generator: CA
Content-Type: text/plain; charset="utf-8"
X-Sendblock-Type: REQ_APPROVE
CMS-TYPE: 105P
DLP-Filter: Pass
X-CFilter-Loop: Reflected
X-CMS-RootMailID: 20250121115209epcas5p3c5974d568705bc669645c72026dcba22
References: <20250121111421.35437-1-shradha.t@samsung.com>
	<CGME20250121115209epcas5p3c5974d568705bc669645c72026dcba22@epcas5p3.samsung.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>

Add support to provide error injection interface to userspace. This set
of debug registers are part of the RASDES feature present in DesignWare
PCIe controllers.

Signed-off-by: Shradha Todi <shradha.t@samsung.com>
---
 Documentation/ABI/testing/debugfs-dwc-pcie    |  70 ++++++++
 .../controller/dwc/pcie-designware-debugfs.c  | 165 +++++++++++++++++-
 2 files changed, 233 insertions(+), 2 deletions(-)

diff --git a/Documentation/ABI/testing/debugfs-dwc-pcie b/Documentation/ABI/testing/debugfs-dwc-pcie
index e7920ac82e38..cff205ab2678 100644
--- a/Documentation/ABI/testing/debugfs-dwc-pcie
+++ b/Documentation/ABI/testing/debugfs-dwc-pcie
@@ -11,3 +11,73 @@ Contact:	Shradha Todi <shradha.t@samsung.com>
 Description:	(RW) Write the lane number to be checked as valid or invalid. Read
 		will return the status of PIPE RXVALID signal of the selected lane.
 		The default selected lane is Lane0.
+
+What:		/sys/kernel/debug/dwc_pcie_<dev>/rasdes_err_inj/<error>
+Date:		January 2025
+Contact:	Shradha Todi <shradha.t@samsung.com>
+Description:	rasdes_err_inj is the directory which can be used to inject errors in the
+		system. The possible errors that can be injected are:
+
+		1) TLP LCRC error injection TX Path - tx_lcrc
+		2) 16b CRC error injection of ACK/NAK DLLP - b16_crc_dllp
+		3) 16b CRC error injection of Update-FC DLLP - b16_crc_upd_fc
+		4) TLP ECRC error injection TX Path - tx_ecrc
+		5) TLP's FCRC error injection TX Path - fcrc_tlp
+		6) Parity error of TSOS - parity_tsos
+		7) Parity error on SKPOS - parity_skpos
+		8) LCRC error injection RX Path - rx_lcrc
+		9) ECRC error injection RX Path - rx_ecrc
+		10) TLPs SEQ# error - tlp_err_seq
+		11) DLLPS ACK/NAK SEQ# error - ack_nak_dllp_seq
+		12) ACK/NAK DLLPs transmission block - ack_nak_dllp
+		13) UpdateFC DLLPs transmission block - upd_fc_dllp
+		14) Always transmission for NAK DLLP - nak_dllp
+		15) Invert SYNC header - inv_sync_hdr_sym
+		16) COM/PAD TS1 order set - com_pad_ts1
+		17) COM/PAD TS2 order set - com_pad_ts2
+		18) COM/FTS FTS order set - com_fts
+		19) COM/IDL E-idle order set - com_idl
+		20) END/EDB symbol - end_edb
+		21) STP/SDP symbol - stp_sdp
+		22) COM/SKP SKP order set - com_skp
+		23) Posted TLP Header credit value control - posted_tlp_hdr
+		24) Non-Posted TLP Header credit value control - non_post_tlp_hdr
+		25) Completion TLP Header credit value control - cmpl_tlp_hdr
+		26) Posted TLP Data credit value control - posted_tlp_data
+		27) Non-Posted TLP Data credit value control - non_post_tlp_data
+		28) Completion TLP Data credit value control - cmpl_tlp_data
+		29) Generates duplicate TLPs - duplicate_dllp
+		30) Generates Nullified TLPs - nullified_tlp
+
+		Each of the possible errors are WO attributes. Write to the attribute will
+		prepare controller to inject the respective error in the next transmission
+		of data. Parameter required to write will change in the following ways:
+
+		i) Errors 9) - 10) are sequence errors. The write command for these will be
+
+			echo <count> <diff> > /sys/kernel/debug/dwc_pcie_<dev>/rasdes_err_inj/<error>
+
+			<count>
+				Number of errors to be injected
+			<diff>
+				The difference to add or subtract from natural sequence number to
+				generate sequence error. Range (-4095 : 4095)
+
+		ii) Errors 23) - 28) are credit value error insertions. Write command:
+
+			echo <count> <diff> <vc> > /sys/kernel/debug/dwc_pcie_<dev>/rasdes_err_inj/<error>
+
+			<count>
+				Number of errors to be injected
+			<diff>
+				The difference to add or subtract from UpdateFC credit value.
+				Range (-4095 : 4095)
+			<vc>
+				Target VC number
+
+		iii) All other errors. Write command:
+
+			echo <count> > /sys/kernel/debug/dwc_pcie_<dev>/rasdes_err_inj/<error>
+
+			<count>
+				Number of errors to be injected
diff --git a/drivers/pci/controller/dwc/pcie-designware-debugfs.c b/drivers/pci/controller/dwc/pcie-designware-debugfs.c
index 907864c35ef3..801d51d8786f 100644
--- a/drivers/pci/controller/dwc/pcie-designware-debugfs.c
+++ b/drivers/pci/controller/dwc/pcie-designware-debugfs.c
@@ -17,6 +17,20 @@
 #define PIPE_DETECT_LANE		BIT(17)
 #define LANE_SELECT			GENMASK(3, 0)
 
+#define ERR_INJ0_OFF			0x34
+#define EINJ_VAL_DIFF			GENMASK(28, 16)
+#define EINJ_VC_NUM			GENMASK(14, 12)
+#define EINJ_TYPE_SHIFT			8
+#define EINJ0_TYPE			GENMASK(11, 8)
+#define EINJ1_TYPE			BIT(8)
+#define EINJ2_TYPE			GENMASK(9, 8)
+#define EINJ3_TYPE			GENMASK(10, 8)
+#define EINJ4_TYPE			GENMASK(10, 8)
+#define EINJ5_TYPE			BIT(8)
+#define EINJ_COUNT			GENMASK(7, 0)
+
+#define ERR_INJ_ENABLE_REG		0x30
+
 #define DWC_DEBUGFS_BUF_MAX		128
 
 struct dwc_pcie_vendor_id {
@@ -45,6 +59,72 @@ struct dwc_pcie_rasdes_info {
 	struct dentry *rasdes_dir;
 };
 
+/**
+ * struct dwc_pcie_rasdes_priv - Stores file specific private data information
+ * @pci: Reference to the dw_pcie structure
+ * @idx: Index to point to specific file related information in array of structs
+ *
+ * All debugfs files will have this struct as its private data.
+ */
+struct dwc_pcie_rasdes_priv {
+	struct dw_pcie *pci;
+	int idx;
+};
+
+/**
+ * struct dwc_pcie_err_inj - Store details about each error injection supported by DWC RASDES
+ * @name: Name of the error that can be injected
+ * @err_inj_group: Group number to which the error belongs to. Value can range from 0 - 5
+ * @err_inj_type: Each group can have multiple types of error
+ */
+struct dwc_pcie_err_inj {
+	const char *name;
+	u32 err_inj_group;
+	u32 err_inj_type;
+};
+
+static const struct dwc_pcie_err_inj err_inj_list[] = {
+	{"tx_lcrc", 0x0, 0x0},
+	{"b16_crc_dllp", 0x0, 0x1},
+	{"b16_crc_upd_fc", 0x0, 0x2},
+	{"tx_ecrc", 0x0, 0x3},
+	{"fcrc_tlp", 0x0, 0x4},
+	{"parity_tsos", 0x0, 0x5},
+	{"parity_skpos", 0x0, 0x6},
+	{"rx_lcrc", 0x0, 0x8},
+	{"rx_ecrc", 0x0, 0xb},
+	{"tlp_err_seq", 0x1, 0x0},
+	{"ack_nak_dllp_seq", 0x1, 0x1},
+	{"ack_nak_dllp", 0x2, 0x0},
+	{"upd_fc_dllp", 0x2, 0x1},
+	{"nak_dllp", 0x2, 0x2},
+	{"inv_sync_hdr_sym", 0x3, 0x0},
+	{"com_pad_ts1", 0x3, 0x1},
+	{"com_pad_ts2", 0x3, 0x2},
+	{"com_fts", 0x3, 0x3},
+	{"com_idl", 0x3, 0x4},
+	{"end_edb", 0x3, 0x5},
+	{"stp_sdp", 0x3, 0x6},
+	{"com_skp", 0x3, 0x7},
+	{"posted_tlp_hdr", 0x4, 0x0},
+	{"non_post_tlp_hdr", 0x4, 0x1},
+	{"cmpl_tlp_hdr", 0x4, 0x2},
+	{"posted_tlp_data", 0x4, 0x4},
+	{"non_post_tlp_data", 0x4, 0x5},
+	{"cmpl_tlp_data", 0x4, 0x6},
+	{"duplicate_dllp", 0x5, 0x0},
+	{"nullified_tlp", 0x5, 0x1},
+};
+
+static const u32 err_inj_type_mask[] = {
+	EINJ0_TYPE,
+	EINJ1_TYPE,
+	EINJ2_TYPE,
+	EINJ3_TYPE,
+	EINJ4_TYPE,
+	EINJ5_TYPE,
+};
+
 static ssize_t lane_detect_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)
 {
 	struct dw_pcie *pci = file->private_data;
@@ -105,6 +185,63 @@ static ssize_t rx_valid_write(struct file *file, const char __user *buf, size_t
 	return lane_detect_write(file, buf, count, ppos);
 }
 
+static ssize_t err_inj_write(struct file *file, const char __user *buf, size_t count, loff_t *ppos)
+{
+	struct dwc_pcie_rasdes_priv *pdata = file->private_data;
+	struct dw_pcie *pci = pdata->pci;
+	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
+	u32 val, counter, vc_num, err_group, type_mask;
+	int val_diff = 0;
+	char *kern_buf;
+
+	err_group = err_inj_list[pdata->idx].err_inj_group;
+	type_mask = err_inj_type_mask[err_group];
+
+	kern_buf = memdup_user_nul(buf, count);
+	if (IS_ERR(kern_buf))
+		return PTR_ERR(kern_buf);
+
+	if (err_group == 4) {
+		val = sscanf(kern_buf, "%u %d %u", &counter, &val_diff, &vc_num);
+		if ((val != 3) || (val_diff < -4095 || val_diff > 4095)) {
+			kfree(kern_buf);
+			return -EINVAL;
+		}
+	} else if (err_group == 1) {
+		val = sscanf(kern_buf, "%u %d", &counter, &val_diff);
+		if ((val != 2) || (val_diff < -4095 || val_diff > 4095)) {
+			kfree(kern_buf);
+			return -EINVAL;
+		}
+	} else {
+		val = kstrtou32(kern_buf, 0, &counter);
+		if (val) {
+			kfree(kern_buf);
+			return val;
+		}
+	}
+
+	val = dw_pcie_readl_dbi(pci, rinfo->ras_cap_offset + ERR_INJ0_OFF + (0x4 * err_group));
+	val &= ~(type_mask | EINJ_COUNT);
+	val |= ((err_inj_list[pdata->idx].err_inj_type << EINJ_TYPE_SHIFT) & type_mask);
+	val |= FIELD_PREP(EINJ_COUNT, counter);
+
+	if (err_group == 1 || err_group == 4) {
+		val &= ~(EINJ_VAL_DIFF);
+		val |= FIELD_PREP(EINJ_VAL_DIFF, val_diff);
+	}
+	if (err_group == 4) {
+		val &= ~(EINJ_VC_NUM);
+		val |= FIELD_PREP(EINJ_VC_NUM, vc_num);
+	}
+
+	dw_pcie_writel_dbi(pci, rinfo->ras_cap_offset + ERR_INJ0_OFF + (0x4 * err_group), val);
+	dw_pcie_writel_dbi(pci, rinfo->ras_cap_offset + ERR_INJ_ENABLE_REG, (0x1 << err_group));
+
+	kfree(kern_buf);
+	return count;
+}
+
 #define dwc_debugfs_create(name)			\
 debugfs_create_file(#name, 0644, rasdes_debug, pci,	\
 			&dbg_ ## name ## _fops)
@@ -119,6 +256,11 @@ static const struct file_operations dbg_ ## name ## _fops = {	\
 DWC_DEBUGFS_FOPS(lane_detect);
 DWC_DEBUGFS_FOPS(rx_valid);
 
+static const struct file_operations dwc_pcie_err_inj_ops = {
+	.open = simple_open,
+	.write = err_inj_write,
+};
+
 void dwc_pcie_rasdes_debugfs_deinit(struct dw_pcie *pci)
 {
 	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
@@ -129,12 +271,13 @@ void dwc_pcie_rasdes_debugfs_deinit(struct dw_pcie *pci)
 
 int dwc_pcie_rasdes_debugfs_init(struct dw_pcie *pci)
 {
-	struct dentry *dir, *rasdes_debug;
+	struct dentry *dir, *rasdes_debug, *rasdes_err_inj;
 	struct dwc_pcie_rasdes_info *rasdes_info;
+	struct dwc_pcie_rasdes_priv *priv_tmp;
 	const struct dwc_pcie_vendor_id *vid;
 	char dirname[DWC_DEBUGFS_BUF_MAX];
 	struct device *dev = pci->dev;
-	int ras_cap;
+	int ras_cap, i, ret;
 
 	for (vid = dwc_pcie_vendor_ids; vid->vendor_id; vid++) {
 		ras_cap = dw_pcie_find_vsec_capability(pci, vid->vendor_id,
@@ -159,6 +302,7 @@ int dwc_pcie_rasdes_debugfs_init(struct dw_pcie *pci)
 
 	/* Create subdirectories for Debug, Error injection, Statistics */
 	rasdes_debug = debugfs_create_dir("rasdes_debug", dir);
+	rasdes_err_inj = debugfs_create_dir("rasdes_err_inj", dir);
 
 	mutex_init(&rasdes_info->reg_lock);
 	rasdes_info->ras_cap_offset = ras_cap;
@@ -169,5 +313,22 @@ int dwc_pcie_rasdes_debugfs_init(struct dw_pcie *pci)
 	dwc_debugfs_create(lane_detect);
 	dwc_debugfs_create(rx_valid);
 
+	/* Create debugfs files for Error injection subdirectory */
+	for (i = 0; i < ARRAY_SIZE(err_inj_list); i++) {
+		priv_tmp = devm_kzalloc(dev, sizeof(*priv_tmp), GFP_KERNEL);
+		if (!priv_tmp) {
+			ret = -ENOMEM;
+			goto err_deinit;
+		}
+
+		priv_tmp->idx = i;
+		priv_tmp->pci = pci;
+		debugfs_create_file(err_inj_list[i].name, 0200, rasdes_err_inj, priv_tmp,
+				    &dwc_pcie_err_inj_ops);
+	}
 	return 0;
+
+err_deinit:
+	dwc_pcie_rasdes_debugfs_deinit(pci);
+	return ret;
 }
-- 
2.17.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mailout4.samsung.com (mailout4.samsung.com [203.254.224.34])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4C23C20318
	for <linux-kernel@vger.kernel.org>; Tue, 21 Jan 2025 12:14:24 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=203.254.224.34
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737461668; cv=none; b=N20jyS9/9xhG9CfQ6Se4wNlxqseG1IszgUhb1/OuhGJDMIx/sTVPNrnXHOKRHDiylPQqPKHMHD2Nd+/bSiGJISAIlljL8l9bsxcS/xmFm4cT8e/0O7ypGVBQzBOpZaT7M+gtMcbWuK4vzT/DDnfKp2Vtye4cM/qmJGhF2fGeMEw=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737461668; c=relaxed/simple;
	bh=oGpRp1ZJErLrFBo9XqKuEX/A0IR8jq5a4lX0B8kKt08=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:Content-Type:
	 References; b=sSqX37ezl8u4f7Tqat4R+dOUeKdovRAJEoHFpyGzwu1ep9vgb9D7weaLioGFWtsfLzEh4/5yvjgUvqgpKwwyfKmW9yXq/uLefoBM6GsfkmEHg9G+FS4c5swpnJds6ubNa7dt+JCT1HqwKI+px0Bp9rLxBBhRUfi3zRk5qNXsk68=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com; spf=pass smtp.mailfrom=samsung.com; dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b=ZpOVpIcW; arc=none smtp.client-ip=203.254.224.34
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=samsung.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b="ZpOVpIcW"
Received: from epcas5p2.samsung.com (unknown [182.195.41.40])
	by mailout4.samsung.com (KnoxPortal) with ESMTP id 20250121121423epoutp04c837c887621f3f242f69217e13eb485e~ctC1WyrPo1864718647epoutp04X
	for <linux-kernel@vger.kernel.org>; Tue, 21 Jan 2025 12:14:23 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout4.samsung.com 20250121121423epoutp04c837c887621f3f242f69217e13eb485e~ctC1WyrPo1864718647epoutp04X
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
	s=mail20170921; t=1737461663;
	bh=v/VXEw+Nf97jMo1Q+NvRDbGc4fCNgcVdNPd07N1C7YM=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=ZpOVpIcW17jQvvCvt1gCRQ2O8Ds8u5XEtwIMvVTUcimGQxllidQ6bZmVncf7XMPw9
	 +y9yxKHfEATdNL/WxlBUqqgAjDQE8i8O4F8ckAJ8u88dRLes3BrtAnv3p4GPO4L200
	 blhXrTeZGalCTsJiGj0+FwH2WBQd1VldXmWRBpxg=
Received: from epsnrtp1.localdomain (unknown [182.195.42.162]) by
	epcas5p1.samsung.com (KnoxPortal) with ESMTP id
	20250121121421epcas5p1f32067773456f9808091c778f6e14608~ctC0BICG51323213232epcas5p1h;
	Tue, 21 Jan 2025 12:14:21 +0000 (GMT)
Received: from epsmges5p1new.samsung.com (unknown [182.195.38.183]) by
	epsnrtp1.localdomain (Postfix) with ESMTP id 4YcmND2G1Kz4x9Pp; Tue, 21 Jan
	2025 12:14:20 +0000 (GMT)
Received: from epcas5p2.samsung.com ( [182.195.41.40]) by
	epsmges5p1new.samsung.com (Symantec Messaging Gateway) with SMTP id
	AA.3A.20052.C9F8F876; Tue, 21 Jan 2025 21:14:20 +0900 (KST)
Received: from epsmtrp1.samsung.com (unknown [182.195.40.13]) by
	epcas5p1.samsung.com (KnoxPortal) with ESMTPA id
	20250121115213epcas5p14d712e58b5bf6505b0bd729fb33b25b8~csvfZAqAi1625416254epcas5p1x;
	Tue, 21 Jan 2025 11:52:13 +0000 (GMT)
Received: from epsmgms1p2new.samsung.com (unknown [182.195.42.42]) by
	epsmtrp1.samsung.com (KnoxPortal) with ESMTP id
	20250121115213epsmtrp1b14c75c5157af5c74474e89896e13da6~csvfXasw_0976909769epsmtrp1j;
	Tue, 21 Jan 2025 11:52:13 +0000 (GMT)
X-AuditID: b6c32a49-3d20270000004e54-57-678f8f9c64a4
Received: from epsmtip1.samsung.com ( [182.195.34.30]) by
	epsmgms1p2new.samsung.com (Symantec Messaging Gateway) with SMTP id
	8B.BB.18949.D6A8F876; Tue, 21 Jan 2025 20:52:13 +0900 (KST)
Received: from Jaguar.sa.corp.samsungelectronics.net (unknown
	[107.109.115.6]) by epsmtip1.samsung.com (KnoxPortal) with ESMTPA id
	20250121115211epsmtip19f988ed6d8c1f80c8391dba98cdd45a1~csvdIKuRU1750517505epsmtip1D;
	Tue, 21 Jan 2025 11:52:11 +0000 (GMT)
From: Shradha Todi <shradha.t@samsung.com>
To: linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org
Cc: manivannan.sadhasivam@linaro.org, lpieralisi@kernel.org, kw@linux.com,
	robh@kernel.org, bhelgaas@google.com, jingoohan1@gmail.com,
	Jonathan.Cameron@Huawei.com, fan.ni@samsung.com, a.manzanares@samsung.com,
	pankaj.dubey@samsung.com, quic_nitegupt@quicinc.com,
	quic_krichai@quicinc.com, gost.dev@samsung.com, Shradha Todi
	<shradha.t@samsung.com>
Subject: [PATCH v5 4/4] Add debugfs based statistical counter support in DWC
Date: Tue, 21 Jan 2025 16:44:21 +0530
Message-Id: <20250121111421.35437-5-shradha.t@samsung.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20250121111421.35437-1-shradha.t@samsung.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFprFJsWRmVeSWpSXmKPExsWy7bCmhu6c/v50g8VfeS2mH1a0WNKUYdG0
	+i6rxc0DO5ksVnyZyW6xauE1NouGnt+sFpd3zWGzODvvOJtFy58WFou7LZ2sFou2fmG3ePCg
	0qJzzhFmi/97drBb9B6udRDw2DnrLrvHgk2lHi1H3rJ6bFrVyeZx59oeNo8nV6YzeUzcU+fR
	t2UVo8fnTXIBnFHZNhmpiSmpRQqpecn5KZl56bZK3sHxzvGmZgaGuoaWFuZKCnmJuam2Si4+
	AbpumTlAHygplCXmlAKFAhKLi5X07WyK8ktLUhUy8otLbJVSC1JyCkwK9IoTc4tL89L18lJL
	rAwNDIxMgQoTsjPerpvGXjAvvWLvGb0Gxj1hXYycHBICJhL/1u1h7WLk4hAS2M0o0dh8HMr5
	xCjx9e8UdgjnG6PE0dsdQA4HWMurJUkQ8b2MEhOmHIYqamaSaD73jhVkLpuAlkTj1y5mEFtE
	wFricPsWNpAiZoGnTBKtx3+ygSSEBXwk1k/dxQ5iswioSqxvOwjWzCtgJXG59zELxIHyEqs3
	HAAbxAk06M2RO2D3SQgs5JB4duEQM8RJLhI7z8dD1AtLvDq+hR3ClpJ42d8GZadLrNw8gxnC
	zpH4tnkJE4RtL3HgyhwWkDHMApoS63fpQ4RlJaaeWgdWwizAJ9H7+wlUOa/EjnkwtrLEl797
	oM6UlJh37DIrhO0h8ff5J2ZIoPQxSmy68pRxAqPcLIQVCxgZVzFKphYU56anFpsWGOallsMj
	LTk/dxMjOJFqee5gvPvgg94hRiYOxkOMEhzMSiK8oh960oV4UxIrq1KL8uOLSnNSiw8xmgLD
	byKzlGhyPjCV55XEG5pYGpiYmZmZWBqbGSqJ8zbvbEkXEkhPLEnNTk0tSC2C6WPi4JRqYEr+
	X2XbtOXSfffZc7aqyfrIx52ofTNl9coJe4SeXQ2Icv0zVc6ffc7Xid7CHcsCbZ98z3R4p/t7
	8fK4o/s0ziYI3UtZsUTXo+OXxuZ1JVIxmc/+ML4rcVGPeF6z10LeLFc+IHipvLmP6/m9yyqE
	nt0tjfwzocddtuLWc4vLBo1J+o8rvuTWfD32LGTV/N2XjTTqWieLcc8+PcmssV/q7o8g1sDw
	3zv2O70sTFNNPfS7puLxZ+bfpfeE2Fa9bm78IPxR+8/zhybxQkvFN/A0+Fcb8d38uf3NTp0/
	fopVu2yavhz92f/kcsuUuH/HdTgVZonkrF7fELuJ7QmPj4fi9E1P+f4/9mAS3THt8YI/dbZK
	LMUZiYZazEXFiQCdZwjULQQAAA==
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFrrILMWRmVeSWpSXmKPExsWy7bCSnG5uV3+6wYKLqhbTDytaLGnKsGha
	fZfV4uaBnUwWK77MZLdYtfAam0VDz29Wi8u75rBZnJ13nM2i5U8Li8Xdlk5Wi0Vbv7BbPHhQ
	adE55wizxf89O9gteg/XOgh47Jx1l91jwaZSj5Yjb1k9Nq3qZPO4c20Pm8eTK9OZPCbuqfPo
	27KK0ePzJrkAzigum5TUnMyy1CJ9uwSujLfrprEXzEuv2HtGr4FxT1gXIweHhICJxKslSV2M
	XBxCArsZJRa8fMPaxcgJFJeU+HxxHROELSyx8t9zdoiiRiaJjatusYEk2AS0JBq/djGD2CIC
	thL3H01mBSliFvjKJPHx0w2whLCAj8T6qbvYQWwWAVWJ9W0HwTbwClhJXO59zAKxQV5i9YYD
	YPWcAtYSb47cAasRAqqZvf0U6wRGvgWMDKsYJVMLinPTc4sNC4zyUsv1ihNzi0vz0vWS83M3
	MYJDXUtrB+OeVR/0DjEycTAeYpTgYFYS4RX90JMuxJuSWFmVWpQfX1Sak1p8iFGag0VJnPfb
	694UIYH0xJLU7NTUgtQimCwTB6dUAxOffPeT58/Vvt8sLtogq5PH+0VoRWzw748P7Rs+NH0W
	WhBTulXPYN2qW9ILPn6UNDSNvvku4KDby4CFvLlWNjcMFjys2PLhy+Q93x/PmDVPY8WS55oL
	GfNvx0WeeLzMcJ7RlCDHuhtTwz/NCaoLKV0d6bY9Y9K1LUyiD+7WLPlap3GY+Zq86uvSYM1H
	n74GOknOXFV1To6hReHPtcR88/RnJ1TEVzXVRohOmCMtrjPT7dH8m/rJsxpTl0ot4NZSnbp0
	b8Xa1eHyZ82dH526qb1mr4evcPrnWu+N0S8FpP9IrZa2d5n6d6LkrAcfjuoGKWxdGPvzWEzK
	6oRFualGKUzsEzlKFnAUhi76dUomrfaBEktxRqKhFnNRcSIANbBp9eQCAAA=
X-CMS-MailID: 20250121115213epcas5p14d712e58b5bf6505b0bd729fb33b25b8
X-Msg-Generator: CA
Content-Type: text/plain; charset="utf-8"
X-Sendblock-Type: REQ_APPROVE
CMS-TYPE: 105P
DLP-Filter: Pass
X-CFilter-Loop: Reflected
X-CMS-RootMailID: 20250121115213epcas5p14d712e58b5bf6505b0bd729fb33b25b8
References: <20250121111421.35437-1-shradha.t@samsung.com>
	<CGME20250121115213epcas5p14d712e58b5bf6505b0bd729fb33b25b8@epcas5p1.samsung.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>

Add support to provide statistical counter interface to userspace. This set
of debug registers are part of the RASDES feature present in DesignWare
PCIe controllers.

Signed-off-by: Shradha Todi <shradha.t@samsung.com>
---
 Documentation/ABI/testing/debugfs-dwc-pcie    |  61 +++++
 .../controller/dwc/pcie-designware-debugfs.c  | 229 +++++++++++++++++-
 2 files changed, 289 insertions(+), 1 deletion(-)

diff --git a/Documentation/ABI/testing/debugfs-dwc-pcie b/Documentation/ABI/testing/debugfs-dwc-pcie
index cff205ab2678..d3f84f46b400 100644
--- a/Documentation/ABI/testing/debugfs-dwc-pcie
+++ b/Documentation/ABI/testing/debugfs-dwc-pcie
@@ -81,3 +81,64 @@ Description:	rasdes_err_inj is the directory which can be used to inject errors
 
 			<count>
 				Number of errors to be injected
+
+What:		/sys/kernel/debug/dwc_pcie_<dev>/rasdes_event_counters/<event>/counter_enable
+Date:		January 2025
+Contact:	Shradha Todi <shradha.t@samsung.com>
+Description:	rasdes_event_counters is the directory which can be used to collect
+		statistical data about the number of times a certain event has occurred
+		in the controller. The list of possible events are:
+
+		1) EBUF Overflow
+		2) EBUF Underrun
+		3) Decode Error
+		4) Running Disparity Error
+		5) SKP OS Parity Error
+		6) SYNC Header Error
+		7) Rx Valid De-assertion
+		8) CTL SKP OS Parity Error
+		9) 1st Retimer Parity Error
+		10) 2nd Retimer Parity Error
+		11) Margin CRC and Parity Error
+		12) Detect EI Infer
+		13) Receiver Error
+		14) RX Recovery Req
+		15) N_FTS Timeout
+		16) Framing Error
+		17) Deskew Error
+		18) Framing Error In L0
+		19) Deskew Uncompleted Error
+		20) Bad TLP
+		21) LCRC Error
+		22) Bad DLLP
+		23) Replay Number Rollover
+		24) Replay Timeout
+		25) Rx Nak DLLP
+		26) Tx Nak DLLP
+		27) Retry TLP
+		28) FC Timeout
+		29) Poisoned TLP
+		30) ECRC Error
+		31) Unsupported Request
+		32) Completer Abort
+		33) Completion Timeout
+		34) EBUF SKP Add
+		35) EBUF SKP Del
+
+		counter_enable is RW. Write 1 to enable the event counter and write 0 to
+		disable the event counter. Read will return whether the counter is currently
+		enabled	or disabled. Counter is disabled by default.
+
+What:		/sys/kernel/debug/dwc_pcie_<dev>/rasdes_event_counters/<event>/counter_value
+Date:		January 2025
+Contact:	Shradha Todi <shradha.t@samsung.com>
+Description:	(RO) Read will return the current value of the event counter. To reset the counter,
+		counter should be disabled and enabled back using the 'counter_enable' attribute.
+
+What:		/sys/kernel/debug/dwc_pcie_<dev>/rasdes_event_counters/<event>/lane_select
+Date:		January 2025
+Contact:	Shradha Todi <shradha.t@samsung.com>
+Description:	(RW) Some lanes in the event list are lane specific events. These include
+		events 1) - 11) and 34) - 35).
+		Write lane number for which counter needs to be enabled/disabled/dumped.
+		Read will return the current selected lane number. Lane0 is selected by default.
diff --git a/drivers/pci/controller/dwc/pcie-designware-debugfs.c b/drivers/pci/controller/dwc/pcie-designware-debugfs.c
index 801d51d8786f..5d883b13be84 100644
--- a/drivers/pci/controller/dwc/pcie-designware-debugfs.c
+++ b/drivers/pci/controller/dwc/pcie-designware-debugfs.c
@@ -31,6 +31,17 @@
 
 #define ERR_INJ_ENABLE_REG		0x30
 
+#define RAS_DES_EVENT_COUNTER_DATA_REG	0xc
+
+#define RAS_DES_EVENT_COUNTER_CTRL_REG	0x8
+#define EVENT_COUNTER_GROUP_SELECT	GENMASK(27, 24)
+#define EVENT_COUNTER_EVENT_SELECT	GENMASK(23, 16)
+#define EVENT_COUNTER_LANE_SELECT	GENMASK(11, 8)
+#define EVENT_COUNTER_STATUS		BIT(7)
+#define EVENT_COUNTER_ENABLE		GENMASK(4, 2)
+#define PER_EVENT_ON			0x3
+#define PER_EVENT_OFF			0x1
+
 #define DWC_DEBUGFS_BUF_MAX		128
 
 struct dwc_pcie_vendor_id {
@@ -125,6 +136,61 @@ static const u32 err_inj_type_mask[] = {
 	EINJ5_TYPE,
 };
 
+/**
+ * struct dwc_pcie_event_counter - Store details about each event counter supported in DWC RASDES
+ * @name: Name of the error counter
+ * @group_no: Group number that the event belongs to. Value ranges from 0 - 4
+ * @event_no: Event number of the particular event. Value ranges from -
+ *		Group 0: 0 - 10
+ *		Group 1: 5 - 13
+ *		Group 2: 0 - 7
+ *		Group 3: 0 - 5
+ *		Group 4: 0 - 1
+ */
+struct dwc_pcie_event_counter {
+	const char *name;
+	u32 group_no;
+	u32 event_no;
+};
+
+static const struct dwc_pcie_event_counter event_list[] = {
+	{"ebuf_overflow", 0x0, 0x0},
+	{"ebuf_underrun", 0x0, 0x1},
+	{"decode_err", 0x0, 0x2},
+	{"running_disparity_err", 0x0, 0x3},
+	{"skp_os_parity_err", 0x0, 0x4},
+	{"sync_header_err", 0x0, 0x5},
+	{"rx_valid_deassertion", 0x0, 0x6},
+	{"ctl_skp_os_parity_err", 0x0, 0x7},
+	{"retimer_parity_err_1st", 0x0, 0x8},
+	{"retimer_parity_err_2nd", 0x0, 0x9},
+	{"margin_crc_parity_err", 0x0, 0xA},
+	{"detect_ei_infer", 0x1, 0x5},
+	{"receiver_err", 0x1, 0x6},
+	{"rx_recovery_req", 0x1, 0x7},
+	{"n_fts_timeout", 0x1, 0x8},
+	{"framing_err", 0x1, 0x9},
+	{"deskew_err", 0x1, 0xa},
+	{"framing_err_in_l0", 0x1, 0xc},
+	{"deskew_uncompleted_err", 0x1, 0xd},
+	{"bad_tlp", 0x2, 0x0},
+	{"lcrc_err", 0x2, 0x1},
+	{"bad_dllp", 0x2, 0x2},
+	{"replay_num_rollover", 0x2, 0x3},
+	{"replay_timeout", 0x2, 0x4},
+	{"rx_nak_dllp", 0x2, 0x5},
+	{"tx_nak_dllp", 0x2, 0x6},
+	{"retry_tlp", 0x2, 0x7},
+	{"fc_timeout", 0x3, 0x0},
+	{"poisoned_tlp", 0x3, 0x1},
+	{"ecrc_error", 0x3, 0x2},
+	{"unsupported_request", 0x3, 0x3},
+	{"completer_abort", 0x3, 0x4},
+	{"completion_timeout", 0x3, 0x5},
+	{"ebuf_skp_add", 0x4, 0x0},
+	{"ebuf_skp_del", 0x4, 0x1},
+};
+
 static ssize_t lane_detect_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)
 {
 	struct dw_pcie *pci = file->private_data;
@@ -242,6 +308,127 @@ static ssize_t err_inj_write(struct file *file, const char __user *buf, size_t c
 	return count;
 }
 
+static void set_event_number(struct dwc_pcie_rasdes_priv *pdata, struct dw_pcie *pci,
+			     struct dwc_pcie_rasdes_info *rinfo)
+{
+	u32 val;
+
+	val = dw_pcie_readl_dbi(pci, rinfo->ras_cap_offset + RAS_DES_EVENT_COUNTER_CTRL_REG);
+	val &= ~EVENT_COUNTER_ENABLE;
+	val &= ~(EVENT_COUNTER_GROUP_SELECT | EVENT_COUNTER_EVENT_SELECT);
+	val |= FIELD_PREP(EVENT_COUNTER_GROUP_SELECT, event_list[pdata->idx].group_no);
+	val |= FIELD_PREP(EVENT_COUNTER_EVENT_SELECT, event_list[pdata->idx].event_no);
+	dw_pcie_writel_dbi(pci, rinfo->ras_cap_offset + RAS_DES_EVENT_COUNTER_CTRL_REG, val);
+}
+
+static ssize_t counter_enable_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)
+{
+	struct dwc_pcie_rasdes_priv *pdata = file->private_data;
+	struct dw_pcie *pci = pdata->pci;
+	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
+	char debugfs_buf[DWC_DEBUGFS_BUF_MAX];
+	ssize_t off = 0;
+	u32 val;
+
+	mutex_lock(&rinfo->reg_lock);
+	set_event_number(pdata, pci, rinfo);
+	val = dw_pcie_readl_dbi(pci, rinfo->ras_cap_offset + RAS_DES_EVENT_COUNTER_CTRL_REG);
+	mutex_unlock(&rinfo->reg_lock);
+	val = FIELD_GET(EVENT_COUNTER_STATUS, val);
+	if (val)
+		off += scnprintf(debugfs_buf, DWC_DEBUGFS_BUF_MAX - off, "Counter Enabled\n");
+	else
+		off += scnprintf(debugfs_buf, DWC_DEBUGFS_BUF_MAX - off, "Counter Disabled\n");
+
+	return simple_read_from_buffer(buf, count, ppos, debugfs_buf, off);
+}
+
+static ssize_t counter_enable_write(struct file *file, const char __user *buf,
+				    size_t count, loff_t *ppos)
+{
+	struct dwc_pcie_rasdes_priv *pdata = file->private_data;
+	struct dw_pcie *pci = pdata->pci;
+	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
+	u32 val, enable;
+
+	val = kstrtou32_from_user(buf, count, 0, &enable);
+	if (val)
+		return val;
+
+	mutex_lock(&rinfo->reg_lock);
+	set_event_number(pdata, pci, rinfo);
+	val = dw_pcie_readl_dbi(pci, rinfo->ras_cap_offset + RAS_DES_EVENT_COUNTER_CTRL_REG);
+	if (enable)
+		val |= FIELD_PREP(EVENT_COUNTER_ENABLE, PER_EVENT_ON);
+	else
+		val |= FIELD_PREP(EVENT_COUNTER_ENABLE, PER_EVENT_OFF);
+
+	dw_pcie_writel_dbi(pci, rinfo->ras_cap_offset + RAS_DES_EVENT_COUNTER_CTRL_REG, val);
+	mutex_unlock(&rinfo->reg_lock);
+
+	return count;
+}
+
+static ssize_t counter_lane_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)
+{
+	struct dwc_pcie_rasdes_priv *pdata = file->private_data;
+	struct dw_pcie *pci = pdata->pci;
+	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
+	char debugfs_buf[DWC_DEBUGFS_BUF_MAX];
+	ssize_t off = 0;
+	u32 val;
+
+	mutex_lock(&rinfo->reg_lock);
+	set_event_number(pdata, pci, rinfo);
+	val = dw_pcie_readl_dbi(pci, rinfo->ras_cap_offset + RAS_DES_EVENT_COUNTER_CTRL_REG);
+	mutex_unlock(&rinfo->reg_lock);
+	val = FIELD_GET(EVENT_COUNTER_LANE_SELECT, val);
+	off += scnprintf(debugfs_buf, DWC_DEBUGFS_BUF_MAX - off, "Lane: %d\n", val);
+
+	return simple_read_from_buffer(buf, count, ppos, debugfs_buf, off);
+}
+
+static ssize_t counter_lane_write(struct file *file, const char __user *buf,
+				  size_t count, loff_t *ppos)
+{
+	struct dwc_pcie_rasdes_priv *pdata = file->private_data;
+	struct dw_pcie *pci = pdata->pci;
+	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
+	u32 val, lane;
+
+	val = kstrtou32_from_user(buf, count, 0, &lane);
+	if (val)
+		return val;
+
+	mutex_lock(&rinfo->reg_lock);
+	set_event_number(pdata, pci, rinfo);
+	val = dw_pcie_readl_dbi(pci, rinfo->ras_cap_offset + RAS_DES_EVENT_COUNTER_CTRL_REG);
+	val &= ~(EVENT_COUNTER_LANE_SELECT);
+	val |= FIELD_PREP(EVENT_COUNTER_LANE_SELECT, lane);
+	dw_pcie_writel_dbi(pci, rinfo->ras_cap_offset + RAS_DES_EVENT_COUNTER_CTRL_REG, val);
+	mutex_unlock(&rinfo->reg_lock);
+
+	return count;
+}
+
+static ssize_t counter_value_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)
+{
+	struct dwc_pcie_rasdes_priv *pdata = file->private_data;
+	struct dw_pcie *pci = pdata->pci;
+	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
+	char debugfs_buf[DWC_DEBUGFS_BUF_MAX];
+	ssize_t off = 0;
+	u32 val;
+
+	mutex_lock(&rinfo->reg_lock);
+	set_event_number(pdata, pci, rinfo);
+	val = dw_pcie_readl_dbi(pci, rinfo->ras_cap_offset + RAS_DES_EVENT_COUNTER_DATA_REG);
+	mutex_unlock(&rinfo->reg_lock);
+	off += scnprintf(debugfs_buf, DWC_DEBUGFS_BUF_MAX - off, "Counter value: %d\n", val);
+
+	return simple_read_from_buffer(buf, count, ppos, debugfs_buf, off);
+}
+
 #define dwc_debugfs_create(name)			\
 debugfs_create_file(#name, 0644, rasdes_debug, pci,	\
 			&dbg_ ## name ## _fops)
@@ -261,6 +448,23 @@ static const struct file_operations dwc_pcie_err_inj_ops = {
 	.write = err_inj_write,
 };
 
+static const struct file_operations dwc_pcie_counter_enable_ops = {
+	.open = simple_open,
+	.read = counter_enable_read,
+	.write = counter_enable_write,
+};
+
+static const struct file_operations dwc_pcie_counter_lane_ops = {
+	.open = simple_open,
+	.read = counter_lane_read,
+	.write = counter_lane_write,
+};
+
+static const struct file_operations dwc_pcie_counter_value_ops = {
+	.open = simple_open,
+	.read = counter_value_read,
+};
+
 void dwc_pcie_rasdes_debugfs_deinit(struct dw_pcie *pci)
 {
 	struct dwc_pcie_rasdes_info *rinfo = pci->rasdes_info;
@@ -271,7 +475,7 @@ void dwc_pcie_rasdes_debugfs_deinit(struct dw_pcie *pci)
 
 int dwc_pcie_rasdes_debugfs_init(struct dw_pcie *pci)
 {
-	struct dentry *dir, *rasdes_debug, *rasdes_err_inj;
+	struct dentry *dir, *rasdes_debug, *rasdes_err_inj, *rasdes_event_counter, *rasdes_events;
 	struct dwc_pcie_rasdes_info *rasdes_info;
 	struct dwc_pcie_rasdes_priv *priv_tmp;
 	const struct dwc_pcie_vendor_id *vid;
@@ -303,6 +507,7 @@ int dwc_pcie_rasdes_debugfs_init(struct dw_pcie *pci)
 	/* Create subdirectories for Debug, Error injection, Statistics */
 	rasdes_debug = debugfs_create_dir("rasdes_debug", dir);
 	rasdes_err_inj = debugfs_create_dir("rasdes_err_inj", dir);
+	rasdes_event_counter = debugfs_create_dir("rasdes_event_counter", dir);
 
 	mutex_init(&rasdes_info->reg_lock);
 	rasdes_info->ras_cap_offset = ras_cap;
@@ -326,6 +531,28 @@ int dwc_pcie_rasdes_debugfs_init(struct dw_pcie *pci)
 		debugfs_create_file(err_inj_list[i].name, 0200, rasdes_err_inj, priv_tmp,
 				    &dwc_pcie_err_inj_ops);
 	}
+
+	/* Create debugfs files for Statistical counter subdirectory */
+	for (i = 0; i < ARRAY_SIZE(event_list); i++) {
+		priv_tmp = devm_kzalloc(dev, sizeof(*priv_tmp), GFP_KERNEL);
+		if (!priv_tmp) {
+			ret = -ENOMEM;
+			goto err_deinit;
+		}
+
+		priv_tmp->idx = i;
+		priv_tmp->pci = pci;
+		rasdes_events = debugfs_create_dir(event_list[i].name, rasdes_event_counter);
+		if (event_list[i].group_no == 0 || event_list[i].group_no == 4) {
+			debugfs_create_file("lane_select", 0644, rasdes_events,
+					    priv_tmp, &dwc_pcie_counter_lane_ops);
+		}
+		debugfs_create_file("counter_value", 0444, rasdes_events, priv_tmp,
+				    &dwc_pcie_counter_value_ops);
+		debugfs_create_file("counter_enable", 0644, rasdes_events, priv_tmp,
+				    &dwc_pcie_counter_enable_ops);
+	}
+
 	return 0;
 
 err_deinit:
-- 
2.17.1


From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from mailout4.samsung.com (mailout4.samsung.com [203.254.224.34])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 2B3B12661B9
	for <linux-kernel@vger.kernel.org>; Thu, 13 Feb 2025 22:38:48 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=203.254.224.34
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1739486331; cv=none; b=A5k2Zh6IfY41/4cyxbLkLtR+pKVgnGWeLVmrwXdNpGzcEhuAK4nqt7+BTYwmSwgb+/ecEpvJGRp/wyEDMaghFRNE8UVItSH8fLxhGxqYIxekjaKNXwU61lcLV+M5nPxIT/LXcSrPt6uRaVEsmx5NoDqxx50hLVPEtM8EENWcUIQ=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1739486331; c=relaxed/simple;
	bh=XzxNwZFgCKSezZ/DRf2OAQFYLa6FGvaFw5cd3EkILA4=;
	h=From:To:Cc:In-Reply-To:Subject:Date:Message-ID:MIME-Version:
	 Content-Type:References; b=Ch+Ga3amD/gW/ZoNSxpF44FJIthEa/Urtb2dcYfZwR8Tb6SRJMFd7URhHAax5wV2PyKH7obGNNtYlF+LQMu4NATAI1NrwmYebpBtho4e/hf6X0hLcNVjNulTV03nWfjXKA6GsN18F2IqCjiaN1SHI9m52BwnET7RxmfI8ezaBkQ=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com; spf=pass smtp.mailfrom=samsung.com; dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b=pZp4J/a8; arc=none smtp.client-ip=203.254.224.34
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=samsung.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=samsung.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=samsung.com header.i=@samsung.com header.b="pZp4J/a8"
Received: from epcas5p3.samsung.com (unknown [182.195.41.41])
	by mailout4.samsung.com (KnoxPortal) with ESMTP id 20250213223847epoutp04953c4eba874090809caf328066ff87c2~j5Zkl10sZ0030500305epoutp04g
	for <linux-kernel@vger.kernel.org>; Thu, 13 Feb 2025 22:38:47 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout4.samsung.com 20250213223847epoutp04953c4eba874090809caf328066ff87c2~j5Zkl10sZ0030500305epoutp04g
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
	s=mail20170921; t=1739486327;
	bh=RuEImCMT9T5FHom+Ma10BET9FTMNrytuqdhryy082to=;
	h=From:To:Cc:In-Reply-To:Subject:Date:References:From;
	b=pZp4J/a8sb8wc0sESt8Kj80D6HIrzSFfwYcWTNurZmNtVYmCa0MSNJ0aRgOwMLb9m
	 drpdEH/Bq3Dn5m97MQFnzk8HK2GpTnCZj/IIqvO21+KPEbWf100EjNUJyIvn01fPp9
	 EEOLDhSlqXtZHu8blOxEouC0k0MfpN9FI8OnxTsc=
Received: from epsnrtp3.localdomain (unknown [182.195.42.164]) by
	epcas5p1.samsung.com (KnoxPortal) with ESMTP id
	20250213223846epcas5p16f0f984ecb4be034d11532f7b2973acb~j5ZkBSDta0308003080epcas5p1p;
	Thu, 13 Feb 2025 22:38:46 +0000 (GMT)
Received: from epsmgec5p1-new.samsung.com (unknown [182.195.38.181]) by
	epsnrtp3.localdomain (Postfix) with ESMTP id 4Yv9844gMPz4x9Pr; Thu, 13 Feb
	2025 22:38:44 +0000 (GMT)
Received: from epcas5p3.samsung.com ( [182.195.41.41]) by
	epsmgec5p1-new.samsung.com (Symantec Messaging Gateway) with SMTP id
	D0.FF.29212.4747EA76; Fri, 14 Feb 2025 07:38:44 +0900 (KST)
Received: from epsmtrp1.samsung.com (unknown [182.195.40.13]) by
	epcas5p1.samsung.com (KnoxPortal) with ESMTPA id
	20250213173709epcas5p1e5f6d77a80e6a86400560ca7ef06053a~j1SNz_UGW1079310793epcas5p1s;
	Thu, 13 Feb 2025 17:37:09 +0000 (GMT)
Received: from epsmgmcp1.samsung.com (unknown [182.195.42.82]) by
	epsmtrp1.samsung.com (KnoxPortal) with ESMTP id
	20250213173709epsmtrp133b77dffaa8f767abd09e30e300f0748~j1SNzHW352551925519epsmtrp1i;
	Thu, 13 Feb 2025 17:37:09 +0000 (GMT)
X-AuditID: b6c32a50-7ebff7000000721c-a9-67ae74740ab8
Received: from epsmtip1.samsung.com ( [182.195.34.30]) by
	epsmgmcp1.samsung.com (Symantec Messaging Gateway) with SMTP id
	86.60.33707.5CD2EA76; Fri, 14 Feb 2025 02:37:09 +0900 (KST)
Received: from FDSFTE462 (unknown [107.122.81.248]) by epsmtip1.samsung.com
	(KnoxPortal) with ESMTPA id
	20250213173707epsmtip12999bbba75b007dcc8005d07e7e89281~j1SLoqaCe3248332483epsmtip1M;
	Thu, 13 Feb 2025 17:37:06 +0000 (GMT)
From: "Shradha Todi" <shradha.t@samsung.com>
To: "'Niklas Cassel'" <cassel@kernel.org>
Cc: <linux-kernel@vger.kernel.org>, <linux-pci@vger.kernel.org>,
	<manivannan.sadhasivam@linaro.org>, <lpieralisi@kernel.org>, <kw@linux.com>,
	<robh@kernel.org>, <bhelgaas@google.com>, <jingoohan1@gmail.com>,
	<Jonathan.Cameron@huawei.com>, <fan.ni@samsung.com>,
	<a.manzanares@samsung.com>, <pankaj.dubey@samsung.com>,
	<quic_nitegupt@quicinc.com>, <quic_krichai@quicinc.com>,
	<gost.dev@samsung.com>
In-Reply-To: <Z64EFN2QZ2AOF11I@ryzen>
Subject: RE: [PATCH v5 0/4] Add support for RAS DES feature in PCIe DW
Date: Thu, 13 Feb 2025 23:07:05 +0530
Message-ID: <005201db7e3d$e82427b0$b86c7710$@samsung.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
X-Mailer: Microsoft Outlook 16.0
Thread-Index: AQIF6yWfo3JYTHonCeozG/+o+TePrwHR/GHkAfXiPF+y0mU98A==
Content-Language: en-in
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFrrOJsWRmVeSWpSXmKPExsWy7bCmpm5Jybp0g5Y7ihbTDytaLGnKsDg2
	YQWzRdPqu6wWNw/sZLJY8WUmu8WqhdfYLBp6frNaXN41h83i7LzjbBYtf1pYLO62dLJaLNr6
	hd3iwYNKi845R5gt/u/Zwe4g4LFz1l12jwWbSj1ajrxl9di0qpPN4861PWweT65MZ/KYuKfO
	o2/LKkaPz5vkAjijsm0yUhNTUosUUvOS81My89JtlbyD453jTc0MDHUNLS3MlRTyEnNTbZVc
	fAJ03TJzgF5QUihLzCkFCgUkFhcr6dvZFOWXlqQqZOQXl9gqpRak5BSYFOgVJ+YWl+al6+Wl
	llgZGhgYmQIVJmRnzN74ia3ggW7FxXNbmRsYOzW6GDk5JARMJLrnH2LvYuTiEBLYwyjxff9G
	ZpCEkMAnRonV9/QgEkD276vzWWE6ju28zgZRtJNRonddIETRC0aJaysngxWxCehIPLnyB2yS
	iICmxJqf28FWMAvMYJY4c/IGWBGngKrEzKV/WEBsYQE3iTefnoA1sADF+7pWMYHYvAKWEieb
	21ggbEGJkzOfgNnMAtoSyxa+Zoa4SEHi59NlrBDLnCRWzf/ADFEjLnH0Zw8zyGIJgSccEpMv
	zWPsYuQAclwkLlwJh+gVlnh1fAs7hC0l8bK/DcpOl1i5eQbU/ByJb5uXMEHY9hIHrsxhARnD
	DPTY+l36EGFZiamn1jFBrOWT6P39BKqcV2LHPBhbWeLL3z0sELakxLxjl1knMCrNQvLZLCSf
	zULywSyEbQsYWVYxSqUWFOempyabFhjq5qWWwyM8OT93EyM4hWsF7GBcveGv3iFGJg7GQ4wS
	HMxKIrwS09akC/GmJFZWpRblxxeV5qQWH2I0BYb3RGYp0eR8YBbJK4k3NLE0MDEzMzOxNDYz
	VBLnbd7Zki4kkJ5YkpqdmlqQWgTTx8TBKdXAZFcedKn34PkH3J/ur92jrriiX/ow59KbybnV
	6XM6mjMSPRUPfvmkn79t1ZWU8NvrDH0OMpWUtdoW2zq6eRbxnJvflGX0YpGbtEh/2jF56bCj
	Ir2To6c7MDJbeCoFu0k/8D31hmet0PZj7/vssnI2OhzoOPo2ZWrtHQFG3SnmqnIKYTZ7Z/Vy
	p7w1y5izc92SRct+SHypjX7PIR+YzJA/p1X4mtfK7uD/3x93/jPsy0gV+d/D5Kp/fGeBQ0h7
	l5+2zKmXrFZZveeVmpe9PNx/1VbIUCc2YuMbD51/rPOnlu8IrtvQ2a7Eecpzwu+Tz5ZcK0lT
	cV3Z31VjMMMx8tSSZ8cLCktlmRMzPq1bFabEUpyRaKjFXFScCADsU9FHagQAAA==
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFtrDIsWRmVeSWpSXmKPExsWy7bCSnO5R3XXpBk/X8ltMP6xosaQpw+LY
	hBXMFk2r77Ja3Dywk8lixZeZ7BarFl5js2jo+c1qcXnXHDaLs/OOs1m0/Glhsbjb0slqsWjr
	F3aLBw8qLTrnHGG2+L9nB7uDgMfOWXfZPRZsKvVoOfKW1WPTqk42jzvX9rB5PLkynclj4p46
	j74tqxg9Pm+SC+CM4rJJSc3JLEst0rdL4Mq4ON25YKF6xeUtV5gbGKfLdzFyckgImEgc23md
	rYuRi0NIYDujxKG7h5kgEpISny+ug7KFJVb+e84OUfSMUWLTrB42kASbgI7Ekyt/mEFsEQFN
	iTU/t4MVMQusYJY4su8pE0THUkaJX3dfMIJUcQqoSsxc+ocFxBYWcJN48+kJWDcLULyvaxXY
	Ol4BS4mTzW0sELagxMmZT8BsZgFtid6HrYww9rKFr5khzlOQ+Pl0GSvEFU4Sq+Z/YIaoEZc4
	+rOHeQKj8Cwko2YhGTULyahZSFoWMLKsYhRNLSjOTc9NLjDUK07MLS7NS9dLzs/dxAiOYK2g
	HYzL1v/VO8TIxMF4iFGCg1lJhFdi2pp0Id6UxMqq1KL8+KLSnNTiQ4zSHCxK4rzKOZ0pQgLp
	iSWp2ampBalFMFkmDk6pBiazzd9UlCby5Cx7aJsvKGNsdWstz3NH1fdNu5N5O3Q2r9Tbn2zA
	kJOcvKrTWPPL4qenJ59f/Pn+qokta1yMOszuqV5M3ytnrFW76dzMc58mxDy9UdGyunH2uW+r
	+v+c1txvKv8hwlSvRHqXvKOx1PypExyWvvTZwD4zWm/Bz6stZzPYj675vSaofWp2lZek306x
	lUmWW+Mr1+hp3+B/sqB2S4rAtfexLDelDp4M+jdh4q99FTP+XrxSz/xPa40qb8u/02c8L4ow
	sZ/TXr/Qhmvl58NafsrKu77WSyzzeeByTTa0NGPJ+////x/rqT27vyFhQu8vJ/kZ084wtUnc
	ti/ZXpuSfHOTuFCvMLt30mp7JZbijERDLeai4kQA3tJjcE8DAAA=
X-CMS-MailID: 20250213173709epcas5p1e5f6d77a80e6a86400560ca7ef06053a
X-Msg-Generator: CA
Content-Type: text/plain; charset="utf-8"
X-Sendblock-Type: REQ_APPROVE
CMS-TYPE: 105P
DLP-Filter: Pass
X-CFilter-Loop: Reflected
X-CMS-RootMailID: 20250121115157epcas5p15f8b34cd76cbbb3b043763e644469b18
References: <CGME20250121115157epcas5p15f8b34cd76cbbb3b043763e644469b18@epcas5p1.samsung.com>
	<20250121111421.35437-1-shradha.t@samsung.com> <Z64EFN2QZ2AOF11I@ryzen>



> -----Original Message-----
> From: Niklas Cassel <cassel=40kernel.org>
> Sent: 13 February 2025 20:09
> To: Shradha Todi <shradha.t=40samsung.com>
> Cc: linux-kernel=40vger.kernel.org; linux-pci=40vger.kernel.org; manivann=
an.sadhasivam=40linaro.org; lpieralisi=40kernel.org;
> kw=40linux.com; robh=40kernel.org; bhelgaas=40google.com; jingoohan1=40gm=
ail.com; Jonathan.Cameron=40huawei.com;
> fan.ni=40samsung.com; a.manzanares=40samsung.com; pankaj.dubey=40samsung.=
com; quic_nitegupt=40quicinc.com;
> quic_krichai=40quicinc.com; gost.dev=40samsung.com
> Subject: Re: =5BPATCH v5 0/4=5D Add support for RAS DES feature in PCIe D=
W
>=20
> On Tue, Jan 21, 2025 at 04:44:17PM +0530, Shradha Todi wrote:
> > DesignWare controller provides a vendor specific extended capability
> > called RASDES as an IP feature. This extended capability  provides
> > hardware information like:
> >  - Debug registers to know the state of the link or controller.
> >  - Error injection mechanisms to inject various PCIe errors including
> >    sequence number, CRC
> >  - Statistical counters to know how many times a particular event
> >    occurred
> >
> > However, in Linux we do not have any generic or custom support to be
> > able to use this feature in an efficient manner. This is the reason we
> > are proposing this framework. Debug and bring up time of high-speed
> > IPs are highly dependent on costlier hardware analyzers and this
> > solution will in some ways help to reduce the HW analyzer usage.
> >
> > The debugfs entries can be used to get information about underlying
> > hardware and can be shared with user space. Separate debugfs entries
> > has been created to cater to all the DES hooks provided by the controll=
er.
> > The debugfs entries interacts with the RASDES registers in the
> > required sequence and provides the meaningful data to the user. This
> > eases the effort to understand and use the register information for deb=
ugging.
> >
> > v5:
> >     - Addressed Fan's comment to split the patches for easier review
> >     - Addressed Bjorn's comment to fix vendor specific cap search
> >     - Addressed style related change requests from v4
> >     - Added rasdes debugfs init call to common designware files for hos=
t
> >       and EP.
> >
> > v4: https://lore.kernel.org/lkml/20241206074456.17401-1-shradha.t=40sam=
sung.com/
> >     - Addressed comments from Manivannan, Bjorn and Jonathan
> >     - Addressed style related change requests from v3
> >     - Added Documentation under Documentation/ABI/testing and kdoc styp=
e
> >       comments wherever required for better understanding
> >     - Enhanced error injection to include all possible error groups
> >     - Removed debugfs init call from common designware file and left it
> >       up to individual platform drivers to init/deinit as required.
> >
> > v3: https://lore.kernel.org/all/20240625093813.112555-1-shradha.t=40sam=
sung.com/
> >     - v2 had suggestions about moving this framework to perf/EDAC inste=
ad of a
> >       controller specific debugfs but after discussions we decided to g=
o ahead
> >       with the same. Rebased and posted v3 with minor style changes.
> >
> > v2: https://lore.kernel.org/lkml/20231130115044.53512-1-shradha.t=40sam=
sung.com/
> >     - Addressed comments from Krzysztof Wilczy=C5=84ski,=20Bjorn=20Helg=
aas=20and=0D=0A>=20>=20=20=20=20=20=20=20posted=20v2=20with=20a=20changed=
=20implementation=20for=20a=20better=20code=20design=0D=0A>=20>=0D=0A>=20>=
=20v1:=0D=0A>=20>=20https://lore.kernel.org/all/20210518174618.42089-1-shra=
dha.t=40samsung.c=0D=0A>=20>=20om/T/=0D=0A>=20>=0D=0A>=20>=20Shradha=20Todi=
=20(4):=0D=0A>=20>=20=20=20PCI:=20dwc:=20Add=20support=20for=20vendor=20spe=
cific=20capability=20search=0D=0A>=20>=20=20=20Add=20debugfs=20based=20sili=
con=20debug=20support=20in=20DWC=0D=0A>=20>=20=20=20Add=20debugfs=20based=
=20error=20injection=20support=20in=20DWC=0D=0A>=20>=20=20=20Add=20debugfs=
=20based=20statistical=20counter=20support=20in=20DWC=0D=0A>=20>=0D=0A>=20>=
=20=20Documentation/ABI/testing/debugfs-dwc-pcie=20=20=20=20=7C=20144=20+++=
++=0D=0A>=20>=20=20drivers/pci/controller/dwc/Kconfig=20=20=20=20=20=20=20=
=20=20=20=20=20=7C=20=2010=20+=0D=0A>=20>=20=20drivers/pci/controller/dwc/M=
akefile=20=20=20=20=20=20=20=20=20=20=20=7C=20=20=201=20+=0D=0A>=20>=20=20.=
../controller/dwc/pcie-designware-debugfs.c=20=20=7C=20561=20++++++++++++++=
++++=0D=0A>=20>=20=20.../pci/controller/dwc/pcie-designware-ep.c=20=20=20=
=7C=20=20=205=20+=0D=0A>=20>=20=20.../pci/controller/dwc/pcie-designware-ho=
st.c=20=7C=20=20=206=20+=0D=0A>=20>=20=20drivers/pci/controller/dwc/pcie-de=
signware.c=20=20=7C=20=2019=20+=0D=0A>=20>=20drivers/pci/controller/dwc/pci=
e-designware.h=20=20=7C=20=2016=20+=0D=0A>=20>=20=208=20files=20changed,=20=
762=20insertions(+)=0D=0A>=20>=20=20create=20mode=20100644=20Documentation/=
ABI/testing/debugfs-dwc-pcie=0D=0A>=20>=20=20create=20mode=20100644=0D=0A>=
=20>=20drivers/pci/controller/dwc/pcie-designware-debugfs.c=0D=0A>=20>=0D=
=0A>=20>=20--=0D=0A>=20>=202.17.1=0D=0A>=20>=0D=0A>=20=0D=0A>=20Shradha,=0D=
=0A>=20=0D=0A>=20Thank=20you=20for=20this=20awesome=20feature=21=0D=0A>=20=
=0D=0A>=20It=20would=20be=20great=20if=20we=20could=20get=20it=20included=
=20in=20v6.15.=0D=0A>=20=0D=0A>=20Are=20you=20intending=20to=20send=20out=
=20a=20v6?=0D=0A>=20=0D=0A>=20=0D=0A>=20Kind=20regards,=0D=0A>=20Niklas=0D=
=0A=0D=0AYes=20Niklas,=20I=20added=20some=20changes=20as=20discussed=20in=
=20the=20patch=20sent=20by=20Hans=20which=20separates=0D=0Arasdes_init=20an=
d=20debugfs_init=20and=20the=20structures=20so=20as=20to=20not=20make=20thi=
s=20file=20rasdes=20specific.=0D=0AIn=20the=20process=20of=20testing=20and=
=20will=20send=20it=20out=20soon.=0D=0A=0D=0A

From mboxrd@z Thu Jan  1 00:00:00 1970
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 184574502A;
	Wed, 22 Jan 2025 10:36:46 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal: i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1737542207; cv=none; b=BE8dkdX6dIXQQ551W4P8KoTI9qjI7iy4lDpg4rAYMWjab1js2MHEtbjj2MYscXO7Emy2iO6CCDlFyZ3MKXqLz5cLh/9eTbByV3ZILwGfr6vTl2lr32UJFe1GHN+yv0cgO3W9z3t2MEkfJQPKwC/5pfmV6qVNdjUS0qrlHadCI/Y=
ARC-Message-Signature: i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1737542207; c=relaxed/simple;
	bh=nXM97R+sdgLXsa+8UoXUjsk+7aYyJNXAg6yhNH6HoK8=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=dF/5PjmmHZNKPSfQppzFOgzo1UKlK4Oiko73oQhBVIAS9OHP+ffB9hWPj7XDq5RGWGhquoDvSRNa2RHLeK+M6JPRrm1Val0rZGipvjqJcQZJVNT5O7OYrWyGipKRIXlGVPSUpz9l1pdeTHXs1yqGvmkO/wLz1+uJ/ENnRPQkHdY=
ARC-Authentication-Results: i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=DRKq4au9; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="DRKq4au9"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 472C3C4CED6;
	Wed, 22 Jan 2025 10:36:43 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1737542206;
	bh=nXM97R+sdgLXsa+8UoXUjsk+7aYyJNXAg6yhNH6HoK8=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=DRKq4au9IJeGlrPZ5NZftJ56cpGRjYsj+W6Ebsw4FiEFmi6+7g4S6E/Xuc0K7xdv2
	 AnGlpOV7YXWNMW7Y+oNI8P62e8FnwxavDzoe6zHvTWajiv9AmRMNeM5R18CwFf39IA
	 gO5IWFfr8tkRScqOf8Ky51U6NooXBKGyYqjWFQwGQqBySas+dCvvIx2OEEY9SpRGW/
	 lFOcTVjuY9cJHncp9bAkzQg3c9lud/v9ho7BLH7GSPU9ixjczYeSo2fY0yYpm2oUyL
	 DXs9B7/9yyLMwaAuCxjNvDXTAeGK3LUmVUduI1DA85VzbZr9GiRC/TaEIT6y0Vp5sc
	 UnDw7LKQi0GTQ==
Date: Wed, 22 Jan 2025 11:36:40 +0100
From: Niklas Cassel <cassel@kernel.org>
To: Shradha Todi <shradha.t@samsung.com>
Cc: linux-kernel@vger.kernel.org, linux-pci@vger.kernel.org,
	manivannan.sadhasivam@linaro.org, lpieralisi@kernel.org,
	kw@linux.com, robh@kernel.org, bhelgaas@google.com,
	jingoohan1@gmail.com, Jonathan.Cameron@huawei.com,
	fan.ni@samsung.com, a.manzanares@samsung.com,
	pankaj.dubey@samsung.com, quic_nitegupt@quicinc.com,
	quic_krichai@quicinc.com, gost.dev@samsung.com
Subject: Re: [PATCH v5 2/4] Add debugfs based silicon debug support in DWC
Message-ID: <Z5DKOHiPd-yc7MCc@ryzen>
References: <20250121111421.35437-1-shradha.t@samsung.com>
 <CGME20250121115206epcas5p42ce605e6c8500fd2cdfea83a82b101a5@epcas5p4.samsung.com>
 <20250121111421.35437-3-shradha.t@samsung.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20250121111421.35437-3-shradha.t@samsung.com>

Hello Shradha,

On Tue, Jan 21, 2025 at 04:44:19PM +0530, Shradha Todi wrote:

This is the suggested format of your new feature:

> +
> +struct dwc_pcie_vendor_id {
> +	u16 vendor_id;
> +	u16 vsec_rasdes_cap_id;
> +};
> +
> +static const struct dwc_pcie_vendor_id dwc_pcie_vendor_ids[] = {
> +	{PCI_VENDOR_ID_SAMSUNG,	0x2},
> +	{} /* terminator */
> +};


You might know of the drivers/perf driver which also exposes RAS information
for DWC. That driver uses the following format for supported entries:

+struct dwc_pcie_pmu_vsec_id {
+	u16 vendor_id;
+	u16 vsec_id;
+	u8 vsec_rev;
 };

+/*
+ * VSEC IDs are allocated by the vendor, so a given ID may mean different
+ * things to different vendors.  See PCIe r6.0, sec 7.9.5.2.
+ */
+static const struct dwc_pcie_pmu_vsec_id dwc_pcie_pmu_vsec_ids[] = {
+	{ .vendor_id = PCI_VENDOR_ID_ALIBABA,
+	  .vsec_id = 0x02, .vsec_rev = 0x4 },
+	{ .vendor_id = PCI_VENDOR_ID_AMPERE,
+	  .vsec_id = 0x02, .vsec_rev = 0x4 },
+	{ .vendor_id = PCI_VENDOR_ID_QCOM,
+	  .vsec_id = 0x02, .vsec_rev = 0x4 },
 	{} /* terminator */
 };

See:
https://lore.kernel.org/all/20241209222938.3219364-1-helgaas@kernel.org/


I think it would be a good idea for your feature to use the exact same
format for supported entries, so that entries can simply be copy pasted
between the two drivers.

(Considering that both of these drivers are simply exposing the RAS
information in different ways, having an entry in one of the two drivers
should mean that that entry should work/be applicable for the other
driver as well.)


You might also want to add support for Samsung in the drivers/perf driver.


Kind regards,
Niklas

