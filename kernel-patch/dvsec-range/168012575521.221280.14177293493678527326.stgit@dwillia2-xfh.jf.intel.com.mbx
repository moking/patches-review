From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 5F0ADC76196
	for <linux-cxl@archiver.kernel.org>; Mon,  3 Apr 2023 23:06:18 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233773AbjDCXGR (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Mon, 3 Apr 2023 19:06:17 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:43934 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S233723AbjDCXGR (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Mon, 3 Apr 2023 19:06:17 -0400
Received: from mga14.intel.com (mga14.intel.com [192.55.52.115])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id E3A5AA8
        for <linux-cxl@vger.kernel.org>; Mon,  3 Apr 2023 16:06:15 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1680563175; x=1712099175;
  h=subject:from:to:cc:date:message-id:in-reply-to:
   references:mime-version:content-transfer-encoding;
  bh=LduSQlEmDuRBUPQLoUBunWoyhUYcAiAySEiUnMY2GZk=;
  b=D7GaLIB/KIAY/n4N8ovNJR0I6O8xqJFa9hNdkUwauXCY7md8orD9faJm
   R7QrqAFVpj79sB6cKeweBQCYgsW1yxtZrbtTmKpKr/hjNLUzbbWeM4u/9
   l1/VXTqv24ODvz+VRCwYytWCgLbP/rwNIkxd4C5qbpH4f1MDAg6FYdw9O
   NaGkzdBejiXZvHYAXvvSLVJfV2Ru1UYbEQIuaGMmjyKMAy8AzxpRdQerJ
   oDPa2Gc9rTmDySnP1gI1Spu2uuNCKSGsEQnv8of6/mYyU3P4rFTVz4x0k
   ZUoZiUO5K6Sto1HC7kXOamkRLjH92mgFykBtd0miC3vq3iMYHWvslxKsP
   g==;
X-IronPort-AV: E=McAfee;i="6600,9927,10669"; a="342062664"
X-IronPort-AV: E=Sophos;i="5.98,315,1673942400"; 
   d="scan'208";a="342062664"
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
  by fmsmga103.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 03 Apr 2023 16:06:15 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10669"; a="775398287"
X-IronPort-AV: E=Sophos;i="5.98,315,1673942400"; 
   d="scan'208";a="775398287"
Received: from kkohner-mobl.amr.corp.intel.com (HELO dwillia2-xfh.jf.intel.com) ([10.209.97.191])
  by fmsmga003-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 03 Apr 2023 16:06:14 -0700
Subject: [PATCH v2] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
From: Dan Williams <dan.j.williams@intel.com>
To: linux-cxl@vger.kernel.org
Cc: Dave Jiang <dave.jiang@intel.com>,
        Gregory Price <gregory.price@memverge.com>
Date: Mon, 03 Apr 2023 16:06:14 -0700
Message-ID: <168056315526.436217.14417826023537916154.stgit@dwillia2-xfh.jf.intel.com>
In-Reply-To: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
User-Agent: StGit/0.18-3-g996c
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

One motivation for mapping range registers to decoder objects is
to use those settings for region autodiscovery.

The need to map a region for devices programmed to use range registers
is especially urgent now that the kernel no longer routes "Soft
Reserved" ranges in the memory map to device-dax by default. The CXL
memory range loses all access mechanisms.

Complete the implementation by filling out ways and granularity, marking
the DPA reservation, and setting the endpoint-decoder state to signal
autodiscovery.

Fixes: 09d09e04d2fc ("cxl/dax: Create dax devices for CXL RAM regions")
Tested-by: Dave Jiang <dave.jiang@intel.com>
Tested-by: Gregory Price <gregory.price@memverge.com>
Link: https://lore.kernel.org/r/168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com
Signed-off-by: Dan Williams <dan.j.williams@intel.com>
---
Changes since v1:
- Swap out the local @range variable which was mostly only used for the
  mapping length with a @len variable for that purpose (Jonathan)

 drivers/cxl/core/hdm.c |   27 ++++++++++++++++++++++-----
 1 file changed, 22 insertions(+), 5 deletions(-)

diff --git a/drivers/cxl/core/hdm.c b/drivers/cxl/core/hdm.c
index 9884b6d4d930..02cc2c38b44b 100644
--- a/drivers/cxl/core/hdm.c
+++ b/drivers/cxl/core/hdm.c
@@ -738,14 +738,20 @@ static int cxl_decoder_reset(struct cxl_decoder *cxld)
 	return 0;
 }
 
-static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
-					    struct cxl_decoder *cxld, int which,
-					    struct cxl_endpoint_dvsec_info *info)
+static int cxl_setup_hdm_decoder_from_dvsec(
+	struct cxl_port *port, struct cxl_decoder *cxld, u64 *dpa_base,
+	int which, struct cxl_endpoint_dvsec_info *info)
 {
+	struct cxl_endpoint_decoder *cxled;
+	u64 len;
+	int rc;
+
 	if (!is_cxl_endpoint(port))
 		return -EOPNOTSUPP;
 
-	if (!range_len(&info->dvsec_range[which]))
+	cxled = to_cxl_endpoint_decoder(&cxld->dev);
+	len = range_len(&info->dvsec_range[which]);
+	if (!len)
 		return -ENOENT;
 
 	cxld->target_type = CXL_DECODER_EXPANDER;
@@ -760,6 +766,16 @@ static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
 	cxld->flags |= CXL_DECODER_F_ENABLE | CXL_DECODER_F_LOCK;
 	port->commit_end = cxld->id;
 
+	rc = devm_cxl_dpa_reserve(cxled, *dpa_base, len, 0);
+	if (rc) {
+		dev_err(&port->dev,
+			"decoder%d.%d: Failed to reserve DPA range %#llx - %#llx\n (%d)",
+			port->id, cxld->id, *dpa_base, *dpa_base + len - 1, rc);
+		return rc;
+	}
+	*dpa_base += len;
+	cxled->state = CXL_DECODER_STATE_AUTO;
+
 	return 0;
 }
 
@@ -779,7 +795,8 @@ static int init_hdm_decoder(struct cxl_port *port, struct cxl_decoder *cxld,
 	} target_list;
 
 	if (should_emulate_decoders(info))
-		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, which, info);
+		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, dpa_base,
+							which, info);
 
 	ctrl = readl(hdm + CXL_HDM_DECODER0_CTRL_OFFSET(which));
 	base = ioread64_hi_lo(hdm + CXL_HDM_DECODER0_BASE_LOW_OFFSET(which));


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 508CDC6FD1D
	for <linux-cxl@archiver.kernel.org>; Thu, 30 Mar 2023 17:01:12 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231254AbjC3RBL (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 30 Mar 2023 13:01:11 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:49684 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231796AbjC3RBJ (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 30 Mar 2023 13:01:09 -0400
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id B967CE065
        for <linux-cxl@vger.kernel.org>; Thu, 30 Mar 2023 10:00:43 -0700 (PDT)
Received: from lhrpeml500005.china.huawei.com (unknown [172.18.147.226])
        by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4PnV4H2HJZz6J7SZ;
        Fri, 31 Mar 2023 00:58:39 +0800 (CST)
Received: from localhost (10.48.159.148) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.21; Thu, 30 Mar
 2023 18:00:20 +0100
Date: Thu, 30 Mar 2023 18:00:19 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Dan Williams <dan.j.williams@intel.com>
CC: <linux-cxl@vger.kernel.org>, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <20230330180019.00001b7b@Huawei.com>
In-Reply-To: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.48.159.148]
X-ClientProxiedBy: lhrpeml100005.china.huawei.com (7.191.160.25) To
 lhrpeml500005.china.huawei.com (7.191.163.240)
X-CFilter-Loop: Reflected
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Wed, 29 Mar 2023 14:35:55 -0700
Dan Williams <dan.j.williams@intel.com> wrote:

> One motivation for mapping range registers to decoder objects is
> to use those settings for region autodiscovery.
> 
> The need to map a region for devices programmed to use range registers
> is especially urgent now that the kernel no longer routes "Soft
> Reserved" ranges in the memory map to device-dax by default. The CXL
> memory range loses all access mechanisms.
> 
> Complete the implementation by filling out ways and granularity, marking
> the DPA reservation, and setting the endpoint-decoder state to signal
> autodiscovery.
> 
> Fixes: 09d09e04d2fc ("cxl/dax: Create dax devices for CXL RAM regions")
> Tested-by: Dave Jiang <dave.jiang@intel.com>
> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
> ---
>  drivers/cxl/core/hdm.c |   30 ++++++++++++++++++++++++------
>  1 file changed, 24 insertions(+), 6 deletions(-)
> 
> diff --git a/drivers/cxl/core/hdm.c b/drivers/cxl/core/hdm.c
> index 9884b6d4d930..5339c0719177 100644
> --- a/drivers/cxl/core/hdm.c
> +++ b/drivers/cxl/core/hdm.c
> @@ -738,20 +738,26 @@ static int cxl_decoder_reset(struct cxl_decoder *cxld)
>  	return 0;
>  }
>  
> -static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
> -					    struct cxl_decoder *cxld, int which,
> -					    struct cxl_endpoint_dvsec_info *info)
> +static int cxl_setup_hdm_decoder_from_dvsec(
> +	struct cxl_port *port, struct cxl_decoder *cxld, u64 *dpa_base,
> +	int which, struct cxl_endpoint_dvsec_info *info)
>  {
> +	struct cxl_endpoint_decoder *cxled;
> +	struct range *range;
> +	int rc;
> +
>  	if (!is_cxl_endpoint(port))
>  		return -EOPNOTSUPP;
>  
> -	if (!range_len(&info->dvsec_range[which]))
> +	cxled = to_cxl_endpoint_decoder(&cxld->dev);
> +	range = &info->dvsec_range[which];
> +	if (!range_len(range))

You call range_len(range) quite a few times in here.
I'd be tempted to suggest a more minor diff of

	u64 len;
	...

	len = range_len(&info->dvsec_range[which]);

then use that throughout and don't bother with
the local range variable.

range is a bit odd to keep in a local variable as
it's not immediately obvious it's an hpa range - obviously you
could call it hpa_range which would help, but feels like
the length is the important bit except in one place.

>  		return -ENOENT;
>  
>  	cxld->target_type = CXL_DECODER_EXPANDER;
>  	cxld->commit = NULL;
>  	cxld->reset = NULL;
> -	cxld->hpa_range = info->dvsec_range[which];
> +	cxld->hpa_range = *range;
>  
>  	/*
>  	 * Set the emulated decoder as locked pending additional support to
> @@ -760,6 +766,17 @@ static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
>  	cxld->flags |= CXL_DECODER_F_ENABLE | CXL_DECODER_F_LOCK;
>  	port->commit_end = cxld->id;
>  
> +	rc = devm_cxl_dpa_reserve(cxled, *dpa_base, range_len(range), 0);
> +	if (rc) {
> +		dev_err(&port->dev,
> +			"decoder%d.%d: Failed to reserve DPA range %#llx - %#llx\n (%d)",
> +			port->id, cxld->id, *dpa_base,
> +			*dpa_base + range_len(range) - 1, rc);
> +		return rc;
> +	}
> +	*dpa_base += range_len(range);
> +	cxled->state = CXL_DECODER_STATE_AUTO;
> +
>  	return 0;
>  }
>  
> @@ -779,7 +796,8 @@ static int init_hdm_decoder(struct cxl_port *port, struct cxl_decoder *cxld,
>  	} target_list;
>  
>  	if (should_emulate_decoders(info))
> -		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, which, info);
> +		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, dpa_base,
> +							which, info);
>  
>  	ctrl = readl(hdm + CXL_HDM_DECODER0_CTRL_OFFSET(which));
>  	base = ioread64_hi_lo(hdm + CXL_HDM_DECODER0_BASE_LOW_OFFSET(which));
> 


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 15356C74A5B
	for <linux-cxl@archiver.kernel.org>; Thu, 30 Mar 2023 03:25:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229462AbjC3DZw (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Wed, 29 Mar 2023 23:25:52 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:51860 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229634AbjC3DZv (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Wed, 29 Mar 2023 23:25:51 -0400
Received: from NAM11-DM6-obe.outbound.protection.outlook.com (mail-dm6nam11on2056.outbound.protection.outlook.com [40.107.223.56])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 7632C525E
        for <linux-cxl@vger.kernel.org>; Wed, 29 Mar 2023 20:25:48 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=cRXeY27OMc75z8D4IQEC4L0WA3zcSgzjAYlL616JQA3GfxVVR8VhExv6YOYRpbQE4UEfzhMQToAYLbMiZVkWYWfeLhWQW+wjzujdgH0Uq94kptilzvJ/DwfpjVbUK0ODjk7zuxIE+ErnE0TV391IM/8yxmxCA8hVrh5tJF2yPPaQ3iTI1szAXOMopsIpP+FjWBBYt6B0/p2h/nSNa7y095r2prgsJQsOlsJIbh4AKbuVLjuWnGj4m3JCQTlCEK0Nh9n2hJ86BwEybPTuhAEosIdNsZs70iqG9nodRyoz/Vss87NhZXA5G/R3NZRxffPDBkeuW7P+ydGgtYcRo6OFUg==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=lYw7XXFdlkgI7OPzzOXTCON8AUMGwqUl3sVjg4XqxpQ=;
 b=aaST1m2OHbpqUx/SX8riWKX4lTnZpDWqpebgEuPbAQfGI2pMbsZZHs1lMF1nHpBcHYI/mFi0jRSWUK564uvUnVvk/PWafHCLmQuKZcv24XF66LvpZX/yhoLGOZ3GabZ5osJQlKjYPACeoUH7m1YRniaVQ+zuaWZ063KPKRfwUch2MiPtPUACANtCXR5JnZycd1aXONqN0rQxOO2dkpA0vOgbA0WkQglaU/kU0OtQR56vclTf2eoouIRI8d9fsoGpHmlYgf094esNXsmJT1BHw9ETQoDrOoB6p0fJpgTK/lFoEGS8ZXbxh0dlX4elbcqACQ+DSfcMwZdMd6gzEvRn3g==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=memverge.com; dmarc=pass action=none header.from=memverge.com;
 dkim=pass header.d=memverge.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=memverge.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=lYw7XXFdlkgI7OPzzOXTCON8AUMGwqUl3sVjg4XqxpQ=;
 b=lItGPXIq8aZMnsLiryuLYsBVF9l6ujD/M0iEFOwck5YvfdvosZM/pi9QEOAbsQcMq/pe0bWtG6JbgNSK+xQBR6Pjkiesq3RhWA8pLFZAsyW70TwBbvjhQtYaYKUOSZBm1iaVbHn9oYJjSexnkUICzAAYRycMD4PYFsZFtQrHQRo=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=memverge.com;
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com (2603:10b6:a03:394::19)
 by DS7PR17MB6659.namprd17.prod.outlook.com (2603:10b6:8:e5::17) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6222.30; Thu, 30 Mar
 2023 03:25:45 +0000
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a]) by SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a%5]) with mapi id 15.20.6222.033; Thu, 30 Mar 2023
 03:25:44 +0000
Date: Wed, 29 Mar 2023 12:04:21 -0400
From: Gregory Price <gregory.price@memverge.com>
To: Dan Williams <dan.j.williams@intel.com>
Cc: linux-cxl@vger.kernel.org, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <ZCRhhUDcmypVKu0X@memverge.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
X-ClientProxiedBy: BYAPR08CA0070.namprd08.prod.outlook.com
 (2603:10b6:a03:117::47) To SJ0PR17MB5512.namprd17.prod.outlook.com
 (2603:10b6:a03:394::19)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: SJ0PR17MB5512:EE_|DS7PR17MB6659:EE_
X-MS-Office365-Filtering-Correlation-Id: 00b90cfe-e2dd-4db9-b0a2-08db30ce7248
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: x16fmKDG1jQGmbhNdhnGIFa1pYZYHig+mZoUpHz2DkDUc3a57qaP5WWuTKByMxZLzMCaqh6bTIppwjD77PFr/DD0c3tDv5xQkuIMbmDQx+SeqMQNVO4b618W94oFupbXGvzxyTzFMiZCl0NvsAh0DuAJqoKbhP+A0QmbiiALDCwxFi4O5rYqJ2q7pHkua30VFxk0f0C1auLSnJg27Asdq2M1BpfUTQ7blgKEVi+IMOAUbg0oSqAyFL+aKx5ifHR6jMje0e7ScWN9F8G7SUgk3gQ34906gIXDUVrd8lXsv/K0lHPRdhLo9nBxu/VjBNuMNF8AH9MRuVCCAIZN9UzzB/dEb7rk2xFA1GF2zVBAWYWnr7EeobJXCRIuojYOutV7utuB8NeLuMvr8JCtcZnSFeDtsM1V197BWXcuu/PLh5P6oKLbufMV1QAnbXTEWGHuSFp6xcV7IzuQNJIKNjaW855YYm5xciGBIFdlCUVrRscEx3F2K3ttKtNzm4Q2WbD4XDy/MsvbjZpLMcSMZOSXC/hGaGFOtkhX41daycmq8CJpZ0OfKsILmLHjA3OtwF7t
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SJ0PR17MB5512.namprd17.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(396003)(376002)(366004)(136003)(39840400004)(346002)(451199021)(316002)(478600001)(36756003)(86362001)(5660300002)(8936002)(66556008)(4326008)(44832011)(38100700002)(66476007)(8676002)(2906002)(6916009)(66946007)(6506007)(41300700001)(186003)(6666004)(26005)(6512007)(83380400001)(2616005)(6486002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?+/bPohsm6lSUrnH4E1DEi1Dkz2Luix/xobek6+nuwzn6jXHgWYfYZrrgfkJL?=
 =?us-ascii?Q?yl1RDmsXAvf4xWH659I3//2QiWrJDgdOnbSgAcSWmpx4DYJrB4NoI1vlj/Aw?=
 =?us-ascii?Q?UOwmfYaV3YQl2OsI4NZFfIWu6LyZAfzgKCGVLGRk6JNdwZAN1UgNuvCtTZPF?=
 =?us-ascii?Q?U3RuM/SU9eq0nVG0vIOWV9ej7kvMxxJa87oHKxzzFtr2G47ZtNrAmWJd1hj1?=
 =?us-ascii?Q?uultfUUeaGW2NKSm0++7cNQqakR2EwqQsdsJ8znFx2sjILHzo9ZdrJJDuY3g?=
 =?us-ascii?Q?ggFN5bouOlud9hpd13QZZsDLBhu+s6Zm97m1eribRcAwIPaOWb9/NywJk8ol?=
 =?us-ascii?Q?Wq1pelEal9+y6g9k6TsXLfg4TlVOtq/sVEoEotUP1zx44/DbT4Dl9A4xyt3Y?=
 =?us-ascii?Q?fOc6HHyDLmaF3Nf+n4Fj1GxAVCoBo6arNRkRjjOmcTf5FXVYZAYcsImnGejB?=
 =?us-ascii?Q?x5RpWKcqEjBwSitqNfRcr5FcweL5dQ3x2cNDXp7IfzDltck/FWXJhuFakmXQ?=
 =?us-ascii?Q?2EY0Lz5hDQyps4tWFmz7yFKRgwRETpH7ryhqDRPSJAtkn4Q4+sGcL9CGPnWW?=
 =?us-ascii?Q?/k3xImi4GNICEtvXObDNeYjtQQOpTnclGuos6/58r0nTgyvsslsqGvQ4/w3a?=
 =?us-ascii?Q?dssIr6M/N/gmsCf8oW4ovxJEx2NmfeZnGr5XDfmm8tSaNUoPNzNg65F8m7y+?=
 =?us-ascii?Q?MVDMTYBrF2qXqFGuzMmZSZJ6NCCxTRjH/9/yfzuheBfSSbrZ32k1qkcDS24C?=
 =?us-ascii?Q?utTLzQyBOiCKSN4EgUJ/u+ILni3XOytn4JsbfnQYst4+T/ctyV5svZz4w3E4?=
 =?us-ascii?Q?OqIANxAhJ+ejQylW8MOInO2EcaAPLjek/DAyxjAqr72fTMBu1fbaXDeTcUoD?=
 =?us-ascii?Q?loWIyCDgOQ3Q3Ajk4giDBqQmRzmGAzbt4zkRJSM7PXquUmW69T8Xjr8qrp8U?=
 =?us-ascii?Q?TvrhmPn7R4kQX+KgKXFdHIfTEYQ3S6/ft56fYn4bPH8q36iVVShiUkKpsFoY?=
 =?us-ascii?Q?RjoDVDz3wqTvvcWRuwE6W6grtdcATuPsTHjDSoyIN2anDSdBO4Ifg23Hbmcx?=
 =?us-ascii?Q?gc7Z0ATPGCwS8SXwZM8b0sBuuo9k4R0IE3uT1GPRvmjKprksjJt4MpeWJ4s6?=
 =?us-ascii?Q?IaIY0HeH1yKspi5pBMHQpvekulu9Pl4J61EoqyLXC+yAIb/CQOJkH1HXVvwT?=
 =?us-ascii?Q?cG3gWb0lvm3CuK6hrRHc1DeLBTlMdHxEpuyiFvS7v2mC5ufL+HS6aQR3y89E?=
 =?us-ascii?Q?RzSKlFU3/q6yedGyBz/ZvL1kMfrja/L5zz0dp4RU+b+PnUAg6E9GNCgZyAXg?=
 =?us-ascii?Q?b5b2d4D1Vw/rwyP0QJnTULH700vLeeSHlH4s/AleY57t41jQ++49W5oqNQSj?=
 =?us-ascii?Q?aLst1QpA+YWjhc4Xo89GbPFrFp32IDX9FXgJmol+YHO3nIRQgOb6RnNM2LZf?=
 =?us-ascii?Q?SSLl0ZEU4I9s0FooaG4cNo+pnMUwIZvTX8LhyWZiQhVPEcgvJU4ramknOB5D?=
 =?us-ascii?Q?qYm2ecHjGt9nFxA82OPjM8iisJXcwjYNRsdJXk2YYrR7/A1aXAitU/YbJFnI?=
 =?us-ascii?Q?9hPEZa14mSfuoacqPStXUUTxzp427QhLSUO3Pf9VbElUYwBqi0oKYM9DQ+qk?=
 =?us-ascii?Q?oA=3D=3D?=
X-OriginatorOrg: memverge.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 00b90cfe-e2dd-4db9-b0a2-08db30ce7248
X-MS-Exchange-CrossTenant-AuthSource: SJ0PR17MB5512.namprd17.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Mar 2023 03:25:44.4811
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 5c90cb59-37e7-4c81-9c07-00473d5fb682
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: FNy82wf81uQjr5LCJ1R+xpAHYRNKklI0qUj8bHeJ6vUDju97Fn/UbT/HihbsnEl2AAVImefeK2JtxB5hY+HfssI1/Nr+Nj8/tiH2UFbjZGQ=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS7PR17MB6659
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Wed, Mar 29, 2023 at 02:35:55PM -0700, Dan Williams wrote:
> One motivation for mapping range registers to decoder objects is
> to use those settings for region autodiscovery.
> 
> The need to map a region for devices programmed to use range registers
> is especially urgent now that the kernel no longer routes "Soft
> Reserved" ranges in the memory map to device-dax by default. The CXL
> memory range loses all access mechanisms.
> 
> Complete the implementation by filling out ways and granularity, marking
> the DPA reservation, and setting the endpoint-decoder state to signal
> autodiscovery.
> 
> Fixes: 09d09e04d2fc ("cxl/dax: Create dax devices for CXL RAM regions")
> Tested-by: Dave Jiang <dave.jiang@intel.com>
> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
> ---
>  drivers/cxl/core/hdm.c |   30 ++++++++++++++++++++++++------
>  1 file changed, 24 insertions(+), 6 deletions(-)
> 
> diff --git a/drivers/cxl/core/hdm.c b/drivers/cxl/core/hdm.c
> index 9884b6d4d930..5339c0719177 100644
> --- a/drivers/cxl/core/hdm.c
> +++ b/drivers/cxl/core/hdm.c
> @@ -738,20 +738,26 @@ static int cxl_decoder_reset(struct cxl_decoder *cxld)
>  	return 0;
>  }
>  
> -static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
> -					    struct cxl_decoder *cxld, int which,
> -					    struct cxl_endpoint_dvsec_info *info)
> +static int cxl_setup_hdm_decoder_from_dvsec(
> +	struct cxl_port *port, struct cxl_decoder *cxld, u64 *dpa_base,
> +	int which, struct cxl_endpoint_dvsec_info *info)
>  {
> +	struct cxl_endpoint_decoder *cxled;
> +	struct range *range;
> +	int rc;
> +
>  	if (!is_cxl_endpoint(port))
>  		return -EOPNOTSUPP;
>  
> -	if (!range_len(&info->dvsec_range[which]))
> +	cxled = to_cxl_endpoint_decoder(&cxld->dev);
> +	range = &info->dvsec_range[which];
> +	if (!range_len(range))
>  		return -ENOENT;
>  
>  	cxld->target_type = CXL_DECODER_EXPANDER;
>  	cxld->commit = NULL;
>  	cxld->reset = NULL;
> -	cxld->hpa_range = info->dvsec_range[which];
> +	cxld->hpa_range = *range;
>  
>  	/*
>  	 * Set the emulated decoder as locked pending additional support to
> @@ -760,6 +766,17 @@ static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
>  	cxld->flags |= CXL_DECODER_F_ENABLE | CXL_DECODER_F_LOCK;
>  	port->commit_end = cxld->id;
>  
> +	rc = devm_cxl_dpa_reserve(cxled, *dpa_base, range_len(range), 0);

I have an example host where *dpa_base ends up being 0x0 here, and as a
result later down the line the region fails to register with this:

[   21.974117] cxl_pci 0000:3f:00.0: mem0:decoder1.0 no CXL window for range 0x0:0x1fffffffff

this traces back to here:

int devm_cxl_enumerate_decoders(struct cxl_hdm *cxlhdm,
                                struct cxl_endpoint_dvsec_info *info)
{
        u64 dpa_base = 0;    <- dpa_base is set to 0 and never updated
...
        for (i = 0; i < cxlhdm->decoder_count; i++) {
...
                rc = init_hdm_decoder(port, cxld, target_map, hdm, i,
                                      &dpa_base, info);
}


static int init_hdm_decoder(struct cxl_port *port, struct cxl_decoder *cxld,
                            int *target_map, void __iomem *hdm, int which,
                            u64 *dpa_base, struct cxl_endpoint_dvsec_info *info)
{
... passed directly into here
        if (should_emulate_decoders(info))
                return cxl_setup_hdm_decoder_from_dvsec(port, cxld, dpa_base,
                                                        which, info);
...
}

static int cxl_setup_hdm_decoder_from_dvsec(
        struct cxl_port *port, struct cxl_decoder *cxld, u64 *dpa_base,
        int which, struct cxl_endpoint_dvsec_info *info)
{
        rc = devm_cxl_dpa_reserve(cxled, *dpa_base, range_len(range), 0);
        if (rc) {
                dev_err(&port->dev,
                        "decoder%d.%d: Failed to reserve DPA range %#llx - %#llx\n (%d)",
                        port->id, cxld->id, *dpa_base,
                        *dpa_base + range_len(range) - 1, rc);
                return rc;
        }
        *dpa_base += range_len(range);
        cxled->state = CXL_DECODER_STATE_AUTO;

        return 0;
}


(full cxl log with bonus prints i added)
[   21.607034] cxl_pci 0000:3f:00.0: No component registers (-19)
[   21.641831] cxl_pci 0000:3f:00.0: DOE: [d80] failed to cache protocols : -5
[   21.642866] cxl_pci 0000:3f:00.0: Failed to create MB object for MB @ d80
[   21.643686] cxl_pci 0000:3f:00.0: Failed to request region 0x0000000000001fff-0x000000000010201e
[   21.644371] cxl add_dpa_res: (0, 1fffffffff)
[   21.645540] cxl add_dpa_res: (2000000000, 1fffffffff)
[   21.965692] cxl hdm dvsec range: (0, 1fffffffff)
[   21.967045] cxl emulating decoders: dpa_base(0)   <-  *dpa_base
[   21.967778] cxl_add_to_region: searching for root decoder with address range(0, 1fffffffff)
[   21.972824] cxl match decoder: found root decoder, r1(1050000000, 304fffffff) r2(0, 1fffffffff)
[   21.974117] cxl_pci 0000:3f:00.0: mem0:decoder1.0 no CXL window for range 0x0:0x1fffffffff
[   21.974905] cxl discover_region: failed to add to region: 0x0-0x1fffffffff



Ultimately having trouble deciding if this is something broken with
bios, the setup_hdm_decoder code, or the discover_region code.  I'm not
PCI guru, but we should expect the rdm dvsec range to be in the range of
the root decoder window / CFMW:  r1(1050000000, 304fffffff)


confirming this is the issue, i *forced* the dvsec range register to read
out base+0x1050000000


diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
index 7328a2552411..6fc6df0f7b5a 100644
--- a/drivers/cxl/core/pci.c
+++ b/drivers/cxl/core/pci.c
@@ -340,12 +344,16 @@ int cxl_dvsec_rr_decode(struct device *dev, int d,
                if (rc)
                        return rc;

                base |= temp & CXL_DVSEC_MEM_BASE_LOW_MASK;

                info->dvsec_range[i] = (struct range) {
-                       .start = base,
-                       .end = base + size - 1
+                       .start = 0x1050000000 + base,
+                       .end = 0x1050000000 + base + size - 1
                };


And this resulted in everything working "as one would expect"

[user@host0 ~]# ls /sys/bus/cxl/devices/
dax_region0  decoder0.0  decoder1.0  endpoint1  mem0  region0  root0

[user@host0 ~]# numactl --hardware
available: 2 nodes (0-1)
node 1 cpus:
node 1 size: 0 MB
node 1 free: 0 MB
node distances:
node   0   1
  0:  10  50
  1:  255  10

[user@host0 ~]# echo online_movable > /sys/bus/node/devices/node1/memory33/state
[user@host0 ~]# numactl --hardware
available: 2 nodes (0-1)
node 1 size: 2048 MB
node 1 free: 2048 MB
node distances:
node   0   1
  0:  10  50
  1:  255  10


Basically the question is:

Is the DVSEC Range Register expected to be programmed by bios, and are
not being programmed correctly?

Or is there something else missing here to correct for the CMFW base?



If it's the former, then this patch set is gtg and i'm happy to add my
Tested-by tag.  If it's the latter, can we hotfix it before release?



> +	if (rc) {
> +		dev_err(&port->dev,
> +			"decoder%d.%d: Failed to reserve DPA range %#llx - %#llx\n (%d)",
> +			port->id, cxld->id, *dpa_base,
> +			*dpa_base + range_len(range) - 1, rc);
> +		return rc;
> +	}
> +	*dpa_base += range_len(range);
> +	cxled->state = CXL_DECODER_STATE_AUTO;
> +
>  	return 0;
>  }
>  
> @@ -779,7 +796,8 @@ static int init_hdm_decoder(struct cxl_port *port, struct cxl_decoder *cxld,
>  	} target_list;
>  
>  	if (should_emulate_decoders(info))
> -		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, which, info);
> +		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, dpa_base,
> +							which, info);
>  
>  	ctrl = readl(hdm + CXL_HDM_DECODER0_CTRL_OFFSET(which));
>  	base = ioread64_hi_lo(hdm + CXL_HDM_DECODER0_BASE_LOW_OFFSET(which));
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id A7F82C74A5B
	for <linux-cxl@archiver.kernel.org>; Thu, 30 Mar 2023 00:06:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229886AbjC3AG4 (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Wed, 29 Mar 2023 20:06:56 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:34024 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229560AbjC3AG4 (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Wed, 29 Mar 2023 20:06:56 -0400
Received: from mga04.intel.com (mga04.intel.com [192.55.52.120])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 0E0382D48
        for <linux-cxl@vger.kernel.org>; Wed, 29 Mar 2023 17:06:54 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1680134815; x=1711670815;
  h=message-id:date:mime-version:subject:to:references:from:
   in-reply-to:content-transfer-encoding;
  bh=dGadilSoT9Vj9/AI9sz+osqg9wohVe/t5ElMIIGFvR0=;
  b=BdLLussT8jAhSmw7dM9V3RCjMFaDHNhRld6BWPENreeixO83Ti5G4JEM
   tgDDWyqNA7TKG7oMestpU9UiTB9jHGBkLw/vPW4G+5ARZMYtuatkWgVZ9
   UVzHp0pU6WpTIJ+lMmI+0WghHN0tz7X9iq8GsYbxQDWTRZ112uZw134MC
   kBc6g5zY0/aj+GQVYzP4DoAU4MuXtnSS1+FefUtfcKkTK57eEP5Bn19Bs
   Cjk8Lb8FE3qIkrPap8KJ7qpEn9K+ZAt9BMNZhUbOFkubU6YbISXOOH7In
   qe9goCkjsRAiij4YhECoN+tpDeCwkkW7maUE/G2LOlXoRF8gtGRW7r5SK
   Q==;
X-IronPort-AV: E=McAfee;i="6600,9927,10664"; a="339752773"
X-IronPort-AV: E=Sophos;i="5.98,301,1673942400"; 
   d="scan'208";a="339752773"
Received: from orsmga001.jf.intel.com ([10.7.209.18])
  by fmsmga104.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 29 Mar 2023 17:06:42 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10664"; a="717098550"
X-IronPort-AV: E=Sophos;i="5.98,301,1673942400"; 
   d="scan'208";a="717098550"
Received: from sandrew-mobl2.amr.corp.intel.com (HELO [10.212.109.34]) ([10.212.109.34])
  by orsmga001-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 29 Mar 2023 17:06:41 -0700
Message-ID: <bfdc6772-e62c-e950-415d-a5b3d502295a@intel.com>
Date: Wed, 29 Mar 2023 17:06:41 -0700
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Firefox/102.0 Thunderbird/102.9.0
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for region
 enumeration
Content-Language: en-US
To: Dan Williams <dan.j.williams@intel.com>, linux-cxl@vger.kernel.org
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
From: Dave Jiang <dave.jiang@intel.com>
In-Reply-To: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org



On 3/29/23 2:35 PM, Dan Williams wrote:
> One motivation for mapping range registers to decoder objects is
> to use those settings for region autodiscovery.
> 
> The need to map a region for devices programmed to use range registers
> is especially urgent now that the kernel no longer routes "Soft
> Reserved" ranges in the memory map to device-dax by default. The CXL
> memory range loses all access mechanisms.
> 
> Complete the implementation by filling out ways and granularity, marking

Where is the ways and granularity set done in code?

DJ

> the DPA reservation, and setting the endpoint-decoder state to signal
> autodiscovery.
> 
> Fixes: 09d09e04d2fc ("cxl/dax: Create dax devices for CXL RAM regions")
> Tested-by: Dave Jiang <dave.jiang@intel.com>
> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
> ---
>   drivers/cxl/core/hdm.c |   30 ++++++++++++++++++++++++------
>   1 file changed, 24 insertions(+), 6 deletions(-)
> 
> diff --git a/drivers/cxl/core/hdm.c b/drivers/cxl/core/hdm.c
> index 9884b6d4d930..5339c0719177 100644
> --- a/drivers/cxl/core/hdm.c
> +++ b/drivers/cxl/core/hdm.c
> @@ -738,20 +738,26 @@ static int cxl_decoder_reset(struct cxl_decoder *cxld)
>   	return 0;
>   }
>   
> -static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
> -					    struct cxl_decoder *cxld, int which,
> -					    struct cxl_endpoint_dvsec_info *info)
> +static int cxl_setup_hdm_decoder_from_dvsec(
> +	struct cxl_port *port, struct cxl_decoder *cxld, u64 *dpa_base,
> +	int which, struct cxl_endpoint_dvsec_info *info)
>   {
> +	struct cxl_endpoint_decoder *cxled;
> +	struct range *range;
> +	int rc;
> +
>   	if (!is_cxl_endpoint(port))
>   		return -EOPNOTSUPP;
>   
> -	if (!range_len(&info->dvsec_range[which]))
> +	cxled = to_cxl_endpoint_decoder(&cxld->dev);
> +	range = &info->dvsec_range[which];
> +	if (!range_len(range))
>   		return -ENOENT;
>   
>   	cxld->target_type = CXL_DECODER_EXPANDER;
>   	cxld->commit = NULL;
>   	cxld->reset = NULL;
> -	cxld->hpa_range = info->dvsec_range[which];
> +	cxld->hpa_range = *range;
>   
>   	/*
>   	 * Set the emulated decoder as locked pending additional support to
> @@ -760,6 +766,17 @@ static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
>   	cxld->flags |= CXL_DECODER_F_ENABLE | CXL_DECODER_F_LOCK;
>   	port->commit_end = cxld->id;
>   
> +	rc = devm_cxl_dpa_reserve(cxled, *dpa_base, range_len(range), 0);
> +	if (rc) {
> +		dev_err(&port->dev,
> +			"decoder%d.%d: Failed to reserve DPA range %#llx - %#llx\n (%d)",
> +			port->id, cxld->id, *dpa_base,
> +			*dpa_base + range_len(range) - 1, rc);
> +		return rc;
> +	}
> +	*dpa_base += range_len(range);
> +	cxled->state = CXL_DECODER_STATE_AUTO;
> +
>   	return 0;
>   }
>   
> @@ -779,7 +796,8 @@ static int init_hdm_decoder(struct cxl_port *port, struct cxl_decoder *cxld,
>   	} target_list;
>   
>   	if (should_emulate_decoders(info))
> -		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, which, info);
> +		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, dpa_base,
> +							which, info);
>   
>   	ctrl = readl(hdm + CXL_HDM_DECODER0_CTRL_OFFSET(which));
>   	base = ioread64_hi_lo(hdm + CXL_HDM_DECODER0_BASE_LOW_OFFSET(which));
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id D476FC6FD18
	for <linux-cxl@archiver.kernel.org>; Wed, 29 Mar 2023 21:37:05 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229806AbjC2VhF (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Wed, 29 Mar 2023 17:37:05 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:33050 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229767AbjC2Vgq (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Wed, 29 Mar 2023 17:36:46 -0400
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 2B77730C7
        for <linux-cxl@vger.kernel.org>; Wed, 29 Mar 2023 14:36:45 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1680125805; x=1711661805;
  h=subject:from:to:cc:date:message-id:mime-version:
   content-transfer-encoding;
  bh=iZ//7D047zw5T0ln0QtvlZLMdWGyeOLrS+N9cbPIoVc=;
  b=myo5HvxNoAfp4ax4b3UGdCao1ksmkoyyH/pY/rt+U6UWsMzVDr8BjjqZ
   T6T55cgTl61OPMwm0QC+Y3jMdS2VMNdj3oUBgz9+7Faj/j6ExAJiXAV9g
   sEMNaWN2qudwmLs30UyPAPJpCfRahhCiewCuEmOP+m+5AHQXh52uv0jvw
   h9moJvmYErrI09c4QKWoz1+NHdnG3DVbv6KB0yPI8W2fGpovrPhPawu2u
   N52HHp6uG/S0MI+c5KFyARDKtXs0WYN+8m5EPz9Ezg6AsJArQ3coMJYjL
   TjTspxIMFvJ9/b3PMdnHudCQC2j+dfTaWKFVzZXf5nSP0WWiXH3eUb9Zw
   w==;
X-IronPort-AV: E=McAfee;i="6600,9927,10664"; a="321391436"
X-IronPort-AV: E=Sophos;i="5.98,301,1673942400"; 
   d="scan'208";a="321391436"
Received: from fmsmga004.fm.intel.com ([10.253.24.48])
  by fmsmga107.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 29 Mar 2023 14:35:58 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10664"; a="753754492"
X-IronPort-AV: E=Sophos;i="5.98,301,1673942400"; 
   d="scan'208";a="753754492"
Received: from zmutlu-mobl.amr.corp.intel.com (HELO dwillia2-xfh.jf.intel.com) ([10.212.176.100])
  by fmsmga004-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 29 Mar 2023 14:35:55 -0700
Subject: [PATCH] cxl/hdm: Extend DVSEC range register emulation for region
 enumeration
From: Dan Williams <dan.j.williams@intel.com>
To: linux-cxl@vger.kernel.org
Cc: Dave Jiang <dave.jiang@intel.com>
Date: Wed, 29 Mar 2023 14:35:55 -0700
Message-ID: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
User-Agent: StGit/0.18-3-g996c
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

One motivation for mapping range registers to decoder objects is
to use those settings for region autodiscovery.

The need to map a region for devices programmed to use range registers
is especially urgent now that the kernel no longer routes "Soft
Reserved" ranges in the memory map to device-dax by default. The CXL
memory range loses all access mechanisms.

Complete the implementation by filling out ways and granularity, marking
the DPA reservation, and setting the endpoint-decoder state to signal
autodiscovery.

Fixes: 09d09e04d2fc ("cxl/dax: Create dax devices for CXL RAM regions")
Tested-by: Dave Jiang <dave.jiang@intel.com>
Signed-off-by: Dan Williams <dan.j.williams@intel.com>
---
 drivers/cxl/core/hdm.c |   30 ++++++++++++++++++++++++------
 1 file changed, 24 insertions(+), 6 deletions(-)

diff --git a/drivers/cxl/core/hdm.c b/drivers/cxl/core/hdm.c
index 9884b6d4d930..5339c0719177 100644
--- a/drivers/cxl/core/hdm.c
+++ b/drivers/cxl/core/hdm.c
@@ -738,20 +738,26 @@ static int cxl_decoder_reset(struct cxl_decoder *cxld)
 	return 0;
 }
 
-static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
-					    struct cxl_decoder *cxld, int which,
-					    struct cxl_endpoint_dvsec_info *info)
+static int cxl_setup_hdm_decoder_from_dvsec(
+	struct cxl_port *port, struct cxl_decoder *cxld, u64 *dpa_base,
+	int which, struct cxl_endpoint_dvsec_info *info)
 {
+	struct cxl_endpoint_decoder *cxled;
+	struct range *range;
+	int rc;
+
 	if (!is_cxl_endpoint(port))
 		return -EOPNOTSUPP;
 
-	if (!range_len(&info->dvsec_range[which]))
+	cxled = to_cxl_endpoint_decoder(&cxld->dev);
+	range = &info->dvsec_range[which];
+	if (!range_len(range))
 		return -ENOENT;
 
 	cxld->target_type = CXL_DECODER_EXPANDER;
 	cxld->commit = NULL;
 	cxld->reset = NULL;
-	cxld->hpa_range = info->dvsec_range[which];
+	cxld->hpa_range = *range;
 
 	/*
 	 * Set the emulated decoder as locked pending additional support to
@@ -760,6 +766,17 @@ static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
 	cxld->flags |= CXL_DECODER_F_ENABLE | CXL_DECODER_F_LOCK;
 	port->commit_end = cxld->id;
 
+	rc = devm_cxl_dpa_reserve(cxled, *dpa_base, range_len(range), 0);
+	if (rc) {
+		dev_err(&port->dev,
+			"decoder%d.%d: Failed to reserve DPA range %#llx - %#llx\n (%d)",
+			port->id, cxld->id, *dpa_base,
+			*dpa_base + range_len(range) - 1, rc);
+		return rc;
+	}
+	*dpa_base += range_len(range);
+	cxled->state = CXL_DECODER_STATE_AUTO;
+
 	return 0;
 }
 
@@ -779,7 +796,8 @@ static int init_hdm_decoder(struct cxl_port *port, struct cxl_decoder *cxld,
 	} target_list;
 
 	if (should_emulate_decoders(info))
-		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, which, info);
+		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, dpa_base,
+							which, info);
 
 	ctrl = readl(hdm + CXL_HDM_DECODER0_CTRL_OFFSET(which));
 	base = ioread64_hi_lo(hdm + CXL_HDM_DECODER0_BASE_LOW_OFFSET(which));


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 22BD8C6FD1D
	for <linux-cxl@archiver.kernel.org>; Tue,  4 Apr 2023 09:19:25 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233955AbjDDJTY (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Tue, 4 Apr 2023 05:19:24 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:53334 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S234142AbjDDJTW (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Tue, 4 Apr 2023 05:19:22 -0400
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id BE7D41982
        for <linux-cxl@vger.kernel.org>; Tue,  4 Apr 2023 02:19:13 -0700 (PDT)
Received: from lhrpeml500005.china.huawei.com (unknown [172.18.147.200])
        by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4PrMYD6lxdz67YXJ;
        Tue,  4 Apr 2023 17:15:12 +0800 (CST)
Received: from localhost (10.202.227.76) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.23; Tue, 4 Apr
 2023 10:19:10 +0100
Date: Tue, 4 Apr 2023 10:19:09 +0100
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Dan Williams <dan.j.williams@intel.com>
CC: <linux-cxl@vger.kernel.org>, Dave Jiang <dave.jiang@intel.com>,
        "Gregory Price" <gregory.price@memverge.com>
Subject: Re: [PATCH v2] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <20230404101909.0000695a@Huawei.com>
In-Reply-To: <168056315526.436217.14417826023537916154.stgit@dwillia2-xfh.jf.intel.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
        <168056315526.436217.14417826023537916154.stgit@dwillia2-xfh.jf.intel.com>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.202.227.76]
X-ClientProxiedBy: lhrpeml100006.china.huawei.com (7.191.160.224) To
 lhrpeml500005.china.huawei.com (7.191.163.240)
X-CFilter-Loop: Reflected
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Mon, 03 Apr 2023 16:06:14 -0700
Dan Williams <dan.j.williams@intel.com> wrote:

> One motivation for mapping range registers to decoder objects is
> to use those settings for region autodiscovery.
> 
> The need to map a region for devices programmed to use range registers
> is especially urgent now that the kernel no longer routes "Soft
> Reserved" ranges in the memory map to device-dax by default. The CXL
> memory range loses all access mechanisms.
> 
> Complete the implementation by filling out ways and granularity, marking
> the DPA reservation, and setting the endpoint-decoder state to signal
> autodiscovery.
> 
> Fixes: 09d09e04d2fc ("cxl/dax: Create dax devices for CXL RAM regions")
> Tested-by: Dave Jiang <dave.jiang@intel.com>
> Tested-by: Gregory Price <gregory.price@memverge.com>
> Link: https://lore.kernel.org/r/168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com
> Signed-off-by: Dan Williams <dan.j.williams@intel.com>
LGTM

Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

> ---
> Changes since v1:
> - Swap out the local @range variable which was mostly only used for the
>   mapping length with a @len variable for that purpose (Jonathan)
> 
>  drivers/cxl/core/hdm.c |   27 ++++++++++++++++++++++-----
>  1 file changed, 22 insertions(+), 5 deletions(-)
> 
> diff --git a/drivers/cxl/core/hdm.c b/drivers/cxl/core/hdm.c
> index 9884b6d4d930..02cc2c38b44b 100644
> --- a/drivers/cxl/core/hdm.c
> +++ b/drivers/cxl/core/hdm.c
> @@ -738,14 +738,20 @@ static int cxl_decoder_reset(struct cxl_decoder *cxld)
>  	return 0;
>  }
>  
> -static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
> -					    struct cxl_decoder *cxld, int which,
> -					    struct cxl_endpoint_dvsec_info *info)
> +static int cxl_setup_hdm_decoder_from_dvsec(
> +	struct cxl_port *port, struct cxl_decoder *cxld, u64 *dpa_base,
> +	int which, struct cxl_endpoint_dvsec_info *info)
>  {
> +	struct cxl_endpoint_decoder *cxled;
> +	u64 len;
> +	int rc;
> +
>  	if (!is_cxl_endpoint(port))
>  		return -EOPNOTSUPP;
>  
> -	if (!range_len(&info->dvsec_range[which]))
> +	cxled = to_cxl_endpoint_decoder(&cxld->dev);
> +	len = range_len(&info->dvsec_range[which]);
> +	if (!len)
>  		return -ENOENT;
>  
>  	cxld->target_type = CXL_DECODER_EXPANDER;
> @@ -760,6 +766,16 @@ static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
>  	cxld->flags |= CXL_DECODER_F_ENABLE | CXL_DECODER_F_LOCK;
>  	port->commit_end = cxld->id;
>  
> +	rc = devm_cxl_dpa_reserve(cxled, *dpa_base, len, 0);
> +	if (rc) {
> +		dev_err(&port->dev,
> +			"decoder%d.%d: Failed to reserve DPA range %#llx - %#llx\n (%d)",
> +			port->id, cxld->id, *dpa_base, *dpa_base + len - 1, rc);
> +		return rc;
> +	}
> +	*dpa_base += len;
> +	cxled->state = CXL_DECODER_STATE_AUTO;
> +
>  	return 0;
>  }
>  
> @@ -779,7 +795,8 @@ static int init_hdm_decoder(struct cxl_port *port, struct cxl_decoder *cxld,
>  	} target_list;
>  
>  	if (should_emulate_decoders(info))
> -		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, which, info);
> +		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, dpa_base,
> +							which, info);
>  
>  	ctrl = readl(hdm + CXL_HDM_DECODER0_CTRL_OFFSET(which));
>  	base = ioread64_hi_lo(hdm + CXL_HDM_DECODER0_BASE_LOW_OFFSET(which));
> 


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 096EBC76188
	for <linux-cxl@archiver.kernel.org>; Tue,  4 Apr 2023 00:08:36 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229446AbjDDAIf (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Mon, 3 Apr 2023 20:08:35 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:38498 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231468AbjDDAId (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Mon, 3 Apr 2023 20:08:33 -0400
Received: from mga06.intel.com (mga06b.intel.com [134.134.136.31])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 5AB2E3C14
        for <linux-cxl@vger.kernel.org>; Mon,  3 Apr 2023 17:08:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1680566912; x=1712102912;
  h=date:from:to:cc:subject:message-id:references:
   in-reply-to:mime-version;
  bh=kAphUKoMSJlF3whUDEyzj2wjGeE5U3I1sjjrlT26QGQ=;
  b=f4Le11QT3x6CR4f8YU0IYmOw9Fan8TT0PzhWt4vxLQWmMwacfIUv7nFk
   352f/GU0sWkDr71AaCP3DachQcfdmUfydfIY4ZpdXAePlAJTyrYHbolro
   i7tRQudSdrfhIqsf0DFfRqtptYTcVKPwYnnM1POIJoojJU5FP3QhclMHA
   GpGSv9kQu9R4re6Rl3IFTvoKJK5fzz7/+GdKa1V1f9ivBUrubOuySw+ao
   f5aHwBSH0I2rKJJ4xP0P5VgPX2MeImB3Kmf9PlYFKVPxXLlmJ6ggb/iNK
   dR0FIP67QU25igKnM9r2aEoRZyf1AJeiodB4RjPClQxN+mwhEZScFNTS2
   w==;
X-IronPort-AV: E=McAfee;i="6600,9927,10669"; a="404807227"
X-IronPort-AV: E=Sophos;i="5.98,316,1673942400"; 
   d="scan'208";a="404807227"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
  by orsmga104.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 03 Apr 2023 17:08:31 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10669"; a="797284389"
X-IronPort-AV: E=Sophos;i="5.98,316,1673942400"; 
   d="scan'208";a="797284389"
Received: from fmsmsx601.amr.corp.intel.com ([10.18.126.81])
  by fmsmga002.fm.intel.com with ESMTP; 03 Apr 2023 17:08:30 -0700
Received: from fmsmsx610.amr.corp.intel.com (10.18.126.90) by
 fmsmsx601.amr.corp.intel.com (10.18.126.81) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21; Mon, 3 Apr 2023 17:08:30 -0700
Received: from fmsmsx610.amr.corp.intel.com (10.18.126.90) by
 fmsmsx610.amr.corp.intel.com (10.18.126.90) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21; Mon, 3 Apr 2023 17:08:30 -0700
Received: from FMSEDG603.ED.cps.intel.com (10.1.192.133) by
 fmsmsx610.amr.corp.intel.com (10.18.126.90) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21 via Frontend Transport; Mon, 3 Apr 2023 17:08:30 -0700
Received: from NAM12-DM6-obe.outbound.protection.outlook.com (104.47.59.172)
 by edgegateway.intel.com (192.55.55.68) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.21; Mon, 3 Apr 2023 17:08:29 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=E69WIFCERWOlcULxoGVMyd0Uu6R7XkrdWNvbA/LwNsRn71eP1KEL1UhFUjrdEPW03zpIuXUk2eUF47KG1g1ArkCDi3NKFjujeueU4LGbwRphLK7o360ZZTMVKaYRM3FrhhebsELFehSRHOi4VM0M2lO9yBeX4CJSv60VgrB/a43eyMVd8QcQZyzWkhxBWDhQZuxjmWPnjOM9t7J5iMJcRbe61kNYN2D1yghdlNTj49iQ+uu5kNe2mCD65Mak0YVRYs+Y/oFm/a5Q12j6y/8fDkUZ/wso5+IF2wjZnRfTAV1+eJJJVW4PYLkTKDM81uMyNanOiIjJ4vnqbcszk++vKA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=/M9iJsfGx8Ad7Lx+v6hPa/tBy5eN7VQVnZ/a8DeAAq4=;
 b=RhYqdtPEFKEQZa4QDsyQL356vUI4/Qw/XUiHEE4YRmDcmjVGU7HfmDSKIgXoMavf+Gzj6yCcax+SPMeA0R19sMW5cFY0JX7Q0IGGNeze0JAplnFqouPAHjFp1skjYsF5IJZZF1l2HgQSZ3s+7NLj+cz2PXZAnwDAOXWnbQ7/or3vBrpJjs9leMDlls632SUdzUbUv5VdTOhkEDnVI8unl9Jy4AbDXTTi0V2cDH4fuZdG5YAkNq3s9KsFfjMRJqNJOajHYYyrQ0JqkChp7TQz7YoWpmMJn6A46aNGV9O6eLTwMRmcFrSh9I/3vxxkNQFJ0o4jGm0KZvqAkdJvTJsG+A==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by CH3PR11MB7201.namprd11.prod.outlook.com (2603:10b6:610:143::10) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6254.33; Tue, 4 Apr
 2023 00:08:28 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::ffa1:410b:20b3:6233]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::ffa1:410b:20b3:6233%5]) with mapi id 15.20.6254.033; Tue, 4 Apr 2023
 00:08:28 +0000
Date: Mon, 3 Apr 2023 17:08:26 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Dave Jiang <dave.jiang@intel.com>,
        Dan Williams <dan.j.williams@intel.com>,
        <linux-cxl@vger.kernel.org>
CC: Gregory Price <gregory.price@memverge.com>
Subject: Re: [PATCH v2] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <642b6a7a3b806_29cc29486@dwillia2-xfh.jf.intel.com.notmuch>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <168056315526.436217.14417826023537916154.stgit@dwillia2-xfh.jf.intel.com>
 <1dc1b324-8e77-f98d-3fd0-a20cbf328d2f@intel.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <1dc1b324-8e77-f98d-3fd0-a20cbf328d2f@intel.com>
X-ClientProxiedBy: BYAPR06CA0020.namprd06.prod.outlook.com
 (2603:10b6:a03:d4::33) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|CH3PR11MB7201:EE_
X-MS-Office365-Filtering-Correlation-Id: 1421dc61-5967-4880-edc5-08db34a0b755
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: crpvIzUq8IT+7Mcy5MDmJmHXv6yzv2eE2z4n/l1gOO+E2bIHnHePhSmK8f05Lk5K9DCJ2evHXiyl2hQtJInGrgFllXqdjUIYLcgWjQOxmLfwca2vW4NlZz3GhHLJ4p34DLlR39XRiPkGsoFydCFr8gLMxydqgZDQCoQqIg+U5VxOHw8fNhRk47491zzN/s1EVN/P5amBoIG6aR/DyyWT2p+QcCk9u9Gvzv0ujOP5vEtt/1SNwHxHqyrxu/JOBHakBY2Cd/e2d6i8tV+CooL83xU958TXRCi3FFpku8uihuTgfLTBGqi+SwHWJmH5hZKN6F/qXXGk4GR0i0XaXH628B/WQC0obUyOChHhEFPf8XDnyQkXQzYrdVTlhMm63mIHcm+X5QlgKxcQnM9LlJcXqHJ93QEWoeYH9P6rJh8No6pkt9igD3Rb+9bhtP2wMYr7BvigDpmbrG3CPc9zILDspeCFw6XDNQQ1UeE4zHAHE0p+c0jC2r7qjAKRioZSw3CfFDI2lLgJzOac3sULtF5ZOYtEzB8Tz55Aw2IcpgXDj1WOVD+/6M/yStL4QiN3klN8
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(39860400002)(136003)(376002)(396003)(346002)(366004)(451199021)(478600001)(4326008)(66556008)(8676002)(66476007)(66946007)(110136005)(8936002)(316002)(41300700001)(82960400001)(5660300002)(38100700002)(186003)(53546011)(83380400001)(9686003)(6486002)(26005)(6506007)(6512007)(86362001)(2906002);DIR:OUT;SFP:1102;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?Gyl1dG06Cg1TzUb/tWW/NFIwnGVvzDEgvGsPjO2PQrZTmEOUyuolnvF1nIYi?=
 =?us-ascii?Q?2OnjfQap40RHOztiUYQRo9oRK5u1ITb7VGetD9iPF23Hj3up2bZQZf+fsa2H?=
 =?us-ascii?Q?S9veu1nmc3Dp7iomyNwcDe+raMBq/+CdXsSAzdcQ2oRg/6bdF1bFM+u2Tcy1?=
 =?us-ascii?Q?nc96al5lSqUvwR9s0fVENt2InV2VMStEjTre7rGA6zXG7XTqb8G4HmucACmH?=
 =?us-ascii?Q?RCzwOhqW1ivdj5FLRgbAp3aGxsxlOMRXoxIK+ChrIMihM1wflRI6Bz/WBFuB?=
 =?us-ascii?Q?JxLEG0HsmkEvQyLMavPrvgYQaQAA40mmo8Y4cNQRSbahhTsrzUEznL9eZljd?=
 =?us-ascii?Q?bjQ1y6Sx6KVSlwKVSL1mEeVqyJ+5tNkEib5wuOzTYXOQlVXqndDKl8e5UAyi?=
 =?us-ascii?Q?RjEnnWCbyAljDD2Slj6dMKQkiKv2mBg0bVX5YdapQgPoY6fBni2Z099uW8vE?=
 =?us-ascii?Q?pqHrG2SJXgLll89Yyh7YDfBEXc7qriUwUuhz73bu96kxPOZPuhlWCY5PtpGp?=
 =?us-ascii?Q?65X+WNFD6yo98B1BHBvfSgnclbG0KK5QUolKoBqQSx4bVJRslCZL/9TjyHf1?=
 =?us-ascii?Q?VtAxaaPE6tKEWttOh1kKRwE5vpLt5zH89NDTXZGX0McJ4vhzbCrHmOTgPS1s?=
 =?us-ascii?Q?ShKwVglHRU9v1eN9wt6ZfC2pRAkpZ8Kq2NgXooIyQZSTwOD5bKLA1geYe1Vb?=
 =?us-ascii?Q?vjYQ15DIOOsOBsEVkd+qqVLq1MhZl29TuWyiEc3cYWzWOeN8SEJT5vPy+Shk?=
 =?us-ascii?Q?rS5izlZgZIicQsUix/6QvH/rR1Fhq6t6EHUa2eCdJjZH96I/NHdIoLs09o2o?=
 =?us-ascii?Q?tXvT9FZWASvWmIVxHf6q1pzXKamCJQ9OIu5V5KY8EORXME+IRe4KxtHU7vpS?=
 =?us-ascii?Q?Uxq4OqFvN8mxRDdnWT2mwxs77nJ+iEDswRu1sOZj/GwrCU5Ui3AjBui+Vrn5?=
 =?us-ascii?Q?3gMT404tjSejcPqOblGSPreRrdg1jlNs3XQmDvCTrbBAu8V4XN1Wi/ZyGET2?=
 =?us-ascii?Q?zImXsL/MFSo9uTbnu/az2zvHgAPeW/pCyEsH8a+iJ8vXsLI9utzhV8ov/0Ru?=
 =?us-ascii?Q?o2RJwQgAh+KxU1nv/LL3ty39gcz9SVOZig3Rhr+zoTMYH8iOvaOXgcMoNzwW?=
 =?us-ascii?Q?4lHVUiN1JeX9yqAphqZhhDgekbMugoyPQ+UiQIpKoFg++A4sv7dTlM4l7iAU?=
 =?us-ascii?Q?7rMrUDzcbT6k+wUvzMkqELVOhBVDucr1dydyBzNgVOE30kJFLXQ3BsckUXUc?=
 =?us-ascii?Q?bxU6ZOXjN3beZNJnX8d57ysBenFIrj+TA4Zp9Gb9IZ9CCxBrboHJFB2DVEYa?=
 =?us-ascii?Q?w1QWfSUSmrkBw2nDEmyS0kI/tjUWD/TwQEWB7b65Gb9vfGcUtE3dS5HOlFFs?=
 =?us-ascii?Q?GPcSO80M0cJeuPU+ydWo2zEFX7jRGO27CEYhAK06IIfg3ZJFC2ptWK50JbaN?=
 =?us-ascii?Q?WDyEQWxtoKpfuacsiSj0AmWAaVuEA1ThVVhJczB3bmrfQx5Rpe4kfc3v7uF6?=
 =?us-ascii?Q?V3i2VF1g/rQW6wweyuHlkTuOMKCu325ajmI6MRfjX9GAyAzb+58uRrG98PjY?=
 =?us-ascii?Q?QxTgEt+3IJsMuIHZXpJVzElWB8Ek1oybil3WNAj6PS9h2IY+1tVux4MCP9bh?=
 =?us-ascii?Q?rw=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 1421dc61-5967-4880-edc5-08db34a0b755
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 04 Apr 2023 00:08:28.0357
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: WQftq7uHxsg/rCIsPMuA/ELpudriWk/xxgFYfwdVgxIfGZWxEiaogJG8Ci3dEjqVz5Y+NwfhUjlmHlH0gbSCp4YITVvobRLbOmJZ7LJ90Pk=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: CH3PR11MB7201
X-OriginatorOrg: intel.com
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Dave Jiang wrote:
> 
> 
> On 4/3/23 4:06 PM, Dan Williams wrote:
> > One motivation for mapping range registers to decoder objects is
> > to use those settings for region autodiscovery.
> > 
> > The need to map a region for devices programmed to use range registers
> > is especially urgent now that the kernel no longer routes "Soft
> > Reserved" ranges in the memory map to device-dax by default. The CXL
> > memory range loses all access mechanisms.
> > 
> > Complete the implementation by filling out ways and granularity, marking
> > the DPA reservation, and setting the endpoint-decoder state to signal
> > autodiscovery.
> 
> If you don't mind making a note that the default values of ways and 
> granularity are coming from cxl_decode_init(). Thanks.

Changed this paragraph to:

Complete the implementation by marking the DPA reservation and setting
the endpoint-decoder state to signal autodiscovery. Note that the
default settings of ways=1 and granularity=4096 set in cxl_decode_init()
do not need to be updated.

> Reviewed-by: Dave Jiang <dave.jiang@intel.com>

Thanks!

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id F1B59C76188
	for <linux-cxl@archiver.kernel.org>; Mon,  3 Apr 2023 23:44:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231246AbjDCXob (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Mon, 3 Apr 2023 19:44:31 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:58984 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S233886AbjDCXo3 (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Mon, 3 Apr 2023 19:44:29 -0400
Received: from mga17.intel.com (mga17.intel.com [192.55.52.151])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id E806235A1
        for <linux-cxl@vger.kernel.org>; Mon,  3 Apr 2023 16:44:25 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1680565465; x=1712101465;
  h=message-id:date:mime-version:subject:to:cc:references:
   from:in-reply-to:content-transfer-encoding;
  bh=cykA4A8nqg/kZp5yVx1emL8MjYljRQhmKPPNOaEXNVM=;
  b=hW3YrV6m39D1mD7RhS6TFW8S4MQCvRzNh1VJo8kfa6VabSqMWhpN4tnC
   0dZFVDeOvAg0Q5EMJp4JDSjvL0NGY8Hk9MWGJCFrPMr429iAdenlp5Q0i
   G2/7C2EZvr7ABmxwRLRdCbuuEcxFd/LhSRmAj+eAAKVzBcOVKl/OxXp3v
   vxmHP+60SqbcEkruRDES0wcoph9tI1YpQ/uw/auHIr3W6MlhlVDREI3Cu
   pcaaOiSy+++q0y2gk9mLBUZaVwnbw6N056R1mxltcPGa5MnFZUv6DC3XR
   fuCS+MMeFxjAGjzvdz0IhcSikTF1Syq50gvtygXacMnMDMQMktDvS5UqG
   Q==;
X-IronPort-AV: E=McAfee;i="6600,9927,10669"; a="322438167"
X-IronPort-AV: E=Sophos;i="5.98,316,1673942400"; 
   d="scan'208";a="322438167"
Received: from fmsmga008.fm.intel.com ([10.253.24.58])
  by fmsmga107.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 03 Apr 2023 16:44:25 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10669"; a="750691519"
X-IronPort-AV: E=Sophos;i="5.98,316,1673942400"; 
   d="scan'208";a="750691519"
Received: from djiang5-mobl3.amr.corp.intel.com (HELO [10.213.181.144]) ([10.213.181.144])
  by fmsmga008-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 03 Apr 2023 16:44:25 -0700
Message-ID: <1dc1b324-8e77-f98d-3fd0-a20cbf328d2f@intel.com>
Date: Mon, 3 Apr 2023 16:44:24 -0700
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Firefox/102.0 Thunderbird/102.9.0
Subject: Re: [PATCH v2] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Content-Language: en-US
To: Dan Williams <dan.j.williams@intel.com>, linux-cxl@vger.kernel.org
Cc: Gregory Price <gregory.price@memverge.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <168056315526.436217.14417826023537916154.stgit@dwillia2-xfh.jf.intel.com>
From: Dave Jiang <dave.jiang@intel.com>
In-Reply-To: <168056315526.436217.14417826023537916154.stgit@dwillia2-xfh.jf.intel.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org



On 4/3/23 4:06 PM, Dan Williams wrote:
> One motivation for mapping range registers to decoder objects is
> to use those settings for region autodiscovery.
> 
> The need to map a region for devices programmed to use range registers
> is especially urgent now that the kernel no longer routes "Soft
> Reserved" ranges in the memory map to device-dax by default. The CXL
> memory range loses all access mechanisms.
> 
> Complete the implementation by filling out ways and granularity, marking
> the DPA reservation, and setting the endpoint-decoder state to signal
> autodiscovery.

If you don't mind making a note that the default values of ways and 
granularity are coming from cxl_decode_init(). Thanks.

> 
> Fixes: 09d09e04d2fc ("cxl/dax: Create dax devices for CXL RAM regions")
> Tested-by: Dave Jiang <dave.jiang@intel.com>
> Tested-by: Gregory Price <gregory.price@memverge.com>
> Link: https://lore.kernel.org/r/168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com
> Signed-off-by: Dan Williams <dan.j.williams@intel.com>

Reviewed-by: Dave Jiang <dave.jiang@intel.com>

> ---
> Changes since v1:
> - Swap out the local @range variable which was mostly only used for the
>    mapping length with a @len variable for that purpose (Jonathan)
> 
>   drivers/cxl/core/hdm.c |   27 ++++++++++++++++++++++-----
>   1 file changed, 22 insertions(+), 5 deletions(-)
> 
> diff --git a/drivers/cxl/core/hdm.c b/drivers/cxl/core/hdm.c
> index 9884b6d4d930..02cc2c38b44b 100644
> --- a/drivers/cxl/core/hdm.c
> +++ b/drivers/cxl/core/hdm.c
> @@ -738,14 +738,20 @@ static int cxl_decoder_reset(struct cxl_decoder *cxld)
>   	return 0;
>   }
>   
> -static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
> -					    struct cxl_decoder *cxld, int which,
> -					    struct cxl_endpoint_dvsec_info *info)
> +static int cxl_setup_hdm_decoder_from_dvsec(
> +	struct cxl_port *port, struct cxl_decoder *cxld, u64 *dpa_base,
> +	int which, struct cxl_endpoint_dvsec_info *info)
>   {
> +	struct cxl_endpoint_decoder *cxled;
> +	u64 len;
> +	int rc;
> +
>   	if (!is_cxl_endpoint(port))
>   		return -EOPNOTSUPP;
>   
> -	if (!range_len(&info->dvsec_range[which]))
> +	cxled = to_cxl_endpoint_decoder(&cxld->dev);
> +	len = range_len(&info->dvsec_range[which]);
> +	if (!len)
>   		return -ENOENT;
>   
>   	cxld->target_type = CXL_DECODER_EXPANDER;
> @@ -760,6 +766,16 @@ static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
>   	cxld->flags |= CXL_DECODER_F_ENABLE | CXL_DECODER_F_LOCK;
>   	port->commit_end = cxld->id;
>   
> +	rc = devm_cxl_dpa_reserve(cxled, *dpa_base, len, 0);
> +	if (rc) {
> +		dev_err(&port->dev,
> +			"decoder%d.%d: Failed to reserve DPA range %#llx - %#llx\n (%d)",
> +			port->id, cxld->id, *dpa_base, *dpa_base + len - 1, rc);
> +		return rc;
> +	}
> +	*dpa_base += len;
> +	cxled->state = CXL_DECODER_STATE_AUTO;
> +
>   	return 0;
>   }
>   
> @@ -779,7 +795,8 @@ static int init_hdm_decoder(struct cxl_port *port, struct cxl_decoder *cxld,
>   	} target_list;
>   
>   	if (should_emulate_decoders(info))
> -		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, which, info);
> +		return cxl_setup_hdm_decoder_from_dvsec(port, cxld, dpa_base,
> +							which, info);
>   
>   	ctrl = readl(hdm + CXL_HDM_DECODER0_CTRL_OFFSET(which));
>   	base = ioread64_hi_lo(hdm + CXL_HDM_DECODER0_BASE_LOW_OFFSET(which));
> 

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 64404C761A6
	for <linux-cxl@archiver.kernel.org>; Thu, 30 Mar 2023 18:25:19 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231148AbjC3SZS (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 30 Mar 2023 14:25:18 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:56340 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231228AbjC3SZS (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 30 Mar 2023 14:25:18 -0400
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 9C3A6D517
        for <linux-cxl@vger.kernel.org>; Thu, 30 Mar 2023 11:25:16 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1680200716; x=1711736716;
  h=date:from:to:cc:subject:message-id:references:
   in-reply-to:mime-version;
  bh=9V6IbwW5fKh723uay3pGDGj2iW6AF7Nc2Z3kL2vagfI=;
  b=Ufyb/LLlAsTg4OS7fkJr63nBaLa5jCEdZfzyEJeQabalvndjw2oLx8eU
   mVC+LRTLL3DCHjPqorKG8M3X81FlfMtnV/IGVI4B8vsV1NCZWsOBb+wQb
   OS7RT34vMQumzphoK+6wewXbNFWUaNmTrrCeKjed3Lu1lDt9DQNvNS+VK
   T4AGAnzjAyn2DyeWiNKpl62OJSeeX0U5dov5flUiQ9K6EsuzyN0PNYHAP
   WXUXoMljM2JM1TIciPmDIaTu/QnzTj3ZhiY0WXrUIOTlIYEAkCl4DG7fQ
   cegGhlc0N2NykX7LkV3zlfsq2/xOFmbdPAZ7plCCT8Jpspbqy/OMvHgZ8
   A==;
X-IronPort-AV: E=McAfee;i="6600,9927,10665"; a="342896796"
X-IronPort-AV: E=Sophos;i="5.98,305,1673942400"; 
   d="scan'208";a="342896796"
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
  by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 30 Mar 2023 11:24:48 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10665"; a="828417461"
X-IronPort-AV: E=Sophos;i="5.98,305,1673942400"; 
   d="scan'208";a="828417461"
Received: from fmsmsx602.amr.corp.intel.com ([10.18.126.82])
  by fmsmga001.fm.intel.com with ESMTP; 30 Mar 2023 11:24:47 -0700
Received: from fmsmsx611.amr.corp.intel.com (10.18.126.91) by
 fmsmsx602.amr.corp.intel.com (10.18.126.82) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21; Thu, 30 Mar 2023 11:24:47 -0700
Received: from fmsmsx612.amr.corp.intel.com (10.18.126.92) by
 fmsmsx611.amr.corp.intel.com (10.18.126.91) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21; Thu, 30 Mar 2023 11:24:47 -0700
Received: from fmsedg602.ED.cps.intel.com (10.1.192.136) by
 fmsmsx612.amr.corp.intel.com (10.18.126.92) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21 via Frontend Transport; Thu, 30 Mar 2023 11:24:47 -0700
Received: from NAM10-MW2-obe.outbound.protection.outlook.com (104.47.55.106)
 by edgegateway.intel.com (192.55.55.71) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.21; Thu, 30 Mar 2023 11:24:47 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=OknnttD+TNYweitgTDlP/RPC5feNx+ekw6zivLzjT8504DcBLkKbe1bblSD4714nEtqUnM3O+mtrQvk7/RFyibLYBxtTBX7NGrsB/Mo1uIXi7XDbf5adE2kxJKz5hEwzbqYPFO8vyqc8PjEcbvsk7sj5jxWPU0gG1iZfmRpsjKo5a0GVtRrrkHkzGNYkelArD6SaGX9EPPWu4ERLdsqWC1nqe2MGyYHOdD+vXhqvAqN2wcYM0B7tBIB4ltXiGOG7Pj8xpEDzbDQqMFSq7y3Btz6bchlDuVZJjpY9XRFXoysHdbiYcAXN4d6lCYm64vyds82ng4hWIRwDe+xNRW9juA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=f3kCd9UytLg0EsDLEklU6bFwObRGX/z7cJ7chW3hGtk=;
 b=VlXbCj3AEOfDsXL3HqmlXcsTMUp5oEw9ZhCUKCrSVFF51qkKJ4j++zEwwYGhhRZr9EjwLcHUyAsucSNn4oZ+KMzOWj8OJBoKITUjv/rnqfBmQ7O9YtQ8nWfj1EQg5Zy25fVv0jKbU3r7kVU6obJ7NTxKwknXyGHcItBFpd8hJV78j6e7hqgiDRSEcl2M7bI0w4XeGkE4QOVL5E/23IOOC1c3FO2vfdxlJrOa2WmW8hGNhmfJJ53rKty4t6//OAGmI4i/Kwk8Bzoepo/9B6Bmbl3ex6EOZt8HcT3BNx3IqfOT18LpD6452IzLfzBrYpOC58O+qWvkJ/cB+TpxqGNASg==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by SN7PR11MB7638.namprd11.prod.outlook.com (2603:10b6:806:34b::22) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6222.33; Thu, 30 Mar
 2023 18:24:45 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::ffa1:410b:20b3:6233]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::ffa1:410b:20b3:6233%4]) with mapi id 15.20.6254.021; Thu, 30 Mar 2023
 18:24:45 +0000
Date: Thu, 30 Mar 2023 11:24:43 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Jonathan Cameron <Jonathan.Cameron@huawei.com>,
        Dan Williams <dan.j.williams@intel.com>
CC: <linux-cxl@vger.kernel.org>, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <6425d3eb9cd89_c722294a9@dwillia2-mobl3.amr.corp.intel.com.notmuch>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <20230330180019.00001b7b@Huawei.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <20230330180019.00001b7b@Huawei.com>
X-ClientProxiedBy: SJ0PR03CA0226.namprd03.prod.outlook.com
 (2603:10b6:a03:39f::21) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|SN7PR11MB7638:EE_
X-MS-Office365-Filtering-Correlation-Id: ab54e4d4-340b-4943-a71d-08db314c0996
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: i9lRukR2IpoKNUJj5aNuwMznbXh4U08ERQRp4chiKq0CwU+hiFSAS9uGJi6D/MkgZjGAtJoXoIzDX9bfCixyLaCdcKzAoJB4kSl/3C2FLQLT9SgGise1KEd8NzaijxWbMlXx3nND5xH11E0JPpKalHLAQzdqf/7SmspWsjd69+Tz3xOYktd9Gzg0c9rxNl4f9WHsOBoKx8PTrEpDlcefEvXBgMg9rXGJ4jDx/+9D6iwjz5rmnaQ9qRl4Y/BX5ljZGQgXJ/ZJdHpxlUQR7dM6I7jdEfzKuUJDAOSi2oir1veaBmkiR73IdMJKcrj9p1LGTKuF3lR5yk557VeVS8oUDm8efBJVhYGr+zkncyRsGiWlrCVRflOZ/Dwvap69ri/R1KJCLAfFXV3lp//6yDaPpP9KHuh1Epuljyjk4C7pLxZ/g1SWEAOtFBD4DlOdR5XyauN+fGvbAOwhheqvp+eCNq0IZIwrKEo36fDGvJZdUO0CzkyMRSybHpowZFMQiAF3RiSpldk43gDQVnqJ6wfbVNWHUs6jDMQXMTTY9P+AaNha3+V12Wlguoqmi9syI5kK
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(376002)(366004)(136003)(346002)(396003)(39860400002)(451199021)(9686003)(2906002)(107886003)(83380400001)(6486002)(186003)(4326008)(66946007)(66476007)(6506007)(66556008)(478600001)(8936002)(5660300002)(38100700002)(316002)(26005)(41300700001)(82960400001)(86362001)(110136005)(6512007)(8676002);DIR:OUT;SFP:1102;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?lv3tDs28SSRpvJGixFR5S7asMtTvSvC9f5/vt0Lq5mkkZc3q6beHTRLswTyJ?=
 =?us-ascii?Q?Tokjt/89VpegHb5U1XY07aoj9JmFI52xoOBqiOh8FrB/Iaz55reaiqi6DJ7k?=
 =?us-ascii?Q?/r4+k12PqRJKXPXIO6CGKWarVRFXfl1JE/BcVHW/IX5peCmx8AvatmSeyQCX?=
 =?us-ascii?Q?d259qZbnsSQULHe/JDHGNQnq3U5DcAS07Y2g/XR/HprCW5MnPMu2zFkSSxfw?=
 =?us-ascii?Q?bgzKTeEWWzcoK9RllMkSo5HFj555xDq37iiPWYovnSANkJ2vIWtJHkB57ovl?=
 =?us-ascii?Q?s48x+pre2+gZjLsXOD/IsPRI40514utR5jpLI+jw3MHxqXD2O/A7yTxNO3xJ?=
 =?us-ascii?Q?KMu1qmCCiN50uj1ZmhVM5x7SPIZP3i+tjZrNL+NC3oHbRZXrsWifL6DUkXCF?=
 =?us-ascii?Q?d97pvpdQPR5YlOkXJXzOe1A+ohgOlAP2IFGr4qE5dGdFrEhgCeZHbJSUDKR6?=
 =?us-ascii?Q?7cjIJx3cRX1QgVf2Be9LQ/wmPEeuww7FdCW1GqfesxI/EuDil7rInwCr6Ku6?=
 =?us-ascii?Q?qaxl5BaqtspbpIHX/g1Q2llagFr8NgEQH+ICUPMS1Gujto4WQf0Ji/qrsjuN?=
 =?us-ascii?Q?4llAWOZAqKWUI50IQx3c1sB90dFMU0dbKQWZB9+/7xgBzEf3uDfIS2W52f6r?=
 =?us-ascii?Q?wNDvaSsE4ErpPBEkhWbcLpKQjVbNYL3ikbZqUOCM6832gp/xrh7MCjLsSQM/?=
 =?us-ascii?Q?OJTq/wCMHVJqU90ssjYVSd8rJZVlu2wSbP3qwlYmg9MIZnrIhKh4CLzzcTyH?=
 =?us-ascii?Q?FdXHI2LhIfkdlnsOxOFt9E7yjHfxqLvjnnq6VQ9Y1yl0Ee5JclufvS9wMU6d?=
 =?us-ascii?Q?hyURvgs+AZJ+afHScuVKGilsbNjBegWumO3vhniDqf9hbGujjt7KpJS89/EA?=
 =?us-ascii?Q?2W43hZS+yImoD43OIuIx3S1NvWgTeE1XOElP7ThGP/MbPIYneo/DvrLOc2VI?=
 =?us-ascii?Q?1U4USjVwc8A1YGQBLg1taMlwL3c7MSeTy50lv2n2I7SHgZ21g3RbZT43dvWG?=
 =?us-ascii?Q?loVcsYYZUMNOCib64cT8bspmU9UfFoNyMh0tFCyTDi2fcj3RA4Fkuvp6otKm?=
 =?us-ascii?Q?sZyEJG7r+UpcbDMuYlfz5HUODw0XTMxZrS3YwKb1nnvK+7q/9jlt7+D6no8J?=
 =?us-ascii?Q?gKyXJx/VB7P0kXiPYRRvzcQdgnF4+i+CP2gJUVWnDkR+7R7Imflo9Mlmsm6j?=
 =?us-ascii?Q?FS9KrNBkLbGw774U5f3iQ6n8gOaeHFaSTtrUS4OJwuYm9RvWMgrCbSt1XtS9?=
 =?us-ascii?Q?PV61TLbkoju34K1SeeMRdiuQus4kVwrkumuj0C2X78/OCzaWT1KahdW+blD7?=
 =?us-ascii?Q?//cHw5QPbt+lC3hZTw9GKLjH2h69ryzz/YgPEKMHulF+P7NWtY+TsLSKQvM3?=
 =?us-ascii?Q?ZCfBTp51ukaeukNyWovZGjBk6AassRv+zjq3hzbxE8UbAXVa5szStmwG+0iB?=
 =?us-ascii?Q?P4eACoTJqlvR6NGQMwO5EqO9ehPrPIffUU4y0A35mDUPe64E6d2GTAs3QOR/?=
 =?us-ascii?Q?rHOgOYWVUXKhy2UrJVgN+n8tpvt1tvpI/JHCOlCZtkPdZ6+OX0A8XxexByhO?=
 =?us-ascii?Q?eK/r1deha9EeGZm2YGvWndRcc7I6HUvNhilmYHRHDC62ve4/dnbCdm/YaiLr?=
 =?us-ascii?Q?IQ=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: ab54e4d4-340b-4943-a71d-08db314c0996
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Mar 2023 18:24:45.3012
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: rwIxkbG2533X/ldP0kenhJRQgXhZAzgXWbQb5TFmw5CxNy5vypRuBQcSD31KIeItqc0NHZr+mJjJBISwjaGcZbm+YeuXgWrp6CtX3QdOPjQ=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SN7PR11MB7638
X-OriginatorOrg: intel.com
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Jonathan Cameron wrote:
> On Wed, 29 Mar 2023 14:35:55 -0700
> Dan Williams <dan.j.williams@intel.com> wrote:
> 
> > One motivation for mapping range registers to decoder objects is
> > to use those settings for region autodiscovery.
> > 
> > The need to map a region for devices programmed to use range registers
> > is especially urgent now that the kernel no longer routes "Soft
> > Reserved" ranges in the memory map to device-dax by default. The CXL
> > memory range loses all access mechanisms.
> > 
> > Complete the implementation by filling out ways and granularity, marking
> > the DPA reservation, and setting the endpoint-decoder state to signal
> > autodiscovery.
> > 
> > Fixes: 09d09e04d2fc ("cxl/dax: Create dax devices for CXL RAM regions")
> > Tested-by: Dave Jiang <dave.jiang@intel.com>
> > Signed-off-by: Dan Williams <dan.j.williams@intel.com>
> > ---
> >  drivers/cxl/core/hdm.c |   30 ++++++++++++++++++++++++------
> >  1 file changed, 24 insertions(+), 6 deletions(-)
> > 
> > diff --git a/drivers/cxl/core/hdm.c b/drivers/cxl/core/hdm.c
> > index 9884b6d4d930..5339c0719177 100644
> > --- a/drivers/cxl/core/hdm.c
> > +++ b/drivers/cxl/core/hdm.c
> > @@ -738,20 +738,26 @@ static int cxl_decoder_reset(struct cxl_decoder *cxld)
> >  	return 0;
> >  }
> >  
> > -static int cxl_setup_hdm_decoder_from_dvsec(struct cxl_port *port,
> > -					    struct cxl_decoder *cxld, int which,
> > -					    struct cxl_endpoint_dvsec_info *info)
> > +static int cxl_setup_hdm_decoder_from_dvsec(
> > +	struct cxl_port *port, struct cxl_decoder *cxld, u64 *dpa_base,
> > +	int which, struct cxl_endpoint_dvsec_info *info)
> >  {
> > +	struct cxl_endpoint_decoder *cxled;
> > +	struct range *range;
> > +	int rc;
> > +
> >  	if (!is_cxl_endpoint(port))
> >  		return -EOPNOTSUPP;
> >  
> > -	if (!range_len(&info->dvsec_range[which]))
> > +	cxled = to_cxl_endpoint_decoder(&cxld->dev);
> > +	range = &info->dvsec_range[which];
> > +	if (!range_len(range))
> 
> You call range_len(range) quite a few times in here.
> I'd be tempted to suggest a more minor diff of
> 
> 	u64 len;
> 	...
> 
> 	len = range_len(&info->dvsec_range[which]);
> 
> then use that throughout and don't bother with
> the local range variable.
> 
> range is a bit odd to keep in a local variable as
> it's not immediately obvious it's an hpa range - obviously you
> could call it hpa_range which would help, but feels like
> the length is the important bit except in one place.

Done.

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 2FDA6C74A5B
	for <linux-cxl@archiver.kernel.org>; Thu, 30 Mar 2023 04:36:40 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229557AbjC3Egj (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 30 Mar 2023 00:36:39 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:33076 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229504AbjC3Egi (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 30 Mar 2023 00:36:38 -0400
Received: from NAM11-BN8-obe.outbound.protection.outlook.com (mail-bn8nam11on2041.outbound.protection.outlook.com [40.107.236.41])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id CC8075B86
        for <linux-cxl@vger.kernel.org>; Wed, 29 Mar 2023 21:36:35 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=a4wpRra8aD72DwFGNZQe1eRMGNH09POHBFGj0Gh3T9stR3JeogJ0+yRjQJYYKwoI6ze+fT2PwqVS8FZJxA8kcHYWcNsSszDrj5xiPDDRbvnaq6alF0iyB7b7pZmE5w4poijT6ijbL/xvH+NqQjg9jEwQCM+vS+23vb7wQMby3jad6Gw32a9nJbI1xJObriBPtGMpOpXsu3bJOe9YkD82lesGDK1s52J9Y5qA00ZCaTnbUQHkqQkcQQ6Igomm7invAk7RSOcXymPREC3W3YG/kFD0jLs5oDNBjOPtcSHX9Zgiz18xSjsC9SagQXtsuQGZgxso85rfdwqm8XcHpA++mQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=r0dDOiVMN/+x8n/b6WXkt/ZfftTWu6aPGBjRwwqpn94=;
 b=jyD9I02AlCzJ/q07uo8tn+2iKuMuaC3vjf4/5OPjvePju3up6iRXPnmF4ZTlQ2gwQA23SpF38R1ay2G5rBDKaZM3+1jgIYHQA9i8z6j7TWVHShVCwjsz7/woV6FABHd3n2/zBOiK1zuJaIaeERJ8BZlNPZDMYShNjxWMsUP1z2hNw1pP8uvy22wKKJ2qtwa9LKidR9ei2LpjcYRlX00zQEn+htEp33HR6ABXZjPfLF9mXDnsgLVRhWQ4xBWbfxA041WEuCqdX5q/0R8MX5rHmCgpbtSMgmd4NGMiuOdc8ioV1I0BQkl2AKQUAewOSeSQ/bjjv+UifDYdjHCotZcjSw==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=memverge.com; dmarc=pass action=none header.from=memverge.com;
 dkim=pass header.d=memverge.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=memverge.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=r0dDOiVMN/+x8n/b6WXkt/ZfftTWu6aPGBjRwwqpn94=;
 b=PhwQ09B+UEMAM9vNN0Cmdac/ObcDTnWoWSMIdl4zh3XCsi1cB8YsqVbEwGqsWNd6VUNy0YYSI7b34M1F/slQ4gJA8FSgt5qF1TzWv56xK2dvOy0OWM21GeQnu+3A6sH0DVKPukRkxe0AhWT3cSgzLBUMm0Binuob5/gMs/osmnA=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=memverge.com;
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com (2603:10b6:a03:394::19)
 by MW3PR17MB4170.namprd17.prod.outlook.com (2603:10b6:303:46::7) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.41; Thu, 30 Mar
 2023 04:36:34 +0000
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a]) by SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a%5]) with mapi id 15.20.6222.033; Thu, 30 Mar 2023
 04:36:34 +0000
Date: Wed, 29 Mar 2023 13:21:11 -0400
From: Gregory Price <gregory.price@memverge.com>
To: Dan Williams <dan.j.williams@intel.com>
Cc: linux-cxl@vger.kernel.org, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <ZCRzh0VLSVF/7jya@memverge.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <ZCRhhUDcmypVKu0X@memverge.com>
 <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
X-ClientProxiedBy: BYAPR07CA0023.namprd07.prod.outlook.com
 (2603:10b6:a02:bc::36) To SJ0PR17MB5512.namprd17.prod.outlook.com
 (2603:10b6:a03:394::19)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: SJ0PR17MB5512:EE_|MW3PR17MB4170:EE_
X-MS-Office365-Filtering-Correlation-Id: 918ec3ef-21e9-4a20-db64-08db30d85757
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 2poKxRQ9YAATW9y25+H71j7tnma/pS/Ab3pn1J8TTvS1iZMhHtZ1TFmOsd3gBSswngbkf4LXu9ARIac+EA+Dp76n0U01LafmRIifZUCOqvEYkESvz77VWDSzHkXLPNh3OwPJ6hicuF5otcxZmdPNrgSbCNeMh/Q7Xv1Y/eHQOuNZVVKvXFSRXBzQEm/MxUq3M7tTwa/QJkMSfIY8P2ITwHjIEKK+Ka6gGLG90Ga1rgfkF4rcbr+Xypzdca5AqOG0IjD+UqO57OOZl8d7cmRmNCGnpxUhs9nmbOX8sHa3NpNc7ctE0/DGmqfvd/8UQFGr8YGgKucUjnXW6IWuXBXSkJ4mjO2ovbs/7ca1Gpxp1JasmI7VybRBHff1KZOVdR0aovZKkGWIDPDXoajbFFHdt5zWnD3ieqFnTVDivb33N0ptDgn4viXDCxsMTXydr7xlH3zSyJOWaQ+4/JQ5UXr4/SZpbVLTaUUgFmPM1v8rOP/cOGSffAVP8ik8n8nZBfdq4VM6I7eaygUj/1TdpgV5C/XP3zdnXUAgS8xiIguTL4apvrL8a6UiJR2WotoaWhqf
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SJ0PR17MB5512.namprd17.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(366004)(39850400004)(136003)(346002)(376002)(396003)(451199021)(316002)(6666004)(26005)(6512007)(6506007)(6486002)(186003)(83380400001)(6916009)(44832011)(4326008)(4744005)(8936002)(2616005)(66476007)(8676002)(66556008)(66946007)(41300700001)(5660300002)(478600001)(2906002)(36756003)(86362001)(38100700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?F9vS9yXu1E/qsIhPvuXZwqjLW5GMJe7ztGSJZxvv/prrFXH271viqu8AVPzQ?=
 =?us-ascii?Q?y28np7xeTggGRjFdAUjJIsFw7pdONn2ApdAI4bRut4hPt+gIQbikWbth2Zv4?=
 =?us-ascii?Q?5/VkgsiS8xAZOhQaZEVoi6qDbM8ohY9wJ2ZruTqS7LHVH0tsBM2Qe6w46ARC?=
 =?us-ascii?Q?lA5r7R2D9IBqGvYcuxxvjDEQHYKjMtXeGQfIyfG5qhxJRXvWHJ6aPQgEHIYF?=
 =?us-ascii?Q?VdUKsaCwfedFZOk4SJOUDQvZiTZsVzOd1f1t+jcmNnlj6qLp5HneOQTWRQsv?=
 =?us-ascii?Q?ZnbXY4obVTwzJ/VD6Oitwnrm44NbqtoG5LL+2+dxek0IYwtWcUnDLTweZKW5?=
 =?us-ascii?Q?aoRiUDPMs5Ja2RnujX2Kaf8S/22b9VtkKEaLEIHWgN/cd5FM9uXbyMpUVrWu?=
 =?us-ascii?Q?VmeS+nnTDMKxLxbZuvVOpU/ERzmgUsFhc2P8lR+W3g6VPDrIXYafjIUQhoxv?=
 =?us-ascii?Q?qHrxvpEK7lSNc/yhAx9z4ppNZ7KstB70iG3tGSLHXEfMAVIWgS/pNtw1vuI7?=
 =?us-ascii?Q?YbJD69pQsQl9l6ypDsv7Q1lOOljjBEMlHYdvpyWIcRSmaR7olXCQtBM2BV2Z?=
 =?us-ascii?Q?t+owge0KzHEmABo4+cVOvLE+CVSf2ZPrPIrvLKjpJclYGfNug1nCDlCotb8Y?=
 =?us-ascii?Q?X9HhEW1idmscARCsNgEEjLM6EDq6eNaRl3/T9X4jsLy0zh7dVAz9xqao6Nq6?=
 =?us-ascii?Q?UCDaZZpOuQwfweIQ9drZ3FT4ZaLO6cN/DayWI0HZOouAZz/A2rukivKGXafH?=
 =?us-ascii?Q?GNIxNlkEVPd33MQAmiHKrkYUpBXjw2IH2FiQbJfSfllXsvPQuGkhN+iKeMSS?=
 =?us-ascii?Q?4FGimOoiSCninhSqSxA37xZ1Rxo4xzNg1kdpiNHLj9qZFsfZMFWccBTzvq/k?=
 =?us-ascii?Q?3+29VDLB3tuDLrHrjJwgBdzG1pdtTS2ZWbGaEHVzsczx/Z0WSoVAZy2Z2SF3?=
 =?us-ascii?Q?4qsixwCjFFBm21XrIIlziqWqyFb8CwlbOhWoaKexWM6O5/6yd/KcFl3LHCT8?=
 =?us-ascii?Q?Z1z62WB1TWvnXwQTm2VDP5ZbxBxBicqw6w9DW5JpdLD5mcH8Abh7q/KmvQCU?=
 =?us-ascii?Q?Ymwu2/2deyjH7VsVt9w+ozrgseuPrpx/xZxzUERSkh19J4uBYzORJsFeISsh?=
 =?us-ascii?Q?I6/qqlpzHMYSTp5Yrxw7w2dWbhkY6eeAsEmqzXDWXVjMq6qZUZMn5QcdhDCI?=
 =?us-ascii?Q?JfnqFsIVWO0DwLbzsujPUfMAR5O4YcdA70MnLD8WCcdnQ7wttR1l9OUQqtwf?=
 =?us-ascii?Q?qjSWVagNsyeiNLbBoUa/jFC53+KtifpEcA2O5CnyTPWvzGzoAPyeuF3NcCWf?=
 =?us-ascii?Q?fGX+mijrtazkTvMELjhPe/qzU5pjBimWvPa2cbkGYX54qwEpAI46QXpxnks1?=
 =?us-ascii?Q?7kqoorqUVt19x/rGXFjr2+ho+8nN435+q5Lxg+v+4wGFwF0QlKWoy5XymtEC?=
 =?us-ascii?Q?nCGyAZ/GSV1VqpoQHQbSnKxI1tjoj979KTdscWp1F8PHanZxex241IM2KYsy?=
 =?us-ascii?Q?NzJaD4BTiVOnb9QPbcZBbHTdFCLMI0JLxxXAPmFqTv/Fkpu3FxmTu4dKHdcj?=
 =?us-ascii?Q?H1egh7hjZeOC7l/42DkN1W30EgNUpgGYYMepM8J3VXVN6XOhY56N4VuAkEMb?=
 =?us-ascii?Q?0w=3D=3D?=
X-OriginatorOrg: memverge.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 918ec3ef-21e9-4a20-db64-08db30d85757
X-MS-Exchange-CrossTenant-AuthSource: SJ0PR17MB5512.namprd17.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Mar 2023 04:36:34.1317
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 5c90cb59-37e7-4c81-9c07-00473d5fb682
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: zkfCjeZ8+adE3fFDj5qQk4K5j8XbVxhKg0jVE6vHioH2wwNX70gw8lt+p+9b9JTi30/7/lSleIofwvbJD5Vz4twWALkLRwORxoSvx3lUIO4=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MW3PR17MB4170
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Wed, Mar 29, 2023 at 09:21:25PM -0700, Dan Williams wrote:
> > Is the DVSEC Range Register expected to be programmed by bios, and are
> > not being programmed correctly?
> 
> This debug experiment makes me think perhaps the *device* is at fault,
> not the BIOS. Perhaps the device accepts writes to CXL_DVSEC_RANGE_BASE
> to set up the decode as expected, but reads return 0? That's the only
> way that I can see that forcing that offset results in successfully
> talking to memory.
> 

Oh, i meant to add that i tested whether the memory is accessible via
numactl --membind=1 with both memhog and a python prompt, and things
worked just fine.  So memory works.

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 110F9C74A5B
	for <linux-cxl@archiver.kernel.org>; Thu, 30 Mar 2023 04:35:45 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229484AbjC3Efm (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 30 Mar 2023 00:35:42 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:60606 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229459AbjC3Efk (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 30 Mar 2023 00:35:40 -0400
Received: from NAM10-BN7-obe.outbound.protection.outlook.com (mail-bn7nam10on2073.outbound.protection.outlook.com [40.107.92.73])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 60B2A59C4
        for <linux-cxl@vger.kernel.org>; Wed, 29 Mar 2023 21:35:36 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=MOgY6hvHsy3mTSY+NtmqyCwZiSD/RJU8DapJIqI8p28DFpoMd0xjSw0XtOAgSkWhk0e0n1L5/B722OaDwEIZcx0esuBS5F6/8UjbkaSm40whrd7K2MFskolKpbP4tA2wHiYg1sEHHS3j52V0n8tls/TpaJ/L6wdhtBM0E9BQ7l5BjiPsSdMQd6x9OdFHiVLKFtKSfCyXhwhn6D8aBk9edonesLFqhMSj9S5gAqcidmezVJ1h4LXooUm92+WuCIRTO/fsXE6qn/0Lqg4c/wDFfRXUwTLwE5mJz37qChwN3uA5zfj9Erxzuh8ngp3BYfniJwNBqVE3Zfe3WmcZa67i0A==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=D6t9KKUq4VqiKsf62lXsR6VKE6y1fgV6MMGd+sjAlcM=;
 b=kH8ZIJxgi/wuBJN9mbMBkYsZl/BdOxkSzntWldClhQiY9OXErhc5hDGndQgVJgw/zzptTcz2V8GcLSAfVPCawvezP0HHXAfjUAOTnNvZjojtd9YqTYyHaAe5Vhqnj2hEJWjqIzO+Z6Eh6x4vRVub/t/KsyK32rxpofiakiGy6WCYcpDb2cXEM+b04T3cPu2pLrcvt5Usq/lCV02QHE/eKlJKZ40/M0hJiSNOMqyxILz4vyl1QVAGKOt8CDb2cwhB/c1ZEVqDskE+edbLxjhw3KvtRmT6YhBAtdi31qbNIiIM6HuzcQLMEBIzkb6WuIoUw8n+HVWuP1RwbuYy5AwzuA==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=memverge.com; dmarc=pass action=none header.from=memverge.com;
 dkim=pass header.d=memverge.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=memverge.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=D6t9KKUq4VqiKsf62lXsR6VKE6y1fgV6MMGd+sjAlcM=;
 b=dwwPECtC+H0ij9idkne8rh18dE4cct4EA+rm15lpKnZa5bSMEJaxsaoJBKhN1/34ncr++VWbg289UUfyoQK/dJ2iOBrwoDntqYKm8zuaLjlsxM2Kt1SUn1NqieVZOUY7V9hSupgHcbpmX8wlnsh0FjZrSOIwowQkprZA/g6lbOQ=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=memverge.com;
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com (2603:10b6:a03:394::19)
 by MW3PR17MB4170.namprd17.prod.outlook.com (2603:10b6:303:46::7) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.41; Thu, 30 Mar
 2023 04:35:33 +0000
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a]) by SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a%5]) with mapi id 15.20.6222.033; Thu, 30 Mar 2023
 04:35:33 +0000
Date: Wed, 29 Mar 2023 13:20:03 -0400
From: Gregory Price <gregory.price@memverge.com>
To: Dan Williams <dan.j.williams@intel.com>
Cc: linux-cxl@vger.kernel.org, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <ZCRzQxmafPCCWJOx@memverge.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <ZCRhhUDcmypVKu0X@memverge.com>
 <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
X-ClientProxiedBy: BY3PR04CA0011.namprd04.prod.outlook.com
 (2603:10b6:a03:217::16) To SJ0PR17MB5512.namprd17.prod.outlook.com
 (2603:10b6:a03:394::19)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: SJ0PR17MB5512:EE_|MW3PR17MB4170:EE_
X-MS-Office365-Filtering-Correlation-Id: ef6f5b3c-b3a3-443d-43da-08db30d8330a
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: SbqCuEP+5Qic/URPOYr5zeC8flIO+m2IYuFGxzZv2zIQ5vtS7Oka4dAAsvSpnOPK7hOOFTSonZGokOqKuszjvqrBSNX0cPrXVjSxCTm/EJ24Vm8+cgH6whpPV7QfNwz7SOeax1FQBD8iNUXHO53ukPZGM34vf/78P6T+y7QysJDiJu2W8K2+gULH7vd5ZHpc2bT1oeQKCCPjwQXBWGuEXBTL1BRmv1L9B/jka0HHEWwWloPJ6YuLRuIhqTamQsDd3yxNG6019jMpQpiSPM1jeue2ZnfdR4wPrSIRvXuzHayv0JkfJaZkDJClQDixZDV3ZfyDZxKjFeTGlJGcqSMwIjqUj1AriVxTSW9eqmvcfBnGEWNz/Orrc9i7NuZKUXP2byFP6rKoQmYzPX57zYRSeKY841Wo/v783kCTO23ZabgF/tXe3J7EhwtshPUXOCN52/XNC0r9gecMsrDD68pF3Vf52SM/05ClZl+OLREJioxSW95SU7cXptfcKIxg9KKixOAv3U3KIiMEhwq+j6m8lDeL/kA+qGJ0ApcYS6f9br3EQHZ2wvu2DW9Iw5OEkOPw
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SJ0PR17MB5512.namprd17.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(366004)(39850400004)(136003)(346002)(376002)(396003)(451199021)(316002)(6666004)(26005)(6512007)(6506007)(6486002)(186003)(83380400001)(6916009)(44832011)(4326008)(8936002)(2616005)(66476007)(8676002)(66556008)(66946007)(41300700001)(5660300002)(478600001)(2906002)(36756003)(86362001)(38100700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?/FB8AIVsctGfwGfSxCWJ2WEfWZlLmOoly59Lb/FS+R3a/gqDrk7XEZJV41/8?=
 =?us-ascii?Q?dK3ZDVF4lYvhNrNDTf6qC5Pt7ABQUAp0y0w2VPtjdq/p3XzOY3aBMQBhshu1?=
 =?us-ascii?Q?MvKavFgYbjYuNYV7jRhNADkzFyjUt6nZQ1cxtRHDLFHbIuVW0ls7TPBzNBC5?=
 =?us-ascii?Q?9NFkr1rIh1wEGMtaBdygw3OEVmR+gzyBsxlBPFa/PuQ7Dnxoh5mM2ba6NkS9?=
 =?us-ascii?Q?k0jqG5TmLObQPvP868JhUuyEmTCDwxhQE7fhhN8OC37YScqTulFzsYNR29yX?=
 =?us-ascii?Q?HpCl+RP/e4HAlWQBKlQjn2sAg0rO8OICOmPWhBK4st3iotKz+a2i1pp415tk?=
 =?us-ascii?Q?G+lIdhzh8jcUFQJkydq5/C4NlnIkMtE4oGtdQlTYdNvy8CtN/uB+uI1GOIOT?=
 =?us-ascii?Q?YLKtEFnoTFmq8p7qpUZApzyNCIean7/lANlGaSi05/Uznk2LtbAG7/eGlHYv?=
 =?us-ascii?Q?+oCq1CzjM6iCPb8pWZVCc9xLD+uBL9XkGcnRnbmKtQjgvKMAH9FAf+3ztFVc?=
 =?us-ascii?Q?Ksdf4shXolXfnNNVuQ3SdH+yrZjk7Rn9/dZA7z6g+bXjlbLa8IyPx5ZemJUU?=
 =?us-ascii?Q?3NQGL2dDph4ir8FBcblOsE+adPwm9axFNIwo9PfCb73yVFcGpS1NZvdeH9qM?=
 =?us-ascii?Q?hh71BqcsIFZ1K+svs0ggdBiE3tSUZfxYF53ksr2FcBcxLl8qilvD1t0MaCtG?=
 =?us-ascii?Q?hXJBcwdqNsOdWJ4aPmQVjx/ilsy9hrLBhZis/WCOE70xoG+1dOXijSTSogFy?=
 =?us-ascii?Q?A9ZSutHPB5BrKE5tMGJ08R7x5cLg/L8yaOIp06IccV3WOp9KfmA/+6CpPSC/?=
 =?us-ascii?Q?z+uOfCbKBEhjI3IGDHjdijvauNeiMQNz5WqQtMXqyDmlP9z4uGOKxvT6npgf?=
 =?us-ascii?Q?0iYsJAc6plK3jhOzR2BqXQ0kb7Omg2RCXEwkdnQjLT/p5n74oXOsfFe2dswf?=
 =?us-ascii?Q?UQnfr8xbJWYmGP4oWKypXbZul5SNwOlKtRfIX9g4ELXCUZ6LLdDdpbSizf/j?=
 =?us-ascii?Q?Q3QwdYTmnAvaaTiiQoMuvDk0ItA3mrMvPmLiT8ii5smPBcv2KnVrlVZeToLr?=
 =?us-ascii?Q?oqgl2Puny61kxsjC7/gz8ShAxXPOLST3bRKiKq97dg1VbrmZgI3HLtzrheKK?=
 =?us-ascii?Q?b3lc+5wvydWTOiII4f5qNAotWYh6QoFdDOCb6+cB/4D43+lo1SutlFHDkPTF?=
 =?us-ascii?Q?XZEZvyeLvaWxGFS5e6vAFjl53OWrqw5qEncJGUb6b9wLB5LmDY8Dg2ZiBRHc?=
 =?us-ascii?Q?kbfVzl5FF4zXLgKGu6Ks7saGJpP2Ua9tDXldLWD81y9/DIsfV4atYTlzAR2d?=
 =?us-ascii?Q?RC11FVfLb0+HvKbDQybmxKi/6FHE2lkBEx0H8vIMnJaDDFTy0JZnkvLIrneX?=
 =?us-ascii?Q?aUjgXrCEdr2CwreXgX++8ik8LXBWxMYDolVm2nfHUMbWBlrBi857kDA8VcF8?=
 =?us-ascii?Q?C1O92AVvFGHxZORxOBRP31P/yAr9cRGF4IfERhF2Jo8/yH8ArYNf+LYHL8ed?=
 =?us-ascii?Q?QyL88OZkM3BdmbQbHbsjGnCcXMQCZrsSe3SDzM7HD1bUpoh70wIVuoYQCt/m?=
 =?us-ascii?Q?xid9EY9/D/c2Dz2HjRAN3ZJ+bmsAtDiFEArFeFOVMEDn0iUYCn4A7RlxLKB7?=
 =?us-ascii?Q?AQ=3D=3D?=
X-OriginatorOrg: memverge.com
X-MS-Exchange-CrossTenant-Network-Message-Id: ef6f5b3c-b3a3-443d-43da-08db30d8330a
X-MS-Exchange-CrossTenant-AuthSource: SJ0PR17MB5512.namprd17.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Mar 2023 04:35:33.2598
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 5c90cb59-37e7-4c81-9c07-00473d5fb682
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: 4eDwub1zZ1jeWXWtvDNFr5PF+fOTadOHxPIZ/4twuBa52xTEuP9a0ut6AiqDbKBpgnqm3rQ7e1bOQ7NweDZnwHy6pBfcIA6yfatmsPnHRyQ=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: MW3PR17MB4170
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Wed, Mar 29, 2023 at 09:21:25PM -0700, Dan Williams wrote:
> Gregory Price wrote:
> [..]
> > I have an example host where *dpa_base ends up being 0x0 here, and as a
> > result later down the line the region fails to register with this:
> 
> First off, thanks for testing.
> 
> > [   21.974117] cxl_pci 0000:3f:00.0: mem0:decoder1.0 no CXL window for range 0x0:0x1fffffffff
> 
> So, this debug message is a statement about *HPA*, DPA is the device
> local offset, it just so happens that in this case the HPA base and
> DPA base are aligned.
> 
> [..]
> > (full cxl log with bonus prints i added)
> > [   21.607034] cxl_pci 0000:3f:00.0: No component registers (-19)
> > [   21.641831] cxl_pci 0000:3f:00.0: DOE: [d80] failed to cache protocols : -5
> > [   21.642866] cxl_pci 0000:3f:00.0: Failed to create MB object for MB @ d80
> > [   21.643686] cxl_pci 0000:3f:00.0: Failed to request region 0x0000000000001fff-0x000000000010201e
> 
> I assume that this is the attempt to map the RAS component registers
> given the driver load did not fail. Would be interested to see this
> platform's /proc/iomem, but this is separate from the DPA mapping issue.
> Perhaps this device tries to define the RAS capability with another
> block that was already mapped?
> 

I'll snag more information on this tomorrow when I can do a bit more.

> > [   21.644371] cxl add_dpa_res: (0, 1fffffffff)
> > [   21.645540] cxl add_dpa_res: (2000000000, 1fffffffff)
> 
> Ok, this device has a 128G ram region and no pmem.
> 
> > [   21.965692] cxl hdm dvsec range: (0, 1fffffffff)
> > [   21.967045] cxl emulating decoders: dpa_base(0)   <-  *dpa_base
> 
> That's ok...
> 
> > [   21.967778] cxl_add_to_region: searching for root decoder with address range(0, 1fffffffff)
> 
> Now it switches to search for a CFMWS for the HPA that just to be
> identity mapped to DPA by accident.
> 
> > [   21.972824] cxl match decoder: found root decoder, r1(1050000000, 304fffffff) r2(0, 1fffffffff)
> 
> I am assuming that this means the only CXL window defined for this
> platform is 1050000000-304fffffff?

Yes sorry, r1() is the root decoder which maps to the CFMW, r2 is the
device dvsec defined range.  I actually wrote this out while i was
working towards the second half of the experiment, just left this here
for completeness incase i got something wrong.

> 
> > [   21.974117] cxl_pci 0000:3f:00.0: mem0:decoder1.0 no CXL window for range 0x0:0x1fffffffff
> > [   21.974905] cxl discover_region: failed to add to region: 0x0-0x1fffffffff
> 
> Driver is giving up for cause because either the BIOS failed to program
> the range registers of the device correctly, or it failed to publish a
> window for where the device is decoding.
> 
> > Ultimately having trouble deciding if this is something broken with
> > bios, the setup_hdm_decoder code, or the discover_region code.  I'm not
> > PCI guru, but we should expect the rdm dvsec range to be in the range of
> > the root decoder window / CFMW:  r1(1050000000, 304fffffff)
> 
> Yes, either that or a CFWMS for 0-1fffffffff
>

Given this system is single-socket, and has only a single CXL memory
expander connected to it, and that a CFMWS for 0-1fff.. seems
irrational, I'm going to go with the Range Register is wrong.

> > confirming this is the issue, i *forced* the dvsec range register to read
> > out base+0x1050000000
> 
> Nice!
> 
> > diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> > index 7328a2552411..6fc6df0f7b5a 100644
> > --- a/drivers/cxl/core/pci.c
> > +++ b/drivers/cxl/core/pci.c
> > @@ -340,12 +344,16 @@ int cxl_dvsec_rr_decode(struct device *dev, int d,
> >                 if (rc)
> >                         return rc;
> > 
> >                 base |= temp & CXL_DVSEC_MEM_BASE_LOW_MASK;
> > 
> >                 info->dvsec_range[i] = (struct range) {
> > -                       .start = base,
> > -                       .end = base + size - 1
> > +                       .start = 0x1050000000 + base,
> > +                       .end = 0x1050000000 + base + size - 1
> >                 };
> > 
> > 
> > And this resulted in everything working "as one would expect"
> > 
> > [user@host0 ~]# ls /sys/bus/cxl/devices/
> > dax_region0  decoder0.0  decoder1.0  endpoint1  mem0  region0  root0
> > 
> > [user@host0 ~]# numactl --hardware
> > available: 2 nodes (0-1)
> > node 1 cpus:
> > node 1 size: 0 MB
> > node 1 free: 0 MB
> > node distances:
> > node   0   1
> >   0:  10  50
> >   1:  255  10
> > 
> > [user@host0 ~]# echo online_movable > /sys/bus/node/devices/node1/memory33/state
> > [user@host0 ~]# numactl --hardware
> > available: 2 nodes (0-1)
> > node 1 size: 2048 MB
> > node 1 free: 2048 MB
> > node distances:
> > node   0   1
> >   0:  10  50
> >   1:  255  10
> > 
> > 
> > Basically the question is:
> > 
> > Is the DVSEC Range Register expected to be programmed by bios, and are
> > not being programmed correctly?
> 
> This debug experiment makes me think perhaps the *device* is at fault,
> not the BIOS. Perhaps the device accepts writes to CXL_DVSEC_RANGE_BASE
> to set up the decode as expected, but reads return 0? That's the only
> way that I can see that forcing that offset results in successfully
> talking to memory.
> 

Noteably, this is the same system in which i discovered a bios bug with
the CEDT.CMFW base.  I also have a patch in the kernel that corrects the
CFMW interleave target indexing.

So it's entirely possible that the bios is not programming things
correctly and simply leaving the device indexed at 0x0, while the device
sets up most everything else.

But I will investigate a bit further.

> > Or is there something else missing here to correct for the CMFW base?
> [..]
> > If it's the former, then this patch set is gtg and i'm happy to add my
> > Tested-by tag.  If it's the latter, can we hotfix it before release?
> 
> Yeah, FWIW, I don't see anything wrong from the kernel side, and would
> be curious what the BIOS reports if it reads back what it wrote to the
> CXL DVSEC range registers.

At this point I concur, you can add my tested-by to each of the patches
on this line.  I will reach out to the platform and device vendors to
investigate further.  Thanks for the input.

Tested-by: Gregory Price <gregory.price@memverge.com>

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 1E269C6FD1D
	for <linux-cxl@archiver.kernel.org>; Thu, 30 Mar 2023 04:21:44 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229456AbjC3EVn (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 30 Mar 2023 00:21:43 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:54072 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229738AbjC3EVm (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 30 Mar 2023 00:21:42 -0400
Received: from mga09.intel.com (mga09.intel.com [134.134.136.24])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 54D9A1723
        for <linux-cxl@vger.kernel.org>; Wed, 29 Mar 2023 21:21:41 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1680150101; x=1711686101;
  h=date:from:to:cc:subject:message-id:references:
   in-reply-to:mime-version;
  bh=ZNzxFeRlAJHhfYJV/z66KFIvgADtqTEruw/fItg4G1g=;
  b=hdCnrvJaFLZQoKjN7QgWJHOfBhY8KsdnpcGtmj4NmQ+w6zpDh6WHVicF
   i6BQnWcCxn4ovXtVu4E+bX0bemVSDCKNwOLWmIufIIf7UgNSMIUbmxdq7
   aZhAbq34nDlkMzo0IsmMU83HyoZek6YXm7ihatC+aZ9MHvhi+Tu4Hg+CI
   13+2Oe5tW/c+exT23DzuFLDR1/sxmrDAmUAiw9+unran2jAaQM0L4944P
   C3DQdDOSOaLLV9kHWg3V7co/TIztUaZdADpCB6Z9P/ugZgozmP/zfIb/z
   k07m3vrT13aZT1Bfyf9vljpxQJd3q49p3vXttzKWO1jZWPET250iLqhWp
   w==;
X-IronPort-AV: E=McAfee;i="6600,9927,10664"; a="342675465"
X-IronPort-AV: E=Sophos;i="5.98,301,1673942400"; 
   d="scan'208";a="342675465"
Received: from orsmga005.jf.intel.com ([10.7.209.41])
  by orsmga102.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 29 Mar 2023 21:21:40 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10664"; a="858752716"
X-IronPort-AV: E=Sophos;i="5.98,301,1673942400"; 
   d="scan'208";a="858752716"
Received: from orsmsx603.amr.corp.intel.com ([10.22.229.16])
  by orsmga005.jf.intel.com with ESMTP; 29 Mar 2023 21:21:38 -0700
Received: from orsmsx611.amr.corp.intel.com (10.22.229.24) by
 ORSMSX603.amr.corp.intel.com (10.22.229.16) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21; Wed, 29 Mar 2023 21:21:37 -0700
Received: from orsmsx602.amr.corp.intel.com (10.22.229.15) by
 ORSMSX611.amr.corp.intel.com (10.22.229.24) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21; Wed, 29 Mar 2023 21:21:37 -0700
Received: from ORSEDG602.ED.cps.intel.com (10.7.248.7) by
 orsmsx602.amr.corp.intel.com (10.22.229.15) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21 via Frontend Transport; Wed, 29 Mar 2023 21:21:37 -0700
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (104.47.66.48) by
 edgegateway.intel.com (134.134.137.103) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.21; Wed, 29 Mar 2023 21:21:37 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=jU+sgdcrYVgx8qJuLxOa8ALEYGigjXDJN1q5J9exM9ZdqDoJzGPdNIM+k8Oed7HdgPeO1T1tc/XhInZcUbh2YY9zVSFY+LJII75HDPptgMnL1PPTczwUoQ5iKjNgtOqx0zBTGXqwIeCvHiuR3WDzAn51I9o5CAdjT/HeGVGinb3oJrm1iZ/4Wr/YJ3Tu+FrrIOsmgn8oVn3njkzOdeYkxWtNK1C3NQSWdOwZE67QoCk7p66+te6ChI8QI+wilSNnY6S9ty0urZLSeook7tpNyNFNjS6aQ0MlnseeeJqwKB4SCdLlFROvpk+WfjR6WZq3gi9Lxa187LiBpcKTygGdDA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=yIsCpdD0fcGBmzxrWVpB0TcY7oO+T5k+Cp/ReyuRaNg=;
 b=IwPXaM1arWValDa5BFRv7fesnMoVxeYAIyqEpSi2eEZfQSX3ahlIuSt49epN9F1nnYjXWcbDVNRsXTDbspXDxB8NHSw8VnKC84Z4CDHfhu1ln1bm8JOpDn5jikphHITAtUE+XNKzMDkdeludOQ1x2ZdDTQYRdrybQzyPyobvo0ZnHtPIHbRAqP6j2vdabEPQHXv2H9zp5yBQkKwhYD1ncfYkf7o82JVU6nmHVqtCJUy6gdJQgFsPi8qZbXrSWWNJnKxLKxWR/592Jg73jbHanBVdAtePqIlcmRGs6ZD7c7h9oQT5S9R2qU9RBH71fBMA1wMul021hOd9XJTT+hJXSQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by DS7PR11MB7835.namprd11.prod.outlook.com (2603:10b6:8:db::10) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6222.33; Thu, 30 Mar
 2023 04:21:30 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::ffa1:410b:20b3:6233]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::ffa1:410b:20b3:6233%4]) with mapi id 15.20.6254.021; Thu, 30 Mar 2023
 04:21:28 +0000
Date: Wed, 29 Mar 2023 21:21:25 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Gregory Price <gregory.price@memverge.com>,
        Dan Williams <dan.j.williams@intel.com>
CC: <linux-cxl@vger.kernel.org>, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <ZCRhhUDcmypVKu0X@memverge.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <ZCRhhUDcmypVKu0X@memverge.com>
X-ClientProxiedBy: SJ0PR03CA0268.namprd03.prod.outlook.com
 (2603:10b6:a03:3a0::33) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|DS7PR11MB7835:EE_
X-MS-Office365-Filtering-Correlation-Id: 0fd42269-14d2-49b0-8b8a-08db30d63b71
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: gYPhDTXoxMzX0JyAIq/Owe+YlS5RXmRCgFlVb9T0EOsj+QtA1vQ0SXHrK0SygBEHc0TzqP5gYQcmSs2mhJRiwzPfx7L//p9t27BZsdfFmm4UiUDkqYkM58zWcdkvf8Gx+klGoYj3o0mei5xPczMHm297X0Bb3uHXCPTF+HyLpCOpbg8qsgUYhqDDEkUUcMaaDU+XgcXGyR7ScZoFQeGXQk/LO7dCUJ+brlma8i7dFe3ZIEgRQcUTYYyaI7rPicg2GnvO4M+hCtyWBYCm+SywbowjaE4RVnmPJgm/2gpj8RHALMy7dgqvP77kefNRfkc8O6W7NB9eN+ILnCE+vBcALpsHG4PKqcLeLVY72fkFQnusojmyK46npmJV0gkVkiezkD9zO4o4TnHB/QYvWvSlL88ZkaD8v/cE0zynizRXLKBvXEUsfQYzWJFTquCt6fTxr8b7c+zsP9NUlFdGSke8TOLw83VGqKXqkZJyTDL5dkatgItzhmok4BiBMg2J0mtg6mOEEUQVp91mX2R86o+wtyJdEDtg6krqsesjwfEIVpeD6LkvLKFHSVzUXQh7saNT
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(346002)(39860400002)(376002)(136003)(396003)(366004)(451199021)(186003)(478600001)(6666004)(107886003)(316002)(6512007)(110136005)(9686003)(6506007)(26005)(83380400001)(66476007)(38100700002)(86362001)(8936002)(5660300002)(6486002)(66556008)(4326008)(66946007)(8676002)(2906002)(82960400001)(41300700001);DIR:OUT;SFP:1102;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?cOUx7VUqAFc0vpvvzQcPo2TzTZrmSZO8sXQtVDO8oBPewf96OojIVyY+ISOR?=
 =?us-ascii?Q?T6hp64OlAkHe6Z68VHDu3xlzY/R1i52zhq/1GF3yqxrnsyB0nr18zTt4hSZw?=
 =?us-ascii?Q?12pCNH5EpmKamk+4MLR/GCJFGrAoeXrTkfkDLLozOFP9PRJrK+ygGaZx7PAB?=
 =?us-ascii?Q?vlISLSAieDQmCeyeg9OCKVpnzQ1RnVe2D7sXwWnDlSTaYUdx/wfx5Ri8323+?=
 =?us-ascii?Q?9B6k/HFQhM4CyWyQOIufaOD045t8b7YNS4Nc7VyfFNrCd3FAlW7Ccn/8uPlH?=
 =?us-ascii?Q?0SqPvR0stJlEb/HQLdmKeEQoz+1spu8lvXHXl4VqSZpQrxn6KuHg11k0tH9k?=
 =?us-ascii?Q?oVq1TWDvgleuW3skyMqJtPDYu6BtDpZQUqd3GsCIGF5v6Yj5sC3NaNzUs5MI?=
 =?us-ascii?Q?Au3yBufKITMOpCbOWUOVBGXiFO6YxckTWzee90y5AEUduV/GcCIvDClnXifW?=
 =?us-ascii?Q?uDqRotAxx4TyBMAFY0/VFWweVPDlOl0/YgdBPNn00yuxJo0jHkk9K6J8Sccw?=
 =?us-ascii?Q?3bRgxodf+9UNo9WzEk3wk9LyEGb06hM0xh+VLnG8caV4JnPRk8nbFKv7gmYw?=
 =?us-ascii?Q?6Jmv9mChN/cR7VCqd39XaT8VH75wGB9/tMX+tfgrbyUYCW3vzM6TKIaq2M6F?=
 =?us-ascii?Q?VL6K8E8cAEqlgZksD5wthH86ftO/A6nIELYXqpBC/4kv6eWhnnRTe1SstG+I?=
 =?us-ascii?Q?S2lzIg7gkLo2WJxHn06P5vp60+P+Ys0uYk7cu+PauIFBEa0WQacrHULmY6l/?=
 =?us-ascii?Q?Xnv8sqfcQRPDdHfzvWXCSoWD2CAM1AzegjRyRbHxhohkM2w8/apke0RJEBne?=
 =?us-ascii?Q?U4OgmaGLnaJ+g5q0OfeheTlWXeNXuAf0A90PyTKnVLhGFKd6VM71gNae8PXQ?=
 =?us-ascii?Q?q9jcm0ppEz4PhwTOGN8QpOA3ILj6Xczk5/MfQyFRq3OiyY6zOi//9wzQ3ktw?=
 =?us-ascii?Q?oJwceApNLiRBBxBTH8fg2liQSLlbACCZJx+UWcLSBTxYbUnO0r4JE1XaIiSx?=
 =?us-ascii?Q?kPq19FLN/BfrSaQBI2rU3LUSPzB43A//5CzWP1IUSGav0OXAz8F+pzw8+dRW?=
 =?us-ascii?Q?42SErPAZZmYtlIttD3pv/lOuwH5mDztf0sz7xJ2TE2KDYZuJM6SKlZ8ONel4?=
 =?us-ascii?Q?6Ra4oPUgqe3JH2OAKnY/sSXzbocvA87CGPLlUlOLczBDfWjVTllZ9gpcBgtQ?=
 =?us-ascii?Q?KZyKBcuxsSPuAIOCckZcG5K7ypcqqRvS1RKDa0Ni429khVypUw2O3AaNiDmA?=
 =?us-ascii?Q?Q256VGIxCcSQ8pmUHTK/BIf7LaeOuvUy0VhkIqAwdQPjzaPPhCBd42C1/4pT?=
 =?us-ascii?Q?5hHYf3anAeGC7f3wLI99CZGRES8a+v8/esk98z2udkxX/7RDM5eMbY0KVWG2?=
 =?us-ascii?Q?0Qqf0rQryX4tR3lQOTjL73oE3CiLiso5xQ3RYnZY+f+XrA52/VJKRT/X7brm?=
 =?us-ascii?Q?N+jwvpVhmn4xs5MPB7GQLOzxjhfHoOYBbPglEULgictbiw8L/m/w91WG88HO?=
 =?us-ascii?Q?HW81K6GiagsaNRlT7G97+1FKYz9SOvA+RDFe2JaH3z1glHgTmrJ4GTkQJw+V?=
 =?us-ascii?Q?v5otLo38a+ilKX43XmIV1Gor10rH9AfcyVP3mPn4jzOh3D0Zw3W/0Kxr5X8O?=
 =?us-ascii?Q?DQ=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 0fd42269-14d2-49b0-8b8a-08db30d63b71
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Mar 2023 04:21:28.3888
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: hbOFyjRISJ9WVPNtSF0Od/zKEA2dVqWNGFaZBSgtrTFRUV16ieRTFyK4fMe0PjiwdhHmU1Yp8HF533/xctfw+S7WtRPKXSCTR3ILT+yWWHw=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS7PR11MB7835
X-OriginatorOrg: intel.com
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Gregory Price wrote:
[..]
> I have an example host where *dpa_base ends up being 0x0 here, and as a
> result later down the line the region fails to register with this:

First off, thanks for testing.

> [   21.974117] cxl_pci 0000:3f:00.0: mem0:decoder1.0 no CXL window for range 0x0:0x1fffffffff

So, this debug message is a statement about *HPA*, DPA is the device
local offset, it just so happens that in this case the HPA base and
DPA base are aligned.

[..]
> (full cxl log with bonus prints i added)
> [   21.607034] cxl_pci 0000:3f:00.0: No component registers (-19)
> [   21.641831] cxl_pci 0000:3f:00.0: DOE: [d80] failed to cache protocols : -5
> [   21.642866] cxl_pci 0000:3f:00.0: Failed to create MB object for MB @ d80
> [   21.643686] cxl_pci 0000:3f:00.0: Failed to request region 0x0000000000001fff-0x000000000010201e

I assume that this is the attempt to map the RAS component registers
given the driver load did not fail. Would be interested to see this
platform's /proc/iomem, but this is separate from the DPA mapping issue.
Perhaps this device tries to define the RAS capability with another
block that was already mapped?

> [   21.644371] cxl add_dpa_res: (0, 1fffffffff)
> [   21.645540] cxl add_dpa_res: (2000000000, 1fffffffff)

Ok, this device has a 128G ram region and no pmem.

> [   21.965692] cxl hdm dvsec range: (0, 1fffffffff)
> [   21.967045] cxl emulating decoders: dpa_base(0)   <-  *dpa_base

That's ok...

> [   21.967778] cxl_add_to_region: searching for root decoder with address range(0, 1fffffffff)

Now it switches to search for a CFMWS for the HPA that just to be
identity mapped to DPA by accident.

> [   21.972824] cxl match decoder: found root decoder, r1(1050000000, 304fffffff) r2(0, 1fffffffff)

I am assuming that this means the only CXL window defined for this
platform is 1050000000-304fffffff?

> [   21.974117] cxl_pci 0000:3f:00.0: mem0:decoder1.0 no CXL window for range 0x0:0x1fffffffff
> [   21.974905] cxl discover_region: failed to add to region: 0x0-0x1fffffffff

Driver is giving up for cause because either the BIOS failed to program
the range registers of the device correctly, or it failed to publish a
window for where the device is decoding.

> Ultimately having trouble deciding if this is something broken with
> bios, the setup_hdm_decoder code, or the discover_region code.  I'm not
> PCI guru, but we should expect the rdm dvsec range to be in the range of
> the root decoder window / CFMW:  r1(1050000000, 304fffffff)

Yes, either that or a CFWMS for 0-1fffffffff

> confirming this is the issue, i *forced* the dvsec range register to read
> out base+0x1050000000

Nice!

> diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> index 7328a2552411..6fc6df0f7b5a 100644
> --- a/drivers/cxl/core/pci.c
> +++ b/drivers/cxl/core/pci.c
> @@ -340,12 +344,16 @@ int cxl_dvsec_rr_decode(struct device *dev, int d,
>                 if (rc)
>                         return rc;
> 
>                 base |= temp & CXL_DVSEC_MEM_BASE_LOW_MASK;
> 
>                 info->dvsec_range[i] = (struct range) {
> -                       .start = base,
> -                       .end = base + size - 1
> +                       .start = 0x1050000000 + base,
> +                       .end = 0x1050000000 + base + size - 1
>                 };
> 
> 
> And this resulted in everything working "as one would expect"
> 
> [user@host0 ~]# ls /sys/bus/cxl/devices/
> dax_region0  decoder0.0  decoder1.0  endpoint1  mem0  region0  root0
> 
> [user@host0 ~]# numactl --hardware
> available: 2 nodes (0-1)
> node 1 cpus:
> node 1 size: 0 MB
> node 1 free: 0 MB
> node distances:
> node   0   1
>   0:  10  50
>   1:  255  10
> 
> [user@host0 ~]# echo online_movable > /sys/bus/node/devices/node1/memory33/state
> [user@host0 ~]# numactl --hardware
> available: 2 nodes (0-1)
> node 1 size: 2048 MB
> node 1 free: 2048 MB
> node distances:
> node   0   1
>   0:  10  50
>   1:  255  10
> 
> 
> Basically the question is:
> 
> Is the DVSEC Range Register expected to be programmed by bios, and are
> not being programmed correctly?

This debug experiment makes me think perhaps the *device* is at fault,
not the BIOS. Perhaps the device accepts writes to CXL_DVSEC_RANGE_BASE
to set up the decode as expected, but reads return 0? That's the only
way that I can see that forcing that offset results in successfully
talking to memory.

> Or is there something else missing here to correct for the CMFW base?
[..]
> If it's the former, then this patch set is gtg and i'm happy to add my
> Tested-by tag.  If it's the latter, can we hotfix it before release?

Yeah, FWIW, I don't see anything wrong from the kernel side, and would
be curious what the BIOS reports if it reads back what it wrote to the
CXL DVSEC range registers.

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 925CBC77B7F
	for <linux-cxl@archiver.kernel.org>; Tue, 16 May 2023 15:29:40 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232108AbjEPP3j (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Tue, 16 May 2023 11:29:39 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:53298 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S233244AbjEPP3i (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Tue, 16 May 2023 11:29:38 -0400
Received: from NAM12-MW2-obe.outbound.protection.outlook.com (mail-mw2nam12on2082.outbound.protection.outlook.com [40.107.244.82])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id E7E487EE8
        for <linux-cxl@vger.kernel.org>; Tue, 16 May 2023 08:29:31 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=EmfgMkJgpOi8DlFSOZgut7lHuPDESTDoWDo9FVRvVdosQT5jXmL6WGyOjzpR1Yt+rs7B7Krf+nP63Od7fnN9IpzDp/0+37ht75LSrIowALP2CjE8r5RqtV0VRzJ3mmt2+rQ/fcr73SFTV91nNEknvnHUNDc5UWW43vTn8XYCv70T3uTlIbKTztEoJFmNcdF72zB4Spc+dEqNsJMNAcLeb54cRGJvszz1+1+jFZzBBOCSiMRf+vkwDdFaViYltGRNz42xckM0QS1OOy9RhAeIsChibh9rViCRMROf4qiDFdID2ZTXLOCLH2hgO3CJEjAjrM6WcJyzmMHTSBsx2U8n6w==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=rptxG4ulVWfshbYPwj0KGXyroR1+uNkXB39JBMer0Bs=;
 b=azo8eSv+a3i94yWhDLyu6o4UAimQGovJlL89SoG1EVHlPuSIDB3PL3l2ENQ+nyWkKkl4K/TXN4q5DZbux8N6F0+D0y8uE41I3NJIU5pKN01XailVPsAzgBldC4Z6RLyZnDG5iAD5s/c13Y7F+mCbLcs/Vf2SSQfrRe0dZP3cQFcgNnxviH88tl1T7TcwmvSEeQWRpkoxn061/D4NLJRcXvSbKPQY6jQ1/7fsUNqr1DVr9a7HIDeiQawXyjBD1VFRXtYLLmM8uz2PBa9eMjMJGPGob1ajMcD46zx0vfLEsG3pV/+uy3wv+iuwI5N+szi7LXvjNmTG+NBPTQUrP7g6ng==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=memverge.com; dmarc=pass action=none header.from=memverge.com;
 dkim=pass header.d=memverge.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=memverge.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=rptxG4ulVWfshbYPwj0KGXyroR1+uNkXB39JBMer0Bs=;
 b=vfP1lzrDxZggVM7iMkKUmy4ErkUSMbxWOA26GblRzTfdXgskjKYlGuNSxitjS0imVvREE0i0ScfUxHqkC3nHhCiIzJhmLuqnr6qSdVg3raRLhViYE8WfbEWyid0rogecLAgcBbwjoFRXSdKtUsWQCrnbgUP5MOULU0fyrgNCWjE=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=memverge.com;
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com (2603:10b6:a03:394::19)
 by DM6PR17MB4168.namprd17.prod.outlook.com (2603:10b6:5:295::19) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6387.33; Tue, 16 May
 2023 15:29:28 +0000
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a]) by SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a%5]) with mapi id 15.20.6387.028; Tue, 16 May 2023
 15:29:28 +0000
Date: Tue, 16 May 2023 02:43:15 -0400
From: Gregory Price <gregory.price@memverge.com>
To: Dan Williams <dan.j.williams@intel.com>
Cc: linux-cxl@vger.kernel.org, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <ZGMmA0Rs/9wYNxaU@memverge.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <ZCRhhUDcmypVKu0X@memverge.com>
 <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
 <ZCRzQxmafPCCWJOx@memverge.com>
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <ZCRzQxmafPCCWJOx@memverge.com>
X-ClientProxiedBy: SJ2PR07CA0023.namprd07.prod.outlook.com
 (2603:10b6:a03:505::9) To SJ0PR17MB5512.namprd17.prod.outlook.com
 (2603:10b6:a03:394::19)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: SJ0PR17MB5512:EE_|DM6PR17MB4168:EE_
X-MS-Office365-Filtering-Correlation-Id: f9d369e1-b7db-468a-c79a-08db5622564e
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: xzUvVnJshnqOTjjsmZb79iP7uqwy76GrjY9v+8m6vqh85luYEPMCbAF43tJ5+Zbh4LwAhhFr5Wy3Tzgps2ObSQauNGLF6NxYytRRBbljHVH99bpgvToz0eyvUAi6albNbvfFbIyBi4VX1kcdtAgevfVCpT8o8fe6AATYqT0ReDy46omfo7HPX6EeG8FcUzj/hkDpY4o2ljPbivfN4W9rNF3FD3owROKYwAkNzOUEYBBvP22x4Cjg/APEeE+cmrhDZDJcCMqlcF/3Fv/58CyuBDaL2VNIGcwihy7SJbEJYvT8CdPZIbq8KvWtCDe4OdvRhC9+OSKYQIz+rAzYCdy0SzC0Q0QwQipXPHkrqbxnfChAr547+WvwYuGPRo8FRQjKnMk+ol1a4ACqQBYGdkbo1BKle6GuBQmPONJ5O9Wn0ciNSqz1k+v2K1Gqxmh0BiVq6uaQYvxoc5XXgnqm48q6oaimKnudGL+ZouGBuSAX6YsCAk1DttHGnb5C4zavF4h2LMiSdqwObCvaUqaGQjpZ8fY7rGOK7eGvYfX0zu5b6BlSEno/4hFM7TuqcXJdi+hT
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SJ0PR17MB5512.namprd17.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(396003)(376002)(366004)(346002)(136003)(39840400004)(451199021)(4326008)(36756003)(6916009)(2906002)(44832011)(8676002)(8936002)(5660300002)(86362001)(41300700001)(66476007)(66556008)(316002)(66946007)(478600001)(6666004)(6486002)(186003)(26005)(6506007)(6512007)(83380400001)(2616005)(38100700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?MFYAtYw8jAnc3oPylomidmdqayza+VcKvzhtXzyT0wIFNIgRf+EaztOU5FZs?=
 =?us-ascii?Q?ZTnSp1WWqfeCRdUYOsH38dfqXyZtu6LmZXHjaiUAkciV5GlLLMAKeFOJnfWq?=
 =?us-ascii?Q?auahGU6dBMztvhQyfsmrKrClHLLHlbLqjG/l7/pSKpIdLknfQ9x6DDE7mvUc?=
 =?us-ascii?Q?SHAJtAUX/h5RyTLbWe3NkmaAdNgl9edYILCFiiXm4WkVc3VerwhrgLPOuywX?=
 =?us-ascii?Q?XU3alCMFZ1E/qfbKuwtXDJHIJwidaAnZA5jagA/cT22iQRv8WBs9+bnMd910?=
 =?us-ascii?Q?O4P9BhwX11Z2NSHRpdUgYHZ8Ihcw8PtmgpiKPyAma5AMu8JInz3yPsy6qR9V?=
 =?us-ascii?Q?tLYeQEgPxDtlRMdFCXJ9sgVEeqlx7gMtThmGmLnVO40oJcDe4zpr6ypXJ9oJ?=
 =?us-ascii?Q?lkVheLfEcDmBN2jI2XWYH+stGPg719NlzibEtwTDA9qy5RUwtfYwGCbMSXu3?=
 =?us-ascii?Q?djjR+9OYSu9vM3tTw+BRiJnzlL/YRWiWbWUvVe9QK8ldX6On/2ji8+/IiP4v?=
 =?us-ascii?Q?dKn2BnLLRdVkWEMSdVuJ7jp3FJ8KW4dPkmbYbvO8xovWTKVftjGtoNk41x54?=
 =?us-ascii?Q?Xzlcy4cBZA6CNIa9fhWyU/SsVKDzBRqHOfgHLy1UIkiM7WfGhFtvJYBdhh2l?=
 =?us-ascii?Q?nhydRK8wjYwvaaXTj14Xe8zwuwcn/4HlavlxwNBHpEjADLhmEH/x0dlC4Nvm?=
 =?us-ascii?Q?pfu1+G7zDL2YHlZRJf/MFt+N7IVacIE0HvNqwFLws8rR8p3TVc2vQQK9VKvf?=
 =?us-ascii?Q?mrhwuDgtQXBFaHvlk1BlZgZ4ksDuEEbmZ3zVHcmbZ6yCdn2FeJrv9xScb9ZP?=
 =?us-ascii?Q?ik4nIoQUZ72A2rdDYTrg3Ymt0hrDjFnxNviVHnNC3wPNOBMHq6MlcRKi7aXO?=
 =?us-ascii?Q?Bq4GsEm+liJmMIk/jxMLC1EM6csQWVoZN1Kl5iHQJbO5YxjQqQj/Gh6kfFut?=
 =?us-ascii?Q?JQ9FxJCwzaBz9iLq9qRbRBKkxiXTymHoYdtEMeHGzbfgl1wvyQPA0aCz6gR3?=
 =?us-ascii?Q?cuV7TwYFAP+wob22WB0azl/ZWJtJrXLi5sd8NIbu4LvRQFLfPMup5qYzXrgg?=
 =?us-ascii?Q?qRTTmdou8RLQPWzeE+4rro3Dn2BtE/GBBnGrfzIDyi7KiRXpnO70QNFvA0Hm?=
 =?us-ascii?Q?/A4N4XX9kKAMmdelCd/yksNicNiKlUV9Gm4/KMPGKwcDHhQYrPEtchaxaU6f?=
 =?us-ascii?Q?lrEPjbPzwv2z07iKnJZ6DInFnzaW5W1NEr2yAHg5f8E9SYKYWv9bwsgrnPJe?=
 =?us-ascii?Q?TH9VMkoncTZ/PxNa1XaiRtVGnsGGyheVM2xwsgNN+I53fRiEPOHpaDrkoUNp?=
 =?us-ascii?Q?lUI3rqIMulpyuGgDUYTRKs6ZI5r/wVmfI0eoUPdJyU+1ne0chA2Y3MwouZxL?=
 =?us-ascii?Q?+zDdM0A7qFXw/JFMfWWDh8NKg2XUyhJ03TCq/khGK0iKNm96MU2R2sX2dFC4?=
 =?us-ascii?Q?RT7vxHpTT1Kd0yoqZvuj5ghsayTjsYAwOBPiWLbcKaTKsBh8Ak60mMKa5Xrb?=
 =?us-ascii?Q?dCcpeJ8uNbCRJDMbyaM5zSjMNBCz1QRvPb0UN0Dy07ZEnQBTo2U1qnHmdnhw?=
 =?us-ascii?Q?CmPmZZ5KDElgGjrnUn9+sCvLKoNbDQILzDZUkvFg/sm7v62h43jNlHDdw7x6?=
 =?us-ascii?Q?kg=3D=3D?=
X-OriginatorOrg: memverge.com
X-MS-Exchange-CrossTenant-Network-Message-Id: f9d369e1-b7db-468a-c79a-08db5622564e
X-MS-Exchange-CrossTenant-AuthSource: SJ0PR17MB5512.namprd17.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 16 May 2023 15:29:28.1564
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 5c90cb59-37e7-4c81-9c07-00473d5fb682
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: iQwnNnqMX5G00USErHcI6+y0QMEHumN87oUgPhU3TH7G0ZUX/iThbED+PNd75ZeaDQCGwOLyyzb8GxLJ6re/Iv359WRqgbJYgWwsr6vUeyI=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR17MB4168
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Wed, Mar 29, 2023 at 01:20:03PM -0400, Gregory Price wrote:
> 
> Given this system is single-socket, and has only a single CXL memory
> expander connected to it, and that a CFMWS for 0-1fff.. seems
> irrational, I'm going to go with the Range Register is wrong.
> 
> > > confirming this is the issue, i *forced* the dvsec range register to read
> > > out base+0x1050000000
> > 
> > Nice!
> > 
> > > diff --git a/drivers/cxl/core/pci.c b/drivers/cxl/core/pci.c
> > > index 7328a2552411..6fc6df0f7b5a 100644
> > > --- a/drivers/cxl/core/pci.c
> > > +++ b/drivers/cxl/core/pci.c
> > > @@ -340,12 +344,16 @@ int cxl_dvsec_rr_decode(struct device *dev, int d,
> > >                 if (rc)
> > >                         return rc;
> > > 
> > >                 base |= temp & CXL_DVSEC_MEM_BASE_LOW_MASK;
> > > 
> > >                 info->dvsec_range[i] = (struct range) {
> > > -                       .start = base,
> > > -                       .end = base + size - 1
> > > +                       .start = 0x1050000000 + base,
> > > +                       .end = 0x1050000000 + base + size - 1
> > >                 };
> > > 
> > > 
> > > And this resulted in everything working "as one would expect"
> > > 
> > > [user@host0 ~]# ls /sys/bus/cxl/devices/
> > > dax_region0  decoder0.0  decoder1.0  endpoint1  mem0  region0  root0
> > > 
> > > [user@host0 ~]# numactl --hardware
> > > available: 2 nodes (0-1)
> > > node 1 cpus:
> > > node 1 size: 0 MB
> > > node 1 free: 0 MB
> > > node distances:
> > > node   0   1
> > >   0:  10  50
> > >   1:  255  10
> > > 
> > > [user@host0 ~]# echo online_movable > /sys/bus/node/devices/node1/memory33/state
> > > [user@host0 ~]# numactl --hardware
> > > available: 2 nodes (0-1)
> > > node 1 size: 2048 MB
> > > node 1 free: 2048 MB
> > > node distances:
> > > node   0   1
> > >   0:  10  50
> > >   1:  255  10
> > > 
> > > 
> > > Basically the question is:
> > > 
> > > Is the DVSEC Range Register expected to be programmed by bios, and are
> > > not being programmed correctly?
> > 
> > This debug experiment makes me think perhaps the *device* is at fault,
> > not the BIOS. Perhaps the device accepts writes to CXL_DVSEC_RANGE_BASE
> > to set up the decode as expected, but reads return 0? That's the only
> > way that I can see that forcing that offset results in successfully
> > talking to memory.
> > 
> 

Wanted to follow this up with some additional information.

The reason this patch / debug test worked is because the platform

1) Does explicitly programs the range register base with 0x0.

and

2) Does address translation on the root complex and puts 0-indexed
   addresses on the wire to the target devices.

So under this platform, one would expect all of the RCD's to have their
range register filled in with a 0x0 base.

This is frustrating and this won't work with the existing driver code,
because the driver code expects the device's to have the correct range
register value set.

The only thing I can think of is adding code here to check whether this
situation is occurring, and then attempting to read information from the
RCH topology to fill in the info->dvsec_range[*] with the correct value.

I'm not really sure what that would look like, nor whether that's a
defensible patch given that the spec wants RR encoded with the HPA, not
a 0-indexed address.

Just food for thought, my frustration is palpable at the moment with
this problem.

~Gregory

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 4B204C76188
	for <linux-cxl@archiver.kernel.org>; Tue,  4 Apr 2023 00:17:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231552AbjDDARC (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Mon, 3 Apr 2023 20:17:02 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:44442 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229576AbjDDARB (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Mon, 3 Apr 2023 20:17:01 -0400
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 3E20AA6
        for <linux-cxl@vger.kernel.org>; Mon,  3 Apr 2023 17:17:00 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1680567420; x=1712103420;
  h=message-id:date:mime-version:subject:to:cc:references:
   from:in-reply-to:content-transfer-encoding;
  bh=gK3zfwjjvZEBkTTwY7Pll/xInJNT+a1e9MQ5dXe1oWc=;
  b=d5MKusj2MgXmmJWot1x6s5l4AQomO0h7PZEKl2xTSC1JBexoC+nZ61SL
   3kQANqlIfiUhJzdnW+scZ+s3w+MPUQ9SrjntxUY/AGe8gE5BVMaWfDxQg
   Ej1+lFm47oZkGU7a67coY59SDSc/cqR//UPaAQZpO20G40NAc/oVqFVTy
   Wl+Mu/X0tV41awfVcJf9Ieix3O2icZEmg6Klufhp5WybAp9lI7oB/47rt
   idWZ2n1lxw09Cjbkrg3scSSCPwZb9taiKJtIjzTkQqlOTNXve1bl25lFh
   MB39TDyNBP8X7JgzHXz1iS2o2QAnCiKj9472X58xivXvn8bTr+59ouaMV
   g==;
X-IronPort-AV: E=McAfee;i="6600,9927,10669"; a="326066102"
X-IronPort-AV: E=Sophos;i="5.98,316,1673942400"; 
   d="scan'208";a="326066102"
Received: from orsmga003.jf.intel.com ([10.7.209.27])
  by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 03 Apr 2023 17:16:59 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10669"; a="636311991"
X-IronPort-AV: E=Sophos;i="5.98,316,1673942400"; 
   d="scan'208";a="636311991"
Received: from djiang5-mobl3.amr.corp.intel.com (HELO [10.213.181.144]) ([10.213.181.144])
  by orsmga003-auth.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 03 Apr 2023 17:16:59 -0700
Message-ID: <f2ff608d-d984-1aab-18e2-ae1fcd65413c@intel.com>
Date: Mon, 3 Apr 2023 17:16:58 -0700
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101
 Firefox/102.0 Thunderbird/102.9.0
Subject: Re: [PATCH v2] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Content-Language: en-US
To: Dan Williams <dan.j.williams@intel.com>, linux-cxl@vger.kernel.org
Cc: Gregory Price <gregory.price@memverge.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <168056315526.436217.14417826023537916154.stgit@dwillia2-xfh.jf.intel.com>
 <1dc1b324-8e77-f98d-3fd0-a20cbf328d2f@intel.com>
 <642b6a7a3b806_29cc29486@dwillia2-xfh.jf.intel.com.notmuch>
From: Dave Jiang <dave.jiang@intel.com>
In-Reply-To: <642b6a7a3b806_29cc29486@dwillia2-xfh.jf.intel.com.notmuch>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org



On 4/3/23 5:08 PM, Dan Williams wrote:
> Dave Jiang wrote:
>>
>>
>> On 4/3/23 4:06 PM, Dan Williams wrote:
>>> One motivation for mapping range registers to decoder objects is
>>> to use those settings for region autodiscovery.
>>>
>>> The need to map a region for devices programmed to use range registers
>>> is especially urgent now that the kernel no longer routes "Soft
>>> Reserved" ranges in the memory map to device-dax by default. The CXL
>>> memory range loses all access mechanisms.
>>>
>>> Complete the implementation by filling out ways and granularity, marking
>>> the DPA reservation, and setting the endpoint-decoder state to signal
>>> autodiscovery.
>>
>> If you don't mind making a note that the default values of ways and
>> granularity are coming from cxl_decode_init(). Thanks.
> 
> Changed this paragraph to:
> 
> Complete the implementation by marking the DPA reservation and setting
> the endpoint-decoder state to signal autodiscovery. Note that the
> default settings of ways=1 and granularity=4096 set in cxl_decode_init()
> do not need to be updated.

LGTM

> 
>> Reviewed-by: Dave Jiang <dave.jiang@intel.com>
> 
> Thanks!

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 2682FC6FD1D
	for <linux-cxl@archiver.kernel.org>; Thu, 30 Mar 2023 14:51:20 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231157AbjC3OvT (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 30 Mar 2023 10:51:19 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:58736 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231322AbjC3OvS (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 30 Mar 2023 10:51:18 -0400
Received: from NAM02-SN1-obe.outbound.protection.outlook.com (mail-sn1nam02on2079.outbound.protection.outlook.com [40.107.96.79])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 72A99900D
        for <linux-cxl@vger.kernel.org>; Thu, 30 Mar 2023 07:51:16 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=ViowWFxH39glL2otdcWxm2DlQM58N0YRpRTCQeAIsSmspmdi40a9/43E87PsFZRbNoQlon5HiaBXY0Ot9xG/9PRf5iIQGxfB3IvW2StbiQtSRQkm2XnCSXiVsVhE2l6HEWG7Y3gf7qW/dUe4PzMFw8dOT+WTNMutDNsJ2dClHojSJl8KkMGFZoSAaAuR7YY4A9dPwICznYsjNumbk1c44LnQOtWvCkR+scHU9jxWqQ3D3dH3w20wUTIxRpI6kOTC1bVoGroEFsSgom1MEmUMHPw4/avMmUSKz1mh8ygJTUahF34XISw2r5VPAGf3U5RnW1y9KRH//U/k/Qmll0Q45g==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=0bObu8aKPXod3KHL2Se5ihFkf2HoeIiJNaYVgSLRtpc=;
 b=iy6RDcyB60gp+TUhqSpgxXaK57I0JQAeKN8QdRmhmTq1eui6UtMjuJbwchX+JHv5p3s/l8I6JbAPstsEaKGqFFUGMUazZB/zoQRTCfAzKDKVZ3LwXDVOW1A9qRFfMrJcNBpg+RSoDKad7SdthOTnBNe+DPF1V/yzAeKcSULAbkL95GLxXpDImvKWkneKnuaeom0J/M1m0xEn1Sm9TZawlLMZiKQ/9OBgkd3tRF3rBJrNBOKexYtXT/CTtfnz0QzDZQApewuDdUxO/opG1gzQ+RGwg/+wcZ1G7Heslf5upY0qNnvWJbICi3/gminy6warv7dMIevBIFN8nZaCFZafcQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=memverge.com; dmarc=pass action=none header.from=memverge.com;
 dkim=pass header.d=memverge.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=memverge.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=0bObu8aKPXod3KHL2Se5ihFkf2HoeIiJNaYVgSLRtpc=;
 b=v/5zJ5PrlAPllH1N4ubn8gp9ZvtNHVy9wX0BL7aOT1geux/M73+hpjGzOAGrf98tNhXoJTXISi4ADoSYipHcngo5HMaRV2XwSJCjOl/qapczGYlzBZXqGMTJ9CGHH7PkkNWtS0kvNZjN+Rl+zs/lVOBvKPOB4FVXMX53eNewdxM=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=memverge.com;
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com (2603:10b6:a03:394::19)
 by SA1PR17MB5540.namprd17.prod.outlook.com (2603:10b6:806:1c9::11) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6178.41; Thu, 30 Mar
 2023 14:51:12 +0000
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a]) by SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a%5]) with mapi id 15.20.6222.033; Thu, 30 Mar 2023
 14:51:12 +0000
Date: Thu, 30 Mar 2023 00:27:02 -0400
From: Gregory Price <gregory.price@memverge.com>
To: Dan Williams <dan.j.williams@intel.com>
Cc: linux-cxl@vger.kernel.org, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <ZCUPlnQYVRCumy2O@memverge.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <ZCRhhUDcmypVKu0X@memverge.com>
 <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
 <ZCRzh0VLSVF/7jya@memverge.com>
 <64252d214f0b_c7222942@dwillia2-mobl3.amr.corp.intel.com.notmuch>
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <64252d214f0b_c7222942@dwillia2-mobl3.amr.corp.intel.com.notmuch>
X-ClientProxiedBy: BYAPR01CA0063.prod.exchangelabs.com (2603:10b6:a03:94::40)
 To SJ0PR17MB5512.namprd17.prod.outlook.com (2603:10b6:a03:394::19)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: SJ0PR17MB5512:EE_|SA1PR17MB5540:EE_
X-MS-Office365-Filtering-Correlation-Id: 341a6f12-9f2a-4773-8c60-08db312e346c
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: FSZfW0J8yl629iaMNnct6KD0h6FxCjgYqOvepBxb2VIo0w598PwpZXx02bkvxzq/KFxd+5bAYE/LEiBLDzSlIelojRAAYZuIOE879x33F9B53e9g1KMR3d1TfxbY+YL1twKh4+VsnHKKLlmhM0Af+zOdpvlNVTtQxNlOmWh39Lvo0pFm0WqiMUe/kr8IsC/6ErJeBu9qU7C5VHZEMrJyBSMF9CvVIIEK/GrqKmIA5r23W/q8/ihE4Ph44cBy3O8SKFoaZa/Pnya/hVRNYxUUUgQUcVltMfKeUrFczTWjj2buSpcYMgDJtz0MNVP0QlNBZORPehACqdy2QzWC2/iaTP3FXSRzlroc3u7br5Xf79BZxthjtn7JHsXhaPsK0U9qlWKGRqHlltXvTxVQcSWdDU3unqagwjFn150Fgubpgbf+o9+HX3SoKEGN3ffcH2HAzHU2/lVepIGJhYGFRbvjo2WR+5MYCHo9g45ACAVPT0mkjZo7Y3vsVQ1oiq5ErUeHUZPfb1jvYNXzm7pxwHGUJfKSwYZwyIudyjLFfQhHFMp0Vw7A6OFLKzgbNsfsTmEq
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SJ0PR17MB5512.namprd17.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(366004)(136003)(346002)(376002)(396003)(39840400004)(451199021)(6512007)(6666004)(36756003)(2616005)(2906002)(44832011)(83380400001)(8936002)(6486002)(5660300002)(316002)(66946007)(478600001)(8676002)(6916009)(186003)(38100700002)(41300700001)(86362001)(66556008)(4326008)(26005)(6506007)(66476007);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?hyJAIEL19k0I+1oh1eAfb16iDsBN0AmkvwQ9wZU5aVh1tEHKTt523nVaLbNS?=
 =?us-ascii?Q?jicUhOGSI6rBJ7SzOYjI/fQTf6IX6/bNyZ7hdgbIoJqJGOGh1T8Lokk949Ez?=
 =?us-ascii?Q?Dkp7fisXEXIb8qFzEY6hV4sHcwIYEGmiV7wHMHtzA3I1UHO4A1kA6SdwTePX?=
 =?us-ascii?Q?nvGLIVGpEak/0C3p1/8b64JA+l5vIRqAItpyTbJB2MlJ/oLxLUDnH7HArOck?=
 =?us-ascii?Q?0c4PYy3T5L3nTaRSNxqDe155RT2lMrU942TT+PpNHNR+BVolagUDX2Jyt/Su?=
 =?us-ascii?Q?l03ARl4WxqrLb8DeRQ7Tlf3upIerR3t3SPxWr//60TPt5zLdmSuElANu6mn2?=
 =?us-ascii?Q?Q27ZDqbyKQAFcTOXVIM5smwPLfgAohBKmQ0csC0Cc3f/jsSgmcx03prb1ojQ?=
 =?us-ascii?Q?Crl09JzVW2x2nposO7tSd6y9IZSCSD0bFtQQBlxypVUTVX1zJO1NlzFKq0al?=
 =?us-ascii?Q?D46FCtVf/+xtBjRuZ+VP5kX1TzsbcMfsTVRqGVwOQNhyQzHnMprixbZJMQsK?=
 =?us-ascii?Q?iRaQdBIjEuur+sXJAPfNiiaUU0xNabFHPpF9aJ0NJtnP7aoxATHwwYy2fRvv?=
 =?us-ascii?Q?/ePcX/x0VKnuxBTV5NDBzYZgSDqNj+gBBlJLTEw8Ww9Zw87KoeAn6o5OzvN0?=
 =?us-ascii?Q?nmTJDIr2FwbXyde2PSWhT6SAgGIj9wPGM0jjVIoXfTLCJFWn57A55JQncV7L?=
 =?us-ascii?Q?DT+d1/E9AFBhagVDMHKS3BkGyUn/kZDyPofMJ/aF42KRw+NJo6M9EAzJ1xo7?=
 =?us-ascii?Q?IbeuXx0ywDGcHh5ERHSYCHSRW10LtbNBaHWd7VH3KZ+z00U2ti0A31JSQ8ws?=
 =?us-ascii?Q?rgKlDRGT22GuHQiXEVlF18IOBkRuoth5/jRLKxbaEs+2iyspzggbv6/zpqED?=
 =?us-ascii?Q?outZYv0FOCx/kwMakhXZ1Hrq/aT+KWmrH079heRKQDlPV8RMekU4D77fN0e4?=
 =?us-ascii?Q?Xx0950og0OxGbA7l4QixQIA2GapxU2AfUoWF4KlpJ4g5bpdEhIMj+UBtarTB?=
 =?us-ascii?Q?2am3ecu5Z74YChNrkKiOs2Wad41Mv3uBLZZ4LRU5vDgS+1ZRqrNRpif2AElp?=
 =?us-ascii?Q?GWKqZbApGF2XwpWsbFVgwIwXhbQBjPyEvnDRMen5SZpi2Wh66GWD4Y/Ih/Yz?=
 =?us-ascii?Q?DlUfLryEr/NsTKayplM9XQV2PGBzrd3ZRn4wp5AIxdj1ik6tcXTWnlYkBL1M?=
 =?us-ascii?Q?JOFHAtcmSZwTSAK4+p/qoB0msxhHHnPwrgPAi/qiXoF8+QJ5WmOfS0y1pTsq?=
 =?us-ascii?Q?kInAH6bFXnc5Gc7GzgABrs5h4SZBhSDWxH/We9YsjVUjSGYNUxubZqPGsXbQ?=
 =?us-ascii?Q?VQT+V3COu1eG25eWoj2j8zPDXThUHKJc+AtKvhnRYRPqoGsbIbdzUWMNSjmH?=
 =?us-ascii?Q?MjbW4derVZd4TxVGpGjuwRgVMrLupVXr2ZqDr4cN7i3+CNZADaZl0l1CREMP?=
 =?us-ascii?Q?G5U/S6dmg6ye4zStN6x7NtzxrS/gRWd876fNn1MNE63vnTjW1PoemcuhCp6R?=
 =?us-ascii?Q?c8NvnfTl0tyxNcSUEPghzd3BOwatJ36OkkweniZPumVPR5uzI40K1rkXulnM?=
 =?us-ascii?Q?JLgIIGB+XlmREkuf+GAfCvrWK5FNk7ehNtiIX4C6io5l1tcY2oB2j0vBxbi8?=
 =?us-ascii?Q?zA=3D=3D?=
X-OriginatorOrg: memverge.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 341a6f12-9f2a-4773-8c60-08db312e346c
X-MS-Exchange-CrossTenant-AuthSource: SJ0PR17MB5512.namprd17.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Mar 2023 14:51:12.2944
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 5c90cb59-37e7-4c81-9c07-00473d5fb682
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: /AwZSgQoGIMuShYZMKyIEvV1w0J9yLq+QmOL/kOayqpKW4cw4dAAXE4r/Cn3sEUJ08qZUZC2w3MF5GGOOCsltPEzSjHbMxHgip4bhtwYBCE=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: SA1PR17MB5540
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Wed, Mar 29, 2023 at 11:33:05PM -0700, Dan Williams wrote:
> Gregory Price wrote:
> > On Wed, Mar 29, 2023 at 09:21:25PM -0700, Dan Williams wrote:
> > > > Is the DVSEC Range Register expected to be programmed by bios, and are
> > > > not being programmed correctly?
> > > 
> > > This debug experiment makes me think perhaps the *device* is at fault,
> > > not the BIOS. Perhaps the device accepts writes to CXL_DVSEC_RANGE_BASE
> > > to set up the decode as expected, but reads return 0? That's the only
> > > way that I can see that forcing that offset results in successfully
> > > talking to memory.
> > > 
> > 
> > Oh, i meant to add that i tested whether the memory is accessible via
> > numactl --membind=1 with both memhog and a python prompt, and things
> > worked just fine.  So memory works.
> 
> One other theory is that the device is correct, but the platform CXL
> window accepts transactions at an offset and then removes that offset
> when transmitting the address down the CXL port. So device thinks its
> decoding 0x0 and never sees the offset removed by the host bridge.

Wouldn't that be against the spec?  I thought the device intended to
receive HPA and do its decode accordingly.

Otherwise you could have multiple devices programmed capable of decoding
0x0, which is already the device address, so there's nothing to
"decode".

I'll follow up as I learn more, this is concerning.  Certainly explains
why every time I switch hardware nothing seems to work quite right.

~Gregory

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id BDB5FC74A5B
	for <linux-cxl@archiver.kernel.org>; Thu, 30 Mar 2023 06:33:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229598AbjC3Gdb (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 30 Mar 2023 02:33:31 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:54846 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229649AbjC3Gda (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 30 Mar 2023 02:33:30 -0400
Received: from mga01.intel.com (mga01.intel.com [192.55.52.88])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 855795252
        for <linux-cxl@vger.kernel.org>; Wed, 29 Mar 2023 23:33:29 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1680158009; x=1711694009;
  h=date:from:to:cc:subject:message-id:references:
   in-reply-to:mime-version;
  bh=EFD8kkzvGjMK2/psgJOrgFBEl1Xx5oiOZ5NsP7g4oPY=;
  b=NqnYCTlQyaxV4Jp7DKAcHgVCkODLWyjGV7kku49mlqnHrMw3lKFBvMew
   g1mIy0PxVrO/Xe6y3TkC+4uHEvZJGOYvbXp+m+QiX9UzeTVdyQiYu1iS4
   fT+KsImJScxJa0YTPfB24Q3jBGUfVZ+3NIiWHHi7Lgtrh6h3v2UBxZg5c
   /RLptm6/msx+lqY9c+31Rb0oyNTOx7cS/zF7LaQk4Wbkdm7inAB2bfSwB
   jrsV+5Au9k4K9ssNIzYi+N/yHQ34aYGFbN8UMZfnptnke8jcPyRWxcDhM
   uUJdlUE3rN42t2dpQp6SuBQBiSUda5hqALPqXIvxsjX4/gJzUAaMgU/mS
   g==;
X-IronPort-AV: E=McAfee;i="6600,9927,10664"; a="368862238"
X-IronPort-AV: E=Sophos;i="5.98,303,1673942400"; 
   d="scan'208";a="368862238"
Received: from orsmga006.jf.intel.com ([10.7.209.51])
  by fmsmga101.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 29 Mar 2023 23:33:29 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10664"; a="661884228"
X-IronPort-AV: E=Sophos;i="5.98,303,1673942400"; 
   d="scan'208";a="661884228"
Received: from orsmsx603.amr.corp.intel.com ([10.22.229.16])
  by orsmga006.jf.intel.com with ESMTP; 29 Mar 2023 23:33:28 -0700
Received: from orsmsx601.amr.corp.intel.com (10.22.229.14) by
 ORSMSX603.amr.corp.intel.com (10.22.229.16) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21; Wed, 29 Mar 2023 23:33:28 -0700
Received: from ORSEDG602.ED.cps.intel.com (10.7.248.7) by
 orsmsx601.amr.corp.intel.com (10.22.229.14) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.21 via Frontend Transport; Wed, 29 Mar 2023 23:33:28 -0700
Received: from NAM10-MW2-obe.outbound.protection.outlook.com (104.47.55.108)
 by edgegateway.intel.com (134.134.137.103) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.21; Wed, 29 Mar 2023 23:33:15 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=hGHC/ML4IUjnVvrNCXTjcNOdbe6iIBB0WhuGZ7uQBy6lzer8JwV3FoLQiLaRxK1jOaU9i0jxy49VgK1yMvXH0CoGG0aBExsdfz2ENDxXeSB894VPD9l3klHEH/QMrLX+tQ0vxgBeMUUFaoRBjg/gwwfWITo+duP0UinUlI7sK0yAESFaQMh9MMScqsL3vFBCrihNp+MhUKN09Qc/slLQzpVcVYmWcmw1YI9IULkGZ1q7enEIYuUUMh8ESX1Z//1D2dgcdRRzFM5AMM/SAimGPXaDvOqsn0L9YUU5FQDsMHrgl/VODv1mkwG6ZbMIN+bifxCnKXVwYXjxaw4wWXWrtQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=fKGAgzwOTM9Nw2HGXFJA6r9ymCaDkqyvYJmtI6d65D8=;
 b=O5EyGlQNehoVYPd0YlRi/XROqVOMKb0vTToibTgsxuXuPsiDJE3m0OqVioVs42Sw1ADIDflKBEu3CJ6nMHDp1so+2Et3NNjdgPEzMwiyLReBUdYDpPCKMz5ZEwy+lRkGN+OOEeOx52hn9gENpF4NJp0/SWKnmi9GMbpZ0bfKCQXgRVreQOAOv3VN0qUyaCqg9REm5joYEBaYf3ApNiG8IKI1f/me+Gjwd+UShQYfZVWQDKgXIgMTPf5TalLX0HFKuEf4ZZmXVbV/ZlcT+0EUTACOWP7LvSQ18R+AdftXrnLHcR5HA4pcKklNrZBhGR2CBleIK5gPluMnZWuQ3mjaQQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by DM4PR11MB6043.namprd11.prod.outlook.com (2603:10b6:8:62::8) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.6222.33; Thu, 30 Mar 2023 06:33:07 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::ffa1:410b:20b3:6233]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::ffa1:410b:20b3:6233%4]) with mapi id 15.20.6254.021; Thu, 30 Mar 2023
 06:33:07 +0000
Date: Wed, 29 Mar 2023 23:33:05 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Gregory Price <gregory.price@memverge.com>,
        Dan Williams <dan.j.williams@intel.com>
CC: <linux-cxl@vger.kernel.org>, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <64252d214f0b_c7222942@dwillia2-mobl3.amr.corp.intel.com.notmuch>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <ZCRhhUDcmypVKu0X@memverge.com>
 <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
 <ZCRzh0VLSVF/7jya@memverge.com>
Content-Type: text/plain; charset="us-ascii"
Content-Disposition: inline
In-Reply-To: <ZCRzh0VLSVF/7jya@memverge.com>
X-ClientProxiedBy: BY5PR13CA0025.namprd13.prod.outlook.com
 (2603:10b6:a03:180::38) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|DM4PR11MB6043:EE_
X-MS-Office365-Filtering-Correlation-Id: 0cd3e979-0ef1-40bf-9270-08db30e89f99
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: hjjTQOW1FdfXp3V1HmgwAM9Ub+TMQMWxaNiWPbJNS7APnEjIwJNIOsdKIFmgdX2FWA1hoHcCsc79ugLDGkfjRJWBysA9Iqguh5NIeG/sI8IFv/HUT3mwRssiK7DEFc+ZUXIel3JDBVwlVH5G2oY/JnOXggg2IMKeEJOr9fBGuEPsurcNXmAJ0E2MmMkCwAnhi+zLl30X5HmJpQmXzU39o550bixVuWAifJgTDaZ9PcyGY2JvFPlPGGsnJ02KtEymZIhPT5dQEfktGUKKs2rm1gec0mo/jl2Jn/KKJT8XxFLZkKOq9jSsiC8EWwJLSxmVRymsPWsO+ReL8lIkxPbeC7ft8knjWJNXbww1mjddrWp2SKK34S/POIcTAiQB+mvHAJucc6Wa+b0ftu9wzqHsbXFPu7ndgaAG4nI8fy5De+A6fRuRPpJWdjafS6ETuN3YyFmL3aIxp33nWYkk2NafIUVuqnOcpiGU6kbV37T5+Hrjusg2IYNhi1b/HFxGFZltsoBtk7hfOOn5LkyoPqOPZvIhmXyF2vAPAcBuFmb96bxhkrtTuODmTk9qBarUsaM6
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(136003)(366004)(396003)(376002)(346002)(39860400002)(451199021)(86362001)(478600001)(316002)(6486002)(82960400001)(4744005)(8676002)(110136005)(66476007)(66946007)(41300700001)(9686003)(6512007)(26005)(4326008)(6506007)(186003)(83380400001)(107886003)(2906002)(66556008)(8936002)(5660300002)(38100700002);DIR:OUT;SFP:1102;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?K8MQfenKyyj4V8FlOzd/vN9COkGoWMkDiQK/uCLXRq9Mg2JkH6f2Gk2zqbsO?=
 =?us-ascii?Q?9PTtvta1JgBprFngvm5KyDa/JfoARkm1rSx0ixVWj/wPMCoRQ27Vv09+1iYk?=
 =?us-ascii?Q?98kXYNeXOZv7CsvyNuocb+L6YXs+AkTADfok61YkBn8lW/7cgo82A4Ju5udm?=
 =?us-ascii?Q?+IWLuDzDBDbHFVFkqzPGHpbzVrcLkMGVT5xFjyh8MSuJpZaEwznfBHwbBpSF?=
 =?us-ascii?Q?WYsV0T2/9sDzdUKpvDsJII2rFhWSbl6ChlwtRN46+/+eYRq2enC+dhHAgu+1?=
 =?us-ascii?Q?nyuiFmO/e2wZA3L5u/tZEeIbkhbXdciBi4TMiHDZZEXqKLoROLmL2ORRcSCr?=
 =?us-ascii?Q?gC4j4DFMCYceEAJSw+8vxk1BQYhKNNvif9pL1Ba+yT1cStAyu7v/8ShtBjHD?=
 =?us-ascii?Q?FMmbcvXBnIs9Ra8LDZ5crs1wDs1V3fhE3QwjtJYFjFbjvwrhe61QzjGDZBAc?=
 =?us-ascii?Q?73rJD4Q/iTz2OVTdsTBCaMUgk7uBUTNk1i8SfrE+snfB+xE6jvEaqfaiYQKl?=
 =?us-ascii?Q?8UMLnJsUwI4fN7WtCA1Rl5ETuq2sOQegEoKmsOavqx2ju7bzmcjnu1XWPSEp?=
 =?us-ascii?Q?fGyU1GbpRt2RAX2r5+LZQO9Sv6GR7O/Pad0WQAKc1tMF+ggvBUAQt6SjIzbt?=
 =?us-ascii?Q?i1dloeYDqA6Rx6BsUfvy/UwO9AFoUxn+o3IDjJFh5d58MyX4bq4/gygCM5ZZ?=
 =?us-ascii?Q?tS+MSnE9d6pr9iNj+/qhw6M2bpL64GD52CLinLuZPE+iUFP88QpxBEHsUAgR?=
 =?us-ascii?Q?YW/+6GOmqYOmn466w0z3RaQd+KQ9/2DFCv7CbXxZAC1EXoMRsgv+OPSDC/kM?=
 =?us-ascii?Q?SFQXEC6X1R7f+CJFqWYAHuaVQhTJGRmaWktuQ1K6GUbkjkWVvl0smoe01CMf?=
 =?us-ascii?Q?IKm/JJq4qcO9j06i8B0CazfDG/MfIOYFAsPQzbFsBEzQKvo21vNfyZ6svLIq?=
 =?us-ascii?Q?duwedBuMBPdwkoJFDxAlacz8cbaVflUsEdGFz5gieCUl7/Fuysqso2QZhFx2?=
 =?us-ascii?Q?xVkP03wp0V6rDwdA+E+WLk1F+G3Y1QBRWqekqBxvEpojtj41S9OQTs0G4bwv?=
 =?us-ascii?Q?xMpYX0AUU7NMhIsqN/BJSROM2HdtP6rURXAaXddx+MkdUaHlOeAapcSVH2DV?=
 =?us-ascii?Q?ZVkxspGiy+M7ZITofsZSUKT8Mwh9yjlhHDYaGXHjkXc6bwbcqn01C3cc9Vls?=
 =?us-ascii?Q?lM2+xrsdDV8A3Og9ALsPmVvMP4i2PWN9ye47w8A/WkMRyF8WmjCGRzVdRxU3?=
 =?us-ascii?Q?RiGeDJq9rBilxo0y+00aIyl4kZfNshcYu4EXRt1omBOrZ7iy8thaUqXu5JWs?=
 =?us-ascii?Q?GuAooszCoYge//hPr1lRyFfF4DyYUwfkrk5llAP0+0MwDd5sQZEgeRgUvGhg?=
 =?us-ascii?Q?cYcKTQeM9Mfl4Gt9D0YuXOMX/vlECzycz06ggY7y63XrMDKv+LUSNs7j9eyG?=
 =?us-ascii?Q?8q/Ref4evB2Ps9YqGXxv2gIlxASy4YgOYE7wWE4bUoyg3tLX5XnKKhQR7Ebw?=
 =?us-ascii?Q?CfesfWJJrFG920YkiR4TuC5GB8yBkk5ThAmG9MVaoaKO/SULfcnlKBT4LncQ?=
 =?us-ascii?Q?5ZL6ZERlItoWsGFw1lUJDgW0EDFbY0wGpnfnz9UgGE97cIMoOwk41gQPua1E?=
 =?us-ascii?Q?jg=3D=3D?=
X-MS-Exchange-CrossTenant-Network-Message-Id: 0cd3e979-0ef1-40bf-9270-08db30e89f99
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 30 Mar 2023 06:33:07.3153
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: uOi9IdY0P5wI09q7MwYSvg8CWpdVfQgX+1OeHusst1la7euA7LLt0svrctXILWLjAqP2NeVGMYOnenxKX2jz6wjn4hdHapUqt0htGcwMCSg=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM4PR11MB6043
X-OriginatorOrg: intel.com
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Gregory Price wrote:
> On Wed, Mar 29, 2023 at 09:21:25PM -0700, Dan Williams wrote:
> > > Is the DVSEC Range Register expected to be programmed by bios, and are
> > > not being programmed correctly?
> > 
> > This debug experiment makes me think perhaps the *device* is at fault,
> > not the BIOS. Perhaps the device accepts writes to CXL_DVSEC_RANGE_BASE
> > to set up the decode as expected, but reads return 0? That's the only
> > way that I can see that forcing that offset results in successfully
> > talking to memory.
> > 
> 
> Oh, i meant to add that i tested whether the memory is accessible via
> numactl --membind=1 with both memhog and a python prompt, and things
> worked just fine.  So memory works.

One other theory is that the device is correct, but the platform CXL
window accepts transactions at an offset and then removes that offset
when transmitting the address down the CXL port. So device thinks its
decoding 0x0 and never sees the offset removed by the host bridge.

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id BC4E0C77B71
	for <linux-cxl@archiver.kernel.org>; Tue, 18 Apr 2023 05:51:52 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229714AbjDRFvw (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Tue, 18 Apr 2023 01:51:52 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:41500 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229527AbjDRFvu (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Tue, 18 Apr 2023 01:51:50 -0400
Received: from mga07.intel.com (mga07.intel.com [134.134.136.100])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id E6E51469D
        for <linux-cxl@vger.kernel.org>; Mon, 17 Apr 2023 22:51:48 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1681797108; x=1713333108;
  h=date:from:to:cc:subject:message-id:references:
   content-transfer-encoding:in-reply-to:mime-version;
  bh=gfEEHmLUkeYcK+MwNcL23fZXUwl9hPcXUAjeSUBj3Kw=;
  b=QoHD+W5wo+9R0pCR5MznZHikQic+29iHO42l/ULz14RtjTzVymAFRDpq
   h8536DMOJ404wyZZM6Zs2jq9jHc1PeBhccGVxQ2Diup6oZoYZeuc0yDGr
   EAUsPt797ork/u6YI1xRfPrYTEP9qN5V4k7PO/e2UPfbr5QOpLS1MpMae
   k1AJAx/fufNpRDtvRZlh/TvIgY1U4s8qEnHqT2FoUgHBq0i+nYAxCN3S3
   GnmZzML0tEIfhv4TRsr8my3e4pk34z5CswwpWjxtudVkYLKP5nPl5OTFx
   b8tnSzs77sETLZlap2bn8jDog255PfffaY5JbuIB+IpyC43NdAlcPZx8C
   A==;
X-IronPort-AV: E=McAfee;i="6600,9927,10683"; a="410301973"
X-IronPort-AV: E=Sophos;i="5.99,206,1677571200"; 
   d="scan'208";a="410301973"
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
  by orsmga105.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 17 Apr 2023 22:51:48 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=McAfee;i="6600,9927,10683"; a="780383858"
X-IronPort-AV: E=Sophos;i="5.99,206,1677571200"; 
   d="scan'208";a="780383858"
Received: from fmsmsx602.amr.corp.intel.com ([10.18.126.82])
  by FMSMGA003.fm.intel.com with ESMTP; 17 Apr 2023 22:51:48 -0700
Received: from fmsmsx603.amr.corp.intel.com (10.18.126.83) by
 fmsmsx602.amr.corp.intel.com (10.18.126.82) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.23; Mon, 17 Apr 2023 22:51:47 -0700
Received: from fmsedg601.ED.cps.intel.com (10.1.192.135) by
 fmsmsx603.amr.corp.intel.com (10.18.126.83) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2507.23 via Frontend Transport; Mon, 17 Apr 2023 22:51:47 -0700
Received: from NAM11-BN8-obe.outbound.protection.outlook.com (104.47.58.169)
 by edgegateway.intel.com (192.55.55.70) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.1.2507.23; Mon, 17 Apr 2023 22:51:47 -0700
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=Z8UTKUUfYDxYFrsHOxixMlUcl2mfNvhU9ITvoNhWGFbz6sOvMk4zVRloaVx2OTOwDYhT8DxqIdxGJZ8ct9tRZBIrZWjuLCXmOob86nOXAswqVZpta+A8EoqncMij6/ctPIW7IFSLYG2ijFkqnsuDTW4CAn1qEtxYc0QncGloSFXgYyN43S4GS1Uj7GNvO/ldXo3OhNFSKCqf1IgEwVKX2H6FmwiQNkjBcfhMmX+cEmskTdwDApvqdRjvdDEMVGP7xLobEbc86rAdBc68c/D5dDRufc2wiLDKREVBJ23RaKtitu9X/71uvU5yMaSW2zMVE2NIwjs3WGM/4m4YSGsCXw==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=4JXbWx9oJBSB9c9U6AiTgPNOriy+kpH7PVCgUdY3bDQ=;
 b=gBimv+sNW7mkCyb8L/SGJoNf+x7UUr1kxr+leeABZ4lpmtgTn7r6giorn+UKUy1Nd63vr5ccSLOE0aANFlDtJvLLqC41c/2EkOcCdylIis0QraGAC8u1n97e6tRSPstX2i7yGdDnvNMNNNwRk8tTOUxHRkC1LY+/TEJTpdlo85T7HGHKuJWPXBjRUPwnMxI5eoxumKJHzKJGDb6JGcJ3pZToZNWn266hjaa8B7lEQO919DecL3MonNdEp9NXvtGuoezWlnYHp0UXM2kIEJOhRyuZVMThHfXGJwqq6Y4YVoQutLfPxFRwPTeaL7AlIBdITy7spC35+alMxu0m6SJDJQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=intel.com; dmarc=pass action=none header.from=intel.com;
 dkim=pass header.d=intel.com; arc=none
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=intel.com;
Received: from PH8PR11MB8107.namprd11.prod.outlook.com (2603:10b6:510:256::6)
 by PH0PR11MB7613.namprd11.prod.outlook.com (2603:10b6:510:285::18) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6298.45; Tue, 18 Apr
 2023 05:51:44 +0000
Received: from PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::ffa1:410b:20b3:6233]) by PH8PR11MB8107.namprd11.prod.outlook.com
 ([fe80::ffa1:410b:20b3:6233%6]) with mapi id 15.20.6298.045; Tue, 18 Apr 2023
 05:51:44 +0000
Date: Mon, 17 Apr 2023 22:51:41 -0700
From: Dan Williams <dan.j.williams@intel.com>
To: Gregory Price <gregory.price@memverge.com>,
        Dan Williams <dan.j.williams@intel.com>
CC: <linux-cxl@vger.kernel.org>, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <643e2fed87bd3_556e2941b@dwillia2-mobl3.amr.corp.intel.com.notmuch>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <ZCRhhUDcmypVKu0X@memverge.com>
 <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
 <ZCRzh0VLSVF/7jya@memverge.com>
 <64252d214f0b_c7222942@dwillia2-mobl3.amr.corp.intel.com.notmuch>
 <ZCUPlnQYVRCumy2O@memverge.com>
 <ZDtz++B25suuoYoY@memverge.com>
Content-Type: text/plain; charset="utf-8"
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <ZDtz++B25suuoYoY@memverge.com>
X-ClientProxiedBy: SJ0PR03CA0300.namprd03.prod.outlook.com
 (2603:10b6:a03:39e::35) To PH8PR11MB8107.namprd11.prod.outlook.com
 (2603:10b6:510:256::6)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: PH8PR11MB8107:EE_|PH0PR11MB7613:EE_
X-MS-Office365-Filtering-Correlation-Id: ad46307b-7bd6-4a06-8407-08db3fd0fd53
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: PPq37NbodO2cnej1XbaOajAFYMJbyn+PnARvZZUWGFzkwLELUGUavzjyaDhtTlkBaKZhnNT5dkjuf2mZMGTIzPnMkKLpUnIawQO+q3/9TRYyIuvNJEx9sPE92IbHkW6KZ0733QnKX9hoTd6/R5c6Vuk4jAoKd+Y19dDNrcJrCeMPs1GmsuBPry8BDjToY/+3VpqHFJkJ0yotQFvje8EL/0GwI3iiRzgh2sR/UTSesAmuwt60Q7UfxWSwJskuBM+U+M2DyjTiLAIG+NOe0jXuZhSICmCEJzpPw4ZfUs/TxMKe5LNyr4a9WrWFVhQDbxCTjFe6Bi1vbgwoD3Bz7+N6DWTTMFoyOY17HatCrQVEinK7OE/Z4CRDs6J19ckb22KfzZFwE0cSXF8dAVAlLt0oYeGaQT/G7Ew8GF1frNyi1I0arCn15s7TMkGJWoiLq0SNPTKfKuzPuuNVZTOLIbaHp7srFSx3hv6jpsDIeDt9vg7Z+RyH+gJuhGA8AqhaPxVehsFnB0cu+6uZ/VT9voveAfgUntKA7Ppy3UwQHZj8LoG9iVSgDvw1y1ZN3l8UK8h0
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:PH8PR11MB8107.namprd11.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(39860400002)(136003)(346002)(366004)(376002)(396003)(451199021)(38100700002)(5660300002)(2906002)(8676002)(8936002)(41300700001)(86362001)(478600001)(110136005)(26005)(6506007)(6512007)(9686003)(107886003)(186003)(6666004)(6486002)(4326008)(66556008)(66476007)(66946007)(316002)(83380400001)(82960400001);DIR:OUT;SFP:1102;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?S1h6d0Nab1pZRUxFZ1QrSlkzYXJ1NkU4UzVtMHBmZm5BR1VzYW9oTE1Ia1NP?=
 =?utf-8?B?RWNMeVhOWm9pdWhaNUdIeHBrRUlwMEg2UTVYMmg3NEc1NWhuTmVGdllzdG5O?=
 =?utf-8?B?elZkREVZUDNQcisrZWkvRmZpZUNrNFU3ZnN0QTRka01FVEM3TENOL254b25j?=
 =?utf-8?B?bFI1N3RETmNWTCt2dEZ5eDJGcGNuZ3lKZnBvUTBpdUFVelM5Y3NWMlRXM1Fl?=
 =?utf-8?B?eDYwaUQ5N2R1K2RlTlBick1yRzAxQ0kyc3JYZXJXaEZjdEZTT3RTNlNqNnJq?=
 =?utf-8?B?UHpCbHB5dkRLcG1SVTRBSmc5U3QxQ2tIWkdaMitpZ2FWNDF4d0JNbkc0ZFVv?=
 =?utf-8?B?VzYwZmYrbVo0RkJjR2xDQUhMSk9xOHMrN09HQTdpVzdDNzdBOVg5R3FJZHZy?=
 =?utf-8?B?RGsySjlybGtkUTN5MlVza3ExNHZKQWtucWdKUnRrOUJLRlBGeGFtSjhReDQ3?=
 =?utf-8?B?aUZ3dk5tOXkzRk02aFVWa0ZTZXJpQ1QxNTcwUmgxWEtrbzFoVTFIZVJENEkv?=
 =?utf-8?B?QW9JN2hNMlpDNDlpbUtmS3hUeW1GV0dRb2MvenNTMVNwT3EvQ3pBekEyUmcw?=
 =?utf-8?B?bEhCOWJhdy9IMlRvYVhjd1Q0OGMxY1hhNnl6TEVtQnRkL0JIWWFHRXF1eWEx?=
 =?utf-8?B?bGVTTTE0Wi9FUE9zdll5Q0FvN2syNEZMQUFuUnhVSFNqWWwxQVJLeDQzNDFP?=
 =?utf-8?B?VFYrWWRUTkVzWmVXMjVyam9LUkhxUzZDRjBuTE9ETUdiVXc1NUdwYnk1aTZB?=
 =?utf-8?B?UmVwRnpKVExmbCt1TWtnY3FjcW9xZnlZMmVFTHJJNzZkLzJVMHVYZlJVbDVM?=
 =?utf-8?B?K1JNc3RTUndkNGtPWDZJanltdE5IQzJQZG1PNDdTZnZaUXp6MVNoWG1pNzV6?=
 =?utf-8?B?eXpNOXhZN2NJMEcrVVRWQnJudnRCUlRzRzd2djJrWHBESXg1VDlFeTZsbGdM?=
 =?utf-8?B?WWF1dHJmNVlEcjZLdndZdHR2TWY3NTAxQ3FSbjV6Vks5VDZWRVFKU0IvN2ds?=
 =?utf-8?B?TGhQMWpENzhQc3AydHc1RlJVQ1Zyc2x0c24wMkR0ZG9oZ2R3K3hjSWswRU5I?=
 =?utf-8?B?N3ZZOVdKTlM4MCtRUjdqcTVCT3J3U1FXT29rOHViZEpUNGZCak1veFNWMUZS?=
 =?utf-8?B?dTgwWCtiTm1taWhzcE9WdjdrSFlNNEt3SXFQb3l3ZGE2RHlCUW1hektjbkdt?=
 =?utf-8?B?a3FHc3F4djlmb2tHSkJxNDRNQ2JDQVNDbWhJdEFZa1J5dlZySzU2andMZ1dC?=
 =?utf-8?B?dE5FQlg5ZnlZUjlHUndLRFdGaFFHcTBCZDNQM2ZFUFhTVnZYWFRsbXN0SWlN?=
 =?utf-8?B?QWFRWlFUK0VXa1NBbDcxb3RYN1g0eG5kbDl0R2pkSlFKRkNqWTNUUndFT0Y5?=
 =?utf-8?B?QUpBQyt1aVFNMDRzaGZVbElYQXR2a1kySFZvZzdJNEFBaUoxejBlREVLZm0z?=
 =?utf-8?B?RmU2TVB0T0E1YjhXQ2dPZThtNW4zeHhnUWZwZ3gyT2h2anhGRy9yMHpCZmNv?=
 =?utf-8?B?dGdRQXM2TDRGK0JNVEo2MlJUc21WVmdWcHNReWZ0QjlvMkMvQkVkTW8zNlhO?=
 =?utf-8?B?YUtNeHRNUXBLZDI2M0xaWUF1UkJEcndGSWVSMC9TMXZLdkxHdS9SdTB1cXRG?=
 =?utf-8?B?MlFIUmVTZ1MrSzA5ZzdtM1dKSkJMR0I4alpuWlM0YmtBNlI1dTF3TkdMRjJl?=
 =?utf-8?B?WXRNQjdFWkExbmhmQ2NiT1dmYWlBVHRDOVc3SXFJb1JVQ0NaQ1BtdlJ3Qm11?=
 =?utf-8?B?ZXl2VEZ3ejVNOWQ2TEduMzVuV3QxcnJXeUVycVhvVFJUZDhtZURDRTdpSnlK?=
 =?utf-8?B?QVdGVDZtNWc5Y2dPZFRPdElkd2F0YTNmRDA1Z3o3QUdVMk1Vb1o4MU5CQlBj?=
 =?utf-8?B?Q1UyWXU3SlQ0cm85cFVpVmswbnJaOW5oVk5HQWsxLzBmTHRwSFJJN1JHMDM2?=
 =?utf-8?B?cUxrbDhuZjJjRFlraHRlWVlVcGswRFRERDhWNFJUam9rNGt0eEFpb1djZmxZ?=
 =?utf-8?B?Q29Ibjl3WUZ5bXlYVVJLaGZaUmZ3QnVnK3FMK3Z1TDE2L1d0dWM5OFkxcXRm?=
 =?utf-8?B?VTltaWsySTRKTGpBTzYzeXd3N3ViOXNvL3p3dlJqVFRsTEhDcnNkVzlLRVpH?=
 =?utf-8?B?WmJPNEV4SnllVG16b1BLbCtHUTY4SE9hdTZqQlptcFlnNkR6N0c3SXBteTdS?=
 =?utf-8?B?M1E9PQ==?=
X-MS-Exchange-CrossTenant-Network-Message-Id: ad46307b-7bd6-4a06-8407-08db3fd0fd53
X-MS-Exchange-CrossTenant-AuthSource: PH8PR11MB8107.namprd11.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 18 Apr 2023 05:51:44.0826
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 46c98d88-e344-4ed4-8496-4ed7712e255d
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: l4K4YO3waCspRmpo5lb3lUf/a5jEnFznUBPkchEsa7Kx4NMrMMdoIjfWcnUTBtzkYAyBwhoXVXHRQt9RJb1R83/83rIrP+EN9BFKExhU0j4=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: PH0PR11MB7613
X-OriginatorOrg: intel.com
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Gregory Price wrote:
> On Thu, Mar 30, 2023 at 12:27:02AM -0400, Gregory Price wrote:
> > On Wed, Mar 29, 2023 at 11:33:05PM -0700, Dan Williams wrote:
> > > Gregory Price wrote:
> > > > On Wed, Mar 29, 2023 at 09:21:25PM -0700, Dan Williams wrote:
> > > > > > Is the DVSEC Range Register expected to be programmed by bios, and are
> > > > > > not being programmed correctly?
> > > > > 
> > > > > This debug experiment makes me think perhaps the *device* is at fault,
> > > > > not the BIOS. Perhaps the device accepts writes to CXL_DVSEC_RANGE_BASE
> > > > > to set up the decode as expected, but reads return 0? That's the only
> > > > > way that I can see that forcing that offset results in successfully
> > > > > talking to memory.
> > > > > 
> > > > 
> > > > Oh, i meant to add that i tested whether the memory is accessible via
> > > > numactl --membind=1 with both memhog and a python prompt, and things
> > > > worked just fine.  So memory works.
> > > 
> > > One other theory is that the device is correct, but the platform CXL
> > > window accepts transactions at an offset and then removes that offset
> > > when transmitting the address down the CXL port. So device thinks its
> > > decoding 0x0 and never sees the offset removed by the host bridge.
> > 
> > Wouldn't that be against the spec?  I thought the device intended to
> > receive HPA and do its decode accordingly.
> > 
> > Otherwise you could have multiple devices programmed capable of decoding
> > 0x0, which is already the device address, so there's nothing to
> > "decode".
> > 
> > I'll follow up as I learn more, this is concerning.  Certainly explains
> > why every time I switch hardware nothing seems to work quite right.
> > 
> > ~Gregory
> 
> 
> Follow up on this:  I attempted to actually write Memory_Base_Lo/Hi with
> the appriopriate values, validated the write went through, and then
> utilize the memory.
> 
> This test lead to a total system lockup, implying a major bus error
> and/or device failure.  No stack trace or any indication of exactly what
> went wrong - but it's pretty obvious there's a device issue.
> 
> if you remember, my initial test was to simply shift the base to the
> base of the CXL Fixed Memory Window:
> 
> @@ -342,6 +344,7 @@ int cxl_dvsec_rr_decode(struct device *dev, int d,
> 
>                 base |= temp & CXL_DVSEC_MEM_BASE_LOW_MASK;
> 
> +               base += 0x4050000000;
>                 info->dvsec_range[i] = (struct range) {
>                         .start = base,
>                         .end = base + size - 1
> 
> 
> To this I added some writebacks to the registers to set them what they
> "should be" (i.e. what the BIOS should have done).
> 
> 
> The other thing i noticed was a combination of DVSEC flags that seemed
> interesting:
> 
> DVSEC CXL Capability: c0de
> Mem_HwInit_mode == 1  (harware + firmware on device do init)
> 
> DVSEC CXL Range 1 Size Low: 804
> memory_info_valid == 0
> memory_active == 0

Is this CXL_DVSEC_RANGE_SIZE_LOW(1) or literally "DVSEC CXL Range 1 Size
Low" which Linux calls the offset CXL_DVSEC_RANGE_SIZE_LOW(0)? If its
the former, it's valid for the second range to be disabled. Linux stack
should have failed cxl_await_media_ready() otherwise if this is
referring to CXL_DVSEC_RANGE_SIZE_LOW(0).

> 
> So this appears to have been BOTH a BIOS *and* a device issue, but we
> should also be checking these bits before using the info from these
> registers.
> 
> 
> 
> Something to note from the Spec: RCD Discovery (9.11.6)
> 
> 4. If Mem_HwInit_Mode=1
> ... snip ...
> 
> - Each HDM range is later exposed to the OS as a separate, memory-only
>   NUMA node via ACPI SRAT.
> 
> — System Firmware obtains CDAT from the UEFI device driver or directly
>   from the device via Table Access DOE (see Section 8.1.11) and then
>   uses this information during construction of the memory map, ACPI
>   SRAT, and ACPI HMAT. See ACPI Specification, CDAT Specification, and
>   UEFI Specification for further details.
> 
> It also sounds like trying to place this device in dax-device mode isn't
> really the intended use-case, and if that's the case maybe that should
> be disallowed?

I don't follow. Any CXL.mem in the end is just a physical address range,
any physical address range can be passed to dax or the core-mm.

> All this considered:  It's still head-scratching why shifting the HPA
> read from the range register successfully produces a "working device",
> but I suppose that's the definition of "undefined behavior" :]

The needs the platform vendor to weigh in, but that may not be possible
if this is evaluation hardware.

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 3F61CC77B72
	for <linux-cxl@archiver.kernel.org>; Tue, 18 Apr 2023 01:03:41 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229524AbjDRBDk (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Mon, 17 Apr 2023 21:03:40 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:35866 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229589AbjDRBDh (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Mon, 17 Apr 2023 21:03:37 -0400
Received: from NAM10-BN7-obe.outbound.protection.outlook.com (mail-bn7nam10on2084.outbound.protection.outlook.com [40.107.92.84])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id EADC93581
        for <linux-cxl@vger.kernel.org>; Mon, 17 Apr 2023 18:03:25 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=RiP/1FtI6Muto3wupjFeXab6PckjQXMib5PzKOhp4APhHvOq8VkBW1ksJUc38dfECHwPCepZB3Sa4lnPofsS5ALKDtx/idoHUYhgCHJl27pQNh3LK8MmjnILXRZzMLyDSn/nQZ5uXRCEI14s7fH/uA1QWOWDHF7sDBo+32X77tmv/rsc48THHkgbMNyz28tPF+2ZJIov32J/hisc5itB7NtephV7VBhmBBPMtH4dKtfKxjKbTaF/IR6kOjFlrPMNAgqcenqJb1u+T3HbMc5cxgKccGm7V9WjUTuxFtptIfczCTSL2VXEKYext8VIWSyaHisp1DaZGF/KKcSD+JXokQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=j7//NGd8JCnegE+N1j1RHFybHqjZoyO7p76YpGP6tKY=;
 b=DHCDpCVPXZE2DyRc+a9lfWT0BwxvsX1H1bJmjDXKm8PWBWOBZPwWQz9XNkRhLRnSx7Zv48xor6MuNXbVlK35n8HnNsXd1Fky9jA6zZES56KzwiVT8AH6aRg7r11jWrD1VwtVweMwaXZaY3voz0YLaLPND9hbVqyxQSPylBmEvdAvIURMqirqD1hGMwVehUwDZEFG8dPq/srALMwossKc0GbSmHX6EtNiUB+7VAtfsKjmlv03j5G58kFw97oLQCzdk2ApBTM8ddfxkD4yZZLVJfvboswRAJEPs31WEf/4cNIdTGaWkE5K61mqR3M4koKCMltEpqHf684vPShvEHgsog==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=memverge.com; dmarc=pass action=none header.from=memverge.com;
 dkim=pass header.d=memverge.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=memverge.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=j7//NGd8JCnegE+N1j1RHFybHqjZoyO7p76YpGP6tKY=;
 b=xnPKbRiLWNyaL+QXYx3qMDuwGj6zwPnDHlCinnvazyO1kebKy/3rGTIw+WZnmmsbzoVzDiJ6uufo0WMsVV89LQ7PeBTfaoMw5Z8ilE7X8r1gYxy79iuTFTRRATTWByjbj5OJ1d2CrFCbnk4XRp03rdD3e44UVcSva9iKEjgR60M=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=memverge.com;
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com (2603:10b6:a03:394::19)
 by DM4PR17MB5971.namprd17.prod.outlook.com (2603:10b6:8:52::8) with Microsoft
 SMTP Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.6298.45; Tue, 18 Apr 2023 01:03:23 +0000
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a]) by SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a%7]) with mapi id 15.20.6298.045; Tue, 18 Apr 2023
 01:03:23 +0000
Date: Sun, 16 Apr 2023 00:05:15 -0400
From: Gregory Price <gregory.price@memverge.com>
To: Dan Williams <dan.j.williams@intel.com>
Cc: linux-cxl@vger.kernel.org, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <ZDtz++B25suuoYoY@memverge.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <ZCRhhUDcmypVKu0X@memverge.com>
 <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
 <ZCRzh0VLSVF/7jya@memverge.com>
 <64252d214f0b_c7222942@dwillia2-mobl3.amr.corp.intel.com.notmuch>
 <ZCUPlnQYVRCumy2O@memverge.com>
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <ZCUPlnQYVRCumy2O@memverge.com>
X-ClientProxiedBy: SJ0PR13CA0227.namprd13.prod.outlook.com
 (2603:10b6:a03:2c1::22) To SJ0PR17MB5512.namprd17.prod.outlook.com
 (2603:10b6:a03:394::19)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: SJ0PR17MB5512:EE_|DM4PR17MB5971:EE_
X-MS-Office365-Filtering-Correlation-Id: c7960d28-a2a4-464b-462c-08db3fa8b51a
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: F5WB12yXMPSxSbdQn1I9QeLhXFS8etq9emSSZtevKfDx8QDqHjftxWY1zaqmi0eHMxMBrC2T1b5m3ImdIUiN/bcfdbtqaoLfOuXf2G2D+PaSXVFuuygg6/oktpWK+dp3Xt30aq/l7RAQOM7mq2yk6H4xT8uplaiNjILRfnReaE7PfAj3Bfw1dDHNSIrGvY3lGWtwqugS1mVECcrXBHMPwzJrmkjBmKCyR8t19vNbamCeOtdML1Iq/+6sCrBV8iq79+zQd3fAV6fInMQ6N+C1WBHWZC+81m48y5xbDyE4V4gXDRklOUTjBzfoHE/7g5kuU5440OZVhy+DkNn9woAt9SYITu77mZfhK3AXcmghijc8OvMoYA0L9L4iWvu5gCF1+HvUDYNgLECxIVdRNPC09Kd1T1nka6yNVJTNl7l7ToGPazKlaFwMQKkxaYujOvAZhQ5X5R6bQnnVL9rZfMT3WnIu1lLG0bxlsYNARAV2SVmX8TxoZVHufX6KRFt18/OT9NcUhL85VN6xWspz10isrU0z1zL8GdXj6RlzQYNwH+tm3b1WHdm9zUUC/mZuZ8+Y
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SJ0PR17MB5512.namprd17.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(366004)(376002)(346002)(39850400004)(136003)(396003)(451199021)(6486002)(6666004)(2906002)(38100700002)(478600001)(83380400001)(186003)(2616005)(6506007)(26005)(6512007)(36756003)(4326008)(5660300002)(316002)(44832011)(66556008)(6916009)(66476007)(66946007)(86362001)(41300700001)(8676002)(8936002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?utf-8?B?Yy91aWIva3JHRE1RVVVvblFubnk0NU0wZFRRTGdpcVkvRU1OcjNXYUUxMi9a?=
 =?utf-8?B?dHZWMGMwRURyZXNJVno2aDRlL1hpT3A5QWJac2JiSkFNUTlWcEJ3YVNhYzJw?=
 =?utf-8?B?NnRwUDg3VmtDdVNKQ0FpSndBRGpTQkhTUk90NVF6QVk4NHdFQ0FMYVhRRkRj?=
 =?utf-8?B?czlieUlteU5iaW0yanZndTE5MWRHbWJTT2RGT0w5aU8vanZpTGFZQnJvNVFa?=
 =?utf-8?B?c2ZQa25iRFV2UEVEVnRLQnYya1Z1OGxEY3FZM1QwZVczK3VTVTdBVkdReGdM?=
 =?utf-8?B?UnNCRTJ1SUs0TytPeGE1NExCTnRjK1p4UHBjWjJrV0krQndiMGp4VXVXYncw?=
 =?utf-8?B?cWJodTEzMGpQQlIyVFdVaFdXV2VwcFU5VFBlVzFkOXdiaVd4TWNYT1NKT0Zw?=
 =?utf-8?B?amVuQUV2V0NsQlkvWUwwNkhqak1yTUhER2F4ZmpFbElUQWdGYWVzNi9lV0Q1?=
 =?utf-8?B?RDlQNnZTR0V1WWlpK1pwbnBzdkorMXVTSlROZVYvREdXbVhQSFFoaGJvUkto?=
 =?utf-8?B?NXJBSTdGZkpKcTdUaVJKd2ZJazNJMUl1TlNVblpsR29lOG5JMDgvcituN2h2?=
 =?utf-8?B?T1BXSFBTRGVBZVRCOFJPU2krTGhjQXhNN1pCL0V6ZlA4VkFqVEpDSC94b09v?=
 =?utf-8?B?Mm95NkZnVGh6cm5scjFBMWJwdDhPWnNOd3lma0RueEZsbWhFbTBHdkdQU0p5?=
 =?utf-8?B?ZVpEQ1E3K3BwZTBtVjlxUENZSHlmakRJWlB3cDRHR01ybGpQbTF2SmdicHpF?=
 =?utf-8?B?dUhPVHdwQ0gxQy9reDdiNnNWekhWVTVtbGpGanpTbXFybkc2Z0wrQjh5a0ty?=
 =?utf-8?B?cE5OZWZNYUx4dW1tYzN6ZHhWWVN6c2J2K1FRTEt3N0l0OEJLa29FUldCVkE0?=
 =?utf-8?B?NmdWS2tWYlJlRjdFemVNU3hVWnVMN3BaK0hZbXp4NFUxK0tZaEhkN2c5NmNT?=
 =?utf-8?B?MmI3VnFTLzU3aXB6cTZJTGprSUFCMDdnckJRci9ad09QZ3dCRzg0L0tYcFlH?=
 =?utf-8?B?dnFMY3VvcklmVEZGNkFpWDFTWUFVTDlpMXd2aGFDY2hzcXlhWDNrZFN3RVJk?=
 =?utf-8?B?RFN2V2l5NkE3RUVxRlk0QjNhK25naW9UbVVhUjh0bTdtSlpudi8xZmtiOFNx?=
 =?utf-8?B?S3I1WE5HemFHbmNLSm1uNmExN2FRUytES2xZRDdUT1Y0SGpEZFh1dWJQN3dN?=
 =?utf-8?B?Qko3OUgvU0w0SlNQeWZDc3kwNjRyYm5IQjhlVnF2aTNSNWRoVExPY2MxRGVO?=
 =?utf-8?B?bFROS0VyRzBXSmE0MFdoU2ZQRCtMMUxiNnN1U0MyUzY0RTl5eEdQTUF6TVFj?=
 =?utf-8?B?bHFURWMxQ0NJa2drWEkrNG1QekZWdjVJZUUwRzdoSGdObWExV2pHaWhyb3V5?=
 =?utf-8?B?dG1sZzF5aG5TcStIRWZwaDlNZnlaSkZOT0d4L244Vkt3eDZnb0pVS2FLeXhi?=
 =?utf-8?B?Z0ExZlBsYklRMEJWanF2VW1wWEpER1JTem5Sc3RaYzRUODdhT2lqcUZ2VjhQ?=
 =?utf-8?B?b3ZWNUFLMm5FNXg0dWd3TzVvMEJhRDhRaGRlTkJzcWlWczVMbWZQQjYyS0dX?=
 =?utf-8?B?Z0cwaEg4OGNRZ0hCMTFiaFhtRmhjeFgzODZjLzUvbFRyYzkwZTJoVEt0dW9p?=
 =?utf-8?B?VDBUWk1CN0hSU2J0Qk1tZlFjaXdvK28veUE5UjIvYVVBaS9wWWJrVUJmQkc2?=
 =?utf-8?B?K0JMNkZrbnEyWkZxYlExV0xSMFFnWW5Cb0h4TkJoSzIxVEY2a3FPY2xldE1N?=
 =?utf-8?B?b1JkNC9QMzF1emMvV3I1Z1lnbGdiTVZLOGdKdTNjaGlGVHliR00vSUxHelFN?=
 =?utf-8?B?Y3ZXZ0R2U1JmU0tmV3R2WVp4VDFQbDFwOTV6TkkyQWh4QlhkbHY1TjRZNk1Q?=
 =?utf-8?B?MURBM0oyWUNJaEE2TDhIWVdkclR1TDJzRTB1ZmhsdDhNc0tlSi9nSkIvcFVi?=
 =?utf-8?B?Mmw0M2EvRVZ6YUd6Q0lvYU1OMnZwSE9ZUm5ncjR1Q3NxR25ZOG05NHFpZ0d6?=
 =?utf-8?B?Tzh0Sm5KaE0xVElLTlFKc0xUeTMrdEp3RVFwb2dFcExZVEtwYUNZNjZnVHVr?=
 =?utf-8?B?bS9yUUErMDUraExrS2F6UUR0eE9YTHVXWkFhWnVLTFh6RWdkdTc0N2NFSmg2?=
 =?utf-8?B?d3lTTGpvY2R5RmdmQjhXOGJNb284RzNrS3IzSXRzNHFQdEMzL2VWTk5GS1c4?=
 =?utf-8?B?cXc9PQ==?=
X-OriginatorOrg: memverge.com
X-MS-Exchange-CrossTenant-Network-Message-Id: c7960d28-a2a4-464b-462c-08db3fa8b51a
X-MS-Exchange-CrossTenant-AuthSource: SJ0PR17MB5512.namprd17.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 18 Apr 2023 01:03:23.2707
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 5c90cb59-37e7-4c81-9c07-00473d5fb682
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: fj8lo8+DBDIkVOWx57lX8GFUrkST6aoPgRyOOvdMLq/CO1cq/U+ukkDtZhgBLygn4ysI76bGIlQCzgbTc4ZnBhNVdoN0vNOZNdCUJVX2fIY=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM4PR17MB5971
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Thu, Mar 30, 2023 at 12:27:02AM -0400, Gregory Price wrote:
> On Wed, Mar 29, 2023 at 11:33:05PM -0700, Dan Williams wrote:
> > Gregory Price wrote:
> > > On Wed, Mar 29, 2023 at 09:21:25PM -0700, Dan Williams wrote:
> > > > > Is the DVSEC Range Register expected to be programmed by bios, and are
> > > > > not being programmed correctly?
> > > > 
> > > > This debug experiment makes me think perhaps the *device* is at fault,
> > > > not the BIOS. Perhaps the device accepts writes to CXL_DVSEC_RANGE_BASE
> > > > to set up the decode as expected, but reads return 0? That's the only
> > > > way that I can see that forcing that offset results in successfully
> > > > talking to memory.
> > > > 
> > > 
> > > Oh, i meant to add that i tested whether the memory is accessible via
> > > numactl --membind=1 with both memhog and a python prompt, and things
> > > worked just fine.  So memory works.
> > 
> > One other theory is that the device is correct, but the platform CXL
> > window accepts transactions at an offset and then removes that offset
> > when transmitting the address down the CXL port. So device thinks its
> > decoding 0x0 and never sees the offset removed by the host bridge.
> 
> Wouldn't that be against the spec?  I thought the device intended to
> receive HPA and do its decode accordingly.
> 
> Otherwise you could have multiple devices programmed capable of decoding
> 0x0, which is already the device address, so there's nothing to
> "decode".
> 
> I'll follow up as I learn more, this is concerning.  Certainly explains
> why every time I switch hardware nothing seems to work quite right.
> 
> ~Gregory


Follow up on this:  I attempted to actually write Memory_Base_Lo/Hi with
the appriopriate values, validated the write went through, and then
utilize the memory.

This test lead to a total system lockup, implying a major bus error
and/or device failure.  No stack trace or any indication of exactly what
went wrong - but it's pretty obvious there's a device issue.

if you remember, my initial test was to simply shift the base to the
base of the CXL Fixed Memory Window:

@@ -342,6 +344,7 @@ int cxl_dvsec_rr_decode(struct device *dev, int d,

                base |= temp & CXL_DVSEC_MEM_BASE_LOW_MASK;

+               base += 0x4050000000;
                info->dvsec_range[i] = (struct range) {
                        .start = base,
                        .end = base + size - 1


To this I added some writebacks to the registers to set them what they
"should be" (i.e. what the BIOS should have done).


The other thing i noticed was a combination of DVSEC flags that seemed
interesting:

DVSEC CXL Capability: c0de
Mem_HwInit_mode == 1  (harware + firmware on device do init)

DVSEC CXL Range 1 Size Low: 804
memory_info_valid == 0
memory_active == 0

So this appears to have been BOTH a BIOS *and* a device issue, but we
should also be checking these bits before using the info from these
registers.



Something to note from the Spec: RCD Discovery (9.11.6)

4. If Mem_HwInit_Mode=1
... snip ...

- Each HDM range is later exposed to the OS as a separate, memory-only
  NUMA node via ACPI SRAT.

— System Firmware obtains CDAT from the UEFI device driver or directly
  from the device via Table Access DOE (see Section 8.1.11) and then
  uses this information during construction of the memory map, ACPI
  SRAT, and ACPI HMAT. See ACPI Specification, CDAT Specification, and
  UEFI Specification for further details.

It also sounds like trying to place this device in dax-device mode isn't
really the intended use-case, and if that's the case maybe that should
be disallowed?



All this considered:  It's still head-scratching why shifting the HPA
read from the range register successfully produces a "working device",
but I suppose that's the definition of "undefined behavior" :]

~Gregory

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 99B1FC77B73
	for <linux-cxl@archiver.kernel.org>; Thu, 20 Apr 2023 00:52:02 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232429AbjDTAwA (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Wed, 19 Apr 2023 20:52:00 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:48656 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S232406AbjDTAvm (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Wed, 19 Apr 2023 20:51:42 -0400
Received: from NAM12-BN8-obe.outbound.protection.outlook.com (mail-bn8nam12on2057.outbound.protection.outlook.com [40.107.237.57])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 5C532901D
        for <linux-cxl@vger.kernel.org>; Wed, 19 Apr 2023 17:51:13 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; s=arcselector9901; d=microsoft.com; cv=none;
 b=eW857wPHxpY1icg6wgJ4XK/uUO6M239NL5arj+CBHApJInW/fkgedQ5d6+xRfPfmcFa6P2AVmAD7gRHflpMnZj5IW4msJuptnDnBkqYOzNaREVp5xrcf/yL1jhZA7v8X0kxTLbgKKDSSk4VMQSXHo1c/Y9H/KwA/rA8QtslZe2ewDe6gOxgqcnoQBsJJoGMUWkXJrJyk/lT2lFRAgtimpnkFBDJ683O/P+SWmIjC2RLItGG7MERyyTkcCQcHJXqHUVPrLjqwi3X81wAo8LN1WRiZZvD5N5EvL4XxZsdYLj4NnZfzEoAYpIy4v462Z3zrsvKG6jUPmr66qS7Ntp0KjA==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=arcselector9901;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-AntiSpam-MessageData-ChunkCount:X-MS-Exchange-AntiSpam-MessageData-0:X-MS-Exchange-AntiSpam-MessageData-1;
 bh=0OyE2tIEUhhyG2x+T6wgtp2CH66S+pyf+5zCkOdhxDE=;
 b=HHvGbgSo+lm2EEWugXXrmCfZeKlg9u482uPcy6317LLmg7M45RGFTNPRFr03+W/8KEwmqskGQAKlz9PnRABi9oDOYLU+33hUXVarAR3ZkrxD1iOG3TzAWEGL9XdTEC63CRFn2lcvT6ANyg4dryaotqB1qL1hpFVe0RK5DIQjsdiWZY2WFBTnAtiFFfgO37JVpaqQHxOCyFSYG7dPwTP1PktUQr8uVCC4kU866+EbvH0As9HgMTalXN7EjqtA0FnReWhCL1MfBXgZi4NyZAuxD8Wu5ILDWoe5+Lc8yTpioMj9ecUJqusMgpMOb3bRv1QT40oyRiS6O851qF84/GmFXQ==
ARC-Authentication-Results: i=1; mx.microsoft.com 1; spf=pass
 smtp.mailfrom=memverge.com; dmarc=pass action=none header.from=memverge.com;
 dkim=pass header.d=memverge.com; arc=none
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=memverge.com;
 s=selector2;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=0OyE2tIEUhhyG2x+T6wgtp2CH66S+pyf+5zCkOdhxDE=;
 b=QhTzC45g4lcXPB+aPvDFjrX8/QLTDs+cDLQSSfdlT3m0vsjR1760m7ZjEa1IrKsqVgHm6ccMajheSMXcw/vFNrimBkFy+irnPY4YROnBbTaCAyE/pUNfdyfbo2MueOX8Bwwu99L37FWEw4TvqV1eYMB7vdB5q7bkvRIbU90JxZg=
Authentication-Results: dkim=none (message not signed)
 header.d=none;dmarc=none action=none header.from=memverge.com;
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com (2603:10b6:a03:394::19)
 by DS0PR17MB6412.namprd17.prod.outlook.com (2603:10b6:8:dd::17) with
 Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id 15.20.6298.45; Thu, 20 Apr
 2023 00:50:24 +0000
Received: from SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a]) by SJ0PR17MB5512.namprd17.prod.outlook.com
 ([fe80::7b97:62c3:4602:b47a%7]) with mapi id 15.20.6298.045; Thu, 20 Apr 2023
 00:50:23 +0000
Date: Wed, 19 Apr 2023 20:50:12 -0400
From: Gregory Price <gregory.price@memverge.com>
To: Dan Williams <dan.j.williams@intel.com>
Cc: linux-cxl@vger.kernel.org, Dave Jiang <dave.jiang@intel.com>
Subject: Re: [PATCH] cxl/hdm: Extend DVSEC range register emulation for
 region enumeration
Message-ID: <ZECMRAEvfpvZiADT@memverge.com>
References: <168012575521.221280.14177293493678527326.stgit@dwillia2-xfh.jf.intel.com>
 <ZCRhhUDcmypVKu0X@memverge.com>
 <64250e45bea49_c722294c2@dwillia2-mobl3.amr.corp.intel.com.notmuch>
 <ZCRzh0VLSVF/7jya@memverge.com>
 <64252d214f0b_c7222942@dwillia2-mobl3.amr.corp.intel.com.notmuch>
 <ZCUPlnQYVRCumy2O@memverge.com>
 <ZDtz++B25suuoYoY@memverge.com>
 <643e2fed87bd3_556e2941b@dwillia2-mobl3.amr.corp.intel.com.notmuch>
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <643e2fed87bd3_556e2941b@dwillia2-mobl3.amr.corp.intel.com.notmuch>
X-ClientProxiedBy: BYAPR03CA0016.namprd03.prod.outlook.com
 (2603:10b6:a02:a8::29) To SJ0PR17MB5512.namprd17.prod.outlook.com
 (2603:10b6:a03:394::19)
MIME-Version: 1.0
X-MS-PublicTrafficType: Email
X-MS-TrafficTypeDiagnostic: SJ0PR17MB5512:EE_|DS0PR17MB6412:EE_
X-MS-Office365-Filtering-Correlation-Id: 2ca18eaa-804d-4e31-4442-08db41393943
X-MS-Exchange-SenderADCheck: 1
X-MS-Exchange-AntiSpam-Relay: 0
X-Microsoft-Antispam: BCL:0;
X-Microsoft-Antispam-Message-Info: 9rJ2VjClKSW282josd9fBFP8WR6RDLRSZ3FMe6RR2OfAuR+oS6zyEgPUeo6S8sxrIFk5AMaFARrT7AdnTJ60CKf2S89lb3GNxr/kXgojSCXSgdcxSBoLYeOSo74Fcfw4ILdz6m/dyL2MZ83K8HP5vcySRQIBKXF6DgwUu1STnmPM+sUIEp0cOFaE7xWsdqdBtnN+tExQcXXYwn2hRcn+jQly9kbD6/rn9QXmp9VFIqfs3a3bC7y6RpQtzL9P5wM6S6BYVJG5LnWoaN5Z7GB/FuSlQXJOibX8C3evw15ktj04WGDpwS37Ee4/6jNahSGZ1YK8F0d7G5zssT24GS3+41iLLoJp8qoi9XCtX6nWdpG7+DhigRmHxlkK/WFMx1gu0C7Ce2/3ppmV8QN40rVfFY+O8lrOINPd0xiTiWu0QwCJzv8qDO0iZkx3wpQud9weGF5//MpT6cHyFrDk75Gb2JYWsA6efgYYHdfGeH3yb/D7+z5ovGfduS3HcC99f0EdJ+/OSVpsUKQBC5ZAwaWD2aP/Nj5mkJRlO5PHvLJjmkM6Nab346OdY5xYc2lFiWRp
X-Forefront-Antispam-Report: CIP:255.255.255.255;CTRY:;LANG:en;SCL:1;SRV:;IPV:NLI;SFV:NSPM;H:SJ0PR17MB5512.namprd17.prod.outlook.com;PTR:;CAT:NONE;SFS:(13230028)(136003)(376002)(396003)(346002)(366004)(39850400004)(451199021)(66946007)(66556008)(6916009)(2906002)(66476007)(86362001)(2616005)(4326008)(5660300002)(44832011)(8936002)(41300700001)(36756003)(478600001)(316002)(6486002)(6666004)(6512007)(26005)(186003)(6506007)(83380400001)(8676002)(38100700002);DIR:OUT;SFP:1101;
X-MS-Exchange-AntiSpam-MessageData-ChunkCount: 1
X-MS-Exchange-AntiSpam-MessageData-0: =?us-ascii?Q?GBvdR6lwjNyVAtLbLgcqR6hbtk0tlbGeHQ3QkSNCPVgeoNdkIxjPtwvAFaa3?=
 =?us-ascii?Q?GR0TKhsdOoKMKWc5nG/IOOdqs+P0/Um++27HdHfLS9jxIXRA2GT3skl02tpP?=
 =?us-ascii?Q?eTDsA7Eq9U88H617ntSoWbwzOW2qlNvRPg8LY49EOUn/dkPlJ8NCSOONDdyW?=
 =?us-ascii?Q?zTGujO6x7UxZYF2dIt7UeVOU5XP3qdI6ZjtPQCnvkPX95qzFIyYWBu/8Bdlw?=
 =?us-ascii?Q?2eZVtXWvrzOeHJXAfiV3IjStso+Hc23VDqe1Mbkyn00OjQ+t2Lbtr5Fkyctq?=
 =?us-ascii?Q?5RlmIV0kssxYwcMi9Tk68V1UKFVd3s56eijqCYi724zz/IVAp81Gb6Fv2Xjm?=
 =?us-ascii?Q?RG+qgV053SfbU9Yc44qpByOhT1p37h5X5Navrf8ns7lPrN/8R3U+8lh9a5Qd?=
 =?us-ascii?Q?Wq/4qqSsU2AMjUllKQd9N+jUOj7hqUG62huVksFFmGh2HL1/adJ46mpzxSRU?=
 =?us-ascii?Q?YRsjOR4ZGtLyPEM+mj5GLxJXFQ7U95jV9l+ZnIvHPZvoTcF4Wa4N+GaoXfzj?=
 =?us-ascii?Q?sg7Y8Nm5iDCUvbhiAmHwiRG/DHyG8cDqzliIYQkYNVnLveFc0P1rFbDxpYOU?=
 =?us-ascii?Q?NQTQqvxCHwDU8ddpKCLkjNrIWtIbkNhC1lemFcQcsz119/CsRUAKET/zsAlC?=
 =?us-ascii?Q?+2myFg+zYvFV2rQ8Rt7fAKCywc/Mcg2Yp/ETdSIkYihpJIKM6k9IoHXFCLcF?=
 =?us-ascii?Q?wY3K6LB93fcECg0and6m8AFMctTgrV3ZbuNUSS9CsT0NiISCL5IF96ciEDbW?=
 =?us-ascii?Q?KDweQvW/e7eMStSg6QdJ3swckvkfidUEXhjkzcVLBsRQw27Yg0JodT/K5nBb?=
 =?us-ascii?Q?Q73TPaHIrlX03k01Lq3yTW7bJQEv1Hah4Fjy4qNb5LwynFuXwkHzmnlM4ytd?=
 =?us-ascii?Q?lfu0LEK61guIrHwBKH4HwcVRm+znjm9x0zy4j0fCH6a5hDfya3JovrlT99fp?=
 =?us-ascii?Q?uidWQTh15Zb/DDcM3OGcfDftZIj5TDSqojHJ60thmVbrcCsb+QzMyM1xmdQt?=
 =?us-ascii?Q?4Agm+XS3RbomXn04hajDblwyysIXA/YtW7pDwI5sMvFbdLZ0JGbpK6DP1Ejb?=
 =?us-ascii?Q?WbZtHbgi+aW4PVCiNiozTqHad+TZ1hU2fD6UM3vlMDTe/m5h9U9u+mROV+E3?=
 =?us-ascii?Q?b07Az4dYisVputOLlK32FXUJo7ltREdIDRGzYwLgk/X5UZL4lbeFFoLt/7f+?=
 =?us-ascii?Q?lsJiQ6u/756VFFwnViQSS8Gj1f0CrNOTFThIO5PhGCcvjsK/tjY2BP+p1rNF?=
 =?us-ascii?Q?TR0c6y08ET0OFDqePDp3xdReuGafeUB8BSvc2E0C+3al3IZWY5d4slgTxsaZ?=
 =?us-ascii?Q?5ImXF83VeoK9mLr+V25dmOC+chodkmIWAfrCtGodPh6CPO0j9gwF5xM19Oai?=
 =?us-ascii?Q?IF55ey80EKdlYf9ypROpJsvHh9CDmMFY6kxmGE3iCdROQaF01pqO4WHnDyTq?=
 =?us-ascii?Q?InX4f7QW4K8lGtwKPtbDH5tTAfdqr1iqGitMKF0Av/M6Yc+p6vj2uiyCaJbx?=
 =?us-ascii?Q?+46LOpqozNSNwe/8Cg2sSI2SkEFqW1/AMGTAu0sNco0v7RObs1PbGjiI2+w2?=
 =?us-ascii?Q?cjOg823+DAeUieezeMNkojWBC/yBatsa0zPDrIXHTzCKAY0ofhaCaFodn5lD?=
 =?us-ascii?Q?Ig=3D=3D?=
X-OriginatorOrg: memverge.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 2ca18eaa-804d-4e31-4442-08db41393943
X-MS-Exchange-CrossTenant-AuthSource: SJ0PR17MB5512.namprd17.prod.outlook.com
X-MS-Exchange-CrossTenant-AuthAs: Internal
X-MS-Exchange-CrossTenant-OriginalArrivalTime: 20 Apr 2023 00:50:23.6620
 (UTC)
X-MS-Exchange-CrossTenant-FromEntityHeader: Hosted
X-MS-Exchange-CrossTenant-Id: 5c90cb59-37e7-4c81-9c07-00473d5fb682
X-MS-Exchange-CrossTenant-MailboxType: HOSTED
X-MS-Exchange-CrossTenant-UserPrincipalName: BwpxWqHYz2pvP7FewqgukNy0aX+74Uhk6VRc80yF9n13uEnpGvU6sZhnP/l4BUDNol3OsljAfUd8NjpX2Tj6cPneBaApj905QUgIvGJbbKI=
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DS0PR17MB6412
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Mon, Apr 17, 2023 at 10:51:41PM -0700, Dan Williams wrote:
> > DVSEC CXL Range 1 Size Low: 804
> > memory_info_valid == 0
> > memory_active == 0
> 
> Is this CXL_DVSEC_RANGE_SIZE_LOW(1) or literally "DVSEC CXL Range 1 Size
> Low" which Linux calls the offset CXL_DVSEC_RANGE_SIZE_LOW(0)? If its
> the former, it's valid for the second range to be disabled. Linux stack
> should have failed cxl_await_media_ready() otherwise if this is
> referring to CXL_DVSEC_RANGE_SIZE_LOW(0).
>

disregard, i was looking at size_low(0) but i misread the output, the
real value was 804b, so the lower 2 bits were set (which is what is
expected).

> > All this considered:  It's still head-scratching why shifting the HPA
> > read from the range register successfully produces a "working device",
> > but I suppose that's the definition of "undefined behavior" :]
> 
> The needs the platform vendor to weigh in, but that may not be possible
> if this is evaluation hardware.

Mostly i'm scratching my head at the fact that the device is programmed
with base:0x0 size:2gb where the HPA is almost certainly not 0.  I
originally attempted to set the value of the register to the expected
HPA and that caused what i presume was a machine check (haven't
investigated further yet).

What's confusing about this is one assumes that the CPU puts the HPA on
the bus (0x1080000000 in this case) but the base register has 0x0 -
which should produce a failure.  Instead it works.

Just a real head-scratcher, but i'm going to close this as "hardware's
jacked" at this point.

