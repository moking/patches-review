From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id E7C79C54E94
	for <linux-cxl@archiver.kernel.org>; Wed, 25 Jan 2023 15:27:10 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234965AbjAYP1K (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Wed, 25 Jan 2023 10:27:10 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:49014 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S234913AbjAYP1J (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Wed, 25 Jan 2023 10:27:09 -0500
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 5C96E49556
        for <linux-cxl@vger.kernel.org>; Wed, 25 Jan 2023 07:27:05 -0800 (PST)
Received: from lhrpeml500005.china.huawei.com (unknown [172.18.147.201])
        by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4P273H0LCkz6J9b0;
        Wed, 25 Jan 2023 23:26:19 +0800 (CST)
Received: from SecurePC-101-06.china.huawei.com (10.122.247.231) by
 lhrpeml500005.china.huawei.com (7.191.163.240) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2375.34; Wed, 25 Jan 2023 15:27:02 +0000
From: Jonathan Cameron <Jonathan.Cameron@huawei.com>
To: <qemu-devel@nongnu.org>, Michael Tsirkin <mst@redhat.com>
CC: Ben Widawsky <bwidawsk@kernel.org>, <linux-cxl@vger.kernel.org>,
        <linuxarm@huawei.com>, Ira Weiny <ira.weiny@intel.com>,
        Dave Jiang <dave.jiang@intel.com>,
        <alison.schofield@intel.com>, Fan Ni <fan.ni@samsung.com>
Subject: [PATCH 0/2] hw/cxl: Passthrough HDM decoder emulation
Date: Wed, 25 Jan 2023 15:27:01 +0000
Message-ID: <20230125152703.9928-1-Jonathan.Cameron@huawei.com>
X-Mailer: git-send-email 2.37.2
MIME-Version: 1.0
Content-Transfer-Encoding: 7BIT
Content-Type: text/plain; charset=US-ASCII
X-Originating-IP: [10.122.247.231]
X-ClientProxiedBy: lhrpeml500001.china.huawei.com (7.191.163.213) To
 lhrpeml500005.china.huawei.com (7.191.163.240)
X-CFilter-Loop: Reflected
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

Changes since RFC: (Thanks to Fan Ni)
- Fix trivial whitespace and long line issues.

Until now, testing using CXL has relied up always using two root ports
below a host bridge, to work around a current assumption in the Linux
kernel support that, in the single root port case, the implementation will
use the allowed passthrough decoder implementation choice. If that choice
is made all accesses are routed from the host bridge to the single
root port that is present. Effectively we have a pass through decoder
(it is called that in the kernel driver).

This patch series implements that functionality and makes it the default
See patch 2 for a discussion of why I think we can make this change
without backwards compatibility issues (basically if it didn't work before
who are we breaking by making it work?)

Whilst this limitation has been known since the initial QEMU patch
postings / kernel CXL region support, Fan Ni Ran into it recently reminding
me that we should solve it.

Based on top of:
https://lore.kernel.org/linux-cxl/20230120142450.16089-1-Jonathan.Cameron@huawei.com/
[PATCH v2 0/7] hw/cxl: RAS error emulation and injection
which is in turn on top of:
https://lore.kernel.org/all/20230112102644.27830-1-Jonathan.Cameron@huawei.com/
[PATCH v2 0/8] hw/cxl: CXL emulation cleanups and minor fixes for upstream

Jonathan Cameron (2):
  hw/pci: Add pcie_count_ds_port() and pcie_find_port_first() helpers
  hw/pxb-cxl: Support passthrough HDM Decoders unless overridden

 hw/cxl/cxl-host.c                   | 31 ++++++++++++--------
 hw/pci-bridge/pci_expander_bridge.c | 44 +++++++++++++++++++++++++----
 hw/pci/pcie_port.c                  | 38 +++++++++++++++++++++++++
 include/hw/cxl/cxl.h                |  1 +
 include/hw/cxl/cxl_component.h      |  1 +
 include/hw/pci/pci_bridge.h         |  1 +
 include/hw/pci/pcie_port.h          |  2 ++
 7 files changed, 101 insertions(+), 17 deletions(-)

-- 
2.37.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id B9C3DC54E94
	for <linux-cxl@archiver.kernel.org>; Wed, 25 Jan 2023 15:27:37 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S235606AbjAYP1h (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Wed, 25 Jan 2023 10:27:37 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:49452 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S234913AbjAYP1g (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Wed, 25 Jan 2023 10:27:36 -0500
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 6AAE6367CF
        for <linux-cxl@vger.kernel.org>; Wed, 25 Jan 2023 07:27:35 -0800 (PST)
Received: from lhrpeml500005.china.huawei.com (unknown [172.18.147.207])
        by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4P26zz5jd0z6J7Ts;
        Wed, 25 Jan 2023 23:23:27 +0800 (CST)
Received: from SecurePC-101-06.china.huawei.com (10.122.247.231) by
 lhrpeml500005.china.huawei.com (7.191.163.240) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2375.34; Wed, 25 Jan 2023 15:27:33 +0000
From: Jonathan Cameron <Jonathan.Cameron@huawei.com>
To: <qemu-devel@nongnu.org>, Michael Tsirkin <mst@redhat.com>
CC: Ben Widawsky <bwidawsk@kernel.org>, <linux-cxl@vger.kernel.org>,
        <linuxarm@huawei.com>, Ira Weiny <ira.weiny@intel.com>,
        Dave Jiang <dave.jiang@intel.com>,
        <alison.schofield@intel.com>, Fan Ni <fan.ni@samsung.com>
Subject: [PATCH 1/2] hw/pci: Add pcie_count_ds_port() and pcie_find_port_first() helpers
Date: Wed, 25 Jan 2023 15:27:02 +0000
Message-ID: <20230125152703.9928-2-Jonathan.Cameron@huawei.com>
X-Mailer: git-send-email 2.37.2
In-Reply-To: <20230125152703.9928-1-Jonathan.Cameron@huawei.com>
References: <20230125152703.9928-1-Jonathan.Cameron@huawei.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 7BIT
Content-Type: text/plain; charset=US-ASCII
X-Originating-IP: [10.122.247.231]
X-ClientProxiedBy: lhrpeml500001.china.huawei.com (7.191.163.213) To
 lhrpeml500005.china.huawei.com (7.191.163.240)
X-CFilter-Loop: Reflected
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

These two helpers enable host bridges to operate differently depending on
the number of downstream ports, in particular if there is only a single
port.

Useful for CXL where HDM address decoders are allowed to be implicit in
the host bridge if there is only a single root port.

Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
---
 hw/pci/pcie_port.c         | 38 ++++++++++++++++++++++++++++++++++++++
 include/hw/pci/pcie_port.h |  2 ++
 2 files changed, 40 insertions(+)

diff --git a/hw/pci/pcie_port.c b/hw/pci/pcie_port.c
index 687e4e763a..cae22e8b28 100644
--- a/hw/pci/pcie_port.c
+++ b/hw/pci/pcie_port.c
@@ -161,6 +161,44 @@ PCIDevice *pcie_find_port_by_pn(PCIBus *bus, uint8_t pn)
     return NULL;
 }
 
+/* Find first port in devfn number order */
+PCIDevice *pcie_find_port_first(PCIBus *bus)
+{
+    int devfn;
+
+    for (devfn = 0; devfn < ARRAY_SIZE(bus->devices); devfn++) {
+        PCIDevice *d = bus->devices[devfn];
+
+        if (!d || !pci_is_express(d) || !d->exp.exp_cap) {
+            continue;
+        }
+
+        if (object_dynamic_cast(OBJECT(d), TYPE_PCIE_PORT)) {
+            return d;
+        }
+    }
+
+    return NULL;
+}
+
+int pcie_count_ds_ports(PCIBus *bus)
+{
+    int dsp_count = 0;
+    int devfn;
+
+    for (devfn = 0; devfn < ARRAY_SIZE(bus->devices); devfn++) {
+        PCIDevice *d = bus->devices[devfn];
+
+        if (!d || !pci_is_express(d) || !d->exp.exp_cap) {
+            continue;
+        }
+        if (object_dynamic_cast(OBJECT(d), TYPE_PCIE_PORT)) {
+            dsp_count++;
+        }
+    }
+    return dsp_count;
+}
+
 static const TypeInfo pcie_port_type_info = {
     .name = TYPE_PCIE_PORT,
     .parent = TYPE_PCI_BRIDGE,
diff --git a/include/hw/pci/pcie_port.h b/include/hw/pci/pcie_port.h
index fd484afb30..2cbad72555 100644
--- a/include/hw/pci/pcie_port.h
+++ b/include/hw/pci/pcie_port.h
@@ -41,6 +41,8 @@ struct PCIEPort {
 void pcie_port_init_reg(PCIDevice *d);
 
 PCIDevice *pcie_find_port_by_pn(PCIBus *bus, uint8_t pn);
+PCIDevice *pcie_find_port_first(PCIBus *bus);
+int pcie_count_ds_ports(PCIBus *bus);
 
 #define TYPE_PCIE_SLOT "pcie-slot"
 OBJECT_DECLARE_SIMPLE_TYPE(PCIESlot, PCIE_SLOT)
-- 
2.37.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 61727C54E94
	for <linux-cxl@archiver.kernel.org>; Wed, 25 Jan 2023 15:28:16 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236035AbjAYP2O (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Wed, 25 Jan 2023 10:28:14 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:50226 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S236044AbjAYP2M (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Wed, 25 Jan 2023 10:28:12 -0500
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id E32DC3C290
        for <linux-cxl@vger.kernel.org>; Wed, 25 Jan 2023 07:28:06 -0800 (PST)
Received: from lhrpeml500005.china.huawei.com (unknown [172.18.147.207])
        by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4P271S5y68z67xt4;
        Wed, 25 Jan 2023 23:24:44 +0800 (CST)
Received: from SecurePC-101-06.china.huawei.com (10.122.247.231) by
 lhrpeml500005.china.huawei.com (7.191.163.240) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id
 15.1.2375.34; Wed, 25 Jan 2023 15:28:04 +0000
From: Jonathan Cameron <Jonathan.Cameron@huawei.com>
To: <qemu-devel@nongnu.org>, Michael Tsirkin <mst@redhat.com>
CC: Ben Widawsky <bwidawsk@kernel.org>, <linux-cxl@vger.kernel.org>,
        <linuxarm@huawei.com>, Ira Weiny <ira.weiny@intel.com>,
        Dave Jiang <dave.jiang@intel.com>,
        <alison.schofield@intel.com>, Fan Ni <fan.ni@samsung.com>
Subject: [PATCH 2/2] hw/pxb-cxl: Support passthrough HDM Decoders unless overridden
Date: Wed, 25 Jan 2023 15:27:03 +0000
Message-ID: <20230125152703.9928-3-Jonathan.Cameron@huawei.com>
X-Mailer: git-send-email 2.37.2
In-Reply-To: <20230125152703.9928-1-Jonathan.Cameron@huawei.com>
References: <20230125152703.9928-1-Jonathan.Cameron@huawei.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 7BIT
Content-Type: text/plain; charset=US-ASCII
X-Originating-IP: [10.122.247.231]
X-ClientProxiedBy: lhrpeml500005.china.huawei.com (7.191.163.240) To
 lhrpeml500005.china.huawei.com (7.191.163.240)
X-CFilter-Loop: Reflected
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

The CXL r3.0 specification allows for there to be no HDM decoders on CXL
Host Bridges if they have only a single root port. Instead, all accesses
directed to the host bridge (as specified in CXL Fixed Memory Windows)
are assumed to be routed to the single root port.

Linux currently assumes this implementation choice. So to simplify testing,
make QEMU emulation also default to no HDM decoders under these particular
circumstances, but provide a hdm_for_passthrough boolean option to have
HDM decoders as previously.

Technically this is breaking backwards compatibility, but given the only
known software stack used with the QEMU emulation is the Linux kernel
and this configuration did not work before this change, there are
unlikely to be any complaints that it now works. The option is retained
to allow testing of software that does allow for these HDM decoders to exist,
once someone writes it.

Reported-by: Fan Ni <fan.ni@samsung.com>
Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
---
 hw/cxl/cxl-host.c                   | 31 ++++++++++++--------
 hw/pci-bridge/pci_expander_bridge.c | 44 +++++++++++++++++++++++++----
 include/hw/cxl/cxl.h                |  1 +
 include/hw/cxl/cxl_component.h      |  1 +
 include/hw/pci/pci_bridge.h         |  1 +
 5 files changed, 61 insertions(+), 17 deletions(-)

diff --git a/hw/cxl/cxl-host.c b/hw/cxl/cxl-host.c
index 3c1ec8732a..6e923ceeaf 100644
--- a/hw/cxl/cxl-host.c
+++ b/hw/cxl/cxl-host.c
@@ -146,21 +146,28 @@ static PCIDevice *cxl_cfmws_find_device(CXLFixedWindow *fw, hwaddr addr)
         return NULL;
     }
 
-    hb_cstate = cxl_get_hb_cstate(hb);
-    if (!hb_cstate) {
-        return NULL;
-    }
+    if (cxl_get_hb_passthrough(hb)) {
+        rp = pcie_find_port_first(hb->bus);
+        if (!rp) {
+            return NULL;
+        }
+    } else {
+        hb_cstate = cxl_get_hb_cstate(hb);
+        if (!hb_cstate) {
+            return NULL;
+        }
 
-    cache_mem = hb_cstate->crb.cache_mem_registers;
+        cache_mem = hb_cstate->crb.cache_mem_registers;
 
-    target_found = cxl_hdm_find_target(cache_mem, addr, &target);
-    if (!target_found) {
-        return NULL;
-    }
+        target_found = cxl_hdm_find_target(cache_mem, addr, &target);
+        if (!target_found) {
+            return NULL;
+        }
 
-    rp = pcie_find_port_by_pn(hb->bus, target);
-    if (!rp) {
-        return NULL;
+        rp = pcie_find_port_by_pn(hb->bus, target);
+        if (!rp) {
+            return NULL;
+        }
     }
 
     d = pci_bridge_get_sec_bus(PCI_BRIDGE(rp))->devices[0];
diff --git a/hw/pci-bridge/pci_expander_bridge.c b/hw/pci-bridge/pci_expander_bridge.c
index e752a21292..ead33f0c05 100644
--- a/hw/pci-bridge/pci_expander_bridge.c
+++ b/hw/pci-bridge/pci_expander_bridge.c
@@ -15,6 +15,7 @@
 #include "hw/pci/pci.h"
 #include "hw/pci/pci_bus.h"
 #include "hw/pci/pci_host.h"
+#include "hw/pci/pcie_port.h"
 #include "hw/qdev-properties.h"
 #include "hw/pci/pci_bridge.h"
 #include "hw/pci-bridge/pci_expander_bridge.h"
@@ -79,6 +80,13 @@ CXLComponentState *cxl_get_hb_cstate(PCIHostState *hb)
     return &host->cxl_cstate;
 }
 
+bool cxl_get_hb_passthrough(PCIHostState *hb)
+{
+    CXLHost *host = PXB_CXL_HOST(hb);
+
+    return host->passthrough;
+}
+
 static int pxb_bus_num(PCIBus *bus)
 {
     PXBDev *pxb = convert_to_pxb(bus->parent_dev);
@@ -289,15 +297,32 @@ static int pxb_map_irq_fn(PCIDevice *pci_dev, int pin)
     return pin - PCI_SLOT(pxb->devfn);
 }
 
-static void pxb_dev_reset(DeviceState *dev)
+static void pxb_cxl_dev_reset(DeviceState *dev)
 {
     CXLHost *cxl = PXB_CXL_DEV(dev)->cxl.cxl_host_bridge;
     CXLComponentState *cxl_cstate = &cxl->cxl_cstate;
+    PCIHostState *hb = PCI_HOST_BRIDGE(cxl);
     uint32_t *reg_state = cxl_cstate->crb.cache_mem_registers;
     uint32_t *write_msk = cxl_cstate->crb.cache_mem_regs_write_mask;
+    int dsp_count = 0;
 
     cxl_component_register_init_common(reg_state, write_msk, CXL2_ROOT_PORT);
-    ARRAY_FIELD_DP32(reg_state, CXL_HDM_DECODER_CAPABILITY, TARGET_COUNT, 8);
+    /*
+     * The CXL specification allows for host bridges with no HDM decoders
+     * if they only have a single root port.
+     */
+    if (!PXB_DEV(dev)->hdm_for_passthrough) {
+        dsp_count = pcie_count_ds_ports(hb->bus);
+    }
+    /* Initial reset will have 0 dsp so wait until > 0 */
+    if (dsp_count == 1) {
+        cxl->passthrough = true;
+        /* Set Capability ID in header to NONE */
+        ARRAY_FIELD_DP32(reg_state, CXL_HDM_CAPABILITY_HEADER, ID, 0);
+    } else {
+        ARRAY_FIELD_DP32(reg_state, CXL_HDM_DECODER_CAPABILITY, TARGET_COUNT,
+                         8);
+    }
 }
 
 static gint pxb_compare(gconstpointer a, gconstpointer b)
@@ -481,9 +506,18 @@ static void pxb_cxl_dev_realize(PCIDevice *dev, Error **errp)
     }
 
     pxb_dev_realize_common(dev, CXL, errp);
-    pxb_dev_reset(DEVICE(dev));
+    pxb_cxl_dev_reset(DEVICE(dev));
 }
 
+static Property pxb_cxl_dev_properties[] = {
+    /* Note: 0 is not a legal PXB bus number. */
+    DEFINE_PROP_UINT8("bus_nr", PXBDev, bus_nr, 0),
+    DEFINE_PROP_UINT16("numa_node", PXBDev, numa_node, NUMA_NODE_UNASSIGNED),
+    DEFINE_PROP_BOOL("bypass_iommu", PXBDev, bypass_iommu, false),
+    DEFINE_PROP_BOOL("hdm_for_passthrough", PXBDev, hdm_for_passthrough, false),
+    DEFINE_PROP_END_OF_LIST(),
+};
+
 static void pxb_cxl_dev_class_init(ObjectClass *klass, void *data)
 {
     DeviceClass *dc   = DEVICE_CLASS(klass);
@@ -497,12 +531,12 @@ static void pxb_cxl_dev_class_init(ObjectClass *klass, void *data)
      */
 
     dc->desc = "CXL Host Bridge";
-    device_class_set_props(dc, pxb_dev_properties);
+    device_class_set_props(dc, pxb_cxl_dev_properties);
     set_bit(DEVICE_CATEGORY_BRIDGE, dc->categories);
 
     /* Host bridges aren't hotpluggable. FIXME: spec reference */
     dc->hotpluggable = false;
-    dc->reset = pxb_dev_reset;
+    dc->reset = pxb_cxl_dev_reset;
 }
 
 static const TypeInfo pxb_cxl_dev_info = {
diff --git a/include/hw/cxl/cxl.h b/include/hw/cxl/cxl.h
index b161be59b7..b2cffbb364 100644
--- a/include/hw/cxl/cxl.h
+++ b/include/hw/cxl/cxl.h
@@ -49,6 +49,7 @@ struct CXLHost {
     PCIHostState parent_obj;
 
     CXLComponentState cxl_cstate;
+    bool passthrough;
 };
 
 #define TYPE_PXB_CXL_HOST "pxb-cxl-host"
diff --git a/include/hw/cxl/cxl_component.h b/include/hw/cxl/cxl_component.h
index 8752171f70..b4104b78b5 100644
--- a/include/hw/cxl/cxl_component.h
+++ b/include/hw/cxl/cxl_component.h
@@ -249,6 +249,7 @@ static inline hwaddr cxl_decode_ig(int ig)
 }
 
 CXLComponentState *cxl_get_hb_cstate(PCIHostState *hb);
+bool cxl_get_hb_passthrough(PCIHostState *hb);
 
 void cxl_doe_cdat_init(CXLComponentState *cxl_cstate, Error **errp);
 void cxl_doe_cdat_release(CXLComponentState *cxl_cstate);
diff --git a/include/hw/pci/pci_bridge.h b/include/hw/pci/pci_bridge.h
index 63a7521567..81a058bb2c 100644
--- a/include/hw/pci/pci_bridge.h
+++ b/include/hw/pci/pci_bridge.h
@@ -92,6 +92,7 @@ struct PXBDev {
     uint8_t bus_nr;
     uint16_t numa_node;
     bool bypass_iommu;
+    bool hdm_for_passthrough;
     struct cxl_dev {
         CXLHost *cxl_host_bridge; /* Pointer to a CXLHost */
     } cxl;
-- 
2.37.2


From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 2C26EC54EAA
	for <linux-cxl@archiver.kernel.org>; Thu, 26 Jan 2023 21:57:58 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S233070AbjAZV55 (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Thu, 26 Jan 2023 16:57:57 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:40792 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S233102AbjAZV5t (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Thu, 26 Jan 2023 16:57:49 -0500
Received: from mailout1.w2.samsung.com (mailout1.w2.samsung.com [211.189.100.11])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 0380C30D1
        for <linux-cxl@vger.kernel.org>; Thu, 26 Jan 2023 13:57:42 -0800 (PST)
Received: from uscas1p1.samsung.com (unknown [182.198.245.206])
        by mailout1.w2.samsung.com (KnoxPortal) with ESMTP id 20230126215736usoutp01bdd4d2565bb4563f2d5de3805f90d66f~9_qzmIW6A2735927359usoutp01O;
        Thu, 26 Jan 2023 21:57:36 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout1.w2.samsung.com 20230126215736usoutp01bdd4d2565bb4563f2d5de3805f90d66f~9_qzmIW6A2735927359usoutp01O
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
        s=mail20170921; t=1674770257;
        bh=u907eVJUi4xOmomJEuNRmNaUp3HQlGvcKaUxp4Z+ADg=;
        h=From:To:CC:Subject:Date:In-Reply-To:References:From;
        b=X0fvpAEzrrUa0omPG38nP7e/CCBlWdOfALx2vtDO14wVccC2WZQzzA4wNbGSAoqkY
         lbkO1w9Tp956xI6B/1/hzUzcgmhBWLJ2soCsEF+nMBBHGcv0DjAtZKn6yUv+dzbqeO
         F9OYu+FE3l3whUW4+xhlP9Ds3ZXnEEP44GqjwSjQ=
Received: from ussmges1new.samsung.com (u109.gpu85.samsung.co.kr
        [203.254.195.109]) by uscas1p2.samsung.com (KnoxPortal) with ESMTP id
        20230126215736uscas1p2e40c066bdb27b0c82c99e196ea0c10a7~9_qzZ-pXY1092510925uscas1p2L;
        Thu, 26 Jan 2023 21:57:36 +0000 (GMT)
Received: from uscas1p2.samsung.com ( [182.198.245.207]) by
        ussmges1new.samsung.com (USCPEMTA) with SMTP id D3.D2.06976.057F2D36; Thu,
        26 Jan 2023 16:57:36 -0500 (EST)
Received: from ussmgxs2new.samsung.com (u91.gpu85.samsung.co.kr
        [203.254.195.91]) by uscas1p2.samsung.com (KnoxPortal) with ESMTP id
        20230126215736uscas1p2166334bf8185239cf6ac70053dc386c5~9_qzMTPdc1091510915uscas1p2B;
        Thu, 26 Jan 2023 21:57:36 +0000 (GMT)
X-AuditID: cbfec36d-d99ff70000011b40-cc-63d2f750e31c
Received: from SSI-EX1.ssi.samsung.com ( [105.128.2.145]) by
        ussmgxs2new.samsung.com (USCPEXMTA) with SMTP id E3.D8.17110.057F2D36; Thu,
        26 Jan 2023 16:57:36 -0500 (EST)
Received: from SSI-EX2.ssi.samsung.com (105.128.2.227) by
        SSI-EX1.ssi.samsung.com (105.128.2.226) with Microsoft SMTP Server
        (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id
        15.1.2375.24; Thu, 26 Jan 2023 13:57:35 -0800
Received: from SSI-EX2.ssi.samsung.com ([105.128.2.227]) by
        SSI-EX2.ssi.samsung.com ([105.128.2.227]) with mapi id 15.01.2375.024; Thu,
        26 Jan 2023 13:57:35 -0800
From: Fan Ni <fan.ni@samsung.com>
To: Jonathan Cameron <Jonathan.Cameron@huawei.com>
CC: "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
        Michael Tsirkin <mst@redhat.com>,
        Ben Widawsky <bwidawsk@kernel.org>,
        "linux-cxl@vger.kernel.org" <linux-cxl@vger.kernel.org>,
        "linuxarm@huawei.com" <linuxarm@huawei.com>,
        Ira Weiny <ira.weiny@intel.com>,
        Dave Jiang <dave.jiang@intel.com>,
        "alison.schofield@intel.com" <alison.schofield@intel.com>
Subject: Re: [PATCH 2/2] hw/pxb-cxl: Support passthrough HDM Decoders unless
 overridden
Thread-Topic: [PATCH 2/2] hw/pxb-cxl: Support passthrough HDM Decoders
        unless overridden
Thread-Index: AQHZMNGiiun86hSl3USF52ioTTSPk66xxtgA
Date: Thu, 26 Jan 2023 21:57:35 +0000
Message-ID: <20230126215727.GA203951@bgt-140510-bm03>
In-Reply-To: <20230125152703.9928-3-Jonathan.Cameron@huawei.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [105.128.2.176]
Content-Type: text/plain; charset="us-ascii"
Content-ID: <63990672878450469B7D887C4403DD52@ssi.samsung.com>
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-CFilter-Loop: Reflected
X-Brightmail-Tracker: H4sIAAAAAAAAA02Sf0yMcRzHfZ977unptrZHrD5CuPkxpJSyxyJlxrGZFjNiOE9PV9N17Z7O
        j4xFQrfV/MrmOvpldyT6cZyjK3VIKo4oVymZUNFR2PlV6J7a7r/39/N5vz+f12f7kgLPCqEP
        GZ+YzCoTpQliQoQba79bF0Q6mpiFdT/n0h1vnxJ02plCRNe1Hibou+8+4HRRfgtBWzX1OH2v
        rBGj//7qE9IPM014uLvk6P1+oaTQ3ItJyosyCEl3iwGTfK5qJiRfy30jiWjR0hg2IX4PqwwI
        2ymK07UNC5OKI/Y5rvdjqehdkBq5k0AFQ0lGOlIjEelJXUHwTZ0t4B/pGNh+mtCYS1/RhvGN
        awjqKrtGI4MIrDXdBP/QIch6YsdGIgQ1A6rUt4gRPZEKArvttDMhoHowGGp++38JSU6gtsCT
        TJr3RMMPu9ZtzN/4o9OpcWoW1D0odWJ4UCGQp/vlnO9OhUP1kcvOOqK8wFFf7KwLKG9o687F
        eOzxUJBjFvDaC4bvvCF4PQNeO3rdeL8f5FUMErwOg97rn0b1fNDlfxTwe8fDo/PdOJ+dBDWX
        bfjILUB9IsFy4eXo0JVgeTamJ8NQhw4buREoBooGRHw5AXIv3RidEwr5f0qwk2imxgVb44Kk
        cUHSuCBpXJDykLAIeas4Ti5jucBEdq8/J5VzqkSZP6OQl6P//6th+J7chExtA/4WhJHIgoAU
        iCd63IxoYjw9YqT7U1ilYodSlcByFjSZxMXeHoHLHjGelEyazO5m2SRWOdbFSHefVOyqcTt3
        caVFb2gN1s7RK6pMC4u7ZPlfBrerGYN1HFLpM1JuB+zvCeO8yBfDV1JXK6YQsrDm5JpF0wwv
        GjuW1Ndu89Ge3pDTIo/PNqbbHler25mHrX22Wm1l16b2VRGxkemzdCfsK0LVgUHqyNnZ1xwR
        XqoD8buqmbVZ5vsfnov8lvqdlfpGfZsS7rvBejVWvNVRVprJCGcvnup29+/h1Y8HNA21pqYz
        p0TnKg/1hxen7dqUue0YPtRPaDN+7+y0O8T0mqzO93Hs5r3mdY3+x5PIaEPs54NpOX9+R1X3
        WoxEz8D6QcX0kKAbNB0SPb/UvPFWQXvADmPwcr3uVVJMSoMY5+KkgfMESk76D41xwu7OAwAA
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFrrBIsWRmVeSWpSXmKPExsWS2cA0UTfg+6Vkg4VnJS3uPr7AZtE8eTGj
        xYmbjWwW+58+Z7FYtfAam8X5WadYLA5vPMNk8f/XK1aL4707WBw4PVqOvGX1WLznJZPHplWd
        bB5Prm1m8ni/7yqbx+dNcgFsUVw2Kak5mWWpRfp2CVwZy279Yy1Y41jxfd1bpgbGp0ZdjJwc
        EgImEst332ICsYUEVjNKtBzT6GLkArI/MUo8XTmJHcJZxijx/VYrG0gVm4CixL6u7WC2iICR
        xLsbkxhBipgFXjBJPJ3aBZTg4BAWiJQ412sBURMl8athNwtM/Zkf99hBbBYBVYkTRzcwgti8
        AqYSC5b9grqiVOLbj/tg9ZwCDhIHmlaA1TAKiEl8P7UGrIZZQFzi1pP5TBAfCEgs2XOeGcIW
        lXj5+B8rhK0ocf/7S3aIeh2JBbs/sUHYdhIv172BsrUlli18zQxxg6DEyZlPWCB6JSUOrrjB
        MoFRYhaSdbOQjJqFZNQsJKNmIRm1gJF1FaN4aXFxbnpFsVFearlecWJucWleul5yfu4mRmDk
        n/53OHoH4+1bH/UOMTJxMB5ilOBgVhLh3ep4KVmINyWxsiq1KD++qDQntfgQozQHi5I478uo
        ifFCAumJJanZqakFqUUwWSYOTqkGJt/ASW+XZwVsvraUOWpDr67ohuOCyqrTje7/0bit9Xle
        s9mcx8cP74jWWTx37UTnheKCJny5xzgtCjgDundt3bLF7dPKzWd5QmNkps222bRx4/TCRds4
        Nm041vDjiYKt8qfcvxHnjBYmqeUyeKtPXZCwyOj/b02Hp09XKP61r+E5rCrCzrk1Us/B3uHl
        +T8MkmFKjyZNvXO/QHruYr1P7N5BK20zQq5uXhC06t3D5os5bzl3ndBsv2g82TmFxV50hevr
        5h9snNOU5rhdT/E+eVSb/UBR5eW4rY9Z2qNEz8yPMpseckS3rvzUv4cr5eonHjxsKSq+3qku
        UOqvnM88K9sA8V1R733YQ78zTKxVXqXEUpyRaKjFXFScCAA+02iJawMAAA==
X-CMS-MailID: 20230126215736uscas1p2166334bf8185239cf6ac70053dc386c5
CMS-TYPE: 301P
X-CMS-RootMailID: 20230126215736uscas1p2166334bf8185239cf6ac70053dc386c5
References: <20230125152703.9928-1-Jonathan.Cameron@huawei.com>
        <20230125152703.9928-3-Jonathan.Cameron@huawei.com>
        <CGME20230126215736uscas1p2166334bf8185239cf6ac70053dc386c5@uscas1p2.samsung.com>
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Wed, Jan 25, 2023 at 03:27:03PM +0000, Jonathan Cameron wrote:

> The CXL r3.0 specification allows for there to be no HDM decoders on CXL
> Host Bridges if they have only a single root port. Instead, all accesses
> directed to the host bridge (as specified in CXL Fixed Memory Windows)
> are assumed to be routed to the single root port.
>=20
> Linux currently assumes this implementation choice. So to simplify testin=
g,
> make QEMU emulation also default to no HDM decoders under these particula=
r
> circumstances, but provide a hdm_for_passthrough boolean option to have
> HDM decoders as previously.
>=20
> Technically this is breaking backwards compatibility, but given the only
> known software stack used with the QEMU emulation is the Linux kernel
> and this configuration did not work before this change, there are
> unlikely to be any complaints that it now works. The option is retained
> to allow testing of software that does allow for these HDM decoders to ex=
ist,
> once someone writes it.
>=20
> Reported-by: Fan Ni <fan.ni@samsung.com>
> Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
> ---
>  hw/cxl/cxl-host.c                   | 31 ++++++++++++--------
>  hw/pci-bridge/pci_expander_bridge.c | 44 +++++++++++++++++++++++++----
>  include/hw/cxl/cxl.h                |  1 +
>  include/hw/cxl/cxl_component.h      |  1 +
>  include/hw/pci/pci_bridge.h         |  1 +
>  5 files changed, 61 insertions(+), 17 deletions(-)
>=20
> diff --git a/hw/cxl/cxl-host.c b/hw/cxl/cxl-host.c
> index 3c1ec8732a..6e923ceeaf 100644
> --- a/hw/cxl/cxl-host.c
> +++ b/hw/cxl/cxl-host.c
> @@ -146,21 +146,28 @@ static PCIDevice *cxl_cfmws_find_device(CXLFixedWin=
dow *fw, hwaddr addr)
>          return NULL;
>      }
> =20
> -    hb_cstate =3D cxl_get_hb_cstate(hb);
> -    if (!hb_cstate) {
> -        return NULL;
> -    }
> +    if (cxl_get_hb_passthrough(hb)) {
> +        rp =3D pcie_find_port_first(hb->bus);
> +        if (!rp) {
> +            return NULL;
> +        }
> +    } else {
> +        hb_cstate =3D cxl_get_hb_cstate(hb);
> +        if (!hb_cstate) {
> +            return NULL;
> +        }
> =20
> -    cache_mem =3D hb_cstate->crb.cache_mem_registers;
> +        cache_mem =3D hb_cstate->crb.cache_mem_registers;
> =20
> -    target_found =3D cxl_hdm_find_target(cache_mem, addr, &target);
> -    if (!target_found) {
> -        return NULL;
> -    }
> +        target_found =3D cxl_hdm_find_target(cache_mem, addr, &target);
> +        if (!target_found) {
> +            return NULL;
> +        }
> =20
> -    rp =3D pcie_find_port_by_pn(hb->bus, target);
> -    if (!rp) {
> -        return NULL;
> +        rp =3D pcie_find_port_by_pn(hb->bus, target);
> +        if (!rp) {
> +            return NULL;
> +        }
>      }
> =20
>      d =3D pci_bridge_get_sec_bus(PCI_BRIDGE(rp))->devices[0];
> diff --git a/hw/pci-bridge/pci_expander_bridge.c b/hw/pci-bridge/pci_expa=
nder_bridge.c
> index e752a21292..ead33f0c05 100644
> --- a/hw/pci-bridge/pci_expander_bridge.c
> +++ b/hw/pci-bridge/pci_expander_bridge.c
> @@ -15,6 +15,7 @@
>  #include "hw/pci/pci.h"
>  #include "hw/pci/pci_bus.h"
>  #include "hw/pci/pci_host.h"
> +#include "hw/pci/pcie_port.h"
>  #include "hw/qdev-properties.h"
>  #include "hw/pci/pci_bridge.h"
>  #include "hw/pci-bridge/pci_expander_bridge.h"
> @@ -79,6 +80,13 @@ CXLComponentState *cxl_get_hb_cstate(PCIHostState *hb)
>      return &host->cxl_cstate;
>  }
> =20
> +bool cxl_get_hb_passthrough(PCIHostState *hb)
> +{
> +    CXLHost *host =3D PXB_CXL_HOST(hb);
> +
> +    return host->passthrough;
> +}
> +
>  static int pxb_bus_num(PCIBus *bus)
>  {
>      PXBDev *pxb =3D convert_to_pxb(bus->parent_dev);
> @@ -289,15 +297,32 @@ static int pxb_map_irq_fn(PCIDevice *pci_dev, int p=
in)
>      return pin - PCI_SLOT(pxb->devfn);
>  }
> =20
> -static void pxb_dev_reset(DeviceState *dev)
> +static void pxb_cxl_dev_reset(DeviceState *dev)
>  {
>      CXLHost *cxl =3D PXB_CXL_DEV(dev)->cxl.cxl_host_bridge;
>      CXLComponentState *cxl_cstate =3D &cxl->cxl_cstate;
> +    PCIHostState *hb =3D PCI_HOST_BRIDGE(cxl);
>      uint32_t *reg_state =3D cxl_cstate->crb.cache_mem_registers;
>      uint32_t *write_msk =3D cxl_cstate->crb.cache_mem_regs_write_mask;
> +    int dsp_count =3D 0;
> =20
>      cxl_component_register_init_common(reg_state, write_msk, CXL2_ROOT_P=
ORT);
> -    ARRAY_FIELD_DP32(reg_state, CXL_HDM_DECODER_CAPABILITY, TARGET_COUNT=
, 8);
> +    /*
> +     * The CXL specification allows for host bridges with no HDM decoder=
s
> +     * if they only have a single root port.
> +     */
> +    if (!PXB_DEV(dev)->hdm_for_passthrough) {
> +        dsp_count =3D pcie_count_ds_ports(hb->bus);
> +    }
> +    /* Initial reset will have 0 dsp so wait until > 0 */
> +    if (dsp_count =3D=3D 1) {
> +        cxl->passthrough =3D true;
> +        /* Set Capability ID in header to NONE */
> +        ARRAY_FIELD_DP32(reg_state, CXL_HDM_CAPABILITY_HEADER, ID, 0);
> +    } else {
> +        ARRAY_FIELD_DP32(reg_state, CXL_HDM_DECODER_CAPABILITY, TARGET_C=
OUNT,
> +                         8);
> +    }
>  }
> =20
>  static gint pxb_compare(gconstpointer a, gconstpointer b)
> @@ -481,9 +506,18 @@ static void pxb_cxl_dev_realize(PCIDevice *dev, Erro=
r **errp)
>      }
> =20
>      pxb_dev_realize_common(dev, CXL, errp);
> -    pxb_dev_reset(DEVICE(dev));
> +    pxb_cxl_dev_reset(DEVICE(dev));
>  }
> =20
> +static Property pxb_cxl_dev_properties[] =3D {
> +    /* Note: 0 is not a legal PXB bus number. */
> +    DEFINE_PROP_UINT8("bus_nr", PXBDev, bus_nr, 0),
> +    DEFINE_PROP_UINT16("numa_node", PXBDev, numa_node, NUMA_NODE_UNASSIG=
NED),
> +    DEFINE_PROP_BOOL("bypass_iommu", PXBDev, bypass_iommu, false),
> +    DEFINE_PROP_BOOL("hdm_for_passthrough", PXBDev, hdm_for_passthrough,=
 false),
when setting hdm_for_passthrough to true at the qemu command line, we
will see the segfault issue as before. I think this is expected as it
is the logic in cxl_cfmws_find_device. Wondering if there will be
following fixes to handle the case when hdm_for_passthrough is true.
> +    DEFINE_PROP_END_OF_LIST(),
> +};
> +
>  static void pxb_cxl_dev_class_init(ObjectClass *klass, void *data)
>  {
>      DeviceClass *dc   =3D DEVICE_CLASS(klass);
> @@ -497,12 +531,12 @@ static void pxb_cxl_dev_class_init(ObjectClass *kla=
ss, void *data)
>       */
> =20
>      dc->desc =3D "CXL Host Bridge";
> -    device_class_set_props(dc, pxb_dev_properties);
> +    device_class_set_props(dc, pxb_cxl_dev_properties);
>      set_bit(DEVICE_CATEGORY_BRIDGE, dc->categories);
> =20
>      /* Host bridges aren't hotpluggable. FIXME: spec reference */
>      dc->hotpluggable =3D false;
> -    dc->reset =3D pxb_dev_reset;
> +    dc->reset =3D pxb_cxl_dev_reset;
>  }
> =20
>  static const TypeInfo pxb_cxl_dev_info =3D {
> diff --git a/include/hw/cxl/cxl.h b/include/hw/cxl/cxl.h
> index b161be59b7..b2cffbb364 100644
> --- a/include/hw/cxl/cxl.h
> +++ b/include/hw/cxl/cxl.h
> @@ -49,6 +49,7 @@ struct CXLHost {
>      PCIHostState parent_obj;
> =20
>      CXLComponentState cxl_cstate;
> +    bool passthrough;
>  };
> =20
>  #define TYPE_PXB_CXL_HOST "pxb-cxl-host"
> diff --git a/include/hw/cxl/cxl_component.h b/include/hw/cxl/cxl_componen=
t.h
> index 8752171f70..b4104b78b5 100644
> --- a/include/hw/cxl/cxl_component.h
> +++ b/include/hw/cxl/cxl_component.h
> @@ -249,6 +249,7 @@ static inline hwaddr cxl_decode_ig(int ig)
>  }
> =20
>  CXLComponentState *cxl_get_hb_cstate(PCIHostState *hb);
> +bool cxl_get_hb_passthrough(PCIHostState *hb);
> =20
>  void cxl_doe_cdat_init(CXLComponentState *cxl_cstate, Error **errp);
>  void cxl_doe_cdat_release(CXLComponentState *cxl_cstate);
> diff --git a/include/hw/pci/pci_bridge.h b/include/hw/pci/pci_bridge.h
> index 63a7521567..81a058bb2c 100644
> --- a/include/hw/pci/pci_bridge.h
> +++ b/include/hw/pci/pci_bridge.h
> @@ -92,6 +92,7 @@ struct PXBDev {
>      uint8_t bus_nr;
>      uint16_t numa_node;
>      bool bypass_iommu;
> +    bool hdm_for_passthrough;
>      struct cxl_dev {
>          CXLHost *cxl_host_bridge; /* Pointer to a CXLHost */
>      } cxl;
> --=20
> 2.37.2
>=20
> =

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id C1174C38142
	for <linux-cxl@archiver.kernel.org>; Fri, 27 Jan 2023 10:01:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231755AbjA0KBy (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Fri, 27 Jan 2023 05:01:54 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:41856 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231953AbjA0KBx (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Fri, 27 Jan 2023 05:01:53 -0500
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 222A727995
        for <linux-cxl@vger.kernel.org>; Fri, 27 Jan 2023 02:01:52 -0800 (PST)
Received: from lhrpeml500005.china.huawei.com (unknown [172.18.147.207])
        by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4P3Ch11Jfxz67kTG;
        Fri, 27 Jan 2023 17:58:25 +0800 (CST)
Received: from localhost (10.202.227.76) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2375.34; Fri, 27 Jan
 2023 10:01:49 +0000
Date: Fri, 27 Jan 2023 10:01:49 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Fan Ni <fan.ni@samsung.com>
CC: "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
        Michael Tsirkin <mst@redhat.com>,
        Ben Widawsky <bwidawsk@kernel.org>,
        "linux-cxl@vger.kernel.org" <linux-cxl@vger.kernel.org>,
        "linuxarm@huawei.com" <linuxarm@huawei.com>,
        Ira Weiny <ira.weiny@intel.com>,
        Dave Jiang <dave.jiang@intel.com>,
        "alison.schofield@intel.com" <alison.schofield@intel.com>
Subject: Re: [PATCH 2/2] hw/pxb-cxl: Support passthrough HDM Decoders unless
 overridden
Message-ID: <20230127100149.0000563e@Huawei.com>
In-Reply-To: <20230126215727.GA203951@bgt-140510-bm03>
References: <20230125152703.9928-1-Jonathan.Cameron@huawei.com>
        <20230125152703.9928-3-Jonathan.Cameron@huawei.com>
        <CGME20230126215736uscas1p2166334bf8185239cf6ac70053dc386c5@uscas1p2.samsung.com>
        <20230126215727.GA203951@bgt-140510-bm03>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.202.227.76]
X-ClientProxiedBy: lhrpeml500003.china.huawei.com (7.191.162.67) To
 lhrpeml500005.china.huawei.com (7.191.163.240)
X-CFilter-Loop: Reflected
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Thu, 26 Jan 2023 21:57:35 +0000
Fan Ni <fan.ni@samsung.com> wrote:

> On Wed, Jan 25, 2023 at 03:27:03PM +0000, Jonathan Cameron wrote:
> 
> > The CXL r3.0 specification allows for there to be no HDM decoders on CXL
> > Host Bridges if they have only a single root port. Instead, all accesses
> > directed to the host bridge (as specified in CXL Fixed Memory Windows)
> > are assumed to be routed to the single root port.
> > 
> > Linux currently assumes this implementation choice. So to simplify testing,
> > make QEMU emulation also default to no HDM decoders under these particular
> > circumstances, but provide a hdm_for_passthrough boolean option to have
> > HDM decoders as previously.
> > 
> > Technically this is breaking backwards compatibility, but given the only
> > known software stack used with the QEMU emulation is the Linux kernel
> > and this configuration did not work before this change, there are
> > unlikely to be any complaints that it now works. The option is retained
> > to allow testing of software that does allow for these HDM decoders to exist,
> > once someone writes it.
> > 
> > Reported-by: Fan Ni <fan.ni@samsung.com>
> > Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>

> >      pxb_dev_realize_common(dev, CXL, errp);
> > -    pxb_dev_reset(DEVICE(dev));
> > +    pxb_cxl_dev_reset(DEVICE(dev));
> >  }
> >  
> > +static Property pxb_cxl_dev_properties[] = {
> > +    /* Note: 0 is not a legal PXB bus number. */
> > +    DEFINE_PROP_UINT8("bus_nr", PXBDev, bus_nr, 0),
> > +    DEFINE_PROP_UINT16("numa_node", PXBDev, numa_node, NUMA_NODE_UNASSIGNED),
> > +    DEFINE_PROP_BOOL("bypass_iommu", PXBDev, bypass_iommu, false),
> > +    DEFINE_PROP_BOOL("hdm_for_passthrough", PXBDev, hdm_for_passthrough, false),  
> when setting hdm_for_passthrough to true at the qemu command line, we
> will see the segfault issue as before. I think this is expected as it
> is the logic in cxl_cfmws_find_device. Wondering if there will be
> following fixes to handle the case when hdm_for_passthrough is true.

Absolutely, I'd expect a kernel fix for that case, but it's probably not
high priority for anyone given we don't yet have any hardware that does that
(as far as I know anyway!)

I wanted to keep the control here to make that easy to test when we do
have the fix in place.

Jonathan

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id CAD8CC61DA4
	for <linux-cxl@archiver.kernel.org>; Fri, 27 Jan 2023 17:03:07 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S234787AbjA0RDF (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Fri, 27 Jan 2023 12:03:05 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:57408 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S234748AbjA0RDC (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Fri, 27 Jan 2023 12:03:02 -0500
Received: from mailout1.w2.samsung.com (mailout1.w2.samsung.com [211.189.100.11])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 3BA2480002
        for <linux-cxl@vger.kernel.org>; Fri, 27 Jan 2023 09:02:40 -0800 (PST)
Received: from uscas1p1.samsung.com (unknown [182.198.245.206])
        by mailout1.w2.samsung.com (KnoxPortal) with ESMTP id 20230127170237usoutp015da475b7283befbc9a83301c92e90015~_OSiTnbQg1456614566usoutp01l;
        Fri, 27 Jan 2023 17:02:37 +0000 (GMT)
DKIM-Filter: OpenDKIM Filter v2.11.0 mailout1.w2.samsung.com 20230127170237usoutp015da475b7283befbc9a83301c92e90015~_OSiTnbQg1456614566usoutp01l
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=samsung.com;
        s=mail20170921; t=1674838957;
        bh=xo6NKWcssS3cWVTN3ib4J243PkzFucJeyUEbGHIt8wc=;
        h=From:To:CC:Subject:Date:In-Reply-To:References:From;
        b=lX9Js2b824u67rr+wya6L5qJDfOozLiGP8jF6QZZwPxxZSjh9sfCXtg15T3cB3X1S
         DksMgggnHquFTy5vVEYchCaYHAMHhlwEhjLp/F1syV6cl+z33lxBoFRC9zE5RwIrKn
         vG2OyoVPbuoLVj5I50TUJT3HfAvYz6EW+bq1dB7U=
Received: from ussmges2new.samsung.com (u111.gpu85.samsung.co.kr
        [203.254.195.111]) by uscas1p2.samsung.com (KnoxPortal) with ESMTP id
        20230127170237uscas1p2a23f4246445d6eaedb452b9620a7eab7~_OSiGC6Uy2640226402uscas1p2i;
        Fri, 27 Jan 2023 17:02:37 +0000 (GMT)
Received: from uscas1p1.samsung.com ( [182.198.245.206]) by
        ussmges2new.samsung.com (USCPEMTA) with SMTP id 4B.6B.49129.DA304D36; Fri,
        27 Jan 2023 12:02:37 -0500 (EST)
Received: from ussmgxs1new.samsung.com (u89.gpu85.samsung.co.kr
        [203.254.195.89]) by uscas1p1.samsung.com (KnoxPortal) with ESMTP id
        20230127170237uscas1p1fd9a04985d119f0db94c46d7018c1ef1~_OSh0Pqh81326713267uscas1p1O;
        Fri, 27 Jan 2023 17:02:37 +0000 (GMT)
X-AuditID: cbfec36f-167fe7000001bfe9-a9-63d403ad3991
Received: from SSI-EX1.ssi.samsung.com ( [105.128.2.146]) by
        ussmgxs1new.samsung.com (USCPEXMTA) with SMTP id F4.05.11378.DA304D36; Fri,
        27 Jan 2023 12:02:37 -0500 (EST)
Received: from SSI-EX2.ssi.samsung.com (105.128.2.227) by
        SSI-EX1.ssi.samsung.com (105.128.2.226) with Microsoft SMTP Server
        (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384) id
        15.1.2375.24; Fri, 27 Jan 2023 09:02:36 -0800
Received: from SSI-EX2.ssi.samsung.com ([105.128.2.227]) by
        SSI-EX2.ssi.samsung.com ([105.128.2.227]) with mapi id 15.01.2375.024; Fri,
        27 Jan 2023 09:02:36 -0800
From: Fan Ni <fan.ni@samsung.com>
To: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
CC: "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
        Michael Tsirkin <mst@redhat.com>,
        Ben Widawsky <bwidawsk@kernel.org>,
        "linux-cxl@vger.kernel.org" <linux-cxl@vger.kernel.org>,
        "linuxarm@huawei.com" <linuxarm@huawei.com>,
        Ira Weiny <ira.weiny@intel.com>,
        Dave Jiang <dave.jiang@intel.com>,
        "alison.schofield@intel.com" <alison.schofield@intel.com>
Subject: Re: [PATCH 2/2] hw/pxb-cxl: Support passthrough HDM Decoders unless
 overridden
Thread-Topic: [PATCH 2/2] hw/pxb-cxl: Support passthrough HDM Decoders
        unless overridden
Thread-Index: AQHZMNGiiun86hSl3USF52ioTTSPk66xxtgAgADKX4CAAHWLgA==
Date: Fri, 27 Jan 2023 17:02:36 +0000
Message-ID: <20230127170210.GA211474@bgt-140510-bm03>
In-Reply-To: <20230127100149.0000563e@Huawei.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [105.128.2.176]
Content-Type: text/plain; charset="us-ascii"
Content-ID: <C3AFFFC303202247A691699BE082781D@ssi.samsung.com>
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-CFilter-Loop: Reflected
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFtrOKsWRmVeSWpSXmKPExsWy7djXc7prma8kG+zrUba4+/gCm0Xz5MWM
        FiduNrJZ7H/6nMVi1cJrbBbnZ51isTi88QyTxf9fr1gtjvfuYHHg9Gg58pbVY/Gel0wem1Z1
        snk8ubaZyeP9vqtsHp83yQWwRXHZpKTmZJalFunbJXBlbLjezFYwRbTi7vovbA2MtwW6GDk5
        JARMJHo+zmMFsYUEVjJKtP127WLkArJbmSROXVrKClN0dfVHNoiitYwSf+6bQhR9YpSYfqUR
        qnsZo8TeFkcQm01AUWJf13awBhEBI4kryw6ygzQwC7xgkvh79TFzFyMHh7BApMS5XguImiiJ
        H+/msEPYThJf228xgtgsAqoSC2YdA5vDK2AqseBWMyNIK6eAocStayogYUYBMYnvp9YwgdjM
        AuISt57MZ4K4WVBi0ew9zBC2mMS/XQ/ZIGxFifvfX7JD1OtILNj9iQ3CtpM43LQXao62xLKF
        r5kh1gpKnJz5hAWiV1Li4IobLCCvSAh84JDYPW0f1AIXiXff+qGBJS1x9fpUsBclBJIlVn3k
        ggjnSMxfsgVqjrXEwj/rmSYwqsxCcvYsJCfNQnLSLCQnzUJy0gJG1lWM4qXFxbnpqcVGeanl
        esWJucWleel6yfm5mxiBaev0v8P5Oxiv3/qod4iRiYPxEKMEB7OSCO9Wx0vJQrwpiZVVqUX5
        8UWlOanFhxilOViUxHkNbU8mCwmkJ5akZqemFqQWwWSZODilGpi466OT+KZ8/PRfS2lye9X/
        k8XsL+Z9LTxxIuay9GWuPe5xVrzq6yUClDpCFmxNzOE80R/1d0ryabvchXf5Hz9Osm7y9X8V
        8zB73dm9RmHbp0ZIHpzydtdpt6768sx9B5QO7PEyMZm0ZMIiq1vO+ukpsfdaU5dNnJiRvWpR
        PC/XFl2XgJws3YKSo6cKDPW39vh9X7aybOK2xLz66Uo37roeavwgl6P/p8lc+sGH6cVHF6Vs
        naH9c4PohIau9qe5a3tP793hlpj7TffppyWBVi3O+wRqm6+8nf9owTzFsKkJhqH2T+31T/5l
        nHXkxP31kyvF/VZrezCylezcddrruoSXE/dU6d665/fmVBx66pOnxFKckWioxVxUnAgAfOZC
        ZMoDAAA=
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFrrBIsWRmVeSWpSXmKPExsWS2cA0SXct85VkgznzeC3uPr7AZtE8eTGj
        xYmbjWwW+58+Z7FYtfAam8X5WadYLA5vPMNk8f/XK1aL4707WBw4PVqOvGX1WLznJZPHplWd
        bB5Prm1m8ni/7yqbx+dNcgFsUVw2Kak5mWWpRfp2CVwZG643sxVMEa24u/4LWwPjbYEuRk4O
        CQETiaurP7KB2EICqxklFn/P7WLkArI/MUp0v93MDuEsY5R4M+sWM0gVm4CixL6u7WAdIgJG
        EleWHQQrYhZ4wSTxdGoXUIKDQ1ggUuJcrwVETZTEr4bdLBC2k8TX9luMIDaLgKrEglnHwObw
        CphKLLjVzAixbA6TxOqrU1lB5nAKGErcuqYCUsMoICbx/dQaJhCbWUBc4taT+UwQHwhILNlz
        nhnCFpV4+fgfK4StKHH/+0t2iHodiQW7P7FB2HYSh5v2Qs3Rlli28DUzxA2CEidnPmGB6JWU
        OLjiBssERolZSNbNQjJqFpJRs5CMmoVk1AJG1lWM4qXFxbnpFcWGeanlesWJucWleel6yfm5
        mxiBkX/63+HIHYxHb33UO8TIxMF4iFGCg1lJhHer46VkId6UxMqq1KL8+KLSnNTiQ4zSHCxK
        4rxCrhPjhQTSE0tSs1NTC1KLYLJMHJxSDUxuJ1Pk3pT7CvQ6cTq+uyRwMuupZmXzXI1lNlWX
        5ry8uefN5WCRq2HtaSl2C/mCDvPovvvn8l7b65m8Rnjpj8f3I3a9nsFyImYai8ybn34f/3pf
        ObKYpzpP/1qSndLUh6ZCd2UfhrYemL5v2s7Tm8z3KRV4plT+Dpz66eaSxat+GjjeuZiuHn5g
        wz+hxlhB6baLtX3PW1doz566r8H6nt2mJU8VVn0sV//Jsbp2Q7h49kfJjk3GV4/fc/WL52VS
        eutssG3FGXHX11+VF/J/ZUmu51zpHW5pHLhfYWtZMOs0fr3Vjmu3evt/SnWVbvvQrGp/dOad
        cys//eVavjrD557U9NT1Zad0Tr/T+/5avGW7EktxRqKhFnNRcSIACG9S5WsDAAA=
X-CMS-MailID: 20230127170237uscas1p1fd9a04985d119f0db94c46d7018c1ef1
CMS-TYPE: 301P
X-CMS-RootMailID: 20230126215736uscas1p2166334bf8185239cf6ac70053dc386c5
References: <20230125152703.9928-1-Jonathan.Cameron@huawei.com>
        <20230125152703.9928-3-Jonathan.Cameron@huawei.com>
        <CGME20230126215736uscas1p2166334bf8185239cf6ac70053dc386c5@uscas1p2.samsung.com>
        <20230126215727.GA203951@bgt-140510-bm03>
        <20230127100149.0000563e@Huawei.com>
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Fri, Jan 27, 2023 at 10:01:49AM +0000, Jonathan Cameron wrote:

> On Thu, 26 Jan 2023 21:57:35 +0000
> Fan Ni <fan.ni@samsung.com> wrote:
>=20
> > On Wed, Jan 25, 2023 at 03:27:03PM +0000, Jonathan Cameron wrote:
> >=20
> > > The CXL r3.0 specification allows for there to be no HDM decoders on =
CXL
> > > Host Bridges if they have only a single root port. Instead, all acces=
ses
> > > directed to the host bridge (as specified in CXL Fixed Memory Windows=
)
> > > are assumed to be routed to the single root port.
> > >=20
> > > Linux currently assumes this implementation choice. So to simplify te=
sting,
> > > make QEMU emulation also default to no HDM decoders under these parti=
cular
> > > circumstances, but provide a hdm_for_passthrough boolean option to ha=
ve
> > > HDM decoders as previously.
> > >=20
> > > Technically this is breaking backwards compatibility, but given the o=
nly
> > > known software stack used with the QEMU emulation is the Linux kernel
> > > and this configuration did not work before this change, there are
> > > unlikely to be any complaints that it now works. The option is retain=
ed
> > > to allow testing of software that does allow for these HDM decoders t=
o exist,
> > > once someone writes it.
> > >=20
> > > Reported-by: Fan Ni <fan.ni@samsung.com>
> > > Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
>=20
> > >      pxb_dev_realize_common(dev, CXL, errp);
> > > -    pxb_dev_reset(DEVICE(dev));
> > > +    pxb_cxl_dev_reset(DEVICE(dev));
> > >  }
> > > =20
> > > +static Property pxb_cxl_dev_properties[] =3D {
> > > +    /* Note: 0 is not a legal PXB bus number. */
> > > +    DEFINE_PROP_UINT8("bus_nr", PXBDev, bus_nr, 0),
> > > +    DEFINE_PROP_UINT16("numa_node", PXBDev, numa_node, NUMA_NODE_UNA=
SSIGNED),
> > > +    DEFINE_PROP_BOOL("bypass_iommu", PXBDev, bypass_iommu, false),
> > > +    DEFINE_PROP_BOOL("hdm_for_passthrough", PXBDev, hdm_for_passthro=
ugh, false), =20
> > when setting hdm_for_passthrough to true at the qemu command line, we
> > will see the segfault issue as before. I think this is expected as it
> > is the logic in cxl_cfmws_find_device. Wondering if there will be
> > following fixes to handle the case when hdm_for_passthrough is true.
>=20
> Absolutely, I'd expect a kernel fix for that case, but it's probably not
> high priority for anyone given we don't yet have any hardware that does t=
hat
> (as far as I know anyway!)
>=20
> I wanted to keep the control here to make that easy to test when we do
> have the fix in place.
>=20
> Jonathan
Make sense!

Reviwed-by: Fan Ni <fan.ni@samsung.com>
Tested-by: Fan Ni <fan.ni@samsung.com>

From mboxrd@z Thu Jan  1 00:00:00 1970
Return-Path: <linux-cxl-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on
	aws-us-west-2-korg-lkml-1.web.codeaurora.org
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by smtp.lore.kernel.org (Postfix) with ESMTP id CEFE5C54EAA
	for <linux-cxl@archiver.kernel.org>; Fri, 27 Jan 2023 17:15:59 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S235106AbjA0RP7 (ORCPT <rfc822;linux-cxl@archiver.kernel.org>);
        Fri, 27 Jan 2023 12:15:59 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:46426 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S234710AbjA0RP6 (ORCPT
        <rfc822;linux-cxl@vger.kernel.org>); Fri, 27 Jan 2023 12:15:58 -0500
Received: from frasgout.his.huawei.com (frasgout.his.huawei.com [185.176.79.56])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id BBAA721A07
        for <linux-cxl@vger.kernel.org>; Fri, 27 Jan 2023 09:15:56 -0800 (PST)
Received: from lhrpeml500005.china.huawei.com (unknown [172.18.147.207])
        by frasgout.his.huawei.com (SkyGuard) with ESMTP id 4P3PMr3tQnz686w8;
        Sat, 28 Jan 2023 01:15:04 +0800 (CST)
Received: from localhost (10.202.227.76) by lhrpeml500005.china.huawei.com
 (7.191.163.240) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2375.34; Fri, 27 Jan
 2023 17:15:53 +0000
Date: Fri, 27 Jan 2023 17:15:53 +0000
From: Jonathan Cameron <Jonathan.Cameron@Huawei.com>
To: Fan Ni <fan.ni@samsung.com>
CC: "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
        Michael Tsirkin <mst@redhat.com>,
        Ben Widawsky <bwidawsk@kernel.org>,
        "linux-cxl@vger.kernel.org" <linux-cxl@vger.kernel.org>,
        "linuxarm@huawei.com" <linuxarm@huawei.com>,
        Ira Weiny <ira.weiny@intel.com>,
        Dave Jiang <dave.jiang@intel.com>,
        "alison.schofield@intel.com" <alison.schofield@intel.com>
Subject: Re: [PATCH 2/2] hw/pxb-cxl: Support passthrough HDM Decoders unless
 overridden
Message-ID: <20230127171553.00001bfb@Huawei.com>
In-Reply-To: <20230127170210.GA211474@bgt-140510-bm03>
References: <20230125152703.9928-1-Jonathan.Cameron@huawei.com>
        <20230125152703.9928-3-Jonathan.Cameron@huawei.com>
        <CGME20230126215736uscas1p2166334bf8185239cf6ac70053dc386c5@uscas1p2.samsung.com>
        <20230126215727.GA203951@bgt-140510-bm03>
        <20230127100149.0000563e@Huawei.com>
        <20230127170210.GA211474@bgt-140510-bm03>
Organization: Huawei Technologies Research and Development (UK) Ltd.
X-Mailer: Claws Mail 4.1.0 (GTK 3.24.33; x86_64-w64-mingw32)
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.202.227.76]
X-ClientProxiedBy: lhrpeml500004.china.huawei.com (7.191.163.9) To
 lhrpeml500005.china.huawei.com (7.191.163.240)
X-CFilter-Loop: Reflected
Precedence: bulk
List-ID: <linux-cxl.vger.kernel.org>
X-Mailing-List: linux-cxl@vger.kernel.org

On Fri, 27 Jan 2023 17:02:36 +0000
Fan Ni <fan.ni@samsung.com> wrote:

> On Fri, Jan 27, 2023 at 10:01:49AM +0000, Jonathan Cameron wrote:
> 
> > On Thu, 26 Jan 2023 21:57:35 +0000
> > Fan Ni <fan.ni@samsung.com> wrote:
> >   
> > > On Wed, Jan 25, 2023 at 03:27:03PM +0000, Jonathan Cameron wrote:
> > >   
> > > > The CXL r3.0 specification allows for there to be no HDM decoders on CXL
> > > > Host Bridges if they have only a single root port. Instead, all accesses
> > > > directed to the host bridge (as specified in CXL Fixed Memory Windows)
> > > > are assumed to be routed to the single root port.
> > > > 
> > > > Linux currently assumes this implementation choice. So to simplify testing,
> > > > make QEMU emulation also default to no HDM decoders under these particular
> > > > circumstances, but provide a hdm_for_passthrough boolean option to have
> > > > HDM decoders as previously.
> > > > 
> > > > Technically this is breaking backwards compatibility, but given the only
> > > > known software stack used with the QEMU emulation is the Linux kernel
> > > > and this configuration did not work before this change, there are
> > > > unlikely to be any complaints that it now works. The option is retained
> > > > to allow testing of software that does allow for these HDM decoders to exist,
> > > > once someone writes it.
> > > > 
> > > > Reported-by: Fan Ni <fan.ni@samsung.com>
> > > > Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>  
> >   
> > > >      pxb_dev_realize_common(dev, CXL, errp);
> > > > -    pxb_dev_reset(DEVICE(dev));
> > > > +    pxb_cxl_dev_reset(DEVICE(dev));
> > > >  }
> > > >  
> > > > +static Property pxb_cxl_dev_properties[] = {
> > > > +    /* Note: 0 is not a legal PXB bus number. */
> > > > +    DEFINE_PROP_UINT8("bus_nr", PXBDev, bus_nr, 0),
> > > > +    DEFINE_PROP_UINT16("numa_node", PXBDev, numa_node, NUMA_NODE_UNASSIGNED),
> > > > +    DEFINE_PROP_BOOL("bypass_iommu", PXBDev, bypass_iommu, false),
> > > > +    DEFINE_PROP_BOOL("hdm_for_passthrough", PXBDev, hdm_for_passthrough, false),    
> > > when setting hdm_for_passthrough to true at the qemu command line, we
> > > will see the segfault issue as before. I think this is expected as it
> > > is the logic in cxl_cfmws_find_device. Wondering if there will be
> > > following fixes to handle the case when hdm_for_passthrough is true.  
> > 
> > Absolutely, I'd expect a kernel fix for that case, but it's probably not
> > high priority for anyone given we don't yet have any hardware that does that
> > (as far as I know anyway!)
> > 
> > I wanted to keep the control here to make that easy to test when we do
> > have the fix in place.
> > Jonathan  
> Make sense!
> 
> Reviwed-by: Fan Ni <fan.ni@samsung.com>
> Tested-by: Fan Ni <fan.ni@samsung.com>

Thanks!

Typo in Reviewed-by If this version gets picked up hopefully Michael can
fix whilst applying. If I do a v2 for other feedback I'll fix it.

Jonathan

